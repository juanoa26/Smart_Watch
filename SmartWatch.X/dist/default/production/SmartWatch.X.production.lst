

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 07 10:11:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    87                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    88  0000                     
    89                           ; Version 2.20
    90                           ; Generated 12/02/2020 GMT
    91                           ; 
    92                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18F4550 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124                           	psect	idataBANK1
   125  0048F6                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _FreqNota
   129  0048F6  3BB9               	dw	15289
   130  0048F8  385E               	dw	14430
   131  0048FA  3534               	dw	13620
   132  0048FC  3238               	dw	12856
   133  0048FE  2F66               	dw	12134
   134  004900  2CBD               	dw	11453
   135  004902  2A3A               	dw	10810
   136  004904  27DC               	dw	10204
   137  004906  259F               	dw	9631
   138  004908  2382               	dw	9090
   139  00490A  2184               	dw	8580
   140  00490C  1FA3               	dw	8099
   141                           
   142                           ;initializer for RTC_Calendario@F3580
   143  00490E  53                 	db	83
   144  00490F  4D                 	db	77
   145  004910  54                 	db	84
   146  004911  57                 	db	87
   147  004912  74                 	db	116
   148  004913  46                 	db	70
   149  004914  73                 	db	115
   150                           
   151                           ;initializer for _character3
   152  004915  00                 	db	0
   153  004916  08                 	db	8
   154  004917  16                 	db	22
   155  004918  1F                 	db	31
   156  004919  1F                 	db	31
   157  00491A  16                 	db	22
   158  00491B  08                 	db	8
   159  00491C  00                 	db	0
   160                           
   161                           ;initializer for _character2
   162  00491D  15                 	db	21
   163  00491E  0E                 	db	14
   164  00491F  11                 	db	17
   165  004920  11                 	db	17
   166  004921  0E                 	db	14
   167  004922  15                 	db	21
   168  004923  00                 	db	0
   169  004924  00                 	db	0
   170                           
   171                           ;initializer for _character1
   172  004925  0E                 	db	14
   173  004926  1F                 	db	31
   174  004927  1F                 	db	31
   175  004928  0E                 	db	14
   176  004929  00                 	db	0
   177  00492A  0A                 	db	10
   178  00492B  0A                 	db	10
   179  00492C  00                 	db	0
   180  0000                     _RCREG	set	4014
   181  0000                     _TXREG	set	4013
   182  0000                     _RCSTA	set	4011
   183  0000                     _TXSTA	set	4012
   184  0000                     _SPBRG	set	4015
   185  0000                     _SSPCON2bits	set	4037
   186  0000                     _SSPADD	set	4040
   187  0000                     _SSPCON2	set	4037
   188  0000                     _SSPCON1	set	4038
   189  0000                     _SSPSTAT	set	4039
   190  0000                     _SSPBUF	set	4041
   191  0000                     _SSPSTATbits	set	4039
   192  0000                     _LATCbits	set	3979
   193  0000                     _TRISCbits	set	3988
   194  0000                     _ADRESL	set	4035
   195  0000                     _ADRESH	set	4036
   196  0000                     _ADCON2bits	set	4032
   197  0000                     _ADCON0bits	set	4034
   198  0000                     _ADCON1bits	set	4033
   199  0000                     _OSCCONbits	set	4051
   200  0000                     _TRISA	set	3986
   201  0000                     _LATD	set	3980
   202  0000                     _TRISD	set	3989
   203  0000                     _TRISE	set	3990
   204  0000                     _OSCCON	set	4051
   205  0000                     _RCIF	set	31989
   206  0000                     _TXIF	set	31988
   207  0000                     _TRISC7	set	31911
   208  0000                     _TRISC6	set	31910
   209  0000                     _LATE2	set	31850
   210  0000                     _LATE1	set	31849
   211  0000                     _LATE0	set	31848
   212  0000                     _ACKEN	set	32300
   213  0000                     _ACKDT	set	32301
   214  0000                     _PEN	set	32298
   215  0000                     _RSEN	set	32297
   216  0000                     _ACKSTAT	set	32302
   217  0000                     _SSPIF	set	31987
   218  0000                     _SSPIE	set	31979
   219  0000                     _TRISB1	set	31897
   220  0000                     _TRISB0	set	31896
   221  0000                     _RCEN	set	32299
   222  0000                     _LATD1	set	31841
   223  0000                     _LATD0	set	31840
   224                           
   225                           	psect	smallconst
   226  000800                     __psmallconst:
   227                           	callstack 0
   228  000800  00                 	db	0
   229  000801                     STR_22:
   230  000801  42                 	db	66	;'B'
   231  000802  75                 	db	117	;'u'
   232  000803  65                 	db	101	;'e'
   233  000804  6E                 	db	110	;'n'
   234  000805  6F                 	db	111	;'o'
   235  000806  73                 	db	115	;'s'
   236  000807  20                 	db	32
   237  000808  44                 	db	68	;'D'
   238  000809  69                 	db	105	;'i'
   239  00080A  61                 	db	97	;'a'
   240  00080B  73                 	db	115	;'s'
   241  00080C  00                 	db	0
   242  00080D                     STR_19:
   243  00080D  25                 	db	37
   244  00080E  30                 	db	48	;'0'
   245  00080F  2E                 	db	46
   246  000810  30                 	db	48	;'0'
   247  000811  66                 	db	102	;'f'
   248  000812  43                 	db	67	;'C'
   249  000813  00                 	db	0
   250  000814                     STR_23:
   251  000814  49                 	db	73	;'I'
   252  000815  4E                 	db	78	;'N'
   253  000816  46                 	db	70	;'F'
   254  000817  00                 	db	0
   255  000818                     STR_27:
   256  000818  4E                 	db	78	;'N'
   257  000819  41                 	db	65	;'A'
   258  00081A  4E                 	db	78	;'N'
   259  00081B  00                 	db	0
   260  00081C                     STR_24:
   261  00081C  69                 	db	105	;'i'
   262  00081D  6E                 	db	110	;'n'
   263  00081E  66                 	db	102	;'f'
   264  00081F  00                 	db	0
   265  000820                     STR_28:
   266  000820  6E                 	db	110	;'n'
   267  000821  61                 	db	97	;'a'
   268  000822  6E                 	db	110	;'n'
   269  000823  00                 	db	0
   270  000824                     STR_3:
   271  000824  25                 	db	37
   272  000825  78                 	db	120	;'x'
   273  000826  20                 	db	32
   274  000827  00                 	db	0
   275  000828                     STR_9:
   276  000828  25                 	db	37
   277  000829  78                 	db	120	;'x'
   278  00082A  2D                 	db	45
   279  00082B  00                 	db	0
   280  00082C                     STR_4:
   281  00082C  25                 	db	37
   282  00082D  78                 	db	120	;'x'
   283  00082E  3A                 	db	58	;':'
   284  00082F  00                 	db	0
   285  000830                     STR_15:
   286  000830  57                 	db	87	;'W'
   287  000831  65                 	db	101	;'e'
   288  000832  64                 	db	100	;'d'
   289  000833  00                 	db	0
   290  000834                     STR_14:
   291  000834  54                 	db	84	;'T'
   292  000835  75                 	db	117	;'u'
   293  000836  65                 	db	101	;'e'
   294  000837  00                 	db	0
   295  000838                     STR_17:
   296  000838  46                 	db	70	;'F'
   297  000839  72                 	db	114	;'r'
   298  00083A  69                 	db	105	;'i'
   299  00083B  00                 	db	0
   300  00083C                     STR_13:
   301  00083C  4D                 	db	77	;'M'
   302  00083D  6F                 	db	111	;'o'
   303  00083E  6E                 	db	110	;'n'
   304  00083F  00                 	db	0
   305  000840                     STR_12:
   306  000840  53                 	db	83	;'S'
   307  000841  75                 	db	117	;'u'
   308  000842  6E                 	db	110	;'n'
   309  000843  00                 	db	0
   310  000844                     STR_18:
   311  000844  53                 	db	83	;'S'
   312  000845  61                 	db	97	;'a'
   313  000846  74                 	db	116	;'t'
   314  000847  00                 	db	0
   315  000848                     STR_16:
   316  000848  54                 	db	84	;'T'
   317  000849  68                 	db	104	;'h'
   318  00084A  75                 	db	117	;'u'
   319  00084B  00                 	db	0
   320  00084C                     STR_31:
   321  00084C  6C                 	db	108	;'l'
   322  00084D  66                 	db	102	;'f'
   323  00084E  00                 	db	0
   324  00084F                     STR_2:
   325  00084F  41                 	db	65	;'A'
   326  000850  4D                 	db	77	;'M'
   327  000851  00                 	db	0
   328  000852                     STR_1:
   329  000852  50                 	db	80	;'P'
   330  000853  4D                 	db	77	;'M'
   331  000854  00                 	db	0
   332  000855  00                 	db	0	; dummy byte at the end
   333  0000                     
   334                           ; #config settings
   335                           
   336                           	psect	cinit
   337  004516                     __pcinit:
   338                           	callstack 0
   339  004516                     start_initialization:
   340                           	callstack 0
   341  004516                     __initialization:
   342                           	callstack 0
   343                           
   344                           ; Initialize objects allocated to BANK1 (55 bytes)
   345                           ; load TBLPTR registers with __pidataBANK1
   346  004516  0EF6               	movlw	low __pidataBANK1
   347  004518  6EF6               	movwf	tblptrl,c
   348  00451A  0E48               	movlw	high __pidataBANK1
   349  00451C  6EF7               	movwf	tblptrh,c
   350  00451E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   351  004520  6EF8               	movwf	tblptru,c
   352  004522  EE01  F0B6         	lfsr	0,__pdataBANK1
   353  004526  EE10 F037          	lfsr	1,55
   354  00452A                     copy_data0:
   355  00452A  0009               	tblrd		*+
   356  00452C  CFF5 FFEE          	movff	tablat,postinc0
   357  004530  50E5               	movf	postdec1,w,c
   358  004532  50E1               	movf	fsr1l,w,c
   359  004534  E1FA               	bnz	copy_data0
   360                           
   361                           ; Clear objects allocated to BANK2 (20 bytes)
   362  004536  EE02  F000         	lfsr	0,__pbssBANK2
   363  00453A  0E14               	movlw	20
   364  00453C                     clear_0:
   365  00453C  6AEE               	clrf	postinc0,c
   366  00453E  06E8               	decf	wreg,f,c
   367  004540  E1FD               	bnz	clear_0
   368                           
   369                           ; Clear objects allocated to BANK1 (114 bytes)
   370  004542  EE01  F000         	lfsr	0,__pbssBANK1
   371  004546  0E72               	movlw	114
   372  004548                     clear_1:
   373  004548  6AEE               	clrf	postinc0,c
   374  00454A  06E8               	decf	wreg,f,c
   375  00454C  E1FD               	bnz	clear_1
   376                           
   377                           ; Clear objects allocated to BANK0 (27 bytes)
   378  00454E  EE00  F0E2         	lfsr	0,__pbssBANK0
   379  004552  0E1B               	movlw	27
   380  004554                     clear_2:
   381  004554  6AEE               	clrf	postinc0,c
   382  004556  06E8               	decf	wreg,f,c
   383  004558  E1FD               	bnz	clear_2
   384                           
   385                           ; Clear objects allocated to COMRAM (1 bytes)
   386  00455A  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   387  00455C                     end_of_initialization:
   388                           	callstack 0
   389  00455C                     __end_of__initialization:
   390                           	callstack 0
   391  00455C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   392  00455E  6EF8               	movwf	tblptru,c
   393  004560  0100               	movlb	0
   394  004562  EF15  F01F         	goto	_main	;jump to C main() function
   395                           
   396                           	psect	bssCOMRAM
   397  00005F                     __pbssCOMRAM:
   398                           	callstack 0
   399  00005F                     _i:
   400                           	callstack 0
   401  00005F                     	ds	1
   402                           
   403                           	psect	bssBANK0
   404  0000E2                     __pbssBANK0:
   405                           	callstack 0
   406  0000E2                     floorf@F527:
   407                           	callstack 0
   408  0000E2                     	ds	4
   409  0000E6                     ___fpclassifyf@F465:
   410                           	callstack 0
   411  0000E6                     	ds	4
   412  0000EA                     _luz:
   413                           	callstack 0
   414  0000EA                     	ds	4
   415  0000EE                     _tempar:
   416                           	callstack 0
   417  0000EE                     	ds	4
   418  0000F2                     _nout:
   419                           	callstack 0
   420  0000F2                     	ds	2
   421  0000F4                     _width:
   422                           	callstack 0
   423  0000F4                     	ds	2
   424  0000F6                     _prec:
   425                           	callstack 0
   426  0000F6                     	ds	2
   427  0000F8                     _flags:
   428                           	callstack 0
   429  0000F8                     	ds	2
   430  0000FA                     _result:
   431                           	callstack 0
   432  0000FA                     	ds	2
   433  0000FC                     _data_in:
   434                           	callstack 0
   435  0000FC                     	ds	1
   436                           
   437                           	psect	bssBANK1
   438  000100                     __pbssBANK1:
   439                           	callstack 0
   440  000100                     _Year:
   441                           	callstack 0
   442  000100                     	ds	2
   443  000102                     _Month:
   444                           	callstack 0
   445  000102                     	ds	2
   446  000104                     _Date:
   447                           	callstack 0
   448  000104                     	ds	2
   449  000106                     _Day:
   450                           	callstack 0
   451  000106                     	ds	2
   452  000108                     _hour:
   453                           	callstack 0
   454  000108                     	ds	2
   455  00010A                     _min:
   456                           	callstack 0
   457  00010A                     	ds	2
   458  00010C                     _sec:
   459                           	callstack 0
   460  00010C                     	ds	2
   461  00010E                     _dbuf:
   462                           	callstack 0
   463  00010E                     	ds	80
   464  00015E                     _Stemp:
   465                           	callstack 0
   466  00015E                     	ds	20
   467                           
   468                           	psect	dataBANK1
   469  0001B6                     __pdataBANK1:
   470                           	callstack 0
   471  0001B6                     _FreqNota:
   472                           	callstack 0
   473  0001B6                     	ds	24
   474  0001CE                     RTC_Calendario@F3580:
   475                           	callstack 0
   476  0001CE                     	ds	7
   477  0001D5                     _character3:
   478                           	callstack 0
   479  0001D5                     	ds	8
   480  0001DD                     _character2:
   481                           	callstack 0
   482  0001DD                     	ds	8
   483  0001E5                     _character1:
   484                           	callstack 0
   485  0001E5                     	ds	8
   486                           
   487                           	psect	bssBANK2
   488  000200                     __pbssBANK2:
   489                           	callstack 0
   490  000200                     _Sluz:
   491                           	callstack 0
   492  000200                     	ds	20
   493                           
   494                           	psect	cstackBANK1
   495  000172                     __pcstackBANK1:
   496                           	callstack 0
   497  000172                     RTC_Calendario@days:
   498                           	callstack 0
   499                           
   500                           ; 7 bytes @ 0x0
   501  000172                     	ds	7
   502  000179                     RTC_Calendario@date:
   503                           	callstack 0
   504                           
   505                           ; 10 bytes @ 0x7
   506  000179                     	ds	10
   507  000183                     RTC_Calendario@month:
   508                           	callstack 0
   509                           
   510                           ; 10 bytes @ 0x11
   511  000183                     	ds	10
   512  00018D                     RTC_Calendario@year:
   513                           	callstack 0
   514                           
   515                           ; 10 bytes @ 0x1B
   516  00018D                     	ds	10
   517  000197                     RTC_Calendario@secs:
   518                           	callstack 0
   519                           
   520                           ; 10 bytes @ 0x25
   521  000197                     	ds	10
   522  0001A1                     RTC_Calendario@mins:
   523                           	callstack 0
   524                           
   525                           ; 10 bytes @ 0x2F
   526  0001A1                     	ds	10
   527  0001AB                     RTC_Calendario@hours:
   528                           	callstack 0
   529                           
   530                           ; 10 bytes @ 0x39
   531  0001AB                     	ds	10
   532  0001B5                     RTC_Calendario@AM_PM:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x43
   536  0001B5                     	ds	1
   537                           
   538                           	psect	cstackBANK0
   539  000060                     __pcstackBANK0:
   540                           	callstack 0
   541  000060                     ?_ReadADC:
   542                           	callstack 0
   543  000060                     ?_efgtoa:
   544                           	callstack 0
   545  000060                     efgtoa@fp:
   546                           	callstack 0
   547  000060                     USART_Init@baud_rate:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x0
   551  000060                     	ds	2
   552  000062                     ??_ReadADC:
   553  000062                     efgtoa@f:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x2
   557  000062                     	ds	2
   558  000064                     ReadADC@result:
   559                           	callstack 0
   560  000064                     USART_Init@temp:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x4
   564  000064                     	ds	2
   565  000066                     ?_Estados:
   566                           	callstack 0
   567  000066                     efgtoa@c:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x6
   571  000066                     	ds	1
   572  000067                     ??_efgtoa:
   573                           
   574                           ; 1 bytes @ 0x7
   575  000067                     	ds	1
   576  000068                     _Estados$1937:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x8
   580  000068                     	ds	4
   581  00006C                     _efgtoa$1501:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0xC
   585  00006C                     	ds	2
   586  00006E                     _efgtoa$1502:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xE
   590  00006E                     	ds	2
   591  000070                     _efgtoa$1507:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x10
   595  000070                     	ds	2
   596  000072                     _efgtoa$1511:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x12
   600  000072                     	ds	2
   601  000074                     _efgtoa$1512:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x14
   605  000074                     	ds	2
   606  000076                     _efgtoa$1513:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x16
   610  000076                     	ds	2
   611  000078                     efgtoa@t:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x18
   615  000078                     	ds	2
   616  00007A                     efgtoa@pp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x1A
   620  00007A                     	ds	2
   621  00007C                     efgtoa@ne:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x1C
   625  00007C                     	ds	2
   626  00007E                     efgtoa@m:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x1E
   630  00007E                     	ds	2
   631  000080                     efgtoa@ou:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x20
   635  000080                     	ds	4
   636  000084                     efgtoa@d:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x24
   640  000084                     	ds	2
   641  000086                     efgtoa@sign:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x26
   645  000086                     	ds	2
   646  000088                     efgtoa@p:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x28
   650  000088                     	ds	2
   651  00008A                     efgtoa@w:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x2A
   655  00008A                     	ds	2
   656  00008C                     efgtoa@nmode:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x2C
   660  00008C                     	ds	1
   661  00008D                     efgtoa@mode:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x2D
   665  00008D                     	ds	1
   666  00008E                     efgtoa@h:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x2E
   670  00008E                     	ds	4
   671  000092                     efgtoa@l:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x32
   675  000092                     	ds	4
   676  000096                     efgtoa@i:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x36
   680  000096                     	ds	2
   681  000098                     efgtoa@g:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x38
   685  000098                     	ds	4
   686  00009C                     efgtoa@e:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x3C
   690  00009C                     	ds	2
   691  00009E                     efgtoa@n:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x3E
   695  00009E                     	ds	2
   696  0000A0                     efgtoa@u:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x40
   700  0000A0                     	ds	4
   701  0000A4                     ?_vfpfcnvrt:
   702                           	callstack 0
   703  0000A4                     vfpfcnvrt@fp:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x44
   707  0000A4                     	ds	2
   708  0000A6                     vfpfcnvrt@fmt:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x46
   712  0000A6                     	ds	2
   713  0000A8                     vfpfcnvrt@ap:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x48
   717  0000A8                     	ds	2
   718  0000AA                     ??_vfpfcnvrt:
   719                           
   720                           ; 1 bytes @ 0x4A
   721  0000AA                     	ds	4
   722  0000AE                     vfpfcnvrt@llu:
   723                           	callstack 0
   724                           
   725                           ; 8 bytes @ 0x4E
   726  0000AE                     	ds	8
   727  0000B6                     vfpfcnvrt@done:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x56
   731  0000B6                     	ds	2
   732  0000B8                     _vfpfcnvrt$1538:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x58
   736  0000B8                     	ds	2
   737  0000BA                     _vfpfcnvrt$1542:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x5A
   741  0000BA                     	ds	2
   742  0000BC                     vfpfcnvrt@f:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x5C
   746  0000BC                     	ds	4
   747  0000C0                     vfpfcnvrt@ct:
   748                           	callstack 0
   749                           
   750                           ; 3 bytes @ 0x60
   751  0000C0                     	ds	3
   752  0000C3                     vfpfcnvrt@c:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x63
   756  0000C3                     	ds	1
   757  0000C4                     ?_vfprintf:
   758                           	callstack 0
   759  0000C4                     vfprintf@fp:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x64
   763  0000C4                     	ds	2
   764  0000C6                     vfprintf@fmt:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x66
   768  0000C6                     	ds	2
   769  0000C8                     vfprintf@ap:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x68
   773  0000C8                     	ds	2
   774  0000CA                     vfprintf@cfmt:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x6A
   778  0000CA                     	ds	2
   779  0000CC                     ?_sprintf:
   780                           	callstack 0
   781  0000CC                     sprintf@s:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x6C
   785  0000CC                     	ds	2
   786  0000CE                     sprintf@fmt:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x6E
   790  0000CE                     	ds	6
   791  0000D4                     sprintf@ap:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x74
   795  0000D4                     	ds	2
   796  0000D6                     sprintf@f:
   797                           	callstack 0
   798                           
   799                           ; 6 bytes @ 0x76
   800  0000D6                     	ds	6
   801  0000DC                     ??_RTC_Calendario:
   802                           
   803                           ; 1 bytes @ 0x7C
   804  0000DC                     	ds	2
   805  0000DE                     ??_main:
   806                           
   807                           ; 1 bytes @ 0x7E
   808  0000DE                     	ds	2
   809  0000E0                     main@caso:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x80
   813  0000E0                     	ds	2
   814                           
   815                           	psect	cstackCOMRAM
   816  000001                     __pcstackCOMRAM:
   817                           	callstack 0
   818  000001                     ?_strlen:
   819                           	callstack 0
   820  000001                     ?___fpclassifyf:
   821                           	callstack 0
   822  000001                     ?_isupper:
   823                           	callstack 0
   824  000001                     ?_isalpha:
   825                           	callstack 0
   826  000001                     ?_isdigit:
   827                           	callstack 0
   828  000001                     ?_strncmp:
   829                           	callstack 0
   830  000001                     ?_isspace:
   831                           	callstack 0
   832  000001                     ?_islower:
   833                           	callstack 0
   834  000001                     ?_ReadLUZ:
   835                           	callstack 0
   836  000001                     ?___wmul:
   837                           	callstack 0
   838  000001                     ?___awdiv:
   839                           	callstack 0
   840  000001                     ?___awmod:
   841                           	callstack 0
   842  000001                     ?___flneg:
   843                           	callstack 0
   844  000001                     I2C_Read@flag:
   845                           	callstack 0
   846  000001                     I2C_Write@data:
   847                           	callstack 0
   848  000001                     USART_TransmitChar@out:
   849                           	callstack 0
   850  000001                     LCD_MSdelay@val:
   851                           	callstack 0
   852  000001                     delay_us@nota:
   853                           	callstack 0
   854  000001                     ___wmul@multiplier:
   855                           	callstack 0
   856  000001                     ___awdiv@dividend:
   857                           	callstack 0
   858  000001                     ___awmod@dividend:
   859                           	callstack 0
   860  000001                     isalpha@c:
   861                           	callstack 0
   862  000001                     isdigit@c:
   863                           	callstack 0
   864  000001                     isspace@c:
   865                           	callstack 0
   866  000001                     isupper@c:
   867                           	callstack 0
   868  000001                     fputc@c:
   869                           	callstack 0
   870  000001                     strcpy@dest:
   871                           	callstack 0
   872  000001                     strlen@s:
   873                           	callstack 0
   874  000001                     strncmp@_l:
   875                           	callstack 0
   876  000001                     islower@c:
   877                           	callstack 0
   878  000001                     ___fleq@ff1:
   879                           	callstack 0
   880  000001                     ___flneg@f1:
   881                           	callstack 0
   882  000001                     ___fpclassifyf@x:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x0
   886  000001                     	ds	1
   887  000002                     I2C_Read@buffer:
   888                           	callstack 0
   889  000002                     I2C_Start@slave_write_address:
   890                           	callstack 0
   891  000002                     I2C_Repeated_Start@slave_read_address:
   892                           	callstack 0
   893  000002                     USART_SendString@out:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x1
   897  000002                     	ds	1
   898  000003                     ??_isupper:
   899  000003                     ??_isalpha:
   900  000003                     ??_isdigit:
   901  000003                     ??_isspace:
   902  000003                     ??_islower:
   903  000003                     ??_ReadLUZ:
   904  000003                     ??_delay_us:
   905  000003                     ??_RTC_Read_Clock:
   906  000003                     ??_RTC_Read_Calendar:
   907  000003                     LCD_MSdelay@i:
   908                           	callstack 0
   909  000003                     ___wmul@multiplicand:
   910                           	callstack 0
   911  000003                     ___awdiv@divisor:
   912                           	callstack 0
   913  000003                     ___awmod@divisor:
   914                           	callstack 0
   915  000003                     fputc@fp:
   916                           	callstack 0
   917  000003                     strcpy@src:
   918                           	callstack 0
   919  000003                     strlen@a:
   920                           	callstack 0
   921  000003                     strncmp@_r:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x2
   925  000003                     	ds	1
   926  000004                     RTC_Read_Clock@read_clock_address:
   927                           	callstack 0
   928  000004                     RTC_Read_Calendar@read_calendar_address:
   929                           	callstack 0
   930  000004                     delay_us@i:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x3
   934  000004                     	ds	1
   935  000005                     ??_fputc:
   936  000005                     ??___fpclassifyf:
   937  000005                     ??_strcpy:
   938  000005                     ?___xxtofl:
   939                           	callstack 0
   940  000005                     ___awdiv@counter:
   941                           	callstack 0
   942  000005                     ___awmod@counter:
   943                           	callstack 0
   944  000005                     LCD_MSdelay@j:
   945                           	callstack 0
   946  000005                     ___wmul@product:
   947                           	callstack 0
   948  000005                     strncmp@n:
   949                           	callstack 0
   950  000005                     ___fleq@ff2:
   951                           	callstack 0
   952  000005                     ___xxtofl@val:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x4
   956  000005                     	ds	1
   957  000006                     ___awdiv@sign:
   958                           	callstack 0
   959  000006                     ___awmod@sign:
   960                           	callstack 0
   961  000006                     play@nota:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x5
   965  000006                     	ds	1
   966  000007                     ??_LCD_Command:
   967  000007                     ??_strncmp:
   968  000007                     ??_LCD_Char:
   969  000007                     ?_tolower:
   970                           	callstack 0
   971  000007                     ?_toupper:
   972                           	callstack 0
   973  000007                     _isspace$1617:
   974                           	callstack 0
   975  000007                     ___awdiv@quotient:
   976                           	callstack 0
   977  000007                     strcpy@s:
   978                           	callstack 0
   979  000007                     tolower@c:
   980                           	callstack 0
   981  000007                     toupper@c:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x6
   985  000007                     	ds	1
   986  000008                     ?_atoi:
   987                           	callstack 0
   988  000008                     LCD_Command@cmd:
   989                           	callstack 0
   990  000008                     LCD_Char@dat:
   991                           	callstack 0
   992  000008                     play@octava:
   993                           	callstack 0
   994  000008                     atoi@s:
   995                           	callstack 0
   996  000008                     strncmp@l:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x7
  1000  000008                     	ds	1
  1001  000009                     ??_tolower:
  1002  000009                     ??_toupper:
  1003  000009                     ??___fleq:
  1004  000009                     ??___xxtofl:
  1005  000009                     LCD_String@msg:
  1006                           	callstack 0
  1007  000009                     LCD_Custom_Char@msg:
  1008                           	callstack 0
  1009  000009                     ___fpclassifyf@e:
  1010                           	callstack 0
  1011  000009                     strcpy@d:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x8
  1015  000009                     	ds	1
  1016  00000A                     ??_atoi:
  1017  00000A                     play@duracion:
  1018                           	callstack 0
  1019  00000A                     fputs@s:
  1020                           	callstack 0
  1021  00000A                     strncmp@r:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x9
  1025  00000A                     	ds	1
  1026  00000B                     LCD_String_xy@pos:
  1027                           	callstack 0
  1028  00000B                     LCD_Custom_Char@loc:
  1029                           	callstack 0
  1030  00000B                     ___fpclassifyf@u:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0xA
  1034  00000B                     	ds	1
  1035  00000C                     ??_play:
  1036  00000C                     LCD_Custom_Char@i:
  1037                           	callstack 0
  1038  00000C                     LCD_String_xy@msg:
  1039                           	callstack 0
  1040  00000C                     fputs@fp:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xB
  1044  00000C                     	ds	1
  1045  00000D                     ___xxtofl@sign:
  1046                           	callstack 0
  1047  00000D                     play@mS_Transcurridos:
  1048                           	callstack 0
  1049  00000D                     _tolower$1681:
  1050                           	callstack 0
  1051  00000D                     _toupper$1696:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0xC
  1055  00000D                     	ds	1
  1056  00000E                     LCD_String_xy@row:
  1057                           	callstack 0
  1058  00000E                     ___xxtofl@exp:
  1059                           	callstack 0
  1060  00000E                     fputs@c:
  1061                           	callstack 0
  1062  00000E                     atoi@neg:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0xD
  1066  00000E                     	ds	1
  1067  00000F                     LCD_String_xy@location:
  1068                           	callstack 0
  1069  00000F                     play@CiclosL:
  1070                           	callstack 0
  1071  00000F                     fputs@i:
  1072                           	callstack 0
  1073  00000F                     ___xxtofl@arg:
  1074                           	callstack 0
  1075                           
  1076                           ; 4 bytes @ 0xE
  1077  00000F                     	ds	1
  1078  000010                     _atoi$1577:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0xF
  1082  000010                     	ds	1
  1083  000011                     ?_pad:
  1084                           	callstack 0
  1085  000011                     play@fn:
  1086                           	callstack 0
  1087  000011                     pad@fp:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x10
  1091  000011                     	ds	1
  1092  000012                     _atoi$1579:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x11
  1096  000012                     	ds	1
  1097  000013                     ??_PlayCancion:
  1098  000013                     ?___flmul:
  1099                           	callstack 0
  1100  000013                     pad@buf:
  1101                           	callstack 0
  1102  000013                     ___flmul@b:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x12
  1106  000013                     	ds	1
  1107  000014                     _atoi$1578:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x13
  1111  000014                     	ds	1
  1112  000015                     pad@p:
  1113                           	callstack 0
  1114  000015                     atoi@n:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x14
  1118  000015                     	ds	2
  1119  000017                     ??_pad:
  1120  000017                     ___flmul@a:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x16
  1124  000017                     	ds	1
  1125  000018                     pad@i:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x17
  1129  000018                     	ds	2
  1130  00001A                     pad@w:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x19
  1134  00001A                     	ds	1
  1135  00001B                     ??___flmul:
  1136                           
  1137                           ; 1 bytes @ 0x1A
  1138  00001B                     	ds	1
  1139  00001C                     ?_xtoa:
  1140                           	callstack 0
  1141  00001C                     xtoa@fp:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x1B
  1145  00001C                     	ds	2
  1146  00001E                     xtoa@d:
  1147                           	callstack 0
  1148                           
  1149                           ; 8 bytes @ 0x1D
  1150  00001E                     	ds	1
  1151  00001F                     ___flmul@sign:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x1E
  1155  00001F                     	ds	1
  1156  000020                     ___flmul@grs:
  1157                           	callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x1F
  1160  000020                     	ds	4
  1161  000024                     ___flmul@aexp:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x23
  1165  000024                     	ds	1
  1166  000025                     ___flmul@bexp:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x24
  1170  000025                     	ds	1
  1171  000026                     xtoa@x:
  1172                           	callstack 0
  1173  000026                     ___flmul@prod:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x25
  1177  000026                     	ds	1
  1178  000027                     ??_xtoa:
  1179                           
  1180                           ; 1 bytes @ 0x26
  1181  000027                     	ds	3
  1182  00002A                     ___flmul@temp:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x29
  1186  00002A                     	ds	2
  1187  00002C                     ?___fldiv:
  1188                           	callstack 0
  1189  00002C                     ___flge@ff1:
  1190                           	callstack 0
  1191  00002C                     ___fldiv@b:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x2B
  1195  00002C                     	ds	3
  1196  00002F                     _xtoa$1523:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x2E
  1200  00002F                     	ds	1
  1201  000030                     ___flge@ff2:
  1202                           	callstack 0
  1203  000030                     ___fldiv@a:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x2F
  1207  000030                     	ds	1
  1208  000031                     _xtoa$1524:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x30
  1212  000031                     	ds	2
  1213  000033                     xtoa@p:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x32
  1217  000033                     	ds	1
  1218  000034                     ??___fldiv:
  1219  000034                     ??___flge:
  1220                           
  1221                           ; 1 bytes @ 0x33
  1222  000034                     	ds	1
  1223  000035                     xtoa@w:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x34
  1227  000035                     	ds	2
  1228  000037                     xtoa@n:
  1229                           	callstack 0
  1230                           
  1231                           ; 8 bytes @ 0x36
  1232  000037                     	ds	1
  1233  000038                     ___fldiv@rem:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x37
  1237  000038                     	ds	4
  1238  00003C                     ___fldiv@sign:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x3B
  1242  00003C                     	ds	1
  1243  00003D                     ___fldiv@new_exp:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x3C
  1247  00003D                     	ds	2
  1248  00003F                     xtoa@i:
  1249                           	callstack 0
  1250  00003F                     ___fldiv@grs:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x3E
  1254  00003F                     	ds	2
  1255  000041                     xtoa@c:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x40
  1259  000041                     	ds	2
  1260  000043                     ___fldiv@bexp:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x42
  1264  000043                     	ds	1
  1265  000044                     ___fldiv@aexp:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x43
  1269  000044                     	ds	1
  1270  000045                     ?___fladd:
  1271                           	callstack 0
  1272  000045                     ?_floorf:
  1273                           	callstack 0
  1274  000045                     ___fladd@b:
  1275                           	callstack 0
  1276  000045                     floorf@x:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x44
  1280  000045                     	ds	4
  1281  000049                     ??_floorf:
  1282  000049                     ___fladd@a:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x48
  1286  000049                     	ds	4
  1287  00004D                     ??___fladd:
  1288                           
  1289                           ; 1 bytes @ 0x4C
  1290  00004D                     	ds	2
  1291  00004F                     floorf@m:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x4E
  1295  00004F                     	ds	2
  1296  000051                     ___fladd@signs:
  1297                           	callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x50
  1300  000051                     	ds	1
  1301  000052                     ___fladd@aexp:
  1302                           	callstack 0
  1303                           
  1304                           ; 1 bytes @ 0x51
  1305  000052                     	ds	1
  1306  000053                     ___fladd@bexp:
  1307                           	callstack 0
  1308  000053                     floorf@e:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x52
  1312  000053                     	ds	1
  1313  000054                     ___fladd@grs:
  1314                           	callstack 0
  1315                           
  1316                           ; 1 bytes @ 0x53
  1317  000054                     	ds	1
  1318  000055                     ?___flsub:
  1319                           	callstack 0
  1320  000055                     ?___fltol:
  1321                           	callstack 0
  1322  000055                     ___fltol@f1:
  1323                           	callstack 0
  1324  000055                     ___flsub@b:
  1325                           	callstack 0
  1326  000055                     floorf@u:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x54
  1330  000055                     	ds	4
  1331  000059                     ??___fltol:
  1332  000059                     ___flsub@a:
  1333                           	callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x58
  1336  000059                     	ds	4
  1337  00005D                     ___fltol@sign1:
  1338                           	callstack 0
  1339                           
  1340                           ; 1 bytes @ 0x5C
  1341  00005D                     	ds	1
  1342  00005E                     ___fltol@exp1:
  1343                           	callstack 0
  1344                           
  1345                           ; 1 bytes @ 0x5D
  1346  00005E                     	ds	1
  1347  00005F                     
  1348                           ; 1 bytes @ 0x5E
  1349 ;;
  1350 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1351 ;;
  1352 ;; *************** function _main *****************
  1353 ;; Defined at:
  1354 ;;		line 26 in file "smart_main.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  caso            2  128[BANK0 ] int 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1368 ;;      Params:         0       0       0       0       0       0       0       0       0
  1369 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1370 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1371 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1372 ;;Total ram usage:        4 bytes
  1373 ;; Hardware stack levels required when called: 9
  1374 ;; This function calls:
  1375 ;;		_Alarm_Status
  1376 ;;		_Cloudy_State
  1377 ;;		_Estados
  1378 ;;		_I2C_Init
  1379 ;;		_LCD_Clear
  1380 ;;		_LCD_Init
  1381 ;;		_LCD_MSdelay
  1382 ;;		_RTC_Calendario
  1383 ;;		_Rainy_State
  1384 ;;		_Sunny_State
  1385 ;;		_USART_Init
  1386 ;; This function is called by:
  1387 ;;		Startup code after reset
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text0
  1392  003E2A                     __ptext0:
  1393                           	callstack 0
  1394  003E2A                     _main:
  1395                           	callstack 22
  1396  003E2A                     
  1397                           ;smart_main.c: 27:     OSCCON = 0x72;
  1398  003E2A  0E72               	movlw	114
  1399  003E2C  6ED3               	movwf	211,c	;volatile
  1400                           
  1401                           ;smart_main.c: 28:     TRISE = 0x00;
  1402  003E2E  0E00               	movlw	0
  1403  003E30  6E96               	movwf	150,c	;volatile
  1404  003E32                     
  1405                           ;smart_main.c: 31:     I2C_Init();
  1406  003E32  EC50  F025         	call	_I2C_Init	;wreg free
  1407  003E36                     
  1408                           ;smart_main.c: 32:     USART_Init(9600);
  1409  003E36  0E80               	movlw	128
  1410  003E38  0100               	movlb	0	; () banked
  1411  003E3A  6F60               	movwf	USART_Init@baud_rate& (0+255),b
  1412  003E3C  0E25               	movlw	37
  1413  003E3E  6F61               	movwf	(USART_Init@baud_rate+1)& (0+255),b
  1414  003E40  0E00               	movlw	0
  1415  003E42  6F62               	movwf	(USART_Init@baud_rate+2)& (0+255),b
  1416  003E44  0E00               	movlw	0
  1417  003E46  6F63               	movwf	(USART_Init@baud_rate+3)& (0+255),b
  1418  003E48  EC1A  F020         	call	_USART_Init	;wreg free
  1419  003E4C                     
  1420                           ;smart_main.c: 33:     LCD_Init();
  1421  003E4C  ECE6  F024         	call	_LCD_Init	;wreg free
  1422  003E50                     l5754:
  1423                           
  1424                           ;smart_main.c: 36:         RTC_Calendario();
  1425  003E50  ECA0  F013         	call	_RTC_Calendario	;wreg free
  1426  003E54                     
  1427                           ;smart_main.c: 37:         int caso = Estados();
  1428  003E54  EC85  F016         	call	_Estados	;wreg free
  1429  003E58  C066  F0E0         	movff	?_Estados,main@caso
  1430  003E5C  C067  F0E1         	movff	?_Estados+1,main@caso+1
  1431                           
  1432                           ;smart_main.c: 38:         switch (caso) {
  1433  003E60  EF42  F01F         	goto	l5768
  1434  003E64                     l5758:
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;smart_main.c: 40:                 Sunny_State();
  1438  003E64  EC85  F021         	call	_Sunny_State	;wreg free
  1439                           
  1440                           ;smart_main.c: 41:                 break;
  1441  003E68  EF61  F01F         	goto	l5770
  1442  003E6C                     l5760:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;smart_main.c: 44:                 Cloudy_State();
  1446  003E6C  EC0C  F022         	call	_Cloudy_State	;wreg free
  1447                           
  1448                           ;smart_main.c: 45:                 break;
  1449  003E70  EF61  F01F         	goto	l5770
  1450  003E74                     l5762:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;smart_main.c: 48:                 Rainy_State();
  1454  003E74  ECB2  F021         	call	_Rainy_State	;wreg free
  1455                           
  1456                           ;smart_main.c: 49:                 break;
  1457  003E78  EF61  F01F         	goto	l5770
  1458  003E7C                     l5764:
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;smart_main.c: 52:                 Alarm_Status();
  1462  003E7C  EC99  F025         	call	_Alarm_Status	;wreg free
  1463                           
  1464                           ;smart_main.c: 53:                 break;
  1465  003E80  EF61  F01F         	goto	l5770
  1466  003E84                     l5768:
  1467  003E84  C0E0  F0DE         	movff	main@caso,??_main
  1468  003E88  C0E1  F0DF         	movff	main@caso+1,??_main+1
  1469                           
  1470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1471                           ; Switch size 1, requested type "simple"
  1472                           ; Number of cases is 1, Range of values is 0 to 0
  1473                           ; switch strategies available:
  1474                           ; Name         Instructions Cycles
  1475                           ; simple_byte            4     3 (average)
  1476                           ;	Chosen strategy is simple_byte
  1477  003E8C  0100               	movlb	0	; () banked
  1478  003E8E  51DF               	movf	(??_main+1)& (0+255),w,b
  1479  003E90  0A00               	xorlw	0	; case 0
  1480  003E92  B4D8               	btfsc	status,2,c
  1481  003E94  EF4E  F01F         	goto	l5874
  1482  003E98  EF61  F01F         	goto	l5770
  1483  003E9C                     l5874:
  1484                           
  1485                           ; BSR set to: 0
  1486                           ; Switch size 1, requested type "simple"
  1487                           ; Number of cases is 4, Range of values is 1 to 4
  1488                           ; switch strategies available:
  1489                           ; Name         Instructions Cycles
  1490                           ; simple_byte           13     7 (average)
  1491                           ;	Chosen strategy is simple_byte
  1492  003E9C  51DE               	movf	??_main& (0+255),w,b
  1493  003E9E  0A01               	xorlw	1	; case 1
  1494  003EA0  B4D8               	btfsc	status,2,c
  1495  003EA2  EF32  F01F         	goto	l5758
  1496  003EA6  0A03               	xorlw	3	; case 2
  1497  003EA8  B4D8               	btfsc	status,2,c
  1498  003EAA  EF36  F01F         	goto	l5760
  1499  003EAE  0A01               	xorlw	1	; case 3
  1500  003EB0  B4D8               	btfsc	status,2,c
  1501  003EB2  EF3A  F01F         	goto	l5762
  1502  003EB6  0A07               	xorlw	7	; case 4
  1503  003EB8  B4D8               	btfsc	status,2,c
  1504  003EBA  EF3E  F01F         	goto	l5764
  1505  003EBE  EF61  F01F         	goto	l5770
  1506  003EC2                     l5770:
  1507                           
  1508                           ;smart_main.c: 59:         LCD_MSdelay(3000);
  1509  003EC2  0E0B               	movlw	11
  1510  003EC4  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1511  003EC6  0EB8               	movlw	184
  1512  003EC8  6E01               	movwf	LCD_MSdelay@val^0,c
  1513  003ECA  ECFF  F022         	call	_LCD_MSdelay	;wreg free
  1514                           
  1515                           ;smart_main.c: 60:         LCD_Clear();
  1516  003ECE  EC86  F025         	call	_LCD_Clear	;wreg free
  1517  003ED2  EF28  F01F         	goto	l5754
  1518  003ED6  EF00  F000         	goto	start
  1519  003EDA                     __end_of_main:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _USART_Init *****************
  1523 ;; Defined at:
  1524 ;;		line 37 in file "Bluetooth.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  baud_rate       4    0[BANK0 ] long 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  temp            4    4[BANK0 ] float 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         0       4       0       0       0       0       0       0       0
  1539 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        8 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 1
  1545 ;; This function calls:
  1546 ;;		___fladd
  1547 ;;		___fldiv
  1548 ;;		___fltol
  1549 ;;		___xxtofl
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text1
  1556  004034                     __ptext1:
  1557                           	callstack 0
  1558  004034                     _USART_Init:
  1559                           	callstack 29
  1560  004034                     
  1561                           ;Bluetooth.c: 38:     float temp;;Bluetooth.c: 39:     TRISC6 = 0;
  1562  004034  9C94               	bcf	3988,6,c	;volatile
  1563                           
  1564                           ;Bluetooth.c: 40:     TRISC7 = 1;
  1565  004036  8E94               	bsf	3988,7,c	;volatile
  1566  004038                     
  1567                           ;Bluetooth.c: 41:     temp = (((float)(8000000/64)/(float)baud_rate)-1);
  1568  004038  C060  F005         	movff	USART_Init@baud_rate,___xxtofl@val
  1569  00403C  C061  F006         	movff	USART_Init@baud_rate+1,___xxtofl@val+1
  1570  004040  C062  F007         	movff	USART_Init@baud_rate+2,___xxtofl@val+2
  1571  004044  C063  F008         	movff	USART_Init@baud_rate+3,___xxtofl@val+3
  1572  004048  0E01               	movlw	1
  1573  00404A  ECCD  F018         	call	___xxtofl
  1574  00404E  C005  F030         	movff	?___xxtofl,___fldiv@a
  1575  004052  C006  F031         	movff	?___xxtofl+1,___fldiv@a+1
  1576  004056  C007  F032         	movff	?___xxtofl+2,___fldiv@a+2
  1577  00405A  C008  F033         	movff	?___xxtofl+3,___fldiv@a+3
  1578  00405E  0E00               	movlw	0
  1579  004060  6E2C               	movwf	___fldiv@b^0,c
  1580  004062  0E24               	movlw	36
  1581  004064  6E2D               	movwf	(___fldiv@b+1)^0,c
  1582  004066  0EF4               	movlw	244
  1583  004068  6E2E               	movwf	(___fldiv@b+2)^0,c
  1584  00406A  0E47               	movlw	71
  1585  00406C  6E2F               	movwf	(___fldiv@b+3)^0,c
  1586  00406E  ECD3  F011         	call	___fldiv	;wreg free
  1587  004072  C02C  F045         	movff	?___fldiv,___fladd@b
  1588  004076  C02D  F046         	movff	?___fldiv+1,___fladd@b+1
  1589  00407A  C02E  F047         	movff	?___fldiv+2,___fladd@b+2
  1590  00407E  C02F  F048         	movff	?___fldiv+3,___fladd@b+3
  1591  004082  0E00               	movlw	0
  1592  004084  6E49               	movwf	___fladd@a^0,c
  1593  004086  0E00               	movlw	0
  1594  004088  6E4A               	movwf	(___fladd@a+1)^0,c
  1595  00408A  0E80               	movlw	128
  1596  00408C  6E4B               	movwf	(___fladd@a+2)^0,c
  1597  00408E  0EBF               	movlw	191
  1598  004090  6E4C               	movwf	(___fladd@a+3)^0,c
  1599  004092  EC5E  F00D         	call	___fladd	;wreg free
  1600  004096  C045  F064         	movff	?___fladd,USART_Init@temp
  1601  00409A  C046  F065         	movff	?___fladd+1,USART_Init@temp+1
  1602  00409E  C047  F066         	movff	?___fladd+2,USART_Init@temp+2
  1603  0040A2  C048  F067         	movff	?___fladd+3,USART_Init@temp+3
  1604                           
  1605                           ;Bluetooth.c: 42:     SPBRG = (int) temp;
  1606  0040A6  C064  F055         	movff	USART_Init@temp,___fltol@f1
  1607  0040AA  C065  F056         	movff	USART_Init@temp+1,___fltol@f1+1
  1608  0040AE  C066  F057         	movff	USART_Init@temp+2,___fltol@f1+2
  1609  0040B2  C067  F058         	movff	USART_Init@temp+3,___fltol@f1+3
  1610  0040B6  EC1B  F01B         	call	___fltol	;wreg free
  1611  0040BA  5055               	movf	?___fltol^0,w,c
  1612  0040BC  6EAF               	movwf	175,c	;volatile
  1613  0040BE                     
  1614                           ;Bluetooth.c: 43:     TXSTA = 0x20;
  1615  0040BE  0E20               	movlw	32
  1616  0040C0  6EAC               	movwf	172,c	;volatile
  1617  0040C2                     
  1618                           ;Bluetooth.c: 44:     RCSTA = 0x90;
  1619  0040C2  0E90               	movlw	144
  1620  0040C4  6EAB               	movwf	171,c	;volatile
  1621  0040C6  0012               	return		;funcret
  1622  0040C8                     __end_of_USART_Init:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _Sunny_State *****************
  1626 ;; Defined at:
  1627 ;;		line 56 in file "Estados.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 8
  1648 ;; This function calls:
  1649 ;;		_LCD_Char
  1650 ;;		_LCD_Command
  1651 ;;		_LCD_Custom_Char
  1652 ;;		_LCD_String_xy
  1653 ;;		_sprintf
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text2
  1660  00430A                     __ptext2:
  1661                           	callstack 0
  1662  00430A                     _Sunny_State:
  1663                           	callstack 22
  1664  00430A                     
  1665                           ;Estados.c: 57:     LATE0 = 0;
  1666  00430A  908D               	bcf	3981,0,c	;volatile
  1667                           
  1668                           ;Estados.c: 58:     LATE1 = 0;
  1669  00430C  928D               	bcf	3981,1,c	;volatile
  1670                           
  1671                           ;Estados.c: 59:     LATE2 = 0;
  1672  00430E  948D               	bcf	3981,2,c	;volatile
  1673  004310                     
  1674                           ;Estados.c: 60:     sprintf(Stemp, "%0.0fC", tempar);
  1675  004310  0E5E               	movlw	low _Stemp
  1676  004312  0100               	movlb	0	; () banked
  1677  004314  6FCC               	movwf	sprintf@s& (0+255),b
  1678  004316  0E01               	movlw	high _Stemp
  1679  004318  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1680  00431A  0E0D               	movlw	low STR_19
  1681  00431C  6FCE               	movwf	sprintf@fmt& (0+255),b
  1682  00431E  0E08               	movlw	high STR_19
  1683  004320  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1684  004322  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  1685  004326  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  1686  00432A  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  1687  00432E  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  1688  004332  EC39  F022         	call	_sprintf	;wreg free
  1689  004336                     
  1690                           ;Estados.c: 61:     LCD_String_xy(1, 0, Stemp);
  1691  004336  0E00               	movlw	0
  1692  004338  6E0B               	movwf	LCD_String_xy@pos^0,c
  1693  00433A  0E5E               	movlw	low _Stemp
  1694  00433C  6E0C               	movwf	LCD_String_xy@msg^0,c
  1695  00433E  0E01               	movlw	high _Stemp
  1696  004340  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1697  004342  0E01               	movlw	1
  1698  004344  ECB0  F023         	call	_LCD_String_xy
  1699  004348                     
  1700                           ;Estados.c: 62:     LCD_Custom_Char(0, character2);
  1701  004348  0EDD               	movlw	low _character2
  1702  00434A  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1703  00434C  0E01               	movlw	high _character2
  1704  00434E  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1705  004350  0E00               	movlw	0
  1706  004352  EC24  F023         	call	_LCD_Custom_Char
  1707                           
  1708                           ;Estados.c: 63:     LCD_Command(0xc0);
  1709  004356  0EC0               	movlw	192
  1710  004358  ECB3  F022         	call	_LCD_Command
  1711                           
  1712                           ;Estados.c: 64:     LCD_Char(0);
  1713  00435C  0E00               	movlw	0
  1714  00435E  ECD9  F022         	call	_LCD_Char
  1715  004362  0012               	return		;funcret
  1716  004364                     __end_of_Sunny_State:
  1717                           	callstack 0
  1718                           
  1719 ;; *************** function _Rainy_State *****************
  1720 ;; Defined at:
  1721 ;;		line 107 in file "Estados.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1735 ;;      Params:         0       0       0       0       0       0       0       0       0
  1736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1739 ;;Total ram usage:        0 bytes
  1740 ;; Hardware stack levels used: 1
  1741 ;; Hardware stack levels required when called: 8
  1742 ;; This function calls:
  1743 ;;		_LCD_Char
  1744 ;;		_LCD_Command
  1745 ;;		_LCD_Custom_Char
  1746 ;;		_LCD_String_xy
  1747 ;;		_sprintf
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text3
  1754  004364                     __ptext3:
  1755                           	callstack 0
  1756  004364                     _Rainy_State:
  1757                           	callstack 22
  1758  004364                     
  1759                           ;Estados.c: 108:     LATE0 = 1;
  1760  004364  808D               	bsf	3981,0,c	;volatile
  1761                           
  1762                           ;Estados.c: 109:     LATE1 = 1;
  1763  004366  828D               	bsf	3981,1,c	;volatile
  1764                           
  1765                           ;Estados.c: 110:     LATE2 = 1;
  1766  004368  848D               	bsf	3981,2,c	;volatile
  1767  00436A                     
  1768                           ;Estados.c: 111:     sprintf(Stemp, "%0.0fC", tempar);
  1769  00436A  0E5E               	movlw	low _Stemp
  1770  00436C  0100               	movlb	0	; () banked
  1771  00436E  6FCC               	movwf	sprintf@s& (0+255),b
  1772  004370  0E01               	movlw	high _Stemp
  1773  004372  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1774  004374  0E0D               	movlw	low STR_19
  1775  004376  6FCE               	movwf	sprintf@fmt& (0+255),b
  1776  004378  0E08               	movlw	high STR_19
  1777  00437A  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1778  00437C  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  1779  004380  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  1780  004384  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  1781  004388  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  1782  00438C  EC39  F022         	call	_sprintf	;wreg free
  1783  004390                     
  1784                           ;Estados.c: 112:     LCD_String_xy(1, 0, Stemp);
  1785  004390  0E00               	movlw	0
  1786  004392  6E0B               	movwf	LCD_String_xy@pos^0,c
  1787  004394  0E5E               	movlw	low _Stemp
  1788  004396  6E0C               	movwf	LCD_String_xy@msg^0,c
  1789  004398  0E01               	movlw	high _Stemp
  1790  00439A  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1791  00439C  0E01               	movlw	1
  1792  00439E  ECB0  F023         	call	_LCD_String_xy
  1793  0043A2                     
  1794                           ;Estados.c: 113:     LCD_Custom_Char(0, character1);
  1795  0043A2  0EE5               	movlw	low _character1
  1796  0043A4  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1797  0043A6  0E01               	movlw	high _character1
  1798  0043A8  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1799  0043AA  0E00               	movlw	0
  1800  0043AC  EC24  F023         	call	_LCD_Custom_Char
  1801                           
  1802                           ;Estados.c: 114:     LCD_Command(0xc0);
  1803  0043B0  0EC0               	movlw	192
  1804  0043B2  ECB3  F022         	call	_LCD_Command
  1805                           
  1806                           ;Estados.c: 115:     LCD_Char(0);
  1807  0043B6  0E00               	movlw	0
  1808  0043B8  ECD9  F022         	call	_LCD_Char
  1809  0043BC  0012               	return		;funcret
  1810  0043BE                     __end_of_Rainy_State:
  1811                           	callstack 0
  1812                           
  1813 ;; *************** function _RTC_Calendario *****************
  1814 ;; Defined at:
  1815 ;;		line 79 in file "reloj.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  hours          10   57[BANK1 ] unsigned char [10]
  1820 ;;  mins           10   47[BANK1 ] unsigned char [10]
  1821 ;;  secs           10   37[BANK1 ] unsigned char [10]
  1822 ;;  year           10   27[BANK1 ] unsigned char [10]
  1823 ;;  month          10   17[BANK1 ] unsigned char [10]
  1824 ;;  date           10    7[BANK1 ] unsigned char [10]
  1825 ;;  days            7    0[BANK1 ] unsigned char [7]
  1826 ;;  AM_PM           1   67[BANK1 ] unsigned char 
  1827 ;;  Clock_type      1    0        unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0
  1838 ;;      Locals:         0       0      68       0       0       0       0       0       0
  1839 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1840 ;;      Totals:         0       2      68       0       0       0       0       0       0
  1841 ;;Total ram usage:       70 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 8
  1844 ;; This function calls:
  1845 ;;		_I2C_Init
  1846 ;;		_I2C_Stop
  1847 ;;		_LCD_Clear
  1848 ;;		_LCD_Init
  1849 ;;		_LCD_MSdelay
  1850 ;;		_LCD_String
  1851 ;;		_LCD_String_xy
  1852 ;;		_RTC_Read_Calendar
  1853 ;;		_RTC_Read_Clock
  1854 ;;		_sprintf
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text4
  1861  002740                     __ptext4:
  1862                           	callstack 0
  1863  002740                     _RTC_Calendario:
  1864                           	callstack 22
  1865  002740  0E05               	movlw	5
  1866  002742  0101               	movlb	1	; () banked
  1867  002744  6FB5               	movwf	RTC_Calendario@AM_PM& (0+255),b
  1868  002746                     
  1869                           ; BSR set to: 1
  1870  002746  EE21  F0CE         	lfsr	2,RTC_Calendario@F3580
  1871  00274A  EE11  F072         	lfsr	1,RTC_Calendario@days
  1872  00274E  0E06               	movlw	6
  1873  002750                     u6041:
  1874  002750  CFDB FFE3          	movff	plusw2,plusw1
  1875  002754  06E8               	decf	wreg,f,c
  1876  002756  E2FC               	bc	u6041
  1877  002758                     
  1878                           ; BSR set to: 1
  1879  002758  0E72               	movlw	114
  1880  00275A  6ED3               	movwf	211,c	;volatile
  1881  00275C                     
  1882                           ; BSR set to: 1
  1883  00275C  EC50  F025         	call	_I2C_Init	;wreg free
  1884  002760  ECE6  F024         	call	_LCD_Init	;wreg free
  1885  002764  EC86  F025         	call	_LCD_Clear	;wreg free
  1886  002768  0E00               	movlw	0
  1887  00276A  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1888  00276C  0E0A               	movlw	10
  1889  00276E  6E01               	movwf	LCD_MSdelay@val^0,c
  1890  002770  ECFF  F022         	call	_LCD_MSdelay	;wreg free
  1891  002774  0E00               	movlw	0
  1892  002776  EC48  F023         	call	_RTC_Read_Clock
  1893  00277A  0101               	movlb	1	; () banked
  1894  00277C  AD08               	btfss	_hour& (0+255),6,b
  1895  00277E  EFC3  F013         	goto	u6051
  1896  002782  EFC5  F013         	goto	u6050
  1897  002786                     u6051:
  1898  002786  EF29  F014         	goto	l5584
  1899  00278A                     u6050:
  1900  00278A                     
  1901                           ; BSR set to: 1
  1902  00278A  AB08               	btfss	_hour& (0+255),5,b
  1903  00278C  EFCA  F013         	goto	u6061
  1904  002790  EFCC  F013         	goto	u6060
  1905  002794                     u6061:
  1906  002794  EFD7  F013         	goto	l5568
  1907  002798                     u6060:
  1908  002798                     
  1909                           ; BSR set to: 1
  1910  002798  0E0E               	movlw	14
  1911  00279A  6E0B               	movwf	LCD_String_xy@pos^0,c
  1912  00279C  0E52               	movlw	low STR_1
  1913  00279E  6E0C               	movwf	LCD_String_xy@msg^0,c
  1914  0027A0  0E08               	movlw	high STR_1
  1915  0027A2  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1916  0027A4  0E01               	movlw	1
  1917  0027A6  ECB0  F023         	call	_LCD_String_xy
  1918  0027AA  EFE0  F013         	goto	l5570
  1919  0027AE                     l5568:
  1920                           
  1921                           ; BSR set to: 1
  1922  0027AE  0E0E               	movlw	14
  1923  0027B0  6E0B               	movwf	LCD_String_xy@pos^0,c
  1924  0027B2  0E4F               	movlw	low STR_2
  1925  0027B4  6E0C               	movwf	LCD_String_xy@msg^0,c
  1926  0027B6  0E08               	movlw	high STR_2
  1927  0027B8  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1928  0027BA  0E01               	movlw	1
  1929  0027BC  ECB0  F023         	call	_LCD_String_xy
  1930  0027C0                     l5570:
  1931  0027C0  0E1F               	movlw	31
  1932  0027C2  0101               	movlb	1	; () banked
  1933  0027C4  1508               	andwf	_hour& (0+255),w,b
  1934  0027C6  6F08               	movwf	_hour& (0+255),b
  1935  0027C8  6B09               	clrf	(_hour+1)& (0+255),b
  1936  0027CA                     
  1937                           ; BSR set to: 1
  1938  0027CA  0E97               	movlw	low RTC_Calendario@secs
  1939  0027CC  0100               	movlb	0	; () banked
  1940  0027CE  6FCC               	movwf	sprintf@s& (0+255),b
  1941  0027D0  0E01               	movlw	high RTC_Calendario@secs
  1942  0027D2  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1943  0027D4  0E24               	movlw	low STR_3
  1944  0027D6  6FCE               	movwf	sprintf@fmt& (0+255),b
  1945  0027D8  0E08               	movlw	high STR_3
  1946  0027DA  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1947  0027DC  C10C  F0D0         	movff	_sec,?_sprintf+4
  1948  0027E0  C10D  F0D1         	movff	_sec+1,?_sprintf+5
  1949  0027E4  EC39  F022         	call	_sprintf	;wreg free
  1950  0027E8  0EA1               	movlw	low RTC_Calendario@mins
  1951  0027EA  0100               	movlb	0	; () banked
  1952  0027EC  6FCC               	movwf	sprintf@s& (0+255),b
  1953  0027EE  0E01               	movlw	high RTC_Calendario@mins
  1954  0027F0  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1955  0027F2  0E2C               	movlw	low STR_4
  1956  0027F4  6FCE               	movwf	sprintf@fmt& (0+255),b
  1957  0027F6  0E08               	movlw	high STR_4
  1958  0027F8  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1959  0027FA  C10A  F0D0         	movff	_min,?_sprintf+4
  1960  0027FE  C10B  F0D1         	movff	_min+1,?_sprintf+5
  1961  002802  EC39  F022         	call	_sprintf	;wreg free
  1962  002806  0EAB               	movlw	low RTC_Calendario@hours
  1963  002808  0100               	movlb	0	; () banked
  1964  00280A  6FCC               	movwf	sprintf@s& (0+255),b
  1965  00280C  0E01               	movlw	high RTC_Calendario@hours
  1966  00280E  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1967  002810  0E2C               	movlw	low STR_4
  1968  002812  6FCE               	movwf	sprintf@fmt& (0+255),b
  1969  002814  0E08               	movlw	high STR_4
  1970  002816  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1971  002818  C108  F0D0         	movff	_hour,?_sprintf+4
  1972  00281C  C109  F0D1         	movff	_hour+1,?_sprintf+5
  1973  002820  EC39  F022         	call	_sprintf	;wreg free
  1974  002824  0E04               	movlw	4
  1975  002826  6E0B               	movwf	LCD_String_xy@pos^0,c
  1976  002828  0EAB               	movlw	low RTC_Calendario@hours
  1977  00282A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1978  00282C  0E01               	movlw	high RTC_Calendario@hours
  1979  00282E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1980  002830  0E00               	movlw	0
  1981  002832  ECB0  F023         	call	_LCD_String_xy
  1982  002836                     l5580:
  1983  002836  0EA1               	movlw	low RTC_Calendario@mins
  1984  002838  6E09               	movwf	LCD_String@msg^0,c
  1985  00283A  0E01               	movlw	high RTC_Calendario@mins
  1986  00283C  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1987  00283E  EC28  F021         	call	_LCD_String	;wreg free
  1988  002842  0E97               	movlw	low RTC_Calendario@secs
  1989  002844  6E09               	movwf	LCD_String@msg^0,c
  1990  002846  0E01               	movlw	high RTC_Calendario@secs
  1991  002848  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1992  00284A  EC28  F021         	call	_LCD_String	;wreg free
  1993  00284E  EF65  F014         	goto	l5598
  1994  002852                     l5584:
  1995                           
  1996                           ; BSR set to: 1
  1997  002852  0E3F               	movlw	63
  1998  002854  1508               	andwf	_hour& (0+255),w,b
  1999  002856  6F08               	movwf	_hour& (0+255),b
  2000  002858  6B09               	clrf	(_hour+1)& (0+255),b
  2001  00285A                     
  2002                           ; BSR set to: 1
  2003  00285A  0E97               	movlw	low RTC_Calendario@secs
  2004  00285C  0100               	movlb	0	; () banked
  2005  00285E  6FCC               	movwf	sprintf@s& (0+255),b
  2006  002860  0E01               	movlw	high RTC_Calendario@secs
  2007  002862  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2008  002864  0E24               	movlw	low STR_3
  2009  002866  6FCE               	movwf	sprintf@fmt& (0+255),b
  2010  002868  0E08               	movlw	high STR_3
  2011  00286A  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2012  00286C  C10C  F0D0         	movff	_sec,?_sprintf+4
  2013  002870  C10D  F0D1         	movff	_sec+1,?_sprintf+5
  2014  002874  EC39  F022         	call	_sprintf	;wreg free
  2015  002878  0EA1               	movlw	low RTC_Calendario@mins
  2016  00287A  0100               	movlb	0	; () banked
  2017  00287C  6FCC               	movwf	sprintf@s& (0+255),b
  2018  00287E  0E01               	movlw	high RTC_Calendario@mins
  2019  002880  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2020  002882  0E2C               	movlw	low STR_4
  2021  002884  6FCE               	movwf	sprintf@fmt& (0+255),b
  2022  002886  0E08               	movlw	high STR_4
  2023  002888  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2024  00288A  C10A  F0D0         	movff	_min,?_sprintf+4
  2025  00288E  C10B  F0D1         	movff	_min+1,?_sprintf+5
  2026  002892  EC39  F022         	call	_sprintf	;wreg free
  2027  002896  0EAB               	movlw	low RTC_Calendario@hours
  2028  002898  0100               	movlb	0	; () banked
  2029  00289A  6FCC               	movwf	sprintf@s& (0+255),b
  2030  00289C  0E01               	movlw	high RTC_Calendario@hours
  2031  00289E  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2032  0028A0  0E2C               	movlw	low STR_4
  2033  0028A2  6FCE               	movwf	sprintf@fmt& (0+255),b
  2034  0028A4  0E08               	movlw	high STR_4
  2035  0028A6  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2036  0028A8  C108  F0D0         	movff	_hour,?_sprintf+4
  2037  0028AC  C109  F0D1         	movff	_hour+1,?_sprintf+5
  2038  0028B0  EC39  F022         	call	_sprintf	;wreg free
  2039  0028B4  0E04               	movlw	4
  2040  0028B6  6E0B               	movwf	LCD_String_xy@pos^0,c
  2041  0028B8  0EAB               	movlw	low RTC_Calendario@hours
  2042  0028BA  6E0C               	movwf	LCD_String_xy@msg^0,c
  2043  0028BC  0E01               	movlw	high RTC_Calendario@hours
  2044  0028BE  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2045  0028C0  0E00               	movlw	0
  2046  0028C2  ECB0  F023         	call	_LCD_String_xy
  2047  0028C6  EF1B  F014         	goto	l5580
  2048  0028CA                     l5598:
  2049  0028CA  0E03               	movlw	3
  2050  0028CC  ECDF  F021         	call	_RTC_Read_Calendar
  2051  0028D0  EC68  F025         	call	_I2C_Stop	;wreg free
  2052  0028D4  0E79               	movlw	low RTC_Calendario@date
  2053  0028D6  0100               	movlb	0	; () banked
  2054  0028D8  6FCC               	movwf	sprintf@s& (0+255),b
  2055  0028DA  0E01               	movlw	high RTC_Calendario@date
  2056  0028DC  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2057  0028DE  0E28               	movlw	low STR_9
  2058  0028E0  6FCE               	movwf	sprintf@fmt& (0+255),b
  2059  0028E2  0E08               	movlw	high STR_9
  2060  0028E4  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2061  0028E6  C104  F0D0         	movff	_Date,?_sprintf+4
  2062  0028EA  C105  F0D1         	movff	_Date+1,?_sprintf+5
  2063  0028EE  EC39  F022         	call	_sprintf	;wreg free
  2064  0028F2  0E83               	movlw	low RTC_Calendario@month
  2065  0028F4  0100               	movlb	0	; () banked
  2066  0028F6  6FCC               	movwf	sprintf@s& (0+255),b
  2067  0028F8  0E01               	movlw	high RTC_Calendario@month
  2068  0028FA  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2069  0028FC  0E28               	movlw	low STR_9
  2070  0028FE  6FCE               	movwf	sprintf@fmt& (0+255),b
  2071  002900  0E08               	movlw	high STR_9
  2072  002902  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2073  002904  C102  F0D0         	movff	_Month,?_sprintf+4
  2074  002908  C103  F0D1         	movff	_Month+1,?_sprintf+5
  2075  00290C  EC39  F022         	call	_sprintf	;wreg free
  2076  002910  0E8D               	movlw	low RTC_Calendario@year
  2077  002912  0100               	movlb	0	; () banked
  2078  002914  6FCC               	movwf	sprintf@s& (0+255),b
  2079  002916  0E01               	movlw	high RTC_Calendario@year
  2080  002918  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2081  00291A  0E24               	movlw	low STR_3
  2082  00291C  6FCE               	movwf	sprintf@fmt& (0+255),b
  2083  00291E  0E08               	movlw	high STR_3
  2084  002920  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2085  002922  C100  F0D0         	movff	_Year,?_sprintf+4
  2086  002926  C101  F0D1         	movff	_Year+1,?_sprintf+5
  2087  00292A  EC39  F022         	call	_sprintf	;wreg free
  2088  00292E  0E02               	movlw	2
  2089  002930  6E0B               	movwf	LCD_String_xy@pos^0,c
  2090  002932  0E79               	movlw	low RTC_Calendario@date
  2091  002934  6E0C               	movwf	LCD_String_xy@msg^0,c
  2092  002936  0E01               	movlw	high RTC_Calendario@date
  2093  002938  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2094  00293A  0E02               	movlw	2
  2095  00293C  ECB0  F023         	call	_LCD_String_xy
  2096  002940  0E83               	movlw	low RTC_Calendario@month
  2097  002942  6E09               	movwf	LCD_String@msg^0,c
  2098  002944  0E01               	movlw	high RTC_Calendario@month
  2099  002946  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2100  002948  EC28  F021         	call	_LCD_String	;wreg free
  2101  00294C  0E8D               	movlw	low RTC_Calendario@year
  2102  00294E  6E09               	movwf	LCD_String@msg^0,c
  2103  002950  0E01               	movlw	high RTC_Calendario@year
  2104  002952  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2105  002954  EC28  F021         	call	_LCD_String	;wreg free
  2106  002958  EFE6  F014         	goto	l5658
  2107  00295C                     l5614:
  2108                           
  2109                           ; BSR set to: 0
  2110  00295C  0E40               	movlw	low STR_12
  2111  00295E  6E09               	movwf	LCD_String@msg^0,c
  2112  002960  0E08               	movlw	high STR_12
  2113  002962  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2114  002964  EC28  F021         	call	_LCD_String	;wreg free
  2115  002968  EF17  F015         	goto	l345
  2116  00296C                     l5620:
  2117                           
  2118                           ; BSR set to: 0
  2119  00296C  0E3C               	movlw	low STR_13
  2120  00296E  6E09               	movwf	LCD_String@msg^0,c
  2121  002970  0E08               	movlw	high STR_13
  2122  002972  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2123  002974  EC28  F021         	call	_LCD_String	;wreg free
  2124  002978  EF17  F015         	goto	l345
  2125  00297C                     l5626:
  2126                           
  2127                           ; BSR set to: 0
  2128  00297C  0E34               	movlw	low STR_14
  2129  00297E  6E09               	movwf	LCD_String@msg^0,c
  2130  002980  0E08               	movlw	high STR_14
  2131  002982  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2132  002984  EC28  F021         	call	_LCD_String	;wreg free
  2133  002988  EF17  F015         	goto	l345
  2134  00298C                     l5632:
  2135                           
  2136                           ; BSR set to: 0
  2137  00298C  0E30               	movlw	low STR_15
  2138  00298E  6E09               	movwf	LCD_String@msg^0,c
  2139  002990  0E08               	movlw	high STR_15
  2140  002992  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2141  002994  EC28  F021         	call	_LCD_String	;wreg free
  2142  002998  EF17  F015         	goto	l345
  2143  00299C                     l5638:
  2144                           
  2145                           ; BSR set to: 0
  2146  00299C  0E48               	movlw	low STR_16
  2147  00299E  6E09               	movwf	LCD_String@msg^0,c
  2148  0029A0  0E08               	movlw	high STR_16
  2149  0029A2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2150  0029A4  EC28  F021         	call	_LCD_String	;wreg free
  2151  0029A8  EF17  F015         	goto	l345
  2152  0029AC                     l5644:
  2153                           
  2154                           ; BSR set to: 0
  2155  0029AC  0E38               	movlw	low STR_17
  2156  0029AE  6E09               	movwf	LCD_String@msg^0,c
  2157  0029B0  0E08               	movlw	high STR_17
  2158  0029B2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2159  0029B4  EC28  F021         	call	_LCD_String	;wreg free
  2160  0029B8  EF17  F015         	goto	l345
  2161  0029BC                     l5650:
  2162                           
  2163                           ; BSR set to: 0
  2164  0029BC  0E44               	movlw	low STR_18
  2165  0029BE  6E09               	movwf	LCD_String@msg^0,c
  2166  0029C0  0E08               	movlw	high STR_18
  2167  0029C2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2168  0029C4  EC28  F021         	call	_LCD_String	;wreg free
  2169  0029C8  EF17  F015         	goto	l345
  2170  0029CC                     l5658:
  2171  0029CC  0E72               	movlw	low RTC_Calendario@days
  2172  0029CE  0101               	movlb	1	; () banked
  2173  0029D0  2506               	addwf	_Day& (0+255),w,b
  2174  0029D2  6ED9               	movwf	fsr2l,c
  2175  0029D4  0E01               	movlw	high RTC_Calendario@days
  2176  0029D6  2107               	addwfc	(_Day+1)& (0+255),w,b
  2177  0029D8  6EDA               	movwf	fsr2h,c
  2178  0029DA  50DF               	movf	indf2,w,c
  2179  0029DC  0100               	movlb	0	; () banked
  2180  0029DE  6FDC               	movwf	??_RTC_Calendario& (0+255),b
  2181  0029E0  6BDD               	clrf	(??_RTC_Calendario+1)& (0+255),b
  2182                           
  2183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2184                           ; Switch size 1, requested type "simple"
  2185                           ; Number of cases is 1, Range of values is 0 to 0
  2186                           ; switch strategies available:
  2187                           ; Name         Instructions Cycles
  2188                           ; simple_byte            4     3 (average)
  2189                           ;	Chosen strategy is simple_byte
  2190  0029E2  51DD               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2191  0029E4  0A00               	xorlw	0	; case 0
  2192  0029E6  B4D8               	btfsc	status,2,c
  2193  0029E8  EFF8  F014         	goto	l5876
  2194  0029EC  EF17  F015         	goto	l345
  2195  0029F0                     l5876:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 7, Range of values is 70 to 116
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte           22    12 (average)
  2203                           ;	Chosen strategy is simple_byte
  2204  0029F0  51DC               	movf	??_RTC_Calendario& (0+255),w,b
  2205  0029F2  0A46               	xorlw	70	; case 70
  2206  0029F4  B4D8               	btfsc	status,2,c
  2207  0029F6  EFD6  F014         	goto	l5644
  2208  0029FA  0A0B               	xorlw	11	; case 77
  2209  0029FC  B4D8               	btfsc	status,2,c
  2210  0029FE  EFB6  F014         	goto	l5620
  2211  002A02  0A1E               	xorlw	30	; case 83
  2212  002A04  B4D8               	btfsc	status,2,c
  2213  002A06  EFAE  F014         	goto	l5614
  2214  002A0A  0A07               	xorlw	7	; case 84
  2215  002A0C  B4D8               	btfsc	status,2,c
  2216  002A0E  EFBE  F014         	goto	l5626
  2217  002A12  0A03               	xorlw	3	; case 87
  2218  002A14  B4D8               	btfsc	status,2,c
  2219  002A16  EFC6  F014         	goto	l5632
  2220  002A1A  0A24               	xorlw	36	; case 115
  2221  002A1C  B4D8               	btfsc	status,2,c
  2222  002A1E  EFDE  F014         	goto	l5650
  2223  002A22  0A07               	xorlw	7	; case 116
  2224  002A24  B4D8               	btfsc	status,2,c
  2225  002A26  EFCE  F014         	goto	l5638
  2226  002A2A  EF17  F015         	goto	l345
  2227  002A2E                     l345:
  2228  002A2E  0012               	return		;funcret
  2229  002A30                     __end_of_RTC_Calendario:
  2230                           	callstack 0
  2231                           
  2232 ;; *************** function _RTC_Read_Clock *****************
  2233 ;; Defined at:
  2234 ;;		line 28 in file "reloj.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  read_clock_a    1    wreg     unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2248 ;;      Params:         0       0       0       0       0       0       0       0       0
  2249 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2250 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2251 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2252 ;;Total ram usage:        2 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 3
  2255 ;; This function calls:
  2256 ;;		_I2C_Read
  2257 ;;		_I2C_Repeated_Start
  2258 ;;		_I2C_Start
  2259 ;;		_I2C_Write
  2260 ;; This function is called by:
  2261 ;;		_RTC_Calendario
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text5
  2266  004690                     __ptext5:
  2267                           	callstack 0
  2268  004690                     _RTC_Read_Clock:
  2269                           	callstack 26
  2270                           
  2271                           ;incstack = 0
  2272                           ;RTC_Read_Clock@read_clock_address stored from wreg
  2273  004690  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  2274  004692  0ED0               	movlw	208
  2275  004694  ECFE  F024         	call	_I2C_Start
  2276  004698  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  2277  00469A  EC3F  F025         	call	_I2C_Write
  2278  00469E  0ED1               	movlw	209
  2279  0046A0  EC15  F025         	call	_I2C_Repeated_Start
  2280  0046A4  0E00               	movlw	0
  2281  0046A6  ECEE  F023         	call	_I2C_Read
  2282  0046AA  6E03               	movwf	??_RTC_Read_Clock^0,c
  2283  0046AC  5003               	movf	??_RTC_Read_Clock^0,w,c
  2284  0046AE  0101               	movlb	1	; () banked
  2285  0046B0  6F0C               	movwf	_sec& (0+255),b
  2286  0046B2  6B0D               	clrf	(_sec+1)& (0+255),b
  2287  0046B4                     
  2288                           ; BSR set to: 1
  2289  0046B4  0E00               	movlw	0
  2290  0046B6  ECEE  F023         	call	_I2C_Read
  2291  0046BA  6E03               	movwf	??_RTC_Read_Clock^0,c
  2292  0046BC  5003               	movf	??_RTC_Read_Clock^0,w,c
  2293  0046BE  0101               	movlb	1	; () banked
  2294  0046C0  6F0A               	movwf	_min& (0+255),b
  2295  0046C2  6B0B               	clrf	(_min+1)& (0+255),b
  2296  0046C4                     
  2297                           ; BSR set to: 1
  2298  0046C4  0E01               	movlw	1
  2299  0046C6  ECEE  F023         	call	_I2C_Read
  2300  0046CA  6E03               	movwf	??_RTC_Read_Clock^0,c
  2301  0046CC  5003               	movf	??_RTC_Read_Clock^0,w,c
  2302  0046CE  0101               	movlb	1	; () banked
  2303  0046D0  6F08               	movwf	_hour& (0+255),b
  2304  0046D2  6B09               	clrf	(_hour+1)& (0+255),b
  2305  0046D4                     
  2306                           ; BSR set to: 1
  2307  0046D4  0012               	return		;funcret
  2308  0046D6                     __end_of_RTC_Read_Clock:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function _RTC_Read_Calendar *****************
  2312 ;; Defined at:
  2313 ;;		line 51 in file "reloj.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  read_calenda    1    wreg     unsigned char 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  read_calenda    1    3[COMRAM] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0
  2328 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2329 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2330 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2331 ;;Total ram usage:        2 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 3
  2334 ;; This function calls:
  2335 ;;		_I2C_Read
  2336 ;;		_I2C_Repeated_Start
  2337 ;;		_I2C_Start
  2338 ;;		_I2C_Stop
  2339 ;;		_I2C_Write
  2340 ;; This function is called by:
  2341 ;;		_RTC_Calendario
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text6
  2346  0043BE                     __ptext6:
  2347                           	callstack 0
  2348  0043BE                     _RTC_Read_Calendar:
  2349                           	callstack 26
  2350                           
  2351                           ; BSR set to: 1
  2352                           ;incstack = 0
  2353                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  2354  0043BE  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  2355  0043C0  0ED0               	movlw	208
  2356  0043C2  ECFE  F024         	call	_I2C_Start
  2357  0043C6  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  2358  0043C8  EC3F  F025         	call	_I2C_Write
  2359  0043CC  0ED1               	movlw	209
  2360  0043CE  EC15  F025         	call	_I2C_Repeated_Start
  2361  0043D2  0E00               	movlw	0
  2362  0043D4  ECEE  F023         	call	_I2C_Read
  2363  0043D8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2364  0043DA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2365  0043DC  0101               	movlb	1	; () banked
  2366  0043DE  6F06               	movwf	_Day& (0+255),b
  2367  0043E0  6B07               	clrf	(_Day+1)& (0+255),b
  2368  0043E2                     
  2369                           ; BSR set to: 1
  2370  0043E2  0E00               	movlw	0
  2371  0043E4  ECEE  F023         	call	_I2C_Read
  2372  0043E8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2373  0043EA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2374  0043EC  0101               	movlb	1	; () banked
  2375  0043EE  6F04               	movwf	_Date& (0+255),b
  2376  0043F0  6B05               	clrf	(_Date+1)& (0+255),b
  2377  0043F2                     
  2378                           ; BSR set to: 1
  2379  0043F2  0E00               	movlw	0
  2380  0043F4  ECEE  F023         	call	_I2C_Read
  2381  0043F8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2382  0043FA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2383  0043FC  0101               	movlb	1	; () banked
  2384  0043FE  6F02               	movwf	_Month& (0+255),b
  2385  004400  6B03               	clrf	(_Month+1)& (0+255),b
  2386  004402                     
  2387                           ; BSR set to: 1
  2388  004402  0E01               	movlw	1
  2389  004404  ECEE  F023         	call	_I2C_Read
  2390  004408  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2391  00440A  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2392  00440C  0101               	movlb	1	; () banked
  2393  00440E  6F00               	movwf	_Year& (0+255),b
  2394  004410  6B01               	clrf	(_Year+1)& (0+255),b
  2395  004412                     
  2396                           ; BSR set to: 1
  2397  004412  EC68  F025         	call	_I2C_Stop	;wreg free
  2398  004416  0012               	return		;funcret
  2399  004418                     __end_of_RTC_Read_Calendar:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _I2C_Stop *****************
  2403 ;; Defined at:
  2404 ;;		line 186 in file "Reloj_ar.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      unsigned char 
  2411 ;; Registers used:
  2412 ;;		wreg
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2421 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2422 ;;Total ram usage:        0 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_RTC_Read_Calendar
  2428 ;;		_RTC_Calendario
  2429 ;;		_I2C_Start_Wait
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text7
  2434  004AD0                     __ptext7:
  2435                           	callstack 0
  2436  004AD0                     _I2C_Stop:
  2437                           	callstack 28
  2438  004AD0                     
  2439                           ;Reloj_ar.c: 188:     PEN = 1;
  2440  004AD0  84C5               	bsf	4037,2,c	;volatile
  2441  004AD2                     l446:
  2442  004AD2  B4C5               	btfsc	4037,2,c	;volatile
  2443  004AD4  EF6E  F025         	goto	u5851
  2444  004AD8  EF70  F025         	goto	u5850
  2445  004ADC                     u5851:
  2446  004ADC  EF69  F025         	goto	l446
  2447  004AE0                     u5850:
  2448  004AE0                     
  2449                           ;Reloj_ar.c: 190:     if(!SSPSTATbits.P);
  2450  004AE0  50C7               	movf	199,w,c	;volatile
  2451  004AE2  0012               	return		;funcret
  2452  004AE4                     __end_of_I2C_Stop:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _I2C_Start *****************
  2456 ;; Defined at:
  2457 ;;		line 134 in file "Reloj_ar.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  slave_write_    1    wreg     unsigned char 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  slave_write_    1    1[COMRAM] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      unsigned char 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0
  2472 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2474 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2475 ;;Total ram usage:        1 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 2
  2478 ;; This function calls:
  2479 ;;		_I2C_Write
  2480 ;; This function is called by:
  2481 ;;		_RTC_Read_Clock
  2482 ;;		_RTC_Read_Calendar
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text8
  2487  0049FC                     __ptext8:
  2488                           	callstack 0
  2489  0049FC                     _I2C_Start:
  2490                           	callstack 26
  2491                           
  2492                           ;incstack = 0
  2493                           ;I2C_Start@slave_write_address stored from wreg
  2494  0049FC  6E02               	movwf	I2C_Start@slave_write_address^0,c
  2495  0049FE                     
  2496                           ;Reloj_ar.c: 134: char I2C_Start(char slave_write_address);Reloj_ar.c: 135: {;Reloj_ar.c
      +                          : 136:     SSPCON2bits.SEN=1;
  2497  0049FE  80C5               	bsf	197,0,c	;volatile
  2498  004A00                     l430:
  2499  004A00  B0C5               	btfsc	197,0,c	;volatile
  2500  004A02  EF05  F025         	goto	u5791
  2501  004A06  EF07  F025         	goto	u5790
  2502  004A0A                     u5791:
  2503  004A0A  EF00  F025         	goto	l430
  2504  004A0E                     u5790:
  2505  004A0E                     
  2506                           ;Reloj_ar.c: 138:  SSPIF=0;
  2507  004A0E  969E               	bcf	3998,3,c	;volatile
  2508                           
  2509                           ;Reloj_ar.c: 139:     if(!SSPSTATbits.S)
  2510  004A10  B6C7               	btfsc	199,3,c	;volatile
  2511  004A12  EF0D  F025         	goto	u5801
  2512  004A16  EF0F  F025         	goto	u5800
  2513  004A1A                     u5801:
  2514  004A1A  EF11  F025         	goto	l5298
  2515  004A1E                     u5800:
  2516  004A1E  EF14  F025         	goto	l434
  2517  004A22                     l5298:
  2518                           
  2519                           ;Reloj_ar.c: 141:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Sta
      +                          rt is never used
  2520  004A22  5002               	movf	I2C_Start@slave_write_address^0,w,c
  2521  004A24  EC3F  F025         	call	_I2C_Write
  2522  004A28                     l434:
  2523  004A28  0012               	return		;funcret
  2524  004A2A                     __end_of_I2C_Start:
  2525                           	callstack 0
  2526                           
  2527 ;; *************** function _I2C_Repeated_Start *****************
  2528 ;; Defined at:
  2529 ;;		line 159 in file "Reloj_ar.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  slave_read_a    1    wreg     unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      unsigned char 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0
  2544 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2546 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2547 ;;Total ram usage:        1 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; Hardware stack levels required when called: 2
  2550 ;; This function calls:
  2551 ;;		_I2C_Write
  2552 ;; This function is called by:
  2553 ;;		_RTC_Read_Clock
  2554 ;;		_RTC_Read_Calendar
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text9
  2559  004A2A                     __ptext9:
  2560                           	callstack 0
  2561  004A2A                     _I2C_Repeated_Start:
  2562                           	callstack 26
  2563                           
  2564                           ;incstack = 0
  2565                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  2566  004A2A  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  2567  004A2C                     
  2568                           ;Reloj_ar.c: 159: char I2C_Repeated_Start(char slave_read_address);Reloj_ar.c: 160: {;Re
      +                          loj_ar.c: 161:     RSEN = 1;
  2569  004A2C  82C5               	bsf	4037,1,c	;volatile
  2570  004A2E                     l437:
  2571  004A2E  B2C5               	btfsc	4037,1,c	;volatile
  2572  004A30  EF1C  F025         	goto	u5811
  2573  004A34  EF1E  F025         	goto	u5810
  2574  004A38                     u5811:
  2575  004A38  EF17  F025         	goto	l437
  2576  004A3C                     u5810:
  2577  004A3C                     
  2578                           ;Reloj_ar.c: 163:     SSPIF = 0;
  2579  004A3C  969E               	bcf	3998,3,c	;volatile
  2580                           
  2581                           ;Reloj_ar.c: 164:  if(!SSPSTATbits.S)
  2582  004A3E  B6C7               	btfsc	199,3,c	;volatile
  2583  004A40  EF24  F025         	goto	u5821
  2584  004A44  EF26  F025         	goto	u5820
  2585  004A48                     u5821:
  2586  004A48  EF28  F025         	goto	l5306
  2587  004A4C                     u5820:
  2588  004A4C  EF2B  F025         	goto	l441
  2589  004A50                     l5306:
  2590                           
  2591                           ;Reloj_ar.c: 166:     I2C_Write(slave_read_address);
  2592  004A50  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  2593  004A52  EC3F  F025         	call	_I2C_Write
  2594  004A56                     l441:
  2595  004A56  0012               	return		;funcret
  2596  004A58                     __end_of_I2C_Repeated_Start:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function _I2C_Write *****************
  2600 ;; Defined at:
  2601 ;;		line 208 in file "Reloj_ar.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  data            1    wreg     unsigned char 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  data            1    0[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      unsigned char 
  2608 ;; Registers used:
  2609 ;;		wreg, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0
  2616 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2618 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2619 ;;Total ram usage:        1 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; Hardware stack levels required when called: 1
  2622 ;; This function calls:
  2623 ;;		_I2C_Ready
  2624 ;; This function is called by:
  2625 ;;		_RTC_Read_Clock
  2626 ;;		_RTC_Read_Calendar
  2627 ;;		_I2C_Start
  2628 ;;		_I2C_Repeated_Start
  2629 ;;		_I2C_Start_Wait
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text10
  2634  004A7E                     __ptext10:
  2635                           	callstack 0
  2636  004A7E                     _I2C_Write:
  2637                           	callstack 27
  2638                           
  2639                           ;incstack = 0
  2640                           ;I2C_Write@data stored from wreg
  2641  004A7E  6E01               	movwf	I2C_Write@data^0,c
  2642  004A80                     
  2643                           ;Reloj_ar.c: 208: char I2C_Write(unsigned char data);Reloj_ar.c: 209: {;Reloj_ar.c: 210:
      +                                 SSPBUF = data;
  2644  004A80  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  2645  004A84                     
  2646                           ;Reloj_ar.c: 211:       I2C_Ready();
  2647  004A84  EC90  F025         	call	_I2C_Ready	;wreg free
  2648  004A88                     
  2649                           ;Reloj_ar.c: 212:       if (ACKSTAT)
  2650  004A88  ACC5               	btfss	4037,6,c	;volatile
  2651  004A8A  EF49  F025         	goto	u5521
  2652  004A8E  EF4B  F025         	goto	u5520
  2653  004A92                     u5521:
  2654  004A92  EF4E  F025         	goto	l5084
  2655  004A96                     u5520:
  2656  004A96                     
  2657                           ;Reloj_ar.c: 213:         return 1;
  2658  004A96  0E01               	movlw	1
  2659  004A98  EF4F  F025         	goto	l454
  2660  004A9C                     l5084:
  2661                           
  2662                           ;Reloj_ar.c: 215:         return 2;
  2663  004A9C  0E02               	movlw	2
  2664  004A9E                     l454:
  2665  004A9E  0012               	return		;funcret
  2666  004AA0                     __end_of_I2C_Write:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function _I2C_Read *****************
  2670 ;; Defined at:
  2671 ;;		line 27 in file "Reloj_ar.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  flag            1    wreg     unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  flag            1    0[COMRAM] unsigned char 
  2676 ;;  buffer          1    1[COMRAM] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      unsigned char 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2686 ;;      Params:         0       0       0       0       0       0       0       0       0
  2687 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2689 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2690 ;;Total ram usage:        2 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 1
  2693 ;; This function calls:
  2694 ;;		_I2C_Ack
  2695 ;;		_I2C_Nack
  2696 ;;		_I2C_Ready
  2697 ;; This function is called by:
  2698 ;;		_RTC_Read_Clock
  2699 ;;		_RTC_Read_Calendar
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text11
  2704  0047DC                     __ptext11:
  2705                           	callstack 0
  2706  0047DC                     _I2C_Read:
  2707                           	callstack 27
  2708                           
  2709                           ;incstack = 0
  2710                           ;I2C_Read@flag stored from wreg
  2711  0047DC  6E01               	movwf	I2C_Read@flag^0,c
  2712  0047DE                     
  2713                           ;Reloj_ar.c: 27: char I2C_Read(char flag);Reloj_ar.c: 29: {;Reloj_ar.c: 30:         char
      +                           buffer;;Reloj_ar.c: 31:         RCEN = 1;
  2714  0047DE  86C5               	bsf	4037,3,c	;volatile
  2715  0047E0                     l402:
  2716  0047E0  A0C7               	btfss	199,0,c	;volatile
  2717  0047E2  EFF5  F023         	goto	u5831
  2718  0047E6  EFF7  F023         	goto	u5830
  2719  0047EA                     u5831:
  2720  0047EA  EFF0  F023         	goto	l402
  2721  0047EE                     u5830:
  2722  0047EE                     
  2723                           ;Reloj_ar.c: 34:         buffer = SSPBUF;
  2724  0047EE  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  2725  0047F2                     
  2726                           ;Reloj_ar.c: 36:         if(flag==0)
  2727  0047F2  5001               	movf	I2C_Read@flag^0,w,c
  2728  0047F4  A4D8               	btfss	status,2,c
  2729  0047F6  EFFF  F023         	goto	u5841
  2730  0047FA  EF01  F024         	goto	u5840
  2731  0047FE                     u5841:
  2732  0047FE  EF05  F024         	goto	l5320
  2733  004802                     u5840:
  2734  004802                     
  2735                           ;Reloj_ar.c: 37:             I2C_Ack();
  2736  004802  EC7C  F025         	call	_I2C_Ack	;wreg free
  2737  004806  EF07  F024         	goto	l406
  2738  00480A                     l5320:
  2739                           
  2740                           ;Reloj_ar.c: 39:             I2C_Nack();
  2741  00480A  EC72  F025         	call	_I2C_Nack	;wreg free
  2742  00480E                     l406:
  2743                           
  2744                           ;Reloj_ar.c: 40:         I2C_Ready();
  2745  00480E  EC90  F025         	call	_I2C_Ready	;wreg free
  2746  004812                     
  2747                           ;Reloj_ar.c: 41:         return(buffer);
  2748  004812  5002               	movf	I2C_Read@buffer^0,w,c
  2749  004814  0012               	return		;funcret
  2750  004816                     __end_of_I2C_Read:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _I2C_Ready *****************
  2754 ;; Defined at:
  2755 ;;		line 83 in file "Reloj_ar.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		None
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_I2C_Read
  2779 ;;		_I2C_Write
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text12
  2784  004B20                     __ptext12:
  2785                           	callstack 0
  2786  004B20                     _I2C_Ready:
  2787                           	callstack 27
  2788  004B20                     l413:
  2789  004B20  A69E               	btfss	3998,3,c	;volatile
  2790  004B22  EF95  F025         	goto	u4671
  2791  004B26  EF97  F025         	goto	u4670
  2792  004B2A                     u4671:
  2793  004B2A  EF90  F025         	goto	l413
  2794  004B2E                     u4670:
  2795  004B2E                     
  2796                           ;Reloj_ar.c: 86:     SSPIF=0;
  2797  004B2E  969E               	bcf	3998,3,c	;volatile
  2798  004B30  0012               	return		;funcret
  2799  004B32                     __end_of_I2C_Ready:
  2800                           	callstack 0
  2801                           
  2802 ;; *************** function _I2C_Nack *****************
  2803 ;; Defined at:
  2804 ;;		line 250 in file "Reloj_ar.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		None
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_I2C_Read
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text13
  2832  004AE4                     __ptext13:
  2833                           	callstack 0
  2834  004AE4                     _I2C_Nack:
  2835                           	callstack 27
  2836  004AE4                     
  2837                           ;Reloj_ar.c: 252:     ACKDT=1;
  2838  004AE4  8AC5               	bsf	4037,5,c	;volatile
  2839                           
  2840                           ;Reloj_ar.c: 253:  ACKEN=1;
  2841  004AE6  88C5               	bsf	4037,4,c	;volatile
  2842  004AE8                     l464:
  2843  004AE8  B8C5               	btfsc	4037,4,c	;volatile
  2844  004AEA  EF79  F025         	goto	u5541
  2845  004AEE  EF7B  F025         	goto	u5540
  2846  004AF2                     u5541:
  2847  004AF2  EF74  F025         	goto	l464
  2848  004AF6                     u5540:
  2849  004AF6  0012               	return		;funcret
  2850  004AF8                     __end_of_I2C_Nack:
  2851                           	callstack 0
  2852                           
  2853 ;; *************** function _I2C_Ack *****************
  2854 ;; Defined at:
  2855 ;;		line 230 in file "Reloj_ar.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		None
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0
  2870 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2872 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2873 ;;Total ram usage:        0 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_I2C_Read
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text14
  2883  004AF8                     __ptext14:
  2884                           	callstack 0
  2885  004AF8                     _I2C_Ack:
  2886                           	callstack 27
  2887  004AF8                     
  2888                           ;Reloj_ar.c: 232:     ACKDT=0;
  2889  004AF8  9AC5               	bcf	4037,5,c	;volatile
  2890                           
  2891                           ;Reloj_ar.c: 233:  ACKEN=1;
  2892  004AFA  88C5               	bsf	4037,4,c	;volatile
  2893  004AFC                     l458:
  2894  004AFC  B8C5               	btfsc	4037,4,c	;volatile
  2895  004AFE  EF83  F025         	goto	u5531
  2896  004B02  EF85  F025         	goto	u5530
  2897  004B06                     u5531:
  2898  004B06  EF7E  F025         	goto	l458
  2899  004B0A                     u5530:
  2900  004B0A  0012               	return		;funcret
  2901  004B0C                     __end_of_I2C_Ack:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _LCD_Init *****************
  2905 ;; Defined at:
  2906 ;;		line 23 in file "LCD_caracter.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; Hardware stack levels required when called: 2
  2927 ;; This function calls:
  2928 ;;		_LCD_Command
  2929 ;;		_LCD_MSdelay
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;;		_RTC_Calendario
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text15
  2937  0049CC                     __ptext15:
  2938                           	callstack 0
  2939  0049CC                     _LCD_Init:
  2940                           	callstack 27
  2941  0049CC                     
  2942                           ;LCD_caracter.c: 25:     TRISD = 0;
  2943  0049CC  0E00               	movlw	0
  2944  0049CE  6E95               	movwf	149,c	;volatile
  2945  0049D0                     
  2946                           ;LCD_caracter.c: 26:     LCD_MSdelay(15);
  2947  0049D0  0E00               	movlw	0
  2948  0049D2  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  2949  0049D4  0E0F               	movlw	15
  2950  0049D6  6E01               	movwf	LCD_MSdelay@val^0,c
  2951  0049D8  ECFF  F022         	call	_LCD_MSdelay	;wreg free
  2952  0049DC                     
  2953                           ;LCD_caracter.c: 27:     LCD_Command(0x02);
  2954  0049DC  0E02               	movlw	2
  2955  0049DE  ECB3  F022         	call	_LCD_Command
  2956  0049E2                     
  2957                           ;LCD_caracter.c: 29:     LCD_Command(0x28);
  2958  0049E2  0E28               	movlw	40
  2959  0049E4  ECB3  F022         	call	_LCD_Command
  2960  0049E8                     
  2961                           ;LCD_caracter.c: 31:  LCD_Command(0x01);
  2962  0049E8  0E01               	movlw	1
  2963  0049EA  ECB3  F022         	call	_LCD_Command
  2964  0049EE                     
  2965                           ;LCD_caracter.c: 32:     LCD_Command(0x0c);
  2966  0049EE  0E0C               	movlw	12
  2967  0049F0  ECB3  F022         	call	_LCD_Command
  2968  0049F4                     
  2969                           ;LCD_caracter.c: 33:  LCD_Command(0x06);
  2970  0049F4  0E06               	movlw	6
  2971  0049F6  ECB3  F022         	call	_LCD_Command
  2972  0049FA  0012               	return		;funcret
  2973  0049FC                     __end_of_LCD_Init:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _LCD_Clear *****************
  2977 ;; Defined at:
  2978 ;;		line 155 in file "LCD_caracter.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2995 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 2
  2999 ;; This function calls:
  3000 ;;		_LCD_Command
  3001 ;;		_LCD_MSdelay
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;;		_RTC_Calendario
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text16
  3009  004B0C                     __ptext16:
  3010                           	callstack 0
  3011  004B0C                     _LCD_Clear:
  3012                           	callstack 27
  3013  004B0C                     
  3014                           ;LCD_caracter.c: 157:     LCD_Command(0x01);
  3015  004B0C  0E01               	movlw	1
  3016  004B0E  ECB3  F022         	call	_LCD_Command
  3017                           
  3018                           ;LCD_caracter.c: 158:     LCD_MSdelay(3);
  3019  004B12  0E00               	movlw	0
  3020  004B14  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  3021  004B16  0E03               	movlw	3
  3022  004B18  6E01               	movwf	LCD_MSdelay@val^0,c
  3023  004B1A  ECFF  F022         	call	_LCD_MSdelay	;wreg free
  3024  004B1E  0012               	return		;funcret
  3025  004B20                     __end_of_LCD_Clear:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function _I2C_Init *****************
  3029 ;; Defined at:
  3030 ;;		line 57 in file "Reloj_ar.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3047 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;;		_RTC_Calendario
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text17
  3059  004AA0                     __ptext17:
  3060                           	callstack 0
  3061  004AA0                     _I2C_Init:
  3062                           	callstack 29
  3063  004AA0                     
  3064                           ;Reloj_ar.c: 59:     TRISB0=1;
  3065  004AA0  8093               	bsf	3987,0,c	;volatile
  3066                           
  3067                           ;Reloj_ar.c: 60:  TRISB1=1;
  3068  004AA2  8293               	bsf	3987,1,c	;volatile
  3069  004AA4                     
  3070                           ;Reloj_ar.c: 61:  SSPSTAT=80;
  3071  004AA4  0E50               	movlw	80
  3072  004AA6  6EC7               	movwf	199,c	;volatile
  3073                           
  3074                           ;Reloj_ar.c: 62:     SSPCON1=0x28;
  3075  004AA8  0E28               	movlw	40
  3076  004AAA  6EC6               	movwf	198,c	;volatile
  3077                           
  3078                           ;Reloj_ar.c: 64:  SSPCON2=0;
  3079  004AAC  0E00               	movlw	0
  3080  004AAE  6EC5               	movwf	197,c	;volatile
  3081                           
  3082                           ;Reloj_ar.c: 65:     SSPADD=((8000000/(4*100000))-1);
  3083  004AB0  0E13               	movlw	19
  3084  004AB2  6EC8               	movwf	200,c	;volatile
  3085  004AB4                     
  3086                           ;Reloj_ar.c: 66:     SSPIE=1;
  3087  004AB4  869D               	bsf	3997,3,c	;volatile
  3088  004AB6                     
  3089                           ;Reloj_ar.c: 67:     SSPIF=0;
  3090  004AB6  969E               	bcf	3998,3,c	;volatile
  3091  004AB8  0012               	return		;funcret
  3092  004ABA                     __end_of_I2C_Init:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function _Estados *****************
  3096 ;; Defined at:
  3097 ;;		line 25 in file "Estados.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  2    6[BANK0 ] int 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3111 ;;      Params:         0       2       0       0       0       0       0       0       0
  3112 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3114 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3115 ;;Total ram usage:        6 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 2
  3118 ;; This function calls:
  3119 ;;		_ReadADC
  3120 ;;		_ReadLUZ
  3121 ;;		___flge
  3122 ;;		___xxtofl
  3123 ;; This function is called by:
  3124 ;;		_main
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text18
  3129  002D0A                     __ptext18:
  3130                           	callstack 0
  3131  002D0A                     _Estados:
  3132                           	callstack 28
  3133  002D0A                     
  3134                           ;Estados.c: 26:     tempar = ReadADC();
  3135  002D0A  EC20  F01C         	call	_ReadADC	;wreg free
  3136  002D0E  0100               	movlb	0	; () banked
  3137  002D10  C060  F068         	movff	?_ReadADC,_Estados$1937
  3138  002D14  C061  F069         	movff	?_ReadADC+1,_Estados$1937+1
  3139  002D18  6B6A               	clrf	(_Estados$1937+2)& (0+255),b
  3140  002D1A  6B6B               	clrf	(_Estados$1937+3)& (0+255),b
  3141  002D1C                     
  3142                           ; BSR set to: 0
  3143                           ;Estados.c: 26:     tempar = ReadADC();
  3144  002D1C  C068  F005         	movff	_Estados$1937,___xxtofl@val
  3145  002D20  C069  F006         	movff	_Estados$1937+1,___xxtofl@val+1
  3146  002D24  C06A  F007         	movff	_Estados$1937+2,___xxtofl@val+2
  3147  002D28  C06B  F008         	movff	_Estados$1937+3,___xxtofl@val+3
  3148  002D2C  0E00               	movlw	0
  3149  002D2E  ECCD  F018         	call	___xxtofl
  3150  002D32  C005  F0EE         	movff	?___xxtofl,_tempar
  3151  002D36  C006  F0EF         	movff	?___xxtofl+1,_tempar+1
  3152  002D3A  C007  F0F0         	movff	?___xxtofl+2,_tempar+2
  3153  002D3E  C008  F0F1         	movff	?___xxtofl+3,_tempar+3
  3154  002D42                     
  3155                           ;Estados.c: 27:     luz = ReadLUZ();
  3156  002D42  EC64  F020         	call	_ReadLUZ	;wreg free
  3157  002D46  C001  F005         	movff	?_ReadLUZ,___xxtofl@val
  3158  002D4A  C002  F006         	movff	?_ReadLUZ+1,___xxtofl@val+1
  3159  002D4E  6A07               	clrf	(___xxtofl@val+2)^0,c
  3160  002D50  6A08               	clrf	(___xxtofl@val+3)^0,c
  3161  002D52  0E00               	movlw	0
  3162  002D54  ECCD  F018         	call	___xxtofl
  3163  002D58  C005  F0EA         	movff	?___xxtofl,_luz
  3164  002D5C  C006  F0EB         	movff	?___xxtofl+1,_luz+1
  3165  002D60  C007  F0EC         	movff	?___xxtofl+2,_luz+2
  3166  002D64  C008  F0ED         	movff	?___xxtofl+3,_luz+3
  3167  002D68                     
  3168                           ;Estados.c: 30:     if (tempar > 15 && (luz > 0 && luz < 400)) {
  3169  002D68  0E00               	movlw	0
  3170  002D6A  6E2C               	movwf	___flge@ff1^0,c
  3171  002D6C  0E00               	movlw	0
  3172  002D6E  6E2D               	movwf	(___flge@ff1+1)^0,c
  3173  002D70  0E70               	movlw	112
  3174  002D72  6E2E               	movwf	(___flge@ff1+2)^0,c
  3175  002D74  0E41               	movlw	65
  3176  002D76  6E2F               	movwf	(___flge@ff1+3)^0,c
  3177  002D78  C0EE  F030         	movff	_tempar,___flge@ff2
  3178  002D7C  C0EF  F031         	movff	_tempar+1,___flge@ff2+1
  3179  002D80  C0F0  F032         	movff	_tempar+2,___flge@ff2+2
  3180  002D84  C0F1  F033         	movff	_tempar+3,___flge@ff2+3
  3181  002D88  EC9E  F01B         	call	___flge	;wreg free
  3182  002D8C  B0D8               	btfsc	status,0,c
  3183  002D8E  EFCB  F016         	goto	u6071
  3184  002D92  EFCD  F016         	goto	u6070
  3185  002D96                     u6071:
  3186  002D96  EF08  F017         	goto	l5682
  3187  002D9A                     u6070:
  3188  002D9A  0E00               	movlw	0
  3189  002D9C  6E2C               	movwf	___flge@ff1^0,c
  3190  002D9E  0E00               	movlw	0
  3191  002DA0  6E2D               	movwf	(___flge@ff1+1)^0,c
  3192  002DA2  0E00               	movlw	0
  3193  002DA4  6E2E               	movwf	(___flge@ff1+2)^0,c
  3194  002DA6  0E00               	movlw	0
  3195  002DA8  6E2F               	movwf	(___flge@ff1+3)^0,c
  3196  002DAA  C0EA  F030         	movff	_luz,___flge@ff2
  3197  002DAE  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3198  002DB2  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3199  002DB6  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3200  002DBA  EC9E  F01B         	call	___flge	;wreg free
  3201  002DBE  B0D8               	btfsc	status,0,c
  3202  002DC0  EFE4  F016         	goto	u6081
  3203  002DC4  EFE6  F016         	goto	u6080
  3204  002DC8                     u6081:
  3205  002DC8  EF08  F017         	goto	l5682
  3206  002DCC                     u6080:
  3207  002DCC  C0EA  F02C         	movff	_luz,___flge@ff1
  3208  002DD0  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3209  002DD4  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3210  002DD8  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3211  002DDC  0E00               	movlw	0
  3212  002DDE  6E30               	movwf	___flge@ff2^0,c
  3213  002DE0  0E00               	movlw	0
  3214  002DE2  6E31               	movwf	(___flge@ff2+1)^0,c
  3215  002DE4  0EC8               	movlw	200
  3216  002DE6  6E32               	movwf	(___flge@ff2+2)^0,c
  3217  002DE8  0E43               	movlw	67
  3218  002DEA  6E33               	movwf	(___flge@ff2+3)^0,c
  3219  002DEC  EC9E  F01B         	call	___flge	;wreg free
  3220  002DF0  B0D8               	btfsc	status,0,c
  3221  002DF2  EFFD  F016         	goto	u6091
  3222  002DF6  EFFF  F016         	goto	u6090
  3223  002DFA                     u6091:
  3224  002DFA  EF08  F017         	goto	l5682
  3225  002DFE                     u6090:
  3226  002DFE                     
  3227                           ;Estados.c: 31:         return 1;
  3228  002DFE  0E00               	movlw	0
  3229  002E00  0100               	movlb	0	; () banked
  3230  002E02  6F67               	movwf	(?_Estados+1)& (0+255),b
  3231  002E04  0E01               	movlw	1
  3232  002E06  6F66               	movwf	?_Estados& (0+255),b
  3233  002E08  EFC3  F017         	goto	l517
  3234  002E0C                     l5678:
  3235  002E0C  EFC3  F017         	goto	l517
  3236  002E10                     l5682:
  3237  002E10  C0EE  F02C         	movff	_tempar,___flge@ff1
  3238  002E14  C0EF  F02D         	movff	_tempar+1,___flge@ff1+1
  3239  002E18  C0F0  F02E         	movff	_tempar+2,___flge@ff1+2
  3240  002E1C  C0F1  F02F         	movff	_tempar+3,___flge@ff1+3
  3241  002E20  0E00               	movlw	0
  3242  002E22  6E30               	movwf	___flge@ff2^0,c
  3243  002E24  0E00               	movlw	0
  3244  002E26  6E31               	movwf	(___flge@ff2+1)^0,c
  3245  002E28  0E40               	movlw	64
  3246  002E2A  6E32               	movwf	(___flge@ff2+2)^0,c
  3247  002E2C  0E41               	movlw	65
  3248  002E2E  6E33               	movwf	(___flge@ff2+3)^0,c
  3249  002E30  EC9E  F01B         	call	___flge	;wreg free
  3250  002E34  A0D8               	btfss	status,0,c
  3251  002E36  EF1F  F017         	goto	u6101
  3252  002E3A  EF21  F017         	goto	u6100
  3253  002E3E                     u6101:
  3254  002E3E  EF73  F017         	goto	l5696
  3255  002E42                     u6100:
  3256  002E42  0E00               	movlw	0
  3257  002E44  6E2C               	movwf	___flge@ff1^0,c
  3258  002E46  0E00               	movlw	0
  3259  002E48  6E2D               	movwf	(___flge@ff1+1)^0,c
  3260  002E4A  0E70               	movlw	112
  3261  002E4C  6E2E               	movwf	(___flge@ff1+2)^0,c
  3262  002E4E  0E41               	movlw	65
  3263  002E50  6E2F               	movwf	(___flge@ff1+3)^0,c
  3264  002E52  C0EE  F030         	movff	_tempar,___flge@ff2
  3265  002E56  C0EF  F031         	movff	_tempar+1,___flge@ff2+1
  3266  002E5A  C0F0  F032         	movff	_tempar+2,___flge@ff2+2
  3267  002E5E  C0F1  F033         	movff	_tempar+3,___flge@ff2+3
  3268  002E62  EC9E  F01B         	call	___flge	;wreg free
  3269  002E66  A0D8               	btfss	status,0,c
  3270  002E68  EF38  F017         	goto	u6111
  3271  002E6C  EF3A  F017         	goto	u6110
  3272  002E70                     u6111:
  3273  002E70  EF73  F017         	goto	l5696
  3274  002E74                     u6110:
  3275  002E74  0E00               	movlw	0
  3276  002E76  6E2C               	movwf	___flge@ff1^0,c
  3277  002E78  0E00               	movlw	0
  3278  002E7A  6E2D               	movwf	(___flge@ff1+1)^0,c
  3279  002E7C  0EC8               	movlw	200
  3280  002E7E  6E2E               	movwf	(___flge@ff1+2)^0,c
  3281  002E80  0E43               	movlw	67
  3282  002E82  6E2F               	movwf	(___flge@ff1+3)^0,c
  3283  002E84  C0EA  F030         	movff	_luz,___flge@ff2
  3284  002E88  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3285  002E8C  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3286  002E90  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3287  002E94  EC9E  F01B         	call	___flge	;wreg free
  3288  002E98  B0D8               	btfsc	status,0,c
  3289  002E9A  EF51  F017         	goto	u6121
  3290  002E9E  EF53  F017         	goto	u6120
  3291  002EA2                     u6121:
  3292  002EA2  EF73  F017         	goto	l5696
  3293  002EA6                     u6120:
  3294  002EA6  C0EA  F02C         	movff	_luz,___flge@ff1
  3295  002EAA  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3296  002EAE  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3297  002EB2  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3298  002EB6  0E00               	movlw	0
  3299  002EB8  6E30               	movwf	___flge@ff2^0,c
  3300  002EBA  0E00               	movlw	0
  3301  002EBC  6E31               	movwf	(___flge@ff2+1)^0,c
  3302  002EBE  0E2F               	movlw	47
  3303  002EC0  6E32               	movwf	(___flge@ff2+2)^0,c
  3304  002EC2  0E44               	movlw	68
  3305  002EC4  6E33               	movwf	(___flge@ff2+3)^0,c
  3306  002EC6  EC9E  F01B         	call	___flge	;wreg free
  3307  002ECA  B0D8               	btfsc	status,0,c
  3308  002ECC  EF6A  F017         	goto	u6131
  3309  002ED0  EF6C  F017         	goto	u6130
  3310  002ED4                     u6131:
  3311  002ED4  EF73  F017         	goto	l5696
  3312  002ED8                     u6130:
  3313  002ED8                     
  3314                           ;Estados.c: 33:         return 2;
  3315  002ED8  0E00               	movlw	0
  3316  002EDA  0100               	movlb	0	; () banked
  3317  002EDC  6F67               	movwf	(?_Estados+1)& (0+255),b
  3318  002EDE  0E02               	movlw	2
  3319  002EE0  6F66               	movwf	?_Estados& (0+255),b
  3320  002EE2  EFC3  F017         	goto	l517
  3321  002EE6                     l5696:
  3322  002EE6  C0EE  F02C         	movff	_tempar,___flge@ff1
  3323  002EEA  C0EF  F02D         	movff	_tempar+1,___flge@ff1+1
  3324  002EEE  C0F0  F02E         	movff	_tempar+2,___flge@ff1+2
  3325  002EF2  C0F1  F02F         	movff	_tempar+3,___flge@ff1+3
  3326  002EF6  0E00               	movlw	0
  3327  002EF8  6E30               	movwf	___flge@ff2^0,c
  3328  002EFA  0E00               	movlw	0
  3329  002EFC  6E31               	movwf	(___flge@ff2+1)^0,c
  3330  002EFE  0E40               	movlw	64
  3331  002F00  6E32               	movwf	(___flge@ff2+2)^0,c
  3332  002F02  0E41               	movlw	65
  3333  002F04  6E33               	movwf	(___flge@ff2+3)^0,c
  3334  002F06  EC9E  F01B         	call	___flge	;wreg free
  3335  002F0A  B0D8               	btfsc	status,0,c
  3336  002F0C  EF8A  F017         	goto	u6141
  3337  002F10  EF8C  F017         	goto	u6140
  3338  002F14                     u6141:
  3339  002F14  EF06  F017         	goto	l5678
  3340  002F18                     u6140:
  3341  002F18  0E00               	movlw	0
  3342  002F1A  6E2C               	movwf	___flge@ff1^0,c
  3343  002F1C  0E00               	movlw	0
  3344  002F1E  6E2D               	movwf	(___flge@ff1+1)^0,c
  3345  002F20  0E2F               	movlw	47
  3346  002F22  6E2E               	movwf	(___flge@ff1+2)^0,c
  3347  002F24  0E44               	movlw	68
  3348  002F26  6E2F               	movwf	(___flge@ff1+3)^0,c
  3349  002F28  C0EA  F030         	movff	_luz,___flge@ff2
  3350  002F2C  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3351  002F30  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3352  002F34  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3353  002F38  EC9E  F01B         	call	___flge	;wreg free
  3354  002F3C  B0D8               	btfsc	status,0,c
  3355  002F3E  EFA3  F017         	goto	u6151
  3356  002F42  EFA5  F017         	goto	u6150
  3357  002F46                     u6151:
  3358  002F46  EF06  F017         	goto	l5678
  3359  002F4A                     u6150:
  3360  002F4A  C0EA  F02C         	movff	_luz,___flge@ff1
  3361  002F4E  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3362  002F52  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3363  002F56  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3364  002F5A  0E00               	movlw	0
  3365  002F5C  6E30               	movwf	___flge@ff2^0,c
  3366  002F5E  0E80               	movlw	128
  3367  002F60  6E31               	movwf	(___flge@ff2+1)^0,c
  3368  002F62  0EBB               	movlw	187
  3369  002F64  6E32               	movwf	(___flge@ff2+2)^0,c
  3370  002F66  0E44               	movlw	68
  3371  002F68  6E33               	movwf	(___flge@ff2+3)^0,c
  3372  002F6A  EC9E  F01B         	call	___flge	;wreg free
  3373  002F6E  B0D8               	btfsc	status,0,c
  3374  002F70  EFBC  F017         	goto	u6161
  3375  002F74  EFBE  F017         	goto	u6160
  3376  002F78                     u6161:
  3377  002F78  EF06  F017         	goto	l5678
  3378  002F7C                     u6160:
  3379  002F7C                     
  3380                           ;Estados.c: 36:         return 3;
  3381  002F7C  0E00               	movlw	0
  3382  002F7E  0100               	movlb	0	; () banked
  3383  002F80  6F67               	movwf	(?_Estados+1)& (0+255),b
  3384  002F82  0E03               	movlw	3
  3385  002F84  6F66               	movwf	?_Estados& (0+255),b
  3386  002F86                     l517:
  3387  002F86  0012               	return		;funcret
  3388  002F88                     __end_of_Estados:
  3389                           	callstack 0
  3390                           
  3391 ;; *************** function _ReadLUZ *****************
  3392 ;; Defined at:
  3393 ;;		line 21 in file "Sensor_luz.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  2    0[COMRAM] unsigned short 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3407 ;;      Params:         2       0       0       0       0       0       0       0       0
  3408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3409 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3410 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3411 ;;Total ram usage:        4 bytes
  3412 ;; Hardware stack levels used: 1
  3413 ;; This function calls:
  3414 ;;		Nothing
  3415 ;; This function is called by:
  3416 ;;		_Estados
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text19
  3421  0040C8                     __ptext19:
  3422                           	callstack 0
  3423  0040C8                     _ReadLUZ:
  3424                           	callstack 29
  3425  0040C8                     
  3426                           ;Sensor_luz.c: 23:     TRISD = 0x00;
  3427  0040C8  0E00               	movlw	0
  3428  0040CA  6E95               	movwf	149,c	;volatile
  3429  0040CC                     
  3430                           ;Sensor_luz.c: 24:     TRISA = 0xFF;
  3431  0040CC  6892               	setf	146,c	;volatile
  3432                           
  3433                           ;Sensor_luz.c: 26:     OSCCONbits.IRCF = 0b111;
  3434  0040CE  0E70               	movlw	112
  3435  0040D0  12D3               	iorwf	211,f,c	;volatile
  3436                           
  3437                           ;Sensor_luz.c: 27:     OSCCONbits.SCS = 0b10;
  3438  0040D2  50D3               	movf	211,w,c	;volatile
  3439  0040D4  0BFC               	andlw	-4
  3440  0040D6  0902               	iorlw	2
  3441  0040D8  6ED3               	movwf	211,c	;volatile
  3442                           
  3443                           ;Sensor_luz.c: 30:     ADCON1bits.PCFG = 0b1101;
  3444  0040DA  50C1               	movf	193,w,c	;volatile
  3445  0040DC  0BF0               	andlw	-16
  3446  0040DE  090D               	iorlw	13
  3447  0040E0  6EC1               	movwf	193,c	;volatile
  3448                           
  3449                           ;Sensor_luz.c: 31:     ADCON1bits.VCFG = 0b00;
  3450  0040E2  0ECF               	movlw	-49
  3451  0040E4  16C1               	andwf	193,f,c	;volatile
  3452                           
  3453                           ;Sensor_luz.c: 32:     ADCON0bits.CHS = 0b0001;
  3454  0040E6  50C2               	movf	194,w,c	;volatile
  3455  0040E8  0BC3               	andlw	-61
  3456  0040EA  0904               	iorlw	4
  3457  0040EC  6EC2               	movwf	194,c	;volatile
  3458                           
  3459                           ;Sensor_luz.c: 33:     ADCON2bits.ACQT = 0b010;
  3460  0040EE  50C0               	movf	192,w,c	;volatile
  3461  0040F0  0BC7               	andlw	-57
  3462  0040F2  0910               	iorlw	16
  3463  0040F4  6EC0               	movwf	192,c	;volatile
  3464                           
  3465                           ;Sensor_luz.c: 34:     ADCON2bits.ADCS = 0b001;
  3466  0040F6  50C0               	movf	192,w,c	;volatile
  3467  0040F8  0BF8               	andlw	-8
  3468  0040FA  0901               	iorlw	1
  3469  0040FC  6EC0               	movwf	192,c	;volatile
  3470  0040FE                     
  3471                           ;Sensor_luz.c: 35:     ADCON2bits.ADFM = 1;
  3472  0040FE  8EC0               	bsf	192,7,c	;volatile
  3473  004100                     
  3474                           ;Sensor_luz.c: 36:     ADCON0bits.ADON = 1;
  3475  004100  80C2               	bsf	194,0,c	;volatile
  3476  004102                     
  3477                           ;Sensor_luz.c: 39:         ADCON0bits.GO_DONE = 1;
  3478  004102  82C2               	bsf	194,1,c	;volatile
  3479  004104                     l217:
  3480  004104  B2C2               	btfsc	194,1,c	;volatile
  3481  004106  EF87  F020         	goto	u6021
  3482  00410A  EF89  F020         	goto	u6020
  3483  00410E                     u6021:
  3484  00410E  EF82  F020         	goto	l217
  3485  004112                     u6020:
  3486  004112                     
  3487                           ;Sensor_luz.c: 41:         result = ADRESH;
  3488  004112  CFC4 F0FA          	movff	4036,_result	;volatile
  3489  004116  0100               	movlb	0	; () banked
  3490  004118  6BFB               	clrf	(_result+1)& (0+255),b
  3491  00411A                     
  3492                           ; BSR set to: 0
  3493                           ;Sensor_luz.c: 42:         result = (result << 8) + ADRESL;
  3494  00411A  51FA               	movf	_result& (0+255),w,b
  3495  00411C  6E03               	movwf	??_ReadLUZ^0,c
  3496  00411E  50C3               	movf	195,w,c	;volatile
  3497  004120  6FFA               	movwf	_result& (0+255),b
  3498  004122  C003  F0FB         	movff	??_ReadLUZ,_result+1
  3499  004126                     
  3500                           ; BSR set to: 0
  3501                           ;Sensor_luz.c: 44:         return result;
  3502  004126  C0FA  F001         	movff	_result,?_ReadLUZ
  3503  00412A  C0FB  F002         	movff	_result+1,?_ReadLUZ+1
  3504  00412E                     
  3505                           ; BSR set to: 0
  3506  00412E  0012               	return		;funcret
  3507  004130                     __end_of_ReadLUZ:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _ReadADC *****************
  3511 ;; Defined at:
  3512 ;;		line 22 in file "Temperatura.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  result          2    4[BANK0 ] unsigned short 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  2    0[BANK0 ] unsigned short 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3526 ;;      Params:         0       2       0       0       0       0       0       0       0
  3527 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3528 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3529 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3530 ;;Total ram usage:        6 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 1
  3533 ;; This function calls:
  3534 ;;		___fladd
  3535 ;;		___fldiv
  3536 ;;		___flmul
  3537 ;;		___fltol
  3538 ;;		___xxtofl
  3539 ;; This function is called by:
  3540 ;;		_Estados
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text20
  3545  003840                     __ptext20:
  3546                           	callstack 0
  3547  003840                     _ReadADC:
  3548                           	callstack 28
  3549  003840                     
  3550                           ;Temperatura.c: 24:     uint16_t result;;Temperatura.c: 26:     TRISD = 0x00;
  3551  003840  0E00               	movlw	0
  3552  003842  6E95               	movwf	149,c	;volatile
  3553  003844                     
  3554                           ;Temperatura.c: 27:     TRISA = 0xFF;
  3555  003844  6892               	setf	146,c	;volatile
  3556                           
  3557                           ;Temperatura.c: 29:     OSCCONbits.IRCF = 0b111;
  3558  003846  0E70               	movlw	112
  3559  003848  12D3               	iorwf	211,f,c	;volatile
  3560                           
  3561                           ;Temperatura.c: 30:     OSCCONbits.SCS = 0b10;
  3562  00384A  50D3               	movf	211,w,c	;volatile
  3563  00384C  0BFC               	andlw	-4
  3564  00384E  0902               	iorlw	2
  3565  003850  6ED3               	movwf	211,c	;volatile
  3566                           
  3567                           ;Temperatura.c: 33:     ADCON1bits.PCFG = 0b1110;
  3568  003852  50C1               	movf	193,w,c	;volatile
  3569  003854  0BF0               	andlw	-16
  3570  003856  090E               	iorlw	14
  3571  003858  6EC1               	movwf	193,c	;volatile
  3572                           
  3573                           ;Temperatura.c: 34:     ADCON1bits.VCFG = 0b00;
  3574  00385A  0ECF               	movlw	-49
  3575  00385C  16C1               	andwf	193,f,c	;volatile
  3576                           
  3577                           ;Temperatura.c: 35:     ADCON0bits.CHS = 0b0000;
  3578  00385E  0EC3               	movlw	-61
  3579  003860  16C2               	andwf	194,f,c	;volatile
  3580                           
  3581                           ;Temperatura.c: 36:     ADCON2bits.ACQT = 0b010;
  3582  003862  50C0               	movf	192,w,c	;volatile
  3583  003864  0BC7               	andlw	-57
  3584  003866  0910               	iorlw	16
  3585  003868  6EC0               	movwf	192,c	;volatile
  3586                           
  3587                           ;Temperatura.c: 37:     ADCON2bits.ADCS = 0b001;
  3588  00386A  50C0               	movf	192,w,c	;volatile
  3589  00386C  0BF8               	andlw	-8
  3590  00386E  0901               	iorlw	1
  3591  003870  6EC0               	movwf	192,c	;volatile
  3592  003872                     
  3593                           ;Temperatura.c: 38:     ADCON2bits.ADFM = 1;
  3594  003872  8EC0               	bsf	192,7,c	;volatile
  3595  003874                     
  3596                           ;Temperatura.c: 39:     ADCON0bits.ADON = 1;
  3597  003874  80C2               	bsf	194,0,c	;volatile
  3598  003876                     
  3599                           ;Temperatura.c: 42:         ADCON0bits.GO_DONE = 1;
  3600  003876  82C2               	bsf	194,1,c	;volatile
  3601  003878                     l172:
  3602  003878  B2C2               	btfsc	194,1,c	;volatile
  3603  00387A  EF41  F01C         	goto	u6011
  3604  00387E  EF43  F01C         	goto	u6010
  3605  003882                     u6011:
  3606  003882  EF3C  F01C         	goto	l172
  3607  003886                     u6010:
  3608  003886                     
  3609                           ;Temperatura.c: 44:         result = ADRESH;
  3610  003886  CFC4 F064          	movff	4036,ReadADC@result	;volatile
  3611  00388A  0100               	movlb	0	; () banked
  3612  00388C  6B65               	clrf	(ReadADC@result+1)& (0+255),b
  3613  00388E                     
  3614                           ; BSR set to: 0
  3615                           ;Temperatura.c: 45:         result = (result << 8) + ADRESL;
  3616  00388E  5164               	movf	ReadADC@result& (0+255),w,b
  3617  003890  6F62               	movwf	??_ReadADC& (0+255),b
  3618  003892  50C3               	movf	195,w,c	;volatile
  3619  003894  6F64               	movwf	ReadADC@result& (0+255),b
  3620  003896  C062  F065         	movff	??_ReadADC,ReadADC@result+1
  3621  00389A                     
  3622                           ; BSR set to: 0
  3623                           ;Temperatura.c: 46:         result = ((result*500.0)/1023.0)-49.5;
  3624  00389A  0E00               	movlw	0
  3625  00389C  6E49               	movwf	___fladd@a^0,c
  3626  00389E  0E00               	movlw	0
  3627  0038A0  6E4A               	movwf	(___fladd@a+1)^0,c
  3628  0038A2  0E46               	movlw	70
  3629  0038A4  6E4B               	movwf	(___fladd@a+2)^0,c
  3630  0038A6  0EC2               	movlw	194
  3631  0038A8  6E4C               	movwf	(___fladd@a+3)^0,c
  3632  0038AA  0E00               	movlw	0
  3633  0038AC  6E30               	movwf	___fldiv@a^0,c
  3634  0038AE  0EC0               	movlw	192
  3635  0038B0  6E31               	movwf	(___fldiv@a+1)^0,c
  3636  0038B2  0E7F               	movlw	127
  3637  0038B4  6E32               	movwf	(___fldiv@a+2)^0,c
  3638  0038B6  0E44               	movlw	68
  3639  0038B8  6E33               	movwf	(___fldiv@a+3)^0,c
  3640  0038BA  0E00               	movlw	0
  3641  0038BC  6E17               	movwf	___flmul@a^0,c
  3642  0038BE  0E00               	movlw	0
  3643  0038C0  6E18               	movwf	(___flmul@a+1)^0,c
  3644  0038C2  0EFA               	movlw	250
  3645  0038C4  6E19               	movwf	(___flmul@a+2)^0,c
  3646  0038C6  0E43               	movlw	67
  3647  0038C8  6E1A               	movwf	(___flmul@a+3)^0,c
  3648  0038CA  C064  F005         	movff	ReadADC@result,___xxtofl@val
  3649  0038CE  C065  F006         	movff	ReadADC@result+1,___xxtofl@val+1
  3650  0038D2  6A07               	clrf	(___xxtofl@val+2)^0,c
  3651  0038D4  6A08               	clrf	(___xxtofl@val+3)^0,c
  3652  0038D6  0E00               	movlw	0
  3653  0038D8  ECCD  F018         	call	___xxtofl
  3654  0038DC  C005  F013         	movff	?___xxtofl,___flmul@b
  3655  0038E0  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  3656  0038E4  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  3657  0038E8  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  3658  0038EC  ECBE  F00F         	call	___flmul	;wreg free
  3659  0038F0  C013  F02C         	movff	?___flmul,___fldiv@b
  3660  0038F4  C014  F02D         	movff	?___flmul+1,___fldiv@b+1
  3661  0038F8  C015  F02E         	movff	?___flmul+2,___fldiv@b+2
  3662  0038FC  C016  F02F         	movff	?___flmul+3,___fldiv@b+3
  3663  003900  ECD3  F011         	call	___fldiv	;wreg free
  3664  003904  C02C  F045         	movff	?___fldiv,___fladd@b
  3665  003908  C02D  F046         	movff	?___fldiv+1,___fladd@b+1
  3666  00390C  C02E  F047         	movff	?___fldiv+2,___fladd@b+2
  3667  003910  C02F  F048         	movff	?___fldiv+3,___fladd@b+3
  3668  003914  EC5E  F00D         	call	___fladd	;wreg free
  3669  003918  C045  F055         	movff	?___fladd,___fltol@f1
  3670  00391C  C046  F056         	movff	?___fladd+1,___fltol@f1+1
  3671  003920  C047  F057         	movff	?___fladd+2,___fltol@f1+2
  3672  003924  C048  F058         	movff	?___fladd+3,___fltol@f1+3
  3673  003928  EC1B  F01B         	call	___fltol	;wreg free
  3674  00392C  C055  F064         	movff	?___fltol,ReadADC@result
  3675  003930  C056  F065         	movff	?___fltol+1,ReadADC@result+1
  3676  003934                     
  3677                           ;Temperatura.c: 48:         return result;
  3678  003934  C064  F060         	movff	ReadADC@result,?_ReadADC
  3679  003938  C065  F061         	movff	ReadADC@result+1,?_ReadADC+1
  3680  00393C  0012               	return		;funcret
  3681  00393E                     __end_of_ReadADC:
  3682                           	callstack 0
  3683                           
  3684 ;; *************** function ___xxtofl *****************
  3685 ;; Defined at:
  3686 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  sign            1    wreg     unsigned char 
  3689 ;;  val             4    4[COMRAM] long 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  sign            1   12[COMRAM] unsigned char 
  3692 ;;  arg             4   14[COMRAM] unsigned long 
  3693 ;;  exp             1   13[COMRAM] unsigned char 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  4    4[COMRAM] unsigned char 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3703 ;;      Params:         4       0       0       0       0       0       0       0       0
  3704 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3705 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3706 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3707 ;;Total ram usage:       14 bytes
  3708 ;; Hardware stack levels used: 1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_ReadADC
  3713 ;;		_Estados
  3714 ;;		_USART_Init
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text21
  3719  00319A                     __ptext21:
  3720                           	callstack 0
  3721  00319A                     ___xxtofl:
  3722                           	callstack 29
  3723                           
  3724                           ;incstack = 0
  3725                           ;___xxtofl@sign stored from wreg
  3726  00319A  6E0D               	movwf	___xxtofl@sign^0,c
  3727  00319C  500D               	movf	___xxtofl@sign^0,w,c
  3728  00319E  B4D8               	btfsc	status,2,c
  3729  0031A0  EFD4  F018         	goto	u5871
  3730  0031A4  EFD6  F018         	goto	u5870
  3731  0031A8                     u5871:
  3732  0031A8  EFF8  F018         	goto	l1251
  3733  0031AC                     u5870:
  3734  0031AC  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  3735  0031AE  EFDD  F018         	goto	u5880
  3736  0031B2  EFDB  F018         	goto	u5881
  3737  0031B6                     u5881:
  3738  0031B6  EFF8  F018         	goto	l1251
  3739  0031BA                     u5880:
  3740  0031BA  C005  F009         	movff	___xxtofl@val,??___xxtofl
  3741  0031BE  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  3742  0031C2  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  3743  0031C6  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  3744  0031CA  1E09               	comf	??___xxtofl^0,f,c
  3745  0031CC  1E0A               	comf	(??___xxtofl+1)^0,f,c
  3746  0031CE  1E0B               	comf	(??___xxtofl+2)^0,f,c
  3747  0031D0  1E0C               	comf	(??___xxtofl+3)^0,f,c
  3748  0031D2  2A09               	incf	??___xxtofl^0,f,c
  3749  0031D4  0E00               	movlw	0
  3750  0031D6  220A               	addwfc	(??___xxtofl+1)^0,f,c
  3751  0031D8  220B               	addwfc	(??___xxtofl+2)^0,f,c
  3752  0031DA  220C               	addwfc	(??___xxtofl+3)^0,f,c
  3753  0031DC  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  3754  0031E0  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  3755  0031E4  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  3756  0031E8  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  3757  0031EC  EF00  F019         	goto	l5338
  3758  0031F0                     l1251:
  3759  0031F0  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  3760  0031F4  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3761  0031F8  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3762  0031FC  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3763  003200                     l5338:
  3764  003200  5005               	movf	___xxtofl@val^0,w,c
  3765  003202  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  3766  003204  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  3767  003206  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  3768  003208  A4D8               	btfss	status,2,c
  3769  00320A  EF09  F019         	goto	u5891
  3770  00320E  EF0B  F019         	goto	u5890
  3771  003212                     u5891:
  3772  003212  EF15  F019         	goto	l5344
  3773  003216                     u5890:
  3774  003216  0E00               	movlw	0
  3775  003218  6E05               	movwf	?___xxtofl^0,c
  3776  00321A  0E00               	movlw	0
  3777  00321C  6E06               	movwf	(?___xxtofl+1)^0,c
  3778  00321E  0E00               	movlw	0
  3779  003220  6E07               	movwf	(?___xxtofl+2)^0,c
  3780  003222  0E00               	movlw	0
  3781  003224  6E08               	movwf	(?___xxtofl+3)^0,c
  3782  003226  EFA6  F019         	goto	l1254
  3783  00322A                     l5344:
  3784  00322A  0E96               	movlw	150
  3785  00322C  6E0E               	movwf	___xxtofl@exp^0,c
  3786  00322E  EF1F  F019         	goto	l5348
  3787  003232                     l5346:
  3788  003232  2A0E               	incf	___xxtofl@exp^0,f,c
  3789  003234  90D8               	bcf	status,0,c
  3790  003236  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  3791  003238  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  3792  00323A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  3793  00323C  320F               	rrcf	___xxtofl@arg^0,f,c
  3794  00323E                     l5348:
  3795  00323E  0E00               	movlw	0
  3796  003240  140F               	andwf	___xxtofl@arg^0,w,c
  3797  003242  6E09               	movwf	??___xxtofl^0,c
  3798  003244  0E00               	movlw	0
  3799  003246  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  3800  003248  6E0A               	movwf	(??___xxtofl+1)^0,c
  3801  00324A  0E00               	movlw	0
  3802  00324C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  3803  00324E  6E0B               	movwf	(??___xxtofl+2)^0,c
  3804  003250  0EFE               	movlw	254
  3805  003252  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  3806  003254  6E0C               	movwf	(??___xxtofl+3)^0,c
  3807  003256  5009               	movf	??___xxtofl^0,w,c
  3808  003258  100A               	iorwf	(??___xxtofl+1)^0,w,c
  3809  00325A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  3810  00325C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  3811  00325E  A4D8               	btfss	status,2,c
  3812  003260  EF34  F019         	goto	u5901
  3813  003264  EF36  F019         	goto	u5900
  3814  003268                     u5901:
  3815  003268  EF19  F019         	goto	l5346
  3816  00326C                     u5900:
  3817  00326C  EF44  F019         	goto	l1258
  3818  003270                     l5350:
  3819  003270  2A0E               	incf	___xxtofl@exp^0,f,c
  3820  003272  0E01               	movlw	1
  3821  003274  260F               	addwf	___xxtofl@arg^0,f,c
  3822  003276  0E00               	movlw	0
  3823  003278  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  3824  00327A  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  3825  00327C  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  3826  00327E  90D8               	bcf	status,0,c
  3827  003280  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  3828  003282  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  3829  003284  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  3830  003286  320F               	rrcf	___xxtofl@arg^0,f,c
  3831  003288                     l1258:
  3832  003288  0E00               	movlw	0
  3833  00328A  140F               	andwf	___xxtofl@arg^0,w,c
  3834  00328C  6E09               	movwf	??___xxtofl^0,c
  3835  00328E  0E00               	movlw	0
  3836  003290  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  3837  003292  6E0A               	movwf	(??___xxtofl+1)^0,c
  3838  003294  0E00               	movlw	0
  3839  003296  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  3840  003298  6E0B               	movwf	(??___xxtofl+2)^0,c
  3841  00329A  0EFF               	movlw	255
  3842  00329C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  3843  00329E  6E0C               	movwf	(??___xxtofl+3)^0,c
  3844  0032A0  5009               	movf	??___xxtofl^0,w,c
  3845  0032A2  100A               	iorwf	(??___xxtofl+1)^0,w,c
  3846  0032A4  100B               	iorwf	(??___xxtofl+2)^0,w,c
  3847  0032A6  100C               	iorwf	(??___xxtofl+3)^0,w,c
  3848  0032A8  A4D8               	btfss	status,2,c
  3849  0032AA  EF59  F019         	goto	u5911
  3850  0032AE  EF5B  F019         	goto	u5910
  3851  0032B2                     u5911:
  3852  0032B2  EF38  F019         	goto	l5350
  3853  0032B6                     u5910:
  3854  0032B6  EF63  F019         	goto	l5358
  3855  0032BA                     l5356:
  3856  0032BA  060E               	decf	___xxtofl@exp^0,f,c
  3857  0032BC  90D8               	bcf	status,0,c
  3858  0032BE  360F               	rlcf	___xxtofl@arg^0,f,c
  3859  0032C0  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  3860  0032C2  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  3861  0032C4  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  3862  0032C6                     l5358:
  3863  0032C6  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  3864  0032C8  EF68  F019         	goto	u5921
  3865  0032CC  EF6A  F019         	goto	u5920
  3866  0032D0                     u5921:
  3867  0032D0  EF72  F019         	goto	l1265
  3868  0032D4                     u5920:
  3869  0032D4  0E02               	movlw	2
  3870  0032D6  600E               	cpfslt	___xxtofl@exp^0,c
  3871  0032D8  EF70  F019         	goto	u5931
  3872  0032DC  EF72  F019         	goto	u5930
  3873  0032E0                     u5931:
  3874  0032E0  EF5D  F019         	goto	l5356
  3875  0032E4                     u5930:
  3876  0032E4                     l1265:
  3877  0032E4  B00E               	btfsc	___xxtofl@exp^0,0,c
  3878  0032E6  EF77  F019         	goto	u5941
  3879  0032EA  EF79  F019         	goto	u5940
  3880  0032EE                     u5941:
  3881  0032EE  EF7A  F019         	goto	l5364
  3882  0032F2                     u5940:
  3883  0032F2  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  3884  0032F4                     l5364:
  3885  0032F4  90D8               	bcf	status,0,c
  3886  0032F6  320E               	rrcf	___xxtofl@exp^0,f,c
  3887  0032F8  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  3888  0032FC  6A0A               	clrf	(??___xxtofl+1)^0,c
  3889  0032FE  6A0B               	clrf	(??___xxtofl+2)^0,c
  3890  003300  6A0C               	clrf	(??___xxtofl+3)^0,c
  3891  003302  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  3892  003306  6A0B               	clrf	(??___xxtofl+2)^0,c
  3893  003308  6A0A               	clrf	(??___xxtofl+1)^0,c
  3894  00330A  6A09               	clrf	??___xxtofl^0,c
  3895  00330C  5009               	movf	??___xxtofl^0,w,c
  3896  00330E  120F               	iorwf	___xxtofl@arg^0,f,c
  3897  003310  500A               	movf	(??___xxtofl+1)^0,w,c
  3898  003312  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  3899  003314  500B               	movf	(??___xxtofl+2)^0,w,c
  3900  003316  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  3901  003318  500C               	movf	(??___xxtofl+3)^0,w,c
  3902  00331A  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  3903  00331C  500D               	movf	___xxtofl@sign^0,w,c
  3904  00331E  B4D8               	btfsc	status,2,c
  3905  003320  EF94  F019         	goto	u5951
  3906  003324  EF96  F019         	goto	u5950
  3907  003328                     u5951:
  3908  003328  EF9E  F019         	goto	l5374
  3909  00332C                     u5950:
  3910  00332C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  3911  00332E  EF9D  F019         	goto	u5960
  3912  003332  EF9B  F019         	goto	u5961
  3913  003336                     u5961:
  3914  003336  EF9E  F019         	goto	l5374
  3915  00333A                     u5960:
  3916  00333A  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  3917  00333C                     l5374:
  3918  00333C  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  3919  003340  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  3920  003344  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  3921  003348  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  3922  00334C                     l1254:
  3923  00334C  0012               	return		;funcret
  3924  00334E                     __end_of___xxtofl:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _Cloudy_State *****************
  3928 ;; Defined at:
  3929 ;;		line 82 in file "Estados.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;		None
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3946 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3947 ;;Total ram usage:        0 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 8
  3950 ;; This function calls:
  3951 ;;		_LCD_Char
  3952 ;;		_LCD_Command
  3953 ;;		_LCD_Custom_Char
  3954 ;;		_LCD_String_xy
  3955 ;;		_sprintf
  3956 ;; This function is called by:
  3957 ;;		_main
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text22
  3962  004418                     __ptext22:
  3963                           	callstack 0
  3964  004418                     _Cloudy_State:
  3965                           	callstack 22
  3966  004418                     
  3967                           ;Estados.c: 83:     LATE0 = 1;
  3968  004418  808D               	bsf	3981,0,c	;volatile
  3969                           
  3970                           ;Estados.c: 84:     LATE1 = 1;
  3971  00441A  828D               	bsf	3981,1,c	;volatile
  3972                           
  3973                           ;Estados.c: 85:     LATE2 = 0;
  3974  00441C  948D               	bcf	3981,2,c	;volatile
  3975  00441E                     
  3976                           ;Estados.c: 86:     sprintf(Stemp, "%0.0fC", tempar);
  3977  00441E  0E5E               	movlw	low _Stemp
  3978  004420  0100               	movlb	0	; () banked
  3979  004422  6FCC               	movwf	sprintf@s& (0+255),b
  3980  004424  0E01               	movlw	high _Stemp
  3981  004426  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  3982  004428  0E0D               	movlw	low STR_19
  3983  00442A  6FCE               	movwf	sprintf@fmt& (0+255),b
  3984  00442C  0E08               	movlw	high STR_19
  3985  00442E  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  3986  004430  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  3987  004434  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  3988  004438  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  3989  00443C  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  3990  004440  EC39  F022         	call	_sprintf	;wreg free
  3991  004444                     
  3992                           ;Estados.c: 87:     LCD_String_xy(1, 0, Stemp);
  3993  004444  0E00               	movlw	0
  3994  004446  6E0B               	movwf	LCD_String_xy@pos^0,c
  3995  004448  0E5E               	movlw	low _Stemp
  3996  00444A  6E0C               	movwf	LCD_String_xy@msg^0,c
  3997  00444C  0E01               	movlw	high _Stemp
  3998  00444E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  3999  004450  0E01               	movlw	1
  4000  004452  ECB0  F023         	call	_LCD_String_xy
  4001  004456                     
  4002                           ;Estados.c: 88:     LCD_Custom_Char(0, character3);
  4003  004456  0ED5               	movlw	low _character3
  4004  004458  6E09               	movwf	LCD_Custom_Char@msg^0,c
  4005  00445A  0E01               	movlw	high _character3
  4006  00445C  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  4007  00445E  0E00               	movlw	0
  4008  004460  EC24  F023         	call	_LCD_Custom_Char
  4009                           
  4010                           ;Estados.c: 89:     LCD_Command(0xc0);
  4011  004464  0EC0               	movlw	192
  4012  004466  ECB3  F022         	call	_LCD_Command
  4013                           
  4014                           ;Estados.c: 90:     LCD_Char(0);
  4015  00446A  0E00               	movlw	0
  4016  00446C  ECD9  F022         	call	_LCD_Char
  4017  004470  0012               	return		;funcret
  4018  004472                     __end_of_Cloudy_State:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _sprintf *****************
  4022 ;; Defined at:
  4023 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  s               2  108[BANK0 ] PTR unsigned char 
  4026 ;;		 -> Stemp(20), RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), 
  4027 ;;		 -> RTC_Calendario@hours(10), RTC_Calendario@mins(10), RTC_Calendario@secs(10), 
  4028 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  4029 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4030 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4031 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  f               6  118[BANK0 ] struct _IO_FILE
  4034 ;;  ap              2  116[BANK0 ] PTR void [1]
  4035 ;;		 -> ?_sprintf(2), 
  4036 ;;  ret             2    0        int 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2  108[BANK0 ] int 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4046 ;;      Params:         0       8       0       0       0       0       0       0       0
  4047 ;;      Locals:         0       8       0       0       0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4049 ;;      Totals:         0      16       0       0       0       0       0       0       0
  4050 ;;Total ram usage:       16 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 7
  4053 ;; This function calls:
  4054 ;;		_vfprintf
  4055 ;; This function is called by:
  4056 ;;		_RTC_Calendario
  4057 ;;		_Sunny_State
  4058 ;;		_Cloudy_State
  4059 ;;		_Rainy_State
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text23
  4064  004472                     __ptext23:
  4065                           	callstack 0
  4066  004472                     _sprintf:
  4067                           	callstack 22
  4068  004472  0ED0               	movlw	low (?_sprintf+4)
  4069  004474  0100               	movlb	0	; () banked
  4070  004476  6FD4               	movwf	sprintf@ap& (0+255),b
  4071  004478  0E00               	movlw	high (?_sprintf+4)
  4072  00447A  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  4073  00447C  C0CC  F0D6         	movff	sprintf@s,sprintf@f
  4074  004480  C0CD  F0D7         	movff	sprintf@s+1,sprintf@f+1
  4075  004484                     
  4076                           ; BSR set to: 0
  4077  004484  0E00               	movlw	0
  4078  004486  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  4079  004488  0E00               	movlw	0
  4080  00448A  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  4081  00448C                     
  4082                           ; BSR set to: 0
  4083  00448C  0E00               	movlw	0
  4084  00448E  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  4085  004490  0E00               	movlw	0
  4086  004492  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  4087  004494                     
  4088                           ; BSR set to: 0
  4089  004494  0ED6               	movlw	low sprintf@f
  4090  004496  6FC4               	movwf	vfprintf@fp& (0+255),b
  4091  004498  0E00               	movlw	high sprintf@f
  4092  00449A  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  4093  00449C  C0CE  F0C6         	movff	sprintf@fmt,vfprintf@fmt
  4094  0044A0  C0CF  F0C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4095  0044A4  0ED4               	movlw	low sprintf@ap
  4096  0044A6  6FC8               	movwf	vfprintf@ap& (0+255),b
  4097  0044A8  0E00               	movlw	high sprintf@ap
  4098  0044AA  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  4099  0044AC  EC98  F020         	call	_vfprintf	;wreg free
  4100  0044B0  0100               	movlb	0	; () banked
  4101  0044B2  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  4102  0044B4  25CC               	addwf	sprintf@s& (0+255),w,b
  4103  0044B6  6ED9               	movwf	fsr2l,c
  4104  0044B8  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  4105  0044BA  21CD               	addwfc	(sprintf@s+1)& (0+255),w,b
  4106  0044BC  6EDA               	movwf	fsr2h,c
  4107  0044BE  0E00               	movlw	0
  4108  0044C0  6EDF               	movwf	indf2,c
  4109  0044C2                     
  4110                           ; BSR set to: 0
  4111  0044C2  0012               	return		;funcret
  4112  0044C4                     __end_of_sprintf:
  4113                           	callstack 0
  4114                           
  4115 ;; *************** function _vfprintf *****************
  4116 ;; Defined at:
  4117 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  fp              2  100[BANK0 ] PTR struct _IO_FILE
  4120 ;;		 -> sprintf@f(6), 
  4121 ;;  fmt             2  102[BANK0 ] PTR const unsigned char 
  4122 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4123 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4124 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4125 ;;  ap              2  104[BANK0 ] PTR PTR void 
  4126 ;;		 -> sprintf@ap(2), 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  cfmt            2  106[BANK0 ] PTR unsigned char 
  4129 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4130 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4131 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  2  100[BANK0 ] int 
  4134 ;; Registers used:
  4135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4141 ;;      Params:         0       6       0       0       0       0       0       0       0
  4142 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4144 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4145 ;;Total ram usage:        8 bytes
  4146 ;; Hardware stack levels used: 1
  4147 ;; Hardware stack levels required when called: 6
  4148 ;; This function calls:
  4149 ;;		_vfpfcnvrt
  4150 ;; This function is called by:
  4151 ;;		_sprintf
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text24
  4156  004130                     __ptext24:
  4157                           	callstack 0
  4158  004130                     _vfprintf:
  4159                           	callstack 22
  4160  004130                     
  4161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4162  004130  C0C6  F0CA         	movff	vfprintf@fmt,vfprintf@cfmt
  4163  004134  C0C7  F0CB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4164  004138                     
  4165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4166  004138  0E00               	movlw	0
  4167  00413A  0100               	movlb	0	; () banked
  4168  00413C  6FF3               	movwf	(_nout+1)& (0+255),b
  4169  00413E  0E00               	movlw	0
  4170  004140  6FF2               	movwf	_nout& (0+255),b
  4171                           
  4172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4173  004142  EFB6  F020         	goto	l5384
  4174  004146                     l5382:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4178  004146  C0C4  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  4179  00414A  C0C5  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4180  00414E  0ECA               	movlw	low vfprintf@cfmt
  4181  004150  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  4182  004152  0E00               	movlw	high vfprintf@cfmt
  4183  004154  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4184  004156  C0C8  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  4185  00415A  C0C9  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4186  00415E  EC57  F00A         	call	_vfpfcnvrt	;wreg free
  4187  004162  0100               	movlb	0	; () banked
  4188  004164  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  4189  004166  27F2               	addwf	_nout& (0+255),f,b
  4190  004168  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4191  00416A  23F3               	addwfc	(_nout+1)& (0+255),f,b
  4192  00416C                     l5384:
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4196  00416C  C0CA  FFF6         	movff	vfprintf@cfmt,tblptrl
  4197  004170  C0CB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4198  004174                     	if	0	;tblptru may be non-zero
  4199  004174                     	endif
  4200  004174                     	if	0	;tblptru may be non-zero
  4201  004174                     	endif
  4202  004174  0008               	tblrd		*
  4203  004176  50F5               	movf	tablat,w,c
  4204  004178  0900               	iorlw	0
  4205  00417A  A4D8               	btfss	status,2,c
  4206  00417C  EFC2  F020         	goto	u5971
  4207  004180  EFC4  F020         	goto	u5970
  4208  004184                     u5971:
  4209  004184  EFA3  F020         	goto	l5382
  4210  004188                     u5970:
  4211  004188                     
  4212                           ; BSR set to: 0
  4213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4214  004188  C0F2  F0C4         	movff	_nout,?_vfprintf
  4215  00418C  C0F3  F0C5         	movff	_nout+1,?_vfprintf+1
  4216  004190                     
  4217                           ; BSR set to: 0
  4218  004190  0012               	return		;funcret
  4219  004192                     __end_of_vfprintf:
  4220                           	callstack 0
  4221                           
  4222 ;; *************** function _vfpfcnvrt *****************
  4223 ;; Defined at:
  4224 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  4227 ;;		 -> sprintf@f(6), 
  4228 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  4229 ;;		 -> vfprintf@cfmt(2), 
  4230 ;;  ap              2   72[BANK0 ] PTR PTR void 
  4231 ;;		 -> sprintf@ap(2), 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  llu             8   78[BANK0 ] unsigned long long 
  4234 ;;  ll              8    0        long long 
  4235 ;;  f               4   92[BANK0 ] long long 
  4236 ;;  ct              3   96[BANK0 ] unsigned char [3]
  4237 ;;  vp              3    0        PTR void 
  4238 ;;  cp              3    0        PTR unsigned char 
  4239 ;;  done            2   86[BANK0 ] int 
  4240 ;;  i               2    0        int 
  4241 ;;  c               1   99[BANK0 ] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2   68[BANK0 ] int 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4251 ;;      Params:         0       6       0       0       0       0       0       0       0
  4252 ;;      Locals:         0      22       0       0       0       0       0       0       0
  4253 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4254 ;;      Totals:         0      32       0       0       0       0       0       0       0
  4255 ;;Total ram usage:       32 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 5
  4258 ;; This function calls:
  4259 ;;		_atoi
  4260 ;;		_efgtoa
  4261 ;;		_fputc
  4262 ;;		_isdigit
  4263 ;;		_isupper
  4264 ;;		_strncmp
  4265 ;;		_tolower
  4266 ;;		_xtoa
  4267 ;; This function is called by:
  4268 ;;		_vfprintf
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text25
  4273  0014AE                     __ptext25:
  4274                           	callstack 0
  4275  0014AE                     _vfpfcnvrt:
  4276                           	callstack 22
  4277  0014AE                     
  4278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4279  0014AE  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4280  0014B2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4281  0014B6  CFDE FFF6          	movff	postinc2,tblptrl
  4282  0014BA  CFDD FFF7          	movff	postdec2,tblptrh
  4283  0014BE                     	if	0	;tblptru may be non-zero
  4284  0014BE                     	endif
  4285  0014BE                     	if	0	;tblptru may be non-zero
  4286  0014BE                     	endif
  4287  0014BE  0008               	tblrd		*
  4288  0014C0  50F5               	movf	tablat,w,c
  4289  0014C2  0A25               	xorlw	37
  4290  0014C4  A4D8               	btfss	status,2,c
  4291  0014C6  EF67  F00A         	goto	u5551
  4292  0014CA  EF69  F00A         	goto	u5550
  4293  0014CE                     u5551:
  4294  0014CE  EF42  F00D         	goto	l5220
  4295  0014D2                     u5550:
  4296  0014D2                     
  4297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4298  0014D2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4299  0014D6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4300  0014DA  2ADE               	incf	postinc2,f,c
  4301  0014DC  0E00               	movlw	0
  4302  0014DE  22DD               	addwfc	postdec2,f,c
  4303  0014E0                     
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4305  0014E0  0E00               	movlw	0
  4306  0014E2  0100               	movlb	0	; () banked
  4307  0014E4  6FF5               	movwf	(_width+1)& (0+255),b
  4308  0014E6  0E00               	movlw	0
  4309  0014E8  6FF4               	movwf	_width& (0+255),b
  4310  0014EA  C0F4  F0F8         	movff	_width,_flags
  4311  0014EE  C0F5  F0F9         	movff	_width+1,_flags+1
  4312  0014F2                     
  4313                           ; BSR set to: 0
  4314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4315  0014F2  69F6               	setf	_prec& (0+255),b
  4316  0014F4  69F7               	setf	(_prec+1)& (0+255),b
  4317  0014F6                     
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4320  0014F6  0E00               	movlw	0
  4321  0014F8  6FB7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4322  0014FA  0E00               	movlw	0
  4323  0014FC  6FB6               	movwf	vfpfcnvrt@done& (0+255),b
  4324                           
  4325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4326  0014FE  EFC7  F00A         	goto	l5128
  4327  001502                     l5102:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4331  001502  81F8               	bsf	_flags& (0+255),0,b
  4332  001504                     l5104:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4336  001504  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4337  001508  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4338  00150C  2ADE               	incf	postinc2,f,c
  4339  00150E  0E00               	movlw	0
  4340  001510  22DD               	addwfc	postdec2,f,c
  4341                           
  4342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4343  001512  EFC7  F00A         	goto	l5128
  4344  001516                     l5106:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4348  001516  83F8               	bsf	_flags& (0+255),1,b
  4349  001518  EF82  F00A         	goto	l5104
  4350  00151C                     l5110:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4354  00151C  85F8               	bsf	_flags& (0+255),2,b
  4355  00151E  EF82  F00A         	goto	l5104
  4356  001522                     l5114:
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4360  001522  87F8               	bsf	_flags& (0+255),3,b
  4361  001524  EF82  F00A         	goto	l5104
  4362  001528                     l5118:
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4366  001528  89F8               	bsf	_flags& (0+255),4,b
  4367  00152A  EF82  F00A         	goto	l5104
  4368  00152E                     l5122:
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4372  00152E  0E00               	movlw	0
  4373  001530  6FB7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4374  001532  0E01               	movlw	1
  4375  001534  6FB6               	movwf	vfpfcnvrt@done& (0+255),b
  4376                           
  4377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4378  001536  EFC7  F00A         	goto	l5128
  4379  00153A                     l5126:
  4380                           
  4381                           ; BSR set to: 0
  4382  00153A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4383  00153E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4384  001542  CFDE FFF6          	movff	postinc2,tblptrl
  4385  001546  CFDD FFF7          	movff	postdec2,tblptrh
  4386  00154A                     	if	0	;tblptru may be non-zero
  4387  00154A                     	endif
  4388  00154A                     	if	0	;tblptru may be non-zero
  4389  00154A                     	endif
  4390  00154A  0008               	tblrd		*
  4391  00154C  50F5               	movf	tablat,w,c
  4392  00154E  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4393  001550  6BAB               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4394                           
  4395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4396                           ; Switch size 1, requested type "simple"
  4397                           ; Number of cases is 1, Range of values is 0 to 0
  4398                           ; switch strategies available:
  4399                           ; Name         Instructions Cycles
  4400                           ; simple_byte            4     3 (average)
  4401                           ;	Chosen strategy is simple_byte
  4402  001552  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4403  001554  0A00               	xorlw	0	; case 0
  4404  001556  B4D8               	btfsc	status,2,c
  4405  001558  EFB0  F00A         	goto	l5878
  4406  00155C  EF97  F00A         	goto	l5122
  4407  001560                     l5878:
  4408                           
  4409                           ; BSR set to: 0
  4410                           ; Switch size 1, requested type "simple"
  4411                           ; Number of cases is 5, Range of values is 32 to 48
  4412                           ; switch strategies available:
  4413                           ; Name         Instructions Cycles
  4414                           ; simple_byte           16     9 (average)
  4415                           ;	Chosen strategy is simple_byte
  4416  001560  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4417  001562  0A20               	xorlw	32	; case 32
  4418  001564  B4D8               	btfsc	status,2,c
  4419  001566  EF91  F00A         	goto	l5114
  4420  00156A  0A03               	xorlw	3	; case 35
  4421  00156C  B4D8               	btfsc	status,2,c
  4422  00156E  EF94  F00A         	goto	l5118
  4423  001572  0A08               	xorlw	8	; case 43
  4424  001574  B4D8               	btfsc	status,2,c
  4425  001576  EF8E  F00A         	goto	l5110
  4426  00157A  0A06               	xorlw	6	; case 45
  4427  00157C  B4D8               	btfsc	status,2,c
  4428  00157E  EF81  F00A         	goto	l5102
  4429  001582  0A1D               	xorlw	29	; case 48
  4430  001584  B4D8               	btfsc	status,2,c
  4431  001586  EF8B  F00A         	goto	l5106
  4432  00158A  EF97  F00A         	goto	l5122
  4433  00158E                     l5128:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4437  00158E  51B6               	movf	vfpfcnvrt@done& (0+255),w,b
  4438  001590  11B7               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4439  001592  B4D8               	btfsc	status,2,c
  4440  001594  EFCE  F00A         	goto	u5561
  4441  001598  EFD0  F00A         	goto	u5560
  4442  00159C                     u5561:
  4443  00159C  EF9D  F00A         	goto	l5126
  4444  0015A0                     u5560:
  4445  0015A0                     
  4446                           ; BSR set to: 0
  4447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4448  0015A0  A1F8               	btfss	_flags& (0+255),0,b
  4449  0015A2  EFD5  F00A         	goto	u5571
  4450  0015A6  EFD7  F00A         	goto	u5570
  4451  0015AA                     u5571:
  4452  0015AA  EFD8  F00A         	goto	l5132
  4453  0015AE                     u5570:
  4454  0015AE                     
  4455                           ; BSR set to: 0
  4456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4457  0015AE  93F8               	bcf	_flags& (0+255),1,b
  4458  0015B0                     l5132:
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  4462  0015B0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4463  0015B4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4464  0015B8  CFDE FFF6          	movff	postinc2,tblptrl
  4465  0015BC  CFDD FFF7          	movff	postdec2,tblptrh
  4466  0015C0                     	if	0	;tblptru may be non-zero
  4467  0015C0                     	endif
  4468  0015C0                     	if	0	;tblptru may be non-zero
  4469  0015C0                     	endif
  4470  0015C0  0008               	tblrd		*
  4471  0015C2  50F5               	movf	tablat,w,c
  4472  0015C4  0A2E               	xorlw	46
  4473  0015C6  A4D8               	btfss	status,2,c
  4474  0015C8  EFE8  F00A         	goto	u5581
  4475  0015CC  EFEA  F00A         	goto	u5580
  4476  0015D0                     u5581:
  4477  0015D0  EF68  F00B         	goto	l5152
  4478  0015D4                     u5580:
  4479  0015D4                     
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  4482  0015D4  0E00               	movlw	0
  4483  0015D6  6FF7               	movwf	(_prec+1)& (0+255),b
  4484  0015D8  0E00               	movlw	0
  4485  0015DA  6FF6               	movwf	_prec& (0+255),b
  4486  0015DC                     
  4487                           ; BSR set to: 0
  4488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  4489  0015DC  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4490  0015E0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4491  0015E4  2ADE               	incf	postinc2,f,c
  4492  0015E6  0E00               	movlw	0
  4493  0015E8  22DD               	addwfc	postdec2,f,c
  4494  0015EA                     
  4495                           ; BSR set to: 0
  4496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  4497  0015EA  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4498  0015EE  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4499  0015F2  CFDE FFF6          	movff	postinc2,tblptrl
  4500  0015F6  CFDD FFF7          	movff	postdec2,tblptrh
  4501  0015FA                     	if	0	;tblptru may be non-zero
  4502  0015FA                     	endif
  4503  0015FA                     	if	0	;tblptru may be non-zero
  4504  0015FA                     	endif
  4505  0015FA  0008               	tblrd		*
  4506  0015FC  50F5               	movf	tablat,w,c
  4507  0015FE  0A2A               	xorlw	42
  4508  001600  A4D8               	btfss	status,2,c
  4509  001602  EF05  F00B         	goto	u5591
  4510  001606  EF07  F00B         	goto	u5590
  4511  00160A                     u5591:
  4512  00160A  EF24  F00B         	goto	l5142
  4513  00160E                     u5590:
  4514  00160E                     
  4515                           ; BSR set to: 0
  4516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  4517  00160E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4518  001612  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4519  001616  2ADE               	incf	postinc2,f,c
  4520  001618  0E00               	movlw	0
  4521  00161A  22DD               	addwfc	postdec2,f,c
  4522                           
  4523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4524  00161C  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4525  001620  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4526  001624  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4527  001628  0E02               	movlw	2
  4528  00162A  26DE               	addwf	postinc2,f,c
  4529  00162C  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4530  001630  0E00               	movlw	0
  4531  001632  22DD               	addwfc	postdec2,f,c
  4532  001634  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4533  001638  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4534  00163C  CFDE F0F6          	movff	postinc2,_prec
  4535  001640  CFDD F0F7          	movff	postdec2,_prec+1
  4536                           
  4537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  4538  001644  EF68  F00B         	goto	l5152
  4539  001648                     l5142:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  4543  001648  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4544  00164C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4545  001650  CFDE F008          	movff	postinc2,atoi@s
  4546  001654  CFDD F009          	movff	postdec2,atoi@s+1
  4547  001658  ECA7  F019         	call	_atoi	;wreg free
  4548  00165C  C008  F0F6         	movff	?_atoi,_prec
  4549  001660  C009  F0F7         	movff	?_atoi+1,_prec+1
  4550                           
  4551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4552  001664  EF3B  F00B         	goto	l5146
  4553  001668                     l5144:
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  4557  001668  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4558  00166C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4559  001670  2ADE               	incf	postinc2,f,c
  4560  001672  0E00               	movlw	0
  4561  001674  22DD               	addwfc	postdec2,f,c
  4562  001676                     l5146:
  4563  001676  0ED0               	movlw	208
  4564  001678  0100               	movlb	0	; () banked
  4565  00167A  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4566  00167C  0EFF               	movlw	255
  4567  00167E  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4568  001680  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4569  001684  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4570  001688  CFDE FFF6          	movff	postinc2,tblptrl
  4571  00168C  CFDD FFF7          	movff	postdec2,tblptrh
  4572  001690                     	if	0	;tblptru may be non-zero
  4573  001690                     	endif
  4574  001690                     	if	0	;tblptru may be non-zero
  4575  001690                     	endif
  4576  001690  0008               	tblrd		*
  4577  001692  50F5               	movf	tablat,w,c
  4578  001694  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4579  001696  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4580  001698  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4581  00169A  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4582  00169C  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4583  00169E  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4584  0016A0  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4585  0016A2  E10A               	bnz	u5600
  4586  0016A4  0E0A               	movlw	10
  4587  0016A6  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4588  0016A8  A0D8               	btfss	status,0,c
  4589  0016AA  EF59  F00B         	goto	u5601
  4590  0016AE  EF5C  F00B         	goto	u5600
  4591  0016B2                     u5601:
  4592  0016B2  0E01               	movlw	1
  4593  0016B4  EF5D  F00B         	goto	u5610
  4594  0016B8                     u5600:
  4595  0016B8  0E00               	movlw	0
  4596  0016BA                     u5610:
  4597  0016BA  6FB8               	movwf	_vfpfcnvrt$1538& (0+255),b
  4598  0016BC  6BB9               	clrf	(_vfpfcnvrt$1538+1)& (0+255),b
  4599  0016BE                     
  4600                           ; BSR set to: 0
  4601  0016BE  51B8               	movf	_vfpfcnvrt$1538& (0+255),w,b
  4602  0016C0  11B9               	iorwf	(_vfpfcnvrt$1538+1)& (0+255),w,b
  4603  0016C2  A4D8               	btfss	status,2,c
  4604  0016C4  EF66  F00B         	goto	u5621
  4605  0016C8  EF68  F00B         	goto	u5620
  4606  0016CC                     u5621:
  4607  0016CC  EF34  F00B         	goto	l5144
  4608  0016D0                     u5620:
  4609  0016D0                     l5152:
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  4613  0016D0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4614  0016D4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4615  0016D8  CFDE FFF6          	movff	postinc2,tblptrl
  4616  0016DC  CFDD FFF7          	movff	postdec2,tblptrh
  4617  0016E0                     	if	0	;tblptru may be non-zero
  4618  0016E0                     	endif
  4619  0016E0                     	if	0	;tblptru may be non-zero
  4620  0016E0                     	endif
  4621  0016E0  0008               	tblrd		*
  4622  0016E2  50F5               	movf	tablat,w,c
  4623  0016E4  6E07               	movwf	tolower@c^0,c
  4624  0016E6  6A08               	clrf	(tolower@c+1)^0,c
  4625  0016E8  ECC9  F020         	call	_tolower	;wreg free
  4626  0016EC  5007               	movf	?_tolower^0,w,c
  4627  0016EE  0100               	movlb	0	; () banked
  4628  0016F0  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  4629  0016F2                     
  4630                           ; BSR set to: 0
  4631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  4632  0016F2  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  4633  0016F4  B4D8               	btfsc	status,2,c
  4634  0016F6  EF7F  F00B         	goto	u5631
  4635  0016FA  EF81  F00B         	goto	u5630
  4636  0016FE                     u5631:
  4637  0016FE  EFBB  F00B         	goto	l5162
  4638  001702                     u5630:
  4639  001702                     
  4640                           ; BSR set to: 0
  4641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  4642  001702  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4643  001706  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4644  00170A  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  4645  00170E  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  4646  001712  0E01               	movlw	1
  4647  001714  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  4648  001716  0E00               	movlw	0
  4649  001718  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4650  00171A  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4651  00171E  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4652  001722                     	if	0	;tblptru may be non-zero
  4653  001722                     	endif
  4654  001722                     	if	0	;tblptru may be non-zero
  4655  001722                     	endif
  4656  001722  0008               	tblrd		*
  4657  001724  50F5               	movf	tablat,w,c
  4658  001726  6E07               	movwf	tolower@c^0,c
  4659  001728  6A08               	clrf	(tolower@c+1)^0,c
  4660  00172A  ECC9  F020         	call	_tolower	;wreg free
  4661  00172E  5007               	movf	?_tolower^0,w,c
  4662  001730  0100               	movlb	0	; () banked
  4663  001732  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4664  001734                     
  4665                           ; BSR set to: 0
  4666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  4667  001734  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4668  001736  B4D8               	btfsc	status,2,c
  4669  001738  EFA0  F00B         	goto	u5641
  4670  00173C  EFA2  F00B         	goto	u5640
  4671  001740                     u5641:
  4672  001740  EFBB  F00B         	goto	l5162
  4673  001744                     u5640:
  4674  001744                     
  4675                           ; BSR set to: 0
  4676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  4677  001744  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4678  001748  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4679  00174C  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  4680  001750  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  4681  001754  0E02               	movlw	2
  4682  001756  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  4683  001758  0E00               	movlw	0
  4684  00175A  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4685  00175C  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4686  001760  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4687  001764                     	if	0	;tblptru may be non-zero
  4688  001764                     	endif
  4689  001764                     	if	0	;tblptru may be non-zero
  4690  001764                     	endif
  4691  001764  0008               	tblrd		*
  4692  001766  50F5               	movf	tablat,w,c
  4693  001768  6E07               	movwf	tolower@c^0,c
  4694  00176A  6A08               	clrf	(tolower@c+1)^0,c
  4695  00176C  ECC9  F020         	call	_tolower	;wreg free
  4696  001770  5007               	movf	?_tolower^0,w,c
  4697  001772  0100               	movlb	0	; () banked
  4698  001774  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4699  001776                     l5162:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  4703  001776  0E66               	movlw	102
  4704  001778  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4705  00177A  A4D8               	btfss	status,2,c
  4706  00177C  EFC2  F00B         	goto	u5651
  4707  001780  EFC4  F00B         	goto	u5650
  4708  001784                     u5651:
  4709  001784  EF04  F00C         	goto	l5174
  4710  001788                     u5650:
  4711  001788                     
  4712                           ; BSR set to: 0
  4713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  4714  001788  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4715  00178C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4716  001790  CFDE FFF6          	movff	postinc2,tblptrl
  4717  001794  CFDD FFF7          	movff	postdec2,tblptrh
  4718  001798                     	if	0	;tblptru may be non-zero
  4719  001798                     	endif
  4720  001798                     	if	0	;tblptru may be non-zero
  4721  001798                     	endif
  4722  001798  0008               	tblrd		*
  4723  00179A  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4724  00179E                     
  4725                           ; BSR set to: 0
  4726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  4727  00179E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4728  0017A2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4729  0017A6  2ADE               	incf	postinc2,f,c
  4730  0017A8  0E00               	movlw	0
  4731  0017AA  22DD               	addwfc	postdec2,f,c
  4732  0017AC                     
  4733                           ; BSR set to: 0
  4734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4735  0017AC  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4736  0017B0  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4737  0017B4  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4738  0017B8  0E04               	movlw	4
  4739  0017BA  26DE               	addwf	postinc2,f,c
  4740  0017BC  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4741  0017C0  0E00               	movlw	0
  4742  0017C2  22DD               	addwfc	postdec2,f,c
  4743  0017C4  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4744  0017C8  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4745  0017CC  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4746  0017D0  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4747  0017D4  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4748  0017D8  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4749  0017DC                     l5170:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  4753  0017DC  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  4754  0017E0  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4755  0017E4  C0BC  F062         	movff	vfpfcnvrt@f,efgtoa@f
  4756  0017E8  C0BD  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4757  0017EC  C0BE  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4758  0017F0  C0BF  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4759  0017F4  C0C3  F066         	movff	vfpfcnvrt@c,efgtoa@c
  4760  0017F8  EC2B  F004         	call	_efgtoa	;wreg free
  4761  0017FC  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  4762  001800  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4763  001804  EF5D  F00D         	goto	l1476
  4764  001808                     l5174:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4768  001808  0EC0               	movlw	low vfpfcnvrt@ct
  4769  00180A  6E01               	movwf	strncmp@_l^0,c
  4770  00180C  0E00               	movlw	high vfpfcnvrt@ct
  4771  00180E  6E02               	movwf	(strncmp@_l+1)^0,c
  4772  001810  0E4C               	movlw	low STR_31
  4773  001812  6E03               	movwf	strncmp@_r^0,c
  4774  001814  0E08               	movlw	high STR_31
  4775  001816  6E04               	movwf	(strncmp@_r+1)^0,c
  4776  001818  0E00               	movlw	0
  4777  00181A  6E06               	movwf	(strncmp@n+1)^0,c
  4778  00181C  0E02               	movlw	2
  4779  00181E  6E05               	movwf	strncmp@n^0,c
  4780  001820  EC1E  F01D         	call	_strncmp	;wreg free
  4781  001824  5001               	movf	?_strncmp^0,w,c
  4782  001826  1002               	iorwf	(?_strncmp+1)^0,w,c
  4783  001828  A4D8               	btfss	status,2,c
  4784  00182A  EF19  F00C         	goto	u5661
  4785  00182E  EF1B  F00C         	goto	u5660
  4786  001832                     u5661:
  4787  001832  EF97  F00C         	goto	l5190
  4788  001836                     u5660:
  4789  001836                     
  4790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4791  001836  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4792  00183A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4793  00183E  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  4794  001842  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  4795  001846  0E01               	movlw	1
  4796  001848  0100               	movlb	0	; () banked
  4797  00184A  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  4798  00184C  0E00               	movlw	0
  4799  00184E  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4800  001850  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4801  001854  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4802  001858                     	if	0	;tblptru may be non-zero
  4803  001858                     	endif
  4804  001858                     	if	0	;tblptru may be non-zero
  4805  001858                     	endif
  4806  001858  0008               	tblrd		*
  4807  00185A  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4808  00185E  0EBF               	movlw	191
  4809  001860  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4810  001862  0EFF               	movlw	255
  4811  001864  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4812  001866  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4813  00186A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4814  00186E  CFDE FFF6          	movff	postinc2,tblptrl
  4815  001872  CFDD FFF7          	movff	postdec2,tblptrh
  4816  001876                     	if	0	;tblptru may be non-zero
  4817  001876                     	endif
  4818  001876                     	if	0	;tblptru may be non-zero
  4819  001876                     	endif
  4820  001876  0008               	tblrd		*
  4821  001878  50F5               	movf	tablat,w,c
  4822  00187A  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4823  00187C  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4824  00187E  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4825  001880  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4826  001882  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4827  001884  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4828  001886  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4829  001888  E10A               	bnz	u5670
  4830  00188A  0E1A               	movlw	26
  4831  00188C  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4832  00188E  A0D8               	btfss	status,0,c
  4833  001890  EF4C  F00C         	goto	u5671
  4834  001894  EF4F  F00C         	goto	u5670
  4835  001898                     u5671:
  4836  001898  0E01               	movlw	1
  4837  00189A  EF50  F00C         	goto	u5680
  4838  00189E                     u5670:
  4839  00189E  0E00               	movlw	0
  4840  0018A0                     u5680:
  4841  0018A0  6FBA               	movwf	_vfpfcnvrt$1542& (0+255),b
  4842  0018A2  6BBB               	clrf	(_vfpfcnvrt$1542+1)& (0+255),b
  4843  0018A4                     
  4844                           ; BSR set to: 0
  4845  0018A4  51BA               	movf	_vfpfcnvrt$1542& (0+255),w,b
  4846  0018A6  11BB               	iorwf	(_vfpfcnvrt$1542+1)& (0+255),w,b
  4847  0018A8  B4D8               	btfsc	status,2,c
  4848  0018AA  EF59  F00C         	goto	u5691
  4849  0018AE  EF5B  F00C         	goto	u5690
  4850  0018B2                     u5691:
  4851  0018B2  EF75  F00C         	goto	l5184
  4852  0018B6                     u5690:
  4853  0018B6                     
  4854                           ; BSR set to: 0
  4855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4856  0018B6  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4857  0018BA  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4858  0018BE  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4859  0018C2  0E04               	movlw	4
  4860  0018C4  26DE               	addwf	postinc2,f,c
  4861  0018C6  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4862  0018CA  0E00               	movlw	0
  4863  0018CC  22DD               	addwfc	postdec2,f,c
  4864  0018CE  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4865  0018D2  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4866  0018D6  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4867  0018DA  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4868  0018DE  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4869  0018E2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4870                           
  4871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  4872  0018E6  EF8D  F00C         	goto	l1483
  4873  0018EA                     l5184:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4877  0018EA  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4878  0018EE  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4879  0018F2  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4880  0018F6  0E04               	movlw	4
  4881  0018F8  26DE               	addwf	postinc2,f,c
  4882  0018FA  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4883  0018FE  0E00               	movlw	0
  4884  001900  22DD               	addwfc	postdec2,f,c
  4885  001902  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4886  001906  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4887  00190A  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4888  00190E  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4889  001912  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4890  001916  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4891  00191A                     l1483:
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4895  00191A  0E02               	movlw	2
  4896  00191C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4897  001920  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4898  001924  26DE               	addwf	postinc2,f,c
  4899  001926  0E00               	movlw	0
  4900  001928  22DD               	addwfc	postdec2,f,c
  4901  00192A  EFEE  F00B         	goto	l5170
  4902  00192E                     l5190:
  4903                           
  4904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4905  00192E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4906  001932  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4907  001936  CFDE FFF6          	movff	postinc2,tblptrl
  4908  00193A  CFDD FFF7          	movff	postdec2,tblptrh
  4909  00193E                     	if	0	;tblptru may be non-zero
  4910  00193E                     	endif
  4911  00193E                     	if	0	;tblptru may be non-zero
  4912  00193E                     	endif
  4913  00193E  0008               	tblrd		*
  4914  001940  50F5               	movf	tablat,w,c
  4915  001942  0A78               	xorlw	120
  4916  001944  B4D8               	btfsc	status,2,c
  4917  001946  EFA7  F00C         	goto	u5701
  4918  00194A  EFA9  F00C         	goto	u5700
  4919  00194E                     u5701:
  4920  00194E  EFBB  F00C         	goto	l5194
  4921  001952                     u5700:
  4922  001952  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4923  001956  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4924  00195A  CFDE FFF6          	movff	postinc2,tblptrl
  4925  00195E  CFDD FFF7          	movff	postdec2,tblptrh
  4926  001962                     	if	0	;tblptru may be non-zero
  4927  001962                     	endif
  4928  001962                     	if	0	;tblptru may be non-zero
  4929  001962                     	endif
  4930  001962  0008               	tblrd		*
  4931  001964  50F5               	movf	tablat,w,c
  4932  001966  0A58               	xorlw	88
  4933  001968  A4D8               	btfss	status,2,c
  4934  00196A  EFB9  F00C         	goto	u5711
  4935  00196E  EFBB  F00C         	goto	u5710
  4936  001972                     u5711:
  4937  001972  EF0A  F00D         	goto	l5204
  4938  001976                     u5710:
  4939  001976                     l5194:
  4940                           
  4941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  4942  001976  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4943  00197A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4944  00197E  CFDE FFF6          	movff	postinc2,tblptrl
  4945  001982  CFDD FFF7          	movff	postdec2,tblptrh
  4946  001986                     	if	0	;tblptru may be non-zero
  4947  001986                     	endif
  4948  001986                     	if	0	;tblptru may be non-zero
  4949  001986                     	endif
  4950  001986  0008               	tblrd		*
  4951  001988  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4952  00198C                     
  4953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  4954  00198C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4955  001990  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4956  001994  2ADE               	incf	postinc2,f,c
  4957  001996  0E00               	movlw	0
  4958  001998  22DD               	addwfc	postdec2,f,c
  4959  00199A                     
  4960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4961  00199A  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4962  00199E  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4963  0019A2  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4964  0019A6  0E02               	movlw	2
  4965  0019A8  26DE               	addwf	postinc2,f,c
  4966  0019AA  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4967  0019AE  0E00               	movlw	0
  4968  0019B0  22DD               	addwfc	postdec2,f,c
  4969  0019B2  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4970  0019B6  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4971  0019BA  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt+2
  4972  0019BE  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+3
  4973  0019C2  C0AC  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4974  0019C6  C0AD  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4975  0019CA  0100               	movlb	0	; () banked
  4976  0019CC  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4977  0019CE  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4978  0019D0  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4979  0019D2  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4980  0019D4  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4981  0019D6  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4982  0019D8                     
  4983                           ; BSR set to: 0
  4984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  4985  0019D8  C0A4  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4986  0019DC  C0A5  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4987  0019E0  C0AE  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4988  0019E4  C0AF  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4989  0019E8  C0B0  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4990  0019EC  C0B1  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4991  0019F0  C0B2  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4992  0019F4  C0B3  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4993  0019F8  C0B4  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4994  0019FC  C0B5  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4995  001A00  C0C3  F026         	movff	vfpfcnvrt@c,xtoa@x
  4996  001A04  EC18  F015         	call	_xtoa	;wreg free
  4997  001A08  C01C  F0A4         	movff	?_xtoa,?_vfpfcnvrt
  4998  001A0C  C01D  F0A5         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4999  001A10  EF5D  F00D         	goto	l1476
  5000  001A14                     l5204:
  5001                           
  5002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5003  001A14  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5004  001A18  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5005  001A1C  CFDE FFF6          	movff	postinc2,tblptrl
  5006  001A20  CFDD FFF7          	movff	postdec2,tblptrh
  5007  001A24                     	if	0	;tblptru may be non-zero
  5008  001A24                     	endif
  5009  001A24                     	if	0	;tblptru may be non-zero
  5010  001A24                     	endif
  5011  001A24  0008               	tblrd		*
  5012  001A26  50F5               	movf	tablat,w,c
  5013  001A28  0A25               	xorlw	37
  5014  001A2A  A4D8               	btfss	status,2,c
  5015  001A2C  EF1A  F00D         	goto	u5721
  5016  001A30  EF1C  F00D         	goto	u5720
  5017  001A34                     u5721:
  5018  001A34  EF34  F00D         	goto	l5214
  5019  001A38                     u5720:
  5020  001A38                     
  5021                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5022  001A38  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5023  001A3C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5024  001A40  2ADE               	incf	postinc2,f,c
  5025  001A42  0E00               	movlw	0
  5026  001A44  22DD               	addwfc	postdec2,f,c
  5027  001A46                     
  5028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5029  001A46  0E00               	movlw	0
  5030  001A48  6E02               	movwf	(fputc@c+1)^0,c
  5031  001A4A  0E25               	movlw	37
  5032  001A4C  6E01               	movwf	fputc@c^0,c
  5033  001A4E  C0A4  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5034  001A52  C0A5  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5035  001A56  EC89  F01D         	call	_fputc	;wreg free
  5036  001A5A                     l5210:
  5037                           
  5038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5039  001A5A  0E00               	movlw	0
  5040  001A5C  0100               	movlb	0	; () banked
  5041  001A5E  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5042  001A60  0E01               	movlw	1
  5043  001A62  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  5044  001A64  EF5D  F00D         	goto	l1476
  5045  001A68                     l5214:
  5046                           
  5047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5048  001A68  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5049  001A6C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5050  001A70  2ADE               	incf	postinc2,f,c
  5051  001A72  0E00               	movlw	0
  5052  001A74  22DD               	addwfc	postdec2,f,c
  5053  001A76                     
  5054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5055  001A76  0E00               	movlw	0
  5056  001A78  0100               	movlb	0	; () banked
  5057  001A7A  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5058  001A7C  0E00               	movlw	0
  5059  001A7E  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  5060  001A80  EF5D  F00D         	goto	l1476
  5061  001A84                     l5220:
  5062                           
  5063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5064  001A84  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5065  001A88  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5066  001A8C  CFDE FFF6          	movff	postinc2,tblptrl
  5067  001A90  CFDD FFF7          	movff	postdec2,tblptrh
  5068  001A94                     	if	0	;tblptru may be non-zero
  5069  001A94                     	endif
  5070  001A94                     	if	0	;tblptru may be non-zero
  5071  001A94                     	endif
  5072  001A94  0008               	tblrd		*
  5073  001A96  50F5               	movf	tablat,w,c
  5074  001A98  6E01               	movwf	fputc@c^0,c
  5075  001A9A  6A02               	clrf	(fputc@c+1)^0,c
  5076  001A9C  C0A4  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5077  001AA0  C0A5  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5078  001AA4  EC89  F01D         	call	_fputc	;wreg free
  5079  001AA8                     
  5080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5081  001AA8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5082  001AAC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5083  001AB0  2ADE               	incf	postinc2,f,c
  5084  001AB2  0E00               	movlw	0
  5085  001AB4  22DD               	addwfc	postdec2,f,c
  5086  001AB6  EF2D  F00D         	goto	l5210
  5087  001ABA                     l1476:
  5088  001ABA  0012               	return		;funcret
  5089  001ABC                     __end_of_vfpfcnvrt:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _xtoa *****************
  5093 ;; Defined at:
  5094 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5097 ;;		 -> sprintf@f(6), 
  5098 ;;  d               8   29[COMRAM] unsigned long long 
  5099 ;;  x               1   37[COMRAM] unsigned char 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  n               8   54[COMRAM] unsigned long long 
  5102 ;;  c               2   64[COMRAM] int 
  5103 ;;  i               2   62[COMRAM] int 
  5104 ;;  w               2   52[COMRAM] int 
  5105 ;;  p               2   50[COMRAM] int 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  2   27[COMRAM] int 
  5108 ;; Registers used:
  5109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5115 ;;      Params:        11       0       0       0       0       0       0       0       0
  5116 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5117 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5118 ;;      Totals:        39       0       0       0       0       0       0       0       0
  5119 ;;Total ram usage:       39 bytes
  5120 ;; Hardware stack levels used: 1
  5121 ;; Hardware stack levels required when called: 4
  5122 ;; This function calls:
  5123 ;;		_isalpha
  5124 ;;		_isupper
  5125 ;;		_pad
  5126 ;;		_toupper
  5127 ;; This function is called by:
  5128 ;;		_vfpfcnvrt
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text26
  5133  002A30                     __ptext26:
  5134                           	callstack 0
  5135  002A30                     _xtoa:
  5136                           	callstack 22
  5137  002A30                     
  5138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5139  002A30  0100               	movlb	0	; () banked
  5140  002A32  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5141  002A34  EF1E  F015         	goto	u5221
  5142  002A38  EF20  F015         	goto	u5220
  5143  002A3C                     u5221:
  5144  002A3C  EF21  F015         	goto	l4922
  5145  002A40                     u5220:
  5146  002A40                     
  5147                           ; BSR set to: 0
  5148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5149  002A40  93F8               	bcf	_flags& (0+255),1,b
  5150  002A42                     l4922:
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5154  002A42  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5155  002A44  EF2E  F015         	goto	u5230
  5156  002A48  51F7               	movf	(_prec+1)& (0+255),w,b
  5157  002A4A  E106               	bnz	u5231
  5158  002A4C  05F6               	decf	_prec& (0+255),w,b
  5159  002A4E  B0D8               	btfsc	status,0,c
  5160  002A50  EF2C  F015         	goto	u5231
  5161  002A54  EF2E  F015         	goto	u5230
  5162  002A58                     u5231:
  5163  002A58  EF34  F015         	goto	l1422
  5164  002A5C                     u5230:
  5165  002A5C                     
  5166                           ; BSR set to: 0
  5167  002A5C  0E00               	movlw	0
  5168  002A5E  6E34               	movwf	(xtoa@p+1)^0,c
  5169  002A60  0E01               	movlw	1
  5170  002A62  6E33               	movwf	xtoa@p^0,c
  5171  002A64  EF38  F015         	goto	l1424
  5172  002A68                     l1422:
  5173                           
  5174                           ; BSR set to: 0
  5175  002A68  C0F6  F033         	movff	_prec,xtoa@p
  5176  002A6C  C0F7  F034         	movff	_prec+1,xtoa@p+1
  5177  002A70                     l1424:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5181  002A70  C0F4  F035         	movff	_width,xtoa@w
  5182  002A74  C0F5  F036         	movff	_width+1,xtoa@w+1
  5183                           
  5184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5185  002A78  A9F8               	btfss	_flags& (0+255),4,b
  5186  002A7A  EF41  F015         	goto	u5241
  5187  002A7E  EF43  F015         	goto	u5240
  5188  002A82                     u5241:
  5189  002A82  EF47  F015         	goto	l4928
  5190  002A86                     u5240:
  5191  002A86                     
  5192                           ; BSR set to: 0
  5193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5194  002A86  0EFE               	movlw	254
  5195  002A88  2635               	addwf	xtoa@w^0,f,c
  5196  002A8A  0EFF               	movlw	255
  5197  002A8C  2236               	addwfc	(xtoa@w+1)^0,f,c
  5198  002A8E                     l4928:
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5202  002A8E  C01E  F037         	movff	xtoa@d,xtoa@n
  5203  002A92  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5204  002A96  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5205  002A9A  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5206  002A9E  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5207  002AA2  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5208  002AA6  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5209  002AAA  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5210  002AAE                     
  5211                           ; BSR set to: 0
  5212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5213  002AAE  0E00               	movlw	0
  5214  002AB0  6E40               	movwf	(xtoa@i+1)^0,c
  5215  002AB2  0E4F               	movlw	79
  5216  002AB4  6E3F               	movwf	xtoa@i^0,c
  5217  002AB6                     
  5218                           ; BSR set to: 0
  5219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5220  002AB6  0E00               	movlw	0
  5221  002AB8  0101               	movlb	1	; () banked
  5222  002ABA  6F5D               	movwf	(_dbuf+79)& (0+255),b
  5223                           
  5224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5225  002ABC  EF13  F016         	goto	l4964
  5226  002AC0                     l4934:
  5227                           
  5228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  5229  002AC0  063F               	decf	xtoa@i^0,f,c
  5230  002AC2  A0D8               	btfss	status,0,c
  5231  002AC4  0640               	decf	(xtoa@i+1)^0,f,c
  5232  002AC6                     
  5233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5234  002AC6  0E0F               	movlw	15
  5235  002AC8  1437               	andwf	xtoa@n^0,w,c
  5236  002ACA  6E41               	movwf	xtoa@c^0,c
  5237  002ACC  6A42               	clrf	(xtoa@c+1)^0,c
  5238  002ACE                     
  5239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5240  002ACE  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5241  002AD0  EF73  F015         	goto	u5251
  5242  002AD4  5042               	movf	(xtoa@c+1)^0,w,c
  5243  002AD6  E109               	bnz	u5250
  5244  002AD8  0E0A               	movlw	10
  5245  002ADA  5C41               	subwf	xtoa@c^0,w,c
  5246  002ADC  A0D8               	btfss	status,0,c
  5247  002ADE  EF73  F015         	goto	u5251
  5248  002AE2  EF75  F015         	goto	u5250
  5249  002AE6                     u5251:
  5250  002AE6  EF7D  F015         	goto	l4942
  5251  002AEA                     u5250:
  5252  002AEA  0E57               	movlw	87
  5253  002AEC  2441               	addwf	xtoa@c^0,w,c
  5254  002AEE  6E41               	movwf	xtoa@c^0,c
  5255  002AF0  0E00               	movlw	0
  5256  002AF2  2042               	addwfc	(xtoa@c+1)^0,w,c
  5257  002AF4  6E42               	movwf	(xtoa@c+1)^0,c
  5258  002AF6  EF83  F015         	goto	l1431
  5259  002AFA                     l4942:
  5260  002AFA  0E30               	movlw	48
  5261  002AFC  2441               	addwf	xtoa@c^0,w,c
  5262  002AFE  6E41               	movwf	xtoa@c^0,c
  5263  002B00  0E00               	movlw	0
  5264  002B02  2042               	addwfc	(xtoa@c+1)^0,w,c
  5265  002B04  6E42               	movwf	(xtoa@c+1)^0,c
  5266  002B06                     l1431:
  5267  002B06  0EBF               	movlw	191
  5268  002B08  6E27               	movwf	??_xtoa^0,c
  5269  002B0A  0EFF               	movlw	255
  5270  002B0C  6E28               	movwf	(??_xtoa+1)^0,c
  5271  002B0E  5026               	movf	xtoa@x^0,w,c
  5272  002B10  6E29               	movwf	(??_xtoa+2)^0,c
  5273  002B12  6A2A               	clrf	(??_xtoa+3)^0,c
  5274  002B14  5027               	movf	??_xtoa^0,w,c
  5275  002B16  2629               	addwf	(??_xtoa+2)^0,f,c
  5276  002B18  5028               	movf	(??_xtoa+1)^0,w,c
  5277  002B1A  222A               	addwfc	(??_xtoa+3)^0,f,c
  5278  002B1C  502A               	movf	(??_xtoa+3)^0,w,c
  5279  002B1E  E10A               	bnz	u5260
  5280  002B20  0E1A               	movlw	26
  5281  002B22  5C29               	subwf	(??_xtoa+2)^0,w,c
  5282  002B24  A0D8               	btfss	status,0,c
  5283  002B26  EF97  F015         	goto	u5261
  5284  002B2A  EF9A  F015         	goto	u5260
  5285  002B2E                     u5261:
  5286  002B2E  0E01               	movlw	1
  5287  002B30  EF9B  F015         	goto	u5270
  5288  002B34                     u5260:
  5289  002B34  0E00               	movlw	0
  5290  002B36                     u5270:
  5291  002B36  6E2F               	movwf	_xtoa$1523^0,c
  5292  002B38  6A30               	clrf	(_xtoa$1523+1)^0,c
  5293  002B3A  502F               	movf	_xtoa$1523^0,w,c
  5294  002B3C  1030               	iorwf	(_xtoa$1523+1)^0,w,c
  5295  002B3E  B4D8               	btfsc	status,2,c
  5296  002B40  EFA4  F015         	goto	u5281
  5297  002B44  EFA6  F015         	goto	u5280
  5298  002B48                     u5281:
  5299  002B48  EFD6  F015         	goto	l4956
  5300  002B4C                     u5280:
  5301  002B4C  0E9F               	movlw	159
  5302  002B4E  6E27               	movwf	??_xtoa^0,c
  5303  002B50  0EFF               	movlw	255
  5304  002B52  6E28               	movwf	(??_xtoa+1)^0,c
  5305  002B54  0E20               	movlw	32
  5306  002B56  1041               	iorwf	xtoa@c^0,w,c
  5307  002B58  6E29               	movwf	(??_xtoa+2)^0,c
  5308  002B5A  0E00               	movlw	0
  5309  002B5C  1042               	iorwf	(xtoa@c+1)^0,w,c
  5310  002B5E  6E2A               	movwf	(??_xtoa+3)^0,c
  5311  002B60  5027               	movf	??_xtoa^0,w,c
  5312  002B62  2629               	addwf	(??_xtoa+2)^0,f,c
  5313  002B64  5028               	movf	(??_xtoa+1)^0,w,c
  5314  002B66  222A               	addwfc	(??_xtoa+3)^0,f,c
  5315  002B68  502A               	movf	(??_xtoa+3)^0,w,c
  5316  002B6A  E10A               	bnz	u5290
  5317  002B6C  0E1A               	movlw	26
  5318  002B6E  5C29               	subwf	(??_xtoa+2)^0,w,c
  5319  002B70  A0D8               	btfss	status,0,c
  5320  002B72  EFBD  F015         	goto	u5291
  5321  002B76  EFC0  F015         	goto	u5290
  5322  002B7A                     u5291:
  5323  002B7A  0E01               	movlw	1
  5324  002B7C  EFC1  F015         	goto	u5300
  5325  002B80                     u5290:
  5326  002B80  0E00               	movlw	0
  5327  002B82                     u5300:
  5328  002B82  6E31               	movwf	_xtoa$1524^0,c
  5329  002B84  6A32               	clrf	(_xtoa$1524+1)^0,c
  5330  002B86  5031               	movf	_xtoa$1524^0,w,c
  5331  002B88  1032               	iorwf	(_xtoa$1524+1)^0,w,c
  5332  002B8A  B4D8               	btfsc	status,2,c
  5333  002B8C  EFCA  F015         	goto	u5311
  5334  002B90  EFCC  F015         	goto	u5310
  5335  002B94                     u5311:
  5336  002B94  EFD6  F015         	goto	l4956
  5337  002B98                     u5310:
  5338  002B98                     
  5339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5340  002B98  C041  F007         	movff	xtoa@c,toupper@c
  5341  002B9C  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5342  002BA0  ECF9  F020         	call	_toupper	;wreg free
  5343  002BA4  C007  F041         	movff	?_toupper,xtoa@c
  5344  002BA8  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5345  002BAC                     l4956:
  5346                           
  5347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5348  002BAC  0E0E               	movlw	low _dbuf
  5349  002BAE  243F               	addwf	xtoa@i^0,w,c
  5350  002BB0  6ED9               	movwf	fsr2l,c
  5351  002BB2  0E01               	movlw	high _dbuf
  5352  002BB4  2040               	addwfc	(xtoa@i+1)^0,w,c
  5353  002BB6  6EDA               	movwf	fsr2h,c
  5354  002BB8  C041  FFDF         	movff	xtoa@c,indf2
  5355  002BBC                     
  5356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  5357  002BBC  0633               	decf	xtoa@p^0,f,c
  5358  002BBE  A0D8               	btfss	status,0,c
  5359  002BC0  0634               	decf	(xtoa@p+1)^0,f,c
  5360  002BC2                     
  5361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  5362  002BC2  0635               	decf	xtoa@w^0,f,c
  5363  002BC4  A0D8               	btfss	status,0,c
  5364  002BC6  0636               	decf	(xtoa@w+1)^0,f,c
  5365  002BC8                     
  5366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5367  002BC8  C037  F027         	movff	xtoa@n,??_xtoa
  5368  002BCC  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5369  002BD0  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5370  002BD4  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5371  002BD8  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5372  002BDC  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5373  002BE0  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5374  002BE4  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5375  002BE8  0E05               	movlw	5
  5376  002BEA  EF00  F016         	goto	u5320
  5377  002BEE                     u5325:
  5378  002BEE  90D8               	bcf	status,0,c
  5379  002BF0  322E               	rrcf	(??_xtoa+7)^0,f,c
  5380  002BF2  322D               	rrcf	(??_xtoa+6)^0,f,c
  5381  002BF4  322C               	rrcf	(??_xtoa+5)^0,f,c
  5382  002BF6  322B               	rrcf	(??_xtoa+4)^0,f,c
  5383  002BF8  322A               	rrcf	(??_xtoa+3)^0,f,c
  5384  002BFA  3229               	rrcf	(??_xtoa+2)^0,f,c
  5385  002BFC  3228               	rrcf	(??_xtoa+1)^0,f,c
  5386  002BFE  3227               	rrcf	??_xtoa^0,f,c
  5387  002C00                     u5320:
  5388  002C00  2EE8               	decfsz	wreg,f,c
  5389  002C02  EFF7  F015         	goto	u5325
  5390  002C06  C027  F037         	movff	??_xtoa,xtoa@n
  5391  002C0A  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5392  002C0E  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5393  002C12  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5394  002C16  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5395  002C1A  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5396  002C1E  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5397  002C22  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5398  002C26                     l4964:
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5401  002C26  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5402  002C28  EF1F  F016         	goto	u5331
  5403  002C2C  5040               	movf	(xtoa@i+1)^0,w,c
  5404  002C2E  E109               	bnz	u5330
  5405  002C30  0E02               	movlw	2
  5406  002C32  5C3F               	subwf	xtoa@i^0,w,c
  5407  002C34  A0D8               	btfss	status,0,c
  5408  002C36  EF1F  F016         	goto	u5331
  5409  002C3A  EF21  F016         	goto	u5330
  5410  002C3E                     u5331:
  5411  002C3E  EF52  F016         	goto	l1445
  5412  002C42                     u5330:
  5413  002C42  5037               	movf	xtoa@n^0,w,c
  5414  002C44  1038               	iorwf	(xtoa@n+1)^0,w,c
  5415  002C46  1039               	iorwf	(xtoa@n+2)^0,w,c
  5416  002C48  103A               	iorwf	(xtoa@n+3)^0,w,c
  5417  002C4A  103B               	iorwf	(xtoa@n+4)^0,w,c
  5418  002C4C  103C               	iorwf	(xtoa@n+5)^0,w,c
  5419  002C4E  103D               	iorwf	(xtoa@n+6)^0,w,c
  5420  002C50  103E               	iorwf	(xtoa@n+7)^0,w,c
  5421  002C52  A4D8               	btfss	status,2,c
  5422  002C54  EF2E  F016         	goto	u5341
  5423  002C58  EF30  F016         	goto	u5340
  5424  002C5C                     u5341:
  5425  002C5C  EF60  F015         	goto	l4934
  5426  002C60                     u5340:
  5427  002C60  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5428  002C62  EF3D  F016         	goto	u5350
  5429  002C66  5034               	movf	(xtoa@p+1)^0,w,c
  5430  002C68  E106               	bnz	u5351
  5431  002C6A  0433               	decf	xtoa@p^0,w,c
  5432  002C6C  B0D8               	btfsc	status,0,c
  5433  002C6E  EF3B  F016         	goto	u5351
  5434  002C72  EF3D  F016         	goto	u5350
  5435  002C76                     u5351:
  5436  002C76  EF60  F015         	goto	l4934
  5437  002C7A                     u5350:
  5438  002C7A  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5439  002C7C  EF48  F016         	goto	u5361
  5440  002C80  5036               	movf	(xtoa@w+1)^0,w,c
  5441  002C82  E108               	bnz	u5360
  5442  002C84  0435               	decf	xtoa@w^0,w,c
  5443  002C86  A0D8               	btfss	status,0,c
  5444  002C88  EF48  F016         	goto	u5361
  5445  002C8C  EF4A  F016         	goto	u5360
  5446  002C90                     u5361:
  5447  002C90  EF52  F016         	goto	l1445
  5448  002C94                     u5360:
  5449  002C94  0100               	movlb	0	; () banked
  5450  002C96  B3F8               	btfsc	_flags& (0+255),1,b
  5451  002C98  EF50  F016         	goto	u5371
  5452  002C9C  EF52  F016         	goto	u5370
  5453  002CA0                     u5371:
  5454  002CA0  EF60  F015         	goto	l4934
  5455  002CA4                     u5370:
  5456  002CA4                     l1445:
  5457                           
  5458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5459  002CA4  0100               	movlb	0	; () banked
  5460  002CA6  A9F8               	btfss	_flags& (0+255),4,b
  5461  002CA8  EF58  F016         	goto	u5381
  5462  002CAC  EF5A  F016         	goto	u5380
  5463  002CB0                     u5381:
  5464  002CB0  EF70  F016         	goto	l4980
  5465  002CB4                     u5380:
  5466  002CB4                     
  5467                           ; BSR set to: 0
  5468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  5469  002CB4  063F               	decf	xtoa@i^0,f,c
  5470  002CB6  A0D8               	btfss	status,0,c
  5471  002CB8  0640               	decf	(xtoa@i+1)^0,f,c
  5472  002CBA                     
  5473                           ; BSR set to: 0
  5474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5475  002CBA  0E0E               	movlw	low _dbuf
  5476  002CBC  243F               	addwf	xtoa@i^0,w,c
  5477  002CBE  6ED9               	movwf	fsr2l,c
  5478  002CC0  0E01               	movlw	high _dbuf
  5479  002CC2  2040               	addwfc	(xtoa@i+1)^0,w,c
  5480  002CC4  6EDA               	movwf	fsr2h,c
  5481  002CC6  C026  FFDF         	movff	xtoa@x,indf2
  5482  002CCA                     
  5483                           ; BSR set to: 0
  5484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  5485  002CCA  063F               	decf	xtoa@i^0,f,c
  5486  002CCC  A0D8               	btfss	status,0,c
  5487  002CCE  0640               	decf	(xtoa@i+1)^0,f,c
  5488                           
  5489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5490  002CD0  0E0E               	movlw	low _dbuf
  5491  002CD2  243F               	addwf	xtoa@i^0,w,c
  5492  002CD4  6ED9               	movwf	fsr2l,c
  5493  002CD6  0E01               	movlw	high _dbuf
  5494  002CD8  2040               	addwfc	(xtoa@i+1)^0,w,c
  5495  002CDA  6EDA               	movwf	fsr2h,c
  5496  002CDC  0E30               	movlw	48
  5497  002CDE  6EDF               	movwf	indf2,c
  5498  002CE0                     l4980:
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5502  002CE0  C01C  F011         	movff	xtoa@fp,pad@fp
  5503  002CE4  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5504  002CE8  0E0E               	movlw	low _dbuf
  5505  002CEA  243F               	addwf	xtoa@i^0,w,c
  5506  002CEC  6E13               	movwf	pad@buf^0,c
  5507  002CEE  0E01               	movlw	high _dbuf
  5508  002CF0  2040               	addwfc	(xtoa@i+1)^0,w,c
  5509  002CF2  6E14               	movwf	(pad@buf+1)^0,c
  5510  002CF4  C035  F015         	movff	xtoa@w,pad@p
  5511  002CF8  C036  F016         	movff	xtoa@w+1,pad@p+1
  5512  002CFC  ECEE  F01D         	call	_pad	;wreg free
  5513  002D00  C011  F01C         	movff	?_pad,?_xtoa
  5514  002D04  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5515  002D08  0012               	return		;funcret
  5516  002D0A                     __end_of_xtoa:
  5517                           	callstack 0
  5518                           
  5519 ;; *************** function _toupper *****************
  5520 ;; Defined at:
  5521 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  c               2    6[COMRAM] int 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  2    6[COMRAM] int 
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5535 ;;      Params:         2       0       0       0       0       0       0       0       0
  5536 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5537 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5538 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5539 ;;Total ram usage:        8 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; Hardware stack levels required when called: 1
  5542 ;; This function calls:
  5543 ;;		_islower
  5544 ;; This function is called by:
  5545 ;;		_xtoa
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text27
  5550  0041F2                     __ptext27:
  5551                           	callstack 0
  5552  0041F2                     _toupper:
  5553                           	callstack 24
  5554  0041F2  0E9F               	movlw	159
  5555  0041F4  6E09               	movwf	??_toupper^0,c
  5556  0041F6  0EFF               	movlw	255
  5557  0041F8  6E0A               	movwf	(??_toupper+1)^0,c
  5558  0041FA  C007  F00B         	movff	toupper@c,??_toupper+2
  5559  0041FE  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5560  004202  5009               	movf	??_toupper^0,w,c
  5561  004204  260B               	addwf	(??_toupper+2)^0,f,c
  5562  004206  500A               	movf	(??_toupper+1)^0,w,c
  5563  004208  220C               	addwfc	(??_toupper+3)^0,f,c
  5564  00420A  500C               	movf	(??_toupper+3)^0,w,c
  5565  00420C  E10A               	bnz	u4580
  5566  00420E  0E1A               	movlw	26
  5567  004210  5C0B               	subwf	(??_toupper+2)^0,w,c
  5568  004212  A0D8               	btfss	status,0,c
  5569  004214  EF0E  F021         	goto	u4581
  5570  004218  EF11  F021         	goto	u4580
  5571  00421C                     u4581:
  5572  00421C  0E01               	movlw	1
  5573  00421E  EF12  F021         	goto	u4590
  5574  004222                     u4580:
  5575  004222  0E00               	movlw	0
  5576  004224                     u4590:
  5577  004224  6E0D               	movwf	_toupper$1696^0,c
  5578  004226  6A0E               	clrf	(_toupper$1696+1)^0,c
  5579  004228  500D               	movf	_toupper$1696^0,w,c
  5580  00422A  100E               	iorwf	(_toupper$1696+1)^0,w,c
  5581  00422C  B4D8               	btfsc	status,2,c
  5582  00422E  EF1B  F021         	goto	u4601
  5583  004232  EF1D  F021         	goto	u4600
  5584  004236                     u4601:
  5585  004236  EF23  F021         	goto	l1636
  5586  00423A                     u4600:
  5587  00423A  0E5F               	movlw	95
  5588  00423C  1407               	andwf	toupper@c^0,w,c
  5589  00423E  6E07               	movwf	?_toupper^0,c
  5590  004240  6A08               	clrf	(?_toupper+1)^0,c
  5591  004242  EF27  F021         	goto	l1641
  5592  004246                     l1636:
  5593  004246  C007  F007         	movff	toupper@c,?_toupper
  5594  00424A  C008  F008         	movff	toupper@c+1,?_toupper+1
  5595  00424E                     l1641:
  5596  00424E  0012               	return		;funcret
  5597  004250                     __end_of_toupper:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _islower *****************
  5601 ;; Defined at:
  5602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  c               2    0[COMRAM] int 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  2    0[COMRAM] int 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5616 ;;      Params:         2       0       0       0       0       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5618 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5619 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5620 ;;Total ram usage:        6 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_toupper
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text28
  5630  004816                     __ptext28:
  5631                           	callstack 0
  5632  004816                     _islower:
  5633                           	callstack 24
  5634  004816  0E9F               	movlw	159
  5635  004818  6E03               	movwf	??_islower^0,c
  5636  00481A  0EFF               	movlw	255
  5637  00481C  6E04               	movwf	(??_islower+1)^0,c
  5638  00481E  C001  F005         	movff	islower@c,??_islower+2
  5639  004822  C002  F006         	movff	islower@c+1,??_islower+3
  5640  004826  5003               	movf	??_islower^0,w,c
  5641  004828  2605               	addwf	(??_islower+2)^0,f,c
  5642  00482A  5004               	movf	(??_islower+1)^0,w,c
  5643  00482C  2206               	addwfc	(??_islower+3)^0,f,c
  5644  00482E  5006               	movf	(??_islower+3)^0,w,c
  5645  004830  E10A               	bnz	u3580
  5646  004832  0E1A               	movlw	26
  5647  004834  5C05               	subwf	(??_islower+2)^0,w,c
  5648  004836  A0D8               	btfss	status,0,c
  5649  004838  EF20  F024         	goto	u3581
  5650  00483C  EF23  F024         	goto	u3580
  5651  004840                     u3581:
  5652  004840  0E01               	movlw	1
  5653  004842  EF24  F024         	goto	u3590
  5654  004846                     u3580:
  5655  004846  0E00               	movlw	0
  5656  004848                     u3590:
  5657  004848  6E01               	movwf	?_islower^0,c
  5658  00484A  6A02               	clrf	(?_islower+1)^0,c
  5659  00484C  0012               	return		;funcret
  5660  00484E                     __end_of_islower:
  5661                           	callstack 0
  5662                           
  5663 ;; *************** function _isalpha *****************
  5664 ;; Defined at:
  5665 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  c               2    0[COMRAM] int 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  2    0[COMRAM] int 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5679 ;;      Params:         2       0       0       0       0       0       0       0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5681 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5682 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5683 ;;Total ram usage:        6 bytes
  5684 ;; Hardware stack levels used: 1
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_xtoa
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text29
  5693  0047A0                     __ptext29:
  5694                           	callstack 0
  5695  0047A0                     _isalpha:
  5696                           	callstack 25
  5697  0047A0  0E9F               	movlw	159
  5698  0047A2  6E03               	movwf	??_isalpha^0,c
  5699  0047A4  0EFF               	movlw	255
  5700  0047A6  6E04               	movwf	(??_isalpha+1)^0,c
  5701  0047A8  0E20               	movlw	32
  5702  0047AA  1001               	iorwf	isalpha@c^0,w,c
  5703  0047AC  6E05               	movwf	(??_isalpha+2)^0,c
  5704  0047AE  0E00               	movlw	0
  5705  0047B0  1002               	iorwf	(isalpha@c+1)^0,w,c
  5706  0047B2  6E06               	movwf	(??_isalpha+3)^0,c
  5707  0047B4  5003               	movf	??_isalpha^0,w,c
  5708  0047B6  2605               	addwf	(??_isalpha+2)^0,f,c
  5709  0047B8  5004               	movf	(??_isalpha+1)^0,w,c
  5710  0047BA  2206               	addwfc	(??_isalpha+3)^0,f,c
  5711  0047BC  5006               	movf	(??_isalpha+3)^0,w,c
  5712  0047BE  E10A               	bnz	u4560
  5713  0047C0  0E1A               	movlw	26
  5714  0047C2  5C05               	subwf	(??_isalpha+2)^0,w,c
  5715  0047C4  A0D8               	btfss	status,0,c
  5716  0047C6  EFE7  F023         	goto	u4561
  5717  0047CA  EFEA  F023         	goto	u4560
  5718  0047CE                     u4561:
  5719  0047CE  0E01               	movlw	1
  5720  0047D0  EFEB  F023         	goto	u4570
  5721  0047D4                     u4560:
  5722  0047D4  0E00               	movlw	0
  5723  0047D6                     u4570:
  5724  0047D6  6E01               	movwf	?_isalpha^0,c
  5725  0047D8  6A02               	clrf	(?_isalpha+1)^0,c
  5726  0047DA  0012               	return		;funcret
  5727  0047DC                     __end_of_isalpha:
  5728                           	callstack 0
  5729                           
  5730 ;; *************** function _strncmp *****************
  5731 ;; Defined at:
  5732 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5735 ;;		 -> vfpfcnvrt@ct(3), 
  5736 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5737 ;;		 -> STR_33(3), 
  5738 ;;  n               2    4[COMRAM] unsigned int 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5741 ;;		 -> STR_33(3), 
  5742 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5743 ;;		 -> vfpfcnvrt@ct(3), 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  2    0[COMRAM] int 
  5746 ;; Registers used:
  5747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5753 ;;      Params:         6       0       0       0       0       0       0       0       0
  5754 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5755 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5756 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5757 ;;Total ram usage:       11 bytes
  5758 ;; Hardware stack levels used: 1
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_vfpfcnvrt
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text30
  5767  003A3C                     __ptext30:
  5768                           	callstack 0
  5769  003A3C                     _strncmp:
  5770                           	callstack 26
  5771  003A3C  C001  F008         	movff	strncmp@_l,strncmp@l
  5772  003A40  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5773  003A44  C003  F00A         	movff	strncmp@_r,strncmp@r
  5774  003A48  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5775  003A4C  0605               	decf	strncmp@n^0,f,c
  5776  003A4E  A0D8               	btfss	status,0,c
  5777  003A50  0606               	decf	(strncmp@n+1)^0,f,c
  5778  003A52  2805               	incf	strncmp@n^0,w,c
  5779  003A54  E106               	bnz	u5461
  5780  003A56  2806               	incf	(strncmp@n+1)^0,w,c
  5781  003A58  A4D8               	btfss	status,2,c
  5782  003A5A  EF31  F01D         	goto	u5461
  5783  003A5E  EF33  F01D         	goto	u5460
  5784  003A62                     u5461:
  5785  003A62  EF40  F01D         	goto	l5034
  5786  003A66                     u5460:
  5787  003A66  0E00               	movlw	0
  5788  003A68  6E02               	movwf	(?_strncmp+1)^0,c
  5789  003A6A  0E00               	movlw	0
  5790  003A6C  6E01               	movwf	?_strncmp^0,c
  5791  003A6E  EF88  F01D         	goto	l1613
  5792  003A72                     l5032:
  5793  003A72  4A08               	infsnz	strncmp@l^0,f,c
  5794  003A74  2A09               	incf	(strncmp@l+1)^0,f,c
  5795  003A76  4A0A               	infsnz	strncmp@r^0,f,c
  5796  003A78  2A0B               	incf	(strncmp@r+1)^0,f,c
  5797  003A7A  0605               	decf	strncmp@n^0,f,c
  5798  003A7C  A0D8               	btfss	status,0,c
  5799  003A7E  0606               	decf	(strncmp@n+1)^0,f,c
  5800  003A80                     l5034:
  5801  003A80  C008  FFD9         	movff	strncmp@l,fsr2l
  5802  003A84  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5803  003A88  50DF               	movf	indf2,w,c
  5804  003A8A  B4D8               	btfsc	status,2,c
  5805  003A8C  EF4A  F01D         	goto	u5471
  5806  003A90  EF4C  F01D         	goto	u5470
  5807  003A94                     u5471:
  5808  003A94  EF77  F01D         	goto	l5042
  5809  003A98                     u5470:
  5810  003A98  C00A  FFF6         	movff	strncmp@r,tblptrl
  5811  003A9C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5812  003AA0                     	if	0	;tblptru may be non-zero
  5813  003AA0                     	endif
  5814  003AA0                     	if	0	;tblptru may be non-zero
  5815  003AA0                     	endif
  5816  003AA0  0008               	tblrd		*
  5817  003AA2  50F5               	movf	tablat,w,c
  5818  003AA4  0900               	iorlw	0
  5819  003AA6  B4D8               	btfsc	status,2,c
  5820  003AA8  EF58  F01D         	goto	u5481
  5821  003AAC  EF5A  F01D         	goto	u5480
  5822  003AB0                     u5481:
  5823  003AB0  EF77  F01D         	goto	l5042
  5824  003AB4                     u5480:
  5825  003AB4  5005               	movf	strncmp@n^0,w,c
  5826  003AB6  1006               	iorwf	(strncmp@n+1)^0,w,c
  5827  003AB8  B4D8               	btfsc	status,2,c
  5828  003ABA  EF61  F01D         	goto	u5491
  5829  003ABE  EF63  F01D         	goto	u5490
  5830  003AC2                     u5491:
  5831  003AC2  EF77  F01D         	goto	l5042
  5832  003AC6                     u5490:
  5833  003AC6  C008  FFD9         	movff	strncmp@l,fsr2l
  5834  003ACA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5835  003ACE  50DF               	movf	indf2,w,c
  5836  003AD0  6E07               	movwf	??_strncmp^0,c
  5837  003AD2  C00A  FFF6         	movff	strncmp@r,tblptrl
  5838  003AD6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5839  003ADA                     	if	0	;tblptru may be non-zero
  5840  003ADA                     	endif
  5841  003ADA                     	if	0	;tblptru may be non-zero
  5842  003ADA                     	endif
  5843  003ADA  0008               	tblrd		*
  5844  003ADC  50F5               	movf	tablat,w,c
  5845  003ADE  1807               	xorwf	??_strncmp^0,w,c
  5846  003AE0  B4D8               	btfsc	status,2,c
  5847  003AE2  EF75  F01D         	goto	u5501
  5848  003AE6  EF77  F01D         	goto	u5500
  5849  003AEA                     u5501:
  5850  003AEA  EF39  F01D         	goto	l5032
  5851  003AEE                     u5500:
  5852  003AEE                     l5042:
  5853  003AEE  C008  FFD9         	movff	strncmp@l,fsr2l
  5854  003AF2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5855  003AF6  50DF               	movf	indf2,w,c
  5856  003AF8  6E07               	movwf	??_strncmp^0,c
  5857  003AFA  C00A  FFF6         	movff	strncmp@r,tblptrl
  5858  003AFE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5859  003B02                     	if	0	;tblptru may be non-zero
  5860  003B02                     	endif
  5861  003B02                     	if	0	;tblptru may be non-zero
  5862  003B02                     	endif
  5863  003B02  0008               	tblrd		*
  5864  003B04  50F5               	movf	tablat,w,c
  5865  003B06  5C07               	subwf	??_strncmp^0,w,c
  5866  003B08  6E01               	movwf	?_strncmp^0,c
  5867  003B0A  6A02               	clrf	(?_strncmp+1)^0,c
  5868  003B0C  A0D8               	btfss	status,0,c
  5869  003B0E  0602               	decf	(?_strncmp+1)^0,f,c
  5870  003B10                     l1613:
  5871  003B10  0012               	return		;funcret
  5872  003B12                     __end_of_strncmp:
  5873                           	callstack 0
  5874                           
  5875 ;; *************** function _efgtoa *****************
  5876 ;; Defined at:
  5877 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  5880 ;;		 -> sprintf@f(6), 
  5881 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  5882 ;;  c               1    6[BANK0 ] unsigned char 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  u               4   64[BANK0 ] unsigned char 
  5885 ;;  g               4   56[BANK0 ] unsigned char 
  5886 ;;  l               4   50[BANK0 ] unsigned char 
  5887 ;;  h               4   46[BANK0 ] unsigned char 
  5888 ;;  ou              4   32[BANK0 ] unsigned char 
  5889 ;;  n               2   62[BANK0 ] int 
  5890 ;;  e               2   60[BANK0 ] int 
  5891 ;;  i               2   54[BANK0 ] int 
  5892 ;;  w               2   42[BANK0 ] int 
  5893 ;;  p               2   40[BANK0 ] int 
  5894 ;;  sign            2   38[BANK0 ] int 
  5895 ;;  d               2   36[BANK0 ] int 
  5896 ;;  m               2   30[BANK0 ] int 
  5897 ;;  ne              2   28[BANK0 ] int 
  5898 ;;  pp              2   26[BANK0 ] int 
  5899 ;;  t               2   24[BANK0 ] int 
  5900 ;;  mode            1   45[BANK0 ] unsigned char 
  5901 ;;  nmode           1   44[BANK0 ] unsigned char 
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  2    0[BANK0 ] int 
  5904 ;; Registers used:
  5905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5911 ;;      Params:         0       7       0       0       0       0       0       0       0
  5912 ;;      Locals:         0      56       0       0       0       0       0       0       0
  5913 ;;      Temps:          0       5       0       0       0       0       0       0       0
  5914 ;;      Totals:         0      68       0       0       0       0       0       0       0
  5915 ;;Total ram usage:       68 bytes
  5916 ;; Hardware stack levels used: 1
  5917 ;; Hardware stack levels required when called: 4
  5918 ;; This function calls:
  5919 ;;		___awdiv
  5920 ;;		___awmod
  5921 ;;		___fladd
  5922 ;;		___fldiv
  5923 ;;		___fleq
  5924 ;;		___flge
  5925 ;;		___flmul
  5926 ;;		___flneg
  5927 ;;		___flsub
  5928 ;;		___fltol
  5929 ;;		___fpclassifyf
  5930 ;;		_floorf
  5931 ;;		_isupper
  5932 ;;		_pad
  5933 ;;		_strcpy
  5934 ;;		_tolower
  5935 ;; This function is called by:
  5936 ;;		_vfpfcnvrt
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text31
  5941  000856                     __ptext31:
  5942                           	callstack 0
  5943  000856                     _efgtoa:
  5944                           	callstack 22
  5945  000856                     
  5946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  5947  000856  0E00               	movlw	0
  5948  000858  0100               	movlb	0	; () banked
  5949  00085A  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  5950  00085C  0E00               	movlw	0
  5951  00085E  6F86               	movwf	efgtoa@sign& (0+255),b
  5952  000860                     
  5953                           ; BSR set to: 0
  5954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  5955  000860  C062  F098         	movff	efgtoa@f,efgtoa@g
  5956  000864  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  5957  000868  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  5958  00086C  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  5959  000870                     
  5960                           ; BSR set to: 0
  5961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  5962  000870  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5963  000872  EF3F  F004         	goto	u4680
  5964  000876  EF3D  F004         	goto	u4681
  5965  00087A                     u4681:
  5966  00087A  EF55  F004         	goto	l4620
  5967  00087E                     u4680:
  5968  00087E                     
  5969                           ; BSR set to: 0
  5970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  5971  00087E  0E00               	movlw	0
  5972  000880  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  5973  000882  0E01               	movlw	1
  5974  000884  6F86               	movwf	efgtoa@sign& (0+255),b
  5975  000886                     
  5976                           ; BSR set to: 0
  5977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  5978  000886  C098  F001         	movff	efgtoa@g,___flneg@f1
  5979  00088A  C099  F002         	movff	efgtoa@g+1,___flneg@f1+1
  5980  00088E  C09A  F003         	movff	efgtoa@g+2,___flneg@f1+2
  5981  000892  C09B  F004         	movff	efgtoa@g+3,___flneg@f1+3
  5982  000896  EC43  F024         	call	___flneg	;wreg free
  5983  00089A  C001  F098         	movff	?___flneg,efgtoa@g
  5984  00089E  C002  F099         	movff	?___flneg+1,efgtoa@g+1
  5985  0008A2  C003  F09A         	movff	?___flneg+2,efgtoa@g+2
  5986  0008A6  C004  F09B         	movff	?___flneg+3,efgtoa@g+3
  5987  0008AA                     l4620:
  5988                           
  5989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  5990  0008AA  0E00               	movlw	0
  5991  0008AC  0100               	movlb	0	; () banked
  5992  0008AE  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  5993  0008B0  0E00               	movlw	0
  5994  0008B2  6F9E               	movwf	efgtoa@n& (0+255),b
  5995  0008B4                     
  5996                           ; BSR set to: 0
  5997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  5998  0008B4  C0F4  F08A         	movff	_width,efgtoa@w
  5999  0008B8  C0F5  F08B         	movff	_width+1,efgtoa@w+1
  6000  0008BC                     
  6001                           ; BSR set to: 0
  6002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  6003  0008BC  5186               	movf	efgtoa@sign& (0+255),w,b
  6004  0008BE  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6005  0008C0  A4D8               	btfss	status,2,c
  6006  0008C2  EF65  F004         	goto	u4691
  6007  0008C6  EF67  F004         	goto	u4690
  6008  0008CA                     u4691:
  6009  0008CA  EF6E  F004         	goto	l4628
  6010  0008CE                     u4690:
  6011  0008CE                     
  6012                           ; BSR set to: 0
  6013  0008CE  A5F8               	btfss	_flags& (0+255),2,b
  6014  0008D0  EF6C  F004         	goto	u4701
  6015  0008D4  EF6E  F004         	goto	u4700
  6016  0008D8                     u4701:
  6017  0008D8  EF88  F004         	goto	l4640
  6018  0008DC                     u4700:
  6019  0008DC                     l4628:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  6023  0008DC  5186               	movf	efgtoa@sign& (0+255),w,b
  6024  0008DE  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6025  0008E0  A4D8               	btfss	status,2,c
  6026  0008E2  EF75  F004         	goto	u4711
  6027  0008E6  EF77  F004         	goto	u4710
  6028  0008EA                     u4711:
  6029  0008EA  EF7D  F004         	goto	l4632
  6030  0008EE                     u4710:
  6031  0008EE                     
  6032                           ; BSR set to: 0
  6033  0008EE  0E00               	movlw	0
  6034  0008F0  6F6D               	movwf	(_efgtoa$1501+1)& (0+255),b
  6035  0008F2  0E2B               	movlw	43
  6036  0008F4  6F6C               	movwf	_efgtoa$1501& (0+255),b
  6037  0008F6  EF81  F004         	goto	l4634
  6038  0008FA                     l4632:
  6039                           
  6040                           ; BSR set to: 0
  6041  0008FA  0E00               	movlw	0
  6042  0008FC  6F6D               	movwf	(_efgtoa$1501+1)& (0+255),b
  6043  0008FE  0E2D               	movlw	45
  6044  000900  6F6C               	movwf	_efgtoa$1501& (0+255),b
  6045  000902                     l4634:
  6046                           
  6047                           ; BSR set to: 0
  6048  000902  C06C  F10E         	movff	_efgtoa$1501,_dbuf
  6049  000906                     
  6050                           ; BSR set to: 0
  6051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  6052  000906  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  6053  000908  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  6054  00090A                     
  6055                           ; BSR set to: 0
  6056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  6057  00090A  078A               	decf	efgtoa@w& (0+255),f,b
  6058  00090C  A0D8               	btfss	status,0,c
  6059  00090E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6060  000910                     l4640:
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6064  000910  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  6065  000914  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6066  000918  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6067  00091C  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6068  000920  EC9F  F01C         	call	___fpclassifyf	;wreg free
  6069  000924  0401               	decf	?___fpclassifyf^0,w,c
  6070  000926  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6071  000928  A4D8               	btfss	status,2,c
  6072  00092A  EF99  F004         	goto	u4721
  6073  00092E  EF9B  F004         	goto	u4720
  6074  000932                     u4721:
  6075  000932  EFF2  F004         	goto	l4658
  6076  000936                     u4720:
  6077  000936  0EBF               	movlw	191
  6078  000938  0100               	movlb	0	; () banked
  6079  00093A  6F67               	movwf	??_efgtoa& (0+255),b
  6080  00093C  0EFF               	movlw	255
  6081  00093E  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6082  000940  5166               	movf	efgtoa@c& (0+255),w,b
  6083  000942  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  6084  000944  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  6085  000946  5167               	movf	??_efgtoa& (0+255),w,b
  6086  000948  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6087  00094A  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6088  00094C  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6089  00094E  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6090  000950  E10A               	bnz	u4730
  6091  000952  0E1A               	movlw	26
  6092  000954  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6093  000956  A0D8               	btfss	status,0,c
  6094  000958  EFB0  F004         	goto	u4731
  6095  00095C  EFB3  F004         	goto	u4730
  6096  000960                     u4731:
  6097  000960  0E01               	movlw	1
  6098  000962  EFB4  F004         	goto	u4740
  6099  000966                     u4730:
  6100  000966  0E00               	movlw	0
  6101  000968                     u4740:
  6102  000968  6F6E               	movwf	_efgtoa$1502& (0+255),b
  6103  00096A  6B6F               	clrf	(_efgtoa$1502+1)& (0+255),b
  6104  00096C                     
  6105                           ; BSR set to: 0
  6106  00096C  516E               	movf	_efgtoa$1502& (0+255),w,b
  6107  00096E  116F               	iorwf	(_efgtoa$1502+1)& (0+255),w,b
  6108  000970  B4D8               	btfsc	status,2,c
  6109  000972  EFBD  F004         	goto	u4751
  6110  000976  EFBF  F004         	goto	u4750
  6111  00097A                     u4751:
  6112  00097A  EFCD  F004         	goto	l4650
  6113  00097E                     u4750:
  6114  00097E                     
  6115                           ; BSR set to: 0
  6116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  6117  00097E  0E0E               	movlw	low _dbuf
  6118  000980  259E               	addwf	efgtoa@n& (0+255),w,b
  6119  000982  6E01               	movwf	strcpy@dest^0,c
  6120  000984  0E01               	movlw	high _dbuf
  6121  000986  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6122  000988  6E02               	movwf	(strcpy@dest+1)^0,c
  6123  00098A  0E14               	movlw	low STR_23
  6124  00098C  6E03               	movwf	strcpy@src^0,c
  6125  00098E  0E08               	movlw	high STR_23
  6126  000990  6E04               	movwf	(strcpy@src+1)^0,c
  6127  000992  EC57  F021         	call	_strcpy	;wreg free
  6128                           
  6129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  6130  000996  EFD9  F004         	goto	l4652
  6131  00099A                     l4650:
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  6135  00099A  0E0E               	movlw	low _dbuf
  6136  00099C  259E               	addwf	efgtoa@n& (0+255),w,b
  6137  00099E  6E01               	movwf	strcpy@dest^0,c
  6138  0009A0  0E01               	movlw	high _dbuf
  6139  0009A2  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6140  0009A4  6E02               	movwf	(strcpy@dest+1)^0,c
  6141  0009A6  0E1C               	movlw	low STR_24
  6142  0009A8  6E03               	movwf	strcpy@src^0,c
  6143  0009AA  0E08               	movlw	high STR_24
  6144  0009AC  6E04               	movwf	(strcpy@src+1)^0,c
  6145  0009AE  EC57  F021         	call	_strcpy	;wreg free
  6146  0009B2                     l4652:
  6147                           
  6148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6149  0009B2  0100               	movlb	0	; () banked
  6150  0009B4  0EFD               	movlw	253
  6151  0009B6  278A               	addwf	efgtoa@w& (0+255),f,b
  6152  0009B8  0EFF               	movlw	255
  6153  0009BA  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6154  0009BC                     l4654:
  6155                           
  6156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6157  0009BC  C060  F011         	movff	efgtoa@fp,pad@fp
  6158  0009C0  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  6159  0009C4  0E0E               	movlw	low _dbuf
  6160  0009C6  6E13               	movwf	pad@buf^0,c
  6161  0009C8  0E01               	movlw	high _dbuf
  6162  0009CA  6E14               	movwf	(pad@buf+1)^0,c
  6163  0009CC  C08A  F015         	movff	efgtoa@w,pad@p
  6164  0009D0  C08B  F016         	movff	efgtoa@w+1,pad@p+1
  6165  0009D4  ECEE  F01D         	call	_pad	;wreg free
  6166  0009D8  C011  F060         	movff	?_pad,?_efgtoa
  6167  0009DC  C012  F061         	movff	?_pad+1,?_efgtoa+1
  6168  0009E0  EF56  F00A         	goto	l1342
  6169  0009E4                     l4658:
  6170                           
  6171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6172  0009E4  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  6173  0009E8  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6174  0009EC  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6175  0009F0  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6176  0009F4  EC9F  F01C         	call	___fpclassifyf	;wreg free
  6177  0009F8  5001               	movf	?___fpclassifyf^0,w,c
  6178  0009FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6179  0009FC  A4D8               	btfss	status,2,c
  6180  0009FE  EF03  F005         	goto	u4761
  6181  000A02  EF05  F005         	goto	u4760
  6182  000A06                     u4761:
  6183  000A06  EF45  F005         	goto	l4676
  6184  000A0A                     u4760:
  6185  000A0A  0EBF               	movlw	191
  6186  000A0C  0100               	movlb	0	; () banked
  6187  000A0E  6F67               	movwf	??_efgtoa& (0+255),b
  6188  000A10  0EFF               	movlw	255
  6189  000A12  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6190  000A14  5166               	movf	efgtoa@c& (0+255),w,b
  6191  000A16  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  6192  000A18  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  6193  000A1A  5167               	movf	??_efgtoa& (0+255),w,b
  6194  000A1C  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6195  000A1E  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6196  000A20  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6197  000A22  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6198  000A24  E10A               	bnz	u4770
  6199  000A26  0E1A               	movlw	26
  6200  000A28  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6201  000A2A  A0D8               	btfss	status,0,c
  6202  000A2C  EF1A  F005         	goto	u4771
  6203  000A30  EF1D  F005         	goto	u4770
  6204  000A34                     u4771:
  6205  000A34  0E01               	movlw	1
  6206  000A36  EF1E  F005         	goto	u4780
  6207  000A3A                     u4770:
  6208  000A3A  0E00               	movlw	0
  6209  000A3C                     u4780:
  6210  000A3C  6F70               	movwf	_efgtoa$1507& (0+255),b
  6211  000A3E  6B71               	clrf	(_efgtoa$1507+1)& (0+255),b
  6212  000A40                     
  6213                           ; BSR set to: 0
  6214  000A40  5170               	movf	_efgtoa$1507& (0+255),w,b
  6215  000A42  1171               	iorwf	(_efgtoa$1507+1)& (0+255),w,b
  6216  000A44  B4D8               	btfsc	status,2,c
  6217  000A46  EF27  F005         	goto	u4791
  6218  000A4A  EF29  F005         	goto	u4790
  6219  000A4E                     u4791:
  6220  000A4E  EF37  F005         	goto	l4668
  6221  000A52                     u4790:
  6222  000A52                     
  6223                           ; BSR set to: 0
  6224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  6225  000A52  0E0E               	movlw	low _dbuf
  6226  000A54  259E               	addwf	efgtoa@n& (0+255),w,b
  6227  000A56  6E01               	movwf	strcpy@dest^0,c
  6228  000A58  0E01               	movlw	high _dbuf
  6229  000A5A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6230  000A5C  6E02               	movwf	(strcpy@dest+1)^0,c
  6231  000A5E  0E18               	movlw	low STR_27
  6232  000A60  6E03               	movwf	strcpy@src^0,c
  6233  000A62  0E08               	movlw	high STR_27
  6234  000A64  6E04               	movwf	(strcpy@src+1)^0,c
  6235  000A66  EC57  F021         	call	_strcpy	;wreg free
  6236                           
  6237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  6238  000A6A  EFD9  F004         	goto	l4652
  6239  000A6E                     l4668:
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  6243  000A6E  0E0E               	movlw	low _dbuf
  6244  000A70  259E               	addwf	efgtoa@n& (0+255),w,b
  6245  000A72  6E01               	movwf	strcpy@dest^0,c
  6246  000A74  0E01               	movlw	high _dbuf
  6247  000A76  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6248  000A78  6E02               	movwf	(strcpy@dest+1)^0,c
  6249  000A7A  0E20               	movlw	low STR_28
  6250  000A7C  6E03               	movwf	strcpy@src^0,c
  6251  000A7E  0E08               	movlw	high STR_28
  6252  000A80  6E04               	movwf	(strcpy@src+1)^0,c
  6253  000A82  EC57  F021         	call	_strcpy	;wreg free
  6254  000A86  EFD9  F004         	goto	l4652
  6255  000A8A                     l4676:
  6256                           
  6257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  6258  000A8A  0E00               	movlw	0
  6259  000A8C  0100               	movlb	0	; () banked
  6260  000A8E  6FA0               	movwf	efgtoa@u& (0+255),b
  6261  000A90  0E00               	movlw	0
  6262  000A92  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  6263  000A94  0E80               	movlw	128
  6264  000A96  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  6265  000A98  0E3F               	movlw	63
  6266  000A9A  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  6267                           
  6268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  6269  000A9C  0E00               	movlw	0
  6270  000A9E  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  6271  000AA0  0E00               	movlw	0
  6272  000AA2  6F9C               	movwf	efgtoa@e& (0+255),b
  6273  000AA4                     
  6274                           ; BSR set to: 0
  6275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  6276  000AA4  C098  F001         	movff	efgtoa@g,___fleq@ff1
  6277  000AA8  C099  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  6278  000AAC  C09A  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  6279  000AB0  C09B  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  6280  000AB4  0E00               	movlw	0
  6281  000AB6  6E05               	movwf	___fleq@ff2^0,c
  6282  000AB8  0E00               	movlw	0
  6283  000ABA  6E06               	movwf	(___fleq@ff2+1)^0,c
  6284  000ABC  0E00               	movlw	0
  6285  000ABE  6E07               	movwf	(___fleq@ff2+2)^0,c
  6286  000AC0  0E00               	movlw	0
  6287  000AC2  6E08               	movwf	(___fleq@ff2+3)^0,c
  6288  000AC4  ECC5  F01F         	call	___fleq	;wreg free
  6289  000AC8  B0D8               	btfsc	status,0,c
  6290  000ACA  EF69  F005         	goto	u4801
  6291  000ACE  EF6B  F005         	goto	u4800
  6292  000AD2                     u4801:
  6293  000AD2  EFEE  F005         	goto	l4694
  6294  000AD6                     u4800:
  6295  000AD6  EF8A  F005         	goto	l4686
  6296  000ADA                     l4682:
  6297                           
  6298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  6299  000ADA  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6300  000ADE  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6301  000AE2  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6302  000AE6  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6303  000AEA  0E00               	movlw	0
  6304  000AEC  6E17               	movwf	___flmul@a^0,c
  6305  000AEE  0E00               	movlw	0
  6306  000AF0  6E18               	movwf	(___flmul@a+1)^0,c
  6307  000AF2  0E20               	movlw	32
  6308  000AF4  6E19               	movwf	(___flmul@a+2)^0,c
  6309  000AF6  0E41               	movlw	65
  6310  000AF8  6E1A               	movwf	(___flmul@a+3)^0,c
  6311  000AFA  ECBE  F00F         	call	___flmul	;wreg free
  6312  000AFE  C013  F0A0         	movff	?___flmul,efgtoa@u
  6313  000B02  C014  F0A1         	movff	?___flmul+1,efgtoa@u+1
  6314  000B06  C015  F0A2         	movff	?___flmul+2,efgtoa@u+2
  6315  000B0A  C016  F0A3         	movff	?___flmul+3,efgtoa@u+3
  6316  000B0E                     
  6317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  6318  000B0E  0100               	movlb	0	; () banked
  6319  000B10  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  6320  000B12  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  6321  000B14                     l4686:
  6322                           
  6323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  6324  000B14  C098  F02C         	movff	efgtoa@g,___flge@ff1
  6325  000B18  C099  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  6326  000B1C  C09A  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  6327  000B20  C09B  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  6328  000B24  0E00               	movlw	0
  6329  000B26  6E17               	movwf	___flmul@a^0,c
  6330  000B28  0E00               	movlw	0
  6331  000B2A  6E18               	movwf	(___flmul@a+1)^0,c
  6332  000B2C  0E20               	movlw	32
  6333  000B2E  6E19               	movwf	(___flmul@a+2)^0,c
  6334  000B30  0E41               	movlw	65
  6335  000B32  6E1A               	movwf	(___flmul@a+3)^0,c
  6336  000B34  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6337  000B38  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6338  000B3C  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6339  000B40  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6340  000B44  ECBE  F00F         	call	___flmul	;wreg free
  6341  000B48  C013  F030         	movff	?___flmul,___flge@ff2
  6342  000B4C  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  6343  000B50  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  6344  000B54  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  6345  000B58  EC9E  F01B         	call	___flge	;wreg free
  6346  000B5C  B0D8               	btfsc	status,0,c
  6347  000B5E  EFB3  F005         	goto	u4811
  6348  000B62  EFB5  F005         	goto	u4810
  6349  000B66                     u4811:
  6350  000B66  EF6D  F005         	goto	l4682
  6351  000B6A                     u4810:
  6352  000B6A  EFD5  F005         	goto	l4692
  6353  000B6E                     l4688:
  6354                           
  6355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  6356  000B6E  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  6357  000B72  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  6358  000B76  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  6359  000B7A  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  6360  000B7E  0E00               	movlw	0
  6361  000B80  6E30               	movwf	___fldiv@a^0,c
  6362  000B82  0E00               	movlw	0
  6363  000B84  6E31               	movwf	(___fldiv@a+1)^0,c
  6364  000B86  0E20               	movlw	32
  6365  000B88  6E32               	movwf	(___fldiv@a+2)^0,c
  6366  000B8A  0E41               	movlw	65
  6367  000B8C  6E33               	movwf	(___fldiv@a+3)^0,c
  6368  000B8E  ECD3  F011         	call	___fldiv	;wreg free
  6369  000B92  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  6370  000B96  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  6371  000B9A  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  6372  000B9E  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  6373  000BA2                     
  6374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  6375  000BA2  0100               	movlb	0	; () banked
  6376  000BA4  079C               	decf	efgtoa@e& (0+255),f,b
  6377  000BA6  A0D8               	btfss	status,0,c
  6378  000BA8  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  6379  000BAA                     l4692:
  6380                           
  6381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  6382  000BAA  C098  F02C         	movff	efgtoa@g,___flge@ff1
  6383  000BAE  C099  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  6384  000BB2  C09A  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  6385  000BB6  C09B  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  6386  000BBA  C0A0  F030         	movff	efgtoa@u,___flge@ff2
  6387  000BBE  C0A1  F031         	movff	efgtoa@u+1,___flge@ff2+1
  6388  000BC2  C0A2  F032         	movff	efgtoa@u+2,___flge@ff2+2
  6389  000BC6  C0A3  F033         	movff	efgtoa@u+3,___flge@ff2+3
  6390  000BCA  EC9E  F01B         	call	___flge	;wreg free
  6391  000BCE  A0D8               	btfss	status,0,c
  6392  000BD0  EFEC  F005         	goto	u4821
  6393  000BD4  EFEE  F005         	goto	u4820
  6394  000BD8                     u4821:
  6395  000BD8  EFB7  F005         	goto	l4688
  6396  000BDC                     u4820:
  6397  000BDC                     l4694:
  6398                           
  6399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  6400  000BDC  C066  F007         	movff	efgtoa@c,tolower@c
  6401  000BE0  6A08               	clrf	(tolower@c+1)^0,c
  6402  000BE2  ECC9  F020         	call	_tolower	;wreg free
  6403  000BE6  5007               	movf	?_tolower^0,w,c
  6404  000BE8  0100               	movlb	0	; () banked
  6405  000BEA  6F8D               	movwf	efgtoa@mode& (0+255),b
  6406  000BEC                     
  6407                           ; BSR set to: 0
  6408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  6409  000BEC  C08D  F08C         	movff	efgtoa@mode,efgtoa@nmode
  6410  000BF0                     
  6411                           ; BSR set to: 0
  6412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  6413  000BF0  0E67               	movlw	103
  6414  000BF2  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6415  000BF4  A4D8               	btfss	status,2,c
  6416  000BF6  EFFF  F005         	goto	u4831
  6417  000BFA  EF01  F006         	goto	u4830
  6418  000BFE                     u4831:
  6419  000BFE  EF27  F006         	goto	l4708
  6420  000C02                     u4830:
  6421  000C02                     
  6422                           ; BSR set to: 0
  6423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  6424  000C02  51F6               	movf	_prec& (0+255),w,b
  6425  000C04  11F7               	iorwf	(_prec+1)& (0+255),w,b
  6426  000C06  A4D8               	btfss	status,2,c
  6427  000C08  EF08  F006         	goto	u4841
  6428  000C0C  EF0A  F006         	goto	u4840
  6429  000C10                     u4841:
  6430  000C10  EF0E  F006         	goto	l4704
  6431  000C14                     u4840:
  6432  000C14                     
  6433                           ; BSR set to: 0
  6434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  6435  000C14  0E00               	movlw	0
  6436  000C16  6FF7               	movwf	(_prec+1)& (0+255),b
  6437  000C18  0E01               	movlw	1
  6438  000C1A  6FF6               	movwf	_prec& (0+255),b
  6439  000C1C                     l4704:
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  6443  000C1C  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6444  000C1E  EF1B  F006         	goto	u4850
  6445  000C22  51F7               	movf	(_prec+1)& (0+255),w,b
  6446  000C24  E106               	bnz	u4851
  6447  000C26  05F6               	decf	_prec& (0+255),w,b
  6448  000C28  B0D8               	btfsc	status,0,c
  6449  000C2A  EF19  F006         	goto	u4851
  6450  000C2E  EF1B  F006         	goto	u4850
  6451  000C32                     u4851:
  6452  000C32  EF21  F006         	goto	l1360
  6453  000C36                     u4850:
  6454  000C36                     l4706:
  6455                           
  6456                           ; BSR set to: 0
  6457  000C36  0E00               	movlw	0
  6458  000C38  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  6459  000C3A  0E06               	movlw	6
  6460  000C3C  6F88               	movwf	efgtoa@p& (0+255),b
  6461  000C3E  EF30  F006         	goto	l4714
  6462  000C42                     l1360:
  6463                           
  6464                           ; BSR set to: 0
  6465  000C42  C0F6  F088         	movff	_prec,efgtoa@p
  6466  000C46  C0F7  F089         	movff	_prec+1,efgtoa@p+1
  6467  000C4A  EF30  F006         	goto	l4714
  6468  000C4E                     l4708:
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  6472  000C4E  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6473  000C50  EF2C  F006         	goto	u4861
  6474  000C54  EF2E  F006         	goto	u4860
  6475  000C58                     u4861:
  6476  000C58  EF1B  F006         	goto	l4706
  6477  000C5C                     u4860:
  6478  000C5C  EF21  F006         	goto	l1360
  6479  000C60                     l4714:
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  6483  000C60  0E67               	movlw	103
  6484  000C62  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6485  000C64  A4D8               	btfss	status,2,c
  6486  000C66  EF37  F006         	goto	u4871
  6487  000C6A  EF39  F006         	goto	u4870
  6488  000C6E                     u4871:
  6489  000C6E  EF68  F006         	goto	l4724
  6490  000C72                     u4870:
  6491  000C72                     
  6492                           ; BSR set to: 0
  6493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  6494  000C72  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  6495  000C74  EF47  F006         	goto	u4880
  6496  000C78  0EFC               	movlw	252
  6497  000C7A  5D9C               	subwf	efgtoa@e& (0+255),w,b
  6498  000C7C  0EFF               	movlw	255
  6499  000C7E  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6500  000C80  A0D8               	btfss	status,0,c
  6501  000C82  EF45  F006         	goto	u4881
  6502  000C86  EF47  F006         	goto	u4880
  6503  000C8A                     u4881:
  6504  000C8A  EF66  F006         	goto	l4722
  6505  000C8E                     u4880:
  6506  000C8E                     
  6507                           ; BSR set to: 0
  6508  000C8E  0EFF               	movlw	255
  6509  000C90  6F67               	movwf	??_efgtoa& (0+255),b
  6510  000C92  0EFF               	movlw	255
  6511  000C94  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6512  000C96  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  6513  000C9A  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  6514  000C9E  5167               	movf	??_efgtoa& (0+255),w,b
  6515  000CA0  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6516  000CA2  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6517  000CA4  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6518  000CA6  519C               	movf	efgtoa@e& (0+255),w,b
  6519  000CA8  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6520  000CAA  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6521  000CAC  0A80               	xorlw	128
  6522  000CAE  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  6523  000CB0  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  6524  000CB2  0A80               	xorlw	128
  6525  000CB4  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6526  000CB6  A0D8               	btfss	status,0,c
  6527  000CB8  EF60  F006         	goto	u4891
  6528  000CBC  EF62  F006         	goto	u4890
  6529  000CC0                     u4891:
  6530  000CC0  EF66  F006         	goto	l4722
  6531  000CC4                     u4890:
  6532  000CC4                     
  6533                           ; BSR set to: 0
  6534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  6535  000CC4  0E66               	movlw	102
  6536  000CC6  6F8C               	movwf	efgtoa@nmode& (0+255),b
  6537                           
  6538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  6539  000CC8  EF68  F006         	goto	l4724
  6540  000CCC                     l4722:
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  6544  000CCC  0E65               	movlw	101
  6545  000CCE  6F8C               	movwf	efgtoa@nmode& (0+255),b
  6546  000CD0                     l4724:
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  6550  000CD0  C088  F07E         	movff	efgtoa@p,efgtoa@m
  6551  000CD4  C089  F07F         	movff	efgtoa@p+1,efgtoa@m+1
  6552  000CD8                     
  6553                           ; BSR set to: 0
  6554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  6555  000CD8  0E67               	movlw	103
  6556  000CDA  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6557  000CDC  A4D8               	btfss	status,2,c
  6558  000CDE  EF73  F006         	goto	u4901
  6559  000CE2  EF75  F006         	goto	u4900
  6560  000CE6                     u4901:
  6561  000CE6  EF85  F006         	goto	l4732
  6562  000CEA                     u4900:
  6563  000CEA                     
  6564                           ; BSR set to: 0
  6565  000CEA  0E66               	movlw	102
  6566  000CEC  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6567  000CEE  A4D8               	btfss	status,2,c
  6568  000CF0  EF7C  F006         	goto	u4911
  6569  000CF4  EF7E  F006         	goto	u4910
  6570  000CF8                     u4911:
  6571  000CF8  EF87  F006         	goto	l4734
  6572  000CFC                     u4910:
  6573  000CFC                     
  6574                           ; BSR set to: 0
  6575  000CFC  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6576  000CFE  EF85  F006         	goto	u4920
  6577  000D02  EF83  F006         	goto	u4921
  6578  000D06                     u4921:
  6579  000D06  EF87  F006         	goto	l4734
  6580  000D0A                     u4920:
  6581  000D0A                     l4732:
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  6585  000D0A  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  6586  000D0C  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  6587  000D0E                     l4734:
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  6591  000D0E  0E66               	movlw	102
  6592  000D10  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6593  000D12  A4D8               	btfss	status,2,c
  6594  000D14  EF8E  F006         	goto	u4931
  6595  000D18  EF90  F006         	goto	u4930
  6596  000D1C                     u4931:
  6597  000D1C  EFB0  F006         	goto	l4744
  6598  000D20                     u4930:
  6599  000D20                     
  6600                           ; BSR set to: 0
  6601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  6602  000D20  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6603  000D22  EF97  F006         	goto	u4940
  6604  000D26  EF95  F006         	goto	u4941
  6605  000D2A                     u4941:
  6606  000D2A  EFA3  F006         	goto	l4740
  6607  000D2E                     u4940:
  6608  000D2E                     
  6609                           ; BSR set to: 0
  6610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  6611  000D2E  0E00               	movlw	0
  6612  000D30  6FA0               	movwf	efgtoa@u& (0+255),b
  6613  000D32  0E00               	movlw	0
  6614  000D34  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  6615  000D36  0E80               	movlw	128
  6616  000D38  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  6617  000D3A  0E3F               	movlw	63
  6618  000D3C  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  6619                           
  6620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  6621  000D3E  0E00               	movlw	0
  6622  000D40  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  6623  000D42  0E00               	movlw	0
  6624  000D44  6F9C               	movwf	efgtoa@e& (0+255),b
  6625  000D46                     l4740:
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  6629  000D46  0E67               	movlw	103
  6630  000D48  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6631  000D4A  B4D8               	btfsc	status,2,c
  6632  000D4C  EFAA  F006         	goto	u4951
  6633  000D50  EFAC  F006         	goto	u4950
  6634  000D54                     u4951:
  6635  000D54  EFB0  F006         	goto	l4744
  6636  000D58                     u4950:
  6637  000D58                     
  6638                           ; BSR set to: 0
  6639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  6640  000D58  519C               	movf	efgtoa@e& (0+255),w,b
  6641  000D5A  277E               	addwf	efgtoa@m& (0+255),f,b
  6642  000D5C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  6643  000D5E  237F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6644  000D60                     l4744:
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  6648  000D60  0E00               	movlw	0
  6649  000D62  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  6650  000D64  0E00               	movlw	0
  6651  000D66  6F96               	movwf	efgtoa@i& (0+255),b
  6652  000D68                     
  6653                           ; BSR set to: 0
  6654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  6655  000D68  C098  F08E         	movff	efgtoa@g,efgtoa@h
  6656  000D6C  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  6657  000D70  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  6658  000D74  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  6659  000D78                     
  6660                           ; BSR set to: 0
  6661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  6662  000D78  C0A0  F080         	movff	efgtoa@u,efgtoa@ou
  6663  000D7C  C0A1  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  6664  000D80  C0A2  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  6665  000D84  C0A3  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  6666                           
  6667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6668  000D88  EF41  F007         	goto	l4758
  6669  000D8C                     l4750:
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  6673  000D8C  C08E  F02C         	movff	efgtoa@h,___fldiv@b
  6674  000D90  C08F  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  6675  000D94  C090  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  6676  000D98  C091  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  6677  000D9C  C0A0  F030         	movff	efgtoa@u,___fldiv@a
  6678  000DA0  C0A1  F031         	movff	efgtoa@u+1,___fldiv@a+1
  6679  000DA4  C0A2  F032         	movff	efgtoa@u+2,___fldiv@a+2
  6680  000DA8  C0A3  F033         	movff	efgtoa@u+3,___fldiv@a+3
  6681  000DAC  ECD3  F011         	call	___fldiv	;wreg free
  6682  000DB0  C02C  F045         	movff	?___fldiv,floorf@x
  6683  000DB4  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  6684  000DB8  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  6685  000DBC  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  6686  000DC0  ECC4  F017         	call	_floorf	;wreg free
  6687  000DC4  C045  F092         	movff	?_floorf,efgtoa@l
  6688  000DC8  C046  F093         	movff	?_floorf+1,efgtoa@l+1
  6689  000DCC  C047  F094         	movff	?_floorf+2,efgtoa@l+2
  6690  000DD0  C048  F095         	movff	?_floorf+3,efgtoa@l+3
  6691                           
  6692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  6693  000DD4  C092  F055         	movff	efgtoa@l,___fltol@f1
  6694  000DD8  C093  F056         	movff	efgtoa@l+1,___fltol@f1+1
  6695  000DDC  C094  F057         	movff	efgtoa@l+2,___fltol@f1+2
  6696  000DE0  C095  F058         	movff	efgtoa@l+3,___fltol@f1+3
  6697  000DE4  EC1B  F01B         	call	___fltol	;wreg free
  6698  000DE8  C055  F084         	movff	?___fltol,efgtoa@d
  6699  000DEC  C056  F085         	movff	?___fltol+1,efgtoa@d+1
  6700  000DF0                     
  6701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  6702  000DF0  C08E  F055         	movff	efgtoa@h,___flsub@b
  6703  000DF4  C08F  F056         	movff	efgtoa@h+1,___flsub@b+1
  6704  000DF8  C090  F057         	movff	efgtoa@h+2,___flsub@b+2
  6705  000DFC  C091  F058         	movff	efgtoa@h+3,___flsub@b+3
  6706  000E00  C0A0  F017         	movff	efgtoa@u,___flmul@a
  6707  000E04  C0A1  F018         	movff	efgtoa@u+1,___flmul@a+1
  6708  000E08  C0A2  F019         	movff	efgtoa@u+2,___flmul@a+2
  6709  000E0C  C0A3  F01A         	movff	efgtoa@u+3,___flmul@a+3
  6710  000E10  C092  F013         	movff	efgtoa@l,___flmul@b
  6711  000E14  C093  F014         	movff	efgtoa@l+1,___flmul@b+1
  6712  000E18  C094  F015         	movff	efgtoa@l+2,___flmul@b+2
  6713  000E1C  C095  F016         	movff	efgtoa@l+3,___flmul@b+3
  6714  000E20  ECBE  F00F         	call	___flmul	;wreg free
  6715  000E24  C013  F059         	movff	?___flmul,___flsub@a
  6716  000E28  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  6717  000E2C  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  6718  000E30  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  6719  000E34  EC6B  F023         	call	___flsub	;wreg free
  6720  000E38  C055  F08E         	movff	?___flsub,efgtoa@h
  6721  000E3C  C056  F08F         	movff	?___flsub+1,efgtoa@h+1
  6722  000E40  C057  F090         	movff	?___flsub+2,efgtoa@h+2
  6723  000E44  C058  F091         	movff	?___flsub+3,efgtoa@h+3
  6724  000E48                     
  6725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  6726  000E48  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  6727  000E4C  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  6728  000E50  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  6729  000E54  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  6730  000E58  0E00               	movlw	0
  6731  000E5A  6E30               	movwf	___fldiv@a^0,c
  6732  000E5C  0E00               	movlw	0
  6733  000E5E  6E31               	movwf	(___fldiv@a+1)^0,c
  6734  000E60  0E20               	movlw	32
  6735  000E62  6E32               	movwf	(___fldiv@a+2)^0,c
  6736  000E64  0E41               	movlw	65
  6737  000E66  6E33               	movwf	(___fldiv@a+3)^0,c
  6738  000E68  ECD3  F011         	call	___fldiv	;wreg free
  6739  000E6C  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  6740  000E70  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  6741  000E74  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  6742  000E78  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  6743  000E7C                     
  6744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  6745  000E7C  0100               	movlb	0	; () banked
  6746  000E7E  4B96               	infsnz	efgtoa@i& (0+255),f,b
  6747  000E80  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  6748  000E82                     l4758:
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6752  000E82  517E               	movf	efgtoa@m& (0+255),w,b
  6753  000E84  5D96               	subwf	efgtoa@i& (0+255),w,b
  6754  000E86  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  6755  000E88  0A80               	xorlw	128
  6756  000E8A  6F67               	movwf	??_efgtoa& (0+255),b
  6757  000E8C  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  6758  000E8E  0A80               	xorlw	128
  6759  000E90  5967               	subwfb	??_efgtoa& (0+255),w,b
  6760  000E92  A0D8               	btfss	status,0,c
  6761  000E94  EF4E  F007         	goto	u4961
  6762  000E98  EF50  F007         	goto	u4960
  6763  000E9C                     u4961:
  6764  000E9C  EFC6  F006         	goto	l4750
  6765  000EA0                     u4960:
  6766  000EA0                     
  6767                           ; BSR set to: 0
  6768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  6769  000EA0  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6770  000EA4  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6771  000EA8  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6772  000EAC  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6773  000EB0  0E00               	movlw	0
  6774  000EB2  6E17               	movwf	___flmul@a^0,c
  6775  000EB4  0E00               	movlw	0
  6776  000EB6  6E18               	movwf	(___flmul@a+1)^0,c
  6777  000EB8  0EA0               	movlw	160
  6778  000EBA  6E19               	movwf	(___flmul@a+2)^0,c
  6779  000EBC  0E40               	movlw	64
  6780  000EBE  6E1A               	movwf	(___flmul@a+3)^0,c
  6781  000EC0  ECBE  F00F         	call	___flmul	;wreg free
  6782  000EC4  C013  F092         	movff	?___flmul,efgtoa@l
  6783  000EC8  C014  F093         	movff	?___flmul+1,efgtoa@l+1
  6784  000ECC  C015  F094         	movff	?___flmul+2,efgtoa@l+2
  6785  000ED0  C016  F095         	movff	?___flmul+3,efgtoa@l+3
  6786  000ED4                     
  6787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  6788  000ED4  C08E  F02C         	movff	efgtoa@h,___flge@ff1
  6789  000ED8  C08F  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  6790  000EDC  C090  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  6791  000EE0  C091  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  6792  000EE4  C092  F030         	movff	efgtoa@l,___flge@ff2
  6793  000EE8  C093  F031         	movff	efgtoa@l+1,___flge@ff2+1
  6794  000EEC  C094  F032         	movff	efgtoa@l+2,___flge@ff2+2
  6795  000EF0  C095  F033         	movff	efgtoa@l+3,___flge@ff2+3
  6796  000EF4  EC9E  F01B         	call	___flge	;wreg free
  6797  000EF8  B0D8               	btfsc	status,0,c
  6798  000EFA  EF81  F007         	goto	u4971
  6799  000EFE  EF83  F007         	goto	u4970
  6800  000F02                     u4971:
  6801  000F02  EF8E  F007         	goto	l4766
  6802  000F06                     u4970:
  6803  000F06                     
  6804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  6805  000F06  0E00               	movlw	0
  6806  000F08  0100               	movlb	0	; () banked
  6807  000F0A  6F92               	movwf	efgtoa@l& (0+255),b
  6808  000F0C  0E00               	movlw	0
  6809  000F0E  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  6810  000F10  0E00               	movlw	0
  6811  000F12  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  6812  000F14  0E00               	movlw	0
  6813  000F16  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  6814                           
  6815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  6816  000F18  EFB7  F007         	goto	l4772
  6817  000F1C                     l4766:
  6818                           
  6819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  6820  000F1C  C08E  F001         	movff	efgtoa@h,___fleq@ff1
  6821  000F20  C08F  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  6822  000F24  C090  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  6823  000F28  C091  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  6824  000F2C  C092  F005         	movff	efgtoa@l,___fleq@ff2
  6825  000F30  C093  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  6826  000F34  C094  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  6827  000F38  C095  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  6828  000F3C  ECC5  F01F         	call	___fleq	;wreg free
  6829  000F40  A0D8               	btfss	status,0,c
  6830  000F42  EFA5  F007         	goto	u4981
  6831  000F46  EFA7  F007         	goto	u4980
  6832  000F4A                     u4981:
  6833  000F4A  EFB7  F007         	goto	l4772
  6834  000F4E                     u4980:
  6835  000F4E  0100               	movlb	0	; () banked
  6836  000F50  B184               	btfsc	efgtoa@d& (0+255),0,b
  6837  000F52  EFAD  F007         	goto	u4991
  6838  000F56  EFAF  F007         	goto	u4990
  6839  000F5A                     u4991:
  6840  000F5A  EFB7  F007         	goto	l4772
  6841  000F5E                     u4990:
  6842  000F5E                     
  6843                           ; BSR set to: 0
  6844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  6845  000F5E  0E00               	movlw	0
  6846  000F60  6F92               	movwf	efgtoa@l& (0+255),b
  6847  000F62  0E00               	movlw	0
  6848  000F64  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  6849  000F66  0E00               	movlw	0
  6850  000F68  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  6851  000F6A  0E00               	movlw	0
  6852  000F6C  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  6853  000F6E                     l4772:
  6854                           
  6855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  6856  000F6E  C098  F045         	movff	efgtoa@g,___fladd@b
  6857  000F72  C099  F046         	movff	efgtoa@g+1,___fladd@b+1
  6858  000F76  C09A  F047         	movff	efgtoa@g+2,___fladd@b+2
  6859  000F7A  C09B  F048         	movff	efgtoa@g+3,___fladd@b+3
  6860  000F7E  C092  F049         	movff	efgtoa@l,___fladd@a
  6861  000F82  C093  F04A         	movff	efgtoa@l+1,___fladd@a+1
  6862  000F86  C094  F04B         	movff	efgtoa@l+2,___fladd@a+2
  6863  000F8A  C095  F04C         	movff	efgtoa@l+3,___fladd@a+3
  6864  000F8E  EC5E  F00D         	call	___fladd	;wreg free
  6865  000F92  C045  F08E         	movff	?___fladd,efgtoa@h
  6866  000F96  C046  F08F         	movff	?___fladd+1,efgtoa@h+1
  6867  000F9A  C047  F090         	movff	?___fladd+2,efgtoa@h+2
  6868  000F9E  C048  F091         	movff	?___fladd+3,efgtoa@h+3
  6869  000FA2                     
  6870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  6871  000FA2  C08E  F02C         	movff	efgtoa@h,___flge@ff1
  6872  000FA6  C08F  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  6873  000FAA  C090  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  6874  000FAE  C091  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  6875  000FB2  0E00               	movlw	0
  6876  000FB4  6E17               	movwf	___flmul@a^0,c
  6877  000FB6  0E00               	movlw	0
  6878  000FB8  6E18               	movwf	(___flmul@a+1)^0,c
  6879  000FBA  0E20               	movlw	32
  6880  000FBC  6E19               	movwf	(___flmul@a+2)^0,c
  6881  000FBE  0E41               	movlw	65
  6882  000FC0  6E1A               	movwf	(___flmul@a+3)^0,c
  6883  000FC2  C080  F013         	movff	efgtoa@ou,___flmul@b
  6884  000FC6  C081  F014         	movff	efgtoa@ou+1,___flmul@b+1
  6885  000FCA  C082  F015         	movff	efgtoa@ou+2,___flmul@b+2
  6886  000FCE  C083  F016         	movff	efgtoa@ou+3,___flmul@b+3
  6887  000FD2  ECBE  F00F         	call	___flmul	;wreg free
  6888  000FD6  C013  F030         	movff	?___flmul,___flge@ff2
  6889  000FDA  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  6890  000FDE  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  6891  000FE2  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  6892  000FE6  EC9E  F01B         	call	___flge	;wreg free
  6893  000FEA  A0D8               	btfss	status,0,c
  6894  000FEC  EFFA  F007         	goto	u5001
  6895  000FF0  EFFC  F007         	goto	u5000
  6896  000FF4                     u5001:
  6897  000FF4  EF25  F008         	goto	l4784
  6898  000FF8                     u5000:
  6899  000FF8                     
  6900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  6901  000FF8  0100               	movlb	0	; () banked
  6902  000FFA  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  6903  000FFC  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  6904  000FFE                     
  6905                           ; BSR set to: 0
  6906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  6907  000FFE  C080  F013         	movff	efgtoa@ou,___flmul@b
  6908  001002  C081  F014         	movff	efgtoa@ou+1,___flmul@b+1
  6909  001006  C082  F015         	movff	efgtoa@ou+2,___flmul@b+2
  6910  00100A  C083  F016         	movff	efgtoa@ou+3,___flmul@b+3
  6911  00100E  0E00               	movlw	0
  6912  001010  6E17               	movwf	___flmul@a^0,c
  6913  001012  0E00               	movlw	0
  6914  001014  6E18               	movwf	(___flmul@a+1)^0,c
  6915  001016  0E20               	movlw	32
  6916  001018  6E19               	movwf	(___flmul@a+2)^0,c
  6917  00101A  0E41               	movlw	65
  6918  00101C  6E1A               	movwf	(___flmul@a+3)^0,c
  6919  00101E  ECBE  F00F         	call	___flmul	;wreg free
  6920  001022  C013  F080         	movff	?___flmul,efgtoa@ou
  6921  001026  C014  F081         	movff	?___flmul+1,efgtoa@ou+1
  6922  00102A  C015  F082         	movff	?___flmul+2,efgtoa@ou+2
  6923  00102E  C016  F083         	movff	?___flmul+3,efgtoa@ou+3
  6924  001032                     
  6925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  6926  001032  0E66               	movlw	102
  6927  001034  0100               	movlb	0	; () banked
  6928  001036  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6929  001038  A4D8               	btfss	status,2,c
  6930  00103A  EF21  F008         	goto	u5011
  6931  00103E  EF23  F008         	goto	u5010
  6932  001042                     u5011:
  6933  001042  EF25  F008         	goto	l4784
  6934  001046                     u5010:
  6935  001046                     
  6936                           ; BSR set to: 0
  6937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  6938  001046  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  6939  001048  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  6940  00104A                     l4784:
  6941                           
  6942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  6943  00104A  C080  F0A0         	movff	efgtoa@ou,efgtoa@u
  6944  00104E  C081  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  6945  001052  C082  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  6946  001056  C083  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  6947  00105A                     
  6948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  6949  00105A  0E65               	movlw	101
  6950  00105C  0100               	movlb	0	; () banked
  6951  00105E  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6952  001060  B4D8               	btfsc	status,2,c
  6953  001062  EF35  F008         	goto	u5021
  6954  001066  EF37  F008         	goto	u5020
  6955  00106A                     u5021:
  6956  00106A  EF3D  F008         	goto	l4790
  6957  00106E                     u5020:
  6958  00106E                     
  6959                           ; BSR set to: 0
  6960  00106E  C09C  F07C         	movff	efgtoa@e,efgtoa@ne
  6961  001072  C09D  F07D         	movff	efgtoa@e+1,efgtoa@ne+1
  6962  001076  EF41  F008         	goto	l1388
  6963  00107A                     l4790:
  6964                           
  6965                           ; BSR set to: 0
  6966  00107A  0E00               	movlw	0
  6967  00107C  6F7D               	movwf	(efgtoa@ne+1)& (0+255),b
  6968  00107E  0E00               	movlw	0
  6969  001080  6F7C               	movwf	efgtoa@ne& (0+255),b
  6970  001082                     l1388:
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  6974  001082  0E00               	movlw	0
  6975  001084  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  6976  001086  0E00               	movlw	0
  6977  001088  6F7A               	movwf	efgtoa@pp& (0+255),b
  6978                           
  6979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  6980  00108A  0E00               	movlw	0
  6981  00108C  6F79               	movwf	(efgtoa@t+1)& (0+255),b
  6982  00108E  0E00               	movlw	0
  6983  001090  6F78               	movwf	efgtoa@t& (0+255),b
  6984                           
  6985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  6986  001092  0E00               	movlw	0
  6987  001094  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  6988  001096  0E00               	movlw	0
  6989  001098  6F96               	movwf	efgtoa@i& (0+255),b
  6990                           
  6991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6992  00109A  EF3C  F009         	goto	l4840
  6993  00109E                     l4792:
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  6997  00109E  C08E  F02C         	movff	efgtoa@h,___fldiv@b
  6998  0010A2  C08F  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  6999  0010A6  C090  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  7000  0010AA  C091  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  7001  0010AE  C0A0  F030         	movff	efgtoa@u,___fldiv@a
  7002  0010B2  C0A1  F031         	movff	efgtoa@u+1,___fldiv@a+1
  7003  0010B6  C0A2  F032         	movff	efgtoa@u+2,___fldiv@a+2
  7004  0010BA  C0A3  F033         	movff	efgtoa@u+3,___fldiv@a+3
  7005  0010BE  ECD3  F011         	call	___fldiv	;wreg free
  7006  0010C2  C02C  F045         	movff	?___fldiv,floorf@x
  7007  0010C6  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  7008  0010CA  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  7009  0010CE  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  7010  0010D2  ECC4  F017         	call	_floorf	;wreg free
  7011  0010D6  C045  F092         	movff	?_floorf,efgtoa@l
  7012  0010DA  C046  F093         	movff	?_floorf+1,efgtoa@l+1
  7013  0010DE  C047  F094         	movff	?_floorf+2,efgtoa@l+2
  7014  0010E2  C048  F095         	movff	?_floorf+3,efgtoa@l+3
  7015                           
  7016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  7017  0010E6  C092  F055         	movff	efgtoa@l,___fltol@f1
  7018  0010EA  C093  F056         	movff	efgtoa@l+1,___fltol@f1+1
  7019  0010EE  C094  F057         	movff	efgtoa@l+2,___fltol@f1+2
  7020  0010F2  C095  F058         	movff	efgtoa@l+3,___fltol@f1+3
  7021  0010F6  EC1B  F01B         	call	___fltol	;wreg free
  7022  0010FA  C055  F084         	movff	?___fltol,efgtoa@d
  7023  0010FE  C056  F085         	movff	?___fltol+1,efgtoa@d+1
  7024  001102                     
  7025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7026  001102  0100               	movlb	0	; () banked
  7027  001104  B9F8               	btfsc	_flags& (0+255),4,b
  7028  001106  EF87  F008         	goto	u5031
  7029  00110A  EF89  F008         	goto	u5030
  7030  00110E                     u5031:
  7031  00110E  EFA6  F008         	goto	l4804
  7032  001112                     u5030:
  7033  001112                     
  7034                           ; BSR set to: 0
  7035  001112  5184               	movf	efgtoa@d& (0+255),w,b
  7036  001114  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7037  001116  A4D8               	btfss	status,2,c
  7038  001118  EF90  F008         	goto	u5041
  7039  00111C  EF92  F008         	goto	u5040
  7040  001120                     u5041:
  7041  001120  EFA6  F008         	goto	l4804
  7042  001124                     u5040:
  7043  001124                     
  7044                           ; BSR set to: 0
  7045  001124  0E67               	movlw	103
  7046  001126  198D               	xorwf	efgtoa@mode& (0+255),w,b
  7047  001128  A4D8               	btfss	status,2,c
  7048  00112A  EF99  F008         	goto	u5051
  7049  00112E  EF9B  F008         	goto	u5050
  7050  001132                     u5051:
  7051  001132  EFA6  F008         	goto	l4804
  7052  001136                     u5050:
  7053  001136                     
  7054                           ; BSR set to: 0
  7055  001136  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7056  001138  EFA2  F008         	goto	u5060
  7057  00113C  EFA0  F008         	goto	u5061
  7058  001140                     u5061:
  7059  001140  EFA6  F008         	goto	l4804
  7060  001144                     u5060:
  7061  001144                     
  7062                           ; BSR set to: 0
  7063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  7064  001144  4B78               	infsnz	efgtoa@t& (0+255),f,b
  7065  001146  2B79               	incf	(efgtoa@t+1)& (0+255),f,b
  7066                           
  7067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  7068  001148  EFF0  F008         	goto	l4832
  7069  00114C                     l4804:
  7070                           
  7071                           ; BSR set to: 0
  7072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  7073  00114C  517A               	movf	efgtoa@pp& (0+255),w,b
  7074  00114E  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7075  001150  A4D8               	btfss	status,2,c
  7076  001152  EFAD  F008         	goto	u5071
  7077  001156  EFAF  F008         	goto	u5070
  7078  00115A                     u5071:
  7079  00115A  EFD9  F008         	goto	l4824
  7080  00115E                     u5070:
  7081  00115E                     
  7082                           ; BSR set to: 0
  7083  00115E  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7084  001160  EFB6  F008         	goto	u5080
  7085  001164  EFB4  F008         	goto	u5081
  7086  001168                     u5081:
  7087  001168  EFD9  F008         	goto	l4824
  7088  00116C                     u5080:
  7089  00116C                     
  7090                           ; BSR set to: 0
  7091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  7092  00116C  0E0E               	movlw	low _dbuf
  7093  00116E  259E               	addwf	efgtoa@n& (0+255),w,b
  7094  001170  6ED9               	movwf	fsr2l,c
  7095  001172  0E01               	movlw	high _dbuf
  7096  001174  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7097  001176  6EDA               	movwf	fsr2h,c
  7098  001178  0E2E               	movlw	46
  7099  00117A  6EDF               	movwf	indf2,c
  7100  00117C                     
  7101                           ; BSR set to: 0
  7102  00117C  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7103  00117E  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7104  001180                     
  7105                           ; BSR set to: 0
  7106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  7107  001180  078A               	decf	efgtoa@w& (0+255),f,b
  7108  001182  A0D8               	btfss	status,0,c
  7109  001184  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7110  001186                     
  7111                           ; BSR set to: 0
  7112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  7113  001186  0E00               	movlw	0
  7114  001188  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  7115  00118A  0E01               	movlw	1
  7116  00118C  6F7A               	movwf	efgtoa@pp& (0+255),b
  7117  00118E  EFD9  F008         	goto	l4824
  7118  001192                     l4816:
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  7122  001192  0E0E               	movlw	low _dbuf
  7123  001194  259E               	addwf	efgtoa@n& (0+255),w,b
  7124  001196  6ED9               	movwf	fsr2l,c
  7125  001198  0E01               	movlw	high _dbuf
  7126  00119A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7127  00119C  6EDA               	movwf	fsr2h,c
  7128  00119E  0E30               	movlw	48
  7129  0011A0  6EDF               	movwf	indf2,c
  7130  0011A2                     
  7131                           ; BSR set to: 0
  7132  0011A2  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7133  0011A4  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7134  0011A6                     
  7135                           ; BSR set to: 0
  7136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  7137  0011A6  078A               	decf	efgtoa@w& (0+255),f,b
  7138  0011A8  A0D8               	btfss	status,0,c
  7139  0011AA  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7140  0011AC                     
  7141                           ; BSR set to: 0
  7142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  7143  0011AC  0778               	decf	efgtoa@t& (0+255),f,b
  7144  0011AE  A0D8               	btfss	status,0,c
  7145  0011B0  0779               	decf	(efgtoa@t+1)& (0+255),f,b
  7146  0011B2                     l4824:
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  7150  0011B2  5178               	movf	efgtoa@t& (0+255),w,b
  7151  0011B4  1179               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7152  0011B6  A4D8               	btfss	status,2,c
  7153  0011B8  EFE0  F008         	goto	u5091
  7154  0011BC  EFE2  F008         	goto	u5090
  7155  0011C0                     u5091:
  7156  0011C0  EFC9  F008         	goto	l4816
  7157  0011C4                     u5090:
  7158  0011C4                     
  7159                           ; BSR set to: 0
  7160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7161  0011C4  0E0E               	movlw	low _dbuf
  7162  0011C6  259E               	addwf	efgtoa@n& (0+255),w,b
  7163  0011C8  6ED9               	movwf	fsr2l,c
  7164  0011CA  0E01               	movlw	high _dbuf
  7165  0011CC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7166  0011CE  6EDA               	movwf	fsr2h,c
  7167  0011D0  5184               	movf	efgtoa@d& (0+255),w,b
  7168  0011D2  0F30               	addlw	48
  7169  0011D4  6EDF               	movwf	indf2,c
  7170  0011D6                     
  7171                           ; BSR set to: 0
  7172  0011D6  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7173  0011D8  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7174  0011DA                     
  7175                           ; BSR set to: 0
  7176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  7177  0011DA  078A               	decf	efgtoa@w& (0+255),f,b
  7178  0011DC  A0D8               	btfss	status,0,c
  7179  0011DE  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7180  0011E0                     l4832:
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  7184  0011E0  C08E  F055         	movff	efgtoa@h,___flsub@b
  7185  0011E4  C08F  F056         	movff	efgtoa@h+1,___flsub@b+1
  7186  0011E8  C090  F057         	movff	efgtoa@h+2,___flsub@b+2
  7187  0011EC  C091  F058         	movff	efgtoa@h+3,___flsub@b+3
  7188  0011F0  C0A0  F017         	movff	efgtoa@u,___flmul@a
  7189  0011F4  C0A1  F018         	movff	efgtoa@u+1,___flmul@a+1
  7190  0011F8  C0A2  F019         	movff	efgtoa@u+2,___flmul@a+2
  7191  0011FC  C0A3  F01A         	movff	efgtoa@u+3,___flmul@a+3
  7192  001200  C092  F013         	movff	efgtoa@l,___flmul@b
  7193  001204  C093  F014         	movff	efgtoa@l+1,___flmul@b+1
  7194  001208  C094  F015         	movff	efgtoa@l+2,___flmul@b+2
  7195  00120C  C095  F016         	movff	efgtoa@l+3,___flmul@b+3
  7196  001210  ECBE  F00F         	call	___flmul	;wreg free
  7197  001214  C013  F059         	movff	?___flmul,___flsub@a
  7198  001218  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  7199  00121C  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  7200  001220  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  7201  001224  EC6B  F023         	call	___flsub	;wreg free
  7202  001228  C055  F08E         	movff	?___flsub,efgtoa@h
  7203  00122C  C056  F08F         	movff	?___flsub+1,efgtoa@h+1
  7204  001230  C057  F090         	movff	?___flsub+2,efgtoa@h+2
  7205  001234  C058  F091         	movff	?___flsub+3,efgtoa@h+3
  7206  001238                     
  7207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  7208  001238  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  7209  00123C  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  7210  001240  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  7211  001244  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  7212  001248  0E00               	movlw	0
  7213  00124A  6E30               	movwf	___fldiv@a^0,c
  7214  00124C  0E00               	movlw	0
  7215  00124E  6E31               	movwf	(___fldiv@a+1)^0,c
  7216  001250  0E20               	movlw	32
  7217  001252  6E32               	movwf	(___fldiv@a+2)^0,c
  7218  001254  0E41               	movlw	65
  7219  001256  6E33               	movwf	(___fldiv@a+3)^0,c
  7220  001258  ECD3  F011         	call	___fldiv	;wreg free
  7221  00125C  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  7222  001260  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  7223  001264  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  7224  001268  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  7225  00126C                     
  7226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  7227  00126C  0100               	movlb	0	; () banked
  7228  00126E  077C               	decf	efgtoa@ne& (0+255),f,b
  7229  001270  A0D8               	btfss	status,0,c
  7230  001272  077D               	decf	(efgtoa@ne+1)& (0+255),f,b
  7231  001274                     
  7232                           ; BSR set to: 0
  7233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  7234  001274  4B96               	infsnz	efgtoa@i& (0+255),f,b
  7235  001276  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  7236  001278                     l4840:
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7240  001278  517E               	movf	efgtoa@m& (0+255),w,b
  7241  00127A  5D96               	subwf	efgtoa@i& (0+255),w,b
  7242  00127C  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7243  00127E  0A80               	xorlw	128
  7244  001280  6F67               	movwf	??_efgtoa& (0+255),b
  7245  001282  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  7246  001284  0A80               	xorlw	128
  7247  001286  5967               	subwfb	??_efgtoa& (0+255),w,b
  7248  001288  B0D8               	btfsc	status,0,c
  7249  00128A  EF49  F009         	goto	u5101
  7250  00128E  EF4B  F009         	goto	u5100
  7251  001292                     u5101:
  7252  001292  EF59  F009         	goto	l4844
  7253  001296                     u5100:
  7254  001296                     
  7255                           ; BSR set to: 0
  7256  001296  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7257  001298  EF57  F009         	goto	u5111
  7258  00129C  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  7259  00129E  E109               	bnz	u5110
  7260  0012A0  0E4B               	movlw	75
  7261  0012A2  5D9E               	subwf	efgtoa@n& (0+255),w,b
  7262  0012A4  A0D8               	btfss	status,0,c
  7263  0012A6  EF57  F009         	goto	u5111
  7264  0012AA  EF59  F009         	goto	u5110
  7265  0012AE                     u5111:
  7266  0012AE  EF4F  F008         	goto	l4792
  7267  0012B2                     u5110:
  7268  0012B2                     l4844:
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7272  0012B2  517A               	movf	efgtoa@pp& (0+255),w,b
  7273  0012B4  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7274  0012B6  A4D8               	btfss	status,2,c
  7275  0012B8  EF60  F009         	goto	u5121
  7276  0012BC  EF62  F009         	goto	u5120
  7277  0012C0                     u5121:
  7278  0012C0  EF73  F009         	goto	l4852
  7279  0012C4                     u5120:
  7280  0012C4                     
  7281                           ; BSR set to: 0
  7282  0012C4  A9F8               	btfss	_flags& (0+255),4,b
  7283  0012C6  EF67  F009         	goto	u5131
  7284  0012CA  EF69  F009         	goto	u5130
  7285  0012CE                     u5131:
  7286  0012CE  EF73  F009         	goto	l4852
  7287  0012D2                     u5130:
  7288  0012D2                     
  7289                           ; BSR set to: 0
  7290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  7291  0012D2  0E0E               	movlw	low _dbuf
  7292  0012D4  259E               	addwf	efgtoa@n& (0+255),w,b
  7293  0012D6  6ED9               	movwf	fsr2l,c
  7294  0012D8  0E01               	movlw	high _dbuf
  7295  0012DA  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7296  0012DC  6EDA               	movwf	fsr2h,c
  7297  0012DE  0E2E               	movlw	46
  7298  0012E0  6EDF               	movwf	indf2,c
  7299  0012E2                     
  7300                           ; BSR set to: 0
  7301  0012E2  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7302  0012E4  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7303  0012E6                     l4852:
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  7307  0012E6  0E0E               	movlw	low _dbuf
  7308  0012E8  259E               	addwf	efgtoa@n& (0+255),w,b
  7309  0012EA  6ED9               	movwf	fsr2l,c
  7310  0012EC  0E01               	movlw	high _dbuf
  7311  0012EE  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7312  0012F0  6EDA               	movwf	fsr2h,c
  7313  0012F2  0E00               	movlw	0
  7314  0012F4  6EDF               	movwf	indf2,c
  7315  0012F6                     
  7316                           ; BSR set to: 0
  7317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  7318  0012F6  0E65               	movlw	101
  7319  0012F8  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7320  0012FA  A4D8               	btfss	status,2,c
  7321  0012FC  EF82  F009         	goto	u5141
  7322  001300  EF84  F009         	goto	u5140
  7323  001304                     u5141:
  7324  001304  EFDE  F004         	goto	l4654
  7325  001308                     u5140:
  7326  001308                     
  7327                           ; BSR set to: 0
  7328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  7329  001308  0E00               	movlw	0
  7330  00130A  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7331  00130C  0E4F               	movlw	79
  7332  00130E  6F96               	movwf	efgtoa@i& (0+255),b
  7333  001310                     
  7334                           ; BSR set to: 0
  7335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  7336  001310  0E0E               	movlw	low _dbuf
  7337  001312  2596               	addwf	efgtoa@i& (0+255),w,b
  7338  001314  6ED9               	movwf	fsr2l,c
  7339  001316  0E01               	movlw	high _dbuf
  7340  001318  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7341  00131A  6EDA               	movwf	fsr2h,c
  7342  00131C  0E00               	movlw	0
  7343  00131E  6EDF               	movwf	indf2,c
  7344  001320                     
  7345                           ; BSR set to: 0
  7346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  7347  001320  0E00               	movlw	0
  7348  001322  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  7349  001324  0E00               	movlw	0
  7350  001326  6F86               	movwf	efgtoa@sign& (0+255),b
  7351  001328                     
  7352                           ; BSR set to: 0
  7353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  7354  001328  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7355  00132A  EF9B  F009         	goto	u5150
  7356  00132E  EF99  F009         	goto	u5151
  7357  001332                     u5151:
  7358  001332  EFA3  F009         	goto	l4868
  7359  001336                     u5150:
  7360  001336                     
  7361                           ; BSR set to: 0
  7362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  7363  001336  0E00               	movlw	0
  7364  001338  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  7365  00133A  0E01               	movlw	1
  7366  00133C  6F86               	movwf	efgtoa@sign& (0+255),b
  7367  00133E                     
  7368                           ; BSR set to: 0
  7369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  7370  00133E  6D9C               	negf	efgtoa@e& (0+255),b
  7371  001340  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  7372  001342  B0D8               	btfsc	status,0,c
  7373  001344  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7374  001346                     l4868:
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  7378  001346  0E00               	movlw	0
  7379  001348  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  7380  00134A  0E02               	movlw	2
  7381  00134C  6F88               	movwf	efgtoa@p& (0+255),b
  7382                           
  7383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7384  00134E  EFD4  F009         	goto	l4880
  7385  001352                     l4870:
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  7389  001352  0796               	decf	efgtoa@i& (0+255),f,b
  7390  001354  A0D8               	btfss	status,0,c
  7391  001356  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7392  001358                     
  7393                           ; BSR set to: 0
  7394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  7395  001358  0E0E               	movlw	low _dbuf
  7396  00135A  2596               	addwf	efgtoa@i& (0+255),w,b
  7397  00135C  6ED9               	movwf	fsr2l,c
  7398  00135E  0E01               	movlw	high _dbuf
  7399  001360  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7400  001362  6EDA               	movwf	fsr2h,c
  7401  001364  C09C  F001         	movff	efgtoa@e,___awmod@dividend
  7402  001368  C09D  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  7403  00136C  0E00               	movlw	0
  7404  00136E  6E04               	movwf	(___awmod@divisor+1)^0,c
  7405  001370  0E0A               	movlw	10
  7406  001372  6E03               	movwf	___awmod@divisor^0,c
  7407  001374  EC6D  F01F         	call	___awmod	;wreg free
  7408  001378  5001               	movf	?___awmod^0,w,c
  7409  00137A  0F30               	addlw	48
  7410  00137C  6EDF               	movwf	indf2,c
  7411  00137E                     
  7412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  7413  00137E  C09C  F001         	movff	efgtoa@e,___awdiv@dividend
  7414  001382  C09D  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  7415  001386  0E00               	movlw	0
  7416  001388  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7417  00138A  0E0A               	movlw	10
  7418  00138C  6E03               	movwf	___awdiv@divisor^0,c
  7419  00138E  EC51  F01E         	call	___awdiv	;wreg free
  7420  001392  C001  F09C         	movff	?___awdiv,efgtoa@e
  7421  001396  C002  F09D         	movff	?___awdiv+1,efgtoa@e+1
  7422  00139A                     
  7423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  7424  00139A  0100               	movlb	0	; () banked
  7425  00139C  0788               	decf	efgtoa@p& (0+255),f,b
  7426  00139E  A0D8               	btfss	status,0,c
  7427  0013A0  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  7428  0013A2                     
  7429                           ; BSR set to: 0
  7430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  7431  0013A2  078A               	decf	efgtoa@w& (0+255),f,b
  7432  0013A4  A0D8               	btfss	status,0,c
  7433  0013A6  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7434  0013A8                     l4880:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7438  0013A8  519C               	movf	efgtoa@e& (0+255),w,b
  7439  0013AA  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7440  0013AC  A4D8               	btfss	status,2,c
  7441  0013AE  EFDB  F009         	goto	u5161
  7442  0013B2  EFDD  F009         	goto	u5160
  7443  0013B6                     u5161:
  7444  0013B6  EFA9  F009         	goto	l4870
  7445  0013BA                     u5160:
  7446  0013BA                     
  7447                           ; BSR set to: 0
  7448  0013BA  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7449  0013BC  EFEA  F009         	goto	u5170
  7450  0013C0  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  7451  0013C2  E106               	bnz	u5171
  7452  0013C4  0588               	decf	efgtoa@p& (0+255),w,b
  7453  0013C6  B0D8               	btfsc	status,0,c
  7454  0013C8  EFE8  F009         	goto	u5171
  7455  0013CC  EFEA  F009         	goto	u5170
  7456  0013D0                     u5171:
  7457  0013D0  EFA9  F009         	goto	l4870
  7458  0013D4                     u5170:
  7459  0013D4                     
  7460                           ; BSR set to: 0
  7461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  7462  0013D4  0796               	decf	efgtoa@i& (0+255),f,b
  7463  0013D6  A0D8               	btfss	status,0,c
  7464  0013D8  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7465  0013DA                     
  7466                           ; BSR set to: 0
  7467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  7468  0013DA  5186               	movf	efgtoa@sign& (0+255),w,b
  7469  0013DC  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7470  0013DE  A4D8               	btfss	status,2,c
  7471  0013E0  EFF4  F009         	goto	u5181
  7472  0013E4  EFF6  F009         	goto	u5180
  7473  0013E8                     u5181:
  7474  0013E8  EFFC  F009         	goto	l4890
  7475  0013EC                     u5180:
  7476  0013EC                     
  7477                           ; BSR set to: 0
  7478  0013EC  0E00               	movlw	0
  7479  0013EE  6F73               	movwf	(_efgtoa$1511+1)& (0+255),b
  7480  0013F0  0E2B               	movlw	43
  7481  0013F2  6F72               	movwf	_efgtoa$1511& (0+255),b
  7482  0013F4  EF00  F00A         	goto	l4892
  7483  0013F8                     l4890:
  7484                           
  7485                           ; BSR set to: 0
  7486  0013F8  0E00               	movlw	0
  7487  0013FA  6F73               	movwf	(_efgtoa$1511+1)& (0+255),b
  7488  0013FC  0E2D               	movlw	45
  7489  0013FE  6F72               	movwf	_efgtoa$1511& (0+255),b
  7490  001400                     l4892:
  7491                           
  7492                           ; BSR set to: 0
  7493  001400  0E0E               	movlw	low _dbuf
  7494  001402  2596               	addwf	efgtoa@i& (0+255),w,b
  7495  001404  6ED9               	movwf	fsr2l,c
  7496  001406  0E01               	movlw	high _dbuf
  7497  001408  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7498  00140A  6EDA               	movwf	fsr2h,c
  7499  00140C  C072  FFDF         	movff	_efgtoa$1511,indf2
  7500  001410                     
  7501                           ; BSR set to: 0
  7502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  7503  001410  078A               	decf	efgtoa@w& (0+255),f,b
  7504  001412  A0D8               	btfss	status,0,c
  7505  001414  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7506  001416                     
  7507                           ; BSR set to: 0
  7508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7509  001416  0796               	decf	efgtoa@i& (0+255),f,b
  7510  001418  A0D8               	btfss	status,0,c
  7511  00141A  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7512  00141C                     
  7513                           ; BSR set to: 0
  7514  00141C  0EBF               	movlw	191
  7515  00141E  6F67               	movwf	??_efgtoa& (0+255),b
  7516  001420  0EFF               	movlw	255
  7517  001422  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  7518  001424  5166               	movf	efgtoa@c& (0+255),w,b
  7519  001426  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  7520  001428  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  7521  00142A  5167               	movf	??_efgtoa& (0+255),w,b
  7522  00142C  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  7523  00142E  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  7524  001430  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7525  001432  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  7526  001434  E10A               	bnz	u5190
  7527  001436  0E1A               	movlw	26
  7528  001438  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  7529  00143A  A0D8               	btfss	status,0,c
  7530  00143C  EF22  F00A         	goto	u5191
  7531  001440  EF25  F00A         	goto	u5190
  7532  001444                     u5191:
  7533  001444  0E01               	movlw	1
  7534  001446  EF26  F00A         	goto	u5200
  7535  00144A                     u5190:
  7536  00144A  0E00               	movlw	0
  7537  00144C                     u5200:
  7538  00144C  6F76               	movwf	_efgtoa$1513& (0+255),b
  7539  00144E  6B77               	clrf	(_efgtoa$1513+1)& (0+255),b
  7540  001450                     
  7541                           ; BSR set to: 0
  7542  001450  5176               	movf	_efgtoa$1513& (0+255),w,b
  7543  001452  1177               	iorwf	(_efgtoa$1513+1)& (0+255),w,b
  7544  001454  A4D8               	btfss	status,2,c
  7545  001456  EF2F  F00A         	goto	u5211
  7546  00145A  EF31  F00A         	goto	u5210
  7547  00145E                     u5211:
  7548  00145E  EF37  F00A         	goto	l4906
  7549  001462                     u5210:
  7550  001462                     
  7551                           ; BSR set to: 0
  7552  001462  0E00               	movlw	0
  7553  001464  6F75               	movwf	(_efgtoa$1512+1)& (0+255),b
  7554  001466  0E65               	movlw	101
  7555  001468  6F74               	movwf	_efgtoa$1512& (0+255),b
  7556  00146A  EF3B  F00A         	goto	l4908
  7557  00146E                     l4906:
  7558                           
  7559                           ; BSR set to: 0
  7560  00146E  0E00               	movlw	0
  7561  001470  6F75               	movwf	(_efgtoa$1512+1)& (0+255),b
  7562  001472  0E45               	movlw	69
  7563  001474  6F74               	movwf	_efgtoa$1512& (0+255),b
  7564  001476                     l4908:
  7565                           
  7566                           ; BSR set to: 0
  7567  001476  0E0E               	movlw	low _dbuf
  7568  001478  2596               	addwf	efgtoa@i& (0+255),w,b
  7569  00147A  6ED9               	movwf	fsr2l,c
  7570  00147C  0E01               	movlw	high _dbuf
  7571  00147E  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7572  001480  6EDA               	movwf	fsr2h,c
  7573  001482  C074  FFDF         	movff	_efgtoa$1512,indf2
  7574  001486                     
  7575                           ; BSR set to: 0
  7576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  7577  001486  078A               	decf	efgtoa@w& (0+255),f,b
  7578  001488  A0D8               	btfss	status,0,c
  7579  00148A  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7580  00148C                     
  7581                           ; BSR set to: 0
  7582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  7583  00148C  0E0E               	movlw	low _dbuf
  7584  00148E  259E               	addwf	efgtoa@n& (0+255),w,b
  7585  001490  6E01               	movwf	strcpy@dest^0,c
  7586  001492  0E01               	movlw	high _dbuf
  7587  001494  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7588  001496  6E02               	movwf	(strcpy@dest+1)^0,c
  7589  001498  0E0E               	movlw	low _dbuf
  7590  00149A  2596               	addwf	efgtoa@i& (0+255),w,b
  7591  00149C  6E03               	movwf	strcpy@src^0,c
  7592  00149E  0E01               	movlw	high _dbuf
  7593  0014A0  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7594  0014A2  6E04               	movwf	(strcpy@src+1)^0,c
  7595  0014A4  EC57  F021         	call	_strcpy	;wreg free
  7596  0014A8  EFDE  F004         	goto	l4654
  7597  0014AC                     l1342:
  7598  0014AC  0012               	return		;funcret
  7599  0014AE                     __end_of_efgtoa:
  7600                           	callstack 0
  7601                           
  7602 ;; *************** function _tolower *****************
  7603 ;; Defined at:
  7604 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;  c               2    6[COMRAM] int 
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;		None
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  2    6[COMRAM] int 
  7611 ;; Registers used:
  7612 ;;		wreg, status,2, status,0
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7618 ;;      Params:         2       0       0       0       0       0       0       0       0
  7619 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7620 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7621 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7622 ;;Total ram usage:        8 bytes
  7623 ;; Hardware stack levels used: 1
  7624 ;; Hardware stack levels required when called: 1
  7625 ;; This function calls:
  7626 ;;		_isupper
  7627 ;; This function is called by:
  7628 ;;		_efgtoa
  7629 ;;		_vfpfcnvrt
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text32
  7634  004192                     __ptext32:
  7635                           	callstack 0
  7636  004192                     _tolower:
  7637                           	callstack 25
  7638  004192  0EBF               	movlw	191
  7639  004194  6E09               	movwf	??_tolower^0,c
  7640  004196  0EFF               	movlw	255
  7641  004198  6E0A               	movwf	(??_tolower+1)^0,c
  7642  00419A  C007  F00B         	movff	tolower@c,??_tolower+2
  7643  00419E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  7644  0041A2  5009               	movf	??_tolower^0,w,c
  7645  0041A4  260B               	addwf	(??_tolower+2)^0,f,c
  7646  0041A6  500A               	movf	(??_tolower+1)^0,w,c
  7647  0041A8  220C               	addwfc	(??_tolower+3)^0,f,c
  7648  0041AA  500C               	movf	(??_tolower+3)^0,w,c
  7649  0041AC  E10A               	bnz	u4430
  7650  0041AE  0E1A               	movlw	26
  7651  0041B0  5C0B               	subwf	(??_tolower+2)^0,w,c
  7652  0041B2  A0D8               	btfss	status,0,c
  7653  0041B4  EFDE  F020         	goto	u4431
  7654  0041B8  EFE1  F020         	goto	u4430
  7655  0041BC                     u4431:
  7656  0041BC  0E01               	movlw	1
  7657  0041BE  EFE2  F020         	goto	u4440
  7658  0041C2                     u4430:
  7659  0041C2  0E00               	movlw	0
  7660  0041C4                     u4440:
  7661  0041C4  6E0D               	movwf	_tolower$1681^0,c
  7662  0041C6  6A0E               	clrf	(_tolower$1681+1)^0,c
  7663  0041C8  500D               	movf	_tolower$1681^0,w,c
  7664  0041CA  100E               	iorwf	(_tolower$1681+1)^0,w,c
  7665  0041CC  B4D8               	btfsc	status,2,c
  7666  0041CE  EFEB  F020         	goto	u4451
  7667  0041D2  EFED  F020         	goto	u4450
  7668  0041D6                     u4451:
  7669  0041D6  EFF4  F020         	goto	l1623
  7670  0041DA                     u4450:
  7671  0041DA  0E20               	movlw	32
  7672  0041DC  1007               	iorwf	tolower@c^0,w,c
  7673  0041DE  6E07               	movwf	?_tolower^0,c
  7674  0041E0  5008               	movf	(tolower@c+1)^0,w,c
  7675  0041E2  6E08               	movwf	(?_tolower+1)^0,c
  7676  0041E4  EFF8  F020         	goto	l1628
  7677  0041E8                     l1623:
  7678  0041E8  C007  F007         	movff	tolower@c,?_tolower
  7679  0041EC  C008  F008         	movff	tolower@c+1,?_tolower+1
  7680  0041F0                     l1628:
  7681  0041F0  0012               	return		;funcret
  7682  0041F2                     __end_of_tolower:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function _isupper *****************
  7686 ;; Defined at:
  7687 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  c               2    0[COMRAM] int 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  2    0[COMRAM] int 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7701 ;;      Params:         2       0       0       0       0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7703 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7704 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7705 ;;Total ram usage:        6 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; This function calls:
  7708 ;;		Nothing
  7709 ;; This function is called by:
  7710 ;;		_efgtoa
  7711 ;;		_xtoa
  7712 ;;		_vfpfcnvrt
  7713 ;;		_tolower
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           	psect	text33
  7718  00484E                     __ptext33:
  7719                           	callstack 0
  7720  00484E                     _isupper:
  7721                           	callstack 25
  7722  00484E  0EBF               	movlw	191
  7723  004850  6E03               	movwf	??_isupper^0,c
  7724  004852  0EFF               	movlw	255
  7725  004854  6E04               	movwf	(??_isupper+1)^0,c
  7726  004856  C001  F005         	movff	isupper@c,??_isupper+2
  7727  00485A  C002  F006         	movff	isupper@c+1,??_isupper+3
  7728  00485E  5003               	movf	??_isupper^0,w,c
  7729  004860  2605               	addwf	(??_isupper+2)^0,f,c
  7730  004862  5004               	movf	(??_isupper+1)^0,w,c
  7731  004864  2206               	addwfc	(??_isupper+3)^0,f,c
  7732  004866  5006               	movf	(??_isupper+3)^0,w,c
  7733  004868  E10A               	bnz	u3560
  7734  00486A  0E1A               	movlw	26
  7735  00486C  5C05               	subwf	(??_isupper+2)^0,w,c
  7736  00486E  A0D8               	btfss	status,0,c
  7737  004870  EF3C  F024         	goto	u3561
  7738  004874  EF3F  F024         	goto	u3560
  7739  004878                     u3561:
  7740  004878  0E01               	movlw	1
  7741  00487A  EF40  F024         	goto	u3570
  7742  00487E                     u3560:
  7743  00487E  0E00               	movlw	0
  7744  004880                     u3570:
  7745  004880  6E01               	movwf	?_isupper^0,c
  7746  004882  6A02               	clrf	(?_isupper+1)^0,c
  7747  004884  0012               	return		;funcret
  7748  004886                     __end_of_isupper:
  7749                           	callstack 0
  7750                           
  7751 ;; *************** function _strcpy *****************
  7752 ;; Defined at:
  7753 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7756 ;;		 -> dbuf(80), 
  7757 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7758 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  7759 ;;		 -> dbuf(80), 
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;  d               2    8[COMRAM] PTR unsigned char 
  7762 ;;		 -> dbuf(80), 
  7763 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7764 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  7765 ;;		 -> dbuf(80), 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  2    0[COMRAM] PTR unsigned char 
  7768 ;; Registers used:
  7769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7775 ;;      Params:         4       0       0       0       0       0       0       0       0
  7776 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7777 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7778 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7779 ;;Total ram usage:       10 bytes
  7780 ;; Hardware stack levels used: 1
  7781 ;; This function calls:
  7782 ;;		Nothing
  7783 ;; This function is called by:
  7784 ;;		_efgtoa
  7785 ;; This function uses a non-reentrant model
  7786 ;;
  7787                           
  7788                           	psect	text34
  7789  0042AE                     __ptext34:
  7790                           	callstack 0
  7791  0042AE                     _strcpy:
  7792                           	callstack 25
  7793  0042AE  C003  F007         	movff	strcpy@src,strcpy@s
  7794  0042B2  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  7795  0042B6  C001  F009         	movff	strcpy@dest,strcpy@d
  7796  0042BA  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  7797  0042BE                     l4522:
  7798  0042BE  5007               	movf	strcpy@s^0,w,c
  7799  0042C0  6E05               	movwf	??_strcpy^0,c
  7800  0042C2  5008               	movf	(strcpy@s+1)^0,w,c
  7801  0042C4  6E06               	movwf	(??_strcpy+1)^0,c
  7802  0042C6  4A07               	infsnz	strcpy@s^0,f,c
  7803  0042C8  2A08               	incf	(strcpy@s+1)^0,f,c
  7804  0042CA  C005  FFF6         	movff	??_strcpy,tblptrl
  7805  0042CE  C006  FFF7         	movff	??_strcpy+1,tblptrh
  7806  0042D2  6AF8               	clrf	tblptru,c
  7807  0042D4  C009  FFD9         	movff	strcpy@d,fsr2l
  7808  0042D8  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  7809  0042DC  4A09               	infsnz	strcpy@d^0,f,c
  7810  0042DE  2A0A               	incf	(strcpy@d+1)^0,f,c
  7811  0042E0  0E07               	movlw	(high __ramtop+-1)
  7812  0042E2  64F7               	cpfsgt	tblptrh,c
  7813  0042E4  D003               	bra	u4417
  7814  0042E6  0008               	tblrd		*
  7815  0042E8  50F5               	movf	tablat,w,c
  7816  0042EA  D005               	bra	u4410
  7817  0042EC                     u4417:
  7818  0042EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7819  0042F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  7820  0042F4  50E7               	movf	indf1,w,c
  7821  0042F6                     u4410:
  7822  0042F6  6EDF               	movwf	indf2,c
  7823  0042F8  50DF               	movf	indf2,w,c
  7824  0042FA  A4D8               	btfss	status,2,c
  7825  0042FC  EF82  F021         	goto	u4421
  7826  004300  EF84  F021         	goto	u4420
  7827  004304                     u4421:
  7828  004304  EF5F  F021         	goto	l4522
  7829  004308                     u4420:
  7830  004308  0012               	return		;funcret
  7831  00430A                     __end_of_strcpy:
  7832                           	callstack 0
  7833                           
  7834 ;; *************** function _pad *****************
  7835 ;; Defined at:
  7836 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7839 ;;		 -> sprintf@f(6), 
  7840 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7841 ;;		 -> dbuf(80), 
  7842 ;;  p               2   20[COMRAM] int 
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  w               2   25[COMRAM] int 
  7845 ;;  i               2   23[COMRAM] int 
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  2   16[COMRAM] int 
  7848 ;; Registers used:
  7849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7855 ;;      Params:         6       0       0       0       0       0       0       0       0
  7856 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7857 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7858 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7859 ;;Total ram usage:       11 bytes
  7860 ;; Hardware stack levels used: 1
  7861 ;; Hardware stack levels required when called: 3
  7862 ;; This function calls:
  7863 ;;		_fputc
  7864 ;;		_fputs
  7865 ;;		_strlen
  7866 ;; This function is called by:
  7867 ;;		_efgtoa
  7868 ;;		_xtoa
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872                           	psect	text35
  7873  003BDC                     __ptext35:
  7874                           	callstack 0
  7875  003BDC                     _pad:
  7876                           	callstack 22
  7877  003BDC                     
  7878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7879  003BDC  0100               	movlb	0	; () banked
  7880  003BDE  A1F8               	btfss	_flags& (0+255),0,b
  7881  003BE0  EFF4  F01D         	goto	u4301
  7882  003BE4  EFF6  F01D         	goto	u4300
  7883  003BE8                     u4301:
  7884  003BE8  EF00  F01E         	goto	l4480
  7885  003BEC                     u4300:
  7886  003BEC                     
  7887                           ; BSR set to: 0
  7888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7889  003BEC  C013  F00A         	movff	pad@buf,fputs@s
  7890  003BF0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7891  003BF4  C011  F00C         	movff	pad@fp,fputs@fp
  7892  003BF8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7893  003BFC  EC8E  F023         	call	_fputs	;wreg free
  7894  003C00                     l4480:
  7895                           
  7896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7897  003C00  BE16               	btfsc	(pad@p+1)^0,7,c
  7898  003C02  EF05  F01E         	goto	u4311
  7899  003C06  EF07  F01E         	goto	u4310
  7900  003C0A                     u4311:
  7901  003C0A  EF0D  F01E         	goto	l4484
  7902  003C0E                     u4310:
  7903  003C0E  C015  F01A         	movff	pad@p,pad@w
  7904  003C12  C016  F01B         	movff	pad@p+1,pad@w+1
  7905  003C16  EF11  F01E         	goto	l1319
  7906  003C1A                     l4484:
  7907  003C1A  0E00               	movlw	0
  7908  003C1C  6E1B               	movwf	(pad@w+1)^0,c
  7909  003C1E  0E00               	movlw	0
  7910  003C20  6E1A               	movwf	pad@w^0,c
  7911  003C22                     l1319:
  7912                           
  7913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7914  003C22  0E00               	movlw	0
  7915  003C24  6E19               	movwf	(pad@i+1)^0,c
  7916  003C26  0E00               	movlw	0
  7917  003C28  6E18               	movwf	pad@i^0,c
  7918                           
  7919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7920  003C2A  EF23  F01E         	goto	l4490
  7921  003C2E                     l4486:
  7922                           
  7923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7924  003C2E  0E00               	movlw	0
  7925  003C30  6E02               	movwf	(fputc@c+1)^0,c
  7926  003C32  0E20               	movlw	32
  7927  003C34  6E01               	movwf	fputc@c^0,c
  7928  003C36  C011  F003         	movff	pad@fp,fputc@fp
  7929  003C3A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7930  003C3E  EC89  F01D         	call	_fputc	;wreg free
  7931  003C42                     
  7932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7933  003C42  4A18               	infsnz	pad@i^0,f,c
  7934  003C44  2A19               	incf	(pad@i+1)^0,f,c
  7935  003C46                     l4490:
  7936                           
  7937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7938  003C46  501A               	movf	pad@w^0,w,c
  7939  003C48  5C18               	subwf	pad@i^0,w,c
  7940  003C4A  5019               	movf	(pad@i+1)^0,w,c
  7941  003C4C  0A80               	xorlw	128
  7942  003C4E  6E17               	movwf	??_pad^0,c
  7943  003C50  501B               	movf	(pad@w+1)^0,w,c
  7944  003C52  0A80               	xorlw	128
  7945  003C54  5817               	subwfb	??_pad^0,w,c
  7946  003C56  A0D8               	btfss	status,0,c
  7947  003C58  EF30  F01E         	goto	u4321
  7948  003C5C  EF32  F01E         	goto	u4320
  7949  003C60                     u4321:
  7950  003C60  EF17  F01E         	goto	l4486
  7951  003C64                     u4320:
  7952  003C64                     
  7953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7954  003C64  0100               	movlb	0	; () banked
  7955  003C66  B1F8               	btfsc	_flags& (0+255),0,b
  7956  003C68  EF38  F01E         	goto	u4331
  7957  003C6C  EF3A  F01E         	goto	u4330
  7958  003C70                     u4331:
  7959  003C70  EF44  F01E         	goto	l4494
  7960  003C74                     u4330:
  7961  003C74                     
  7962                           ; BSR set to: 0
  7963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7964  003C74  C013  F00A         	movff	pad@buf,fputs@s
  7965  003C78  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7966  003C7C  C011  F00C         	movff	pad@fp,fputs@fp
  7967  003C80  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7968  003C84  EC8E  F023         	call	_fputs	;wreg free
  7969  003C88                     l4494:
  7970                           
  7971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7972  003C88  C013  F001         	movff	pad@buf,strlen@s
  7973  003C8C  C014  F002         	movff	pad@buf+1,strlen@s+1
  7974  003C90  EC97  F024         	call	_strlen	;wreg free
  7975  003C94  501A               	movf	pad@w^0,w,c
  7976  003C96  2401               	addwf	?_strlen^0,w,c
  7977  003C98  6E11               	movwf	?_pad^0,c
  7978  003C9A  501B               	movf	(pad@w+1)^0,w,c
  7979  003C9C  2002               	addwfc	(?_strlen+1)^0,w,c
  7980  003C9E  6E12               	movwf	(?_pad+1)^0,c
  7981  003CA0  0012               	return		;funcret
  7982  003CA2                     __end_of_pad:
  7983                           	callstack 0
  7984                           
  7985 ;; *************** function _strlen *****************
  7986 ;; Defined at:
  7987 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7990 ;;		 -> dbuf(80), 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7993 ;;		 -> dbuf(80), 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  2    0[COMRAM] unsigned int 
  7996 ;; Registers used:
  7997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8003 ;;      Params:         2       0       0       0       0       0       0       0       0
  8004 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8006 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8007 ;;Total ram usage:        4 bytes
  8008 ;; Hardware stack levels used: 1
  8009 ;; This function calls:
  8010 ;;		Nothing
  8011 ;; This function is called by:
  8012 ;;		_pad
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text36
  8017  00492E                     __ptext36:
  8018                           	callstack 0
  8019  00492E                     _strlen:
  8020                           	callstack 24
  8021  00492E  C001  F003         	movff	strlen@s,strlen@a
  8022  004932  C002  F004         	movff	strlen@s+1,strlen@a+1
  8023  004936  EF9F  F024         	goto	l4012
  8024  00493A                     l4010:
  8025  00493A  4A01               	infsnz	strlen@s^0,f,c
  8026  00493C  2A02               	incf	(strlen@s+1)^0,f,c
  8027  00493E                     l4012:
  8028  00493E  C001  FFD9         	movff	strlen@s,fsr2l
  8029  004942  C002  FFDA         	movff	strlen@s+1,fsr2h
  8030  004946  50DF               	movf	indf2,w,c
  8031  004948  A4D8               	btfss	status,2,c
  8032  00494A  EFA9  F024         	goto	u3551
  8033  00494E  EFAB  F024         	goto	u3550
  8034  004952                     u3551:
  8035  004952  EF9D  F024         	goto	l4010
  8036  004956                     u3550:
  8037  004956  5003               	movf	strlen@a^0,w,c
  8038  004958  5C01               	subwf	strlen@s^0,w,c
  8039  00495A  6E01               	movwf	?_strlen^0,c
  8040  00495C  5004               	movf	(strlen@a+1)^0,w,c
  8041  00495E  5802               	subwfb	(strlen@s+1)^0,w,c
  8042  004960  6E02               	movwf	(?_strlen+1)^0,c
  8043  004962  0012               	return		;funcret
  8044  004964                     __end_of_strlen:
  8045                           	callstack 0
  8046                           
  8047 ;; *************** function _fputs *****************
  8048 ;; Defined at:
  8049 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8052 ;;		 -> dbuf(80), 
  8053 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8054 ;;		 -> sprintf@f(6), 
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;  i               2   14[COMRAM] int 
  8057 ;;  c               1   13[COMRAM] unsigned char 
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  2    9[COMRAM] int 
  8060 ;; Registers used:
  8061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8067 ;;      Params:         4       0       0       0       0       0       0       0       0
  8068 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8070 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8071 ;;Total ram usage:        7 bytes
  8072 ;; Hardware stack levels used: 1
  8073 ;; Hardware stack levels required when called: 2
  8074 ;; This function calls:
  8075 ;;		_fputc
  8076 ;; This function is called by:
  8077 ;;		_pad
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	text37
  8082  00471C                     __ptext37:
  8083                           	callstack 0
  8084  00471C                     _fputs:
  8085                           	callstack 22
  8086  00471C  0E00               	movlw	0
  8087  00471E  6E10               	movwf	(fputs@i+1)^0,c
  8088  004720  0E00               	movlw	0
  8089  004722  6E0F               	movwf	fputs@i^0,c
  8090  004724  EF9F  F023         	goto	l4006
  8091  004728                     l4002:
  8092  004728  C00E  F001         	movff	fputs@c,fputc@c
  8093  00472C  6A02               	clrf	(fputc@c+1)^0,c
  8094  00472E  C00C  F003         	movff	fputs@fp,fputc@fp
  8095  004732  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8096  004736  EC89  F01D         	call	_fputc	;wreg free
  8097  00473A  4A0F               	infsnz	fputs@i^0,f,c
  8098  00473C  2A10               	incf	(fputs@i+1)^0,f,c
  8099  00473E                     l4006:
  8100  00473E  500F               	movf	fputs@i^0,w,c
  8101  004740  240A               	addwf	fputs@s^0,w,c
  8102  004742  6ED9               	movwf	fsr2l,c
  8103  004744  5010               	movf	(fputs@i+1)^0,w,c
  8104  004746  200B               	addwfc	(fputs@s+1)^0,w,c
  8105  004748  6EDA               	movwf	fsr2h,c
  8106  00474A  50DF               	movf	indf2,w,c
  8107  00474C  6E0E               	movwf	fputs@c^0,c
  8108  00474E  500E               	movf	fputs@c^0,w,c
  8109  004750  A4D8               	btfss	status,2,c
  8110  004752  EFAD  F023         	goto	u3541
  8111  004756  EFAF  F023         	goto	u3540
  8112  00475A                     u3541:
  8113  00475A  EF94  F023         	goto	l4002
  8114  00475E                     u3540:
  8115  00475E  0012               	return		;funcret
  8116  004760                     __end_of_fputs:
  8117                           	callstack 0
  8118                           
  8119 ;; *************** function _fputc *****************
  8120 ;; Defined at:
  8121 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;  c               2    0[COMRAM] int 
  8124 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8125 ;;		 -> sprintf@f(6), 
  8126 ;; Auto vars:     Size  Location     Type
  8127 ;;		None
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  2    0[COMRAM] int 
  8130 ;; Registers used:
  8131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8137 ;;      Params:         4       0       0       0       0       0       0       0       0
  8138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8139 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8140 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8141 ;;Total ram usage:        9 bytes
  8142 ;; Hardware stack levels used: 1
  8143 ;; Hardware stack levels required when called: 1
  8144 ;; This function calls:
  8145 ;;		_putch
  8146 ;; This function is called by:
  8147 ;;		_pad
  8148 ;;		_vfpfcnvrt
  8149 ;;		_fputs
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           	psect	text38
  8154  003B12                     __ptext38:
  8155                           	callstack 0
  8156  003B12                     _fputc:
  8157                           	callstack 22
  8158  003B12  5003               	movf	fputc@fp^0,w,c
  8159  003B14  1004               	iorwf	(fputc@fp+1)^0,w,c
  8160  003B16  B4D8               	btfsc	status,2,c
  8161  003B18  EF90  F01D         	goto	u3111
  8162  003B1C  EF92  F01D         	goto	u3110
  8163  003B20                     u3111:
  8164  003B20  EF9B  F01D         	goto	l3788
  8165  003B24                     u3110:
  8166  003B24  5003               	movf	fputc@fp^0,w,c
  8167  003B26  1004               	iorwf	(fputc@fp+1)^0,w,c
  8168  003B28  A4D8               	btfss	status,2,c
  8169  003B2A  EF99  F01D         	goto	u3121
  8170  003B2E  EF9B  F01D         	goto	u3120
  8171  003B32                     u3121:
  8172  003B32  EFA0  F01D         	goto	l3790
  8173  003B36                     u3120:
  8174  003B36                     l3788:
  8175  003B36  5001               	movf	fputc@c^0,w,c
  8176  003B38  ECA2  F025         	call	_putch
  8177  003B3C  EFED  F01D         	goto	l1586
  8178  003B40                     l3790:
  8179  003B40  EE20 F004          	lfsr	2,4
  8180  003B44  5003               	movf	fputc@fp^0,w,c
  8181  003B46  26D9               	addwf	fsr2l,f,c
  8182  003B48  5004               	movf	(fputc@fp+1)^0,w,c
  8183  003B4A  22DA               	addwfc	fsr2h,f,c
  8184  003B4C  50DE               	movf	postinc2,w,c
  8185  003B4E  10DE               	iorwf	postinc2,w,c
  8186  003B50  B4D8               	btfsc	status,2,c
  8187  003B52  EFAD  F01D         	goto	u3131
  8188  003B56  EFAF  F01D         	goto	u3130
  8189  003B5A                     u3131:
  8190  003B5A  EFCA  F01D         	goto	l3794
  8191  003B5E                     u3130:
  8192  003B5E  EE20 F004          	lfsr	2,4
  8193  003B62  5003               	movf	fputc@fp^0,w,c
  8194  003B64  26D9               	addwf	fsr2l,f,c
  8195  003B66  5004               	movf	(fputc@fp+1)^0,w,c
  8196  003B68  22DA               	addwfc	fsr2h,f,c
  8197  003B6A  EE10 F002          	lfsr	1,2
  8198  003B6E  5003               	movf	fputc@fp^0,w,c
  8199  003B70  26E1               	addwf	fsr1l,f,c
  8200  003B72  5004               	movf	(fputc@fp+1)^0,w,c
  8201  003B74  22E2               	addwfc	fsr1h,f,c
  8202  003B76  50DE               	movf	postinc2,w,c
  8203  003B78  5CE6               	subwf	postinc1,w,c
  8204  003B7A  50E6               	movf	postinc1,w,c
  8205  003B7C  0A80               	xorlw	128
  8206  003B7E  6E09               	movwf	(??_fputc+4)^0,c
  8207  003B80  50DE               	movf	postinc2,w,c
  8208  003B82  0A80               	xorlw	128
  8209  003B84  5809               	subwfb	(??_fputc+4)^0,w,c
  8210  003B86  B0D8               	btfsc	status,0,c
  8211  003B88  EFC8  F01D         	goto	u3141
  8212  003B8C  EFCA  F01D         	goto	u3140
  8213  003B90                     u3141:
  8214  003B90  EFED  F01D         	goto	l1586
  8215  003B94                     u3140:
  8216  003B94                     l3794:
  8217  003B94  EE20 F002          	lfsr	2,2
  8218  003B98  5003               	movf	fputc@fp^0,w,c
  8219  003B9A  26D9               	addwf	fsr2l,f,c
  8220  003B9C  5004               	movf	(fputc@fp+1)^0,w,c
  8221  003B9E  22DA               	addwfc	fsr2h,f,c
  8222  003BA0  CFDE F005          	movff	postinc2,??_fputc
  8223  003BA4  CFDD F006          	movff	postdec2,??_fputc+1
  8224  003BA8  C003  FFD9         	movff	fputc@fp,fsr2l
  8225  003BAC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8226  003BB0  CFDE F007          	movff	postinc2,??_fputc+2
  8227  003BB4  CFDD F008          	movff	postdec2,??_fputc+3
  8228  003BB8  5005               	movf	??_fputc^0,w,c
  8229  003BBA  2407               	addwf	(??_fputc+2)^0,w,c
  8230  003BBC  6ED9               	movwf	fsr2l,c
  8231  003BBE  5006               	movf	(??_fputc+1)^0,w,c
  8232  003BC0  2008               	addwfc	(??_fputc+3)^0,w,c
  8233  003BC2  6EDA               	movwf	fsr2h,c
  8234  003BC4  C001  FFDF         	movff	fputc@c,indf2
  8235  003BC8  EE20 F002          	lfsr	2,2
  8236  003BCC  5003               	movf	fputc@fp^0,w,c
  8237  003BCE  26D9               	addwf	fsr2l,f,c
  8238  003BD0  5004               	movf	(fputc@fp+1)^0,w,c
  8239  003BD2  22DA               	addwfc	fsr2h,f,c
  8240  003BD4  2ADE               	incf	postinc2,f,c
  8241  003BD6  0E00               	movlw	0
  8242  003BD8  22DD               	addwfc	postdec2,f,c
  8243  003BDA                     l1586:
  8244  003BDA  0012               	return		;funcret
  8245  003BDC                     __end_of_fputc:
  8246                           	callstack 0
  8247                           
  8248 ;; *************** function _putch *****************
  8249 ;; Defined at:
  8250 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  c               1    wreg     unsigned char 
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;  c               1    0[COMRAM] unsigned char 
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  1    wreg      void 
  8257 ;; Registers used:
  8258 ;;		wreg
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8264 ;;      Params:         0       0       0       0       0       0       0       0       0
  8265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8267 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8268 ;;Total ram usage:        0 bytes
  8269 ;; Hardware stack levels used: 1
  8270 ;; This function calls:
  8271 ;;		Nothing
  8272 ;; This function is called by:
  8273 ;;		_fputc
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text39
  8278  004B44                     __ptext39:
  8279                           	callstack 0
  8280  004B44                     _putch:
  8281                           	callstack 22
  8282  004B44  0012               	return		;funcret
  8283  004B46                     __end_of_putch:
  8284                           	callstack 0
  8285                           
  8286 ;; *************** function _floorf *****************
  8287 ;; Defined at:
  8288 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  x               4   68[COMRAM] float 
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;  u               4   84[COMRAM] struct .
  8293 ;;  m               4   78[COMRAM] unsigned long 
  8294 ;;  e               2   82[COMRAM] int 
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  4   68[COMRAM] float 
  8297 ;; Registers used:
  8298 ;;		wreg, status,2, status,0
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8304 ;;      Params:         4       0       0       0       0       0       0       0       0
  8305 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8306 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8307 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8308 ;;Total ram usage:       20 bytes
  8309 ;; Hardware stack levels used: 1
  8310 ;; This function calls:
  8311 ;;		Nothing
  8312 ;; This function is called by:
  8313 ;;		_efgtoa
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text40
  8318  002F88                     __ptext40:
  8319                           	callstack 0
  8320  002F88                     _floorf:
  8321                           	callstack 25
  8322  002F88  C0E2  F055         	movff	floorf@F527,floorf@u
  8323  002F8C  C0E3  F056         	movff	floorf@F527+1,floorf@u+1
  8324  002F90  C0E4  F057         	movff	floorf@F527+2,floorf@u+2
  8325  002F94  C0E5  F058         	movff	floorf@F527+3,floorf@u+3
  8326  002F98  C045  F055         	movff	floorf@x,floorf@u
  8327  002F9C  C046  F056         	movff	floorf@x+1,floorf@u+1
  8328  002FA0  C047  F057         	movff	floorf@x+2,floorf@u+2
  8329  002FA4  C048  F058         	movff	floorf@x+3,floorf@u+3
  8330  002FA8  0E81               	movlw	129
  8331  002FAA  6E49               	movwf	??_floorf^0,c
  8332  002FAC  0EFF               	movlw	255
  8333  002FAE  6E4A               	movwf	(??_floorf+1)^0,c
  8334  002FB0  C055  F04B         	movff	floorf@u,??_floorf+2
  8335  002FB4  C056  F04C         	movff	floorf@u+1,??_floorf+3
  8336  002FB8  C057  F04D         	movff	floorf@u+2,??_floorf+4
  8337  002FBC  C058  F04E         	movff	floorf@u+3,??_floorf+5
  8338  002FC0  0E18               	movlw	24
  8339  002FC2  EFE8  F017         	goto	u4460
  8340  002FC6                     u4465:
  8341  002FC6  90D8               	bcf	status,0,c
  8342  002FC8  324E               	rrcf	(??_floorf+5)^0,f,c
  8343  002FCA  324D               	rrcf	(??_floorf+4)^0,f,c
  8344  002FCC  324C               	rrcf	(??_floorf+3)^0,f,c
  8345  002FCE  324B               	rrcf	(??_floorf+2)^0,f,c
  8346  002FD0                     u4460:
  8347  002FD0  2EE8               	decfsz	wreg,f,c
  8348  002FD2  EFE3  F017         	goto	u4465
  8349  002FD6  504B               	movf	(??_floorf+2)^0,w,c
  8350  002FD8  2449               	addwf	??_floorf^0,w,c
  8351  002FDA  6E53               	movwf	floorf@e^0,c
  8352  002FDC  0E00               	movlw	0
  8353  002FDE  204A               	addwfc	(??_floorf+1)^0,w,c
  8354  002FE0  6E54               	movwf	(floorf@e+1)^0,c
  8355  002FE2  BE54               	btfsc	(floorf@e+1)^0,7,c
  8356  002FE4  EFFD  F017         	goto	u4471
  8357  002FE8  5054               	movf	(floorf@e+1)^0,w,c
  8358  002FEA  E109               	bnz	u4470
  8359  002FEC  0E17               	movlw	23
  8360  002FEE  5C53               	subwf	floorf@e^0,w,c
  8361  002FF0  A0D8               	btfss	status,0,c
  8362  002FF2  EFFD  F017         	goto	u4471
  8363  002FF6  EFFF  F017         	goto	u4470
  8364  002FFA                     u4471:
  8365  002FFA  EF09  F018         	goto	l4540
  8366  002FFE                     u4470:
  8367  002FFE                     l4538:
  8368  002FFE  C045  F045         	movff	floorf@x,?_floorf
  8369  003002  C046  F046         	movff	floorf@x+1,?_floorf+1
  8370  003006  C047  F047         	movff	floorf@x+2,?_floorf+2
  8371  00300A  C048  F048         	movff	floorf@x+3,?_floorf+3
  8372  00300E  EFCC  F018         	goto	l1541
  8373  003012                     l4540:
  8374  003012  BE54               	btfsc	(floorf@e+1)^0,7,c
  8375  003014  EF0E  F018         	goto	u4481
  8376  003018  EF10  F018         	goto	u4480
  8377  00301C                     u4481:
  8378  00301C  EF80  F018         	goto	l4550
  8379  003020                     u4480:
  8380  003020  C053  F049         	movff	floorf@e,??_floorf
  8381  003024  0EFF               	movlw	255
  8382  003026  6E4A               	movwf	(??_floorf+1)^0,c
  8383  003028  0EFF               	movlw	255
  8384  00302A  6E4B               	movwf	(??_floorf+2)^0,c
  8385  00302C  0E7F               	movlw	127
  8386  00302E  6E4C               	movwf	(??_floorf+3)^0,c
  8387  003030  0E00               	movlw	0
  8388  003032  6E4D               	movwf	(??_floorf+4)^0,c
  8389  003034                     u4495:
  8390  003034  6649               	tstfsz	??_floorf^0,c
  8391  003036  EF1F  F018         	goto	u4496
  8392  00303A  EF27  F018         	goto	u4497
  8393  00303E                     u4496:
  8394  00303E  344D               	rlcf	(??_floorf+4)^0,w,c
  8395  003040  324D               	rrcf	(??_floorf+4)^0,f,c
  8396  003042  324C               	rrcf	(??_floorf+3)^0,f,c
  8397  003044  324B               	rrcf	(??_floorf+2)^0,f,c
  8398  003046  324A               	rrcf	(??_floorf+1)^0,f,c
  8399  003048  2E49               	decfsz	??_floorf^0,f,c
  8400  00304A  EF1A  F018         	goto	u4495
  8401  00304E                     u4497:
  8402  00304E  C04A  F04F         	movff	??_floorf+1,floorf@m
  8403  003052  C04B  F050         	movff	??_floorf+2,floorf@m+1
  8404  003056  C04C  F051         	movff	??_floorf+3,floorf@m+2
  8405  00305A  C04D  F052         	movff	??_floorf+4,floorf@m+3
  8406  00305E  504F               	movf	floorf@m^0,w,c
  8407  003060  1455               	andwf	floorf@u^0,w,c
  8408  003062  6E49               	movwf	??_floorf^0,c
  8409  003064  5050               	movf	(floorf@m+1)^0,w,c
  8410  003066  1456               	andwf	(floorf@u+1)^0,w,c
  8411  003068  6E4A               	movwf	(??_floorf+1)^0,c
  8412  00306A  5051               	movf	(floorf@m+2)^0,w,c
  8413  00306C  1457               	andwf	(floorf@u+2)^0,w,c
  8414  00306E  6E4B               	movwf	(??_floorf+2)^0,c
  8415  003070  5052               	movf	(floorf@m+3)^0,w,c
  8416  003072  1458               	andwf	(floorf@u+3)^0,w,c
  8417  003074  6E4C               	movwf	(??_floorf+3)^0,c
  8418  003076  5049               	movf	??_floorf^0,w,c
  8419  003078  104A               	iorwf	(??_floorf+1)^0,w,c
  8420  00307A  104B               	iorwf	(??_floorf+2)^0,w,c
  8421  00307C  104C               	iorwf	(??_floorf+3)^0,w,c
  8422  00307E  A4D8               	btfss	status,2,c
  8423  003080  EF44  F018         	goto	u4501
  8424  003084  EF46  F018         	goto	u4500
  8425  003088                     u4501:
  8426  003088  EF48  F018         	goto	l4546
  8427  00308C                     u4500:
  8428  00308C  EFFF  F017         	goto	l4538
  8429  003090                     l4546:
  8430  003090  C055  F049         	movff	floorf@u,??_floorf
  8431  003094  C056  F04A         	movff	floorf@u+1,??_floorf+1
  8432  003098  C057  F04B         	movff	floorf@u+2,??_floorf+2
  8433  00309C  C058  F04C         	movff	floorf@u+3,??_floorf+3
  8434  0030A0  0E20               	movlw	32
  8435  0030A2  EF58  F018         	goto	u4510
  8436  0030A6                     u4515:
  8437  0030A6  90D8               	bcf	status,0,c
  8438  0030A8  324C               	rrcf	(??_floorf+3)^0,f,c
  8439  0030AA  324B               	rrcf	(??_floorf+2)^0,f,c
  8440  0030AC  324A               	rrcf	(??_floorf+1)^0,f,c
  8441  0030AE  3249               	rrcf	??_floorf^0,f,c
  8442  0030B0                     u4510:
  8443  0030B0  2EE8               	decfsz	wreg,f,c
  8444  0030B2  EF53  F018         	goto	u4515
  8445  0030B6  5049               	movf	??_floorf^0,w,c
  8446  0030B8  104A               	iorwf	(??_floorf+1)^0,w,c
  8447  0030BA  104B               	iorwf	(??_floorf+2)^0,w,c
  8448  0030BC  104C               	iorwf	(??_floorf+3)^0,w,c
  8449  0030BE  B4D8               	btfsc	status,2,c
  8450  0030C0  EF64  F018         	goto	u4521
  8451  0030C4  EF66  F018         	goto	u4520
  8452  0030C8                     u4521:
  8453  0030C8  EF6E  F018         	goto	l1544
  8454  0030CC                     u4520:
  8455  0030CC  504F               	movf	floorf@m^0,w,c
  8456  0030CE  2655               	addwf	floorf@u^0,f,c
  8457  0030D0  5050               	movf	(floorf@m+1)^0,w,c
  8458  0030D2  2256               	addwfc	(floorf@u+1)^0,f,c
  8459  0030D4  5051               	movf	(floorf@m+2)^0,w,c
  8460  0030D6  2257               	addwfc	(floorf@u+2)^0,f,c
  8461  0030D8  5052               	movf	(floorf@m+3)^0,w,c
  8462  0030DA  2258               	addwfc	(floorf@u+3)^0,f,c
  8463  0030DC                     l1544:
  8464  0030DC  1C4F               	comf	floorf@m^0,w,c
  8465  0030DE  6E49               	movwf	??_floorf^0,c
  8466  0030E0  1C50               	comf	(floorf@m+1)^0,w,c
  8467  0030E2  6E4A               	movwf	(??_floorf+1)^0,c
  8468  0030E4  1C51               	comf	(floorf@m+2)^0,w,c
  8469  0030E6  6E4B               	movwf	(??_floorf+2)^0,c
  8470  0030E8  1C52               	comf	(floorf@m+3)^0,w,c
  8471  0030EA  6E4C               	movwf	(??_floorf+3)^0,c
  8472  0030EC  5049               	movf	??_floorf^0,w,c
  8473  0030EE  1655               	andwf	floorf@u^0,f,c
  8474  0030F0  504A               	movf	(??_floorf+1)^0,w,c
  8475  0030F2  1656               	andwf	(floorf@u+1)^0,f,c
  8476  0030F4  504B               	movf	(??_floorf+2)^0,w,c
  8477  0030F6  1657               	andwf	(floorf@u+2)^0,f,c
  8478  0030F8  504C               	movf	(??_floorf+3)^0,w,c
  8479  0030FA  1658               	andwf	(floorf@u+3)^0,f,c
  8480  0030FC  EFC4  F018         	goto	l4558
  8481  003100                     l4550:
  8482  003100  C055  F049         	movff	floorf@u,??_floorf
  8483  003104  C056  F04A         	movff	floorf@u+1,??_floorf+1
  8484  003108  C057  F04B         	movff	floorf@u+2,??_floorf+2
  8485  00310C  C058  F04C         	movff	floorf@u+3,??_floorf+3
  8486  003110  0E20               	movlw	32
  8487  003112  EF90  F018         	goto	u4530
  8488  003116                     u4535:
  8489  003116  90D8               	bcf	status,0,c
  8490  003118  324C               	rrcf	(??_floorf+3)^0,f,c
  8491  00311A  324B               	rrcf	(??_floorf+2)^0,f,c
  8492  00311C  324A               	rrcf	(??_floorf+1)^0,f,c
  8493  00311E  3249               	rrcf	??_floorf^0,f,c
  8494  003120                     u4530:
  8495  003120  2EE8               	decfsz	wreg,f,c
  8496  003122  EF8B  F018         	goto	u4535
  8497  003126  5049               	movf	??_floorf^0,w,c
  8498  003128  104A               	iorwf	(??_floorf+1)^0,w,c
  8499  00312A  104B               	iorwf	(??_floorf+2)^0,w,c
  8500  00312C  104C               	iorwf	(??_floorf+3)^0,w,c
  8501  00312E  A4D8               	btfss	status,2,c
  8502  003130  EF9C  F018         	goto	u4541
  8503  003134  EF9E  F018         	goto	u4540
  8504  003138                     u4541:
  8505  003138  EFA8  F018         	goto	l4554
  8506  00313C                     u4540:
  8507  00313C  0E00               	movlw	0
  8508  00313E  6E55               	movwf	floorf@u^0,c
  8509  003140  0E00               	movlw	0
  8510  003142  6E56               	movwf	(floorf@u+1)^0,c
  8511  003144  0E00               	movlw	0
  8512  003146  6E57               	movwf	(floorf@u+2)^0,c
  8513  003148  0E00               	movlw	0
  8514  00314A  6E58               	movwf	(floorf@u+3)^0,c
  8515  00314C  EFC4  F018         	goto	l4558
  8516  003150                     l4554:
  8517  003150  90D8               	bcf	status,0,c
  8518  003152  3455               	rlcf	floorf@u^0,w,c
  8519  003154  6E49               	movwf	??_floorf^0,c
  8520  003156  3456               	rlcf	(floorf@u+1)^0,w,c
  8521  003158  6E4A               	movwf	(??_floorf+1)^0,c
  8522  00315A  3457               	rlcf	(floorf@u+2)^0,w,c
  8523  00315C  6E4B               	movwf	(??_floorf+2)^0,c
  8524  00315E  3458               	rlcf	(floorf@u+3)^0,w,c
  8525  003160  6E4C               	movwf	(??_floorf+3)^0,c
  8526  003162  5049               	movf	??_floorf^0,w,c
  8527  003164  104A               	iorwf	(??_floorf+1)^0,w,c
  8528  003166  104B               	iorwf	(??_floorf+2)^0,w,c
  8529  003168  104C               	iorwf	(??_floorf+3)^0,w,c
  8530  00316A  B4D8               	btfsc	status,2,c
  8531  00316C  EFBA  F018         	goto	u4551
  8532  003170  EFBC  F018         	goto	u4550
  8533  003174                     u4551:
  8534  003174  EFC4  F018         	goto	l4558
  8535  003178                     u4550:
  8536  003178  0E00               	movlw	0
  8537  00317A  6E55               	movwf	floorf@u^0,c
  8538  00317C  0E00               	movlw	0
  8539  00317E  6E56               	movwf	(floorf@u+1)^0,c
  8540  003180  0E80               	movlw	128
  8541  003182  6E57               	movwf	(floorf@u+2)^0,c
  8542  003184  0EBF               	movlw	191
  8543  003186  6E58               	movwf	(floorf@u+3)^0,c
  8544  003188                     l4558:
  8545  003188  C055  F045         	movff	floorf@u,?_floorf
  8546  00318C  C056  F046         	movff	floorf@u+1,?_floorf+1
  8547  003190  C057  F047         	movff	floorf@u+2,?_floorf+2
  8548  003194  C058  F048         	movff	floorf@u+3,?_floorf+3
  8549  003198                     l1541:
  8550  003198  0012               	return		;funcret
  8551  00319A                     __end_of_floorf:
  8552                           	callstack 0
  8553                           
  8554 ;; *************** function ___fpclassifyf *****************
  8555 ;; Defined at:
  8556 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;  x               4    0[COMRAM] float 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;  u               4   10[COMRAM] struct .
  8561 ;;  e               2    8[COMRAM] int 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  2    0[COMRAM] int 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8571 ;;      Params:         4       0       0       0       0       0       0       0       0
  8572 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8573 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8574 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8575 ;;Total ram usage:       14 bytes
  8576 ;; Hardware stack levels used: 1
  8577 ;; This function calls:
  8578 ;;		Nothing
  8579 ;; This function is called by:
  8580 ;;		_efgtoa
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text41
  8585  00393E                     __ptext41:
  8586                           	callstack 0
  8587  00393E                     ___fpclassifyf:
  8588                           	callstack 25
  8589  00393E  C0E6  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8590  003942  C0E7  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8591  003946  C0E8  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8592  00394A  C0E9  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8593  00394E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8594  003952  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8595  003956  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8596  00395A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8597  00395E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8598  003962  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8599  003966  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8600  00396A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8601  00396E  0E18               	movlw	24
  8602  003970  EFBF  F01C         	goto	u4340
  8603  003974                     u4345:
  8604  003974  90D8               	bcf	status,0,c
  8605  003976  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8606  003978  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8607  00397A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8608  00397C  3205               	rrcf	??___fpclassifyf^0,f,c
  8609  00397E                     u4340:
  8610  00397E  2EE8               	decfsz	wreg,f,c
  8611  003980  EFBA  F01C         	goto	u4345
  8612  003984  5005               	movf	??___fpclassifyf^0,w,c
  8613  003986  6E09               	movwf	___fpclassifyf@e^0,c
  8614  003988  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8615  00398A  5009               	movf	___fpclassifyf@e^0,w,c
  8616  00398C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8617  00398E  A4D8               	btfss	status,2,c
  8618  003990  EFCC  F01C         	goto	u4351
  8619  003994  EFCE  F01C         	goto	u4350
  8620  003998                     u4351:
  8621  003998  EFEE  F01C         	goto	l4510
  8622  00399C                     u4350:
  8623  00399C  90D8               	bcf	status,0,c
  8624  00399E  340B               	rlcf	___fpclassifyf@u^0,w,c
  8625  0039A0  6E05               	movwf	??___fpclassifyf^0,c
  8626  0039A2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8627  0039A4  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8628  0039A6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8629  0039A8  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8630  0039AA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8631  0039AC  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8632  0039AE  5005               	movf	??___fpclassifyf^0,w,c
  8633  0039B0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8634  0039B2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8635  0039B4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8636  0039B6  A4D8               	btfss	status,2,c
  8637  0039B8  EFE0  F01C         	goto	u4361
  8638  0039BC  EFE2  F01C         	goto	u4360
  8639  0039C0                     u4361:
  8640  0039C0  EFE8  F01C         	goto	l4506
  8641  0039C4                     u4360:
  8642  0039C4  0E00               	movlw	0
  8643  0039C6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8644  0039C8  0E02               	movlw	2
  8645  0039CA  6E01               	movwf	?___fpclassifyf^0,c
  8646  0039CC  EF1D  F01D         	goto	l1503
  8647  0039D0                     l4506:
  8648  0039D0  0E00               	movlw	0
  8649  0039D2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8650  0039D4  0E03               	movlw	3
  8651  0039D6  6E01               	movwf	?___fpclassifyf^0,c
  8652  0039D8  EF1D  F01D         	goto	l1503
  8653  0039DC                     l4510:
  8654  0039DC  2809               	incf	___fpclassifyf@e^0,w,c
  8655  0039DE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8656  0039E0  A4D8               	btfss	status,2,c
  8657  0039E2  EFF5  F01C         	goto	u4371
  8658  0039E6  EFF7  F01C         	goto	u4370
  8659  0039EA                     u4371:
  8660  0039EA  EF19  F01D         	goto	l4516
  8661  0039EE                     u4370:
  8662  0039EE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8663  0039F2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8664  0039F6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8665  0039FA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8666  0039FE  0E09               	movlw	9
  8667  003A00                     u4385:
  8668  003A00  90D8               	bcf	status,0,c
  8669  003A02  3605               	rlcf	??___fpclassifyf^0,f,c
  8670  003A04  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8671  003A06  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8672  003A08  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8673  003A0A  2EE8               	decfsz	wreg,f,c
  8674  003A0C  EF00  F01D         	goto	u4385
  8675  003A10  5005               	movf	??___fpclassifyf^0,w,c
  8676  003A12  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8677  003A14  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8678  003A16  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8679  003A18  B4D8               	btfsc	status,2,c
  8680  003A1A  EF11  F01D         	goto	u4391
  8681  003A1E  EF14  F01D         	goto	u4390
  8682  003A22                     u4391:
  8683  003A22  0E01               	movlw	1
  8684  003A24  EF15  F01D         	goto	u4400
  8685  003A28                     u4390:
  8686  003A28  0E00               	movlw	0
  8687  003A2A                     u4400:
  8688  003A2A  6E01               	movwf	?___fpclassifyf^0,c
  8689  003A2C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8690  003A2E  EF1D  F01D         	goto	l1503
  8691  003A32                     l4516:
  8692  003A32  0E00               	movlw	0
  8693  003A34  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8694  003A36  0E04               	movlw	4
  8695  003A38  6E01               	movwf	?___fpclassifyf^0,c
  8696  003A3A                     l1503:
  8697  003A3A  0012               	return		;funcret
  8698  003A3C                     __end_of___fpclassifyf:
  8699                           	callstack 0
  8700                           
  8701 ;; *************** function ___fltol *****************
  8702 ;; Defined at:
  8703 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  f1              4   84[COMRAM] int 
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;  exp1            1   93[COMRAM] unsigned char 
  8708 ;;  sign1           1   92[COMRAM] unsigned char 
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  4   84[COMRAM] long 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2, status,0
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8718 ;;      Params:         4       0       0       0       0       0       0       0       0
  8719 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8720 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8721 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8722 ;;Total ram usage:       10 bytes
  8723 ;; Hardware stack levels used: 1
  8724 ;; This function calls:
  8725 ;;		Nothing
  8726 ;; This function is called by:
  8727 ;;		_ReadADC
  8728 ;;		_USART_Init
  8729 ;;		_efgtoa
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text42
  8734  003636                     __ptext42:
  8735                           	callstack 0
  8736  003636                     ___fltol:
  8737                           	callstack 29
  8738  003636  3457               	rlcf	(___fltol@f1+2)^0,w,c
  8739  003638  3458               	rlcf	(___fltol@f1+3)^0,w,c
  8740  00363A  6E5E               	movwf	___fltol@exp1^0,c
  8741  00363C  505E               	movf	___fltol@exp1^0,w,c
  8742  00363E  A4D8               	btfss	status,2,c
  8743  003640  EF24  F01B         	goto	u4231
  8744  003644  EF26  F01B         	goto	u4230
  8745  003648                     u4231:
  8746  003648  EF30  F01B         	goto	l4438
  8747  00364C                     u4230:
  8748  00364C                     l4434:
  8749  00364C  0E00               	movlw	0
  8750  00364E  6E55               	movwf	?___fltol^0,c
  8751  003650  0E00               	movlw	0
  8752  003652  6E56               	movwf	(?___fltol+1)^0,c
  8753  003654  0E00               	movlw	0
  8754  003656  6E57               	movwf	(?___fltol+2)^0,c
  8755  003658  0E00               	movlw	0
  8756  00365A  6E58               	movwf	(?___fltol+3)^0,c
  8757  00365C  EF9D  F01B         	goto	l893
  8758  003660                     l4438:
  8759  003660  C055  F059         	movff	___fltol@f1,??___fltol
  8760  003664  C056  F05A         	movff	___fltol@f1+1,??___fltol+1
  8761  003668  C057  F05B         	movff	___fltol@f1+2,??___fltol+2
  8762  00366C  C058  F05C         	movff	___fltol@f1+3,??___fltol+3
  8763  003670  0E20               	movlw	32
  8764  003672  EF40  F01B         	goto	u4240
  8765  003676                     u4245:
  8766  003676  90D8               	bcf	status,0,c
  8767  003678  325C               	rrcf	(??___fltol+3)^0,f,c
  8768  00367A  325B               	rrcf	(??___fltol+2)^0,f,c
  8769  00367C  325A               	rrcf	(??___fltol+1)^0,f,c
  8770  00367E  3259               	rrcf	??___fltol^0,f,c
  8771  003680                     u4240:
  8772  003680  2EE8               	decfsz	wreg,f,c
  8773  003682  EF3B  F01B         	goto	u4245
  8774  003686  5059               	movf	??___fltol^0,w,c
  8775  003688  6E5D               	movwf	___fltol@sign1^0,c
  8776  00368A  8E57               	bsf	(___fltol@f1+2)^0,7,c
  8777  00368C  0EFF               	movlw	255
  8778  00368E  1655               	andwf	___fltol@f1^0,f,c
  8779  003690  0EFF               	movlw	255
  8780  003692  1656               	andwf	(___fltol@f1+1)^0,f,c
  8781  003694  0EFF               	movlw	255
  8782  003696  1657               	andwf	(___fltol@f1+2)^0,f,c
  8783  003698  0E00               	movlw	0
  8784  00369A  1658               	andwf	(___fltol@f1+3)^0,f,c
  8785  00369C  0E96               	movlw	150
  8786  00369E  5E5E               	subwf	___fltol@exp1^0,f,c
  8787  0036A0  BE5E               	btfsc	___fltol@exp1^0,7,c
  8788  0036A2  EF57  F01B         	goto	u4250
  8789  0036A6  EF55  F01B         	goto	u4251
  8790  0036AA                     u4251:
  8791  0036AA  EF6D  F01B         	goto	l4458
  8792  0036AE                     u4250:
  8793  0036AE  505E               	movf	___fltol@exp1^0,w,c
  8794  0036B0  0A80               	xorlw	128
  8795  0036B2  0F97               	addlw	151
  8796  0036B4  B0D8               	btfsc	status,0,c
  8797  0036B6  EF5F  F01B         	goto	u4261
  8798  0036BA  EF61  F01B         	goto	u4260
  8799  0036BE                     u4261:
  8800  0036BE  EF63  F01B         	goto	l4454
  8801  0036C2                     u4260:
  8802  0036C2  EF26  F01B         	goto	l4434
  8803  0036C6                     l4454:
  8804  0036C6  90D8               	bcf	status,0,c
  8805  0036C8  3258               	rrcf	(___fltol@f1+3)^0,f,c
  8806  0036CA  3257               	rrcf	(___fltol@f1+2)^0,f,c
  8807  0036CC  3256               	rrcf	(___fltol@f1+1)^0,f,c
  8808  0036CE  3255               	rrcf	___fltol@f1^0,f,c
  8809  0036D0  3E5E               	incfsz	___fltol@exp1^0,f,c
  8810  0036D2  EF63  F01B         	goto	l4454
  8811  0036D6  EF85  F01B         	goto	l4468
  8812  0036DA                     l4458:
  8813  0036DA  0E1F               	movlw	31
  8814  0036DC  645E               	cpfsgt	___fltol@exp1^0,c
  8815  0036DE  EF73  F01B         	goto	u4271
  8816  0036E2  EF75  F01B         	goto	u4270
  8817  0036E6                     u4271:
  8818  0036E6  EF7D  F01B         	goto	l4466
  8819  0036EA                     u4270:
  8820  0036EA  EF26  F01B         	goto	l4434
  8821  0036EE                     l4464:
  8822  0036EE  90D8               	bcf	status,0,c
  8823  0036F0  3655               	rlcf	___fltol@f1^0,f,c
  8824  0036F2  3656               	rlcf	(___fltol@f1+1)^0,f,c
  8825  0036F4  3657               	rlcf	(___fltol@f1+2)^0,f,c
  8826  0036F6  3658               	rlcf	(___fltol@f1+3)^0,f,c
  8827  0036F8  065E               	decf	___fltol@exp1^0,f,c
  8828  0036FA                     l4466:
  8829  0036FA  505E               	movf	___fltol@exp1^0,w,c
  8830  0036FC  A4D8               	btfss	status,2,c
  8831  0036FE  EF83  F01B         	goto	u4281
  8832  003702  EF85  F01B         	goto	u4280
  8833  003706                     u4281:
  8834  003706  EF77  F01B         	goto	l4464
  8835  00370A                     u4280:
  8836  00370A                     l4468:
  8837  00370A  505D               	movf	___fltol@sign1^0,w,c
  8838  00370C  B4D8               	btfsc	status,2,c
  8839  00370E  EF8B  F01B         	goto	u4291
  8840  003712  EF8D  F01B         	goto	u4290
  8841  003716                     u4291:
  8842  003716  EF95  F01B         	goto	l4472
  8843  00371A                     u4290:
  8844  00371A  1E58               	comf	(___fltol@f1+3)^0,f,c
  8845  00371C  1E57               	comf	(___fltol@f1+2)^0,f,c
  8846  00371E  1E56               	comf	(___fltol@f1+1)^0,f,c
  8847  003720  6C55               	negf	___fltol@f1^0,c
  8848  003722  0E00               	movlw	0
  8849  003724  2256               	addwfc	(___fltol@f1+1)^0,f,c
  8850  003726  2257               	addwfc	(___fltol@f1+2)^0,f,c
  8851  003728  2258               	addwfc	(___fltol@f1+3)^0,f,c
  8852  00372A                     l4472:
  8853  00372A  C055  F055         	movff	___fltol@f1,?___fltol
  8854  00372E  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  8855  003732  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  8856  003736  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  8857  00373A                     l893:
  8858  00373A  0012               	return		;funcret
  8859  00373C                     __end_of___fltol:
  8860                           	callstack 0
  8861                           
  8862 ;; *************** function ___flsub *****************
  8863 ;; Defined at:
  8864 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;  b               4   84[COMRAM] long 
  8867 ;;  a               4   88[COMRAM] long 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;		None
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  4   84[COMRAM] long 
  8872 ;; Registers used:
  8873 ;;		wreg, status,2, status,0, cstack
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8879 ;;      Params:         8       0       0       0       0       0       0       0       0
  8880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8882 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8883 ;;Total ram usage:        8 bytes
  8884 ;; Hardware stack levels used: 1
  8885 ;; Hardware stack levels required when called: 1
  8886 ;; This function calls:
  8887 ;;		___fladd
  8888 ;; This function is called by:
  8889 ;;		_efgtoa
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           	psect	text43
  8894  0046D6                     __ptext43:
  8895                           	callstack 0
  8896  0046D6                     ___flsub:
  8897                           	callstack 24
  8898  0046D6  0E00               	movlw	0
  8899  0046D8  1A59               	xorwf	___flsub@a^0,f,c
  8900  0046DA  0E00               	movlw	0
  8901  0046DC  1A5A               	xorwf	(___flsub@a+1)^0,f,c
  8902  0046DE  0E00               	movlw	0
  8903  0046E0  1A5B               	xorwf	(___flsub@a+2)^0,f,c
  8904  0046E2  0E80               	movlw	128
  8905  0046E4  1A5C               	xorwf	(___flsub@a+3)^0,f,c
  8906  0046E6  C055  F045         	movff	___flsub@b,___fladd@b
  8907  0046EA  C056  F046         	movff	___flsub@b+1,___fladd@b+1
  8908  0046EE  C057  F047         	movff	___flsub@b+2,___fladd@b+2
  8909  0046F2  C058  F048         	movff	___flsub@b+3,___fladd@b+3
  8910  0046F6  C059  F049         	movff	___flsub@a,___fladd@a
  8911  0046FA  C05A  F04A         	movff	___flsub@a+1,___fladd@a+1
  8912  0046FE  C05B  F04B         	movff	___flsub@a+2,___fladd@a+2
  8913  004702  C05C  F04C         	movff	___flsub@a+3,___fladd@a+3
  8914  004706  EC5E  F00D         	call	___fladd	;wreg free
  8915  00470A  C045  F055         	movff	?___fladd,?___flsub
  8916  00470E  C046  F056         	movff	?___fladd+1,?___flsub+1
  8917  004712  C047  F057         	movff	?___fladd+2,?___flsub+2
  8918  004716  C048  F058         	movff	?___fladd+3,?___flsub+3
  8919  00471A  0012               	return		;funcret
  8920  00471C                     __end_of___flsub:
  8921                           	callstack 0
  8922                           
  8923 ;; *************** function ___fladd *****************
  8924 ;; Defined at:
  8925 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  b               4   68[COMRAM] long 
  8928 ;;  a               4   72[COMRAM] long 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;  grs             1   83[COMRAM] unsigned char 
  8931 ;;  bexp            1   82[COMRAM] unsigned char 
  8932 ;;  aexp            1   81[COMRAM] unsigned char 
  8933 ;;  signs           1   80[COMRAM] unsigned char 
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  4   68[COMRAM] unsigned char 
  8936 ;; Registers used:
  8937 ;;		wreg, status,2, status,0
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8943 ;;      Params:         8       0       0       0       0       0       0       0       0
  8944 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8945 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8946 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8947 ;;Total ram usage:       16 bytes
  8948 ;; Hardware stack levels used: 1
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_ReadADC
  8953 ;;		_USART_Init
  8954 ;;		___flsub
  8955 ;;		_efgtoa
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text44
  8960  001ABC                     __ptext44:
  8961                           	callstack 0
  8962  001ABC                     ___fladd:
  8963                           	callstack 29
  8964  001ABC  5048               	movf	(___fladd@b+3)^0,w,c
  8965  001ABE  0B80               	andlw	128
  8966  001AC0  6E51               	movwf	___fladd@signs^0,c
  8967  001AC2  5048               	movf	(___fladd@b+3)^0,w,c
  8968  001AC4  2448               	addwf	(___fladd@b+3)^0,w,c
  8969  001AC6  6E53               	movwf	___fladd@bexp^0,c
  8970  001AC8  AE47               	btfss	(___fladd@b+2)^0,7,c
  8971  001ACA  EF69  F00D         	goto	u3151
  8972  001ACE  EF6B  F00D         	goto	u3150
  8973  001AD2                     u3151:
  8974  001AD2  EF6C  F00D         	goto	l3804
  8975  001AD6                     u3150:
  8976  001AD6  8053               	bsf	___fladd@bexp^0,0,c
  8977  001AD8                     l3804:
  8978  001AD8  5053               	movf	___fladd@bexp^0,w,c
  8979  001ADA  B4D8               	btfsc	status,2,c
  8980  001ADC  EF72  F00D         	goto	u3161
  8981  001AE0  EF74  F00D         	goto	u3160
  8982  001AE4                     u3161:
  8983  001AE4  EF89  F00D         	goto	l3814
  8984  001AE8                     u3160:
  8985  001AE8  2853               	incf	___fladd@bexp^0,w,c
  8986  001AEA  A4D8               	btfss	status,2,c
  8987  001AEC  EF7A  F00D         	goto	u3171
  8988  001AF0  EF7C  F00D         	goto	u3170
  8989  001AF4                     u3171:
  8990  001AF4  EF84  F00D         	goto	l3810
  8991  001AF8                     u3170:
  8992  001AF8  0E00               	movlw	0
  8993  001AFA  6E45               	movwf	___fladd@b^0,c
  8994  001AFC  0E00               	movlw	0
  8995  001AFE  6E46               	movwf	(___fladd@b+1)^0,c
  8996  001B00  0E00               	movlw	0
  8997  001B02  6E47               	movwf	(___fladd@b+2)^0,c
  8998  001B04  0E00               	movlw	0
  8999  001B06  6E48               	movwf	(___fladd@b+3)^0,c
  9000  001B08                     l3810:
  9001  001B08  8E47               	bsf	(___fladd@b+2)^0,7,c
  9002  001B0A  0E00               	movlw	0
  9003  001B0C  6E48               	movwf	(___fladd@b+3)^0,c
  9004  001B0E  EF91  F00D         	goto	l3816
  9005  001B12                     l3814:
  9006  001B12  0E00               	movlw	0
  9007  001B14  6E45               	movwf	___fladd@b^0,c
  9008  001B16  0E00               	movlw	0
  9009  001B18  6E46               	movwf	(___fladd@b+1)^0,c
  9010  001B1A  0E00               	movlw	0
  9011  001B1C  6E47               	movwf	(___fladd@b+2)^0,c
  9012  001B1E  0E00               	movlw	0
  9013  001B20  6E48               	movwf	(___fladd@b+3)^0,c
  9014  001B22                     l3816:
  9015  001B22  504C               	movf	(___fladd@a+3)^0,w,c
  9016  001B24  0B80               	andlw	128
  9017  001B26  6E52               	movwf	___fladd@aexp^0,c
  9018  001B28  5051               	movf	___fladd@signs^0,w,c
  9019  001B2A  1852               	xorwf	___fladd@aexp^0,w,c
  9020  001B2C  B4D8               	btfsc	status,2,c
  9021  001B2E  EF9B  F00D         	goto	u3181
  9022  001B32  EF9D  F00D         	goto	u3180
  9023  001B36                     u3181:
  9024  001B36  EF9E  F00D         	goto	l3822
  9025  001B3A                     u3180:
  9026  001B3A  8C51               	bsf	___fladd@signs^0,6,c
  9027  001B3C                     l3822:
  9028  001B3C  504C               	movf	(___fladd@a+3)^0,w,c
  9029  001B3E  244C               	addwf	(___fladd@a+3)^0,w,c
  9030  001B40  6E52               	movwf	___fladd@aexp^0,c
  9031  001B42  AE4B               	btfss	(___fladd@a+2)^0,7,c
  9032  001B44  EFA6  F00D         	goto	u3191
  9033  001B48  EFA8  F00D         	goto	u3190
  9034  001B4C                     u3191:
  9035  001B4C  EFA9  F00D         	goto	l3828
  9036  001B50                     u3190:
  9037  001B50  8052               	bsf	___fladd@aexp^0,0,c
  9038  001B52                     l3828:
  9039  001B52  5052               	movf	___fladd@aexp^0,w,c
  9040  001B54  B4D8               	btfsc	status,2,c
  9041  001B56  EFAF  F00D         	goto	u3201
  9042  001B5A  EFB1  F00D         	goto	u3200
  9043  001B5E                     u3201:
  9044  001B5E  EFC6  F00D         	goto	l3838
  9045  001B62                     u3200:
  9046  001B62  2852               	incf	___fladd@aexp^0,w,c
  9047  001B64  A4D8               	btfss	status,2,c
  9048  001B66  EFB7  F00D         	goto	u3211
  9049  001B6A  EFB9  F00D         	goto	u3210
  9050  001B6E                     u3211:
  9051  001B6E  EFC1  F00D         	goto	l3834
  9052  001B72                     u3210:
  9053  001B72  0E00               	movlw	0
  9054  001B74  6E49               	movwf	___fladd@a^0,c
  9055  001B76  0E00               	movlw	0
  9056  001B78  6E4A               	movwf	(___fladd@a+1)^0,c
  9057  001B7A  0E00               	movlw	0
  9058  001B7C  6E4B               	movwf	(___fladd@a+2)^0,c
  9059  001B7E  0E00               	movlw	0
  9060  001B80  6E4C               	movwf	(___fladd@a+3)^0,c
  9061  001B82                     l3834:
  9062  001B82  8E4B               	bsf	(___fladd@a+2)^0,7,c
  9063  001B84  0E00               	movlw	0
  9064  001B86  6E4C               	movwf	(___fladd@a+3)^0,c
  9065  001B88  EFCE  F00D         	goto	l3840
  9066  001B8C                     l3838:
  9067  001B8C  0E00               	movlw	0
  9068  001B8E  6E49               	movwf	___fladd@a^0,c
  9069  001B90  0E00               	movlw	0
  9070  001B92  6E4A               	movwf	(___fladd@a+1)^0,c
  9071  001B94  0E00               	movlw	0
  9072  001B96  6E4B               	movwf	(___fladd@a+2)^0,c
  9073  001B98  0E00               	movlw	0
  9074  001B9A  6E4C               	movwf	(___fladd@a+3)^0,c
  9075  001B9C                     l3840:
  9076  001B9C  5053               	movf	___fladd@bexp^0,w,c
  9077  001B9E  5C52               	subwf	___fladd@aexp^0,w,c
  9078  001BA0  B0D8               	btfsc	status,0,c
  9079  001BA2  EFD5  F00D         	goto	u3221
  9080  001BA6  EFD7  F00D         	goto	u3220
  9081  001BAA                     u3221:
  9082  001BAA  EFFE  F00D         	goto	l3876
  9083  001BAE                     u3220:
  9084  001BAE  AC51               	btfss	___fladd@signs^0,6,c
  9085  001BB0  EFDC  F00D         	goto	u3231
  9086  001BB4  EFDE  F00D         	goto	u3230
  9087  001BB8                     u3231:
  9088  001BB8  EFE0  F00D         	goto	l3846
  9089  001BBC                     u3230:
  9090  001BBC  0E80               	movlw	128
  9091  001BBE  1A51               	xorwf	___fladd@signs^0,f,c
  9092  001BC0                     l3846:
  9093  001BC0  C053  F054         	movff	___fladd@bexp,___fladd@grs
  9094  001BC4  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  9095  001BC8  C054  F052         	movff	___fladd@grs,___fladd@aexp
  9096  001BCC  C045  F054         	movff	___fladd@b,___fladd@grs
  9097  001BD0  C049  F045         	movff	___fladd@a,___fladd@b
  9098  001BD4  C054  F049         	movff	___fladd@grs,___fladd@a
  9099  001BD8  C046  F054         	movff	___fladd@b+1,___fladd@grs
  9100  001BDC  C04A  F046         	movff	___fladd@a+1,___fladd@b+1
  9101  001BE0  C054  F04A         	movff	___fladd@grs,___fladd@a+1
  9102  001BE4  C047  F054         	movff	___fladd@b+2,___fladd@grs
  9103  001BE8  C04B  F047         	movff	___fladd@a+2,___fladd@b+2
  9104  001BEC  C054  F04B         	movff	___fladd@grs,___fladd@a+2
  9105  001BF0  C048  F054         	movff	___fladd@b+3,___fladd@grs
  9106  001BF4  C04C  F048         	movff	___fladd@a+3,___fladd@b+3
  9107  001BF8  C054  F04C         	movff	___fladd@grs,___fladd@a+3
  9108  001BFC                     l3876:
  9109  001BFC  0E00               	movlw	0
  9110  001BFE  6E54               	movwf	___fladd@grs^0,c
  9111  001C00  5053               	movf	___fladd@bexp^0,w,c
  9112  001C02  C052  F04D         	movff	___fladd@aexp,??___fladd
  9113  001C06  6A4E               	clrf	(??___fladd+1)^0,c
  9114  001C08  5E4D               	subwf	??___fladd^0,f,c
  9115  001C0A  0E00               	movlw	0
  9116  001C0C  5A4E               	subwfb	(??___fladd+1)^0,f,c
  9117  001C0E  BE4E               	btfsc	(??___fladd+1)^0,7,c
  9118  001C10  EF13  F00E         	goto	u3241
  9119  001C14  504E               	movf	(??___fladd+1)^0,w,c
  9120  001C16  E109               	bnz	u3240
  9121  001C18  0E1A               	movlw	26
  9122  001C1A  5C4D               	subwf	??___fladd^0,w,c
  9123  001C1C  A0D8               	btfss	status,0,c
  9124  001C1E  EF13  F00E         	goto	u3241
  9125  001C22  EF15  F00E         	goto	u3240
  9126  001C26                     u3241:
  9127  001C26  EF4C  F00E         	goto	l1125
  9128  001C2A                     u3240:
  9129  001C2A  5045               	movf	___fladd@b^0,w,c
  9130  001C2C  1046               	iorwf	(___fladd@b+1)^0,w,c
  9131  001C2E  1047               	iorwf	(___fladd@b+2)^0,w,c
  9132  001C30  1048               	iorwf	(___fladd@b+3)^0,w,c
  9133  001C32  A4D8               	btfss	status,2,c
  9134  001C34  EF1E  F00E         	goto	u3251
  9135  001C38  EF21  F00E         	goto	u3250
  9136  001C3C                     u3251:
  9137  001C3C  0E01               	movlw	1
  9138  001C3E  EF22  F00E         	goto	u3260
  9139  001C42                     u3250:
  9140  001C42  0E00               	movlw	0
  9141  001C44                     u3260:
  9142  001C44  6E54               	movwf	___fladd@grs^0,c
  9143  001C46  0E00               	movlw	0
  9144  001C48  6E45               	movwf	___fladd@b^0,c
  9145  001C4A  0E00               	movlw	0
  9146  001C4C  6E46               	movwf	(___fladd@b+1)^0,c
  9147  001C4E  0E00               	movlw	0
  9148  001C50  6E47               	movwf	(___fladd@b+2)^0,c
  9149  001C52  0E00               	movlw	0
  9150  001C54  6E48               	movwf	(___fladd@b+3)^0,c
  9151  001C56  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  9152  001C5A  EF55  F00E         	goto	l1124
  9153  001C5E                     l1126:
  9154  001C5E  A054               	btfss	___fladd@grs^0,0,c
  9155  001C60  EF34  F00E         	goto	u3271
  9156  001C64  EF36  F00E         	goto	u3270
  9157  001C68                     u3271:
  9158  001C68  EF3C  F00E         	goto	l3888
  9159  001C6C                     u3270:
  9160  001C6C  90D8               	bcf	status,0,c
  9161  001C6E  3054               	rrcf	___fladd@grs^0,w,c
  9162  001C70  0901               	iorlw	1
  9163  001C72  6E54               	movwf	___fladd@grs^0,c
  9164  001C74  EF3E  F00E         	goto	l3890
  9165  001C78                     l3888:
  9166  001C78  90D8               	bcf	status,0,c
  9167  001C7A  3254               	rrcf	___fladd@grs^0,f,c
  9168  001C7C                     l3890:
  9169  001C7C  A045               	btfss	___fladd@b^0,0,c
  9170  001C7E  EF43  F00E         	goto	u3281
  9171  001C82  EF45  F00E         	goto	u3280
  9172  001C86                     u3281:
  9173  001C86  EF46  F00E         	goto	l3894
  9174  001C8A                     u3280:
  9175  001C8A  8E54               	bsf	___fladd@grs^0,7,c
  9176  001C8C                     l3894:
  9177  001C8C  3448               	rlcf	(___fladd@b+3)^0,w,c
  9178  001C8E  3248               	rrcf	(___fladd@b+3)^0,f,c
  9179  001C90  3247               	rrcf	(___fladd@b+2)^0,f,c
  9180  001C92  3246               	rrcf	(___fladd@b+1)^0,f,c
  9181  001C94  3245               	rrcf	___fladd@b^0,f,c
  9182  001C96  2A53               	incf	___fladd@bexp^0,f,c
  9183  001C98                     l1125:
  9184  001C98  5052               	movf	___fladd@aexp^0,w,c
  9185  001C9A  5C53               	subwf	___fladd@bexp^0,w,c
  9186  001C9C  A0D8               	btfss	status,0,c
  9187  001C9E  EF53  F00E         	goto	u3291
  9188  001CA2  EF55  F00E         	goto	u3290
  9189  001CA6                     u3291:
  9190  001CA6  EF2F  F00E         	goto	l1126
  9191  001CAA                     u3290:
  9192  001CAA                     l1124:
  9193  001CAA  BC51               	btfsc	___fladd@signs^0,6,c
  9194  001CAC  EF5A  F00E         	goto	u3301
  9195  001CB0  EF5C  F00E         	goto	u3300
  9196  001CB4                     u3301:
  9197  001CB4  EF9C  F00E         	goto	l3922
  9198  001CB8                     u3300:
  9199  001CB8  5053               	movf	___fladd@bexp^0,w,c
  9200  001CBA  A4D8               	btfss	status,2,c
  9201  001CBC  EF62  F00E         	goto	u3311
  9202  001CC0  EF64  F00E         	goto	u3310
  9203  001CC4                     u3311:
  9204  001CC4  EF6E  F00E         	goto	l3904
  9205  001CC8                     u3310:
  9206  001CC8  0E00               	movlw	0
  9207  001CCA  6E45               	movwf	?___fladd^0,c
  9208  001CCC  0E00               	movlw	0
  9209  001CCE  6E46               	movwf	(?___fladd+1)^0,c
  9210  001CD0  0E00               	movlw	0
  9211  001CD2  6E47               	movwf	(?___fladd+2)^0,c
  9212  001CD4  0E00               	movlw	0
  9213  001CD6  6E48               	movwf	(?___fladd+3)^0,c
  9214  001CD8  EFBD  F00F         	goto	l1133
  9215  001CDC                     l3904:
  9216  001CDC  5049               	movf	___fladd@a^0,w,c
  9217  001CDE  2645               	addwf	___fladd@b^0,f,c
  9218  001CE0  504A               	movf	(___fladd@a+1)^0,w,c
  9219  001CE2  2246               	addwfc	(___fladd@b+1)^0,f,c
  9220  001CE4  504B               	movf	(___fladd@a+2)^0,w,c
  9221  001CE6  2247               	addwfc	(___fladd@b+2)^0,f,c
  9222  001CE8  504C               	movf	(___fladd@a+3)^0,w,c
  9223  001CEA  2248               	addwfc	(___fladd@b+3)^0,f,c
  9224  001CEC  A048               	btfss	(___fladd@b+3)^0,0,c
  9225  001CEE  EF7B  F00E         	goto	u3321
  9226  001CF2  EF7D  F00E         	goto	u3320
  9227  001CF6                     u3321:
  9228  001CF6  EF29  F00F         	goto	l3958
  9229  001CFA                     u3320:
  9230  001CFA  A054               	btfss	___fladd@grs^0,0,c
  9231  001CFC  EF82  F00E         	goto	u3331
  9232  001D00  EF84  F00E         	goto	u3330
  9233  001D04                     u3331:
  9234  001D04  EF8A  F00E         	goto	l3912
  9235  001D08                     u3330:
  9236  001D08  90D8               	bcf	status,0,c
  9237  001D0A  3054               	rrcf	___fladd@grs^0,w,c
  9238  001D0C  0901               	iorlw	1
  9239  001D0E  6E54               	movwf	___fladd@grs^0,c
  9240  001D10  EF8C  F00E         	goto	l3914
  9241  001D14                     l3912:
  9242  001D14  90D8               	bcf	status,0,c
  9243  001D16  3254               	rrcf	___fladd@grs^0,f,c
  9244  001D18                     l3914:
  9245  001D18  A045               	btfss	___fladd@b^0,0,c
  9246  001D1A  EF91  F00E         	goto	u3341
  9247  001D1E  EF93  F00E         	goto	u3340
  9248  001D22                     u3341:
  9249  001D22  EF94  F00E         	goto	l3918
  9250  001D26                     u3340:
  9251  001D26  8E54               	bsf	___fladd@grs^0,7,c
  9252  001D28                     l3918:
  9253  001D28  3448               	rlcf	(___fladd@b+3)^0,w,c
  9254  001D2A  3248               	rrcf	(___fladd@b+3)^0,f,c
  9255  001D2C  3247               	rrcf	(___fladd@b+2)^0,f,c
  9256  001D2E  3246               	rrcf	(___fladd@b+1)^0,f,c
  9257  001D30  3245               	rrcf	___fladd@b^0,f,c
  9258  001D32  2A53               	incf	___fladd@bexp^0,f,c
  9259  001D34  EF29  F00F         	goto	l3958
  9260  001D38                     l3922:
  9261  001D38  5049               	movf	___fladd@a^0,w,c
  9262  001D3A  5C45               	subwf	___fladd@b^0,w,c
  9263  001D3C  504A               	movf	(___fladd@a+1)^0,w,c
  9264  001D3E  5846               	subwfb	(___fladd@b+1)^0,w,c
  9265  001D40  504B               	movf	(___fladd@a+2)^0,w,c
  9266  001D42  5847               	subwfb	(___fladd@b+2)^0,w,c
  9267  001D44  5048               	movf	(___fladd@b+3)^0,w,c
  9268  001D46  0A80               	xorlw	128
  9269  001D48  6E4D               	movwf	??___fladd^0,c
  9270  001D4A  504C               	movf	(___fladd@a+3)^0,w,c
  9271  001D4C  0A80               	xorlw	128
  9272  001D4E  584D               	subwfb	??___fladd^0,w,c
  9273  001D50  B0D8               	btfsc	status,0,c
  9274  001D52  EFAD  F00E         	goto	u3351
  9275  001D56  EFAF  F00E         	goto	u3350
  9276  001D5A                     u3351:
  9277  001D5A  EFDA  F00E         	goto	l3932
  9278  001D5E                     u3350:
  9279  001D5E  5045               	movf	___fladd@b^0,w,c
  9280  001D60  5C49               	subwf	___fladd@a^0,w,c
  9281  001D62  6E4D               	movwf	??___fladd^0,c
  9282  001D64  5046               	movf	(___fladd@b+1)^0,w,c
  9283  001D66  584A               	subwfb	(___fladd@a+1)^0,w,c
  9284  001D68  6E4E               	movwf	(??___fladd+1)^0,c
  9285  001D6A  5047               	movf	(___fladd@b+2)^0,w,c
  9286  001D6C  584B               	subwfb	(___fladd@a+2)^0,w,c
  9287  001D6E  6E4F               	movwf	(??___fladd+2)^0,c
  9288  001D70  5048               	movf	(___fladd@b+3)^0,w,c
  9289  001D72  584C               	subwfb	(___fladd@a+3)^0,w,c
  9290  001D74  6E50               	movwf	(??___fladd+3)^0,c
  9291  001D76  0EFF               	movlw	255
  9292  001D78  244D               	addwf	??___fladd^0,w,c
  9293  001D7A  6E45               	movwf	___fladd@b^0,c
  9294  001D7C  0EFF               	movlw	255
  9295  001D7E  204E               	addwfc	(??___fladd+1)^0,w,c
  9296  001D80  6E46               	movwf	(___fladd@b+1)^0,c
  9297  001D82  0EFF               	movlw	255
  9298  001D84  204F               	addwfc	(??___fladd+2)^0,w,c
  9299  001D86  6E47               	movwf	(___fladd@b+2)^0,c
  9300  001D88  0EFF               	movlw	255
  9301  001D8A  2050               	addwfc	(??___fladd+3)^0,w,c
  9302  001D8C  6E48               	movwf	(___fladd@b+3)^0,c
  9303  001D8E  0E80               	movlw	128
  9304  001D90  1A51               	xorwf	___fladd@signs^0,f,c
  9305  001D92  6C54               	negf	___fladd@grs^0,c
  9306  001D94  5054               	movf	___fladd@grs^0,w,c
  9307  001D96  A4D8               	btfss	status,2,c
  9308  001D98  EFD0  F00E         	goto	u3361
  9309  001D9C  EFD2  F00E         	goto	u3360
  9310  001DA0                     u3361:
  9311  001DA0  EFE2  F00E         	goto	l1141
  9312  001DA4                     u3360:
  9313  001DA4  0E01               	movlw	1
  9314  001DA6  2645               	addwf	___fladd@b^0,f,c
  9315  001DA8  0E00               	movlw	0
  9316  001DAA  2246               	addwfc	(___fladd@b+1)^0,f,c
  9317  001DAC  2247               	addwfc	(___fladd@b+2)^0,f,c
  9318  001DAE  2248               	addwfc	(___fladd@b+3)^0,f,c
  9319  001DB0  EFE2  F00E         	goto	l1141
  9320  001DB4                     l3932:
  9321  001DB4  5049               	movf	___fladd@a^0,w,c
  9322  001DB6  5E45               	subwf	___fladd@b^0,f,c
  9323  001DB8  504A               	movf	(___fladd@a+1)^0,w,c
  9324  001DBA  5A46               	subwfb	(___fladd@b+1)^0,f,c
  9325  001DBC  504B               	movf	(___fladd@a+2)^0,w,c
  9326  001DBE  5A47               	subwfb	(___fladd@b+2)^0,f,c
  9327  001DC0  504C               	movf	(___fladd@a+3)^0,w,c
  9328  001DC2  5A48               	subwfb	(___fladd@b+3)^0,f,c
  9329  001DC4                     l1141:
  9330  001DC4  5045               	movf	___fladd@b^0,w,c
  9331  001DC6  1046               	iorwf	(___fladd@b+1)^0,w,c
  9332  001DC8  1047               	iorwf	(___fladd@b+2)^0,w,c
  9333  001DCA  1048               	iorwf	(___fladd@b+3)^0,w,c
  9334  001DCC  A4D8               	btfss	status,2,c
  9335  001DCE  EFEB  F00E         	goto	u3371
  9336  001DD2  EFED  F00E         	goto	u3370
  9337  001DD6                     u3371:
  9338  001DD6  EF22  F00F         	goto	l3956
  9339  001DDA                     u3370:
  9340  001DDA  5054               	movf	___fladd@grs^0,w,c
  9341  001DDC  A4D8               	btfss	status,2,c
  9342  001DDE  EFF3  F00E         	goto	u3381
  9343  001DE2  EFF5  F00E         	goto	u3380
  9344  001DE6                     u3381:
  9345  001DE6  EF22  F00F         	goto	l3956
  9346  001DEA                     u3380:
  9347  001DEA  0E00               	movlw	0
  9348  001DEC  6E45               	movwf	?___fladd^0,c
  9349  001DEE  0E00               	movlw	0
  9350  001DF0  6E46               	movwf	(?___fladd+1)^0,c
  9351  001DF2  0E00               	movlw	0
  9352  001DF4  6E47               	movwf	(?___fladd+2)^0,c
  9353  001DF6  0E00               	movlw	0
  9354  001DF8  6E48               	movwf	(?___fladd+3)^0,c
  9355  001DFA  EFBD  F00F         	goto	l1133
  9356  001DFE                     l3940:
  9357  001DFE  90D8               	bcf	status,0,c
  9358  001E00  3645               	rlcf	___fladd@b^0,f,c
  9359  001E02  3646               	rlcf	(___fladd@b+1)^0,f,c
  9360  001E04  3647               	rlcf	(___fladd@b+2)^0,f,c
  9361  001E06  3648               	rlcf	(___fladd@b+3)^0,f,c
  9362  001E08  AE54               	btfss	___fladd@grs^0,7,c
  9363  001E0A  EF09  F00F         	goto	u3391
  9364  001E0E  EF0B  F00F         	goto	u3390
  9365  001E12                     u3391:
  9366  001E12  EF0C  F00F         	goto	l3946
  9367  001E16                     u3390:
  9368  001E16  8045               	bsf	___fladd@b^0,0,c
  9369  001E18                     l3946:
  9370  001E18  A054               	btfss	___fladd@grs^0,0,c
  9371  001E1A  EF11  F00F         	goto	u3401
  9372  001E1E  EF13  F00F         	goto	u3400
  9373  001E22                     u3401:
  9374  001E22  EF17  F00F         	goto	l3950
  9375  001E26                     u3400:
  9376  001E26  80D8               	bsf	status,0,c
  9377  001E28  3654               	rlcf	___fladd@grs^0,f,c
  9378  001E2A  EF19  F00F         	goto	l3952
  9379  001E2E                     l3950:
  9380  001E2E  90D8               	bcf	status,0,c
  9381  001E30  3654               	rlcf	___fladd@grs^0,f,c
  9382  001E32                     l3952:
  9383  001E32  5053               	movf	___fladd@bexp^0,w,c
  9384  001E34  B4D8               	btfsc	status,2,c
  9385  001E36  EF1F  F00F         	goto	u3411
  9386  001E3A  EF21  F00F         	goto	u3410
  9387  001E3E                     u3411:
  9388  001E3E  EF22  F00F         	goto	l3956
  9389  001E42                     u3410:
  9390  001E42  0653               	decf	___fladd@bexp^0,f,c
  9391  001E44                     l3956:
  9392  001E44  AE47               	btfss	(___fladd@b+2)^0,7,c
  9393  001E46  EF27  F00F         	goto	u3421
  9394  001E4A  EF29  F00F         	goto	u3420
  9395  001E4E                     u3421:
  9396  001E4E  EFFF  F00E         	goto	l3940
  9397  001E52                     u3420:
  9398  001E52                     l3958:
  9399  001E52  0E00               	movlw	0
  9400  001E54  6E52               	movwf	___fladd@aexp^0,c
  9401  001E56  AE54               	btfss	___fladd@grs^0,7,c
  9402  001E58  EF30  F00F         	goto	u3431
  9403  001E5C  EF32  F00F         	goto	u3430
  9404  001E60                     u3431:
  9405  001E60  EF4A  F00F         	goto	l1150
  9406  001E64                     u3430:
  9407  001E64  C054  F04D         	movff	___fladd@grs,??___fladd
  9408  001E68  0E7F               	movlw	127
  9409  001E6A  164D               	andwf	??___fladd^0,f,c
  9410  001E6C  B4D8               	btfsc	status,2,c
  9411  001E6E  EF3B  F00F         	goto	u3441
  9412  001E72  EF3D  F00F         	goto	u3440
  9413  001E76                     u3441:
  9414  001E76  EF41  F00F         	goto	l1151
  9415  001E7A                     u3440:
  9416  001E7A                     l3964:
  9417  001E7A  0E01               	movlw	1
  9418  001E7C  6E52               	movwf	___fladd@aexp^0,c
  9419  001E7E  EF4A  F00F         	goto	l1150
  9420  001E82                     l1151:
  9421  001E82  A045               	btfss	___fladd@b^0,0,c
  9422  001E84  EF46  F00F         	goto	u3451
  9423  001E88  EF48  F00F         	goto	u3450
  9424  001E8C                     u3451:
  9425  001E8C  EF4A  F00F         	goto	l1150
  9426  001E90                     u3450:
  9427  001E90  EF3D  F00F         	goto	l3964
  9428  001E94                     l1150:
  9429  001E94  5052               	movf	___fladd@aexp^0,w,c
  9430  001E96  B4D8               	btfsc	status,2,c
  9431  001E98  EF50  F00F         	goto	u3461
  9432  001E9C  EF52  F00F         	goto	u3460
  9433  001EA0                     u3461:
  9434  001EA0  EF7D  F00F         	goto	l3976
  9435  001EA4                     u3460:
  9436  001EA4  0E01               	movlw	1
  9437  001EA6  2645               	addwf	___fladd@b^0,f,c
  9438  001EA8  0E00               	movlw	0
  9439  001EAA  2246               	addwfc	(___fladd@b+1)^0,f,c
  9440  001EAC  2247               	addwfc	(___fladd@b+2)^0,f,c
  9441  001EAE  2248               	addwfc	(___fladd@b+3)^0,f,c
  9442  001EB0  A048               	btfss	(___fladd@b+3)^0,0,c
  9443  001EB2  EF5D  F00F         	goto	u3471
  9444  001EB6  EF5F  F00F         	goto	u3470
  9445  001EBA                     u3471:
  9446  001EBA  EF7D  F00F         	goto	l3976
  9447  001EBE                     u3470:
  9448  001EBE  C045  F04D         	movff	___fladd@b,??___fladd
  9449  001EC2  C046  F04E         	movff	___fladd@b+1,??___fladd+1
  9450  001EC6  C047  F04F         	movff	___fladd@b+2,??___fladd+2
  9451  001ECA  C048  F050         	movff	___fladd@b+3,??___fladd+3
  9452  001ECE  3450               	rlcf	(??___fladd+3)^0,w,c
  9453  001ED0  3250               	rrcf	(??___fladd+3)^0,f,c
  9454  001ED2  324F               	rrcf	(??___fladd+2)^0,f,c
  9455  001ED4  324E               	rrcf	(??___fladd+1)^0,f,c
  9456  001ED6  324D               	rrcf	??___fladd^0,f,c
  9457  001ED8  C04D  F045         	movff	??___fladd,___fladd@b
  9458  001EDC  C04E  F046         	movff	??___fladd+1,___fladd@b+1
  9459  001EE0  C04F  F047         	movff	??___fladd+2,___fladd@b+2
  9460  001EE4  C050  F048         	movff	??___fladd+3,___fladd@b+3
  9461  001EE8  2853               	incf	___fladd@bexp^0,w,c
  9462  001EEA  B4D8               	btfsc	status,2,c
  9463  001EEC  EF7A  F00F         	goto	u3481
  9464  001EF0  EF7C  F00F         	goto	u3480
  9465  001EF4                     u3481:
  9466  001EF4  EF7D  F00F         	goto	l3976
  9467  001EF8                     u3480:
  9468  001EF8  2A53               	incf	___fladd@bexp^0,f,c
  9469  001EFA                     l3976:
  9470  001EFA  2853               	incf	___fladd@bexp^0,w,c
  9471  001EFC  B4D8               	btfsc	status,2,c
  9472  001EFE  EF83  F00F         	goto	u3491
  9473  001F02  EF85  F00F         	goto	u3490
  9474  001F06                     u3491:
  9475  001F06  EF8D  F00F         	goto	l3980
  9476  001F0A                     u3490:
  9477  001F0A  5053               	movf	___fladd@bexp^0,w,c
  9478  001F0C  A4D8               	btfss	status,2,c
  9479  001F0E  EF8B  F00F         	goto	u3501
  9480  001F12  EF8D  F00F         	goto	u3500
  9481  001F16                     u3501:
  9482  001F16  EF9F  F00F         	goto	l3984
  9483  001F1A                     u3500:
  9484  001F1A                     l3980:
  9485  001F1A  0E00               	movlw	0
  9486  001F1C  6E45               	movwf	___fladd@b^0,c
  9487  001F1E  0E00               	movlw	0
  9488  001F20  6E46               	movwf	(___fladd@b+1)^0,c
  9489  001F22  0E00               	movlw	0
  9490  001F24  6E47               	movwf	(___fladd@b+2)^0,c
  9491  001F26  0E00               	movlw	0
  9492  001F28  6E48               	movwf	(___fladd@b+3)^0,c
  9493  001F2A  5053               	movf	___fladd@bexp^0,w,c
  9494  001F2C  A4D8               	btfss	status,2,c
  9495  001F2E  EF9B  F00F         	goto	u3511
  9496  001F32  EF9D  F00F         	goto	u3510
  9497  001F36                     u3511:
  9498  001F36  EF9F  F00F         	goto	l3984
  9499  001F3A                     u3510:
  9500  001F3A  0E00               	movlw	0
  9501  001F3C  6E51               	movwf	___fladd@signs^0,c
  9502  001F3E                     l3984:
  9503  001F3E  A053               	btfss	___fladd@bexp^0,0,c
  9504  001F40  EFA4  F00F         	goto	u3521
  9505  001F44  EFA6  F00F         	goto	u3520
  9506  001F48                     u3521:
  9507  001F48  EFA9  F00F         	goto	l3988
  9508  001F4C                     u3520:
  9509  001F4C  8E47               	bsf	(___fladd@b+2)^0,7,c
  9510  001F4E  EFAA  F00F         	goto	l3990
  9511  001F52                     l3988:
  9512  001F52  9E47               	bcf	(___fladd@b+2)^0,7,c
  9513  001F54                     l3990:
  9514  001F54  90D8               	bcf	status,0,c
  9515  001F56  3053               	rrcf	___fladd@bexp^0,w,c
  9516  001F58  6E48               	movwf	(___fladd@b+3)^0,c
  9517  001F5A  AE51               	btfss	___fladd@signs^0,7,c
  9518  001F5C  EFB2  F00F         	goto	u3531
  9519  001F60  EFB4  F00F         	goto	u3530
  9520  001F64                     u3531:
  9521  001F64  EFB5  F00F         	goto	l3996
  9522  001F68                     u3530:
  9523  001F68  8E48               	bsf	(___fladd@b+3)^0,7,c
  9524  001F6A                     l3996:
  9525  001F6A  C045  F045         	movff	___fladd@b,?___fladd
  9526  001F6E  C046  F046         	movff	___fladd@b+1,?___fladd+1
  9527  001F72  C047  F047         	movff	___fladd@b+2,?___fladd+2
  9528  001F76  C048  F048         	movff	___fladd@b+3,?___fladd+3
  9529  001F7A                     l1133:
  9530  001F7A  0012               	return		;funcret
  9531  001F7C                     __end_of___fladd:
  9532                           	callstack 0
  9533                           
  9534 ;; *************** function ___flneg *****************
  9535 ;; Defined at:
  9536 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;  f1              4    0[COMRAM] unsigned char 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;		None
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  4    0[COMRAM] unsigned char 
  9543 ;; Registers used:
  9544 ;;		wreg, status,2, status,0
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9550 ;;      Params:         4       0       0       0       0       0       0       0       0
  9551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9553 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9554 ;;Total ram usage:        4 bytes
  9555 ;; Hardware stack levels used: 1
  9556 ;; This function calls:
  9557 ;;		Nothing
  9558 ;; This function is called by:
  9559 ;;		_efgtoa
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           	psect	text45
  9564  004886                     __ptext45:
  9565                           	callstack 0
  9566  004886                     ___flneg:
  9567                           	callstack 25
  9568  004886  5001               	movf	___flneg@f1^0,w,c
  9569  004888  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9570  00488A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9571  00488C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9572  00488E  B4D8               	btfsc	status,2,c
  9573  004890  EF4C  F024         	goto	u4221
  9574  004894  EF4E  F024         	goto	u4220
  9575  004898                     u4221:
  9576  004898  EF56  F024         	goto	l4428
  9577  00489C                     u4220:
  9578  00489C  0E00               	movlw	0
  9579  00489E  1A01               	xorwf	___flneg@f1^0,f,c
  9580  0048A0  0E00               	movlw	0
  9581  0048A2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9582  0048A4  0E00               	movlw	0
  9583  0048A6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9584  0048A8  0E80               	movlw	128
  9585  0048AA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9586  0048AC                     l4428:
  9587  0048AC  C001  F001         	movff	___flneg@f1,?___flneg
  9588  0048B0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9589  0048B4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9590  0048B8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9591  0048BC  0012               	return		;funcret
  9592  0048BE                     __end_of___flneg:
  9593                           	callstack 0
  9594                           
  9595 ;; *************** function ___flmul *****************
  9596 ;; Defined at:
  9597 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  b               4   18[COMRAM] unsigned char 
  9600 ;;  a               4   22[COMRAM] unsigned char 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  prod            4   37[COMRAM] struct .
  9603 ;;  grs             4   31[COMRAM] unsigned long 
  9604 ;;  temp            2   41[COMRAM] struct .
  9605 ;;  bexp            1   36[COMRAM] unsigned char 
  9606 ;;  aexp            1   35[COMRAM] unsigned char 
  9607 ;;  sign            1   30[COMRAM] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  4   18[COMRAM] unsigned char 
  9610 ;; Registers used:
  9611 ;;		wreg, status,2, status,0, prodl, prodh
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9617 ;;      Params:         8       0       0       0       0       0       0       0       0
  9618 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9619 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9620 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9621 ;;Total ram usage:       25 bytes
  9622 ;; Hardware stack levels used: 1
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_ReadADC
  9627 ;;		_efgtoa
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text46
  9632  001F7C                     __ptext46:
  9633                           	callstack 0
  9634  001F7C                     ___flmul:
  9635                           	callstack 25
  9636  001F7C  5016               	movf	(___flmul@b+3)^0,w,c
  9637  001F7E  0B80               	andlw	128
  9638  001F80  6E1F               	movwf	___flmul@sign^0,c
  9639  001F82  5016               	movf	(___flmul@b+3)^0,w,c
  9640  001F84  2416               	addwf	(___flmul@b+3)^0,w,c
  9641  001F86  6E25               	movwf	___flmul@bexp^0,c
  9642  001F88  AE15               	btfss	(___flmul@b+2)^0,7,c
  9643  001F8A  EFC9  F00F         	goto	u3831
  9644  001F8E  EFCB  F00F         	goto	u3830
  9645  001F92                     u3831:
  9646  001F92  EFCC  F00F         	goto	l4176
  9647  001F96                     u3830:
  9648  001F96  8025               	bsf	___flmul@bexp^0,0,c
  9649  001F98                     l4176:
  9650  001F98  5025               	movf	___flmul@bexp^0,w,c
  9651  001F9A  B4D8               	btfsc	status,2,c
  9652  001F9C  EFD2  F00F         	goto	u3841
  9653  001FA0  EFD4  F00F         	goto	u3840
  9654  001FA4                     u3841:
  9655  001FA4  EFE7  F00F         	goto	l4184
  9656  001FA8                     u3840:
  9657  001FA8  2825               	incf	___flmul@bexp^0,w,c
  9658  001FAA  A4D8               	btfss	status,2,c
  9659  001FAC  EFDA  F00F         	goto	u3851
  9660  001FB0  EFDC  F00F         	goto	u3850
  9661  001FB4                     u3851:
  9662  001FB4  EFE4  F00F         	goto	l4182
  9663  001FB8                     u3850:
  9664  001FB8  0E00               	movlw	0
  9665  001FBA  6E13               	movwf	___flmul@b^0,c
  9666  001FBC  0E00               	movlw	0
  9667  001FBE  6E14               	movwf	(___flmul@b+1)^0,c
  9668  001FC0  0E00               	movlw	0
  9669  001FC2  6E15               	movwf	(___flmul@b+2)^0,c
  9670  001FC4  0E00               	movlw	0
  9671  001FC6  6E16               	movwf	(___flmul@b+3)^0,c
  9672  001FC8                     l4182:
  9673  001FC8  8E15               	bsf	(___flmul@b+2)^0,7,c
  9674  001FCA  EFEF  F00F         	goto	l4186
  9675  001FCE                     l4184:
  9676  001FCE  0E00               	movlw	0
  9677  001FD0  6E13               	movwf	___flmul@b^0,c
  9678  001FD2  0E00               	movlw	0
  9679  001FD4  6E14               	movwf	(___flmul@b+1)^0,c
  9680  001FD6  0E00               	movlw	0
  9681  001FD8  6E15               	movwf	(___flmul@b+2)^0,c
  9682  001FDA  0E00               	movlw	0
  9683  001FDC  6E16               	movwf	(___flmul@b+3)^0,c
  9684  001FDE                     l4186:
  9685  001FDE  501A               	movf	(___flmul@a+3)^0,w,c
  9686  001FE0  0B80               	andlw	128
  9687  001FE2  1A1F               	xorwf	___flmul@sign^0,f,c
  9688  001FE4  501A               	movf	(___flmul@a+3)^0,w,c
  9689  001FE6  241A               	addwf	(___flmul@a+3)^0,w,c
  9690  001FE8  6E24               	movwf	___flmul@aexp^0,c
  9691  001FEA  AE19               	btfss	(___flmul@a+2)^0,7,c
  9692  001FEC  EFFA  F00F         	goto	u3861
  9693  001FF0  EFFC  F00F         	goto	u3860
  9694  001FF4                     u3861:
  9695  001FF4  EFFD  F00F         	goto	l4194
  9696  001FF8                     u3860:
  9697  001FF8  8024               	bsf	___flmul@aexp^0,0,c
  9698  001FFA                     l4194:
  9699  001FFA  5024               	movf	___flmul@aexp^0,w,c
  9700  001FFC  B4D8               	btfsc	status,2,c
  9701  001FFE  EF03  F010         	goto	u3871
  9702  002002  EF05  F010         	goto	u3870
  9703  002006                     u3871:
  9704  002006  EF18  F010         	goto	l4202
  9705  00200A                     u3870:
  9706  00200A  2824               	incf	___flmul@aexp^0,w,c
  9707  00200C  A4D8               	btfss	status,2,c
  9708  00200E  EF0B  F010         	goto	u3881
  9709  002012  EF0D  F010         	goto	u3880
  9710  002016                     u3881:
  9711  002016  EF15  F010         	goto	l4200
  9712  00201A                     u3880:
  9713  00201A  0E00               	movlw	0
  9714  00201C  6E17               	movwf	___flmul@a^0,c
  9715  00201E  0E00               	movlw	0
  9716  002020  6E18               	movwf	(___flmul@a+1)^0,c
  9717  002022  0E00               	movlw	0
  9718  002024  6E19               	movwf	(___flmul@a+2)^0,c
  9719  002026  0E00               	movlw	0
  9720  002028  6E1A               	movwf	(___flmul@a+3)^0,c
  9721  00202A                     l4200:
  9722  00202A  8E19               	bsf	(___flmul@a+2)^0,7,c
  9723  00202C  EF20  F010         	goto	l1210
  9724  002030                     l4202:
  9725  002030  0E00               	movlw	0
  9726  002032  6E17               	movwf	___flmul@a^0,c
  9727  002034  0E00               	movlw	0
  9728  002036  6E18               	movwf	(___flmul@a+1)^0,c
  9729  002038  0E00               	movlw	0
  9730  00203A  6E19               	movwf	(___flmul@a+2)^0,c
  9731  00203C  0E00               	movlw	0
  9732  00203E  6E1A               	movwf	(___flmul@a+3)^0,c
  9733  002040                     l1210:
  9734  002040  5024               	movf	___flmul@aexp^0,w,c
  9735  002042  B4D8               	btfsc	status,2,c
  9736  002044  EF26  F010         	goto	u3891
  9737  002048  EF28  F010         	goto	u3890
  9738  00204C                     u3891:
  9739  00204C  EF30  F010         	goto	l4206
  9740  002050                     u3890:
  9741  002050  5025               	movf	___flmul@bexp^0,w,c
  9742  002052  A4D8               	btfss	status,2,c
  9743  002054  EF2E  F010         	goto	u3901
  9744  002058  EF30  F010         	goto	u3900
  9745  00205C                     u3901:
  9746  00205C  EF3A  F010         	goto	l4210
  9747  002060                     u3900:
  9748  002060                     l4206:
  9749  002060  0E00               	movlw	0
  9750  002062  6E13               	movwf	?___flmul^0,c
  9751  002064  0E00               	movlw	0
  9752  002066  6E14               	movwf	(?___flmul+1)^0,c
  9753  002068  0E00               	movlw	0
  9754  00206A  6E15               	movwf	(?___flmul+2)^0,c
  9755  00206C  0E00               	movlw	0
  9756  00206E  6E16               	movwf	(?___flmul+3)^0,c
  9757  002070  EFD2  F011         	goto	l1214
  9758  002074                     l4210:
  9759  002074  5019               	movf	(___flmul@a+2)^0,w,c
  9760  002076  0213               	mulwf	___flmul@b^0,c
  9761  002078  CFF3 F02A          	movff	prodl,___flmul@temp
  9762  00207C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9763  002080  502A               	movf	___flmul@temp^0,w,c
  9764  002082  6E20               	movwf	___flmul@grs^0,c
  9765  002084  6A21               	clrf	(___flmul@grs+1)^0,c
  9766  002086  6A22               	clrf	(___flmul@grs+2)^0,c
  9767  002088  6A23               	clrf	(___flmul@grs+3)^0,c
  9768  00208A  502B               	movf	(___flmul@temp+1)^0,w,c
  9769  00208C  6E26               	movwf	___flmul@prod^0,c
  9770  00208E  6A27               	clrf	(___flmul@prod+1)^0,c
  9771  002090  6A28               	clrf	(___flmul@prod+2)^0,c
  9772  002092  6A29               	clrf	(___flmul@prod+3)^0,c
  9773  002094  5018               	movf	(___flmul@a+1)^0,w,c
  9774  002096  0214               	mulwf	(___flmul@b+1)^0,c
  9775  002098  CFF3 F02A          	movff	prodl,___flmul@temp
  9776  00209C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9777  0020A0  502A               	movf	___flmul@temp^0,w,c
  9778  0020A2  2620               	addwf	___flmul@grs^0,f,c
  9779  0020A4  0E00               	movlw	0
  9780  0020A6  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9781  0020A8  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9782  0020AA  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9783  0020AC  502B               	movf	(___flmul@temp+1)^0,w,c
  9784  0020AE  2626               	addwf	___flmul@prod^0,f,c
  9785  0020B0  0E00               	movlw	0
  9786  0020B2  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9787  0020B4  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9788  0020B6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9789  0020B8  5017               	movf	___flmul@a^0,w,c
  9790  0020BA  0215               	mulwf	(___flmul@b+2)^0,c
  9791  0020BC  CFF3 F02A          	movff	prodl,___flmul@temp
  9792  0020C0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9793  0020C4  502A               	movf	___flmul@temp^0,w,c
  9794  0020C6  2620               	addwf	___flmul@grs^0,f,c
  9795  0020C8  0E00               	movlw	0
  9796  0020CA  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9797  0020CC  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9798  0020CE  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9799  0020D0  502B               	movf	(___flmul@temp+1)^0,w,c
  9800  0020D2  2626               	addwf	___flmul@prod^0,f,c
  9801  0020D4  0E00               	movlw	0
  9802  0020D6  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9803  0020D8  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9804  0020DA  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9805  0020DC  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  9806  0020E0  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  9807  0020E4  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  9808  0020E8  6A20               	clrf	___flmul@grs^0,c
  9809  0020EA  5017               	movf	___flmul@a^0,w,c
  9810  0020EC  0214               	mulwf	(___flmul@b+1)^0,c
  9811  0020EE  CFF3 F02A          	movff	prodl,___flmul@temp
  9812  0020F2  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9813  0020F6  502A               	movf	___flmul@temp^0,w,c
  9814  0020F8  2620               	addwf	___flmul@grs^0,f,c
  9815  0020FA  502B               	movf	(___flmul@temp+1)^0,w,c
  9816  0020FC  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9817  0020FE  0E00               	movlw	0
  9818  002100  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9819  002102  0E00               	movlw	0
  9820  002104  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9821  002106  5018               	movf	(___flmul@a+1)^0,w,c
  9822  002108  0213               	mulwf	___flmul@b^0,c
  9823  00210A  CFF3 F02A          	movff	prodl,___flmul@temp
  9824  00210E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9825  002112  502A               	movf	___flmul@temp^0,w,c
  9826  002114  2620               	addwf	___flmul@grs^0,f,c
  9827  002116  502B               	movf	(___flmul@temp+1)^0,w,c
  9828  002118  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9829  00211A  0E00               	movlw	0
  9830  00211C  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9831  00211E  0E00               	movlw	0
  9832  002120  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9833  002122  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  9834  002126  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  9835  00212A  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  9836  00212E  6A20               	clrf	___flmul@grs^0,c
  9837  002130  5017               	movf	___flmul@a^0,w,c
  9838  002132  0213               	mulwf	___flmul@b^0,c
  9839  002134  CFF3 F02A          	movff	prodl,___flmul@temp
  9840  002138  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9841  00213C  502A               	movf	___flmul@temp^0,w,c
  9842  00213E  2620               	addwf	___flmul@grs^0,f,c
  9843  002140  502B               	movf	(___flmul@temp+1)^0,w,c
  9844  002142  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9845  002144  0E00               	movlw	0
  9846  002146  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9847  002148  0E00               	movlw	0
  9848  00214A  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9849  00214C  5019               	movf	(___flmul@a+2)^0,w,c
  9850  00214E  0214               	mulwf	(___flmul@b+1)^0,c
  9851  002150  CFF3 F02A          	movff	prodl,___flmul@temp
  9852  002154  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9853  002158  502A               	movf	___flmul@temp^0,w,c
  9854  00215A  2626               	addwf	___flmul@prod^0,f,c
  9855  00215C  502B               	movf	(___flmul@temp+1)^0,w,c
  9856  00215E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9857  002160  0E00               	movlw	0
  9858  002162  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9859  002164  0E00               	movlw	0
  9860  002166  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9861  002168  5018               	movf	(___flmul@a+1)^0,w,c
  9862  00216A  0215               	mulwf	(___flmul@b+2)^0,c
  9863  00216C  CFF3 F02A          	movff	prodl,___flmul@temp
  9864  002170  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9865  002174  502A               	movf	___flmul@temp^0,w,c
  9866  002176  2626               	addwf	___flmul@prod^0,f,c
  9867  002178  502B               	movf	(___flmul@temp+1)^0,w,c
  9868  00217A  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9869  00217C  0E00               	movlw	0
  9870  00217E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9871  002180  0E00               	movlw	0
  9872  002182  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9873  002184  5019               	movf	(___flmul@a+2)^0,w,c
  9874  002186  0215               	mulwf	(___flmul@b+2)^0,c
  9875  002188  CFF3 F02A          	movff	prodl,___flmul@temp
  9876  00218C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9877  002190  502A               	movf	___flmul@temp^0,w,c
  9878  002192  6E1B               	movwf	??___flmul^0,c
  9879  002194  502B               	movf	(___flmul@temp+1)^0,w,c
  9880  002196  6E1C               	movwf	(??___flmul+1)^0,c
  9881  002198  6A1D               	clrf	(??___flmul+2)^0,c
  9882  00219A  6A1E               	clrf	(??___flmul+3)^0,c
  9883  00219C  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  9884  0021A0  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  9885  0021A4  C01B  F01C         	movff	??___flmul,??___flmul+1
  9886  0021A8  6A1B               	clrf	??___flmul^0,c
  9887  0021AA  501B               	movf	??___flmul^0,w,c
  9888  0021AC  2626               	addwf	___flmul@prod^0,f,c
  9889  0021AE  501C               	movf	(??___flmul+1)^0,w,c
  9890  0021B0  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9891  0021B2  501D               	movf	(??___flmul+2)^0,w,c
  9892  0021B4  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9893  0021B6  501E               	movf	(??___flmul+3)^0,w,c
  9894  0021B8  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9895  0021BA  C020  F01B         	movff	___flmul@grs,??___flmul
  9896  0021BE  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  9897  0021C2  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  9898  0021C6  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  9899  0021CA  0E19               	movlw	25
  9900  0021CC  EFED  F010         	goto	u3910
  9901  0021D0                     u3915:
  9902  0021D0  90D8               	bcf	status,0,c
  9903  0021D2  321E               	rrcf	(??___flmul+3)^0,f,c
  9904  0021D4  321D               	rrcf	(??___flmul+2)^0,f,c
  9905  0021D6  321C               	rrcf	(??___flmul+1)^0,f,c
  9906  0021D8  321B               	rrcf	??___flmul^0,f,c
  9907  0021DA                     u3910:
  9908  0021DA  2EE8               	decfsz	wreg,f,c
  9909  0021DC  EFE8  F010         	goto	u3915
  9910  0021E0  501B               	movf	??___flmul^0,w,c
  9911  0021E2  2626               	addwf	___flmul@prod^0,f,c
  9912  0021E4  501C               	movf	(??___flmul+1)^0,w,c
  9913  0021E6  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9914  0021E8  501D               	movf	(??___flmul+2)^0,w,c
  9915  0021EA  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9916  0021EC  501E               	movf	(??___flmul+3)^0,w,c
  9917  0021EE  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9918  0021F0  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  9919  0021F4  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  9920  0021F8  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  9921  0021FC  6A20               	clrf	___flmul@grs^0,c
  9922  0021FE  5024               	movf	___flmul@aexp^0,w,c
  9923  002200  C025  F01B         	movff	___flmul@bexp,??___flmul
  9924  002204  6A1C               	clrf	(??___flmul+1)^0,c
  9925  002206  261B               	addwf	??___flmul^0,f,c
  9926  002208  0E00               	movlw	0
  9927  00220A  221C               	addwfc	(??___flmul+1)^0,f,c
  9928  00220C  0E82               	movlw	130
  9929  00220E  241B               	addwf	??___flmul^0,w,c
  9930  002210  6E2A               	movwf	___flmul@temp^0,c
  9931  002212  0EFF               	movlw	255
  9932  002214  201C               	addwfc	(??___flmul+1)^0,w,c
  9933  002216  6E2B               	movwf	(___flmul@temp+1)^0,c
  9934  002218  EF23  F011         	goto	l4258
  9935  00221C                     l4252:
  9936  00221C  90D8               	bcf	status,0,c
  9937  00221E  3626               	rlcf	___flmul@prod^0,f,c
  9938  002220  3627               	rlcf	(___flmul@prod+1)^0,f,c
  9939  002222  3628               	rlcf	(___flmul@prod+2)^0,f,c
  9940  002224  3629               	rlcf	(___flmul@prod+3)^0,f,c
  9941  002226  AE23               	btfss	(___flmul@grs+3)^0,7,c
  9942  002228  EF18  F011         	goto	u3921
  9943  00222C  EF1A  F011         	goto	u3920
  9944  002230                     u3921:
  9945  002230  EF1B  F011         	goto	l1217
  9946  002234                     u3920:
  9947  002234  8026               	bsf	___flmul@prod^0,0,c
  9948  002236                     l1217:
  9949  002236  90D8               	bcf	status,0,c
  9950  002238  3620               	rlcf	___flmul@grs^0,f,c
  9951  00223A  3621               	rlcf	(___flmul@grs+1)^0,f,c
  9952  00223C  3622               	rlcf	(___flmul@grs+2)^0,f,c
  9953  00223E  3623               	rlcf	(___flmul@grs+3)^0,f,c
  9954  002240  062A               	decf	___flmul@temp^0,f,c
  9955  002242  A0D8               	btfss	status,0,c
  9956  002244  062B               	decf	(___flmul@temp+1)^0,f,c
  9957  002246                     l4258:
  9958  002246  AE28               	btfss	(___flmul@prod+2)^0,7,c
  9959  002248  EF28  F011         	goto	u3931
  9960  00224C  EF2A  F011         	goto	u3930
  9961  002250                     u3931:
  9962  002250  EF0E  F011         	goto	l4252
  9963  002254                     u3930:
  9964  002254  0E00               	movlw	0
  9965  002256  6E24               	movwf	___flmul@aexp^0,c
  9966  002258  AE23               	btfss	(___flmul@grs+3)^0,7,c
  9967  00225A  EF31  F011         	goto	u3941
  9968  00225E  EF33  F011         	goto	u3940
  9969  002262                     u3941:
  9970  002262  EF57  F011         	goto	l1219
  9971  002266                     u3940:
  9972  002266  0EFF               	movlw	255
  9973  002268  1420               	andwf	___flmul@grs^0,w,c
  9974  00226A  6E1B               	movwf	??___flmul^0,c
  9975  00226C  0EFF               	movlw	255
  9976  00226E  1421               	andwf	(___flmul@grs+1)^0,w,c
  9977  002270  6E1C               	movwf	(??___flmul+1)^0,c
  9978  002272  0EFF               	movlw	255
  9979  002274  1422               	andwf	(___flmul@grs+2)^0,w,c
  9980  002276  6E1D               	movwf	(??___flmul+2)^0,c
  9981  002278  0E7F               	movlw	127
  9982  00227A  1423               	andwf	(___flmul@grs+3)^0,w,c
  9983  00227C  6E1E               	movwf	(??___flmul+3)^0,c
  9984  00227E  501B               	movf	??___flmul^0,w,c
  9985  002280  101C               	iorwf	(??___flmul+1)^0,w,c
  9986  002282  101D               	iorwf	(??___flmul+2)^0,w,c
  9987  002284  101E               	iorwf	(??___flmul+3)^0,w,c
  9988  002286  B4D8               	btfsc	status,2,c
  9989  002288  EF48  F011         	goto	u3951
  9990  00228C  EF4A  F011         	goto	u3950
  9991  002290                     u3951:
  9992  002290  EF4E  F011         	goto	l1220
  9993  002294                     u3950:
  9994  002294                     l4266:
  9995  002294  0E01               	movlw	1
  9996  002296  6E24               	movwf	___flmul@aexp^0,c
  9997  002298  EF57  F011         	goto	l1219
  9998  00229C                     l1220:
  9999  00229C  A026               	btfss	___flmul@prod^0,0,c
 10000  00229E  EF53  F011         	goto	u3961
 10001  0022A2  EF55  F011         	goto	u3960
 10002  0022A6                     u3961:
 10003  0022A6  EF57  F011         	goto	l1219
 10004  0022AA                     u3960:
 10005  0022AA  EF4A  F011         	goto	l4266
 10006  0022AE                     l1219:
 10007  0022AE  5024               	movf	___flmul@aexp^0,w,c
 10008  0022B0  B4D8               	btfsc	status,2,c
 10009  0022B2  EF5D  F011         	goto	u3971
 10010  0022B6  EF5F  F011         	goto	u3970
 10011  0022BA                     u3971:
 10012  0022BA  EF83  F011         	goto	l4278
 10013  0022BE                     u3970:
 10014  0022BE  0E01               	movlw	1
 10015  0022C0  2626               	addwf	___flmul@prod^0,f,c
 10016  0022C2  0E00               	movlw	0
 10017  0022C4  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10018  0022C6  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10019  0022C8  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10020  0022CA  A029               	btfss	(___flmul@prod+3)^0,0,c
 10021  0022CC  EF6A  F011         	goto	u3981
 10022  0022D0  EF6C  F011         	goto	u3980
 10023  0022D4                     u3981:
 10024  0022D4  EF83  F011         	goto	l4278
 10025  0022D8                     u3980:
 10026  0022D8  C026  F01B         	movff	___flmul@prod,??___flmul
 10027  0022DC  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
 10028  0022E0  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
 10029  0022E4  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
 10030  0022E8  341E               	rlcf	(??___flmul+3)^0,w,c
 10031  0022EA  321E               	rrcf	(??___flmul+3)^0,f,c
 10032  0022EC  321D               	rrcf	(??___flmul+2)^0,f,c
 10033  0022EE  321C               	rrcf	(??___flmul+1)^0,f,c
 10034  0022F0  321B               	rrcf	??___flmul^0,f,c
 10035  0022F2  C01B  F026         	movff	??___flmul,___flmul@prod
 10036  0022F6  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
 10037  0022FA  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
 10038  0022FE  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
 10039  002302  4A2A               	infsnz	___flmul@temp^0,f,c
 10040  002304  2A2B               	incf	(___flmul@temp+1)^0,f,c
 10041  002306                     l4278:
 10042  002306  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
 10043  002308  EF8E  F011         	goto	u3991
 10044  00230C  502B               	movf	(___flmul@temp+1)^0,w,c
 10045  00230E  E108               	bnz	u3990
 10046  002310  282A               	incf	___flmul@temp^0,w,c
 10047  002312  A0D8               	btfss	status,0,c
 10048  002314  EF8E  F011         	goto	u3991
 10049  002318  EF90  F011         	goto	u3990
 10050  00231C                     u3991:
 10051  00231C  EF9A  F011         	goto	l4282
 10052  002320                     u3990:
 10053  002320  0E00               	movlw	0
 10054  002322  6E26               	movwf	___flmul@prod^0,c
 10055  002324  0E00               	movlw	0
 10056  002326  6E27               	movwf	(___flmul@prod+1)^0,c
 10057  002328  0E80               	movlw	128
 10058  00232A  6E28               	movwf	(___flmul@prod+2)^0,c
 10059  00232C  0E7F               	movlw	127
 10060  00232E  6E29               	movwf	(___flmul@prod+3)^0,c
 10061  002330  EFC8  F011         	goto	l4294
 10062  002334                     l4282:
 10063  002334  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
 10064  002336  EFA7  F011         	goto	u4000
 10065  00233A  502B               	movf	(___flmul@temp+1)^0,w,c
 10066  00233C  E106               	bnz	u4001
 10067  00233E  042A               	decf	___flmul@temp^0,w,c
 10068  002340  B0D8               	btfsc	status,0,c
 10069  002342  EFA5  F011         	goto	u4001
 10070  002346  EFA7  F011         	goto	u4000
 10071  00234A                     u4001:
 10072  00234A  EFB3  F011         	goto	l1227
 10073  00234E                     u4000:
 10074  00234E  0E00               	movlw	0
 10075  002350  6E26               	movwf	___flmul@prod^0,c
 10076  002352  0E00               	movlw	0
 10077  002354  6E27               	movwf	(___flmul@prod+1)^0,c
 10078  002356  0E00               	movlw	0
 10079  002358  6E28               	movwf	(___flmul@prod+2)^0,c
 10080  00235A  0E00               	movlw	0
 10081  00235C  6E29               	movwf	(___flmul@prod+3)^0,c
 10082  00235E  0E00               	movlw	0
 10083  002360  6E1F               	movwf	___flmul@sign^0,c
 10084  002362  EFC8  F011         	goto	l4294
 10085  002366                     l1227:
 10086  002366  C02A  F025         	movff	___flmul@temp,___flmul@bexp
 10087  00236A  0EFF               	movlw	255
 10088  00236C  1626               	andwf	___flmul@prod^0,f,c
 10089  00236E  0EFF               	movlw	255
 10090  002370  1627               	andwf	(___flmul@prod+1)^0,f,c
 10091  002372  0E7F               	movlw	127
 10092  002374  1628               	andwf	(___flmul@prod+2)^0,f,c
 10093  002376  0E00               	movlw	0
 10094  002378  1629               	andwf	(___flmul@prod+3)^0,f,c
 10095  00237A  A025               	btfss	___flmul@bexp^0,0,c
 10096  00237C  EFC2  F011         	goto	u4011
 10097  002380  EFC4  F011         	goto	u4010
 10098  002384                     u4011:
 10099  002384  EFC5  F011         	goto	l4292
 10100  002388                     u4010:
 10101  002388  8E28               	bsf	(___flmul@prod+2)^0,7,c
 10102  00238A                     l4292:
 10103  00238A  90D8               	bcf	status,0,c
 10104  00238C  3025               	rrcf	___flmul@bexp^0,w,c
 10105  00238E  6E29               	movwf	(___flmul@prod+3)^0,c
 10106  002390                     l4294:
 10107  002390  501F               	movf	___flmul@sign^0,w,c
 10108  002392  1229               	iorwf	(___flmul@prod+3)^0,f,c
 10109  002394  C026  F013         	movff	___flmul@prod,?___flmul
 10110  002398  C027  F014         	movff	___flmul@prod+1,?___flmul+1
 10111  00239C  C028  F015         	movff	___flmul@prod+2,?___flmul+2
 10112  0023A0  C029  F016         	movff	___flmul@prod+3,?___flmul+3
 10113  0023A4                     l1214:
 10114  0023A4  0012               	return		;funcret
 10115  0023A6                     __end_of___flmul:
 10116                           	callstack 0
 10117                           
 10118 ;; *************** function ___flge *****************
 10119 ;; Defined at:
 10120 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  ff1             4   43[COMRAM] unsigned char 
 10123 ;;  ff2             4   47[COMRAM] unsigned char 
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;		None
 10126 ;; Return value:  Size  Location     Type
 10127 ;;		None               void
 10128 ;; Registers used:
 10129 ;;		wreg, status,2, status,0
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10135 ;;      Params:         8       0       0       0       0       0       0       0       0
 10136 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10137 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10138 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10139 ;;Total ram usage:       12 bytes
 10140 ;; Hardware stack levels used: 1
 10141 ;; This function calls:
 10142 ;;		Nothing
 10143 ;; This function is called by:
 10144 ;;		_Estados
 10145 ;;		_efgtoa
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           	psect	text47
 10150  00373C                     __ptext47:
 10151                           	callstack 0
 10152  00373C                     ___flge:
 10153                           	callstack 25
 10154  00373C  0E00               	movlw	0
 10155  00373E  142C               	andwf	___flge@ff1^0,w,c
 10156  003740  6E34               	movwf	??___flge^0,c
 10157  003742  0E00               	movlw	0
 10158  003744  142D               	andwf	(___flge@ff1+1)^0,w,c
 10159  003746  6E35               	movwf	(??___flge+1)^0,c
 10160  003748  0E80               	movlw	128
 10161  00374A  142E               	andwf	(___flge@ff1+2)^0,w,c
 10162  00374C  6E36               	movwf	(??___flge+2)^0,c
 10163  00374E  0E7F               	movlw	127
 10164  003750  142F               	andwf	(___flge@ff1+3)^0,w,c
 10165  003752  6E37               	movwf	(??___flge+3)^0,c
 10166  003754  5034               	movf	??___flge^0,w,c
 10167  003756  1035               	iorwf	(??___flge+1)^0,w,c
 10168  003758  1036               	iorwf	(??___flge+2)^0,w,c
 10169  00375A  1037               	iorwf	(??___flge+3)^0,w,c
 10170  00375C  A4D8               	btfss	status,2,c
 10171  00375E  EFB3  F01B         	goto	u4171
 10172  003762  EFB5  F01B         	goto	u4170
 10173  003766                     u4171:
 10174  003766  EFBD  F01B         	goto	l4406
 10175  00376A                     u4170:
 10176  00376A  0E00               	movlw	0
 10177  00376C  6E2C               	movwf	___flge@ff1^0,c
 10178  00376E  0E00               	movlw	0
 10179  003770  6E2D               	movwf	(___flge@ff1+1)^0,c
 10180  003772  0E00               	movlw	0
 10181  003774  6E2E               	movwf	(___flge@ff1+2)^0,c
 10182  003776  0E00               	movlw	0
 10183  003778  6E2F               	movwf	(___flge@ff1+3)^0,c
 10184  00377A                     l4406:
 10185  00377A  0E00               	movlw	0
 10186  00377C  1430               	andwf	___flge@ff2^0,w,c
 10187  00377E  6E34               	movwf	??___flge^0,c
 10188  003780  0E00               	movlw	0
 10189  003782  1431               	andwf	(___flge@ff2+1)^0,w,c
 10190  003784  6E35               	movwf	(??___flge+1)^0,c
 10191  003786  0E80               	movlw	128
 10192  003788  1432               	andwf	(___flge@ff2+2)^0,w,c
 10193  00378A  6E36               	movwf	(??___flge+2)^0,c
 10194  00378C  0E7F               	movlw	127
 10195  00378E  1433               	andwf	(___flge@ff2+3)^0,w,c
 10196  003790  6E37               	movwf	(??___flge+3)^0,c
 10197  003792  5034               	movf	??___flge^0,w,c
 10198  003794  1035               	iorwf	(??___flge+1)^0,w,c
 10199  003796  1036               	iorwf	(??___flge+2)^0,w,c
 10200  003798  1037               	iorwf	(??___flge+3)^0,w,c
 10201  00379A  A4D8               	btfss	status,2,c
 10202  00379C  EFD2  F01B         	goto	u4181
 10203  0037A0  EFD4  F01B         	goto	u4180
 10204  0037A4                     u4181:
 10205  0037A4  EFDC  F01B         	goto	l4410
 10206  0037A8                     u4180:
 10207  0037A8  0E00               	movlw	0
 10208  0037AA  6E30               	movwf	___flge@ff2^0,c
 10209  0037AC  0E00               	movlw	0
 10210  0037AE  6E31               	movwf	(___flge@ff2+1)^0,c
 10211  0037B0  0E00               	movlw	0
 10212  0037B2  6E32               	movwf	(___flge@ff2+2)^0,c
 10213  0037B4  0E00               	movlw	0
 10214  0037B6  6E33               	movwf	(___flge@ff2+3)^0,c
 10215  0037B8                     l4410:
 10216  0037B8  AE2F               	btfss	(___flge@ff1+3)^0,7,c
 10217  0037BA  EFE1  F01B         	goto	u4191
 10218  0037BE  EFE3  F01B         	goto	u4190
 10219  0037C2                     u4191:
 10220  0037C2  EFEC  F01B         	goto	l4414
 10221  0037C6                     u4190:
 10222  0037C6  6C2C               	negf	___flge@ff1^0,c
 10223  0037C8  1E2D               	comf	(___flge@ff1+1)^0,f,c
 10224  0037CA  B0D8               	btfsc	status,0,c
 10225  0037CC  2A2D               	incf	(___flge@ff1+1)^0,f,c
 10226  0037CE  1E2E               	comf	(___flge@ff1+2)^0,f,c
 10227  0037D0  B0D8               	btfsc	status,0,c
 10228  0037D2  2A2E               	incf	(___flge@ff1+2)^0,f,c
 10229  0037D4  0E80               	movlw	128
 10230  0037D6  562F               	subfwb	(___flge@ff1+3)^0,f,c
 10231  0037D8                     l4414:
 10232  0037D8  AE33               	btfss	(___flge@ff2+3)^0,7,c
 10233  0037DA  EFF1  F01B         	goto	u4201
 10234  0037DE  EFF3  F01B         	goto	u4200
 10235  0037E2                     u4201:
 10236  0037E2  EFFC  F01B         	goto	l861
 10237  0037E6                     u4200:
 10238  0037E6  6C30               	negf	___flge@ff2^0,c
 10239  0037E8  1E31               	comf	(___flge@ff2+1)^0,f,c
 10240  0037EA  B0D8               	btfsc	status,0,c
 10241  0037EC  2A31               	incf	(___flge@ff2+1)^0,f,c
 10242  0037EE  1E32               	comf	(___flge@ff2+2)^0,f,c
 10243  0037F0  B0D8               	btfsc	status,0,c
 10244  0037F2  2A32               	incf	(___flge@ff2+2)^0,f,c
 10245  0037F4  0E80               	movlw	128
 10246  0037F6  5633               	subfwb	(___flge@ff2+3)^0,f,c
 10247  0037F8                     l861:
 10248  0037F8  0E00               	movlw	0
 10249  0037FA  1A2C               	xorwf	___flge@ff1^0,f,c
 10250  0037FC  0E00               	movlw	0
 10251  0037FE  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
 10252  003800  0E00               	movlw	0
 10253  003802  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
 10254  003804  0E80               	movlw	128
 10255  003806  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
 10256  003808  0E00               	movlw	0
 10257  00380A  1A30               	xorwf	___flge@ff2^0,f,c
 10258  00380C  0E00               	movlw	0
 10259  00380E  1A31               	xorwf	(___flge@ff2+1)^0,f,c
 10260  003810  0E00               	movlw	0
 10261  003812  1A32               	xorwf	(___flge@ff2+2)^0,f,c
 10262  003814  0E80               	movlw	128
 10263  003816  1A33               	xorwf	(___flge@ff2+3)^0,f,c
 10264  003818  5030               	movf	___flge@ff2^0,w,c
 10265  00381A  5C2C               	subwf	___flge@ff1^0,w,c
 10266  00381C  5031               	movf	(___flge@ff2+1)^0,w,c
 10267  00381E  582D               	subwfb	(___flge@ff1+1)^0,w,c
 10268  003820  5032               	movf	(___flge@ff2+2)^0,w,c
 10269  003822  582E               	subwfb	(___flge@ff1+2)^0,w,c
 10270  003824  5033               	movf	(___flge@ff2+3)^0,w,c
 10271  003826  582F               	subwfb	(___flge@ff1+3)^0,w,c
 10272  003828  B0D8               	btfsc	status,0,c
 10273  00382A  EF19  F01C         	goto	u4211
 10274  00382E  EF1B  F01C         	goto	u4210
 10275  003832                     u4211:
 10276  003832  EF1E  F01C         	goto	l4420
 10277  003836                     u4210:
 10278  003836  90D8               	bcf	status,0,c
 10279  003838  EF1F  F01C         	goto	l866
 10280  00383C                     l4420:
 10281  00383C  80D8               	bsf	status,0,c
 10282  00383E                     l866:
 10283  00383E  0012               	return		;funcret
 10284  003840                     __end_of___flge:
 10285                           	callstack 0
 10286                           
 10287 ;; *************** function ___fleq *****************
 10288 ;; Defined at:
 10289 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;  ff1             4    0[COMRAM] unsigned char 
 10292 ;;  ff2             4    4[COMRAM] unsigned char 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;		None
 10295 ;; Return value:  Size  Location     Type
 10296 ;;		None               void
 10297 ;; Registers used:
 10298 ;;		wreg, status,2, status,0
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10304 ;;      Params:         8       0       0       0       0       0       0       0       0
 10305 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10306 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10307 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10308 ;;Total ram usage:       12 bytes
 10309 ;; Hardware stack levels used: 1
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_efgtoa
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           
 10317                           	psect	text48
 10318  003F8A                     __ptext48:
 10319                           	callstack 0
 10320  003F8A                     ___fleq:
 10321                           	callstack 25
 10322  003F8A  0E00               	movlw	0
 10323  003F8C  1401               	andwf	___fleq@ff1^0,w,c
 10324  003F8E  6E09               	movwf	??___fleq^0,c
 10325  003F90  0E00               	movlw	0
 10326  003F92  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10327  003F94  6E0A               	movwf	(??___fleq+1)^0,c
 10328  003F96  0E80               	movlw	128
 10329  003F98  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10330  003F9A  6E0B               	movwf	(??___fleq+2)^0,c
 10331  003F9C  0E7F               	movlw	127
 10332  003F9E  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10333  003FA0  6E0C               	movwf	(??___fleq+3)^0,c
 10334  003FA2  5009               	movf	??___fleq^0,w,c
 10335  003FA4  100A               	iorwf	(??___fleq+1)^0,w,c
 10336  003FA6  100B               	iorwf	(??___fleq+2)^0,w,c
 10337  003FA8  100C               	iorwf	(??___fleq+3)^0,w,c
 10338  003FAA  A4D8               	btfss	status,2,c
 10339  003FAC  EFDA  F01F         	goto	u4141
 10340  003FB0  EFDC  F01F         	goto	u4140
 10341  003FB4                     u4141:
 10342  003FB4  EFE4  F01F         	goto	l4390
 10343  003FB8                     u4140:
 10344  003FB8  0E00               	movlw	0
 10345  003FBA  6E01               	movwf	___fleq@ff1^0,c
 10346  003FBC  0E00               	movlw	0
 10347  003FBE  6E02               	movwf	(___fleq@ff1+1)^0,c
 10348  003FC0  0E00               	movlw	0
 10349  003FC2  6E03               	movwf	(___fleq@ff1+2)^0,c
 10350  003FC4  0E00               	movlw	0
 10351  003FC6  6E04               	movwf	(___fleq@ff1+3)^0,c
 10352  003FC8                     l4390:
 10353  003FC8  0E00               	movlw	0
 10354  003FCA  1405               	andwf	___fleq@ff2^0,w,c
 10355  003FCC  6E09               	movwf	??___fleq^0,c
 10356  003FCE  0E00               	movlw	0
 10357  003FD0  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10358  003FD2  6E0A               	movwf	(??___fleq+1)^0,c
 10359  003FD4  0E80               	movlw	128
 10360  003FD6  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10361  003FD8  6E0B               	movwf	(??___fleq+2)^0,c
 10362  003FDA  0E7F               	movlw	127
 10363  003FDC  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10364  003FDE  6E0C               	movwf	(??___fleq+3)^0,c
 10365  003FE0  5009               	movf	??___fleq^0,w,c
 10366  003FE2  100A               	iorwf	(??___fleq+1)^0,w,c
 10367  003FE4  100B               	iorwf	(??___fleq+2)^0,w,c
 10368  003FE6  100C               	iorwf	(??___fleq+3)^0,w,c
 10369  003FE8  A4D8               	btfss	status,2,c
 10370  003FEA  EFF9  F01F         	goto	u4151
 10371  003FEE  EFFB  F01F         	goto	u4150
 10372  003FF2                     u4151:
 10373  003FF2  EF03  F020         	goto	l4394
 10374  003FF6                     u4150:
 10375  003FF6  0E00               	movlw	0
 10376  003FF8  6E05               	movwf	___fleq@ff2^0,c
 10377  003FFA  0E00               	movlw	0
 10378  003FFC  6E06               	movwf	(___fleq@ff2+1)^0,c
 10379  003FFE  0E00               	movlw	0
 10380  004000  6E07               	movwf	(___fleq@ff2+2)^0,c
 10381  004002  0E00               	movlw	0
 10382  004004  6E08               	movwf	(___fleq@ff2+3)^0,c
 10383  004006                     l4394:
 10384  004006  5005               	movf	___fleq@ff2^0,w,c
 10385  004008  1801               	xorwf	___fleq@ff1^0,w,c
 10386  00400A  E10F               	bnz	u4160
 10387  00400C  5006               	movf	(___fleq@ff2+1)^0,w,c
 10388  00400E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10389  004010  E10C               	bnz	u4160
 10390  004012  5007               	movf	(___fleq@ff2+2)^0,w,c
 10391  004014  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10392  004016  E109               	bnz	u4160
 10393  004018  5008               	movf	(___fleq@ff2+3)^0,w,c
 10394  00401A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10395  00401C  B4D8               	btfsc	status,2,c
 10396  00401E  EF13  F020         	goto	u4161
 10397  004022  EF15  F020         	goto	u4160
 10398  004026                     u4161:
 10399  004026  EF18  F020         	goto	l4398
 10400  00402A                     u4160:
 10401  00402A  90D8               	bcf	status,0,c
 10402  00402C  EF19  F020         	goto	l855
 10403  004030                     l4398:
 10404  004030  80D8               	bsf	status,0,c
 10405  004032                     l855:
 10406  004032  0012               	return		;funcret
 10407  004034                     __end_of___fleq:
 10408                           	callstack 0
 10409                           
 10410 ;; *************** function ___fldiv *****************
 10411 ;; Defined at:
 10412 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;  b               4   43[COMRAM] unsigned char 
 10415 ;;  a               4   47[COMRAM] unsigned char 
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;  grs             4   62[COMRAM] unsigned long 
 10418 ;;  rem             4   55[COMRAM] unsigned long 
 10419 ;;  new_exp         2   60[COMRAM] short 
 10420 ;;  aexp            1   67[COMRAM] unsigned char 
 10421 ;;  bexp            1   66[COMRAM] unsigned char 
 10422 ;;  sign            1   59[COMRAM] unsigned char 
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  4   43[COMRAM] unsigned char 
 10425 ;; Registers used:
 10426 ;;		wreg, status,2, status,0
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10432 ;;      Params:         8       0       0       0       0       0       0       0       0
 10433 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10434 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10435 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10436 ;;Total ram usage:       25 bytes
 10437 ;; Hardware stack levels used: 1
 10438 ;; This function calls:
 10439 ;;		Nothing
 10440 ;; This function is called by:
 10441 ;;		_ReadADC
 10442 ;;		_USART_Init
 10443 ;;		_efgtoa
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           	psect	text49
 10448  0023A6                     __ptext49:
 10449                           	callstack 0
 10450  0023A6                     ___fldiv:
 10451                           	callstack 29
 10452  0023A6  502F               	movf	(___fldiv@b+3)^0,w,c
 10453  0023A8  0B80               	andlw	128
 10454  0023AA  6E3C               	movwf	___fldiv@sign^0,c
 10455  0023AC  502F               	movf	(___fldiv@b+3)^0,w,c
 10456  0023AE  242F               	addwf	(___fldiv@b+3)^0,w,c
 10457  0023B0  6E43               	movwf	___fldiv@bexp^0,c
 10458  0023B2  AE2E               	btfss	(___fldiv@b+2)^0,7,c
 10459  0023B4  EFDE  F011         	goto	u3601
 10460  0023B8  EFE0  F011         	goto	u3600
 10461  0023BC                     u3601:
 10462  0023BC  EFE1  F011         	goto	l4038
 10463  0023C0                     u3600:
 10464  0023C0  8043               	bsf	___fldiv@bexp^0,0,c
 10465  0023C2                     l4038:
 10466  0023C2  5043               	movf	___fldiv@bexp^0,w,c
 10467  0023C4  B4D8               	btfsc	status,2,c
 10468  0023C6  EFE7  F011         	goto	u3611
 10469  0023CA  EFE9  F011         	goto	u3610
 10470  0023CE                     u3611:
 10471  0023CE  EFFE  F011         	goto	l4048
 10472  0023D2                     u3610:
 10473  0023D2  2843               	incf	___fldiv@bexp^0,w,c
 10474  0023D4  A4D8               	btfss	status,2,c
 10475  0023D6  EFEF  F011         	goto	u3621
 10476  0023DA  EFF1  F011         	goto	u3620
 10477  0023DE                     u3621:
 10478  0023DE  EFF9  F011         	goto	l4044
 10479  0023E2                     u3620:
 10480  0023E2  0E00               	movlw	0
 10481  0023E4  6E2C               	movwf	___fldiv@b^0,c
 10482  0023E6  0E00               	movlw	0
 10483  0023E8  6E2D               	movwf	(___fldiv@b+1)^0,c
 10484  0023EA  0E00               	movlw	0
 10485  0023EC  6E2E               	movwf	(___fldiv@b+2)^0,c
 10486  0023EE  0E00               	movlw	0
 10487  0023F0  6E2F               	movwf	(___fldiv@b+3)^0,c
 10488  0023F2                     l4044:
 10489  0023F2  8E2E               	bsf	(___fldiv@b+2)^0,7,c
 10490  0023F4  0E00               	movlw	0
 10491  0023F6  6E2F               	movwf	(___fldiv@b+3)^0,c
 10492  0023F8  EF06  F012         	goto	l4050
 10493  0023FC                     l4048:
 10494  0023FC  0E00               	movlw	0
 10495  0023FE  6E2C               	movwf	___fldiv@b^0,c
 10496  002400  0E00               	movlw	0
 10497  002402  6E2D               	movwf	(___fldiv@b+1)^0,c
 10498  002404  0E00               	movlw	0
 10499  002406  6E2E               	movwf	(___fldiv@b+2)^0,c
 10500  002408  0E00               	movlw	0
 10501  00240A  6E2F               	movwf	(___fldiv@b+3)^0,c
 10502  00240C                     l4050:
 10503  00240C  5033               	movf	(___fldiv@a+3)^0,w,c
 10504  00240E  0B80               	andlw	128
 10505  002410  1A3C               	xorwf	___fldiv@sign^0,f,c
 10506  002412  5033               	movf	(___fldiv@a+3)^0,w,c
 10507  002414  2433               	addwf	(___fldiv@a+3)^0,w,c
 10508  002416  6E44               	movwf	___fldiv@aexp^0,c
 10509  002418  AE32               	btfss	(___fldiv@a+2)^0,7,c
 10510  00241A  EF11  F012         	goto	u3631
 10511  00241E  EF13  F012         	goto	u3630
 10512  002422                     u3631:
 10513  002422  EF14  F012         	goto	l4058
 10514  002426                     u3630:
 10515  002426  8044               	bsf	___fldiv@aexp^0,0,c
 10516  002428                     l4058:
 10517  002428  5044               	movf	___fldiv@aexp^0,w,c
 10518  00242A  B4D8               	btfsc	status,2,c
 10519  00242C  EF1A  F012         	goto	u3641
 10520  002430  EF1C  F012         	goto	u3640
 10521  002434                     u3641:
 10522  002434  EF31  F012         	goto	l4068
 10523  002438                     u3640:
 10524  002438  2844               	incf	___fldiv@aexp^0,w,c
 10525  00243A  A4D8               	btfss	status,2,c
 10526  00243C  EF22  F012         	goto	u3651
 10527  002440  EF24  F012         	goto	u3650
 10528  002444                     u3651:
 10529  002444  EF2C  F012         	goto	l4064
 10530  002448                     u3650:
 10531  002448  0E00               	movlw	0
 10532  00244A  6E30               	movwf	___fldiv@a^0,c
 10533  00244C  0E00               	movlw	0
 10534  00244E  6E31               	movwf	(___fldiv@a+1)^0,c
 10535  002450  0E00               	movlw	0
 10536  002452  6E32               	movwf	(___fldiv@a+2)^0,c
 10537  002454  0E00               	movlw	0
 10538  002456  6E33               	movwf	(___fldiv@a+3)^0,c
 10539  002458                     l4064:
 10540  002458  8E32               	bsf	(___fldiv@a+2)^0,7,c
 10541  00245A  0E00               	movlw	0
 10542  00245C  6E33               	movwf	(___fldiv@a+3)^0,c
 10543  00245E  EF39  F012         	goto	l4070
 10544  002462                     l4068:
 10545  002462  0E00               	movlw	0
 10546  002464  6E30               	movwf	___fldiv@a^0,c
 10547  002466  0E00               	movlw	0
 10548  002468  6E31               	movwf	(___fldiv@a+1)^0,c
 10549  00246A  0E00               	movlw	0
 10550  00246C  6E32               	movwf	(___fldiv@a+2)^0,c
 10551  00246E  0E00               	movlw	0
 10552  002470  6E33               	movwf	(___fldiv@a+3)^0,c
 10553  002472                     l4070:
 10554  002472  5030               	movf	___fldiv@a^0,w,c
 10555  002474  1031               	iorwf	(___fldiv@a+1)^0,w,c
 10556  002476  1032               	iorwf	(___fldiv@a+2)^0,w,c
 10557  002478  1033               	iorwf	(___fldiv@a+3)^0,w,c
 10558  00247A  A4D8               	btfss	status,2,c
 10559  00247C  EF42  F012         	goto	u3661
 10560  002480  EF44  F012         	goto	u3660
 10561  002484                     u3661:
 10562  002484  EF5C  F012         	goto	l4082
 10563  002488                     u3660:
 10564  002488  0E00               	movlw	0
 10565  00248A  6E2C               	movwf	___fldiv@b^0,c
 10566  00248C  0E00               	movlw	0
 10567  00248E  6E2D               	movwf	(___fldiv@b+1)^0,c
 10568  002490  0E00               	movlw	0
 10569  002492  6E2E               	movwf	(___fldiv@b+2)^0,c
 10570  002494  0E00               	movlw	0
 10571  002496  6E2F               	movwf	(___fldiv@b+3)^0,c
 10572  002498  0E80               	movlw	128
 10573  00249A  122E               	iorwf	(___fldiv@b+2)^0,f,c
 10574  00249C  0E7F               	movlw	127
 10575  00249E  122F               	iorwf	(___fldiv@b+3)^0,f,c
 10576  0024A0                     l4076:
 10577  0024A0  503C               	movf	___fldiv@sign^0,w,c
 10578  0024A2  122F               	iorwf	(___fldiv@b+3)^0,f,c
 10579  0024A4  C02C  F02C         	movff	___fldiv@b,?___fldiv
 10580  0024A8  C02D  F02D         	movff	___fldiv@b+1,?___fldiv+1
 10581  0024AC  C02E  F02E         	movff	___fldiv@b+2,?___fldiv+2
 10582  0024B0  C02F  F02F         	movff	___fldiv@b+3,?___fldiv+3
 10583  0024B4  EF9F  F013         	goto	l1178
 10584  0024B8                     l4082:
 10585  0024B8  5043               	movf	___fldiv@bexp^0,w,c
 10586  0024BA  A4D8               	btfss	status,2,c
 10587  0024BC  EF62  F012         	goto	u3671
 10588  0024C0  EF64  F012         	goto	u3670
 10589  0024C4                     u3671:
 10590  0024C4  EF6E  F012         	goto	l4090
 10591  0024C8                     u3670:
 10592  0024C8  0E00               	movlw	0
 10593  0024CA  6E2C               	movwf	?___fldiv^0,c
 10594  0024CC  0E00               	movlw	0
 10595  0024CE  6E2D               	movwf	(?___fldiv+1)^0,c
 10596  0024D0  0E00               	movlw	0
 10597  0024D2  6E2E               	movwf	(?___fldiv+2)^0,c
 10598  0024D4  0E00               	movlw	0
 10599  0024D6  6E2F               	movwf	(?___fldiv+3)^0,c
 10600  0024D8  EF9F  F013         	goto	l1178
 10601  0024DC                     l4090:
 10602  0024DC  5044               	movf	___fldiv@aexp^0,w,c
 10603  0024DE  C043  F034         	movff	___fldiv@bexp,??___fldiv
 10604  0024E2  6A35               	clrf	(??___fldiv+1)^0,c
 10605  0024E4  5E34               	subwf	??___fldiv^0,f,c
 10606  0024E6  0E00               	movlw	0
 10607  0024E8  5A35               	subwfb	(??___fldiv+1)^0,f,c
 10608  0024EA  0E7F               	movlw	127
 10609  0024EC  2434               	addwf	??___fldiv^0,w,c
 10610  0024EE  6E3D               	movwf	___fldiv@new_exp^0,c
 10611  0024F0  0E00               	movlw	0
 10612  0024F2  2035               	addwfc	(??___fldiv+1)^0,w,c
 10613  0024F4  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 10614  0024F6  C02C  F038         	movff	___fldiv@b,___fldiv@rem
 10615  0024FA  C02D  F039         	movff	___fldiv@b+1,___fldiv@rem+1
 10616  0024FE  C02E  F03A         	movff	___fldiv@b+2,___fldiv@rem+2
 10617  002502  C02F  F03B         	movff	___fldiv@b+3,___fldiv@rem+3
 10618  002506  0E00               	movlw	0
 10619  002508  6E2C               	movwf	___fldiv@b^0,c
 10620  00250A  0E00               	movlw	0
 10621  00250C  6E2D               	movwf	(___fldiv@b+1)^0,c
 10622  00250E  0E00               	movlw	0
 10623  002510  6E2E               	movwf	(___fldiv@b+2)^0,c
 10624  002512  0E00               	movlw	0
 10625  002514  6E2F               	movwf	(___fldiv@b+3)^0,c
 10626  002516  0E00               	movlw	0
 10627  002518  6E3F               	movwf	___fldiv@grs^0,c
 10628  00251A  0E00               	movlw	0
 10629  00251C  6E40               	movwf	(___fldiv@grs+1)^0,c
 10630  00251E  0E00               	movlw	0
 10631  002520  6E41               	movwf	(___fldiv@grs+2)^0,c
 10632  002522  0E00               	movlw	0
 10633  002524  6E42               	movwf	(___fldiv@grs+3)^0,c
 10634  002526  0E00               	movlw	0
 10635  002528  6E44               	movwf	___fldiv@aexp^0,c
 10636  00252A  EFCF  F012         	goto	l1180
 10637  00252E                     l4100:
 10638  00252E  5044               	movf	___fldiv@aexp^0,w,c
 10639  002530  B4D8               	btfsc	status,2,c
 10640  002532  EF9D  F012         	goto	u3681
 10641  002536  EF9F  F012         	goto	u3680
 10642  00253A                     u3681:
 10643  00253A  EFB6  F012         	goto	l4108
 10644  00253E                     u3680:
 10645  00253E  90D8               	bcf	status,0,c
 10646  002540  3638               	rlcf	___fldiv@rem^0,f,c
 10647  002542  3639               	rlcf	(___fldiv@rem+1)^0,f,c
 10648  002544  363A               	rlcf	(___fldiv@rem+2)^0,f,c
 10649  002546  363B               	rlcf	(___fldiv@rem+3)^0,f,c
 10650  002548  90D8               	bcf	status,0,c
 10651  00254A  362C               	rlcf	___fldiv@b^0,f,c
 10652  00254C  362D               	rlcf	(___fldiv@b+1)^0,f,c
 10653  00254E  362E               	rlcf	(___fldiv@b+2)^0,f,c
 10654  002550  362F               	rlcf	(___fldiv@b+3)^0,f,c
 10655  002552  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 10656  002554  EFAE  F012         	goto	u3691
 10657  002558  EFB0  F012         	goto	u3690
 10658  00255C                     u3691:
 10659  00255C  EFB1  F012         	goto	l1183
 10660  002560                     u3690:
 10661  002560  802C               	bsf	___fldiv@b^0,0,c
 10662  002562                     l1183:
 10663  002562  90D8               	bcf	status,0,c
 10664  002564  363F               	rlcf	___fldiv@grs^0,f,c
 10665  002566  3640               	rlcf	(___fldiv@grs+1)^0,f,c
 10666  002568  3641               	rlcf	(___fldiv@grs+2)^0,f,c
 10667  00256A  3642               	rlcf	(___fldiv@grs+3)^0,f,c
 10668  00256C                     l4108:
 10669  00256C  5030               	movf	___fldiv@a^0,w,c
 10670  00256E  5C38               	subwf	___fldiv@rem^0,w,c
 10671  002570  5031               	movf	(___fldiv@a+1)^0,w,c
 10672  002572  5839               	subwfb	(___fldiv@rem+1)^0,w,c
 10673  002574  5032               	movf	(___fldiv@a+2)^0,w,c
 10674  002576  583A               	subwfb	(___fldiv@rem+2)^0,w,c
 10675  002578  5033               	movf	(___fldiv@a+3)^0,w,c
 10676  00257A  583B               	subwfb	(___fldiv@rem+3)^0,w,c
 10677  00257C  A0D8               	btfss	status,0,c
 10678  00257E  EFC3  F012         	goto	u3701
 10679  002582  EFC5  F012         	goto	u3700
 10680  002586                     u3701:
 10681  002586  EFCE  F012         	goto	l4114
 10682  00258A                     u3700:
 10683  00258A  8C42               	bsf	(___fldiv@grs+3)^0,6,c
 10684  00258C  5030               	movf	___fldiv@a^0,w,c
 10685  00258E  5E38               	subwf	___fldiv@rem^0,f,c
 10686  002590  5031               	movf	(___fldiv@a+1)^0,w,c
 10687  002592  5A39               	subwfb	(___fldiv@rem+1)^0,f,c
 10688  002594  5032               	movf	(___fldiv@a+2)^0,w,c
 10689  002596  5A3A               	subwfb	(___fldiv@rem+2)^0,f,c
 10690  002598  5033               	movf	(___fldiv@a+3)^0,w,c
 10691  00259A  5A3B               	subwfb	(___fldiv@rem+3)^0,f,c
 10692  00259C                     l4114:
 10693  00259C  2A44               	incf	___fldiv@aexp^0,f,c
 10694  00259E                     l1180:
 10695  00259E  0E19               	movlw	25
 10696  0025A0  6444               	cpfsgt	___fldiv@aexp^0,c
 10697  0025A2  EFD5  F012         	goto	u3711
 10698  0025A6  EFD7  F012         	goto	u3710
 10699  0025AA                     u3711:
 10700  0025AA  EF97  F012         	goto	l4100
 10701  0025AE                     u3710:
 10702  0025AE  5038               	movf	___fldiv@rem^0,w,c
 10703  0025B0  1039               	iorwf	(___fldiv@rem+1)^0,w,c
 10704  0025B2  103A               	iorwf	(___fldiv@rem+2)^0,w,c
 10705  0025B4  103B               	iorwf	(___fldiv@rem+3)^0,w,c
 10706  0025B6  B4D8               	btfsc	status,2,c
 10707  0025B8  EFE0  F012         	goto	u3721
 10708  0025BC  EFE2  F012         	goto	u3720
 10709  0025C0                     u3721:
 10710  0025C0  EFFA  F012         	goto	l4126
 10711  0025C4                     u3720:
 10712  0025C4  803F               	bsf	___fldiv@grs^0,0,c
 10713  0025C6  EFFA  F012         	goto	l4126
 10714  0025CA                     l4120:
 10715  0025CA  90D8               	bcf	status,0,c
 10716  0025CC  362C               	rlcf	___fldiv@b^0,f,c
 10717  0025CE  362D               	rlcf	(___fldiv@b+1)^0,f,c
 10718  0025D0  362E               	rlcf	(___fldiv@b+2)^0,f,c
 10719  0025D2  362F               	rlcf	(___fldiv@b+3)^0,f,c
 10720  0025D4  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 10721  0025D6  EFEF  F012         	goto	u3731
 10722  0025DA  EFF1  F012         	goto	u3730
 10723  0025DE                     u3731:
 10724  0025DE  EFF2  F012         	goto	l1189
 10725  0025E2                     u3730:
 10726  0025E2  802C               	bsf	___fldiv@b^0,0,c
 10727  0025E4                     l1189:
 10728  0025E4  90D8               	bcf	status,0,c
 10729  0025E6  363F               	rlcf	___fldiv@grs^0,f,c
 10730  0025E8  3640               	rlcf	(___fldiv@grs+1)^0,f,c
 10731  0025EA  3641               	rlcf	(___fldiv@grs+2)^0,f,c
 10732  0025EC  3642               	rlcf	(___fldiv@grs+3)^0,f,c
 10733  0025EE  063D               	decf	___fldiv@new_exp^0,f,c
 10734  0025F0  A0D8               	btfss	status,0,c
 10735  0025F2  063E               	decf	(___fldiv@new_exp+1)^0,f,c
 10736  0025F4                     l4126:
 10737  0025F4  AE2E               	btfss	(___fldiv@b+2)^0,7,c
 10738  0025F6  EFFF  F012         	goto	u3741
 10739  0025FA  EF01  F013         	goto	u3740
 10740  0025FE                     u3741:
 10741  0025FE  EFE5  F012         	goto	l4120
 10742  002602                     u3740:
 10743  002602  0E00               	movlw	0
 10744  002604  6E44               	movwf	___fldiv@aexp^0,c
 10745  002606  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 10746  002608  EF08  F013         	goto	u3751
 10747  00260C  EF0A  F013         	goto	u3750
 10748  002610                     u3751:
 10749  002610  EF2E  F013         	goto	l1191
 10750  002614                     u3750:
 10751  002614  0EFF               	movlw	255
 10752  002616  143F               	andwf	___fldiv@grs^0,w,c
 10753  002618  6E34               	movwf	??___fldiv^0,c
 10754  00261A  0EFF               	movlw	255
 10755  00261C  1440               	andwf	(___fldiv@grs+1)^0,w,c
 10756  00261E  6E35               	movwf	(??___fldiv+1)^0,c
 10757  002620  0EFF               	movlw	255
 10758  002622  1441               	andwf	(___fldiv@grs+2)^0,w,c
 10759  002624  6E36               	movwf	(??___fldiv+2)^0,c
 10760  002626  0E7F               	movlw	127
 10761  002628  1442               	andwf	(___fldiv@grs+3)^0,w,c
 10762  00262A  6E37               	movwf	(??___fldiv+3)^0,c
 10763  00262C  5034               	movf	??___fldiv^0,w,c
 10764  00262E  1035               	iorwf	(??___fldiv+1)^0,w,c
 10765  002630  1036               	iorwf	(??___fldiv+2)^0,w,c
 10766  002632  1037               	iorwf	(??___fldiv+3)^0,w,c
 10767  002634  B4D8               	btfsc	status,2,c
 10768  002636  EF1F  F013         	goto	u3761
 10769  00263A  EF21  F013         	goto	u3760
 10770  00263E                     u3761:
 10771  00263E  EF25  F013         	goto	l1192
 10772  002642                     u3760:
 10773  002642                     l4134:
 10774  002642  0E01               	movlw	1
 10775  002644  6E44               	movwf	___fldiv@aexp^0,c
 10776  002646  EF2E  F013         	goto	l1191
 10777  00264A                     l1192:
 10778  00264A  A02C               	btfss	___fldiv@b^0,0,c
 10779  00264C  EF2A  F013         	goto	u3771
 10780  002650  EF2C  F013         	goto	u3770
 10781  002654                     u3771:
 10782  002654  EF2E  F013         	goto	l1191
 10783  002658                     u3770:
 10784  002658  EF21  F013         	goto	l4134
 10785  00265C                     l1191:
 10786  00265C  5044               	movf	___fldiv@aexp^0,w,c
 10787  00265E  B4D8               	btfsc	status,2,c
 10788  002660  EF34  F013         	goto	u3781
 10789  002664  EF36  F013         	goto	u3780
 10790  002668                     u3781:
 10791  002668  EF5A  F013         	goto	l4146
 10792  00266C                     u3780:
 10793  00266C  0E01               	movlw	1
 10794  00266E  262C               	addwf	___fldiv@b^0,f,c
 10795  002670  0E00               	movlw	0
 10796  002672  222D               	addwfc	(___fldiv@b+1)^0,f,c
 10797  002674  222E               	addwfc	(___fldiv@b+2)^0,f,c
 10798  002676  222F               	addwfc	(___fldiv@b+3)^0,f,c
 10799  002678  A02F               	btfss	(___fldiv@b+3)^0,0,c
 10800  00267A  EF41  F013         	goto	u3791
 10801  00267E  EF43  F013         	goto	u3790
 10802  002682                     u3791:
 10803  002682  EF5A  F013         	goto	l4146
 10804  002686                     u3790:
 10805  002686  C02C  F034         	movff	___fldiv@b,??___fldiv
 10806  00268A  C02D  F035         	movff	___fldiv@b+1,??___fldiv+1
 10807  00268E  C02E  F036         	movff	___fldiv@b+2,??___fldiv+2
 10808  002692  C02F  F037         	movff	___fldiv@b+3,??___fldiv+3
 10809  002696  3437               	rlcf	(??___fldiv+3)^0,w,c
 10810  002698  3237               	rrcf	(??___fldiv+3)^0,f,c
 10811  00269A  3236               	rrcf	(??___fldiv+2)^0,f,c
 10812  00269C  3235               	rrcf	(??___fldiv+1)^0,f,c
 10813  00269E  3234               	rrcf	??___fldiv^0,f,c
 10814  0026A0  C034  F02C         	movff	??___fldiv,___fldiv@b
 10815  0026A4  C035  F02D         	movff	??___fldiv+1,___fldiv@b+1
 10816  0026A8  C036  F02E         	movff	??___fldiv+2,___fldiv@b+2
 10817  0026AC  C037  F02F         	movff	??___fldiv+3,___fldiv@b+3
 10818  0026B0  4A3D               	infsnz	___fldiv@new_exp^0,f,c
 10819  0026B2  2A3E               	incf	(___fldiv@new_exp+1)^0,f,c
 10820  0026B4                     l4146:
 10821  0026B4  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10822  0026B6  EF65  F013         	goto	u3801
 10823  0026BA  503E               	movf	(___fldiv@new_exp+1)^0,w,c
 10824  0026BC  E108               	bnz	u3800
 10825  0026BE  283D               	incf	___fldiv@new_exp^0,w,c
 10826  0026C0  A0D8               	btfss	status,0,c
 10827  0026C2  EF65  F013         	goto	u3801
 10828  0026C6  EF67  F013         	goto	u3800
 10829  0026CA                     u3801:
 10830  0026CA  EF72  F013         	goto	l4150
 10831  0026CE                     u3800:
 10832  0026CE  0E00               	movlw	0
 10833  0026D0  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 10834  0026D2  683D               	setf	___fldiv@new_exp^0,c
 10835  0026D4  0E00               	movlw	0
 10836  0026D6  6E2C               	movwf	___fldiv@b^0,c
 10837  0026D8  0E00               	movlw	0
 10838  0026DA  6E2D               	movwf	(___fldiv@b+1)^0,c
 10839  0026DC  0E00               	movlw	0
 10840  0026DE  6E2E               	movwf	(___fldiv@b+2)^0,c
 10841  0026E0  0E00               	movlw	0
 10842  0026E2  6E2F               	movwf	(___fldiv@b+3)^0,c
 10843  0026E4                     l4150:
 10844  0026E4  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10845  0026E6  EF7F  F013         	goto	u3810
 10846  0026EA  503E               	movf	(___fldiv@new_exp+1)^0,w,c
 10847  0026EC  E106               	bnz	u3811
 10848  0026EE  043D               	decf	___fldiv@new_exp^0,w,c
 10849  0026F0  B0D8               	btfsc	status,0,c
 10850  0026F2  EF7D  F013         	goto	u3811
 10851  0026F6  EF7F  F013         	goto	u3810
 10852  0026FA                     u3811:
 10853  0026FA  EF8D  F013         	goto	l4154
 10854  0026FE                     u3810:
 10855  0026FE  0E00               	movlw	0
 10856  002700  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 10857  002702  0E00               	movlw	0
 10858  002704  6E3D               	movwf	___fldiv@new_exp^0,c
 10859  002706  0E00               	movlw	0
 10860  002708  6E2C               	movwf	___fldiv@b^0,c
 10861  00270A  0E00               	movlw	0
 10862  00270C  6E2D               	movwf	(___fldiv@b+1)^0,c
 10863  00270E  0E00               	movlw	0
 10864  002710  6E2E               	movwf	(___fldiv@b+2)^0,c
 10865  002712  0E00               	movlw	0
 10866  002714  6E2F               	movwf	(___fldiv@b+3)^0,c
 10867  002716  0E00               	movlw	0
 10868  002718  6E3C               	movwf	___fldiv@sign^0,c
 10869  00271A                     l4154:
 10870  00271A  C03D  F043         	movff	___fldiv@new_exp,___fldiv@bexp
 10871  00271E  A043               	btfss	___fldiv@bexp^0,0,c
 10872  002720  EF94  F013         	goto	u3821
 10873  002724  EF96  F013         	goto	u3820
 10874  002728                     u3821:
 10875  002728  EF99  F013         	goto	l4160
 10876  00272C                     u3820:
 10877  00272C  8E2E               	bsf	(___fldiv@b+2)^0,7,c
 10878  00272E  EF9A  F013         	goto	l4162
 10879  002732                     l4160:
 10880  002732  9E2E               	bcf	(___fldiv@b+2)^0,7,c
 10881  002734                     l4162:
 10882  002734  90D8               	bcf	status,0,c
 10883  002736  3043               	rrcf	___fldiv@bexp^0,w,c
 10884  002738  6E2F               	movwf	(___fldiv@b+3)^0,c
 10885  00273A  EF50  F012         	goto	l4076
 10886  00273E                     l1178:
 10887  00273E  0012               	return		;funcret
 10888  002740                     __end_of___fldiv:
 10889                           	callstack 0
 10890                           
 10891 ;; *************** function ___awmod *****************
 10892 ;; Defined at:
 10893 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;  dividend        2    0[COMRAM] int 
 10896 ;;  divisor         2    2[COMRAM] int 
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;  sign            1    5[COMRAM] unsigned char 
 10899 ;;  counter         1    4[COMRAM] unsigned char 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  2    0[COMRAM] int 
 10902 ;; Registers used:
 10903 ;;		wreg, status,2, status,0
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10909 ;;      Params:         4       0       0       0       0       0       0       0       0
 10910 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10911 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10912 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10913 ;;Total ram usage:        6 bytes
 10914 ;; Hardware stack levels used: 1
 10915 ;; This function calls:
 10916 ;;		Nothing
 10917 ;; This function is called by:
 10918 ;;		_efgtoa
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           	psect	text50
 10923  003EDA                     __ptext50:
 10924                           	callstack 0
 10925  003EDA                     ___awmod:
 10926                           	callstack 25
 10927  003EDA  0E00               	movlw	0
 10928  003EDC  6E06               	movwf	___awmod@sign^0,c
 10929  003EDE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 10930  003EE0  EF76  F01F         	goto	u4080
 10931  003EE4  EF74  F01F         	goto	u4081
 10932  003EE8                     u4081:
 10933  003EE8  EF7C  F01F         	goto	l4358
 10934  003EEC                     u4080:
 10935  003EEC  6C01               	negf	___awmod@dividend^0,c
 10936  003EEE  1E02               	comf	(___awmod@dividend+1)^0,f,c
 10937  003EF0  B0D8               	btfsc	status,0,c
 10938  003EF2  2A02               	incf	(___awmod@dividend+1)^0,f,c
 10939  003EF4  0E01               	movlw	1
 10940  003EF6  6E06               	movwf	___awmod@sign^0,c
 10941  003EF8                     l4358:
 10942  003EF8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 10943  003EFA  EF83  F01F         	goto	u4090
 10944  003EFE  EF81  F01F         	goto	u4091
 10945  003F02                     u4091:
 10946  003F02  EF87  F01F         	goto	l4362
 10947  003F06                     u4090:
 10948  003F06  6C03               	negf	___awmod@divisor^0,c
 10949  003F08  1E04               	comf	(___awmod@divisor+1)^0,f,c
 10950  003F0A  B0D8               	btfsc	status,0,c
 10951  003F0C  2A04               	incf	(___awmod@divisor+1)^0,f,c
 10952  003F0E                     l4362:
 10953  003F0E  5003               	movf	___awmod@divisor^0,w,c
 10954  003F10  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 10955  003F12  B4D8               	btfsc	status,2,c
 10956  003F14  EF8E  F01F         	goto	u4101
 10957  003F18  EF90  F01F         	goto	u4100
 10958  003F1C                     u4101:
 10959  003F1C  EFB4  F01F         	goto	l4378
 10960  003F20                     u4100:
 10961  003F20  0E01               	movlw	1
 10962  003F22  6E05               	movwf	___awmod@counter^0,c
 10963  003F24  EF98  F01F         	goto	l4368
 10964  003F28                     l4366:
 10965  003F28  90D8               	bcf	status,0,c
 10966  003F2A  3603               	rlcf	___awmod@divisor^0,f,c
 10967  003F2C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 10968  003F2E  2A05               	incf	___awmod@counter^0,f,c
 10969  003F30                     l4368:
 10970  003F30  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 10971  003F32  EF9D  F01F         	goto	u4111
 10972  003F36  EF9F  F01F         	goto	u4110
 10973  003F3A                     u4111:
 10974  003F3A  EF94  F01F         	goto	l4366
 10975  003F3E                     u4110:
 10976  003F3E                     l4370:
 10977  003F3E  5003               	movf	___awmod@divisor^0,w,c
 10978  003F40  5C01               	subwf	___awmod@dividend^0,w,c
 10979  003F42  5004               	movf	(___awmod@divisor+1)^0,w,c
 10980  003F44  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 10981  003F46  A0D8               	btfss	status,0,c
 10982  003F48  EFA8  F01F         	goto	u4121
 10983  003F4C  EFAA  F01F         	goto	u4120
 10984  003F50                     u4121:
 10985  003F50  EFAE  F01F         	goto	l4374
 10986  003F54                     u4120:
 10987  003F54  5003               	movf	___awmod@divisor^0,w,c
 10988  003F56  5E01               	subwf	___awmod@dividend^0,f,c
 10989  003F58  5004               	movf	(___awmod@divisor+1)^0,w,c
 10990  003F5A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 10991  003F5C                     l4374:
 10992  003F5C  90D8               	bcf	status,0,c
 10993  003F5E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 10994  003F60  3203               	rrcf	___awmod@divisor^0,f,c
 10995  003F62  2E05               	decfsz	___awmod@counter^0,f,c
 10996  003F64  EF9F  F01F         	goto	l4370
 10997  003F68                     l4378:
 10998  003F68  5006               	movf	___awmod@sign^0,w,c
 10999  003F6A  B4D8               	btfsc	status,2,c
 11000  003F6C  EFBA  F01F         	goto	u4131
 11001  003F70  EFBC  F01F         	goto	u4130
 11002  003F74                     u4131:
 11003  003F74  EFC0  F01F         	goto	l4382
 11004  003F78                     u4130:
 11005  003F78  6C01               	negf	___awmod@dividend^0,c
 11006  003F7A  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11007  003F7C  B0D8               	btfsc	status,0,c
 11008  003F7E  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11009  003F80                     l4382:
 11010  003F80  C001  F001         	movff	___awmod@dividend,?___awmod
 11011  003F84  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11012  003F88  0012               	return		;funcret
 11013  003F8A                     __end_of___awmod:
 11014                           	callstack 0
 11015                           
 11016 ;; *************** function ___awdiv *****************
 11017 ;; Defined at:
 11018 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;  dividend        2    0[COMRAM] int 
 11021 ;;  divisor         2    2[COMRAM] int 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  quotient        2    6[COMRAM] int 
 11024 ;;  sign            1    5[COMRAM] unsigned char 
 11025 ;;  counter         1    4[COMRAM] unsigned char 
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  2    0[COMRAM] int 
 11028 ;; Registers used:
 11029 ;;		wreg, status,2, status,0
 11030 ;; Tracked objects:
 11031 ;;		On entry : 0/0
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11035 ;;      Params:         4       0       0       0       0       0       0       0       0
 11036 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11038 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11039 ;;Total ram usage:        8 bytes
 11040 ;; Hardware stack levels used: 1
 11041 ;; This function calls:
 11042 ;;		Nothing
 11043 ;; This function is called by:
 11044 ;;		_efgtoa
 11045 ;; This function uses a non-reentrant model
 11046 ;;
 11047                           
 11048                           	psect	text51
 11049  003CA2                     __ptext51:
 11050                           	callstack 0
 11051  003CA2                     ___awdiv:
 11052                           	callstack 25
 11053  003CA2  0E00               	movlw	0
 11054  003CA4  6E06               	movwf	___awdiv@sign^0,c
 11055  003CA6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11056  003CA8  EF5A  F01E         	goto	u4020
 11057  003CAC  EF58  F01E         	goto	u4021
 11058  003CB0                     u4021:
 11059  003CB0  EF60  F01E         	goto	l4314
 11060  003CB4                     u4020:
 11061  003CB4  6C03               	negf	___awdiv@divisor^0,c
 11062  003CB6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11063  003CB8  B0D8               	btfsc	status,0,c
 11064  003CBA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11065  003CBC  0E01               	movlw	1
 11066  003CBE  6E06               	movwf	___awdiv@sign^0,c
 11067  003CC0                     l4314:
 11068  003CC0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11069  003CC2  EF67  F01E         	goto	u4030
 11070  003CC6  EF65  F01E         	goto	u4031
 11071  003CCA                     u4031:
 11072  003CCA  EF6D  F01E         	goto	l4320
 11073  003CCE                     u4030:
 11074  003CCE  6C01               	negf	___awdiv@dividend^0,c
 11075  003CD0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11076  003CD2  B0D8               	btfsc	status,0,c
 11077  003CD4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11078  003CD6  0E01               	movlw	1
 11079  003CD8  1A06               	xorwf	___awdiv@sign^0,f,c
 11080  003CDA                     l4320:
 11081  003CDA  0E00               	movlw	0
 11082  003CDC  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11083  003CDE  0E00               	movlw	0
 11084  003CE0  6E07               	movwf	___awdiv@quotient^0,c
 11085  003CE2  5003               	movf	___awdiv@divisor^0,w,c
 11086  003CE4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11087  003CE6  B4D8               	btfsc	status,2,c
 11088  003CE8  EF78  F01E         	goto	u4041
 11089  003CEC  EF7A  F01E         	goto	u4040
 11090  003CF0                     u4041:
 11091  003CF0  EFA2  F01E         	goto	l4342
 11092  003CF4                     u4040:
 11093  003CF4  0E01               	movlw	1
 11094  003CF6  6E05               	movwf	___awdiv@counter^0,c
 11095  003CF8  EF82  F01E         	goto	l4328
 11096  003CFC                     l4326:
 11097  003CFC  90D8               	bcf	status,0,c
 11098  003CFE  3603               	rlcf	___awdiv@divisor^0,f,c
 11099  003D00  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11100  003D02  2A05               	incf	___awdiv@counter^0,f,c
 11101  003D04                     l4328:
 11102  003D04  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11103  003D06  EF87  F01E         	goto	u4051
 11104  003D0A  EF89  F01E         	goto	u4050
 11105  003D0E                     u4051:
 11106  003D0E  EF7E  F01E         	goto	l4326
 11107  003D12                     u4050:
 11108  003D12                     l4330:
 11109  003D12  90D8               	bcf	status,0,c
 11110  003D14  3607               	rlcf	___awdiv@quotient^0,f,c
 11111  003D16  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11112  003D18  5003               	movf	___awdiv@divisor^0,w,c
 11113  003D1A  5C01               	subwf	___awdiv@dividend^0,w,c
 11114  003D1C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11115  003D1E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11116  003D20  A0D8               	btfss	status,0,c
 11117  003D22  EF95  F01E         	goto	u4061
 11118  003D26  EF97  F01E         	goto	u4060
 11119  003D2A                     u4061:
 11120  003D2A  EF9C  F01E         	goto	l4338
 11121  003D2E                     u4060:
 11122  003D2E  5003               	movf	___awdiv@divisor^0,w,c
 11123  003D30  5E01               	subwf	___awdiv@dividend^0,f,c
 11124  003D32  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11125  003D34  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11126  003D36  8007               	bsf	___awdiv@quotient^0,0,c
 11127  003D38                     l4338:
 11128  003D38  90D8               	bcf	status,0,c
 11129  003D3A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11130  003D3C  3203               	rrcf	___awdiv@divisor^0,f,c
 11131  003D3E  2E05               	decfsz	___awdiv@counter^0,f,c
 11132  003D40  EF89  F01E         	goto	l4330
 11133  003D44                     l4342:
 11134  003D44  5006               	movf	___awdiv@sign^0,w,c
 11135  003D46  B4D8               	btfsc	status,2,c
 11136  003D48  EFA8  F01E         	goto	u4071
 11137  003D4C  EFAA  F01E         	goto	u4070
 11138  003D50                     u4071:
 11139  003D50  EFAE  F01E         	goto	l4346
 11140  003D54                     u4070:
 11141  003D54  6C07               	negf	___awdiv@quotient^0,c
 11142  003D56  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11143  003D58  B0D8               	btfsc	status,0,c
 11144  003D5A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11145  003D5C                     l4346:
 11146  003D5C  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11147  003D60  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11148  003D64  0012               	return		;funcret
 11149  003D66                     __end_of___awdiv:
 11150                           	callstack 0
 11151                           
 11152 ;; *************** function _atoi *****************
 11153 ;; Defined at:
 11154 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11157 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
 11158 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 11159 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
 11160 ;; Auto vars:     Size  Location     Type
 11161 ;;  n               2   20[COMRAM] int 
 11162 ;;  neg             2   13[COMRAM] int 
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  2    7[COMRAM] int 
 11165 ;; Registers used:
 11166 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11172 ;;      Params:         2       0       0       0       0       0       0       0       0
 11173 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11174 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11175 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11176 ;;Total ram usage:       15 bytes
 11177 ;; Hardware stack levels used: 1
 11178 ;; Hardware stack levels required when called: 1
 11179 ;; This function calls:
 11180 ;;		___wmul
 11181 ;;		_isdigit
 11182 ;;		_isspace
 11183 ;; This function is called by:
 11184 ;;		_vfpfcnvrt
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text52
 11189  00334E                     __ptext52:
 11190                           	callstack 0
 11191  00334E                     _atoi:
 11192                           	callstack 25
 11193  00334E  0E00               	movlw	0
 11194  003350  6E16               	movwf	(atoi@n+1)^0,c
 11195  003352  0E00               	movlw	0
 11196  003354  6E15               	movwf	atoi@n^0,c
 11197  003356  0E00               	movlw	0
 11198  003358  6E0F               	movwf	(atoi@neg+1)^0,c
 11199  00335A  0E00               	movlw	0
 11200  00335C  6E0E               	movwf	atoi@neg^0,c
 11201  00335E  EFB3  F019         	goto	l4988
 11202  003362                     l4986:
 11203  003362  4A08               	infsnz	atoi@s^0,f,c
 11204  003364  2A09               	incf	(atoi@s+1)^0,f,c
 11205  003366                     l4988:
 11206  003366  0E01               	movlw	1
 11207  003368  6E14               	movwf	_atoi$1578^0,c
 11208  00336A  C008  FFF6         	movff	atoi@s,tblptrl
 11209  00336E  C009  FFF7         	movff	atoi@s+1,tblptrh
 11210  003372                     	if	0	;tblptru may be non-zero
 11211  003372                     	endif
 11212  003372                     	if	0	;tblptru may be non-zero
 11213  003372                     	endif
 11214  003372  0008               	tblrd		*
 11215  003374  50F5               	movf	tablat,w,c
 11216  003376  0A20               	xorlw	32
 11217  003378  B4D8               	btfsc	status,2,c
 11218  00337A  EFC1  F019         	goto	u5391
 11219  00337E  EFC3  F019         	goto	u5390
 11220  003382                     u5391:
 11221  003382  EFE0  F019         	goto	l4996
 11222  003386                     u5390:
 11223  003386  0EF7               	movlw	247
 11224  003388  6E0A               	movwf	??_atoi^0,c
 11225  00338A  0EFF               	movlw	255
 11226  00338C  6E0B               	movwf	(??_atoi+1)^0,c
 11227  00338E  C008  FFF6         	movff	atoi@s,tblptrl
 11228  003392  C009  FFF7         	movff	atoi@s+1,tblptrh
 11229  003396                     	if	0	;tblptru may be non-zero
 11230  003396                     	endif
 11231  003396                     	if	0	;tblptru may be non-zero
 11232  003396                     	endif
 11233  003396  0008               	tblrd		*
 11234  003398  50F5               	movf	tablat,w,c
 11235  00339A  6E0C               	movwf	(??_atoi+2)^0,c
 11236  00339C  6A0D               	clrf	(??_atoi+3)^0,c
 11237  00339E  500A               	movf	??_atoi^0,w,c
 11238  0033A0  260C               	addwf	(??_atoi+2)^0,f,c
 11239  0033A2  500B               	movf	(??_atoi+1)^0,w,c
 11240  0033A4  220D               	addwfc	(??_atoi+3)^0,f,c
 11241  0033A6  500D               	movf	(??_atoi+3)^0,w,c
 11242  0033A8  E109               	bnz	u5400
 11243  0033AA  0E05               	movlw	5
 11244  0033AC  5C0C               	subwf	(??_atoi+2)^0,w,c
 11245  0033AE  A0D8               	btfss	status,0,c
 11246  0033B0  EFDC  F019         	goto	u5401
 11247  0033B4  EFDE  F019         	goto	u5400
 11248  0033B8                     u5401:
 11249  0033B8  EFE0  F019         	goto	l4996
 11250  0033BC                     u5400:
 11251  0033BC  0E00               	movlw	0
 11252  0033BE  6E14               	movwf	_atoi$1578^0,c
 11253  0033C0                     l4996:
 11254  0033C0  C014  F010         	movff	_atoi$1578,_atoi$1577
 11255  0033C4  6A11               	clrf	(_atoi$1577+1)^0,c
 11256  0033C6  5010               	movf	_atoi$1577^0,w,c
 11257  0033C8  1011               	iorwf	(_atoi$1577+1)^0,w,c
 11258  0033CA  A4D8               	btfss	status,2,c
 11259  0033CC  EFEA  F019         	goto	u5411
 11260  0033D0  EFEC  F019         	goto	u5410
 11261  0033D4                     u5411:
 11262  0033D4  EFB1  F019         	goto	l4986
 11263  0033D8                     u5410:
 11264  0033D8  EFF6  F019         	goto	l5006
 11265  0033DC                     l5002:
 11266  0033DC  0E00               	movlw	0
 11267  0033DE  6E0F               	movwf	(atoi@neg+1)^0,c
 11268  0033E0  0E01               	movlw	1
 11269  0033E2  6E0E               	movwf	atoi@neg^0,c
 11270  0033E4                     l5004:
 11271  0033E4  4A08               	infsnz	atoi@s^0,f,c
 11272  0033E6  2A09               	incf	(atoi@s+1)^0,f,c
 11273  0033E8  EF2B  F01A         	goto	l5012
 11274  0033EC                     l5006:
 11275  0033EC  C008  FFF6         	movff	atoi@s,tblptrl
 11276  0033F0  C009  FFF7         	movff	atoi@s+1,tblptrh
 11277  0033F4                     	if	0	;tblptru may be non-zero
 11278  0033F4                     	endif
 11279  0033F4                     	if	0	;tblptru may be non-zero
 11280  0033F4                     	endif
 11281  0033F4  0008               	tblrd		*
 11282  0033F6  50F5               	movf	tablat,w,c
 11283  0033F8  6E0A               	movwf	??_atoi^0,c
 11284  0033FA  6A0B               	clrf	(??_atoi+1)^0,c
 11285                           
 11286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11287                           ; Switch size 1, requested type "simple"
 11288                           ; Number of cases is 1, Range of values is 0 to 0
 11289                           ; switch strategies available:
 11290                           ; Name         Instructions Cycles
 11291                           ; simple_byte            4     3 (average)
 11292                           ;	Chosen strategy is simple_byte
 11293  0033FC  500B               	movf	(??_atoi+1)^0,w,c
 11294  0033FE  0A00               	xorlw	0	; case 0
 11295  003400  B4D8               	btfsc	status,2,c
 11296  003402  EF05  F01A         	goto	l5880
 11297  003406  EF2B  F01A         	goto	l5012
 11298  00340A                     l5880:
 11299                           
 11300                           ; Switch size 1, requested type "simple"
 11301                           ; Number of cases is 2, Range of values is 43 to 45
 11302                           ; switch strategies available:
 11303                           ; Name         Instructions Cycles
 11304                           ; simple_byte            7     4 (average)
 11305                           ;	Chosen strategy is simple_byte
 11306  00340A  500A               	movf	??_atoi^0,w,c
 11307  00340C  0A2B               	xorlw	43	; case 43
 11308  00340E  B4D8               	btfsc	status,2,c
 11309  003410  EFF2  F019         	goto	l5004
 11310  003414  0A06               	xorlw	6	; case 45
 11311  003416  B4D8               	btfsc	status,2,c
 11312  003418  EFEE  F019         	goto	l5002
 11313  00341C  EF2B  F01A         	goto	l5012
 11314  003420                     l5008:
 11315  003420  C015  F001         	movff	atoi@n,___wmul@multiplier
 11316  003424  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11317  003428  0E00               	movlw	0
 11318  00342A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11319  00342C  0E0A               	movlw	10
 11320  00342E  6E03               	movwf	___wmul@multiplicand^0,c
 11321  003430  EC2C  F025         	call	___wmul	;wreg free
 11322  003434  C008  FFF6         	movff	atoi@s,tblptrl
 11323  003438  C009  FFF7         	movff	atoi@s+1,tblptrh
 11324  00343C                     	if	0	;tblptru may be non-zero
 11325  00343C                     	endif
 11326  00343C                     	if	0	;tblptru may be non-zero
 11327  00343C                     	endif
 11328  00343C  0008               	tblrd		*
 11329  00343E  50F5               	movf	tablat,w,c
 11330  003440  5E01               	subwf	?___wmul^0,f,c
 11331  003442  0E00               	movlw	0
 11332  003444  5A02               	subwfb	(?___wmul+1)^0,f,c
 11333  003446  0E30               	movlw	48
 11334  003448  2401               	addwf	?___wmul^0,w,c
 11335  00344A  6E15               	movwf	atoi@n^0,c
 11336  00344C  0E00               	movlw	0
 11337  00344E  2002               	addwfc	(?___wmul+1)^0,w,c
 11338  003450  6E16               	movwf	(atoi@n+1)^0,c
 11339  003452  EFF2  F019         	goto	l5004
 11340  003456                     l5012:
 11341  003456  0ED0               	movlw	208
 11342  003458  6E0A               	movwf	??_atoi^0,c
 11343  00345A  0EFF               	movlw	255
 11344  00345C  6E0B               	movwf	(??_atoi+1)^0,c
 11345  00345E  C008  FFF6         	movff	atoi@s,tblptrl
 11346  003462  C009  FFF7         	movff	atoi@s+1,tblptrh
 11347  003466                     	if	0	;tblptru may be non-zero
 11348  003466                     	endif
 11349  003466                     	if	0	;tblptru may be non-zero
 11350  003466                     	endif
 11351  003466  0008               	tblrd		*
 11352  003468  50F5               	movf	tablat,w,c
 11353  00346A  6E0C               	movwf	(??_atoi+2)^0,c
 11354  00346C  6A0D               	clrf	(??_atoi+3)^0,c
 11355  00346E  500A               	movf	??_atoi^0,w,c
 11356  003470  260C               	addwf	(??_atoi+2)^0,f,c
 11357  003472  500B               	movf	(??_atoi+1)^0,w,c
 11358  003474  220D               	addwfc	(??_atoi+3)^0,f,c
 11359  003476  500D               	movf	(??_atoi+3)^0,w,c
 11360  003478  E10A               	bnz	u5420
 11361  00347A  0E0A               	movlw	10
 11362  00347C  5C0C               	subwf	(??_atoi+2)^0,w,c
 11363  00347E  A0D8               	btfss	status,0,c
 11364  003480  EF44  F01A         	goto	u5421
 11365  003484  EF47  F01A         	goto	u5420
 11366  003488                     u5421:
 11367  003488  0E01               	movlw	1
 11368  00348A  EF48  F01A         	goto	u5430
 11369  00348E                     u5420:
 11370  00348E  0E00               	movlw	0
 11371  003490                     u5430:
 11372  003490  6E12               	movwf	_atoi$1579^0,c
 11373  003492  6A13               	clrf	(_atoi$1579+1)^0,c
 11374  003494  5012               	movf	_atoi$1579^0,w,c
 11375  003496  1013               	iorwf	(_atoi$1579+1)^0,w,c
 11376  003498  A4D8               	btfss	status,2,c
 11377  00349A  EF51  F01A         	goto	u5441
 11378  00349E  EF53  F01A         	goto	u5440
 11379  0034A2                     u5441:
 11380  0034A2  EF10  F01A         	goto	l5008
 11381  0034A6                     u5440:
 11382  0034A6  500E               	movf	atoi@neg^0,w,c
 11383  0034A8  100F               	iorwf	(atoi@neg+1)^0,w,c
 11384  0034AA  A4D8               	btfss	status,2,c
 11385  0034AC  EF5A  F01A         	goto	u5451
 11386  0034B0  EF5C  F01A         	goto	u5450
 11387  0034B4                     u5451:
 11388  0034B4  EF6A  F01A         	goto	l1532
 11389  0034B8                     u5450:
 11390  0034B8  C015  F00A         	movff	atoi@n,??_atoi
 11391  0034BC  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11392  0034C0  1E0A               	comf	??_atoi^0,f,c
 11393  0034C2  1E0B               	comf	(??_atoi+1)^0,f,c
 11394  0034C4  4A0A               	infsnz	??_atoi^0,f,c
 11395  0034C6  2A0B               	incf	(??_atoi+1)^0,f,c
 11396  0034C8  C00A  F008         	movff	??_atoi,?_atoi
 11397  0034CC  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11398  0034D0  EF6E  F01A         	goto	l1535
 11399  0034D4                     l1532:
 11400  0034D4  C015  F008         	movff	atoi@n,?_atoi
 11401  0034D8  C016  F009         	movff	atoi@n+1,?_atoi+1
 11402  0034DC                     l1535:
 11403  0034DC  0012               	return		;funcret
 11404  0034DE                     __end_of_atoi:
 11405                           	callstack 0
 11406                           
 11407 ;; *************** function _isspace *****************
 11408 ;; Defined at:
 11409 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;  c               2    0[COMRAM] int 
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;		None
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  2    0[COMRAM] int 
 11416 ;; Registers used:
 11417 ;;		wreg, status,2, status,0
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11423 ;;      Params:         2       0       0       0       0       0       0       0       0
 11424 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11425 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11426 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11427 ;;Total ram usage:        7 bytes
 11428 ;; Hardware stack levels used: 1
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		_atoi
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text53
 11437  0044C4                     __ptext53:
 11438                           	callstack 0
 11439  0044C4                     _isspace:
 11440                           	callstack 25
 11441  0044C4  0E01               	movlw	1
 11442  0044C6  6E07               	movwf	_isspace$1617^0,c
 11443  0044C8  0E20               	movlw	32
 11444  0044CA  1801               	xorwf	isspace@c^0,w,c
 11445  0044CC  1002               	iorwf	(isspace@c+1)^0,w,c
 11446  0044CE  B4D8               	btfsc	status,2,c
 11447  0044D0  EF6C  F022         	goto	u4631
 11448  0044D4  EF6E  F022         	goto	u4630
 11449  0044D8                     u4631:
 11450  0044D8  EF87  F022         	goto	l4588
 11451  0044DC                     u4630:
 11452  0044DC  0EF7               	movlw	247
 11453  0044DE  6E03               	movwf	??_isspace^0,c
 11454  0044E0  0EFF               	movlw	255
 11455  0044E2  6E04               	movwf	(??_isspace+1)^0,c
 11456  0044E4  C001  F005         	movff	isspace@c,??_isspace+2
 11457  0044E8  C002  F006         	movff	isspace@c+1,??_isspace+3
 11458  0044EC  5003               	movf	??_isspace^0,w,c
 11459  0044EE  2605               	addwf	(??_isspace+2)^0,f,c
 11460  0044F0  5004               	movf	(??_isspace+1)^0,w,c
 11461  0044F2  2206               	addwfc	(??_isspace+3)^0,f,c
 11462  0044F4  5006               	movf	(??_isspace+3)^0,w,c
 11463  0044F6  E109               	bnz	u4640
 11464  0044F8  0E05               	movlw	5
 11465  0044FA  5C05               	subwf	(??_isspace+2)^0,w,c
 11466  0044FC  A0D8               	btfss	status,0,c
 11467  0044FE  EF83  F022         	goto	u4641
 11468  004502  EF85  F022         	goto	u4640
 11469  004506                     u4641:
 11470  004506  EF87  F022         	goto	l4588
 11471  00450A                     u4640:
 11472  00450A  0E00               	movlw	0
 11473  00450C  6E07               	movwf	_isspace$1617^0,c
 11474  00450E                     l4588:
 11475  00450E  C007  F001         	movff	_isspace$1617,?_isspace
 11476  004512  6A02               	clrf	(?_isspace+1)^0,c
 11477  004514  0012               	return		;funcret
 11478  004516                     __end_of_isspace:
 11479                           	callstack 0
 11480                           
 11481 ;; *************** function _isdigit *****************
 11482 ;; Defined at:
 11483 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  c               2    0[COMRAM] int 
 11486 ;; Auto vars:     Size  Location     Type
 11487 ;;		None
 11488 ;; Return value:  Size  Location     Type
 11489 ;;                  2    0[COMRAM] int 
 11490 ;; Registers used:
 11491 ;;		wreg, status,2, status,0
 11492 ;; Tracked objects:
 11493 ;;		On entry : 0/0
 11494 ;;		On exit  : 0/0
 11495 ;;		Unchanged: 0/0
 11496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11497 ;;      Params:         2       0       0       0       0       0       0       0       0
 11498 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11499 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11500 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11501 ;;Total ram usage:        6 bytes
 11502 ;; Hardware stack levels used: 1
 11503 ;; This function calls:
 11504 ;;		Nothing
 11505 ;; This function is called by:
 11506 ;;		_vfpfcnvrt
 11507 ;;		_atoi
 11508 ;; This function uses a non-reentrant model
 11509 ;;
 11510                           
 11511                           	psect	text54
 11512  0048BE                     __ptext54:
 11513                           	callstack 0
 11514  0048BE                     _isdigit:
 11515                           	callstack 26
 11516  0048BE  0ED0               	movlw	208
 11517  0048C0  6E03               	movwf	??_isdigit^0,c
 11518  0048C2  0EFF               	movlw	255
 11519  0048C4  6E04               	movwf	(??_isdigit+1)^0,c
 11520  0048C6  C001  F005         	movff	isdigit@c,??_isdigit+2
 11521  0048CA  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11522  0048CE  5003               	movf	??_isdigit^0,w,c
 11523  0048D0  2605               	addwf	(??_isdigit+2)^0,f,c
 11524  0048D2  5004               	movf	(??_isdigit+1)^0,w,c
 11525  0048D4  2206               	addwfc	(??_isdigit+3)^0,f,c
 11526  0048D6  5006               	movf	(??_isdigit+3)^0,w,c
 11527  0048D8  E10A               	bnz	u4610
 11528  0048DA  0E0A               	movlw	10
 11529  0048DC  5C05               	subwf	(??_isdigit+2)^0,w,c
 11530  0048DE  A0D8               	btfss	status,0,c
 11531  0048E0  EF74  F024         	goto	u4611
 11532  0048E4  EF77  F024         	goto	u4610
 11533  0048E8                     u4611:
 11534  0048E8  0E01               	movlw	1
 11535  0048EA  EF78  F024         	goto	u4620
 11536  0048EE                     u4610:
 11537  0048EE  0E00               	movlw	0
 11538  0048F0                     u4620:
 11539  0048F0  6E01               	movwf	?_isdigit^0,c
 11540  0048F2  6A02               	clrf	(?_isdigit+1)^0,c
 11541  0048F4  0012               	return		;funcret
 11542  0048F6                     __end_of_isdigit:
 11543                           	callstack 0
 11544                           
 11545 ;; *************** function ___wmul *****************
 11546 ;; Defined at:
 11547 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 11548 ;; Parameters:    Size  Location     Type
 11549 ;;  multiplier      2    0[COMRAM] unsigned int 
 11550 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11551 ;; Auto vars:     Size  Location     Type
 11552 ;;  product         2    4[COMRAM] unsigned int 
 11553 ;; Return value:  Size  Location     Type
 11554 ;;                  2    0[COMRAM] unsigned int 
 11555 ;; Registers used:
 11556 ;;		wreg, status,2, status,0, prodl, prodh
 11557 ;; Tracked objects:
 11558 ;;		On entry : 0/0
 11559 ;;		On exit  : 0/0
 11560 ;;		Unchanged: 0/0
 11561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11562 ;;      Params:         4       0       0       0       0       0       0       0       0
 11563 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11564 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11565 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11566 ;;Total ram usage:        6 bytes
 11567 ;; Hardware stack levels used: 1
 11568 ;; This function calls:
 11569 ;;		Nothing
 11570 ;; This function is called by:
 11571 ;;		_atoi
 11572 ;; This function uses a non-reentrant model
 11573 ;;
 11574                           
 11575                           	psect	text55
 11576  004A58                     __ptext55:
 11577                           	callstack 0
 11578  004A58                     ___wmul:
 11579                           	callstack 25
 11580  004A58  5001               	movf	___wmul@multiplier^0,w,c
 11581  004A5A  0203               	mulwf	___wmul@multiplicand^0,c
 11582  004A5C  CFF3 F005          	movff	prodl,___wmul@product
 11583  004A60  CFF4 F006          	movff	prodh,___wmul@product+1
 11584  004A64  5001               	movf	___wmul@multiplier^0,w,c
 11585  004A66  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11586  004A68  50F3               	movf	243,w,c
 11587  004A6A  2606               	addwf	(___wmul@product+1)^0,f,c
 11588  004A6C  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11589  004A6E  0203               	mulwf	___wmul@multiplicand^0,c
 11590  004A70  50F3               	movf	243,w,c
 11591  004A72  2606               	addwf	(___wmul@product+1)^0,f,c
 11592  004A74  C005  F001         	movff	___wmul@product,?___wmul
 11593  004A78  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11594  004A7C  0012               	return		;funcret
 11595  004A7E                     __end_of___wmul:
 11596                           	callstack 0
 11597                           
 11598 ;; *************** function _LCD_String_xy *****************
 11599 ;; Defined at:
 11600 ;;		line 124 in file "LCD_caracter.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  row             1    wreg     unsigned char 
 11603 ;;  pos             1   10[COMRAM] unsigned char 
 11604 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 11605 ;;		 -> Stemp(20), RTC_Calendario@date(10), RTC_Calendario@hours(10), STR_2(3), 
 11606 ;;		 -> STR_1(3), 
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;  row             1   13[COMRAM] unsigned char 
 11609 ;;  location        1   14[COMRAM] unsigned char 
 11610 ;; Return value:  Size  Location     Type
 11611 ;;                  1    wreg      void 
 11612 ;; Registers used:
 11613 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11614 ;; Tracked objects:
 11615 ;;		On entry : 0/0
 11616 ;;		On exit  : 0/0
 11617 ;;		Unchanged: 0/0
 11618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11619 ;;      Params:         3       0       0       0       0       0       0       0       0
 11620 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11621 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11622 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11623 ;;Total ram usage:        5 bytes
 11624 ;; Hardware stack levels used: 1
 11625 ;; Hardware stack levels required when called: 3
 11626 ;; This function calls:
 11627 ;;		_LCD_Command
 11628 ;;		_LCD_String
 11629 ;; This function is called by:
 11630 ;;		_RTC_Calendario
 11631 ;;		_Sunny_State
 11632 ;;		_Cloudy_State
 11633 ;;		_Rainy_State
 11634 ;; This function uses a non-reentrant model
 11635 ;;
 11636                           
 11637                           	psect	text56
 11638  004760                     __ptext56:
 11639                           	callstack 0
 11640  004760                     _LCD_String_xy:
 11641                           	callstack 26
 11642                           
 11643                           ;incstack = 0
 11644                           ;LCD_String_xy@row stored from wreg
 11645  004760  6E0E               	movwf	LCD_String_xy@row^0,c
 11646  004762                     
 11647                           ;LCD_caracter.c: 127:     if(row<=1)
 11648  004762  0E02               	movlw	2
 11649  004764  600E               	cpfslt	LCD_String_xy@row^0,c
 11650  004766  EFB7  F023         	goto	u5981
 11651  00476A  EFB9  F023         	goto	u5980
 11652  00476E                     u5981:
 11653  00476E  EFC2  F023         	goto	l5418
 11654  004772                     u5980:
 11655  004772                     
 11656                           ;LCD_caracter.c: 128:     {;LCD_caracter.c: 129:         location=(0x80) | ((pos) & 0x0f
      +                          );
 11657  004772  500B               	movf	LCD_String_xy@pos^0,w,c
 11658  004774  0B0F               	andlw	15
 11659  004776  0980               	iorlw	128
 11660  004778  6E0F               	movwf	LCD_String_xy@location^0,c
 11661  00477A                     
 11662                           ;LCD_caracter.c: 130:         LCD_Command(location);
 11663  00477A  500F               	movf	LCD_String_xy@location^0,w,c
 11664  00477C  ECB3  F022         	call	_LCD_Command
 11665                           
 11666                           ;LCD_caracter.c: 131:     }
 11667  004780  EFC9  F023         	goto	l5422
 11668  004784                     l5418:
 11669                           
 11670                           ;LCD_caracter.c: 133:     {;LCD_caracter.c: 134:         location=(0xC0) | ((pos) & 0x0f
      +                          );
 11671  004784  500B               	movf	LCD_String_xy@pos^0,w,c
 11672  004786  0B0F               	andlw	15
 11673  004788  09C0               	iorlw	192
 11674  00478A  6E0F               	movwf	LCD_String_xy@location^0,c
 11675  00478C                     
 11676                           ;LCD_caracter.c: 135:         LCD_Command(location);
 11677  00478C  500F               	movf	LCD_String_xy@location^0,w,c
 11678  00478E  ECB3  F022         	call	_LCD_Command
 11679  004792                     l5422:
 11680                           
 11681                           ;LCD_caracter.c: 139:     LCD_String(msg);
 11682  004792  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 11683  004796  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 11684  00479A  EC28  F021         	call	_LCD_String	;wreg free
 11685  00479E  0012               	return		;funcret
 11686  0047A0                     __end_of_LCD_String_xy:
 11687                           	callstack 0
 11688                           
 11689 ;; *************** function _LCD_String *****************
 11690 ;; Defined at:
 11691 ;;		line 101 in file "LCD_caracter.c"
 11692 ;; Parameters:    Size  Location     Type
 11693 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 11694 ;;		 -> Stemp(20), STR_18(4), STR_17(4), STR_16(4), 
 11695 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
 11696 ;;		 -> RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), 
 11697 ;;		 -> RTC_Calendario@mins(10), RTC_Calendario@secs(10), STR_2(3), STR_1(3), 
 11698 ;; Auto vars:     Size  Location     Type
 11699 ;;		None
 11700 ;; Return value:  Size  Location     Type
 11701 ;;                  1    wreg      void 
 11702 ;; Registers used:
 11703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11704 ;; Tracked objects:
 11705 ;;		On entry : 0/0
 11706 ;;		On exit  : 0/0
 11707 ;;		Unchanged: 0/0
 11708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11709 ;;      Params:         2       0       0       0       0       0       0       0       0
 11710 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11711 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11712 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11713 ;;Total ram usage:        2 bytes
 11714 ;; Hardware stack levels used: 1
 11715 ;; Hardware stack levels required when called: 2
 11716 ;; This function calls:
 11717 ;;		_LCD_Char
 11718 ;; This function is called by:
 11719 ;;		_LCD_String_xy
 11720 ;;		_RTC_Calendario
 11721 ;; This function uses a non-reentrant model
 11722 ;;
 11723                           
 11724                           	psect	text57
 11725  004250                     __ptext57:
 11726                           	callstack 0
 11727  004250                     _LCD_String:
 11728                           	callstack 26
 11729  004250                     
 11730                           ;LCD_caracter.c: 101: void LCD_String(const char *msg);LCD_caracter.c: 102: {;LCD_caract
      +                          er.c: 103:  while((*msg)!=0)
 11731  004250  EF3E  F021         	goto	l5260
 11732  004254                     l5256:
 11733                           
 11734                           ;LCD_caracter.c: 104:  {;LCD_caracter.c: 105:    LCD_Char(*msg);
 11735  004254  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11736  004258  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11737  00425C  6AF8               	clrf	tblptru,c
 11738  00425E  0E07               	movlw	(high __ramtop+-1)
 11739  004260  64F7               	cpfsgt	tblptrh,c
 11740  004262  D003               	bra	u5737
 11741  004264  0008               	tblrd		*
 11742  004266  50F5               	movf	tablat,w,c
 11743  004268  D005               	bra	u5730
 11744  00426A                     u5737:
 11745  00426A  CFF6 FFE1          	movff	tblptrl,fsr1l
 11746  00426E  CFF7 FFE2          	movff	tblptrh,fsr1h
 11747  004272  50E7               	movf	indf1,w,c
 11748  004274                     u5730:
 11749  004274  ECD9  F022         	call	_LCD_Char
 11750  004278                     
 11751                           ;LCD_caracter.c: 106:    msg++;
 11752  004278  4A09               	infsnz	LCD_String@msg^0,f,c
 11753  00427A  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 11754  00427C                     l5260:
 11755                           
 11756                           ;LCD_caracter.c: 103:  while((*msg)!=0)
 11757  00427C  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11758  004280  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11759  004284  6AF8               	clrf	tblptru,c
 11760  004286  0E07               	movlw	(high __ramtop+-1)
 11761  004288  64F7               	cpfsgt	tblptrh,c
 11762  00428A  D003               	bra	u5747
 11763  00428C  0008               	tblrd		*
 11764  00428E  50F5               	movf	tablat,w,c
 11765  004290  D005               	bra	u5740
 11766  004292                     u5747:
 11767  004292  CFF6 FFE1          	movff	tblptrl,fsr1l
 11768  004296  CFF7 FFE2          	movff	tblptrh,fsr1h
 11769  00429A  50E7               	movf	indf1,w,c
 11770  00429C                     u5740:
 11771  00429C  0900               	iorlw	0
 11772  00429E  A4D8               	btfss	status,2,c
 11773  0042A0  EF54  F021         	goto	u5751
 11774  0042A4  EF56  F021         	goto	u5750
 11775  0042A8                     u5751:
 11776  0042A8  EF2A  F021         	goto	l5256
 11777  0042AC                     u5750:
 11778  0042AC  0012               	return		;funcret
 11779  0042AE                     __end_of_LCD_String:
 11780                           	callstack 0
 11781                           
 11782 ;; *************** function _LCD_Custom_Char *****************
 11783 ;; Defined at:
 11784 ;;		line 174 in file "LCD_caracter.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  loc             1    wreg     unsigned char 
 11787 ;;  msg             2    8[COMRAM] PTR unsigned char 
 11788 ;;		 -> character1(8), character3(8), character2(8), 
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;  loc             1   10[COMRAM] unsigned char 
 11791 ;;  i               1   11[COMRAM] unsigned char 
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  1    wreg      void 
 11794 ;; Registers used:
 11795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11801 ;;      Params:         2       0       0       0       0       0       0       0       0
 11802 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11804 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11805 ;;Total ram usage:        4 bytes
 11806 ;; Hardware stack levels used: 1
 11807 ;; Hardware stack levels required when called: 2
 11808 ;; This function calls:
 11809 ;;		_LCD_Char
 11810 ;;		_LCD_Command
 11811 ;; This function is called by:
 11812 ;;		_Sunny_State
 11813 ;;		_Cloudy_State
 11814 ;;		_Rainy_State
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818                           	psect	text58
 11819  004648                     __ptext58:
 11820                           	callstack 0
 11821  004648                     _LCD_Custom_Char:
 11822                           	callstack 27
 11823                           
 11824                           ;incstack = 0
 11825                           ;LCD_Custom_Char@loc stored from wreg
 11826  004648  6E0B               	movwf	LCD_Custom_Char@loc^0,c
 11827  00464A                     
 11828                           ;LCD_caracter.c: 174: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_
      +                          caracter.c: 175: {;LCD_caracter.c: 176:     unsigned char i;;LCD_caracter.c: 177:     if
      +                           (loc< 8 )
 11829  00464A  0E08               	movlw	8
 11830  00464C  600B               	cpfslt	LCD_Custom_Char@loc^0,c
 11831  00464E  EF2B  F023         	goto	u5991
 11832  004652  EF2D  F023         	goto	u5990
 11833  004656                     u5991:
 11834  004656  EF47  F023         	goto	l124
 11835  00465A                     u5990:
 11836  00465A                     
 11837                           ;LCD_caracter.c: 178:     {;LCD_caracter.c: 179:      LCD_Command ( 0x40 +(loc* 8 ));
 11838  00465A  500B               	movf	LCD_Custom_Char@loc^0,w,c
 11839  00465C  0D08               	mullw	8
 11840  00465E  50F3               	movf	243,w,c
 11841  004660  0F40               	addlw	64
 11842  004662  ECB3  F022         	call	_LCD_Command
 11843  004666                     
 11844                           ;LCD_caracter.c: 180:        for (i= 0 ;i< 8 ;i++)
 11845  004666  0E00               	movlw	0
 11846  004668  6E0C               	movwf	LCD_Custom_Char@i^0,c
 11847  00466A                     l5434:
 11848                           
 11849                           ;LCD_caracter.c: 181:            LCD_Char (msg[i]);
 11850  00466A  500C               	movf	LCD_Custom_Char@i^0,w,c
 11851  00466C  2409               	addwf	LCD_Custom_Char@msg^0,w,c
 11852  00466E  6ED9               	movwf	fsr2l,c
 11853  004670  0E00               	movlw	0
 11854  004672  200A               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
 11855  004674  6EDA               	movwf	fsr2h,c
 11856  004676  50DF               	movf	indf2,w,c
 11857  004678  ECD9  F022         	call	_LCD_Char
 11858  00467C  2A0C               	incf	LCD_Custom_Char@i^0,f,c
 11859  00467E  0E07               	movlw	7
 11860  004680  640C               	cpfsgt	LCD_Custom_Char@i^0,c
 11861  004682  EF45  F023         	goto	u6001
 11862  004686  EF47  F023         	goto	u6000
 11863  00468A                     u6001:
 11864  00468A  EF35  F023         	goto	l5434
 11865  00468E                     u6000:
 11866  00468E                     l124:
 11867  00468E  0012               	return		;funcret
 11868  004690                     __end_of_LCD_Custom_Char:
 11869                           	callstack 0
 11870                           
 11871 ;; *************** function _LCD_Command *****************
 11872 ;; Defined at:
 11873 ;;		line 48 in file "LCD_caracter.c"
 11874 ;; Parameters:    Size  Location     Type
 11875 ;;  cmd             1    wreg     unsigned char 
 11876 ;; Auto vars:     Size  Location     Type
 11877 ;;  cmd             1    7[COMRAM] unsigned char 
 11878 ;; Return value:  Size  Location     Type
 11879 ;;                  1    wreg      void 
 11880 ;; Registers used:
 11881 ;;		wreg, status,2, status,0, cstack
 11882 ;; Tracked objects:
 11883 ;;		On entry : 0/0
 11884 ;;		On exit  : 0/0
 11885 ;;		Unchanged: 0/0
 11886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11887 ;;      Params:         0       0       0       0       0       0       0       0       0
 11888 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11889 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11890 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11891 ;;Total ram usage:        2 bytes
 11892 ;; Hardware stack levels used: 1
 11893 ;; Hardware stack levels required when called: 1
 11894 ;; This function calls:
 11895 ;;		_LCD_MSdelay
 11896 ;; This function is called by:
 11897 ;;		_LCD_Init
 11898 ;;		_LCD_String_xy
 11899 ;;		_LCD_Clear
 11900 ;;		_LCD_Custom_Char
 11901 ;;		_Sunny_State
 11902 ;;		_Cloudy_State
 11903 ;;		_Rainy_State
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           	psect	text59
 11908  004566                     __ptext59:
 11909                           	callstack 0
 11910  004566                     _LCD_Command:
 11911                           	callstack 27
 11912                           
 11913                           ;incstack = 0
 11914                           ;LCD_Command@cmd stored from wreg
 11915  004566  6E08               	movwf	LCD_Command@cmd^0,c
 11916  004568                     
 11917                           ;LCD_caracter.c: 48: void LCD_Command(unsigned char cmd );LCD_caracter.c: 49: {;LCD_cara
      +                          cter.c: 50:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 11918  004568  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11919  00456C  0EF0               	movlw	240
 11920  00456E  1607               	andwf	??_LCD_Command^0,f,c
 11921  004570  508C               	movf	140,w,c	;volatile
 11922  004572  0B0F               	andlw	15
 11923  004574  1007               	iorwf	??_LCD_Command^0,w,c
 11924  004576  6E8C               	movwf	140,c	;volatile
 11925  004578                     
 11926                           ;LCD_caracter.c: 51:  LATD0 = 0;
 11927  004578  908C               	bcf	3980,0,c	;volatile
 11928  00457A                     
 11929                           ;LCD_caracter.c: 52:  LATD1 = 1;
 11930  00457A  828C               	bsf	3980,1,c	;volatile
 11931  00457C                     
 11932                           ;LCD_caracter.c: 53:  __nop();
 11933  00457C  F000               	nop	
 11934  00457E                     
 11935                           ;LCD_caracter.c: 54:  LATD1 = 0;
 11936  00457E  928C               	bcf	3980,1,c	;volatile
 11937  004580                     
 11938                           ;LCD_caracter.c: 55:  LCD_MSdelay(1);
 11939  004580  0E00               	movlw	0
 11940  004582  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 11941  004584  0E01               	movlw	1
 11942  004586  6E01               	movwf	LCD_MSdelay@val^0,c
 11943  004588  ECFF  F022         	call	_LCD_MSdelay	;wreg free
 11944  00458C                     
 11945                           ;LCD_caracter.c: 56:     LATD = (LATD & 0x0f) | (cmd<<4);
 11946  00458C  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11947  004590  3A07               	swapf	??_LCD_Command^0,f,c
 11948  004592  0EF0               	movlw	240
 11949  004594  1607               	andwf	??_LCD_Command^0,f,c
 11950  004596  508C               	movf	140,w,c	;volatile
 11951  004598  0B0F               	andlw	15
 11952  00459A  1007               	iorwf	??_LCD_Command^0,w,c
 11953  00459C  6E8C               	movwf	140,c	;volatile
 11954  00459E                     
 11955                           ;LCD_caracter.c: 57:  LATD1 = 1;
 11956  00459E  828C               	bsf	3980,1,c	;volatile
 11957  0045A0                     
 11958                           ;LCD_caracter.c: 58:  __nop();
 11959  0045A0  F000               	nop	
 11960  0045A2                     
 11961                           ;LCD_caracter.c: 59:  LATD1 = 0;
 11962  0045A2  928C               	bcf	3980,1,c	;volatile
 11963                           
 11964                           ;LCD_caracter.c: 60:  LCD_MSdelay(3);
 11965  0045A4  0E00               	movlw	0
 11966  0045A6  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 11967  0045A8  0E03               	movlw	3
 11968  0045AA  6E01               	movwf	LCD_MSdelay@val^0,c
 11969  0045AC  ECFF  F022         	call	_LCD_MSdelay	;wreg free
 11970  0045B0  0012               	return		;funcret
 11971  0045B2                     __end_of_LCD_Command:
 11972                           	callstack 0
 11973                           
 11974 ;; *************** function _LCD_Char *****************
 11975 ;; Defined at:
 11976 ;;		line 75 in file "LCD_caracter.c"
 11977 ;; Parameters:    Size  Location     Type
 11978 ;;  dat             1    wreg     unsigned char 
 11979 ;; Auto vars:     Size  Location     Type
 11980 ;;  dat             1    7[COMRAM] unsigned char 
 11981 ;; Return value:  Size  Location     Type
 11982 ;;                  1    wreg      void 
 11983 ;; Registers used:
 11984 ;;		wreg, status,2, status,0, cstack
 11985 ;; Tracked objects:
 11986 ;;		On entry : 0/0
 11987 ;;		On exit  : 0/0
 11988 ;;		Unchanged: 0/0
 11989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11990 ;;      Params:         0       0       0       0       0       0       0       0       0
 11991 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11992 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11993 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11994 ;;Total ram usage:        2 bytes
 11995 ;; Hardware stack levels used: 1
 11996 ;; Hardware stack levels required when called: 1
 11997 ;; This function calls:
 11998 ;;		_LCD_MSdelay
 11999 ;; This function is called by:
 12000 ;;		_LCD_String
 12001 ;;		_LCD_Custom_Char
 12002 ;;		_Sunny_State
 12003 ;;		_Cloudy_State
 12004 ;;		_Rainy_State
 12005 ;; This function uses a non-reentrant model
 12006 ;;
 12007                           
 12008                           	psect	text60
 12009  0045B2                     __ptext60:
 12010                           	callstack 0
 12011  0045B2                     _LCD_Char:
 12012                           	callstack 26
 12013                           
 12014                           ;incstack = 0
 12015                           ;LCD_Char@dat stored from wreg
 12016  0045B2  6E08               	movwf	LCD_Char@dat^0,c
 12017  0045B4                     
 12018                           ;LCD_caracter.c: 75: void LCD_Char(unsigned char dat);LCD_caracter.c: 76: {;LCD_caracter
      +                          .c: 77:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 12019  0045B4  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12020  0045B8  0EF0               	movlw	240
 12021  0045BA  1607               	andwf	??_LCD_Char^0,f,c
 12022  0045BC  508C               	movf	140,w,c	;volatile
 12023  0045BE  0B0F               	andlw	15
 12024  0045C0  1007               	iorwf	??_LCD_Char^0,w,c
 12025  0045C2  6E8C               	movwf	140,c	;volatile
 12026  0045C4                     
 12027                           ;LCD_caracter.c: 78:  LATD0 = 1;
 12028  0045C4  808C               	bsf	3980,0,c	;volatile
 12029  0045C6                     
 12030                           ;LCD_caracter.c: 79:  LATD1 = 1;
 12031  0045C6  828C               	bsf	3980,1,c	;volatile
 12032  0045C8                     
 12033                           ;LCD_caracter.c: 80:  __nop();
 12034  0045C8  F000               	nop	
 12035  0045CA                     
 12036                           ;LCD_caracter.c: 81:  LATD1 = 0;
 12037  0045CA  928C               	bcf	3980,1,c	;volatile
 12038  0045CC                     
 12039                           ;LCD_caracter.c: 82:  LCD_MSdelay(1);
 12040  0045CC  0E00               	movlw	0
 12041  0045CE  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12042  0045D0  0E01               	movlw	1
 12043  0045D2  6E01               	movwf	LCD_MSdelay@val^0,c
 12044  0045D4  ECFF  F022         	call	_LCD_MSdelay	;wreg free
 12045  0045D8                     
 12046                           ;LCD_caracter.c: 83:     LATD = (LATD & 0x0f) | (dat<<4);
 12047  0045D8  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12048  0045DC  3A07               	swapf	??_LCD_Char^0,f,c
 12049  0045DE  0EF0               	movlw	240
 12050  0045E0  1607               	andwf	??_LCD_Char^0,f,c
 12051  0045E2  508C               	movf	140,w,c	;volatile
 12052  0045E4  0B0F               	andlw	15
 12053  0045E6  1007               	iorwf	??_LCD_Char^0,w,c
 12054  0045E8  6E8C               	movwf	140,c	;volatile
 12055  0045EA                     
 12056                           ;LCD_caracter.c: 84:  LATD1 = 1;
 12057  0045EA  828C               	bsf	3980,1,c	;volatile
 12058  0045EC                     
 12059                           ;LCD_caracter.c: 85:  __nop();
 12060  0045EC  F000               	nop	
 12061  0045EE                     
 12062                           ;LCD_caracter.c: 86:  LATD1 = 0;
 12063  0045EE  928C               	bcf	3980,1,c	;volatile
 12064                           
 12065                           ;LCD_caracter.c: 87:  LCD_MSdelay(3);
 12066  0045F0  0E00               	movlw	0
 12067  0045F2  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12068  0045F4  0E03               	movlw	3
 12069  0045F6  6E01               	movwf	LCD_MSdelay@val^0,c
 12070  0045F8  ECFF  F022         	call	_LCD_MSdelay	;wreg free
 12071  0045FC  0012               	return		;funcret
 12072  0045FE                     __end_of_LCD_Char:
 12073                           	callstack 0
 12074                           
 12075 ;; *************** function _LCD_MSdelay *****************
 12076 ;; Defined at:
 12077 ;;		line 199 in file "LCD_caracter.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;  val             2    0[COMRAM] unsigned int 
 12080 ;; Auto vars:     Size  Location     Type
 12081 ;;  j               2    4[COMRAM] unsigned int 
 12082 ;;  i               2    2[COMRAM] unsigned int 
 12083 ;; Return value:  Size  Location     Type
 12084 ;;                  1    wreg      void 
 12085 ;; Registers used:
 12086 ;;		wreg, status,2, status,0
 12087 ;; Tracked objects:
 12088 ;;		On entry : 0/0
 12089 ;;		On exit  : 0/0
 12090 ;;		Unchanged: 0/0
 12091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12092 ;;      Params:         2       0       0       0       0       0       0       0       0
 12093 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12094 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12095 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12096 ;;Total ram usage:        6 bytes
 12097 ;; Hardware stack levels used: 1
 12098 ;; This function calls:
 12099 ;;		Nothing
 12100 ;; This function is called by:
 12101 ;;		_main
 12102 ;;		_LCD_Init
 12103 ;;		_LCD_Command
 12104 ;;		_LCD_Char
 12105 ;;		_LCD_Clear
 12106 ;;		_RTC_Calendario
 12107 ;; This function uses a non-reentrant model
 12108 ;;
 12109                           
 12110                           	psect	text61
 12111  0045FE                     __ptext61:
 12112                           	callstack 0
 12113  0045FE                     _LCD_MSdelay:
 12114                           	callstack 26
 12115  0045FE                     
 12116                           ;LCD_caracter.c: 199: void LCD_MSdelay(unsigned int val);LCD_caracter.c: 200: {;LCD_cara
      +                          cter.c: 201:  unsigned int i,j;;LCD_caracter.c: 202:  for(i=0;i<val;i++)
 12117  0045FE  0E00               	movlw	0
 12118  004600  6E04               	movwf	(LCD_MSdelay@i+1)^0,c
 12119  004602  0E00               	movlw	0
 12120  004604  6E03               	movwf	LCD_MSdelay@i^0,c
 12121  004606  EF18  F023         	goto	l4606
 12122  00460A                     l4594:
 12123                           
 12124                           ;LCD_caracter.c: 203:      for(j=0;j<165;j++);
 12125  00460A  0E00               	movlw	0
 12126  00460C  6E06               	movwf	(LCD_MSdelay@j+1)^0,c
 12127  00460E  0E00               	movlw	0
 12128  004610  6E05               	movwf	LCD_MSdelay@j^0,c
 12129  004612                     l4600:
 12130  004612  4A05               	infsnz	LCD_MSdelay@j^0,f,c
 12131  004614  2A06               	incf	(LCD_MSdelay@j+1)^0,f,c
 12132  004616  5006               	movf	(LCD_MSdelay@j+1)^0,w,c
 12133  004618  E109               	bnz	u4650
 12134  00461A  0EA5               	movlw	165
 12135  00461C  5C05               	subwf	LCD_MSdelay@j^0,w,c
 12136  00461E  A0D8               	btfss	status,0,c
 12137  004620  EF14  F023         	goto	u4651
 12138  004624  EF16  F023         	goto	u4650
 12139  004628                     u4651:
 12140  004628  EF09  F023         	goto	l4600
 12141  00462C                     u4650:
 12142  00462C  4A03               	infsnz	LCD_MSdelay@i^0,f,c
 12143  00462E  2A04               	incf	(LCD_MSdelay@i+1)^0,f,c
 12144  004630                     l4606:
 12145  004630  5001               	movf	LCD_MSdelay@val^0,w,c
 12146  004632  5C03               	subwf	LCD_MSdelay@i^0,w,c
 12147  004634  5002               	movf	(LCD_MSdelay@val+1)^0,w,c
 12148  004636  5804               	subwfb	(LCD_MSdelay@i+1)^0,w,c
 12149  004638  A0D8               	btfss	status,0,c
 12150  00463A  EF21  F023         	goto	u4661
 12151  00463E  EF23  F023         	goto	u4660
 12152  004642                     u4661:
 12153  004642  EF05  F023         	goto	l4594
 12154  004646                     u4660:
 12155  004646  0012               	return		;funcret
 12156  004648                     __end_of_LCD_MSdelay:
 12157                           	callstack 0
 12158                           
 12159 ;; *************** function _Alarm_Status *****************
 12160 ;; Defined at:
 12161 ;;		line 130 in file "Estados.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;		None
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;		None
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1    wreg      void 
 12168 ;; Registers used:
 12169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12175 ;;      Params:         0       0       0       0       0       0       0       0       0
 12176 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12177 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12178 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12179 ;;Total ram usage:        0 bytes
 12180 ;; Hardware stack levels used: 1
 12181 ;; Hardware stack levels required when called: 3
 12182 ;; This function calls:
 12183 ;;		_PlayCancion
 12184 ;;		_USART_SendString
 12185 ;; This function is called by:
 12186 ;;		_main
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           	psect	text62
 12191  004B32                     __ptext62:
 12192                           	callstack 0
 12193  004B32                     _Alarm_Status:
 12194                           	callstack 27
 12195  004B32                     
 12196                           ;Estados.c: 132:     USART_SendString("Buenos Dias");
 12197  004B32  0E01               	movlw	low STR_22
 12198  004B34  6E02               	movwf	USART_SendString@out^0,c
 12199  004B36  0E08               	movlw	high STR_22
 12200  004B38  6E03               	movwf	(USART_SendString@out+1)^0,c
 12201  004B3A  ECB2  F024         	call	_USART_SendString	;wreg free
 12202  004B3E                     
 12203                           ;Estados.c: 133:     PlayCancion();
 12204  004B3E  EC6F  F01A         	call	_PlayCancion	;wreg free
 12205  004B42  0012               	return		;funcret
 12206  004B44                     __end_of_Alarm_Status:
 12207                           	callstack 0
 12208                           
 12209 ;; *************** function _USART_SendString *****************
 12210 ;; Defined at:
 12211 ;;		line 93 in file "Bluetooth.c"
 12212 ;; Parameters:    Size  Location     Type
 12213 ;;  out             2    1[COMRAM] PTR const unsigned char 
 12214 ;;		 -> STR_22(12), 
 12215 ;; Auto vars:     Size  Location     Type
 12216 ;;		None
 12217 ;; Return value:  Size  Location     Type
 12218 ;;                  1    wreg      void 
 12219 ;; Registers used:
 12220 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12221 ;; Tracked objects:
 12222 ;;		On entry : 0/0
 12223 ;;		On exit  : 0/0
 12224 ;;		Unchanged: 0/0
 12225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12226 ;;      Params:         2       0       0       0       0       0       0       0       0
 12227 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12228 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12229 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12230 ;;Total ram usage:        2 bytes
 12231 ;; Hardware stack levels used: 1
 12232 ;; Hardware stack levels required when called: 1
 12233 ;; This function calls:
 12234 ;;		_USART_TransmitChar
 12235 ;; This function is called by:
 12236 ;;		_Alarm_Status
 12237 ;; This function uses a non-reentrant model
 12238 ;;
 12239                           
 12240                           	psect	text63
 12241  004964                     __ptext63:
 12242                           	callstack 0
 12243  004964                     _USART_SendString:
 12244                           	callstack 28
 12245  004964                     
 12246                           ;Bluetooth.c: 94:     while (*out != '\0') {
 12247  004964  EFBE  F024         	goto	l5534
 12248  004968                     l5530:
 12249                           
 12250                           ;Bluetooth.c: 95:         USART_TransmitChar(*out);
 12251  004968  C002  FFF6         	movff	USART_SendString@out,tblptrl
 12252  00496C  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
 12253  004970                     	if	0	;tblptru may be non-zero
 12254  004970                     	endif
 12255  004970                     	if	0	;tblptru may be non-zero
 12256  004970                     	endif
 12257  004970  0008               	tblrd		*
 12258  004972  50F5               	movf	tablat,w,c
 12259  004974  EC5D  F025         	call	_USART_TransmitChar
 12260  004978                     
 12261                           ;Bluetooth.c: 96:         out++;
 12262  004978  4A02               	infsnz	USART_SendString@out^0,f,c
 12263  00497A  2A03               	incf	(USART_SendString@out+1)^0,f,c
 12264  00497C                     l5534:
 12265                           
 12266                           ;Bluetooth.c: 94:     while (*out != '\0') {
 12267  00497C  C002  FFF6         	movff	USART_SendString@out,tblptrl
 12268  004980  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
 12269  004984                     	if	0	;tblptru may be non-zero
 12270  004984                     	endif
 12271  004984                     	if	0	;tblptru may be non-zero
 12272  004984                     	endif
 12273  004984  0008               	tblrd		*
 12274  004986  50F5               	movf	tablat,w,c
 12275  004988  0900               	iorlw	0
 12276  00498A  A4D8               	btfss	status,2,c
 12277  00498C  EFCA  F024         	goto	u6031
 12278  004990  EFCC  F024         	goto	u6030
 12279  004994                     u6031:
 12280  004994  EFB4  F024         	goto	l5530
 12281  004998                     u6030:
 12282  004998  0012               	return		;funcret
 12283  00499A                     __end_of_USART_SendString:
 12284                           	callstack 0
 12285                           
 12286 ;; *************** function _USART_TransmitChar *****************
 12287 ;; Defined at:
 12288 ;;		line 59 in file "Bluetooth.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;  out             1    wreg     unsigned char 
 12291 ;; Auto vars:     Size  Location     Type
 12292 ;;  out             1    0[COMRAM] unsigned char 
 12293 ;; Return value:  Size  Location     Type
 12294 ;;                  1    wreg      void 
 12295 ;; Registers used:
 12296 ;;		wreg
 12297 ;; Tracked objects:
 12298 ;;		On entry : 0/0
 12299 ;;		On exit  : 0/0
 12300 ;;		Unchanged: 0/0
 12301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12302 ;;      Params:         0       0       0       0       0       0       0       0       0
 12303 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12304 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12305 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12306 ;;Total ram usage:        1 bytes
 12307 ;; Hardware stack levels used: 1
 12308 ;; This function calls:
 12309 ;;		Nothing
 12310 ;; This function is called by:
 12311 ;;		_USART_SendString
 12312 ;; This function uses a non-reentrant model
 12313 ;;
 12314                           
 12315                           	psect	text64
 12316  004ABA                     __ptext64:
 12317                           	callstack 0
 12318  004ABA                     _USART_TransmitChar:
 12319                           	callstack 28
 12320                           
 12321                           ;incstack = 0
 12322                           ;USART_TransmitChar@out stored from wreg
 12323  004ABA  6E01               	movwf	USART_TransmitChar@out^0,c
 12324  004ABC                     l578:
 12325  004ABC  A89E               	btfss	3998,4,c	;volatile
 12326  004ABE  EF63  F025         	goto	u5861
 12327  004AC2  EF65  F025         	goto	u5860
 12328  004AC6                     u5861:
 12329  004AC6  EF5E  F025         	goto	l578
 12330  004ACA                     u5860:
 12331  004ACA                     
 12332                           ;Bluetooth.c: 61:     TXREG = out;
 12333  004ACA  C001  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
 12334  004ACE  0012               	return		;funcret
 12335  004AD0                     __end_of_USART_TransmitChar:
 12336                           	callstack 0
 12337                           
 12338 ;; *************** function _PlayCancion *****************
 12339 ;; Defined at:
 12340 ;;		line 93 in file "Melodia.c"
 12341 ;; Parameters:    Size  Location     Type
 12342 ;;		None
 12343 ;; Auto vars:     Size  Location     Type
 12344 ;;		None
 12345 ;; Return value:  Size  Location     Type
 12346 ;;                  1    wreg      void 
 12347 ;; Registers used:
 12348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12349 ;; Tracked objects:
 12350 ;;		On entry : 0/0
 12351 ;;		On exit  : 0/0
 12352 ;;		Unchanged: 0/0
 12353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12354 ;;      Params:         0       0       0       0       0       0       0       0       0
 12355 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12356 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12357 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12358 ;;Total ram usage:        2 bytes
 12359 ;; Hardware stack levels used: 1
 12360 ;; Hardware stack levels required when called: 2
 12361 ;; This function calls:
 12362 ;;		_play
 12363 ;; This function is called by:
 12364 ;;		_Alarm_Status
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           	psect	text65
 12369  0034DE                     __ptext65:
 12370                           	callstack 0
 12371  0034DE                     _PlayCancion:
 12372                           	callstack 27
 12373  0034DE                     
 12374                           ;Melodia.c: 96:         play (4 ,4,150);
 12375  0034DE  0E00               	movlw	0
 12376  0034E0  6E07               	movwf	(play@nota+1)^0,c
 12377  0034E2  0E04               	movlw	4
 12378  0034E4  6E06               	movwf	play@nota^0,c
 12379  0034E6  0E00               	movlw	0
 12380  0034E8  6E09               	movwf	(play@octava+1)^0,c
 12381  0034EA  0E04               	movlw	4
 12382  0034EC  6E08               	movwf	play@octava^0,c
 12383  0034EE  0E00               	movlw	0
 12384  0034F0  6E0B               	movwf	(play@duracion+1)^0,c
 12385  0034F2  0E96               	movlw	150
 12386  0034F4  6E0A               	movwf	play@duracion^0,c
 12387  0034F6  ECB3  F01E         	call	_play	;wreg free
 12388  0034FA                     
 12389                           ;Melodia.c: 97:         _delay((unsigned long)((50)*(8000000/4000.0)));
 12390  0034FA  0E82               	movlw	130
 12391  0034FC  6E13               	movwf	??_PlayCancion^0,c
 12392  0034FE  0EDE               	movlw	222
 12393  003500                     u6207:
 12394  003500  2EE8               	decfsz	wreg,f,c
 12395  003502  D7FE               	bra	u6207
 12396  003504  2E13               	decfsz	??_PlayCancion^0,f,c
 12397  003506  D7FC               	bra	u6207
 12398  003508                     
 12399                           ;Melodia.c: 98:         play (4 ,4,150);
 12400  003508  0E00               	movlw	0
 12401  00350A  6E07               	movwf	(play@nota+1)^0,c
 12402  00350C  0E04               	movlw	4
 12403  00350E  6E06               	movwf	play@nota^0,c
 12404  003510  0E00               	movlw	0
 12405  003512  6E09               	movwf	(play@octava+1)^0,c
 12406  003514  0E04               	movlw	4
 12407  003516  6E08               	movwf	play@octava^0,c
 12408  003518  0E00               	movlw	0
 12409  00351A  6E0B               	movwf	(play@duracion+1)^0,c
 12410  00351C  0E96               	movlw	150
 12411  00351E  6E0A               	movwf	play@duracion^0,c
 12412  003520  ECB3  F01E         	call	_play	;wreg free
 12413                           
 12414                           ;Melodia.c: 99:         _delay((unsigned long)((150)*(8000000/4000.0)));
 12415  003524  0E02               	movlw	2
 12416  003526  6E14               	movwf	(??_PlayCancion+1)^0,c
 12417  003528  0E86               	movlw	134
 12418  00352A  6E13               	movwf	??_PlayCancion^0,c
 12419  00352C  0E99               	movlw	153
 12420  00352E                     u6217:
 12421  00352E  2EE8               	decfsz	wreg,f,c
 12422  003530  D7FE               	bra	u6217
 12423  003532  2E13               	decfsz	??_PlayCancion^0,f,c
 12424  003534  D7FC               	bra	u6217
 12425  003536  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12426  003538  D7FA               	bra	u6217
 12427  00353A  F000               	nop	
 12428  00353C                     
 12429                           ;Melodia.c: 100:         play (4 ,4,150);
 12430  00353C  0E00               	movlw	0
 12431  00353E  6E07               	movwf	(play@nota+1)^0,c
 12432  003540  0E04               	movlw	4
 12433  003542  6E06               	movwf	play@nota^0,c
 12434  003544  0E00               	movlw	0
 12435  003546  6E09               	movwf	(play@octava+1)^0,c
 12436  003548  0E04               	movlw	4
 12437  00354A  6E08               	movwf	play@octava^0,c
 12438  00354C  0E00               	movlw	0
 12439  00354E  6E0B               	movwf	(play@duracion+1)^0,c
 12440  003550  0E96               	movlw	150
 12441  003552  6E0A               	movwf	play@duracion^0,c
 12442  003554  ECB3  F01E         	call	_play	;wreg free
 12443  003558                     
 12444                           ;Melodia.c: 101:         _delay((unsigned long)((200)*(8000000/4000.0)));
 12445  003558  0E03               	movlw	3
 12446  00355A  6E14               	movwf	(??_PlayCancion+1)^0,c
 12447  00355C  0E08               	movlw	8
 12448  00355E  6E13               	movwf	??_PlayCancion^0,c
 12449  003560  0E77               	movlw	119
 12450  003562                     u6227:
 12451  003562  2EE8               	decfsz	wreg,f,c
 12452  003564  D7FE               	bra	u6227
 12453  003566  2E13               	decfsz	??_PlayCancion^0,f,c
 12454  003568  D7FC               	bra	u6227
 12455  00356A  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12456  00356C  D7FA               	bra	u6227
 12457  00356E  F000               	nop	
 12458                           
 12459                           ;Melodia.c: 103:         play (0 ,4,125);
 12460  003570  0E00               	movlw	0
 12461  003572  6E07               	movwf	(play@nota+1)^0,c
 12462  003574  0E00               	movlw	0
 12463  003576  6E06               	movwf	play@nota^0,c
 12464  003578  0E00               	movlw	0
 12465  00357A  6E09               	movwf	(play@octava+1)^0,c
 12466  00357C  0E04               	movlw	4
 12467  00357E  6E08               	movwf	play@octava^0,c
 12468  003580  0E00               	movlw	0
 12469  003582  6E0B               	movwf	(play@duracion+1)^0,c
 12470  003584  0E7D               	movlw	125
 12471  003586  6E0A               	movwf	play@duracion^0,c
 12472  003588  ECB3  F01E         	call	_play	;wreg free
 12473  00358C                     
 12474                           ;Melodia.c: 104:         _delay((unsigned long)((50)*(8000000/4000.0)));
 12475  00358C  0E82               	movlw	130
 12476  00358E  6E13               	movwf	??_PlayCancion^0,c
 12477  003590  0EDE               	movlw	222
 12478  003592                     u6237:
 12479  003592  2EE8               	decfsz	wreg,f,c
 12480  003594  D7FE               	bra	u6237
 12481  003596  2E13               	decfsz	??_PlayCancion^0,f,c
 12482  003598  D7FC               	bra	u6237
 12483  00359A                     
 12484                           ;Melodia.c: 105:         play (4 ,4,125);
 12485  00359A  0E00               	movlw	0
 12486  00359C  6E07               	movwf	(play@nota+1)^0,c
 12487  00359E  0E04               	movlw	4
 12488  0035A0  6E06               	movwf	play@nota^0,c
 12489  0035A2  0E00               	movlw	0
 12490  0035A4  6E09               	movwf	(play@octava+1)^0,c
 12491  0035A6  0E04               	movlw	4
 12492  0035A8  6E08               	movwf	play@octava^0,c
 12493  0035AA  0E00               	movlw	0
 12494  0035AC  6E0B               	movwf	(play@duracion+1)^0,c
 12495  0035AE  0E7D               	movlw	125
 12496  0035B0  6E0A               	movwf	play@duracion^0,c
 12497  0035B2  ECB3  F01E         	call	_play	;wreg free
 12498                           
 12499                           ;Melodia.c: 106:         _delay((unsigned long)((150)*(8000000/4000.0)));
 12500  0035B6  0E02               	movlw	2
 12501  0035B8  6E14               	movwf	(??_PlayCancion+1)^0,c
 12502  0035BA  0E86               	movlw	134
 12503  0035BC  6E13               	movwf	??_PlayCancion^0,c
 12504  0035BE  0E99               	movlw	153
 12505  0035C0                     u6247:
 12506  0035C0  2EE8               	decfsz	wreg,f,c
 12507  0035C2  D7FE               	bra	u6247
 12508  0035C4  2E13               	decfsz	??_PlayCancion^0,f,c
 12509  0035C6  D7FC               	bra	u6247
 12510  0035C8  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12511  0035CA  D7FA               	bra	u6247
 12512  0035CC  F000               	nop	
 12513  0035CE                     
 12514                           ;Melodia.c: 107:         play (7 ,4,200);
 12515  0035CE  0E00               	movlw	0
 12516  0035D0  6E07               	movwf	(play@nota+1)^0,c
 12517  0035D2  0E07               	movlw	7
 12518  0035D4  6E06               	movwf	play@nota^0,c
 12519  0035D6  0E00               	movlw	0
 12520  0035D8  6E09               	movwf	(play@octava+1)^0,c
 12521  0035DA  0E04               	movlw	4
 12522  0035DC  6E08               	movwf	play@octava^0,c
 12523  0035DE  0E00               	movlw	0
 12524  0035E0  6E0B               	movwf	(play@duracion+1)^0,c
 12525  0035E2  0EC8               	movlw	200
 12526  0035E4  6E0A               	movwf	play@duracion^0,c
 12527  0035E6  ECB3  F01E         	call	_play	;wreg free
 12528  0035EA                     
 12529                           ;Melodia.c: 108:         _delay((unsigned long)((400)*(8000000/4000.0)));
 12530  0035EA  0E05               	movlw	5
 12531  0035EC  6E14               	movwf	(??_PlayCancion+1)^0,c
 12532  0035EE  0E0F               	movlw	15
 12533  0035F0  6E13               	movwf	??_PlayCancion^0,c
 12534  0035F2  0EF1               	movlw	241
 12535  0035F4                     u6257:
 12536  0035F4  2EE8               	decfsz	wreg,f,c
 12537  0035F6  D7FE               	bra	u6257
 12538  0035F8  2E13               	decfsz	??_PlayCancion^0,f,c
 12539  0035FA  D7FC               	bra	u6257
 12540  0035FC  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12541  0035FE  D7FA               	bra	u6257
 12542  003600  F000               	nop	
 12543                           
 12544                           ;Melodia.c: 109:         play (7 ,3,350);
 12545  003602  0E00               	movlw	0
 12546  003604  6E07               	movwf	(play@nota+1)^0,c
 12547  003606  0E07               	movlw	7
 12548  003608  6E06               	movwf	play@nota^0,c
 12549  00360A  0E00               	movlw	0
 12550  00360C  6E09               	movwf	(play@octava+1)^0,c
 12551  00360E  0E03               	movlw	3
 12552  003610  6E08               	movwf	play@octava^0,c
 12553  003612  0E01               	movlw	1
 12554  003614  6E0B               	movwf	(play@duracion+1)^0,c
 12555  003616  0E5E               	movlw	94
 12556  003618  6E0A               	movwf	play@duracion^0,c
 12557  00361A  ECB3  F01E         	call	_play	;wreg free
 12558  00361E                     
 12559                           ;Melodia.c: 110:         _delay((unsigned long)((300)*(8000000/4000.0)));
 12560  00361E  0E04               	movlw	4
 12561  003620  6E14               	movwf	(??_PlayCancion+1)^0,c
 12562  003622  0E0C               	movlw	12
 12563  003624  6E13               	movwf	??_PlayCancion^0,c
 12564  003626  0E34               	movlw	52
 12565  003628                     u6267:
 12566  003628  2EE8               	decfsz	wreg,f,c
 12567  00362A  D7FE               	bra	u6267
 12568  00362C  2E13               	decfsz	??_PlayCancion^0,f,c
 12569  00362E  D7FC               	bra	u6267
 12570  003630  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12571  003632  D7FA               	bra	u6267
 12572  003634  0012               	return		;funcret
 12573  003636                     __end_of_PlayCancion:
 12574                           	callstack 0
 12575                           
 12576 ;; *************** function _play *****************
 12577 ;; Defined at:
 12578 ;;		line 46 in file "Melodia.c"
 12579 ;; Parameters:    Size  Location     Type
 12580 ;;  nota            2    5[COMRAM] int 
 12581 ;;  octava          2    7[COMRAM] int 
 12582 ;;  duracion        2    9[COMRAM] int 
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;  fn              2   16[COMRAM] int 
 12585 ;;  CiclosL         2   14[COMRAM] int 
 12586 ;;  mS_Transcurr    2   12[COMRAM] int 
 12587 ;; Return value:  Size  Location     Type
 12588 ;;                  1    wreg      void 
 12589 ;; Registers used:
 12590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12591 ;; Tracked objects:
 12592 ;;		On entry : 0/0
 12593 ;;		On exit  : 0/0
 12594 ;;		Unchanged: 0/0
 12595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12596 ;;      Params:         6       0       0       0       0       0       0       0       0
 12597 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12598 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12599 ;;      Totals:        13       0       0       0       0       0       0       0       0
 12600 ;;Total ram usage:       13 bytes
 12601 ;; Hardware stack levels used: 1
 12602 ;; Hardware stack levels required when called: 1
 12603 ;; This function calls:
 12604 ;;		_delay_us
 12605 ;; This function is called by:
 12606 ;;		_PlayCancion
 12607 ;; This function uses a non-reentrant model
 12608 ;;
 12609                           
 12610                           	psect	text66
 12611  003D66                     __ptext66:
 12612                           	callstack 0
 12613  003D66                     _play:
 12614                           	callstack 27
 12615  003D66                     
 12616                           ;Melodia.c: 47:      int fn;;Melodia.c: 48:      int mS_Transcurridos=0;
 12617  003D66  0E00               	movlw	0
 12618  003D68  6E0E               	movwf	(play@mS_Transcurridos+1)^0,c
 12619  003D6A  0E00               	movlw	0
 12620  003D6C  6E0D               	movwf	play@mS_Transcurridos^0,c
 12621                           
 12622                           ;Melodia.c: 49:      int CiclosL=0;
 12623  003D6E  0E00               	movlw	0
 12624  003D70  6E10               	movwf	(play@CiclosL+1)^0,c
 12625  003D72  0E00               	movlw	0
 12626  003D74  6E0F               	movwf	play@CiclosL^0,c
 12627  003D76                     
 12628                           ;Melodia.c: 51:      fn=FreqNota[nota];
 12629  003D76  90D8               	bcf	status,0,c
 12630  003D78  3406               	rlcf	play@nota^0,w,c
 12631  003D7A  6ED9               	movwf	fsr2l,c
 12632  003D7C  3407               	rlcf	(play@nota+1)^0,w,c
 12633  003D7E  6EDA               	movwf	fsr2h,c
 12634  003D80  0EB6               	movlw	low _FreqNota
 12635  003D82  26D9               	addwf	fsr2l,f,c
 12636  003D84  0E01               	movlw	high _FreqNota
 12637  003D86  22DA               	addwfc	fsr2h,f,c
 12638  003D88  CFDE F011          	movff	postinc2,play@fn
 12639  003D8C  CFDD F012          	movff	postdec2,play@fn+1
 12640  003D90                     
 12641                           ;Melodia.c: 53:      fn>>=(octava);
 12642  003D90  2808               	incf	play@octava^0,w,c
 12643  003D92  6E0C               	movwf	??_play^0,c
 12644  003D94  EFCF  F01E         	goto	u5760
 12645  003D98                     u5765:
 12646  003D98  3412               	rlcf	(play@fn+1)^0,w,c
 12647  003D9A  3212               	rrcf	(play@fn+1)^0,f,c
 12648  003D9C  3211               	rrcf	play@fn^0,f,c
 12649  003D9E                     u5760:
 12650  003D9E  2E0C               	decfsz	??_play^0,f,c
 12651  003DA0  EFCC  F01E         	goto	u5765
 12652  003DA4                     l5268:
 12653                           
 12654                           ;Melodia.c: 58:         TRISCbits . TRISC1 = 0;
 12655  003DA4  9294               	bcf	148,1,c	;volatile
 12656  003DA6                     
 12657                           ;Melodia.c: 59:         LATCbits . LATC1 = 1 ;
 12658  003DA6  828B               	bsf	139,1,c	;volatile
 12659  003DA8                     
 12660                           ;Melodia.c: 60:         delay_us(fn);;
 12661  003DA8  C011  F001         	movff	play@fn,delay_us@nota
 12662  003DAC  C012  F002         	movff	play@fn+1,delay_us@nota+1
 12663  003DB0  ECCD  F024         	call	_delay_us	;wreg free
 12664  003DB4                     
 12665                           ;Melodia.c: 61:         CiclosL+=(fn);
 12666  003DB4  5011               	movf	play@fn^0,w,c
 12667  003DB6  260F               	addwf	play@CiclosL^0,f,c
 12668  003DB8  5012               	movf	(play@fn+1)^0,w,c
 12669  003DBA  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12670  003DBC                     
 12671                           ;Melodia.c: 63:         LATCbits . LATC1 = 0 ;
 12672  003DBC  928B               	bcf	139,1,c	;volatile
 12673  003DBE                     
 12674                           ;Melodia.c: 64:          delay_us(fn);
 12675  003DBE  C011  F001         	movff	play@fn,delay_us@nota
 12676  003DC2  C012  F002         	movff	play@fn+1,delay_us@nota+1
 12677  003DC6  ECCD  F024         	call	_delay_us	;wreg free
 12678  003DCA                     
 12679                           ;Melodia.c: 65:         CiclosL+=(fn);
 12680  003DCA  5011               	movf	play@fn^0,w,c
 12681  003DCC  260F               	addwf	play@CiclosL^0,f,c
 12682  003DCE  5012               	movf	(play@fn+1)^0,w,c
 12683  003DD0  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12684  003DD2                     l5282:
 12685                           
 12686                           ;Melodia.c: 66:         CiclosL+=25;
 12687  003DD2  0E19               	movlw	25
 12688  003DD4  260F               	addwf	play@CiclosL^0,f,c
 12689  003DD6  0E00               	movlw	0
 12690  003DD8  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12691                           
 12692                           ;Melodia.c: 68:         while(CiclosL>999){
 12693  003DDA  EFF7  F01E         	goto	l5290
 12694  003DDE                     l5284:
 12695                           
 12696                           ;Melodia.c: 70:            CiclosL-=1000;
 12697  003DDE  0E18               	movlw	24
 12698  003DE0  260F               	addwf	play@CiclosL^0,f,c
 12699  003DE2  0EFC               	movlw	252
 12700  003DE4  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12701  003DE6                     
 12702                           ;Melodia.c: 71:            mS_Transcurridos++;
 12703  003DE6  4A0D               	infsnz	play@mS_Transcurridos^0,f,c
 12704  003DE8  2A0E               	incf	(play@mS_Transcurridos+1)^0,f,c
 12705  003DEA  EFE9  F01E         	goto	l5282
 12706  003DEE                     l5290:
 12707                           
 12708                           ;Melodia.c: 68:         while(CiclosL>999){
 12709  003DEE  BE10               	btfsc	(play@CiclosL+1)^0,7,c
 12710  003DF0  EF05  F01F         	goto	u5770
 12711  003DF4  0EE8               	movlw	232
 12712  003DF6  5C0F               	subwf	play@CiclosL^0,w,c
 12713  003DF8  0E03               	movlw	3
 12714  003DFA  5810               	subwfb	(play@CiclosL+1)^0,w,c
 12715  003DFC  B0D8               	btfsc	status,0,c
 12716  003DFE  EF03  F01F         	goto	u5771
 12717  003E02  EF05  F01F         	goto	u5770
 12718  003E06                     u5771:
 12719  003E06  EFEF  F01E         	goto	l5284
 12720  003E0A                     u5770:
 12721  003E0A                     
 12722                           ;Melodia.c: 74:      }while (duracion>mS_Transcurridos);
 12723  003E0A  500A               	movf	play@duracion^0,w,c
 12724  003E0C  5C0D               	subwf	play@mS_Transcurridos^0,w,c
 12725  003E0E  500E               	movf	(play@mS_Transcurridos+1)^0,w,c
 12726  003E10  0A80               	xorlw	128
 12727  003E12  6E0C               	movwf	??_play^0,c
 12728  003E14  500B               	movf	(play@duracion+1)^0,w,c
 12729  003E16  0A80               	xorlw	128
 12730  003E18  580C               	subwfb	??_play^0,w,c
 12731  003E1A  A0D8               	btfss	status,0,c
 12732  003E1C  EF12  F01F         	goto	u5781
 12733  003E20  EF14  F01F         	goto	u5780
 12734  003E24                     u5781:
 12735  003E24  EFD2  F01E         	goto	l5268
 12736  003E28                     u5780:
 12737  003E28  0012               	return		;funcret
 12738  003E2A                     __end_of_play:
 12739                           	callstack 0
 12740                           
 12741 ;; *************** function _delay_us *****************
 12742 ;; Defined at:
 12743 ;;		line 24 in file "Melodia.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;  nota            2    0[COMRAM] int 
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;  i               2    3[COMRAM] int 
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg, status,2, status,0
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12757 ;;      Params:         2       0       0       0       0       0       0       0       0
 12758 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12759 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12760 ;;      Totals:         5       0       0       0       0       0       0       0       0
 12761 ;;Total ram usage:        5 bytes
 12762 ;; Hardware stack levels used: 1
 12763 ;; This function calls:
 12764 ;;		Nothing
 12765 ;; This function is called by:
 12766 ;;		_play
 12767 ;; This function uses a non-reentrant model
 12768 ;;
 12769                           
 12770                           	psect	text67
 12771  00499A                     __ptext67:
 12772                           	callstack 0
 12773  00499A                     _delay_us:
 12774                           	callstack 27
 12775  00499A                     
 12776                           ;Melodia.c: 25:     for(int i=0; i<=nota;i++ ){
 12777  00499A  0E00               	movlw	0
 12778  00499C  6E05               	movwf	(delay_us@i+1)^0,c
 12779  00499E  0E00               	movlw	0
 12780  0049A0  6E04               	movwf	delay_us@i^0,c
 12781  0049A2  EFD6  F024         	goto	l5070
 12782  0049A6                     l254:
 12783                           
 12784                           ;Melodia.c: 26:         _delay((unsigned long)((1)*(8000000/4000000.0)));
 12785  0049A6  D000               	nop2		;2 cycle nop
 12786  0049A8                     
 12787                           ;Melodia.c: 27:     }
 12788  0049A8  4A04               	infsnz	delay_us@i^0,f,c
 12789  0049AA  2A05               	incf	(delay_us@i+1)^0,f,c
 12790  0049AC                     l5070:
 12791  0049AC  5004               	movf	delay_us@i^0,w,c
 12792  0049AE  5C01               	subwf	delay_us@nota^0,w,c
 12793  0049B0  5002               	movf	(delay_us@nota+1)^0,w,c
 12794  0049B2  0A80               	xorlw	128
 12795  0049B4  6E03               	movwf	??_delay_us^0,c
 12796  0049B6  5005               	movf	(delay_us@i+1)^0,w,c
 12797  0049B8  0A80               	xorlw	128
 12798  0049BA  5803               	subwfb	??_delay_us^0,w,c
 12799  0049BC  B0D8               	btfsc	status,0,c
 12800  0049BE  EFE3  F024         	goto	u5511
 12801  0049C2  EFE5  F024         	goto	u5510
 12802  0049C6                     u5511:
 12803  0049C6  EFD3  F024         	goto	l254
 12804  0049CA                     u5510:
 12805  0049CA  0012               	return		;funcret
 12806  0049CC                     __end_of_delay_us:
 12807                           	callstack 0
 12808                           
 12809                           	psect	rparam
 12810  0000                     
 12811                           	psect	idloc
 12812                           
 12813                           ;Config register IDLOC0 @ 0x200000
 12814                           ;	unspecified, using default values
 12815  200000                     	org	2097152
 12816  200000  FF                 	db	255
 12817                           
 12818                           ;Config register IDLOC1 @ 0x200001
 12819                           ;	unspecified, using default values
 12820  200001                     	org	2097153
 12821  200001  FF                 	db	255
 12822                           
 12823                           ;Config register IDLOC2 @ 0x200002
 12824                           ;	unspecified, using default values
 12825  200002                     	org	2097154
 12826  200002  FF                 	db	255
 12827                           
 12828                           ;Config register IDLOC3 @ 0x200003
 12829                           ;	unspecified, using default values
 12830  200003                     	org	2097155
 12831  200003  FF                 	db	255
 12832                           
 12833                           ;Config register IDLOC4 @ 0x200004
 12834                           ;	unspecified, using default values
 12835  200004                     	org	2097156
 12836  200004  FF                 	db	255
 12837                           
 12838                           ;Config register IDLOC5 @ 0x200005
 12839                           ;	unspecified, using default values
 12840  200005                     	org	2097157
 12841  200005  FF                 	db	255
 12842                           
 12843                           ;Config register IDLOC6 @ 0x200006
 12844                           ;	unspecified, using default values
 12845  200006                     	org	2097158
 12846  200006  FF                 	db	255
 12847                           
 12848                           ;Config register IDLOC7 @ 0x200007
 12849                           ;	unspecified, using default values
 12850  200007                     	org	2097159
 12851  200007  FF                 	db	255
 12852                           
 12853                           	psect	config
 12854                           
 12855                           ;Config register CONFIG1L @ 0x300000
 12856                           ;	PLL Prescaler Selection bits
 12857                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12858                           ;	System Clock Postscaler Selection bits
 12859                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12860                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12861                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12862  300000                     	org	3145728
 12863  300000  00                 	db	0
 12864                           
 12865                           ;Config register CONFIG1H @ 0x300001
 12866                           ;	Oscillator Selection bits
 12867                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12868                           ;	Fail-Safe Clock Monitor Enable bit
 12869                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12870                           ;	Internal/External Oscillator Switchover bit
 12871                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12872  300001                     	org	3145729
 12873  300001  09                 	db	9
 12874                           
 12875                           ;Config register CONFIG2L @ 0x300002
 12876                           ;	Power-up Timer Enable bit
 12877                           ;	PWRT = ON, PWRT enabled
 12878                           ;	Brown-out Reset Enable bits
 12879                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12880                           ;	Brown-out Reset Voltage bits
 12881                           ;	BORV = 3, Minimum setting 2.05V
 12882                           ;	USB Voltage Regulator Enable bit
 12883                           ;	VREGEN = OFF, USB voltage regulator disabled
 12884  300002                     	org	3145730
 12885  300002  18                 	db	24
 12886                           
 12887                           ;Config register CONFIG2H @ 0x300003
 12888                           ;	Watchdog Timer Enable bit
 12889                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12890                           ;	Watchdog Timer Postscale Select bits
 12891                           ;	WDTPS = 32768, 1:32768
 12892  300003                     	org	3145731
 12893  300003  1E                 	db	30
 12894                           
 12895                           ; Padding undefined space
 12896  300004                     	org	3145732
 12897  300004  FF                 	db	255
 12898                           
 12899                           ;Config register CONFIG3H @ 0x300005
 12900                           ;	CCP2 MUX bit
 12901                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12902                           ;	PORTB A/D Enable bit
 12903                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12904                           ;	Low-Power Timer 1 Oscillator Enable bit
 12905                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12906                           ;	MCLR Pin Enable bit
 12907                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12908  300005                     	org	3145733
 12909  300005  81                 	db	129
 12910                           
 12911                           ;Config register CONFIG4L @ 0x300006
 12912                           ;	Stack Full/Underflow Reset Enable bit
 12913                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12914                           ;	Single-Supply ICSP Enable bit
 12915                           ;	LVP = OFF, Single-Supply ICSP disabled
 12916                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12917                           ;	ICPRT = OFF, ICPORT disabled
 12918                           ;	Extended Instruction Set Enable bit
 12919                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12920                           ;	Background Debugger Enable bit
 12921                           ;	DEBUG = 0x1, unprogrammed default
 12922  300006                     	org	3145734
 12923  300006  80                 	db	128
 12924                           
 12925                           ; Padding undefined space
 12926  300007                     	org	3145735
 12927  300007  FF                 	db	255
 12928                           
 12929                           ;Config register CONFIG5L @ 0x300008
 12930                           ;	Code Protection bit
 12931                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12932                           ;	Code Protection bit
 12933                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12934                           ;	Code Protection bit
 12935                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12936                           ;	Code Protection bit
 12937                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12938  300008                     	org	3145736
 12939  300008  0F                 	db	15
 12940                           
 12941                           ;Config register CONFIG5H @ 0x300009
 12942                           ;	Boot Block Code Protection bit
 12943                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12944                           ;	Data EEPROM Code Protection bit
 12945                           ;	CPD = OFF, Data EEPROM is not code-protected
 12946  300009                     	org	3145737
 12947  300009  C0                 	db	192
 12948                           
 12949                           ;Config register CONFIG6L @ 0x30000A
 12950                           ;	Write Protection bit
 12951                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12952                           ;	Write Protection bit
 12953                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12954                           ;	Write Protection bit
 12955                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12956                           ;	Write Protection bit
 12957                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12958  30000A                     	org	3145738
 12959  30000A  0F                 	db	15
 12960                           
 12961                           ;Config register CONFIG6H @ 0x30000B
 12962                           ;	Configuration Register Write Protection bit
 12963                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12964                           ;	Boot Block Write Protection bit
 12965                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12966                           ;	Data EEPROM Write Protection bit
 12967                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12968  30000B                     	org	3145739
 12969  30000B  E0                 	db	224
 12970                           
 12971                           ;Config register CONFIG7L @ 0x30000C
 12972                           ;	Table Read Protection bit
 12973                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12974                           ;	Table Read Protection bit
 12975                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12976                           ;	Table Read Protection bit
 12977                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12978                           ;	Table Read Protection bit
 12979                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12980  30000C                     	org	3145740
 12981  30000C  0F                 	db	15
 12982                           
 12983                           ;Config register CONFIG7H @ 0x30000D
 12984                           ;	Boot Block Table Read Protection bit
 12985                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12986  30000D                     	org	3145741
 12987  30000D  40                 	db	64
 12988                           tosu	equ	0xFFF
 12989                           tosh	equ	0xFFE
 12990                           tosl	equ	0xFFD
 12991                           stkptr	equ	0xFFC
 12992                           pclatu	equ	0xFFB
 12993                           pclath	equ	0xFFA
 12994                           pcl	equ	0xFF9
 12995                           tblptru	equ	0xFF8
 12996                           tblptrh	equ	0xFF7
 12997                           tblptrl	equ	0xFF6
 12998                           tablat	equ	0xFF5
 12999                           prodh	equ	0xFF4
 13000                           prodl	equ	0xFF3
 13001                           indf0	equ	0xFEF
 13002                           postinc0	equ	0xFEE
 13003                           postdec0	equ	0xFED
 13004                           preinc0	equ	0xFEC
 13005                           plusw0	equ	0xFEB
 13006                           fsr0h	equ	0xFEA
 13007                           fsr0l	equ	0xFE9
 13008                           wreg	equ	0xFE8
 13009                           indf1	equ	0xFE7
 13010                           postinc1	equ	0xFE6
 13011                           postdec1	equ	0xFE5
 13012                           preinc1	equ	0xFE4
 13013                           plusw1	equ	0xFE3
 13014                           fsr1h	equ	0xFE2
 13015                           fsr1l	equ	0xFE1
 13016                           bsr	equ	0xFE0
 13017                           indf2	equ	0xFDF
 13018                           postinc2	equ	0xFDE
 13019                           postdec2	equ	0xFDD
 13020                           preinc2	equ	0xFDC
 13021                           plusw2	equ	0xFDB
 13022                           fsr2h	equ	0xFDA
 13023                           fsr2l	equ	0xFD9
 13024                           status	equ	0xFD8

Data Sizes:
    Strings     84
    Constant    0
    Data        55
    BSS         162
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    130     157
    BANK1           256     68     237
    BANK2           256      0      20
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1366_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[12]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character3(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _USART_Init->___fltol
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_LCD_MSdelay
    _LCD_Char->_LCD_MSdelay
    _Alarm_Status->_PlayCancion
    _USART_SendString->_USART_TransmitChar
    _PlayCancion->_play
    _play->_delay_us

Critical Paths under _main in BANK0

    _main->_RTC_Calendario
    _Sunny_State->_sprintf
    _Rainy_State->_sprintf
    _RTC_Calendario->_sprintf
    _Estados->_ReadADC
    _Cloudy_State->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_RTC_Calendario

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  211500
                                            126 BANK0      4     4      0
                       _Alarm_Status
                       _Cloudy_State
                            _Estados
                           _I2C_Init
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                     _RTC_Calendario
                        _Rainy_State
                        _Sunny_State
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4    6309
                                              0 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Sunny_State                                          0     0      0   46113
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Rainy_State                                          0     0      0   46113
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendario                                      71    71      0   49072
                                            124 BANK0      2     2      0
                                              0 BANK1     68    68      0
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                         _LCD_String
                      _LCD_String_xy
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1444
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1444
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Estados                                              6     4      2   12024
                                              6 BANK0      6     4      2
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _ReadLUZ                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              6     4      2    9065
                                              0 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (1) _Cloudy_State                                         0     0      0   46113
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   38827
                                            108 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   36796
                                            100 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   36408
                                             68 BANK0     32    26      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5327
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   25204
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             68 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             84 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3193
                                             84 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2718
                                             68 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2310
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2311
                                             43 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    3948
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    1853
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     2      2    1850
                                              8 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     744
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0     744
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (5) _LCD_MSdelay                                          6     4      2     700
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Alarm_Status                                         0     0      0    2145
                        _PlayCancion
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (2) _USART_SendString                                     2     0      2     143
                                              1 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (3) _USART_TransmitChar                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PlayCancion                                          2     2      0    2002
                                             18 COMRAM     2     2      0
                               _play
 ---------------------------------------------------------------------------------
 (3) _play                                                13     7      6    2002
                                              5 COMRAM    13     7      6
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarm_Status
     _PlayCancion
       _play
         _delay_us
     _USART_SendString
       _USART_TransmitChar
   _Cloudy_State
     _LCD_Char
       _LCD_MSdelay
     _LCD_Command
       _LCD_MSdelay
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ReadLUZ (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _Estados
     _ReadADC
       ___fladd
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
     _ReadLUZ
     ___flge
     ___xxtofl
   _I2C_Init
   _LCD_Clear
     _LCD_Command
     _LCD_MSdelay
   _LCD_Init
     _LCD_Command
     _LCD_MSdelay
   _LCD_MSdelay
   _RTC_Calendario
     _I2C_Init
     _I2C_Stop
     _LCD_Clear
     _LCD_Init
     _LCD_MSdelay
     _LCD_String
     _LCD_String_xy
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
   _Rainy_State
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
     _LCD_String_xy
     _sprintf
   _Sunny_State
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
     _LCD_String_xy
     _sprintf
   _USART_Init
     ___fladd
     ___fldiv
     ___fltol
     ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      14       9        7.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     44      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FD      20        0.0%
DATA                 0      0     1FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 07 10:11:50 2021

                          ?_LCD_MSdelay 0001                            ___fldiv@aexp 0044  
                          ___fldiv@bexp 0043                                       _i 005F  
                    __size_of_I2C_Ready 0012                            ___fldiv@sign 003C  
                    __size_of_I2C_Start 002E                            ?_LCD_Command 0001  
                           _SSPSTATbits 000FC7                      __size_of_I2C_Write 0022  
                                    l98 49FA                            ___awdiv@sign 0006  
                  __size_of_Sunny_State 005A                     ___wmul@multiplicand 0003  
                           ?_LCD_String 0009                         _LCD_Custom_Char 4648  
RTC_Read_Calendar@read_calendar_address 0004                                     l101 45B0  
                                   l110 42AC                                     l104 45FC  
                                   l115 479E                                     l132 4646  
                                   l124 468E                                     l220 412E  
                                   l118 4B1E                                     l217 4104  
                                   l410 4AB8                                     l402 47E0  
                                   l330 46D4                                     l219 4112  
                                   l172 3878                                     l404 47EE  
                                   l413 4B20                                     l333 4416  
                                   l254 49A6                                     l174 3886  
                                   l406 480E                                     l430 4A00  
                                   l175 393C                                     l415 4B2E  
                                   l407 4814                                     l256 49CA  
                                   l264 3E28                                     l416 4B30  
                                   l432 4A0E                                     l441 4A56  
                                   l345 2A2E                                     l434 4A28  
                                   l450 4AE2                                     l267 3634  
                                   l531 43BC                                     l517 2F86  
                                   l461 4B0A                                     l437 4A2E  
                                   l525 4362                                     l534 4B42  
                                   l454 4A9E                                     l446 4AD2  
                                   l439 4A3C                                     l528 4470  
                                   l464 4AE8                                     l448 4AE0  
                                   l458 4AFC                                     l467 4AF6  
                                   l581 4ACE                                     l575 40C6  
                                   l840 3F88                                     l593 4998  
                                   l578 4ABC                                     l827 3D64  
                                   l596 4A7C                                     l861 37F8  
                                   l870 48BC                                     l855 4032  
                                   l866 383E                                     l893 373A  
                                   _PEN 007E2A                                     _Day 0106  
                       __end_of_I2C_Ack 4B0C                                     _pad 3BDC  
                                   _min 010A                                     _sec 010C  
                                   _luz 00EA                            ___awmod@sign 0006  
                                   wreg 000FE8                            ___flmul@aexp 0024  
                          ___flmul@bexp 0025                            ___flmul@sign 001F  
                          ___flmul@temp 002A                            ___flmul@prod 0026  
                           LCD_Char@dat 0008                            ___fltol@exp1 005E  
                                  l1210 2040                                    l1220 229C  
                                  l1124 1CAA                                    l1141 1DC4  
                                  l1133 1F7A                                    l1125 1C98  
                                  l1214 23A4                                    l1150 1E94  
                                  l1126 1C5E                                    l1151 1E82  
                                  l1217 2236                                    l1322 3C64  
                                  l1227 2366                                    l1219 22AE  
                                  l1251 31F0                                    l1180 259E  
                                  l1324 3CA0                                    l1166 471A  
                                  l1342 14AC                                    l1422 2A68  
                                  l1254 334C                                    l1191 265C  
                                  l1183 2562                                    l1503 3A3A  
                                  l1319 3C22                                    l1431 2B06  
                                  l1192 264A                                    l4000 471C  
                                  l1360 0C42                                    l1424 2A70  
                                  l1265 32E4                                    l1178 273E  
                                  l4002 4728                                    l4010 493A  
                                  l1274 44C2                                    l1258 3288  
                                  l1603 4308                                    l1532 34D4  
                                  l4100 252E                                    l4004 473A  
                                  l4012 493E                                    l1189 25E4  
                                  l1541 3198                                    l1613 3B10  
                                  l1445 2CA4                                    l1461 15A0  
                                  l4110 258A                                    l4102 253E  
                                  l4006 473E                                    l4014 4956  
                                  l4022 4816                                    l1535 34DC  
                                  l1623 41E8                                    l1551 47DA  
                                  l1447 2D08                                    l5000 33C6  
                                  l4120 25CA                                    l4112 258C  
                                  l4104 2552                                    l4040 23D2  
                                  l4032 23A6                                    l4200 202A  
                                  l1544 30DC                                    l4008 492E  
                                  l1609 4962                                    l1641 424E  
                                  l4026 4A58                                    l5002 33DC  
                                  l4130 2606                                    l4122 25D4  
                                  l4114 259C                                    l4106 2560  
                                  l4050 240C                                    l4042 23E2  
                                  l4034 23B2                                    l4210 2074  
                                  l4202 2030                                    l4018 484E  
                                  l1571 4884                                    l1483 191A  
                                  l4028 4A74                                    l5020 34B8  
                                  l5012 3456                                    l5004 33E4  
                                  l4140 2678                                    l4132 2614  
                                  l4124 25E2                                    l4116 25AE  
                                  l4108 256C                                    l4060 2438  
                                  l4052 2412                                    l4044 23F2  
                                  l4036 23C0                                    l4220 20C4  
                                  l4212 2080                                    l4204 2050  
                                  l4300 46D6                                    l1628 41F0  
                                  l1388 1082                                    l1636 4246  
                                  l1476 1ABA                                    l5100 14F6  
                                  l1492 4188                                    l1557 48F4  
                                  l1565 4514                                    l1493 4190  
                                  l5006 33EC                                    l4310 3CB4  
                                  l4150 26E4                                    l4142 2686  
                                  l4134 2642                                    l4118 25C4  
                                  l4126 25F4                                    l4070 2472  
                                  l4062 2448                                    l4054 2418  
                                  l4046 23F4                                    l4038 23C2  
                                  l4230 2106                                    l4222 20D0  
                                  l4214 208A                                    l4206 2060  
                                  l4302 46E6                                    l5110 151C  
                                  l5102 1502                                    l1647 484C  
                                  l5016 3494                                    l5008 3420  
                                  l4320 3CDA                                    l4312 3CBC  
                                  l4160 2732                                    l4152 26FE  
                                  l4144 26B0                                    l4128 2602  
                                  l4072 2488                                    l4064 2458  
                                  l4056 2426                                    l4048 23FC  
                                  l4240 2168                                    l4232 2112  
                                  l4224 20DC                                    l4216 20A0  
                                  l5040 3AC6                                    l5032 3A72  
                                  l5200 19D8                                    l5104 1504  
                                  l5050 45C6                                    l5018 34A6  
                                  l4330 3D12                                    l4322 3CE2  
                                  l4314 3CC0                                    l4306 3CA2  
                                  l4162 2734                                    l4154 271A  
                                  l4138 266C                                    l4146 26B4  
                                  l4090 24DC                                    l4074 2498  
                                  l4082 24B8                                    l4066 245A  
                                  l4058 2428                                    l4410 37B8  
                                  l4402 373C                                    l4250 21FE  
                                  l4242 2174                                    l4234 2122  
                                  l4226 20EA                                    l4218 20AC  
                                  l4170 1F7C                                    l1586 3BDA  
                                  l1594 475E                                    l5042 3AEE  
                                  l5034 3A80                                    l5026 3A3C  
                                  l5210 1A5A                                    l5130 15AE  
                                  l5122 152E                                    l5114 1522  
                                  l5106 1516                                    l5060 45EA  
                                  l5052 45C8                                    l4340 3D3E  
                                  l4332 3D18                                    l4324 3CF4  
                                  l4316 3CCE                                    l4308 3CA6  
                                  l4156 271E                                    l4148 26CE  
                                  l4092 24F6                                    l4084 24C8  
                                  l4076 24A0                                    l4068 2462  
                                  l4420 383C                                    l4412 37C6  
                                  l4404 376A                                    l4260 2254  
                                  l4252 221C                                    l4244 2190  
                                  l4236 213C                                    l4228 20F6  
                                  l4180 1FB8                                    l4172 1F88  
                                  l4500 395E                                    l5036 3A98  
                                  l5028 3A66                                    l5204 1A14  
                                  l5140 160E                                    l5132 15B0  
                                  l5220 1A84                                    l1597 4B44  
                                  l5070 49AC                                    l5062 45EC  
                                  l5054 45CA                                    l5046 45B4  
                                  l4334 3D2E                                    l4326 3CFC  
                                  l4342 3D44                                    l4318 3CD6  
                                  l4350 3EDA                                    l4158 272C  
                                  l4094 2506                                    l4086 24C8  
                                  l4078 24A4                                    l4414 37D8  
                                  l4406 377A                                    l4270 22BE  
                                  l4262 2258                                    l4254 2226  
                                  l4246 21BA                                    l4238 214C  
                                  l4190 1FEA                                    l4182 1FC8  
                                  l4174 1F96                                    l4502 399C  
                                  l4510 39DC                                    l5038 3AB4  
                                  l5222 1AA8                                    l5206 1A38  
                                  l5214 1A68                                    l5150 16BE  
                                  l5142 1648                                    l5134 15D4  
                                  l5126 153A                                    l5118 1528  
                                  l5302 4A2C                                    l4600 4612  
                                  l5064 45EE                                    l5056 45CC  
                                  l5048 45C4                                    l5240 457C  
                                  l4344 3D54                                    l4336 3D36  
                                  l4328 3D04                                    l4360 3F06  
                                  l4352 3EDE                                    l4096 2516  
                                  l4416 37E6                                    l4408 37A8  
                                  l4280 2320                                    l4272 22CA  
                                  l4264 2266                                    l4256 2234  
                                  l4248 21F0                                    l4192 1FF8  
                                  l4184 1FCE                                    l4176 1F98  
                                  l4424 4886                                    l3800 1AC8  
                                  l4440 368A                                    l4432 3636  
                                  l4512 39EE                                    l4504 39C4  
                                  l4520 42AE                                    l5216 1A76  
                                  l5208 1A46                                    l5160 1744  
                                  l5144 1668                                    l5136 15DC  
                                  l5152 16D0                                    l5128 158E  
                                  l5400 49E2                                    l5320 480A  
                                  l5072 4A80                                    l5066 499A  
                                  l5330 4ACA                                    l4602 4616  
                                  l5058 45D8                                    l5250 45A0  
                                  l5242 457E                                    l5234 4568  
                                  l5410 4762                                    l4346 3D5C  
                                  l4338 3D38                                    l4370 3F3E  
                                  l4362 3F0E                                    l4354 3EEC  
                                  l4098 2526                                    l4418 3836  
                                  l4290 2388                                    l4282 2334  
                                  l4274 22D8                                    l4266 2294  
                                  l4258 2246                                    l4194 1FFA  
                                  l4186 1FDE                                    l4178 1FA8  
                                  l4426 489C                                    l3810 1B08  
                                  l3802 1AD6                                    l4442 368C  
                                  l4434 364C                                    l4506 39D0  
                                  l4522 42BE                                    l4530 41DA  
                                  l4610 0856                                    l5170 17DC  
                                  l5162 1776                                    l5154 16F2  
                                  l5146 1676                                    l5138 15EA  
                                  l5402 49E8                                    l5090 4AE4  
                                  l5322 4812                                    l5314 47DE  
                                  l5074 4A84                                    l5306 4A50  
                                  l5068 49A8                                    l4604 462C  
                                  l5252 45A2                                    l5244 4580  
                                  l5236 4578                                    l5260 427C  
                                  l5420 478C                                    l5412 4762  
                                  l4380 3F78                                    l4372 3F54  
                                  l4364 3F20                                    l4356 3EF4  
                                  l4292 238A                                    l4284 234E  
                                  l4276 2302                                    l4196 200A  
                                  l4188 1FE4                                    l4428 48AC  
                                  l3900 1CC8                                    l3820 1B3A  
                                  l3812 1B0A                                    l3804 1AD8  
                                  l4444 369C                                    l4516 3A32  
                                  l4540 3012                                    l4524 4192  
                                  l4700 0C02                                    l4620 08AA  
                                  l4612 0860                                    l5180 18A4  
                                  l5164 1788                                    l5156 1702  
                                  l5092 14AE                                    l5340 3216  
                                  l5332 319C                                    l5404 49EE  
                                  l5316 47F2                                    l5084 4A9C  
                                  l5076 4A88                                    l5308 4A56  
                                  l5500 46B4                                    l5270 3DA6  
                                  l5262 3D66                                    l4606 4630  
                                  l5246 458C                                    l5238 457A  
                                  l5254 4250                                    l5422 4792  
                                  l5414 4772                                    l4382 3F80  
                                  l4374 3F5C                                    l4366 3F28  
                                  l4358 3EF8                                    l4390 3FC8  
                                  l4286 236A                                    l4294 2390  
                                  l4278 2306                                    l4198 201A  
                                  l3910 1D08                                    l3830 1B62  
                                  l3822 1B3C                                    l3806 1AE8  
                                  l3814 1B12                                    l4470 371A  
                                  l4454 36C6                                    l4446 36A0  
                                  l4438 3660                                    l4542 3020  
                                  l4550 3100                                    l4534 2F88  
                                  l4702 0C14                                    l4630 08EE  
                                  l4622 08B4                                    l4614 0870  
                                  l5182 18B6                                    l5190 192E  
                                  l5166 179E                                    l5174 1808  
                                  l5158 1734                                    l5094 14D2  
                                  l5350 3270                                    l5334 31AC  
                                  l5406 49F4                                    l5318 4802  
                                  l5078 4A96                                    l5326 4AD0  
                                  l5510 43F2                                    l5502 46C4  
                                  ?_pad 0011                                    l5280 3DCA  
                                  l5272 3DA8                                    l5264 3D76  
                                  l5328 4ABC                                    l5248 459E  
                                  l5424 464A                                    l5256 4254  
                                  l5416 477A                                    l4376 3F62  
                                  l4368 3F30                                    l4392 3FF6  
                                  l4296 2394                                    l4288 237A  
                                  l3920 1D32                                    l3912 1D14  
                                  l3904 1CDC                                    l3840 1B9C  
                                  l3832 1B72                                    l3824 1B42  
                                  l3816 1B22                                    l3808 1AF8  
                                  l4472 372A                                    l4464 36EE  
                                  l4456 36D0                                    l4448 36AE  
                                  l4552 313C                                    l4536 2FA8  
                                  l4480 3C00                                    l4528 41C8  
                                  l4800 1136                                    l4720 0CC4  
                                  l4704 0C1C                                    l4632 08FA  
                                  l4640 0910                                    l4624 08BC  
                                  l4616 087E                                    l5192 1952  
                                  l5184 18EA                                    l5176 1836  
                                  l5168 17AC                                    l5096 14E0  
                                  l5520 448C                                    l5360 32D4  
                                  l5352 3272                                    l5344 322A  
                                  l5336 31BA                                    l5440 3840  
                                  l5408 4B0C                                    l5088 4AF8  
                                  l4608 4B20                                    l5512 4402  
                                  l5504 43C0                                    l5600 28D0  
                                  l5290 3DEE                                    l5282 3DD2  
                                  l5274 3DB4                                    l5266 3D90  
                                  l5530 4968                                    l5434 466A  
                                  l5426 465A                                    l5258 4278  
                                  l5418 4784                                    l4378 3F68  
                                  l4394 4006                                    l4386 3F8A  
                                  l3930 1DA4                                    l3914 1D18  
                                  l3906 1CEC                                    l3922 1D38  
                                  l3850 1BC8                                    l3842 1BAE  
                                  l3834 1B82                                    l3826 1B50  
                                  l3818 1B28                                    l4466 36FA  
                                  l4458 36DA                                    l4554 3150  
                                  l4546 3090                                    l4538 2FFE  
                                  l4490 3C46                                    l4482 3C0E  
                                  l4810 117C                                    l4802 1144  
                                  l4730 0CFC                                    l4722 0CCC  
                                  l4714 0C60                                    l4706 0C36  
                                  l4650 099A                                    l4642 0936  
                                  l4634 0902                                    l4626 08CE  
                                  l4618 0886                                    l4562 47A0  
                                  l4570 4228                                    l5194 1976  
                                  l5098 14F2                                    l5522 4494  
                                  l5370 332C                                    l5362 32F2  
                                  l5354 327E                                    l5346 3232  
                                  l5338 3200                                    l5450 388E  
                                  l5442 3844                                    l5514 4412  
                                  l5506 43D2                                    l5610 2940  
                                  l5602 28D4                                    l5292 3E0A  
                                  l5284 3DDE                                    l5276 3DBC  
                                  l5268 3DA4                                    l5532 4978  
                                  l5436 467C                                    l5428 4666  
                                  l4580 44C4                                    l4396 402A  
                                  l4388 3FB8                                    l3940 1DFE  
                                  l3924 1D5E                                    l3932 1DB4  
                                  l3916 1D26                                    l3908 1CFA  
                                  l3860 1BDC                                    l3852 1BCC  
                                  l3844 1BBC                                    l3836 1B84  
                                  l3828 1B52                                    l4468 370A  
                                  l4556 3178                                    l4548 30CC  
                                  l4492 3C74                                    l4484 3C1A  
                                  l4476 3BDC                                    l4820 11A6  
                                  l4812 1180                                    l4804 114C  
                                  l4740 0D46                                    l4732 0D0A  
                                  l4716 0C72                                    l4724 0CD0  
                                  l4708 0C4E                                    l4660 0A0A  
                                  l4652 09B2                                    l4636 0906  
                                  l4628 08DC                                    l4572 423A  
                                  l5196 198C                                    l5380 4138  
                                  l5524 44B0                                    l5516 4472  
                                  l5372 333A                                    l5364 32F4  
                                  l5356 32BA                                    l5348 323E  
                                  l5452 389A                                    l5444 3872  
                                  l5460 40CC                                    l5700 2F4A  
                                  l5508 43E2                                    l5620 296C  
                                  l5612 294C                                    l5604 28F2  
                                  l5540 40BE                                    l5286 3DE6  
                                  l5278 3DBE                                    l5534 497C  
                                  l5438 467E                                    l4582 44C8  
                                  l4398 4030                                    l3950 1E2E  
                                  l3942 1E08                                    l3934 1DDA  
                                  l3926 1D92                                    l3918 1D28  
                                  l3870 1BF0                                    l3862 1BE0  
                                  l3854 1BD0                                    l3846 1BC0  
                                  l3838 1B8C                                    l4558 3188  
                                  l3790 3B40                                    l4494 3C88  
                                  l4486 3C2E                                    l4478 3BEC  
                                  l4910 1486                                    l4902 1450  
                                  l4830 11DA                                    l4822 11AC  
                                  l4814 1186                                    l4806 115E  
                                  l4750 0D8C                                    l4742 0D58  
                                  l4734 0D0E                                    l4726 0CD8  
                                  l4718 0C8E                                    l4654 09BC  
                                  l4646 096C                                    l4638 090A  
                                  l4566 41F2                                    l5198 199A  
                                  l5382 4146                                    l5518 4484  
                                  l5374 333C                                    l5366 32F8  
                                  l5358 32C6                                    l5454 3934  
                                  l5446 3874                                    l5470 4126  
                                  l5462 40FE                                    l5702 2F7C  
                                  l5390 4AB4                                    l5294 49FE  
                                  l5614 295C                                    l5606 2910  
                                  l5550 2758                                    l5710 430A  
                                  l5542 40C2                                    l5480 353C  
                                  l5528 4964                                    l4592 45FE  
                                  l4576 48BE                                    l4584 44DC  
                                  l3960 1E56                                    l3952 1E32  
                                  l3944 1E16                                    l3936 1DEA  
                                  l3928 1D94                                    l3880 1C2A  
                                  l3872 1BF4                                    l3864 1BE4  
                                  l3856 1BD4                                    l3848 1BC4  
                                  l3792 3B5E                                    l3784 3B12  
                                  l4488 3C42                                    l4912 148C  
                                  l4904 1462                                    l4816 1192  
                                  l4808 116C                                    l4824 11B2  
                                  l4832 11E0                                    l4840 1278  
                                  l4760 0EA0                                    l4752 0DF0  
                                  l4736 0D20                                    l4744 0D60  
                                  l4728 0CEA                                    l4664 0A40  
                                  l4648 097E                                    l4920 2A40  
                                  l5384 416C                                    l5720 4418  
                                  l5368 331C                                    l5448 3876  
                                  l5464 4100                                    l5392 4AB6  
                                  l5632 298C                                    l5608 292E  
                                  l5560 2774                                    l5552 275C  
                                  l5712 4310                                    l5536 4034  
                                  l5490 35EA                                    l5482 3558  
                                  l5474 34DE                                    l4594 460A  
                                  l4586 450A                                    l3970 1EB0  
                                  l3962 1E64                                    l3954 1E42  
                                  l3946 1E18                                    l3890 1C7C  
                                  l3882 1C46                                    l3874 1BF8  
                                  l3866 1BE8                                    l3858 1BD8  
                                  l4498 393E                                    l3794 3B94  
                                  l3786 3B24                                    l4906 146E  
                                  l4850 12E2                                    l4842 1296  
                                  l4834 1238                                    l4826 11C4  
                                  l4818 11A2                                    l4770 0F5E  
                                  l4762 0ED4                                    l4754 0E48  
                                  l4746 0D68                                    l4738 0D2E  
                                  l4690 0BA2                                    l4682 0ADA  
                                  l4666 0A52                                    l4658 09E4  
                                  l4930 2AAE                                    l4922 2A42  
                                  l5378 4130                                    l5722 441E  
                                  l5466 4102                                    l5458 40C8  
                                  l5386 4AA0                                    l5394 49CC  
                                  l5298 4A22                                    l5650 29BC  
                                  l5626 297C                                    l5570 27C0  
                                  l5562 277A                                    l5554 2760  
                                  l5546 2740                                    l5730 4364  
                                  l5714 4336                                    l5538 4038  
                                  l5492 361E                                    l5484 358C  
                                  l5476 34FA                                    l5740 4B32  
                                  l4588 450E                                    l3980 1F1A  
                                  l3972 1EBE                                    l3964 1E7A  
                                  l3948 1E26                                    l3956 1E44  
                                  l3892 1C8A                                    l3884 1C56  
                                  l3868 1BEC                                    l3876 1BFC  
                                  l3788 3B36                                    l4908 1476  
                                  l4860 1320                                    l4852 12E6  
                                  l4844 12B2                                    l4836 126C  
                                  l4828 11D6                                    l4780 1032  
                                  l4772 0F6E                                    l4764 0F06  
                                  l4756 0E7C                                    l4748 0D78  
                                  l4692 0BAA                                    l4684 0B0E  
                                  l4668 0A6E                                    l4676 0A8A  
                                  l4940 2AEA                                    l4932 2AB6  
                                  l4924 2A5C                                    l5724 4444  
                                  l5468 411A                                    l5388 4AA4  
                                  l5396 49D0                                    l5644 29AC  
                                  l5580 2836                                    l5572 27CA  
                                  l5564 278A                                    l5556 2764  
                                  l5548 2746                                    l5732 436A  
                                  l5716 4348                                    l5486 359A  
                                  l5478 3508                                    l5742 4B3E  
                                  l3990 1F54                                    l3982 1F3A  
                                  l3974 1EF8                                    l3958 1E52  
                                  l3894 1C8C                                    l3886 1C6C  
                                  l3878 1C00                                    l3798 1ABC  
                                  l4870 1352                                    l4862 1328  
                                  l4854 12F6                                    l4846 12C4  
                                  l4838 1274                                    l4790 107A  
                                  l4782 1046                                    l4774 0FA2  
                                  l4766 0F1C                                    l4758 0E82  
                                  l4686 0B14                                    l4694 0BDC  
                                  l4678 0AA4                                    l4942 2AFA  
                                  l4934 2AC0                                    l4926 2A86  
                                  l4918 2A30                                    l5726 4456  
                                  l5670 2D68                                    l5398 49DC  
                                  l5638 299C                                    l5590 2896  
                                  l5582 2842                                    l5574 27E8  
                                  l5566 2798                                    l5558 2768  
                                  l5734 4390                                    l5750 3E36  
                                  l5488 35CE                                    l3992 1F5A  
                                  l3984 1F3E                                    l3968 1EA4  
                                  l3976 1EFA                                    l3896 1C96  
                                  l3888 1C78                                    l4872 1358  
                                  l4880 13A8                                    l4864 1336  
                                  l4856 1308                                    l4848 12D2  
                                  l4792 109E                                    l4776 0FF8  
                                  l4784 104A                                    l4768 0F4E  
                                  l4696 0BEC                                    l4688 0B6E  
                                  l4960 2BC2                                    l4952 2B86  
                                  l4936 2AC6                                    l4928 2A8E  
                                  l5672 2D9A                                    l5664 2D0A  
                                  l5496 4692                                    l5592 28B4  
                                  l5576 2806                                    l5568 27AE  
                                  l5584 2852                                    l5736 43A2  
                                  l5760 3E6C                                    l5752 3E4C  
                                  l3994 1F68                                    l3986 1F4C  
                                  l3978 1F0A                                    l3898 1CB8  
                                  l4890 13F8                                    l4882 13BA  
                                  l4874 137E                                    l4866 133E  
                                  l4858 1310                                    l4794 1102  
                                  l4786 105A                                    l4778 0FFE  
                                  l4698 0BF0                                    l4970 2C7A  
                                  l4962 2BC8                                    l4954 2B98  
                                  l4946 2B3A                                    l4938 2ACE  
                                  l5690 2ED8                                    l5674 2DCC  
                                  l5682 2E10                                    l5666 2D1C  
                                  l5498 46A4                                    l5658 29CC  
                                  l5586 285A                                    l5578 2824  
                                  l5762 3E74                                    l5770 3EC2  
                                  l5754 3E50                                    l5746 3E2A  
                                  l3996 1F6A                                    l3988 1F52  
                                  l4892 1400                                    l4884 13D4  
                                  l4876 139A                                    l4868 1346  
                                  l4796 1112                                    l4788 106E  
                                  l4980 2CE0                                    l4972 2C94  
                                  l4948 2B4C                                    l4956 2BAC  
                                  l4964 2C26                                    l5684 2E42  
                                  l5676 2DFE                                    l5668 2D42  
                                  l5588 2878                                    l5764 3E7C  
                                  l5756 3E54                                    l5748 3E32  
                                  l4990 336A                                    l4894 1410  
                                  l4886 13DA                                    l4878 13A2  
                                  l4798 1124                                    l4974 2CB4  
                                  l4966 2C42                                    l4958 2BBC  
                                  l5686 2E74                                    l5678 2E0C  
                                  l5598 28CA                                    l5758 3E64  
                                  l5880 340A                                    l4992 3386  
                                  l4984 334E                                    l4896 1416  
                                  l4888 13EC                                    l4976 2CBA  
                                  l4968 2C60                                    l5688 2EA6  
                                  l5696 2EE6                                    l5768 3E84  
                                  l4994 33BC                                    l4986 3362  
                                  l4898 141C                                    l4978 2CCA  
                                  l5698 2F18                                    l5874 3E9C  
                                  l4996 33C0                                    l4988 3366  
                                  l5876 29F0                                    l5878 1560  
                                  STR_1 0852                                    STR_2 084F  
                                  STR_3 0824                                    STR_4 082C  
                                  STR_5 082C                                    STR_6 0824  
                                  STR_7 082C                                    STR_8 082C  
                                  STR_9 0828                                    u3110 3B24  
                                  u3111 3B20                                    u4000 234E  
                                  u3200 1B62                                    u3120 3B36  
                                  _LATD 000F8C                                    u4001 234A  
                                  u3201 1B5E                                    u3121 3B32  
                                  u4010 2388                                    u3210 1B72  
                                  u3130 3B5E                                    u4011 2384  
                                  u3211 1B6E                                    u3131 3B5A  
                                  u4020 3CB4                                    u4100 3F20  
                                  u3300 1CB8                                    u3220 1BAE  
                                  u3140 3B94                                    u4021 3CB0  
                                  u4101 3F1C                                    u3301 1CB4  
                                  u3221 1BAA                                    u3141 3B90  
                                  u4030 3CCE                                    u4110 3F3E  
                                  u3310 1CC8                                    u3230 1BBC  
                                  u3150 1AD6                                    u4031 3CCA  
                                  u4111 3F3A                                    u3311 1CC4  
                                  u3231 1BB8                                    u3151 1AD2  
                                  u4040 3CF4                                    u4120 3F54  
                                  u4200 37E6                                    u3400 1E26  
                                  u3320 1CFA                                    u3240 1C2A  
                                  u3160 1AE8                                    u5000 0FF8  
                                  u4041 3CF0                                    u4121 3F50  
                                  u4201 37E2                                    u3401 1E22  
                                  u3321 1CF6                                    u3241 1C26  
                                  u3161 1AE4                                    u5001 0FF4  
                                  u4050 3D12                                    u4130 3F78  
                                  u4210 3836                                    u3410 1E42  
                                  u3330 1D08                                    u3250 1C42  
                                  u3170 1AF8                                    u5010 1046  
                                  u4051 3D0E                                    u4131 3F74  
                                  u4211 3832                                    u3411 1E3E  
                                  u3331 1D04                                    u3251 1C3C  
                                  u3171 1AF4                                    u5011 1042  
                                  u4060 3D2E                                    u4140 3FB8  
                                  u4220 489C                                    u3500 1F1A  
                                  u3420 1E52                                    u3340 1D26  
                                  u3260 1C44                                    u3180 1B3A  
                                  u4300 3BEC                                    u5100 1296  
                                  u5020 106E                                    u4061 3D2A  
                                  u4141 3FB4                                    u4221 4898  
                                  u3501 1F16                                    u3421 1E4E  
                                  u3341 1D22                                    u3181 1B36  
                                  u4301 3BE8                                    u5101 1292  
                                  u5021 106A                                    u4070 3D54  
                                  u4150 3FF6                                    u3510 1F3A  
                                  u3430 1E64                                    u3350 1D5E  
                                  u3270 1C6C                                    u3190 1B50  
                                  u4230 364C                                    u4310 3C0E  
                                  u5110 12B2                                    u5030 1112  
                                  u4071 3D50                                    u4151 3FF2  
                                  u3511 1F36                                    u3431 1E60  
                                  u3351 1D5A                                    u3271 1C68  
                                  u3191 1B4C                                    u4231 3648  
                                  u4311 3C0A                                    u5111 12AE  
                                  u5031 110E                                    u6000 468E  
                                  u4080 3EEC                                    u3600 23C0  
                                  u4160 402A                                    u3520 1F4C  
                                  u3440 1E7A                                    u3360 1DA4  
                                  u3280 1C8A                                    u4240 3680  
                                  u4400 3A2A                                    u4320 3C64  
                                  u5200 144C                                    u5120 12C4  
                                  u5040 1124                                    u6001 468A  
                                  u4081 3EE8                                    u3601 23BC  
                                  u4161 4026                                    u3521 1F48  
                                  u3441 1E76                                    u3361 1DA0  
                                  u3281 1C86                                    u4321 3C60  
                                  u5121 12C0                                    u5041 1120  
                                  u4090 3F06                                    u3610 23D2  
                                  u4170 376A                                    u3530 1F68  
                                  u3450 1E90                                    u3370 1DDA  
                                  u3290 1CAA                                    u4250 36AE  
                                  u4330 3C74                                    u4410 42F6  
                                  u5210 1462                                    u5130 12D2  
                                  u5050 1136                                    u6010 3886  
                                  u4091 3F02                                    u3611 23CE  
                                  u4171 3766                                    u3531 1F64  
                                  u3451 1E8C                                    u3371 1DD6  
                                  u3291 1CA6                                    u4251 36AA  
                                  u4331 3C70                                    u5211 145E  
                                  u5131 12CE                                    u5051 1132  
                                  u6011 3882                                    u3700 258A  
                                  u3620 23E2                                    u4180 37A8  
                                  u3460 1EA4                                    u3380 1DEA  
                                  u4260 36C2                                    u4340 397E  
                                  u4500 308C                                    u3540 475E  
                                  u4420 4308                                    u5140 1308  
                                  u5060 1144                                    u5300 2B82  
                                  u5220 2A40                                    u6020 4112  
                                  u6100 2E42                                    u3701 2586  
                                  u3621 23DE                                    u4181 37A4  
                                  u3461 1EA0                                    u3381 1DE6  
                                  u4261 36BE                                    u4245 3676  
                                  u4501 3088                                    u3541 475A  
                                  u4421 4304                                    u5141 1304  
                                  u5061 1140                                    u5221 2A3C  
                                  u6021 410E                                    u6101 2E3E  
                                  u6030 4998                                    u3710 25AE  
                                  u3630 2426                                    u4190 37C6  
                                  u3470 1EBE                                    u3390 1E16  
                                  u4270 36EA                                    u4350 399C  
                                  u4510 30B0                                    u3550 4956  
                                  u4430 41C2                                    u5150 1336  
                                  u5070 115E                                    u5310 2B98  
                                  u5230 2A5C                                    u6110 2E74  
                                  u6031 4994                                    u3711 25AA  
                                  u3631 2422                                    u4191 37C2  
                                  u3471 1EBA                                    u3391 1E12  
                                  u4271 36E6                                    u4351 3998  
                                  u3551 4952                                    u4431 41BC  
                                  u5151 1332                                    u5071 115A  
                                  u5311 2B94                                    u5231 2A58  
                                  u6111 2E70                                    u5400 33BC  
                                  u3800 26CE                                    u3720 25C4  
                                  u3640 2438                                    u3480 1EF8  
                                  u4280 370A                                    u4360 39C4  
                                  u4520 30CC                                    u3560 487E  
                                  u4440 41C4                                    u5160 13BA  
                                  u5080 116C                                    u4600 423A  
                                  u5320 2C00                                    u5240 2A86  
                                  u6120 2EA6                                    u5401 33B8  
                                  u3801 26CA                                    u3721 25C0  
                                  u3641 2434                                    u3481 1EF4  
                                  u4281 3706                                    u4361 39C0  
                                  u4345 3974                                    u4521 30C8  
                                  u4417 42EC                                    u3561 4878  
                                  u5161 13B6                                    u5081 1168  
                                  u4601 4236                                    u5241 2A82  
                                  u6121 2EA2                                    u6041 2750  
                                  u4610 48EE                                    u5410 33D8  
                                  u3810 26FE                                    u3730 25E2  
                                  u3650 2448                                    u3490 1F0A  
                                  u4290 371A                                    u4370 39EE  
                                  u4530 3120                                    u3570 4880  
                                  u4450 41DA                                    u5170 13D4  
                                  u5090 11C4                                    u5330 2C42  
                                  u5250 2AEA                                    u6130 2ED8  
                                  u6050 278A                                    u4611 48E8  
                                  u5411 33D4                                    u3811 26FA  
                                  u3731 25DE                                    u3651 2444  
                                  u3491 1F06                                    u4291 3716  
                                  u4371 39EA                                    u4515 30A6  
                                  u4451 41D6                                    u5171 13D0  
                                  u5091 11C0                                    u5331 2C3E  
                                  u5251 2AE6                                    u6131 2ED4  
                                  u6051 2786                                    u4620 48F0  
                                  u5420 348E                                    u3820 272C  
                                  u3740 2602                                    u3660 2488  
                                  u3900 2060                                    u4540 313C  
                                  u4460 2FD0                                    u5180 13EC  
                                  u4700 08DC                                    u5500 3AEE  
                                  u3580 4846                                    u5340 2C60  
                                  u5260 2B34                                    u6140 2F18  
                                  u6060 2798                                    u5421 3488  
                                  u3821 2728                                    u3741 25FE  
                                  u3661 2484                                    u3901 205C  
                                  u4541 3138                                    u5181 13E8  
                                  u4701 08D8                                    u5501 3AEA  
                                  u3581 4840                                    u5341 2C5C  
                                  u5325 2BEE                                    u5261 2B2E  
                                  u6141 2F14                                    u6061 2794  
                                  u5510 49CA                                    u4630 44DC  
                                  u5430 3490                                    u3750 2614  
                                  u3670 24C8                                    u3910 21DA  
                                  u3830 1F96                                    u4390 3A28  
                                  u4550 3178                                    u4470 2FFE  
                                  u5190 144A                                    u4710 08EE  
                                  u3590 4848                                    u5350 2C7A  
                                  u5270 2B36                                    u6150 2F4A  
                                  u6070 2D9A                                    u5511 49C6  
                                  u6207 3500                                    u4631 44D8  
                                  u3751 2610                                    u3671 24C4  
                                  u3831 1F92                                    u4391 3A22  
                                  u4551 3174                                    u4535 3116  
                                  u4471 2FFA                                    u5191 1444  
                                  u4711 08EA                                    u5351 2C76  
                                  u6151 2F46                                    u6071 2D96  
                                  u4640 450A                                    u5440 34A6  
                                  u3760 2642                                    u3680 253E  
                                  u3920 2234                                    u3840 1FA8  
                                  u4480 3020                                    u4800 0AD6  
                                  u4720 0936                                    u4560 47D4  
                                  u5360 2C94                                    u5280 2B4C  
                                  u5600 16B8                                    u6160 2F7C  
                                  u6080 2DCC                                    u5520 4A96  
                                  u6217 352E                                    u4641 4506  
                                  u5441 34A2                                    u3761 263E  
                                  u3681 253A                                    u3921 2230  
                                  u3841 1FA4                                    u4385 3A00  
                                  u4481 301C                                    u4465 2FC6  
                                  u4801 0AD2                                    u4721 0932  
                                  u4561 47CE                                    u5361 2C90  
                                  u5281 2B48                                    u5601 16B2  
                                  u6161 2F78                                    u6081 2DC8  
                                  u5521 4A92                                    u4650 462C  
                                  u5450 34B8                                    u3770 2658  
                                  u3690 2560                                    u3930 2254  
                                  u3850 1FB8                                    u4810 0B6A  
                                  u4730 0966                                    u4570 47D6  
                                  u5370 2CA4                                    u5290 2B80  
                                  u5610 16BA                                    u6090 2DFE  
                                  u5530 4B0A                                    u6227 3562  
                                  u4651 4628                                    u5451 34B4  
                                  u3771 2654                                    u3691 255C  
                                  u3931 2250                                    u3915 21D0  
                                  u3851 1FB4                                    u4811 0B66  
                                  u4731 0960                                    u5371 2CA0  
                                  u5291 2B7A                                    u6091 2DFA  
                                  u5531 4B06                                    u4660 4646  
                                  u3780 266C                                    u3940 2266  
                                  u3860 1FF8                                    u4900 0CEA  
                                  u4820 0BDC                                    u4740 0968  
                                  u5460 3A66                                    u4580 4222  
                                  u5380 2CB4                                    u5700 1952  
                                  u5620 16D0                                    u5540 4AF6  
                                  _RCEN 007E2B                                    _RCIF 007CF5  
                                  u6237 3592                                    u4661 4642  
                                  u3781 2668                                    u3941 2262  
                                  u3861 1FF4                                    u4901 0CE6  
                                  u4821 0BD8                                    u5461 3A62  
                                  u4581 421C                                    u5381 2CB0  
                                  u5701 194E                                    u5621 16CC  
                                  u5541 4AF2                                    u5390 3386  
                                  u3790 2686                                    u3950 2294  
                                  u3870 200A                                    u4910 0CFC  
                                  u4830 0C02                                    u4750 097E  
                                  u5470 3A98                                    u4590 4224  
                                  u5710 1976                                    u5630 1702  
                                  u5550 14D2                                    u4670 4B2E  
                                  u6247 35C0                                    u5391 3382  
                                  u3791 2682                                    u3951 2290  
                                  u3871 2006                                    u4495 3034  
                                  u4911 0CF8                                    u4831 0BFE  
                                  u4751 097A                                    u5471 3A94  
                                  u5711 1972                                    u5631 16FE  
                                  u5551 14CE                                    u4671 4B2A  
                                  u3960 22AA                                    u3880 201A  
                                  u4496 303E                                    u4920 0D0A  
                                  u4840 0C14                                    u4760 0A0A  
                                  u4680 087E                                    u5480 3AB4  
                                  u5720 1A38                                    u5640 1744  
                                  u5560 15A0                                    u5800 4A1E  
                                  u6257 35F4                                    u3961 22A6  
                                  u3881 2016                                    u4497 304E  
                                  u4921 0D06                                    u4841 0C10  
                                  u4761 0A06                                    u4681 087A  
                                  u5481 3AB0                                    u5721 1A34  
                                  u5641 1740                                    u5561 159C  
                                  u5801 4A1A                                    u5730 4274  
                                  u3970 22BE                                    u3890 2050  
                                  u4930 0D20                                    u4850 0C36  
                                  u4770 0A3A                                    u4690 08CE  
                                  u5490 3AC6                                    u5650 1788  
                                  u5570 15AE                                    u5810 4A3C  
                                  u6267 3628                                    u3971 22BA  
                                  u3891 204C                                    u4931 0D1C  
                                  u4851 0C32                                    u4771 0A34  
                                  u4691 08CA                                    u5491 3AC2  
                                  u5651 1784                                    u5571 15AA  
                                  u5811 4A38                                    u5740 429C  
                                  u3980 22D8                                    u4940 0D2E  
                                  u4860 0C5C                                    u4780 0A3C  
                                  u5660 1836                                    u5580 15D4  
                                  u5900 326C                                    u5820 4A4C  
                                  u3981 22D4                                    u4941 0D2A  
                                  u4861 0C58                                    u5661 1832  
                                  u5581 15D0                                    u5901 3268  
                                  u5821 4A48                                    u5750 42AC  
                                  u3990 2320                                    u4950 0D58  
                                  u4870 0C72                                    u4790 0A52  
                                  u5670 189E                                    u5590 160E  
                                  u5910 32B6                                    u5830 47EE  
                                  u5751 42A8                                    u3991 231C  
                                  u4951 0D54                                    u4871 0C6E  
                                  u4791 0A4E                                    u5671 1898  
                                  u5591 160A                                    u5911 32B2  
                                  u5831 47EA                                    u5760 3D9E  
                                  u4960 0EA0                                    u4880 0C8E  
                                  u5680 18A0                                    u5920 32D4  
                                  u5840 4802                                    u5737 426A  
                                  u4961 0E9C                                    u4881 0C8A  
                                  u5921 32D0                                    u5841 47FE  
                                  u5770 3E0A                                    u4970 0F06  
                                  u4890 0CC4                                    u5690 18B6  
                                  u5930 32E4                                    u5850 4AE0  
                                  u5771 3E06                                    u5747 4292  
                                  u4971 0F02                                    u4891 0CC0  
                                  u5691 18B2                                    u5931 32E0  
                                  u5851 4ADC                                    u5780 3E28  
                                  u5860 4ACA                                    u4980 0F4E  
                                  u5940 32F2                                    u5781 3E24  
                                  u5765 3D98                                    u5861 4AC6  
                                  u4981 0F4A                                    u5941 32EE  
                                  u4990 0F5E                                    u5950 332C  
                                  u5870 31AC                                    u5790 4A0E  
                                  u4991 0F5A                                    u5951 3328  
                                  u5871 31A8                                    u5791 4A0A  
                                  u5960 333A                                    u5880 31BA  
                                  u5961 3336                                    u5881 31B6  
                                  u5970 4188                                    u5890 3216  
                                  u5971 4184                                    u5891 3212  
                                  u5980 4772                                    u5981 476E  
                                  u5990 465A                                    u5991 4656  
                                  _RSEN 007E29                                    _TXIF 007CF4  
                                  _Date 0104                                    _Year 0100  
                                  _Sluz 0200                                    _dbuf 010E  
                                  _atoi 334E                                    _main 3E2A  
                       ?_RTC_Read_Clock 0001                                    _hour 0108  
                      __end_of_I2C_Nack 4AF8                      __size_of_LCD_Clear 0014  
                                  _play 3D66                                    _prec 00F6  
                      __end_of_I2C_Init 4ABA                        __end_of_I2C_Read 4816  
                                  _nout 00F2                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
              __end_of_USART_SendString 499A                                    _xtoa 2A30  
                      __end_of_I2C_Stop 4AE4                           ___fpclassifyf 393E  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0000                         ___fldiv@new_exp 003D  
                         _LCD_String_xy 4760                            _tolower$1681 000D  
                          ___param_bank 000000                         __end_of_ReadADC 393E  
                       __end_of_ReadLUZ 4130                         __end_of_Estados 2F88  
      RTC_Read_Clock@read_clock_address 0004                                   ??_pad 0017  
                      __end_of_LCD_Char 45FE                        __end_of_LCD_Init 49FC  
                         ReadADC@result 0064                            LCD_MSdelay@i 0003  
                          LCD_MSdelay@j 0005                           ___fltol@sign1 005D  
                                 ?_atoi 0008                         __end_of___fladd 1F7C  
                                 ?_main 0001                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                         __end_of___fldiv 2740  
                       __end_of___awdiv 3D66                         __end_of___flneg 48BE  
                                 ?_play 0006                                   STR_10 0828  
                                 STR_11 0824                                   STR_20 080D  
                                 STR_12 0840                                   STR_21 080D  
                                 STR_13 083C                                   STR_14 0834  
                                 STR_22 0801                                   STR_31 084C  
                                 STR_15 0830                                   STR_23 0814  
                                 STR_16 0848                                   STR_24 081C  
                                 STR_33 084C                                   STR_17 0838  
                                 STR_18 0844                                   STR_27 0818  
                                 STR_19 080D                                   STR_28 0820  
                       __end_of___awmod 3F8A                         __end_of___flmul 23A6  
                       __end_of___flsub 471C                         __end_of___fltol 373C  
                       ___awdiv@divisor 0003                                   ?_xtoa 001C  
                                 _LATD0 007C60                                   _LATD1 007C61  
                                 _LATE0 007C68                                   _LATE1 007C69  
                                 _LATE2 007C6A                         ___awdiv@counter 0005  
                                 _RCREG 000FAE                                   _RCSTA 000FAB  
                          vfpfcnvrt@fmt 00A6                            vfpfcnvrt@llu 00AE  
                                 _SPBRG 000FAF                                   _TRISA 000F92  
                                 _TRISD 000F95                                   _SSPIE 007CEB  
                                 _TRISE 000F96                                   _SSPIF 007CF3  
                                 _TXREG 000FAD                                   _TXSTA 000FAC  
                                 _Month 0102                                   _Stemp 015E  
                                 _flags 00F8                                   _fputc 3B12  
                       __end_of_isalpha 47DC                                   _fputs 471C  
                       __end_of_isdigit 48F6                       __end_of_I2C_Ready 4B32  
                                 atoi@n 0015                                   pad@fp 0011  
                                 atoi@s 0008                                   _width 00F4  
                                 _putch 4B44                         __end_of_islower 484E  
                       __end_of_isspace 4516                       __end_of_I2C_Start 4A2A  
                     __end_of_I2C_Write 4AA0                         __end_of_isupper 4886  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                   __size_of_LCD_String 005E                         __end_of_sprintf 44C4  
                        ?___fpclassifyf 0001                         __end_of_tolower 41F2  
                                 xtoa@c 0041                                   xtoa@d 001E  
                                 xtoa@i 003F                                   xtoa@n 0037  
                                 xtoa@p 0033                                   xtoa@w 0035  
                                 xtoa@x 0026                         __end_of_strncmp 3B12  
                       __end_of_toupper 4250                           ??_PlayCancion 0013  
                        ?_LCD_String_xy 000B                           ??_Rainy_State 005F  
                           ?_USART_Init 0060                            _toupper$1696 000D  
               __end_of_LCD_Custom_Char 4690                         __initialization 4516  
                          __end_of_atoi 34DE                            __end_of_main 3EDA  
                          __end_of_play 3E2A                            __end_of_xtoa 2D0A  
                             ??_I2C_Ack 0001                   __size_of_Alarm_Status 0012  
                                ??_atoi 000A                                  ??_main 00DE  
                                ??_play 000C                                  ??_xtoa 0027  
                     __end_of_LCD_Clear 4B20                           __activetblptr 000002  
                  __end_of_Cloudy_State 4472                                  ?_fputc 0001  
                                ?_fputs 000A                                  _ADRESH 000FC4  
                                _ADRESL 000FC3                        ___awdiv@dividend 0001  
                                ?_putch 0001                        LCD_String_xy@msg 000C  
                      LCD_String_xy@pos 000B                        LCD_String_xy@row 000E  
                                _OSCCON 000FD3                           vfpfcnvrt@done 00B6  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _TRISC6 007CA6  
                                _TRISC7 007CA7                                  _SSPBUF 000FC9  
                      __end_of___xxtofl 334E                               ??_ReadADC 0062  
                             ??_ReadLUZ 0003                               ??_Estados 005F  
                      __end_of_delay_us 49CC                            _Alarm_Status 4B32  
                      ??_RTC_Calendario 00DC                            vfprintf@cfmt 00CA  
                                ___flge 373C                                  ___fleq 3F8A  
                             ??___fladd 004D                                  ___wmul 4A58  
                             ??___fldiv 0034                               ??___awdiv 0005  
                             ??___flneg 0005                               ??___awmod 0005  
                             ??___flmul 001B                               ??___flsub 005D  
                             ??___fltol 0059                                  _efgtoa 0856  
                   __end_of_PlayCancion 3636                                  _floorf 2F88  
                  __size_of_LCD_MSdelay 004A                     __end_of_Rainy_State 43BE  
                                clear_0 453C                                  clear_1 4548  
                                clear_2 4554                        ___awdiv@quotient 0007  
                       ___awmod@divisor 0003                                  isa$std 000001  
                                _tempar 00EE                                  _result 00FA  
                       ___awmod@counter 0005                      _I2C_Repeated_Start 4A2A  
                                pad@buf 0013                    __size_of_LCD_Command 004C  
                                _strcpy 42AE                                  _strlen 492E  
                                fputc@c 0001                                  fputs@c 000E  
                      LCD_Custom_Char@i 000C                                  fputs@i 000F  
                             ?_I2C_Nack 0001                                  fputs@s 000A  
                             ??_isalpha 0003                               ??_isdigit 0003  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                                play@fn 0011                               ?_I2C_Stop 0001  
                       ___fpclassifyf@e 0009                         ___fpclassifyf@u 000B  
                       ___fpclassifyf@x 0001                               ??_islower 0003  
            __end_of_USART_TransmitChar 4AD0                            __mediumconst 0000  
                             ??_isspace 0003                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                   __size_of_USART_Init 0094                                  putch@c 0001  
                      __end_of_vfprintf 4192                               ??_sprintf 005F  
                             ??_tolower 0009                                  xtoa@fp 001C  
                             ??_strncmp 0007                               ??_toupper 0009  
                            ___flge@ff1 002C                              ___flge@ff2 0030  
                       ??___fpclassifyf 0005                            ___xxtofl@arg 000F  
                          ___xxtofl@exp 000E                            ___xxtofl@val 0005  
                            ___fleq@ff1 0001                              ___fleq@ff2 0005  
                             ?_LCD_Char 0001                              __accesstop 0060  
               __end_of__initialization 455C                               ?_LCD_Init 0001  
                       ??_LCD_String_xy 000E                              ___flneg@f1 0001  
                         ___rparam_used 000001                              ___fltol@f1 0055  
                  ??_I2C_Repeated_Start 0002                        ?_LCD_Custom_Char 0009  
                        __pcstackCOMRAM 0001                             play@CiclosL 000F  
                          __pidataBANK1 48F6                           __end_of_fputc 3BDC  
                         __end_of_fputs 4760                           __end_of_putch 4B46  
                          ??_LCD_String 000B                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                        ??_RTC_Read_Clock 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00E2  
                            __pbssBANK1 0100                              __pbssBANK2 0200  
                            ??_LCD_Char 0007                              _character1 01E5  
                            _character2 01DD                              _character3 01D5  
                            ??_LCD_Init 0009                      __end_of_LCD_String 42AE  
                     ?_USART_SendString 0002                             _PlayCancion 34DE  
                           _Rainy_State 4364                      ??_USART_SendString 0004  
                          I2C_Read@flag 0001                           ??_Sunny_State 005F  
                               ?___flge 002C                                 ?___fleq 0001  
                        I2C_Read@buffer 0002                                 ?___wmul 0001  
                        LCD_MSdelay@val 0001                                 ?_efgtoa 0060  
                               ?_floorf 0045                                 _I2C_Ack 4AF8  
                               _ACKSTAT 007E2E                                 ?_strcpy 0001  
                               ?_strlen 0001                   __size_of_Cloudy_State 005A  
                             ?___xxtofl 0005                               ?_delay_us 0001  
                    __size_of_vfpfcnvrt 060E                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                             _I2C_Ready 4B20                                 _ReadADC 3840  
                             _I2C_Start 49FC                                 _ReadLUZ 40C8  
                             _I2C_Write 4A7E                                 _Estados 2D0A  
                         LCD_String@msg 0009                            ??_USART_Init 005F  
                               __Hparam 0000                                 __Lparam 0000  
                          _Cloudy_State 4418                         __size_of___flge 0104  
                       __size_of___fleq 00AA                                 ___fladd 1ABC  
                     _RTC_Read_Calendar 43BE                                 ___fldiv 23A6  
                               ___awdiv 3CA2                                 ___flneg 4886  
                               ___awmod 3EDA                                 ___flmul 1F7C  
                               ___flsub 46D6                                 ___fltol 3636  
                       __size_of___wmul 0026                               ?_vfprintf 00C4  
                          __psmallconst 0800                         __size_of_efgtoa 0C58  
                    ?_RTC_Read_Calendar 0001                         __size_of_floorf 0212  
                               _data_in 00FC                                 __pcinit 4516  
                               __ramtop 0800                                 __ptext0 3E2A  
                               __ptext1 4034                                 __ptext2 430A  
                               __ptext3 4364                                 __ptext4 2740  
                               __ptext5 4690                                 __ptext6 43BE  
                               __ptext7 4AD0                                 __ptext8 49FC  
                               __ptext9 4A2A                     USART_SendString@out 0002  
                   __end_of_Sunny_State 4364                         __size_of_strcpy 005C  
                       __size_of_strlen 0036                          USART_Init@temp 0064  
                          __size_of_pad 00C6                                 _isalpha 47A0  
                               _isdigit 48BE                              ??___xxtofl 0009  
                      ___awmod@dividend 0001                     ??_RTC_Read_Calendar 0003  
                               _islower 4816                                 _isspace 44C4  
                            ??_delay_us 0003                                 _isupper 484E  
                               efgtoa@c 0066                                 efgtoa@d 0084  
                               efgtoa@e 009C                                 efgtoa@f 0062  
                               efgtoa@g 0098                                 efgtoa@h 008E  
                               efgtoa@i 0096                                 efgtoa@l 0092  
                               efgtoa@m 007E                                 efgtoa@n 009E  
                               efgtoa@p 0088                                 efgtoa@t 0078  
                               efgtoa@u 00A0                                 efgtoa@w 008A  
                             _LCD_Clear 4B0C                                 atoi@neg 000E  
                    __end_of_USART_Init 40C8                                 _sprintf 4472  
                               _tolower 4192                                 _strncmp 3A3C  
                               _toupper 41F2                    end_of_initialization 455C  
                               floorf@e 0053                                 floorf@m 004F  
                               floorf@u 0055                                 floorf@x 0045  
                               fputc@fp 0003                          LCD_Command@cmd 0008  
                         __Lmediumconst 0000                                 fputs@fp 000C  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 4418  
                     __end_of_vfpfcnvrt 1ABC                              efgtoa@mode 008D  
                            efgtoa@sign 0086                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005F                                 strcpy@d 0009  
                               strlen@a 0003                                 strcpy@s 0007  
                               strlen@s 0001                             ___fladd@grs 0054  
                         ___xxtofl@sign 000D                               _TRISCbits 000F94  
                            ?_LCD_Clear 0001                       __size_of_I2C_Nack 0014  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 003A  
                           ___fldiv@grs 003F                             ___fldiv@rem 0038  
                     __size_of_I2C_Stop 0014                     USART_Init@baud_rate 0060  
                 USART_TransmitChar@out 0001                             ___flmul@grs 0020  
                          _Estados$1937 0068                      _USART_TransmitChar 4ABA  
                     __size_of_LCD_Char 004C                       __size_of_LCD_Init 0030  
                         ??_LCD_MSdelay 0003                             _Sunny_State 430A  
                   ?_USART_TransmitChar 0001                           ??_LCD_Command 0007  
                        __end_of___flge 3840                          __end_of___fleq 4034  
                           vfpfcnvrt@ap 00A8                             vfpfcnvrt@ct 00C0  
                           vfpfcnvrt@fp 00A4                          __end_of___wmul 4A7E  
                        __end_of_efgtoa 14AE                          __end_of_floorf 319A  
                            floorf@F527 00E2                          __end_of_strcpy 430A  
                        __end_of_strlen 4964                     start_initialization 4516  
                           __end_of_pad 3CA2                    ??_USART_TransmitChar 0001  
  I2C_Repeated_Start@slave_read_address 0002                   __end_of___fpclassifyf 3A3C  
                           ??_I2C_Ready 0001                             ??_I2C_Start 0002  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 47A0  
                          ?_PlayCancion 0001                            ?_Rainy_State 0001  
            __size_of_RTC_Read_Calendar 005A                             vfprintf@fmt 00C6  
           __size_of_I2C_Repeated_Start 002E                                ??___flge 0034  
                              ??___fleq 0009                                ??___wmul 0005  
                              ??_efgtoa 0067                             __pdataBANK1 01B6  
                              ??_floorf 0049                                ?_I2C_Ack 0001  
                   __end_of_LCD_MSdelay 4648                                ??_strcpy 0005  
                              ??_strlen 0003               __size_of_USART_SendString 0036  
              __size_of_LCD_Custom_Char 0048                               ___fladd@a 0049  
                             ___fladd@b 0045                            play@duracion 000A  
                             ___fldiv@a 0030                               ___fldiv@b 002C  
               __size_of_RTC_Calendario 02F0                     __end_of_LCD_Command 45B2  
                             ___flmul@a 0017                               ___flmul@b 0013  
                           __pbssCOMRAM 005F                               ___flsub@a 0059  
                             ___flsub@b 0055                           __pcstackBANK0 0060  
                         __pcstackBANK1 0172                             ??_LCD_Clear 0009  
                     __size_of___xxtofl 01B4                       __size_of_delay_us 0032  
                              ?_ReadADC 0060                               _atoi$1577 0010  
                             _atoi$1578 0014                               _atoi$1579 0012  
                              ?_ReadLUZ 0001                              play@octava 0008  
                              ?_Estados 0066                             _efgtoa$1501 006C  
                           _efgtoa$1502 006E                             _efgtoa$1511 0072  
                           _efgtoa$1512 0074                             _efgtoa$1513 0076  
                           _efgtoa$1507 0070                                ?___fladd 0045  
                              ?___fldiv 002C                                ?___awdiv 0001  
                              ?___flneg 0001                                ?___awmod 0001  
                              ?___flmul 0013                                ?___flsub 0055  
                              ?___fltol 0055                       __size_of_vfprintf 0062  
                           __smallconst 0800                                _I2C_Nack 4AE4  
                              ?_isalpha 0001                                ?_isdigit 0001  
                              _I2C_Init 4AA0                                _I2C_Read 47DC  
                              _I2C_Stop 4AD0                                ?_islower 0001  
                              ?_isspace 0001                                ?_isupper 0001  
                 LCD_String_xy@location 000F                                ?_sprintf 00CC  
                              ?_tolower 0007                          __size_of_fputc 00CA  
                        __size_of_fputs 0044                                ?_strncmp 0001  
                              ?_toupper 0007                          __size_of_putch 0002  
                              _LCD_Char 45B2                                _LCD_Init 49CC  
                  play@mS_Transcurridos 000D                          ___wmul@product 0005  
                              _LATCbits 000F8B                               delay_us@i 0004  
                         ?_Alarm_Status 0001                 __size_of_RTC_Read_Clock 0046  
                           _LCD_MSdelay 45FE                             _LCD_Command 4566  
                             _vfpfcnvrt 14AE                               _xtoa$1523 002F  
                             _xtoa$1524 0031                        __size_of_I2C_Ack 0014  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                       ___wmul@multiplier 0001  
                          _isspace$1617 0007                       ??_LCD_Custom_Char 000B  
                            vfpfcnvrt@c 00C3                              vfpfcnvrt@f 00BC  
                             copy_data0 452A                                _FreqNota 01B6  
          I2C_Start@slave_write_address 0002                            delay_us@nota 0001  
                        ??_Alarm_Status 0015                        __size_of_ReadADC 00FE  
                      __size_of_ReadLUZ 0068                                __Hrparam 0000  
                      __size_of_Estados 027E                              vfprintf@ap 00C8  
                              __Lrparam 0000                              vfprintf@fp 00C4  
                          ?_Sunny_State 0001                    __size_of_PlayCancion 0158  
                  __size_of_Rainy_State 005A                           I2C_Write@data 0001  
                      __size_of___fladd 04C0                        __size_of___fldiv 039A  
                      __size_of___awdiv 00C4                        __size_of___flneg 0038  
                      __size_of___awmod 00B0                        __size_of___flmul 042A  
                      __size_of___flsub 0046                        __size_of___fltol 0106  
                            ?_vfpfcnvrt 00A4                        _USART_SendString 4964  
                    ___fpclassifyf@F465 00E6                          _RTC_Calendario 2740  
                            sprintf@fmt 00CE                                ___xxtofl 319A  
                      __size_of_isalpha 003C                        __size_of_isdigit 0038  
                              _delay_us 499A                        __size_of_islower 0038  
                      __size_of_isspace 0052                                __ptext10 4A7E  
                              __ptext11 47DC                                __ptext20 3840  
                              __ptext12 4B20                                __ptext21 319A  
                              __ptext13 4AE4                                __ptext30 3A3C  
                              __ptext22 4418                                __ptext14 4AF8  
                              __ptext31 0856                                __ptext23 4472  
                              __ptext15 49CC                                __ptext40 2F88  
                              __ptext32 4192                                __ptext24 4130  
                              __ptext16 4B0C                                __ptext41 393E  
                              __ptext33 484E                                __ptext25 14AE  
                              __ptext17 4AA0                                __ptext50 3EDA  
                              __ptext42 3636                                __ptext34 42AE  
                              __ptext26 2A30                                __ptext18 2D0A  
                              __ptext51 3CA2                                __ptext43 46D6  
                              __ptext35 3BDC                                __ptext27 41F2  
                              __ptext19 40C8                                __ptext60 45B2  
                              __ptext52 334E                                __ptext44 1ABC  
                              __ptext36 492E                                __ptext28 4816  
                              __ptext61 45FE                                __ptext53 44C4  
                              __ptext45 4886                                __ptext37 471C  
                              __ptext29 47A0                                __ptext62 4B32  
                              __ptext54 48BE                                __ptext46 1F7C  
                              __ptext38 3B12                                __ptext63 4964  
                              __ptext55 4A58                                __ptext47 373C  
                              __ptext39 4B44                                __ptext64 4ABA  
                              __ptext56 4760                                __ptext48 3F8A  
                              __ptext65 34DE                                __ptext57 4250  
                              __ptext49 23A6                                __ptext66 3D66  
                              __ptext58 4648                                __ptext67 499A  
                              __ptext59 4566                        __size_of_isupper 0038  
                      __size_of_sprintf 0052                        __size_of_tolower 0060  
                            strcpy@dest 0001                        __size_of_strncmp 00D6  
                      __size_of_toupper 005E                           __size_of_atoi 0190  
                         __size_of_main 00B0                           __size_of_play 00C4  
                         __size_of_xtoa 02DA                                efgtoa@fp 0060  
                              efgtoa@ne 007C                                efgtoa@pp 007A  
                              efgtoa@ou 0080                                isa$xinst 000000  
                              _vfprintf 4130                                main@caso 00E0  
                __end_of_RTC_Calendario 2A30                              _LCD_String 4250  
                        _vfpfcnvrt$1542 00BA                          _vfpfcnvrt$1538 00B8  
                              isalpha@c 0001                                isdigit@c 0001  
                    LCD_Custom_Char@loc 000B                      LCD_Custom_Char@msg 0009  
           __size_of_USART_TransmitChar 0016                               sprintf@ap 00D4  
                              play@nota 0006                                islower@c 0001  
                              isspace@c 0001                               strcpy@src 0003  
            __end_of_I2C_Repeated_Start 4A58                                isupper@c 0001  
                        _RTC_Read_Clock 4690                               strncmp@_l 0001  
                             strncmp@_r 0003                              _OSCCONbits 000FD3  
                         ?_Cloudy_State 0001                             efgtoa@nmode 008C  
                   RTC_Calendario@F3580 01CE                             ??_vfpfcnvrt 00AA  
                       ?_RTC_Calendario 0001                     RTC_Calendario@AM_PM 01B5  
                              sprintf@f 00D6                                tolower@c 0007  
                              sprintf@s 00CC                  __size_of___fpclassifyf 00FE  
                  __end_of_Alarm_Status 4B44                                strncmp@l 0008  
                              strncmp@n 0005                                strncmp@r 000A  
                              toupper@c 0007                  __size_of_LCD_String_xy 0040  
                   RTC_Calendario@hours 01AB                     RTC_Calendario@month 0183  
                           _SSPCON2bits 000FC5                           ___fladd@signs 0051  
                    RTC_Calendario@date 0179                      RTC_Calendario@days 0172  
                    RTC_Calendario@mins 01A1                      RTC_Calendario@secs 0197  
                    RTC_Calendario@year 018D                            ___fladd@aexp 0052  
                          ___fladd@bexp 0053                  __end_of_RTC_Read_Clock 46D6  
                            _USART_Init 4034                          ??_Cloudy_State 005F  
