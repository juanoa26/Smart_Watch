

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 11 09:25:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    87                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    88  0000                     
    89                           ; Version 2.20
    90                           ; Generated 12/02/2020 GMT
    91                           ; 
    92                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18F4550 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124                           	psect	idataBANK1
   125  0048FA                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _FreqNota
   129  0048FA  3BB9               	dw	15289
   130  0048FC  385E               	dw	14430
   131  0048FE  3534               	dw	13620
   132  004900  3238               	dw	12856
   133  004902  2F66               	dw	12134
   134  004904  2CBD               	dw	11453
   135  004906  2A3A               	dw	10810
   136  004908  27DC               	dw	10204
   137  00490A  259F               	dw	9631
   138  00490C  2382               	dw	9090
   139  00490E  2184               	dw	8580
   140  004910  1FA3               	dw	8099
   141                           
   142                           ;initializer for RTC_Calendario@F3580
   143  004912  53                 	db	83
   144  004913  4D                 	db	77
   145  004914  54                 	db	84
   146  004915  57                 	db	87
   147  004916  74                 	db	116
   148  004917  46                 	db	70
   149  004918  73                 	db	115
   150                           
   151                           ;initializer for _character3
   152  004919  00                 	db	0
   153  00491A  08                 	db	8
   154  00491B  16                 	db	22
   155  00491C  1F                 	db	31
   156  00491D  1F                 	db	31
   157  00491E  16                 	db	22
   158  00491F  08                 	db	8
   159  004920  00                 	db	0
   160                           
   161                           ;initializer for _character2
   162  004921  15                 	db	21
   163  004922  0E                 	db	14
   164  004923  11                 	db	17
   165  004924  11                 	db	17
   166  004925  0E                 	db	14
   167  004926  15                 	db	21
   168  004927  00                 	db	0
   169  004928  00                 	db	0
   170                           
   171                           ;initializer for _character1
   172  004929  0E                 	db	14
   173  00492A  1F                 	db	31
   174  00492B  1F                 	db	31
   175  00492C  0E                 	db	14
   176  00492D  00                 	db	0
   177  00492E  0A                 	db	10
   178  00492F  0A                 	db	10
   179  004930  00                 	db	0
   180  0000                     _RCREG	set	4014
   181  0000                     _TXREG	set	4013
   182  0000                     _RCSTA	set	4011
   183  0000                     _TXSTA	set	4012
   184  0000                     _SPBRG	set	4015
   185  0000                     _SSPCON2bits	set	4037
   186  0000                     _SSPADD	set	4040
   187  0000                     _SSPCON2	set	4037
   188  0000                     _SSPCON1	set	4038
   189  0000                     _SSPSTAT	set	4039
   190  0000                     _SSPBUF	set	4041
   191  0000                     _SSPSTATbits	set	4039
   192  0000                     _LATCbits	set	3979
   193  0000                     _TRISCbits	set	3988
   194  0000                     _ADRESL	set	4035
   195  0000                     _ADRESH	set	4036
   196  0000                     _ADCON2bits	set	4032
   197  0000                     _ADCON0bits	set	4034
   198  0000                     _ADCON1bits	set	4033
   199  0000                     _OSCCONbits	set	4051
   200  0000                     _TRISA	set	3986
   201  0000                     _LATD	set	3980
   202  0000                     _TRISD	set	3989
   203  0000                     _TRISE	set	3990
   204  0000                     _OSCCON	set	4051
   205  0000                     _RCIF	set	31989
   206  0000                     _TXIF	set	31988
   207  0000                     _TRISC7	set	31911
   208  0000                     _TRISC6	set	31910
   209  0000                     _LATE2	set	31850
   210  0000                     _LATE1	set	31849
   211  0000                     _LATE0	set	31848
   212  0000                     _ACKEN	set	32300
   213  0000                     _ACKDT	set	32301
   214  0000                     _PEN	set	32298
   215  0000                     _RSEN	set	32297
   216  0000                     _ACKSTAT	set	32302
   217  0000                     _SSPIF	set	31987
   218  0000                     _SSPIE	set	31979
   219  0000                     _TRISB1	set	31897
   220  0000                     _TRISB0	set	31896
   221  0000                     _RCEN	set	32299
   222  0000                     _LATD1	set	31841
   223  0000                     _LATD0	set	31840
   224                           
   225                           	psect	smallconst
   226  000800                     __psmallconst:
   227                           	callstack 0
   228  000800  00                 	db	0
   229  000801                     STR_22:
   230  000801  42                 	db	66	;'B'
   231  000802  75                 	db	117	;'u'
   232  000803  65                 	db	101	;'e'
   233  000804  6E                 	db	110	;'n'
   234  000805  6F                 	db	111	;'o'
   235  000806  73                 	db	115	;'s'
   236  000807  20                 	db	32
   237  000808  44                 	db	68	;'D'
   238  000809  69                 	db	105	;'i'
   239  00080A  61                 	db	97	;'a'
   240  00080B  73                 	db	115	;'s'
   241  00080C  00                 	db	0
   242  00080D                     STR_19:
   243  00080D  25                 	db	37
   244  00080E  30                 	db	48	;'0'
   245  00080F  2E                 	db	46
   246  000810  30                 	db	48	;'0'
   247  000811  66                 	db	102	;'f'
   248  000812  43                 	db	67	;'C'
   249  000813  00                 	db	0
   250  000814                     STR_23:
   251  000814  49                 	db	73	;'I'
   252  000815  4E                 	db	78	;'N'
   253  000816  46                 	db	70	;'F'
   254  000817  00                 	db	0
   255  000818                     STR_27:
   256  000818  4E                 	db	78	;'N'
   257  000819  41                 	db	65	;'A'
   258  00081A  4E                 	db	78	;'N'
   259  00081B  00                 	db	0
   260  00081C                     STR_24:
   261  00081C  69                 	db	105	;'i'
   262  00081D  6E                 	db	110	;'n'
   263  00081E  66                 	db	102	;'f'
   264  00081F  00                 	db	0
   265  000820                     STR_28:
   266  000820  6E                 	db	110	;'n'
   267  000821  61                 	db	97	;'a'
   268  000822  6E                 	db	110	;'n'
   269  000823  00                 	db	0
   270  000824                     STR_3:
   271  000824  25                 	db	37
   272  000825  78                 	db	120	;'x'
   273  000826  20                 	db	32
   274  000827  00                 	db	0
   275  000828                     STR_9:
   276  000828  25                 	db	37
   277  000829  78                 	db	120	;'x'
   278  00082A  2D                 	db	45
   279  00082B  00                 	db	0
   280  00082C                     STR_4:
   281  00082C  25                 	db	37
   282  00082D  78                 	db	120	;'x'
   283  00082E  3A                 	db	58	;':'
   284  00082F  00                 	db	0
   285  000830                     STR_15:
   286  000830  57                 	db	87	;'W'
   287  000831  65                 	db	101	;'e'
   288  000832  64                 	db	100	;'d'
   289  000833  00                 	db	0
   290  000834                     STR_14:
   291  000834  54                 	db	84	;'T'
   292  000835  75                 	db	117	;'u'
   293  000836  65                 	db	101	;'e'
   294  000837  00                 	db	0
   295  000838                     STR_17:
   296  000838  46                 	db	70	;'F'
   297  000839  72                 	db	114	;'r'
   298  00083A  69                 	db	105	;'i'
   299  00083B  00                 	db	0
   300  00083C                     STR_13:
   301  00083C  4D                 	db	77	;'M'
   302  00083D  6F                 	db	111	;'o'
   303  00083E  6E                 	db	110	;'n'
   304  00083F  00                 	db	0
   305  000840                     STR_12:
   306  000840  53                 	db	83	;'S'
   307  000841  75                 	db	117	;'u'
   308  000842  6E                 	db	110	;'n'
   309  000843  00                 	db	0
   310  000844                     STR_18:
   311  000844  53                 	db	83	;'S'
   312  000845  61                 	db	97	;'a'
   313  000846  74                 	db	116	;'t'
   314  000847  00                 	db	0
   315  000848                     STR_16:
   316  000848  54                 	db	84	;'T'
   317  000849  68                 	db	104	;'h'
   318  00084A  75                 	db	117	;'u'
   319  00084B  00                 	db	0
   320  00084C                     STR_31:
   321  00084C  6C                 	db	108	;'l'
   322  00084D  66                 	db	102	;'f'
   323  00084E  00                 	db	0
   324  00084F                     STR_2:
   325  00084F  41                 	db	65	;'A'
   326  000850  4D                 	db	77	;'M'
   327  000851  00                 	db	0
   328  000852                     STR_1:
   329  000852  50                 	db	80	;'P'
   330  000853  4D                 	db	77	;'M'
   331  000854  00                 	db	0
   332  000855  00                 	db	0	; dummy byte at the end
   333  0000                     
   334                           ; #config settings
   335                           
   336                           	psect	cinit
   337  00451A                     __pcinit:
   338                           	callstack 0
   339  00451A                     start_initialization:
   340                           	callstack 0
   341  00451A                     __initialization:
   342                           	callstack 0
   343                           
   344                           ; Initialize objects allocated to BANK1 (55 bytes)
   345                           ; load TBLPTR registers with __pidataBANK1
   346  00451A  0EFA               	movlw	low __pidataBANK1
   347  00451C  6EF6               	movwf	tblptrl,c
   348  00451E  0E48               	movlw	high __pidataBANK1
   349  004520  6EF7               	movwf	tblptrh,c
   350  004522  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   351  004524  6EF8               	movwf	tblptru,c
   352  004526  EE01  F0B6         	lfsr	0,__pdataBANK1
   353  00452A  EE10 F037          	lfsr	1,55
   354  00452E                     copy_data0:
   355  00452E  0009               	tblrd		*+
   356  004530  CFF5 FFEE          	movff	tablat,postinc0
   357  004534  50E5               	movf	postdec1,w,c
   358  004536  50E1               	movf	fsr1l,w,c
   359  004538  E1FA               	bnz	copy_data0
   360                           
   361                           ; Clear objects allocated to BANK2 (20 bytes)
   362  00453A  EE02  F000         	lfsr	0,__pbssBANK2
   363  00453E  0E14               	movlw	20
   364  004540                     clear_0:
   365  004540  6AEE               	clrf	postinc0,c
   366  004542  06E8               	decf	wreg,f,c
   367  004544  E1FD               	bnz	clear_0
   368                           
   369                           ; Clear objects allocated to BANK1 (114 bytes)
   370  004546  EE01  F000         	lfsr	0,__pbssBANK1
   371  00454A  0E72               	movlw	114
   372  00454C                     clear_1:
   373  00454C  6AEE               	clrf	postinc0,c
   374  00454E  06E8               	decf	wreg,f,c
   375  004550  E1FD               	bnz	clear_1
   376                           
   377                           ; Clear objects allocated to BANK0 (27 bytes)
   378  004552  EE00  F0E2         	lfsr	0,__pbssBANK0
   379  004556  0E1B               	movlw	27
   380  004558                     clear_2:
   381  004558  6AEE               	clrf	postinc0,c
   382  00455A  06E8               	decf	wreg,f,c
   383  00455C  E1FD               	bnz	clear_2
   384                           
   385                           ; Clear objects allocated to COMRAM (1 bytes)
   386  00455E  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   387  004560                     end_of_initialization:
   388                           	callstack 0
   389  004560                     __end_of__initialization:
   390                           	callstack 0
   391  004560  0E00               	movlw	low (__Lmediumconst shr (0+16))
   392  004562  6EF8               	movwf	tblptru,c
   393  004564  0100               	movlb	0
   394  004566  EF15  F01F         	goto	_main	;jump to C main() function
   395                           
   396                           	psect	bssCOMRAM
   397  00005F                     __pbssCOMRAM:
   398                           	callstack 0
   399  00005F                     _i:
   400                           	callstack 0
   401  00005F                     	ds	1
   402                           
   403                           	psect	bssBANK0
   404  0000E2                     __pbssBANK0:
   405                           	callstack 0
   406  0000E2                     floorf@F527:
   407                           	callstack 0
   408  0000E2                     	ds	4
   409  0000E6                     ___fpclassifyf@F465:
   410                           	callstack 0
   411  0000E6                     	ds	4
   412  0000EA                     _luz:
   413                           	callstack 0
   414  0000EA                     	ds	4
   415  0000EE                     _tempar:
   416                           	callstack 0
   417  0000EE                     	ds	4
   418  0000F2                     _nout:
   419                           	callstack 0
   420  0000F2                     	ds	2
   421  0000F4                     _width:
   422                           	callstack 0
   423  0000F4                     	ds	2
   424  0000F6                     _prec:
   425                           	callstack 0
   426  0000F6                     	ds	2
   427  0000F8                     _flags:
   428                           	callstack 0
   429  0000F8                     	ds	2
   430  0000FA                     _result:
   431                           	callstack 0
   432  0000FA                     	ds	2
   433  0000FC                     _data_in:
   434                           	callstack 0
   435  0000FC                     	ds	1
   436                           
   437                           	psect	bssBANK1
   438  000100                     __pbssBANK1:
   439                           	callstack 0
   440  000100                     _Year:
   441                           	callstack 0
   442  000100                     	ds	2
   443  000102                     _Month:
   444                           	callstack 0
   445  000102                     	ds	2
   446  000104                     _Date:
   447                           	callstack 0
   448  000104                     	ds	2
   449  000106                     _Day:
   450                           	callstack 0
   451  000106                     	ds	2
   452  000108                     _hour:
   453                           	callstack 0
   454  000108                     	ds	2
   455  00010A                     _min:
   456                           	callstack 0
   457  00010A                     	ds	2
   458  00010C                     _sec:
   459                           	callstack 0
   460  00010C                     	ds	2
   461  00010E                     _dbuf:
   462                           	callstack 0
   463  00010E                     	ds	80
   464  00015E                     _Stemp:
   465                           	callstack 0
   466  00015E                     	ds	20
   467                           
   468                           	psect	dataBANK1
   469  0001B6                     __pdataBANK1:
   470                           	callstack 0
   471  0001B6                     _FreqNota:
   472                           	callstack 0
   473  0001B6                     	ds	24
   474  0001CE                     RTC_Calendario@F3580:
   475                           	callstack 0
   476  0001CE                     	ds	7
   477  0001D5                     _character3:
   478                           	callstack 0
   479  0001D5                     	ds	8
   480  0001DD                     _character2:
   481                           	callstack 0
   482  0001DD                     	ds	8
   483  0001E5                     _character1:
   484                           	callstack 0
   485  0001E5                     	ds	8
   486                           
   487                           	psect	bssBANK2
   488  000200                     __pbssBANK2:
   489                           	callstack 0
   490  000200                     _Sluz:
   491                           	callstack 0
   492  000200                     	ds	20
   493                           
   494                           	psect	cstackBANK1
   495  000172                     __pcstackBANK1:
   496                           	callstack 0
   497  000172                     RTC_Calendario@days:
   498                           	callstack 0
   499                           
   500                           ; 7 bytes @ 0x0
   501  000172                     	ds	7
   502  000179                     RTC_Calendario@date:
   503                           	callstack 0
   504                           
   505                           ; 10 bytes @ 0x7
   506  000179                     	ds	10
   507  000183                     RTC_Calendario@month:
   508                           	callstack 0
   509                           
   510                           ; 10 bytes @ 0x11
   511  000183                     	ds	10
   512  00018D                     RTC_Calendario@year:
   513                           	callstack 0
   514                           
   515                           ; 10 bytes @ 0x1B
   516  00018D                     	ds	10
   517  000197                     RTC_Calendario@secs:
   518                           	callstack 0
   519                           
   520                           ; 10 bytes @ 0x25
   521  000197                     	ds	10
   522  0001A1                     RTC_Calendario@mins:
   523                           	callstack 0
   524                           
   525                           ; 10 bytes @ 0x2F
   526  0001A1                     	ds	10
   527  0001AB                     RTC_Calendario@hours:
   528                           	callstack 0
   529                           
   530                           ; 10 bytes @ 0x39
   531  0001AB                     	ds	10
   532  0001B5                     RTC_Calendario@AM_PM:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x43
   536  0001B5                     	ds	1
   537                           
   538                           	psect	cstackBANK0
   539  000060                     __pcstackBANK0:
   540                           	callstack 0
   541  000060                     ?_ReadADC:
   542                           	callstack 0
   543  000060                     ?_efgtoa:
   544                           	callstack 0
   545  000060                     efgtoa@fp:
   546                           	callstack 0
   547  000060                     USART_Init@baud_rate:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x0
   551  000060                     	ds	2
   552  000062                     ??_ReadADC:
   553  000062                     efgtoa@f:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x2
   557  000062                     	ds	2
   558  000064                     ReadADC@result:
   559                           	callstack 0
   560  000064                     USART_Init@temp:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x4
   564  000064                     	ds	2
   565  000066                     ?_Estados:
   566                           	callstack 0
   567  000066                     efgtoa@c:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x6
   571  000066                     	ds	1
   572  000067                     ??_efgtoa:
   573                           
   574                           ; 1 bytes @ 0x7
   575  000067                     	ds	1
   576  000068                     _Estados$1937:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x8
   580  000068                     	ds	4
   581  00006C                     _efgtoa$1501:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0xC
   585  00006C                     	ds	2
   586  00006E                     _efgtoa$1502:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xE
   590  00006E                     	ds	2
   591  000070                     _efgtoa$1507:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x10
   595  000070                     	ds	2
   596  000072                     _efgtoa$1511:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x12
   600  000072                     	ds	2
   601  000074                     _efgtoa$1512:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x14
   605  000074                     	ds	2
   606  000076                     _efgtoa$1513:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x16
   610  000076                     	ds	2
   611  000078                     efgtoa@t:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x18
   615  000078                     	ds	2
   616  00007A                     efgtoa@pp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x1A
   620  00007A                     	ds	2
   621  00007C                     efgtoa@ne:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x1C
   625  00007C                     	ds	2
   626  00007E                     efgtoa@m:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x1E
   630  00007E                     	ds	2
   631  000080                     efgtoa@ou:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x20
   635  000080                     	ds	4
   636  000084                     efgtoa@d:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x24
   640  000084                     	ds	2
   641  000086                     efgtoa@sign:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x26
   645  000086                     	ds	2
   646  000088                     efgtoa@p:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x28
   650  000088                     	ds	2
   651  00008A                     efgtoa@w:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x2A
   655  00008A                     	ds	2
   656  00008C                     efgtoa@nmode:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x2C
   660  00008C                     	ds	1
   661  00008D                     efgtoa@mode:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x2D
   665  00008D                     	ds	1
   666  00008E                     efgtoa@h:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x2E
   670  00008E                     	ds	4
   671  000092                     efgtoa@l:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x32
   675  000092                     	ds	4
   676  000096                     efgtoa@i:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x36
   680  000096                     	ds	2
   681  000098                     efgtoa@g:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x38
   685  000098                     	ds	4
   686  00009C                     efgtoa@e:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x3C
   690  00009C                     	ds	2
   691  00009E                     efgtoa@n:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x3E
   695  00009E                     	ds	2
   696  0000A0                     efgtoa@u:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x40
   700  0000A0                     	ds	4
   701  0000A4                     ?_vfpfcnvrt:
   702                           	callstack 0
   703  0000A4                     vfpfcnvrt@fp:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x44
   707  0000A4                     	ds	2
   708  0000A6                     vfpfcnvrt@fmt:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x46
   712  0000A6                     	ds	2
   713  0000A8                     vfpfcnvrt@ap:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x48
   717  0000A8                     	ds	2
   718  0000AA                     ??_vfpfcnvrt:
   719                           
   720                           ; 1 bytes @ 0x4A
   721  0000AA                     	ds	4
   722  0000AE                     vfpfcnvrt@llu:
   723                           	callstack 0
   724                           
   725                           ; 8 bytes @ 0x4E
   726  0000AE                     	ds	8
   727  0000B6                     vfpfcnvrt@done:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x56
   731  0000B6                     	ds	2
   732  0000B8                     _vfpfcnvrt$1538:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x58
   736  0000B8                     	ds	2
   737  0000BA                     _vfpfcnvrt$1542:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x5A
   741  0000BA                     	ds	2
   742  0000BC                     vfpfcnvrt@f:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x5C
   746  0000BC                     	ds	4
   747  0000C0                     vfpfcnvrt@ct:
   748                           	callstack 0
   749                           
   750                           ; 3 bytes @ 0x60
   751  0000C0                     	ds	3
   752  0000C3                     vfpfcnvrt@c:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x63
   756  0000C3                     	ds	1
   757  0000C4                     ?_vfprintf:
   758                           	callstack 0
   759  0000C4                     vfprintf@fp:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x64
   763  0000C4                     	ds	2
   764  0000C6                     vfprintf@fmt:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x66
   768  0000C6                     	ds	2
   769  0000C8                     vfprintf@ap:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x68
   773  0000C8                     	ds	2
   774  0000CA                     vfprintf@cfmt:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x6A
   778  0000CA                     	ds	2
   779  0000CC                     ?_sprintf:
   780                           	callstack 0
   781  0000CC                     sprintf@s:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x6C
   785  0000CC                     	ds	2
   786  0000CE                     sprintf@fmt:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x6E
   790  0000CE                     	ds	6
   791  0000D4                     sprintf@ap:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x74
   795  0000D4                     	ds	2
   796  0000D6                     sprintf@f:
   797                           	callstack 0
   798                           
   799                           ; 6 bytes @ 0x76
   800  0000D6                     	ds	6
   801  0000DC                     ??_RTC_Calendario:
   802                           
   803                           ; 1 bytes @ 0x7C
   804  0000DC                     	ds	2
   805  0000DE                     ??_main:
   806                           
   807                           ; 1 bytes @ 0x7E
   808  0000DE                     	ds	2
   809  0000E0                     main@caso:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x80
   813  0000E0                     	ds	2
   814                           
   815                           	psect	cstackCOMRAM
   816  000001                     __pcstackCOMRAM:
   817                           	callstack 0
   818  000001                     ?_strlen:
   819                           	callstack 0
   820  000001                     ?___fpclassifyf:
   821                           	callstack 0
   822  000001                     ?_isupper:
   823                           	callstack 0
   824  000001                     ?_isalpha:
   825                           	callstack 0
   826  000001                     ?_isdigit:
   827                           	callstack 0
   828  000001                     ?_strncmp:
   829                           	callstack 0
   830  000001                     ?_isspace:
   831                           	callstack 0
   832  000001                     ?_islower:
   833                           	callstack 0
   834  000001                     ?_ReadLUZ:
   835                           	callstack 0
   836  000001                     ?___wmul:
   837                           	callstack 0
   838  000001                     ?___awdiv:
   839                           	callstack 0
   840  000001                     ?___awmod:
   841                           	callstack 0
   842  000001                     ?___flneg:
   843                           	callstack 0
   844  000001                     I2C_Read@flag:
   845                           	callstack 0
   846  000001                     I2C_Write@data:
   847                           	callstack 0
   848  000001                     USART_TransmitChar@out:
   849                           	callstack 0
   850  000001                     LCD_MSdelay@val:
   851                           	callstack 0
   852  000001                     delay_us@nota:
   853                           	callstack 0
   854  000001                     ___wmul@multiplier:
   855                           	callstack 0
   856  000001                     ___awdiv@dividend:
   857                           	callstack 0
   858  000001                     ___awmod@dividend:
   859                           	callstack 0
   860  000001                     isalpha@c:
   861                           	callstack 0
   862  000001                     isdigit@c:
   863                           	callstack 0
   864  000001                     isspace@c:
   865                           	callstack 0
   866  000001                     isupper@c:
   867                           	callstack 0
   868  000001                     fputc@c:
   869                           	callstack 0
   870  000001                     strcpy@dest:
   871                           	callstack 0
   872  000001                     strlen@s:
   873                           	callstack 0
   874  000001                     strncmp@_l:
   875                           	callstack 0
   876  000001                     islower@c:
   877                           	callstack 0
   878  000001                     ___fleq@ff1:
   879                           	callstack 0
   880  000001                     ___flneg@f1:
   881                           	callstack 0
   882  000001                     ___fpclassifyf@x:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x0
   886  000001                     	ds	1
   887  000002                     I2C_Read@buffer:
   888                           	callstack 0
   889  000002                     I2C_Start@slave_write_address:
   890                           	callstack 0
   891  000002                     I2C_Repeated_Start@slave_read_address:
   892                           	callstack 0
   893  000002                     USART_SendString@out:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x1
   897  000002                     	ds	1
   898  000003                     ??_isupper:
   899  000003                     ??_isalpha:
   900  000003                     ??_isdigit:
   901  000003                     ??_isspace:
   902  000003                     ??_islower:
   903  000003                     ??_ReadLUZ:
   904  000003                     ??_delay_us:
   905  000003                     ??_RTC_Read_Clock:
   906  000003                     ??_RTC_Read_Calendar:
   907  000003                     LCD_MSdelay@i:
   908                           	callstack 0
   909  000003                     ___wmul@multiplicand:
   910                           	callstack 0
   911  000003                     ___awdiv@divisor:
   912                           	callstack 0
   913  000003                     ___awmod@divisor:
   914                           	callstack 0
   915  000003                     fputc@fp:
   916                           	callstack 0
   917  000003                     strcpy@src:
   918                           	callstack 0
   919  000003                     strlen@a:
   920                           	callstack 0
   921  000003                     strncmp@_r:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x2
   925  000003                     	ds	1
   926  000004                     RTC_Read_Clock@read_clock_address:
   927                           	callstack 0
   928  000004                     RTC_Read_Calendar@read_calendar_address:
   929                           	callstack 0
   930  000004                     delay_us@i:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x3
   934  000004                     	ds	1
   935  000005                     ??_fputc:
   936  000005                     ??___fpclassifyf:
   937  000005                     ??_strcpy:
   938  000005                     ?___xxtofl:
   939                           	callstack 0
   940  000005                     ___awdiv@counter:
   941                           	callstack 0
   942  000005                     ___awmod@counter:
   943                           	callstack 0
   944  000005                     LCD_MSdelay@j:
   945                           	callstack 0
   946  000005                     ___wmul@product:
   947                           	callstack 0
   948  000005                     strncmp@n:
   949                           	callstack 0
   950  000005                     ___fleq@ff2:
   951                           	callstack 0
   952  000005                     ___xxtofl@val:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x4
   956  000005                     	ds	1
   957  000006                     ___awdiv@sign:
   958                           	callstack 0
   959  000006                     ___awmod@sign:
   960                           	callstack 0
   961  000006                     play@nota:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x5
   965  000006                     	ds	1
   966  000007                     ??_LCD_Command:
   967  000007                     ??_strncmp:
   968  000007                     ??_LCD_Char:
   969  000007                     ?_tolower:
   970                           	callstack 0
   971  000007                     ?_toupper:
   972                           	callstack 0
   973  000007                     _isspace$1617:
   974                           	callstack 0
   975  000007                     ___awdiv@quotient:
   976                           	callstack 0
   977  000007                     strcpy@s:
   978                           	callstack 0
   979  000007                     tolower@c:
   980                           	callstack 0
   981  000007                     toupper@c:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x6
   985  000007                     	ds	1
   986  000008                     ?_atoi:
   987                           	callstack 0
   988  000008                     LCD_Command@cmd:
   989                           	callstack 0
   990  000008                     LCD_Char@dat:
   991                           	callstack 0
   992  000008                     play@octava:
   993                           	callstack 0
   994  000008                     atoi@s:
   995                           	callstack 0
   996  000008                     strncmp@l:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x7
  1000  000008                     	ds	1
  1001  000009                     ??_tolower:
  1002  000009                     ??_toupper:
  1003  000009                     ??___fleq:
  1004  000009                     ??___xxtofl:
  1005  000009                     LCD_String@msg:
  1006                           	callstack 0
  1007  000009                     LCD_Custom_Char@msg:
  1008                           	callstack 0
  1009  000009                     ___fpclassifyf@e:
  1010                           	callstack 0
  1011  000009                     strcpy@d:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x8
  1015  000009                     	ds	1
  1016  00000A                     ??_atoi:
  1017  00000A                     play@duracion:
  1018                           	callstack 0
  1019  00000A                     fputs@s:
  1020                           	callstack 0
  1021  00000A                     strncmp@r:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x9
  1025  00000A                     	ds	1
  1026  00000B                     LCD_String_xy@pos:
  1027                           	callstack 0
  1028  00000B                     LCD_Custom_Char@loc:
  1029                           	callstack 0
  1030  00000B                     ___fpclassifyf@u:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0xA
  1034  00000B                     	ds	1
  1035  00000C                     ??_play:
  1036  00000C                     LCD_Custom_Char@i:
  1037                           	callstack 0
  1038  00000C                     LCD_String_xy@msg:
  1039                           	callstack 0
  1040  00000C                     fputs@fp:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xB
  1044  00000C                     	ds	1
  1045  00000D                     ___xxtofl@sign:
  1046                           	callstack 0
  1047  00000D                     play@mS_Transcurridos:
  1048                           	callstack 0
  1049  00000D                     _tolower$1681:
  1050                           	callstack 0
  1051  00000D                     _toupper$1696:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0xC
  1055  00000D                     	ds	1
  1056  00000E                     LCD_String_xy@row:
  1057                           	callstack 0
  1058  00000E                     ___xxtofl@exp:
  1059                           	callstack 0
  1060  00000E                     fputs@c:
  1061                           	callstack 0
  1062  00000E                     atoi@neg:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0xD
  1066  00000E                     	ds	1
  1067  00000F                     LCD_String_xy@location:
  1068                           	callstack 0
  1069  00000F                     play@CiclosL:
  1070                           	callstack 0
  1071  00000F                     fputs@i:
  1072                           	callstack 0
  1073  00000F                     ___xxtofl@arg:
  1074                           	callstack 0
  1075                           
  1076                           ; 4 bytes @ 0xE
  1077  00000F                     	ds	1
  1078  000010                     _atoi$1577:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0xF
  1082  000010                     	ds	1
  1083  000011                     ?_pad:
  1084                           	callstack 0
  1085  000011                     play@fn:
  1086                           	callstack 0
  1087  000011                     pad@fp:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x10
  1091  000011                     	ds	1
  1092  000012                     _atoi$1579:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x11
  1096  000012                     	ds	1
  1097  000013                     ??_PlayCancion:
  1098  000013                     ?___flmul:
  1099                           	callstack 0
  1100  000013                     pad@buf:
  1101                           	callstack 0
  1102  000013                     ___flmul@b:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x12
  1106  000013                     	ds	1
  1107  000014                     _atoi$1578:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x13
  1111  000014                     	ds	1
  1112  000015                     pad@p:
  1113                           	callstack 0
  1114  000015                     atoi@n:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x14
  1118  000015                     	ds	2
  1119  000017                     ??_pad:
  1120  000017                     ___flmul@a:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x16
  1124  000017                     	ds	1
  1125  000018                     pad@i:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x17
  1129  000018                     	ds	2
  1130  00001A                     pad@w:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x19
  1134  00001A                     	ds	1
  1135  00001B                     ??___flmul:
  1136                           
  1137                           ; 1 bytes @ 0x1A
  1138  00001B                     	ds	1
  1139  00001C                     ?_xtoa:
  1140                           	callstack 0
  1141  00001C                     xtoa@fp:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x1B
  1145  00001C                     	ds	2
  1146  00001E                     xtoa@d:
  1147                           	callstack 0
  1148                           
  1149                           ; 8 bytes @ 0x1D
  1150  00001E                     	ds	1
  1151  00001F                     ___flmul@sign:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x1E
  1155  00001F                     	ds	1
  1156  000020                     ___flmul@grs:
  1157                           	callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x1F
  1160  000020                     	ds	4
  1161  000024                     ___flmul@aexp:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x23
  1165  000024                     	ds	1
  1166  000025                     ___flmul@bexp:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x24
  1170  000025                     	ds	1
  1171  000026                     xtoa@x:
  1172                           	callstack 0
  1173  000026                     ___flmul@prod:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x25
  1177  000026                     	ds	1
  1178  000027                     ??_xtoa:
  1179                           
  1180                           ; 1 bytes @ 0x26
  1181  000027                     	ds	3
  1182  00002A                     ___flmul@temp:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x29
  1186  00002A                     	ds	2
  1187  00002C                     ?___fldiv:
  1188                           	callstack 0
  1189  00002C                     ___flge@ff1:
  1190                           	callstack 0
  1191  00002C                     ___fldiv@b:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x2B
  1195  00002C                     	ds	3
  1196  00002F                     _xtoa$1523:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x2E
  1200  00002F                     	ds	1
  1201  000030                     ___flge@ff2:
  1202                           	callstack 0
  1203  000030                     ___fldiv@a:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x2F
  1207  000030                     	ds	1
  1208  000031                     _xtoa$1524:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x30
  1212  000031                     	ds	2
  1213  000033                     xtoa@p:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x32
  1217  000033                     	ds	1
  1218  000034                     ??___fldiv:
  1219  000034                     ??___flge:
  1220                           
  1221                           ; 1 bytes @ 0x33
  1222  000034                     	ds	1
  1223  000035                     xtoa@w:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x34
  1227  000035                     	ds	2
  1228  000037                     xtoa@n:
  1229                           	callstack 0
  1230                           
  1231                           ; 8 bytes @ 0x36
  1232  000037                     	ds	1
  1233  000038                     ___fldiv@rem:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x37
  1237  000038                     	ds	4
  1238  00003C                     ___fldiv@sign:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x3B
  1242  00003C                     	ds	1
  1243  00003D                     ___fldiv@new_exp:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x3C
  1247  00003D                     	ds	2
  1248  00003F                     xtoa@i:
  1249                           	callstack 0
  1250  00003F                     ___fldiv@grs:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x3E
  1254  00003F                     	ds	2
  1255  000041                     xtoa@c:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x40
  1259  000041                     	ds	2
  1260  000043                     ___fldiv@bexp:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x42
  1264  000043                     	ds	1
  1265  000044                     ___fldiv@aexp:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x43
  1269  000044                     	ds	1
  1270  000045                     ?___fladd:
  1271                           	callstack 0
  1272  000045                     ?_floorf:
  1273                           	callstack 0
  1274  000045                     ___fladd@b:
  1275                           	callstack 0
  1276  000045                     floorf@x:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x44
  1280  000045                     	ds	4
  1281  000049                     ??_floorf:
  1282  000049                     ___fladd@a:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x48
  1286  000049                     	ds	4
  1287  00004D                     ??___fladd:
  1288                           
  1289                           ; 1 bytes @ 0x4C
  1290  00004D                     	ds	2
  1291  00004F                     floorf@m:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x4E
  1295  00004F                     	ds	2
  1296  000051                     ___fladd@signs:
  1297                           	callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x50
  1300  000051                     	ds	1
  1301  000052                     ___fladd@aexp:
  1302                           	callstack 0
  1303                           
  1304                           ; 1 bytes @ 0x51
  1305  000052                     	ds	1
  1306  000053                     ___fladd@bexp:
  1307                           	callstack 0
  1308  000053                     floorf@e:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x52
  1312  000053                     	ds	1
  1313  000054                     ___fladd@grs:
  1314                           	callstack 0
  1315                           
  1316                           ; 1 bytes @ 0x53
  1317  000054                     	ds	1
  1318  000055                     ?___flsub:
  1319                           	callstack 0
  1320  000055                     ?___fltol:
  1321                           	callstack 0
  1322  000055                     ___fltol@f1:
  1323                           	callstack 0
  1324  000055                     ___flsub@b:
  1325                           	callstack 0
  1326  000055                     floorf@u:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x54
  1330  000055                     	ds	4
  1331  000059                     ??___fltol:
  1332  000059                     ___flsub@a:
  1333                           	callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x58
  1336  000059                     	ds	4
  1337  00005D                     ___fltol@sign1:
  1338                           	callstack 0
  1339                           
  1340                           ; 1 bytes @ 0x5C
  1341  00005D                     	ds	1
  1342  00005E                     ___fltol@exp1:
  1343                           	callstack 0
  1344                           
  1345                           ; 1 bytes @ 0x5D
  1346  00005E                     	ds	1
  1347  00005F                     
  1348                           ; 1 bytes @ 0x5E
  1349 ;;
  1350 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1351 ;;
  1352 ;; *************** function _main *****************
  1353 ;; Defined at:
  1354 ;;		line 26 in file "smart_main.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  caso            2  128[BANK0 ] int 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1368 ;;      Params:         0       0       0       0       0       0       0       0       0
  1369 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1370 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1371 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1372 ;;Total ram usage:        4 bytes
  1373 ;; Hardware stack levels required when called: 9
  1374 ;; This function calls:
  1375 ;;		_Alarm_Status
  1376 ;;		_Cloudy_State
  1377 ;;		_Estados
  1378 ;;		_I2C_Init
  1379 ;;		_LCD_Clear
  1380 ;;		_LCD_Init
  1381 ;;		_LCD_MSdelay
  1382 ;;		_RTC_Calendario
  1383 ;;		_Rainy_State
  1384 ;;		_Sunny_State
  1385 ;;		_USART_Init
  1386 ;; This function is called by:
  1387 ;;		Startup code after reset
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text0
  1392  003E2A                     __ptext0:
  1393                           	callstack 0
  1394  003E2A                     _main:
  1395                           	callstack 22
  1396  003E2A                     
  1397                           ;smart_main.c: 27:     OSCCON = 0x72;
  1398  003E2A  0E72               	movlw	114
  1399  003E2C  6ED3               	movwf	211,c	;volatile
  1400                           
  1401                           ;smart_main.c: 28:     TRISE = 0x00;
  1402  003E2E  0E00               	movlw	0
  1403  003E30  6E96               	movwf	150,c	;volatile
  1404  003E32                     
  1405                           ;smart_main.c: 31:     I2C_Init();
  1406  003E32  EC52  F025         	call	_I2C_Init	;wreg free
  1407  003E36                     
  1408                           ;smart_main.c: 32:     USART_Init(9600);
  1409  003E36  0E80               	movlw	128
  1410  003E38  0100               	movlb	0	; () banked
  1411  003E3A  6F60               	movwf	USART_Init@baud_rate& (0+255),b
  1412  003E3C  0E25               	movlw	37
  1413  003E3E  6F61               	movwf	(USART_Init@baud_rate+1)& (0+255),b
  1414  003E40  0E00               	movlw	0
  1415  003E42  6F62               	movwf	(USART_Init@baud_rate+2)& (0+255),b
  1416  003E44  0E00               	movlw	0
  1417  003E46  6F63               	movwf	(USART_Init@baud_rate+3)& (0+255),b
  1418  003E48  EC1A  F020         	call	_USART_Init	;wreg free
  1419  003E4C                     
  1420                           ;smart_main.c: 33:     LCD_Init();
  1421  003E4C  ECE8  F024         	call	_LCD_Init	;wreg free
  1422  003E50                     l5758:
  1423                           
  1424                           ;smart_main.c: 36:         RTC_Calendario();
  1425  003E50  ECA0  F013         	call	_RTC_Calendario	;wreg free
  1426  003E54                     
  1427                           ;smart_main.c: 37:         int caso = Estados();
  1428  003E54  EC85  F016         	call	_Estados	;wreg free
  1429  003E58  C066  F0E0         	movff	?_Estados,main@caso
  1430  003E5C  C067  F0E1         	movff	?_Estados+1,main@caso+1
  1431                           
  1432                           ;smart_main.c: 38:         switch (caso) {
  1433  003E60  EF42  F01F         	goto	l5772
  1434  003E64                     l5762:
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;smart_main.c: 40:                 Sunny_State();
  1438  003E64  ECF9  F020         	call	_Sunny_State	;wreg free
  1439                           
  1440                           ;smart_main.c: 41:                 break;
  1441  003E68  EF61  F01F         	goto	l5774
  1442  003E6C                     l5764:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;smart_main.c: 44:                 Cloudy_State();
  1446  003E6C  EC0E  F022         	call	_Cloudy_State	;wreg free
  1447                           
  1448                           ;smart_main.c: 45:                 break;
  1449  003E70  EF61  F01F         	goto	l5774
  1450  003E74                     l5766:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;smart_main.c: 48:                 Rainy_State();
  1454  003E74  ECB4  F021         	call	_Rainy_State	;wreg free
  1455                           
  1456                           ;smart_main.c: 49:                 break;
  1457  003E78  EF61  F01F         	goto	l5774
  1458  003E7C                     l5768:
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;smart_main.c: 52:                 Alarm_Status();
  1462  003E7C  EC9B  F025         	call	_Alarm_Status	;wreg free
  1463                           
  1464                           ;smart_main.c: 53:                 break;
  1465  003E80  EF61  F01F         	goto	l5774
  1466  003E84                     l5772:
  1467  003E84  C0E0  F0DE         	movff	main@caso,??_main
  1468  003E88  C0E1  F0DF         	movff	main@caso+1,??_main+1
  1469                           
  1470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1471                           ; Switch size 1, requested type "simple"
  1472                           ; Number of cases is 1, Range of values is 0 to 0
  1473                           ; switch strategies available:
  1474                           ; Name         Instructions Cycles
  1475                           ; simple_byte            4     3 (average)
  1476                           ;	Chosen strategy is simple_byte
  1477  003E8C  0100               	movlb	0	; () banked
  1478  003E8E  51DF               	movf	(??_main+1)& (0+255),w,b
  1479  003E90  0A00               	xorlw	0	; case 0
  1480  003E92  B4D8               	btfsc	status,2,c
  1481  003E94  EF4E  F01F         	goto	l5878
  1482  003E98  EF61  F01F         	goto	l5774
  1483  003E9C                     l5878:
  1484                           
  1485                           ; BSR set to: 0
  1486                           ; Switch size 1, requested type "simple"
  1487                           ; Number of cases is 4, Range of values is 1 to 4
  1488                           ; switch strategies available:
  1489                           ; Name         Instructions Cycles
  1490                           ; simple_byte           13     7 (average)
  1491                           ;	Chosen strategy is simple_byte
  1492  003E9C  51DE               	movf	??_main& (0+255),w,b
  1493  003E9E  0A01               	xorlw	1	; case 1
  1494  003EA0  B4D8               	btfsc	status,2,c
  1495  003EA2  EF32  F01F         	goto	l5762
  1496  003EA6  0A03               	xorlw	3	; case 2
  1497  003EA8  B4D8               	btfsc	status,2,c
  1498  003EAA  EF36  F01F         	goto	l5764
  1499  003EAE  0A01               	xorlw	1	; case 3
  1500  003EB0  B4D8               	btfsc	status,2,c
  1501  003EB2  EF3A  F01F         	goto	l5766
  1502  003EB6  0A07               	xorlw	7	; case 4
  1503  003EB8  B4D8               	btfsc	status,2,c
  1504  003EBA  EF3E  F01F         	goto	l5768
  1505  003EBE  EF61  F01F         	goto	l5774
  1506  003EC2                     l5774:
  1507                           
  1508                           ;smart_main.c: 59:         LCD_MSdelay(3000);
  1509  003EC2  0E0B               	movlw	11
  1510  003EC4  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1511  003EC6  0EB8               	movlw	184
  1512  003EC8  6E01               	movwf	LCD_MSdelay@val^0,c
  1513  003ECA  EC01  F023         	call	_LCD_MSdelay	;wreg free
  1514                           
  1515                           ;smart_main.c: 60:         LCD_Clear();
  1516  003ECE  EC88  F025         	call	_LCD_Clear	;wreg free
  1517  003ED2  EF28  F01F         	goto	l5758
  1518  003ED6  EF00  F000         	goto	start
  1519  003EDA                     __end_of_main:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _USART_Init *****************
  1523 ;; Defined at:
  1524 ;;		line 37 in file "Bluetooth.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  baud_rate       4    0[BANK0 ] long 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  temp            4    4[BANK0 ] float 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         0       4       0       0       0       0       0       0       0
  1539 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        8 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 1
  1545 ;; This function calls:
  1546 ;;		___fladd
  1547 ;;		___fldiv
  1548 ;;		___fltol
  1549 ;;		___xxtofl
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text1
  1556  004034                     __ptext1:
  1557                           	callstack 0
  1558  004034                     _USART_Init:
  1559                           	callstack 29
  1560  004034                     
  1561                           ;Bluetooth.c: 38:     float temp;;Bluetooth.c: 39:     TRISC6 = 0;
  1562  004034  9C94               	bcf	3988,6,c	;volatile
  1563                           
  1564                           ;Bluetooth.c: 40:     TRISC7 = 1;
  1565  004036  8E94               	bsf	3988,7,c	;volatile
  1566  004038                     
  1567                           ;Bluetooth.c: 41:     temp = (((float)(8000000/64)/(float)baud_rate)-1);
  1568  004038  C060  F005         	movff	USART_Init@baud_rate,___xxtofl@val
  1569  00403C  C061  F006         	movff	USART_Init@baud_rate+1,___xxtofl@val+1
  1570  004040  C062  F007         	movff	USART_Init@baud_rate+2,___xxtofl@val+2
  1571  004044  C063  F008         	movff	USART_Init@baud_rate+3,___xxtofl@val+3
  1572  004048  0E01               	movlw	1
  1573  00404A  ECCD  F018         	call	___xxtofl
  1574  00404E  C005  F030         	movff	?___xxtofl,___fldiv@a
  1575  004052  C006  F031         	movff	?___xxtofl+1,___fldiv@a+1
  1576  004056  C007  F032         	movff	?___xxtofl+2,___fldiv@a+2
  1577  00405A  C008  F033         	movff	?___xxtofl+3,___fldiv@a+3
  1578  00405E  0E00               	movlw	0
  1579  004060  6E2C               	movwf	___fldiv@b^0,c
  1580  004062  0E24               	movlw	36
  1581  004064  6E2D               	movwf	(___fldiv@b+1)^0,c
  1582  004066  0EF4               	movlw	244
  1583  004068  6E2E               	movwf	(___fldiv@b+2)^0,c
  1584  00406A  0E47               	movlw	71
  1585  00406C  6E2F               	movwf	(___fldiv@b+3)^0,c
  1586  00406E  ECD3  F011         	call	___fldiv	;wreg free
  1587  004072  C02C  F045         	movff	?___fldiv,___fladd@b
  1588  004076  C02D  F046         	movff	?___fldiv+1,___fladd@b+1
  1589  00407A  C02E  F047         	movff	?___fldiv+2,___fladd@b+2
  1590  00407E  C02F  F048         	movff	?___fldiv+3,___fladd@b+3
  1591  004082  0E00               	movlw	0
  1592  004084  6E49               	movwf	___fladd@a^0,c
  1593  004086  0E00               	movlw	0
  1594  004088  6E4A               	movwf	(___fladd@a+1)^0,c
  1595  00408A  0E80               	movlw	128
  1596  00408C  6E4B               	movwf	(___fladd@a+2)^0,c
  1597  00408E  0EBF               	movlw	191
  1598  004090  6E4C               	movwf	(___fladd@a+3)^0,c
  1599  004092  EC5E  F00D         	call	___fladd	;wreg free
  1600  004096  C045  F064         	movff	?___fladd,USART_Init@temp
  1601  00409A  C046  F065         	movff	?___fladd+1,USART_Init@temp+1
  1602  00409E  C047  F066         	movff	?___fladd+2,USART_Init@temp+2
  1603  0040A2  C048  F067         	movff	?___fladd+3,USART_Init@temp+3
  1604                           
  1605                           ;Bluetooth.c: 42:     SPBRG = (int) temp;
  1606  0040A6  C064  F055         	movff	USART_Init@temp,___fltol@f1
  1607  0040AA  C065  F056         	movff	USART_Init@temp+1,___fltol@f1+1
  1608  0040AE  C066  F057         	movff	USART_Init@temp+2,___fltol@f1+2
  1609  0040B2  C067  F058         	movff	USART_Init@temp+3,___fltol@f1+3
  1610  0040B6  EC1B  F01B         	call	___fltol	;wreg free
  1611  0040BA  5055               	movf	?___fltol^0,w,c
  1612  0040BC  6EAF               	movwf	175,c	;volatile
  1613  0040BE                     
  1614                           ;Bluetooth.c: 43:     TXSTA = 0x20;
  1615  0040BE  0E20               	movlw	32
  1616  0040C0  6EAC               	movwf	172,c	;volatile
  1617  0040C2                     
  1618                           ;Bluetooth.c: 44:     RCSTA = 0x90;
  1619  0040C2  0E90               	movlw	144
  1620  0040C4  6EAB               	movwf	171,c	;volatile
  1621  0040C6  0012               	return		;funcret
  1622  0040C8                     __end_of_USART_Init:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _Sunny_State *****************
  1626 ;; Defined at:
  1627 ;;		line 56 in file "Estados.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 8
  1648 ;; This function calls:
  1649 ;;		_LCD_Char
  1650 ;;		_LCD_Command
  1651 ;;		_LCD_Custom_Char
  1652 ;;		_LCD_String_xy
  1653 ;;		_PlayCancion
  1654 ;;		_sprintf
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text2
  1661  0041F2                     __ptext2:
  1662                           	callstack 0
  1663  0041F2                     _Sunny_State:
  1664                           	callstack 22
  1665  0041F2                     
  1666                           ;Estados.c: 57:     LATE0 = 0;
  1667  0041F2  908D               	bcf	3981,0,c	;volatile
  1668                           
  1669                           ;Estados.c: 58:     LATE1 = 0;
  1670  0041F4  928D               	bcf	3981,1,c	;volatile
  1671                           
  1672                           ;Estados.c: 59:     LATE2 = 0;
  1673  0041F6  948D               	bcf	3981,2,c	;volatile
  1674  0041F8                     
  1675                           ;Estados.c: 60:     sprintf(Stemp, "%0.0fC", tempar);
  1676  0041F8  0E5E               	movlw	low _Stemp
  1677  0041FA  0100               	movlb	0	; () banked
  1678  0041FC  6FCC               	movwf	sprintf@s& (0+255),b
  1679  0041FE  0E01               	movlw	high _Stemp
  1680  004200  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1681  004202  0E0D               	movlw	low STR_19
  1682  004204  6FCE               	movwf	sprintf@fmt& (0+255),b
  1683  004206  0E08               	movlw	high STR_19
  1684  004208  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1685  00420A  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  1686  00420E  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  1687  004212  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  1688  004216  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  1689  00421A  EC3B  F022         	call	_sprintf	;wreg free
  1690  00421E                     
  1691                           ;Estados.c: 61:     LCD_String_xy(1, 0, Stemp);
  1692  00421E  0E00               	movlw	0
  1693  004220  6E0B               	movwf	LCD_String_xy@pos^0,c
  1694  004222  0E5E               	movlw	low _Stemp
  1695  004224  6E0C               	movwf	LCD_String_xy@msg^0,c
  1696  004226  0E01               	movlw	high _Stemp
  1697  004228  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1698  00422A  0E01               	movlw	1
  1699  00422C  ECB2  F023         	call	_LCD_String_xy
  1700  004230                     
  1701                           ;Estados.c: 62:     LCD_Custom_Char(0, character2);
  1702  004230  0EDD               	movlw	low _character2
  1703  004232  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1704  004234  0E01               	movlw	high _character2
  1705  004236  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1706  004238  0E00               	movlw	0
  1707  00423A  EC26  F023         	call	_LCD_Custom_Char
  1708                           
  1709                           ;Estados.c: 63:     LCD_Command(0xc0);
  1710  00423E  0EC0               	movlw	192
  1711  004240  ECB5  F022         	call	_LCD_Command
  1712                           
  1713                           ;Estados.c: 64:     LCD_Char(0);
  1714  004244  0E00               	movlw	0
  1715  004246  ECDB  F022         	call	_LCD_Char
  1716  00424A                     
  1717                           ;Estados.c: 65:     PlayCancion();
  1718  00424A  EC6F  F01A         	call	_PlayCancion	;wreg free
  1719  00424E  0012               	return		;funcret
  1720  004250                     __end_of_Sunny_State:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function _Rainy_State *****************
  1724 ;; Defined at:
  1725 ;;		line 107 in file "Estados.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1739 ;;      Params:         0       0       0       0       0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1742 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1743 ;;Total ram usage:        0 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 8
  1746 ;; This function calls:
  1747 ;;		_LCD_Char
  1748 ;;		_LCD_Command
  1749 ;;		_LCD_Custom_Char
  1750 ;;		_LCD_String_xy
  1751 ;;		_sprintf
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text3
  1758  004368                     __ptext3:
  1759                           	callstack 0
  1760  004368                     _Rainy_State:
  1761                           	callstack 22
  1762  004368                     
  1763                           ;Estados.c: 108:     LATE0 = 1;
  1764  004368  808D               	bsf	3981,0,c	;volatile
  1765                           
  1766                           ;Estados.c: 109:     LATE1 = 1;
  1767  00436A  828D               	bsf	3981,1,c	;volatile
  1768                           
  1769                           ;Estados.c: 110:     LATE2 = 1;
  1770  00436C  848D               	bsf	3981,2,c	;volatile
  1771  00436E                     
  1772                           ;Estados.c: 111:     sprintf(Stemp, "%0.0fC", tempar);
  1773  00436E  0E5E               	movlw	low _Stemp
  1774  004370  0100               	movlb	0	; () banked
  1775  004372  6FCC               	movwf	sprintf@s& (0+255),b
  1776  004374  0E01               	movlw	high _Stemp
  1777  004376  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1778  004378  0E0D               	movlw	low STR_19
  1779  00437A  6FCE               	movwf	sprintf@fmt& (0+255),b
  1780  00437C  0E08               	movlw	high STR_19
  1781  00437E  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1782  004380  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  1783  004384  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  1784  004388  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  1785  00438C  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  1786  004390  EC3B  F022         	call	_sprintf	;wreg free
  1787  004394                     
  1788                           ;Estados.c: 112:     LCD_String_xy(1, 0, Stemp);
  1789  004394  0E00               	movlw	0
  1790  004396  6E0B               	movwf	LCD_String_xy@pos^0,c
  1791  004398  0E5E               	movlw	low _Stemp
  1792  00439A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1793  00439C  0E01               	movlw	high _Stemp
  1794  00439E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1795  0043A0  0E01               	movlw	1
  1796  0043A2  ECB2  F023         	call	_LCD_String_xy
  1797  0043A6                     
  1798                           ;Estados.c: 113:     LCD_Custom_Char(0, character1);
  1799  0043A6  0EE5               	movlw	low _character1
  1800  0043A8  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1801  0043AA  0E01               	movlw	high _character1
  1802  0043AC  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1803  0043AE  0E00               	movlw	0
  1804  0043B0  EC26  F023         	call	_LCD_Custom_Char
  1805                           
  1806                           ;Estados.c: 114:     LCD_Command(0xc0);
  1807  0043B4  0EC0               	movlw	192
  1808  0043B6  ECB5  F022         	call	_LCD_Command
  1809                           
  1810                           ;Estados.c: 115:     LCD_Char(0);
  1811  0043BA  0E00               	movlw	0
  1812  0043BC  ECDB  F022         	call	_LCD_Char
  1813  0043C0  0012               	return		;funcret
  1814  0043C2                     __end_of_Rainy_State:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _RTC_Calendario *****************
  1818 ;; Defined at:
  1819 ;;		line 79 in file "reloj.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  hours          10   57[BANK1 ] unsigned char [10]
  1824 ;;  mins           10   47[BANK1 ] unsigned char [10]
  1825 ;;  secs           10   37[BANK1 ] unsigned char [10]
  1826 ;;  year           10   27[BANK1 ] unsigned char [10]
  1827 ;;  month          10   17[BANK1 ] unsigned char [10]
  1828 ;;  date           10    7[BANK1 ] unsigned char [10]
  1829 ;;  days            7    0[BANK1 ] unsigned char [7]
  1830 ;;  AM_PM           1   67[BANK1 ] unsigned char 
  1831 ;;  Clock_type      1    0        unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1841 ;;      Params:         0       0       0       0       0       0       0       0       0
  1842 ;;      Locals:         0       0      68       0       0       0       0       0       0
  1843 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1844 ;;      Totals:         0       2      68       0       0       0       0       0       0
  1845 ;;Total ram usage:       70 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 8
  1848 ;; This function calls:
  1849 ;;		_I2C_Init
  1850 ;;		_I2C_Stop
  1851 ;;		_LCD_Clear
  1852 ;;		_LCD_Init
  1853 ;;		_LCD_MSdelay
  1854 ;;		_LCD_String
  1855 ;;		_LCD_String_xy
  1856 ;;		_RTC_Read_Calendar
  1857 ;;		_RTC_Read_Clock
  1858 ;;		_sprintf
  1859 ;; This function is called by:
  1860 ;;		_main
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text4
  1865  002740                     __ptext4:
  1866                           	callstack 0
  1867  002740                     _RTC_Calendario:
  1868                           	callstack 22
  1869  002740                     
  1870                           ;reloj.c: 85:     char AM_PM = 0x05;
  1871  002740  0E05               	movlw	5
  1872  002742  0101               	movlb	1	; () banked
  1873  002744  6FB5               	movwf	RTC_Calendario@AM_PM& (0+255),b
  1874  002746                     
  1875                           ; BSR set to: 1
  1876                           ;reloj.c: 86:     char days[7] = {'S','M','T','W','t','F','s'};
  1877  002746  EE21  F0CE         	lfsr	2,RTC_Calendario@F3580
  1878  00274A  EE11  F072         	lfsr	1,RTC_Calendario@days
  1879  00274E  0E06               	movlw	6
  1880  002750                     u6041:
  1881  002750  CFDB FFE3          	movff	plusw2,plusw1
  1882  002754  06E8               	decf	wreg,f,c
  1883  002756  E2FC               	bc	u6041
  1884  002758                     
  1885                           ; BSR set to: 1
  1886                           ;reloj.c: 87:     OSCCON=0x72;
  1887  002758  0E72               	movlw	114
  1888  00275A  6ED3               	movwf	211,c	;volatile
  1889  00275C                     
  1890                           ; BSR set to: 1
  1891                           ;reloj.c: 89:     I2C_Init();
  1892  00275C  EC52  F025         	call	_I2C_Init	;wreg free
  1893  002760                     
  1894                           ;reloj.c: 90:     LCD_Init();
  1895  002760  ECE8  F024         	call	_LCD_Init	;wreg free
  1896  002764                     
  1897                           ;reloj.c: 91:     LCD_Clear();
  1898  002764  EC88  F025         	call	_LCD_Clear	;wreg free
  1899  002768                     
  1900                           ;reloj.c: 92:     LCD_MSdelay(10);
  1901  002768  0E00               	movlw	0
  1902  00276A  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1903  00276C  0E0A               	movlw	10
  1904  00276E  6E01               	movwf	LCD_MSdelay@val^0,c
  1905  002770  EC01  F023         	call	_LCD_MSdelay	;wreg free
  1906  002774                     
  1907                           ;reloj.c: 94:     {;reloj.c: 95:         RTC_Read_Clock(0);
  1908  002774  0E00               	movlw	0
  1909  002776  EC4A  F023         	call	_RTC_Read_Clock
  1910  00277A                     
  1911                           ;reloj.c: 96:         if(hour & (1<<Clock_type)){
  1912  00277A  0101               	movlb	1	; () banked
  1913  00277C  AD08               	btfss	_hour& (0+255),6,b
  1914  00277E  EFC3  F013         	goto	u6051
  1915  002782  EFC5  F013         	goto	u6050
  1916  002786                     u6051:
  1917  002786  EF29  F014         	goto	l5586
  1918  00278A                     u6050:
  1919  00278A                     
  1920                           ; BSR set to: 1
  1921                           ;reloj.c: 98:             if(hour & (1<<AM_PM)){
  1922  00278A  AB08               	btfss	_hour& (0+255),5,b
  1923  00278C  EFCA  F013         	goto	u6061
  1924  002790  EFCC  F013         	goto	u6060
  1925  002794                     u6061:
  1926  002794  EFD7  F013         	goto	l5570
  1927  002798                     u6060:
  1928  002798                     
  1929                           ; BSR set to: 1
  1930                           ;reloj.c: 99:                 LCD_String_xy(1,14,"PM");
  1931  002798  0E0E               	movlw	14
  1932  00279A  6E0B               	movwf	LCD_String_xy@pos^0,c
  1933  00279C  0E52               	movlw	low STR_1
  1934  00279E  6E0C               	movwf	LCD_String_xy@msg^0,c
  1935  0027A0  0E08               	movlw	high STR_1
  1936  0027A2  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1937  0027A4  0E01               	movlw	1
  1938  0027A6  ECB2  F023         	call	_LCD_String_xy
  1939                           
  1940                           ;reloj.c: 100:             }
  1941  0027AA  EFE0  F013         	goto	l5572
  1942  0027AE                     l5570:
  1943                           
  1944                           ; BSR set to: 1
  1945                           ;reloj.c: 102:                 LCD_String_xy(1,14,"AM");
  1946  0027AE  0E0E               	movlw	14
  1947  0027B0  6E0B               	movwf	LCD_String_xy@pos^0,c
  1948  0027B2  0E4F               	movlw	low STR_2
  1949  0027B4  6E0C               	movwf	LCD_String_xy@msg^0,c
  1950  0027B6  0E08               	movlw	high STR_2
  1951  0027B8  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1952  0027BA  0E01               	movlw	1
  1953  0027BC  ECB2  F023         	call	_LCD_String_xy
  1954  0027C0                     l5572:
  1955                           
  1956                           ;reloj.c: 105:             hour = hour & (0x1f);
  1957  0027C0  0E1F               	movlw	31
  1958  0027C2  0101               	movlb	1	; () banked
  1959  0027C4  1508               	andwf	_hour& (0+255),w,b
  1960  0027C6  6F08               	movwf	_hour& (0+255),b
  1961  0027C8  6B09               	clrf	(_hour+1)& (0+255),b
  1962  0027CA                     
  1963                           ; BSR set to: 1
  1964                           ;reloj.c: 106:             sprintf(secs,"%x ",sec);
  1965  0027CA  0E97               	movlw	low RTC_Calendario@secs
  1966  0027CC  0100               	movlb	0	; () banked
  1967  0027CE  6FCC               	movwf	sprintf@s& (0+255),b
  1968  0027D0  0E01               	movlw	high RTC_Calendario@secs
  1969  0027D2  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1970  0027D4  0E24               	movlw	low STR_3
  1971  0027D6  6FCE               	movwf	sprintf@fmt& (0+255),b
  1972  0027D8  0E08               	movlw	high STR_3
  1973  0027DA  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1974  0027DC  C10C  F0D0         	movff	_sec,?_sprintf+4
  1975  0027E0  C10D  F0D1         	movff	_sec+1,?_sprintf+5
  1976  0027E4  EC3B  F022         	call	_sprintf	;wreg free
  1977  0027E8                     
  1978                           ;reloj.c: 107:             sprintf(mins,"%x:",min);
  1979  0027E8  0EA1               	movlw	low RTC_Calendario@mins
  1980  0027EA  0100               	movlb	0	; () banked
  1981  0027EC  6FCC               	movwf	sprintf@s& (0+255),b
  1982  0027EE  0E01               	movlw	high RTC_Calendario@mins
  1983  0027F0  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1984  0027F2  0E2C               	movlw	low STR_4
  1985  0027F4  6FCE               	movwf	sprintf@fmt& (0+255),b
  1986  0027F6  0E08               	movlw	high STR_4
  1987  0027F8  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1988  0027FA  C10A  F0D0         	movff	_min,?_sprintf+4
  1989  0027FE  C10B  F0D1         	movff	_min+1,?_sprintf+5
  1990  002802  EC3B  F022         	call	_sprintf	;wreg free
  1991  002806                     
  1992                           ;reloj.c: 108:             sprintf(hours,"%x:",hour);
  1993  002806  0EAB               	movlw	low RTC_Calendario@hours
  1994  002808  0100               	movlb	0	; () banked
  1995  00280A  6FCC               	movwf	sprintf@s& (0+255),b
  1996  00280C  0E01               	movlw	high RTC_Calendario@hours
  1997  00280E  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1998  002810  0E2C               	movlw	low STR_4
  1999  002812  6FCE               	movwf	sprintf@fmt& (0+255),b
  2000  002814  0E08               	movlw	high STR_4
  2001  002816  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2002  002818  C108  F0D0         	movff	_hour,?_sprintf+4
  2003  00281C  C109  F0D1         	movff	_hour+1,?_sprintf+5
  2004  002820  EC3B  F022         	call	_sprintf	;wreg free
  2005  002824                     
  2006                           ;reloj.c: 109:             LCD_String_xy(0,4,hours);
  2007  002824  0E04               	movlw	4
  2008  002826  6E0B               	movwf	LCD_String_xy@pos^0,c
  2009  002828  0EAB               	movlw	low RTC_Calendario@hours
  2010  00282A  6E0C               	movwf	LCD_String_xy@msg^0,c
  2011  00282C  0E01               	movlw	high RTC_Calendario@hours
  2012  00282E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2013  002830  0E00               	movlw	0
  2014  002832  ECB2  F023         	call	_LCD_String_xy
  2015  002836                     l5582:
  2016                           
  2017                           ;reloj.c: 110:             LCD_String(mins);
  2018  002836  0EA1               	movlw	low RTC_Calendario@mins
  2019  002838  6E09               	movwf	LCD_String@msg^0,c
  2020  00283A  0E01               	movlw	high RTC_Calendario@mins
  2021  00283C  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2022  00283E  EC57  F021         	call	_LCD_String	;wreg free
  2023  002842                     
  2024                           ;reloj.c: 111:             LCD_String(secs);
  2025  002842  0E97               	movlw	low RTC_Calendario@secs
  2026  002844  6E09               	movwf	LCD_String@msg^0,c
  2027  002846  0E01               	movlw	high RTC_Calendario@secs
  2028  002848  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2029  00284A  EC57  F021         	call	_LCD_String	;wreg free
  2030                           
  2031                           ;reloj.c: 112:         }
  2032  00284E  EF65  F014         	goto	l5600
  2033  002852                     l5586:
  2034                           
  2035                           ; BSR set to: 1
  2036                           ;reloj.c: 115:             hour = hour & (0x3f);
  2037  002852  0E3F               	movlw	63
  2038  002854  1508               	andwf	_hour& (0+255),w,b
  2039  002856  6F08               	movwf	_hour& (0+255),b
  2040  002858  6B09               	clrf	(_hour+1)& (0+255),b
  2041  00285A                     
  2042                           ; BSR set to: 1
  2043                           ;reloj.c: 116:             sprintf(secs,"%x ",sec);
  2044  00285A  0E97               	movlw	low RTC_Calendario@secs
  2045  00285C  0100               	movlb	0	; () banked
  2046  00285E  6FCC               	movwf	sprintf@s& (0+255),b
  2047  002860  0E01               	movlw	high RTC_Calendario@secs
  2048  002862  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2049  002864  0E24               	movlw	low STR_3
  2050  002866  6FCE               	movwf	sprintf@fmt& (0+255),b
  2051  002868  0E08               	movlw	high STR_3
  2052  00286A  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2053  00286C  C10C  F0D0         	movff	_sec,?_sprintf+4
  2054  002870  C10D  F0D1         	movff	_sec+1,?_sprintf+5
  2055  002874  EC3B  F022         	call	_sprintf	;wreg free
  2056  002878                     
  2057                           ;reloj.c: 117:             sprintf(mins,"%x:",min);
  2058  002878  0EA1               	movlw	low RTC_Calendario@mins
  2059  00287A  0100               	movlb	0	; () banked
  2060  00287C  6FCC               	movwf	sprintf@s& (0+255),b
  2061  00287E  0E01               	movlw	high RTC_Calendario@mins
  2062  002880  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2063  002882  0E2C               	movlw	low STR_4
  2064  002884  6FCE               	movwf	sprintf@fmt& (0+255),b
  2065  002886  0E08               	movlw	high STR_4
  2066  002888  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2067  00288A  C10A  F0D0         	movff	_min,?_sprintf+4
  2068  00288E  C10B  F0D1         	movff	_min+1,?_sprintf+5
  2069  002892  EC3B  F022         	call	_sprintf	;wreg free
  2070  002896                     
  2071                           ;reloj.c: 118:             sprintf(hours,"%x:",hour);
  2072  002896  0EAB               	movlw	low RTC_Calendario@hours
  2073  002898  0100               	movlb	0	; () banked
  2074  00289A  6FCC               	movwf	sprintf@s& (0+255),b
  2075  00289C  0E01               	movlw	high RTC_Calendario@hours
  2076  00289E  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2077  0028A0  0E2C               	movlw	low STR_4
  2078  0028A2  6FCE               	movwf	sprintf@fmt& (0+255),b
  2079  0028A4  0E08               	movlw	high STR_4
  2080  0028A6  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2081  0028A8  C108  F0D0         	movff	_hour,?_sprintf+4
  2082  0028AC  C109  F0D1         	movff	_hour+1,?_sprintf+5
  2083  0028B0  EC3B  F022         	call	_sprintf	;wreg free
  2084  0028B4                     
  2085                           ;reloj.c: 119:             LCD_String_xy(0,4,hours);
  2086  0028B4  0E04               	movlw	4
  2087  0028B6  6E0B               	movwf	LCD_String_xy@pos^0,c
  2088  0028B8  0EAB               	movlw	low RTC_Calendario@hours
  2089  0028BA  6E0C               	movwf	LCD_String_xy@msg^0,c
  2090  0028BC  0E01               	movlw	high RTC_Calendario@hours
  2091  0028BE  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2092  0028C0  0E00               	movlw	0
  2093  0028C2  ECB2  F023         	call	_LCD_String_xy
  2094  0028C6  EF1B  F014         	goto	l5582
  2095  0028CA                     l5600:
  2096                           
  2097                           ;reloj.c: 124:         RTC_Read_Calendar(3);
  2098  0028CA  0E03               	movlw	3
  2099  0028CC  ECE1  F021         	call	_RTC_Read_Calendar
  2100  0028D0                     
  2101                           ;reloj.c: 125:         I2C_Stop();
  2102  0028D0  EC6A  F025         	call	_I2C_Stop	;wreg free
  2103  0028D4                     
  2104                           ;reloj.c: 126:         sprintf(date,"%x-",Date);
  2105  0028D4  0E79               	movlw	low RTC_Calendario@date
  2106  0028D6  0100               	movlb	0	; () banked
  2107  0028D8  6FCC               	movwf	sprintf@s& (0+255),b
  2108  0028DA  0E01               	movlw	high RTC_Calendario@date
  2109  0028DC  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2110  0028DE  0E28               	movlw	low STR_9
  2111  0028E0  6FCE               	movwf	sprintf@fmt& (0+255),b
  2112  0028E2  0E08               	movlw	high STR_9
  2113  0028E4  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2114  0028E6  C104  F0D0         	movff	_Date,?_sprintf+4
  2115  0028EA  C105  F0D1         	movff	_Date+1,?_sprintf+5
  2116  0028EE  EC3B  F022         	call	_sprintf	;wreg free
  2117  0028F2                     
  2118                           ;reloj.c: 127:         sprintf(month,"%x-",Month);
  2119  0028F2  0E83               	movlw	low RTC_Calendario@month
  2120  0028F4  0100               	movlb	0	; () banked
  2121  0028F6  6FCC               	movwf	sprintf@s& (0+255),b
  2122  0028F8  0E01               	movlw	high RTC_Calendario@month
  2123  0028FA  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2124  0028FC  0E28               	movlw	low STR_9
  2125  0028FE  6FCE               	movwf	sprintf@fmt& (0+255),b
  2126  002900  0E08               	movlw	high STR_9
  2127  002902  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2128  002904  C102  F0D0         	movff	_Month,?_sprintf+4
  2129  002908  C103  F0D1         	movff	_Month+1,?_sprintf+5
  2130  00290C  EC3B  F022         	call	_sprintf	;wreg free
  2131  002910                     
  2132                           ;reloj.c: 128:         sprintf(year,"%x ",Year);
  2133  002910  0E8D               	movlw	low RTC_Calendario@year
  2134  002912  0100               	movlb	0	; () banked
  2135  002914  6FCC               	movwf	sprintf@s& (0+255),b
  2136  002916  0E01               	movlw	high RTC_Calendario@year
  2137  002918  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2138  00291A  0E24               	movlw	low STR_3
  2139  00291C  6FCE               	movwf	sprintf@fmt& (0+255),b
  2140  00291E  0E08               	movlw	high STR_3
  2141  002920  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2142  002922  C100  F0D0         	movff	_Year,?_sprintf+4
  2143  002926  C101  F0D1         	movff	_Year+1,?_sprintf+5
  2144  00292A  EC3B  F022         	call	_sprintf	;wreg free
  2145  00292E                     
  2146                           ;reloj.c: 129:         LCD_String_xy(2,2,date);
  2147  00292E  0E02               	movlw	2
  2148  002930  6E0B               	movwf	LCD_String_xy@pos^0,c
  2149  002932  0E79               	movlw	low RTC_Calendario@date
  2150  002934  6E0C               	movwf	LCD_String_xy@msg^0,c
  2151  002936  0E01               	movlw	high RTC_Calendario@date
  2152  002938  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2153  00293A  0E02               	movlw	2
  2154  00293C  ECB2  F023         	call	_LCD_String_xy
  2155  002940                     
  2156                           ;reloj.c: 130:         LCD_String(month);
  2157  002940  0E83               	movlw	low RTC_Calendario@month
  2158  002942  6E09               	movwf	LCD_String@msg^0,c
  2159  002944  0E01               	movlw	high RTC_Calendario@month
  2160  002946  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2161  002948  EC57  F021         	call	_LCD_String	;wreg free
  2162  00294C                     
  2163                           ;reloj.c: 131:         LCD_String(year);
  2164  00294C  0E8D               	movlw	low RTC_Calendario@year
  2165  00294E  6E09               	movwf	LCD_String@msg^0,c
  2166  002950  0E01               	movlw	high RTC_Calendario@year
  2167  002952  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2168  002954  EC57  F021         	call	_LCD_String	;wreg free
  2169                           
  2170                           ;reloj.c: 134:         switch(days[Day])
  2171  002958  EFE6  F014         	goto	l5660
  2172  00295C                     l5616:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;reloj.c: 137:                         LCD_String("Sun");
  2176  00295C  0E40               	movlw	low STR_12
  2177  00295E  6E09               	movwf	LCD_String@msg^0,c
  2178  002960  0E08               	movlw	high STR_12
  2179  002962  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2180  002964  EC57  F021         	call	_LCD_String	;wreg free
  2181  002968  EF17  F015         	goto	l345
  2182  00296C                     l5622:
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;reloj.c: 141:                         LCD_String("Mon");
  2186  00296C  0E3C               	movlw	low STR_13
  2187  00296E  6E09               	movwf	LCD_String@msg^0,c
  2188  002970  0E08               	movlw	high STR_13
  2189  002972  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2190  002974  EC57  F021         	call	_LCD_String	;wreg free
  2191  002978  EF17  F015         	goto	l345
  2192  00297C                     l5628:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;reloj.c: 145:                         LCD_String("Tue");
  2196  00297C  0E34               	movlw	low STR_14
  2197  00297E  6E09               	movwf	LCD_String@msg^0,c
  2198  002980  0E08               	movlw	high STR_14
  2199  002982  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2200  002984  EC57  F021         	call	_LCD_String	;wreg free
  2201  002988  EF17  F015         	goto	l345
  2202  00298C                     l5634:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;reloj.c: 149:                         LCD_String("Wed");
  2206  00298C  0E30               	movlw	low STR_15
  2207  00298E  6E09               	movwf	LCD_String@msg^0,c
  2208  002990  0E08               	movlw	high STR_15
  2209  002992  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2210  002994  EC57  F021         	call	_LCD_String	;wreg free
  2211  002998  EF17  F015         	goto	l345
  2212  00299C                     l5640:
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;reloj.c: 153:                         LCD_String("Thu");
  2216  00299C  0E48               	movlw	low STR_16
  2217  00299E  6E09               	movwf	LCD_String@msg^0,c
  2218  0029A0  0E08               	movlw	high STR_16
  2219  0029A2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2220  0029A4  EC57  F021         	call	_LCD_String	;wreg free
  2221  0029A8  EF17  F015         	goto	l345
  2222  0029AC                     l5646:
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;reloj.c: 157:                         LCD_String("Fri");
  2226  0029AC  0E38               	movlw	low STR_17
  2227  0029AE  6E09               	movwf	LCD_String@msg^0,c
  2228  0029B0  0E08               	movlw	high STR_17
  2229  0029B2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2230  0029B4  EC57  F021         	call	_LCD_String	;wreg free
  2231  0029B8  EF17  F015         	goto	l345
  2232  0029BC                     l5652:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;reloj.c: 161:                         LCD_String("Sat");
  2236  0029BC  0E44               	movlw	low STR_18
  2237  0029BE  6E09               	movwf	LCD_String@msg^0,c
  2238  0029C0  0E08               	movlw	high STR_18
  2239  0029C2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2240  0029C4  EC57  F021         	call	_LCD_String	;wreg free
  2241  0029C8  EF17  F015         	goto	l345
  2242  0029CC                     l5660:
  2243  0029CC  0E72               	movlw	low RTC_Calendario@days
  2244  0029CE  0101               	movlb	1	; () banked
  2245  0029D0  2506               	addwf	_Day& (0+255),w,b
  2246  0029D2  6ED9               	movwf	fsr2l,c
  2247  0029D4  0E01               	movlw	high RTC_Calendario@days
  2248  0029D6  2107               	addwfc	(_Day+1)& (0+255),w,b
  2249  0029D8  6EDA               	movwf	fsr2h,c
  2250  0029DA  50DF               	movf	indf2,w,c
  2251  0029DC  0100               	movlb	0	; () banked
  2252  0029DE  6FDC               	movwf	??_RTC_Calendario& (0+255),b
  2253  0029E0  6BDD               	clrf	(??_RTC_Calendario+1)& (0+255),b
  2254                           
  2255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2256                           ; Switch size 1, requested type "simple"
  2257                           ; Number of cases is 1, Range of values is 0 to 0
  2258                           ; switch strategies available:
  2259                           ; Name         Instructions Cycles
  2260                           ; simple_byte            4     3 (average)
  2261                           ;	Chosen strategy is simple_byte
  2262  0029E2  51DD               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2263  0029E4  0A00               	xorlw	0	; case 0
  2264  0029E6  B4D8               	btfsc	status,2,c
  2265  0029E8  EFF8  F014         	goto	l5880
  2266  0029EC  EF17  F015         	goto	l345
  2267  0029F0                     l5880:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ; Switch size 1, requested type "simple"
  2271                           ; Number of cases is 7, Range of values is 70 to 116
  2272                           ; switch strategies available:
  2273                           ; Name         Instructions Cycles
  2274                           ; simple_byte           22    12 (average)
  2275                           ;	Chosen strategy is simple_byte
  2276  0029F0  51DC               	movf	??_RTC_Calendario& (0+255),w,b
  2277  0029F2  0A46               	xorlw	70	; case 70
  2278  0029F4  B4D8               	btfsc	status,2,c
  2279  0029F6  EFD6  F014         	goto	l5646
  2280  0029FA  0A0B               	xorlw	11	; case 77
  2281  0029FC  B4D8               	btfsc	status,2,c
  2282  0029FE  EFB6  F014         	goto	l5622
  2283  002A02  0A1E               	xorlw	30	; case 83
  2284  002A04  B4D8               	btfsc	status,2,c
  2285  002A06  EFAE  F014         	goto	l5616
  2286  002A0A  0A07               	xorlw	7	; case 84
  2287  002A0C  B4D8               	btfsc	status,2,c
  2288  002A0E  EFBE  F014         	goto	l5628
  2289  002A12  0A03               	xorlw	3	; case 87
  2290  002A14  B4D8               	btfsc	status,2,c
  2291  002A16  EFC6  F014         	goto	l5634
  2292  002A1A  0A24               	xorlw	36	; case 115
  2293  002A1C  B4D8               	btfsc	status,2,c
  2294  002A1E  EFDE  F014         	goto	l5652
  2295  002A22  0A07               	xorlw	7	; case 116
  2296  002A24  B4D8               	btfsc	status,2,c
  2297  002A26  EFCE  F014         	goto	l5640
  2298  002A2A  EF17  F015         	goto	l345
  2299  002A2E                     l345:
  2300  002A2E  0012               	return		;funcret
  2301  002A30                     __end_of_RTC_Calendario:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _RTC_Read_Clock *****************
  2305 ;; Defined at:
  2306 ;;		line 28 in file "reloj.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  read_clock_a    1    wreg     unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2320 ;;      Params:         0       0       0       0       0       0       0       0       0
  2321 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2322 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2323 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2324 ;;Total ram usage:        2 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; Hardware stack levels required when called: 3
  2327 ;; This function calls:
  2328 ;;		_I2C_Read
  2329 ;;		_I2C_Repeated_Start
  2330 ;;		_I2C_Start
  2331 ;;		_I2C_Write
  2332 ;; This function is called by:
  2333 ;;		_RTC_Calendario
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text5
  2338  004694                     __ptext5:
  2339                           	callstack 0
  2340  004694                     _RTC_Read_Clock:
  2341                           	callstack 26
  2342                           
  2343                           ;incstack = 0
  2344                           ;RTC_Read_Clock@read_clock_address stored from wreg
  2345  004694  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  2346  004696                     
  2347                           ;reloj.c: 28: void RTC_Read_Clock(char read_clock_address);reloj.c: 29: {;reloj.c: 30:  
      +                             I2C_Start(0xD0);
  2348  004696  0ED0               	movlw	208
  2349  004698  EC00  F025         	call	_I2C_Start
  2350                           
  2351                           ;reloj.c: 31:     I2C_Write(read_clock_address);
  2352  00469C  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  2353  00469E  EC41  F025         	call	_I2C_Write
  2354                           
  2355                           ;reloj.c: 32:     I2C_Repeated_Start(0xD1);
  2356  0046A2  0ED1               	movlw	209
  2357  0046A4  EC17  F025         	call	_I2C_Repeated_Start
  2358  0046A8                     
  2359                           ;reloj.c: 33:     sec = I2C_Read(0);
  2360  0046A8  0E00               	movlw	0
  2361  0046AA  ECF0  F023         	call	_I2C_Read
  2362  0046AE  6E03               	movwf	??_RTC_Read_Clock^0,c
  2363  0046B0  5003               	movf	??_RTC_Read_Clock^0,w,c
  2364  0046B2  0101               	movlb	1	; () banked
  2365  0046B4  6F0C               	movwf	_sec& (0+255),b
  2366  0046B6  6B0D               	clrf	(_sec+1)& (0+255),b
  2367  0046B8                     
  2368                           ; BSR set to: 1
  2369                           ;reloj.c: 34:     min = I2C_Read(0);
  2370  0046B8  0E00               	movlw	0
  2371  0046BA  ECF0  F023         	call	_I2C_Read
  2372  0046BE  6E03               	movwf	??_RTC_Read_Clock^0,c
  2373  0046C0  5003               	movf	??_RTC_Read_Clock^0,w,c
  2374  0046C2  0101               	movlb	1	; () banked
  2375  0046C4  6F0A               	movwf	_min& (0+255),b
  2376  0046C6  6B0B               	clrf	(_min+1)& (0+255),b
  2377  0046C8                     
  2378                           ; BSR set to: 1
  2379                           ;reloj.c: 35:     hour= I2C_Read(1);
  2380  0046C8  0E01               	movlw	1
  2381  0046CA  ECF0  F023         	call	_I2C_Read
  2382  0046CE  6E03               	movwf	??_RTC_Read_Clock^0,c
  2383  0046D0  5003               	movf	??_RTC_Read_Clock^0,w,c
  2384  0046D2  0101               	movlb	1	; () banked
  2385  0046D4  6F08               	movwf	_hour& (0+255),b
  2386  0046D6  6B09               	clrf	(_hour+1)& (0+255),b
  2387  0046D8                     
  2388                           ; BSR set to: 1
  2389  0046D8  0012               	return		;funcret
  2390  0046DA                     __end_of_RTC_Read_Clock:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _RTC_Read_Calendar *****************
  2394 ;; Defined at:
  2395 ;;		line 51 in file "reloj.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  read_calenda    1    wreg     unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  read_calenda    1    3[COMRAM] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2409 ;;      Params:         0       0       0       0       0       0       0       0       0
  2410 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2411 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2412 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 3
  2416 ;; This function calls:
  2417 ;;		_I2C_Read
  2418 ;;		_I2C_Repeated_Start
  2419 ;;		_I2C_Start
  2420 ;;		_I2C_Stop
  2421 ;;		_I2C_Write
  2422 ;; This function is called by:
  2423 ;;		_RTC_Calendario
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text6
  2428  0043C2                     __ptext6:
  2429                           	callstack 0
  2430  0043C2                     _RTC_Read_Calendar:
  2431                           	callstack 26
  2432                           
  2433                           ; BSR set to: 1
  2434                           ;incstack = 0
  2435                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  2436  0043C2  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  2437  0043C4                     
  2438                           ;reloj.c: 51: void RTC_Read_Calendar(char read_calendar_address);reloj.c: 52: {;reloj.c:
      +                           53:     I2C_Start(0xD0);
  2439  0043C4  0ED0               	movlw	208
  2440  0043C6  EC00  F025         	call	_I2C_Start
  2441                           
  2442                           ;reloj.c: 54:     I2C_Write(read_calendar_address);
  2443  0043CA  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  2444  0043CC  EC41  F025         	call	_I2C_Write
  2445                           
  2446                           ;reloj.c: 55:     I2C_Repeated_Start(0xD1);
  2447  0043D0  0ED1               	movlw	209
  2448  0043D2  EC17  F025         	call	_I2C_Repeated_Start
  2449  0043D6                     
  2450                           ;reloj.c: 56:     Day = I2C_Read(0);
  2451  0043D6  0E00               	movlw	0
  2452  0043D8  ECF0  F023         	call	_I2C_Read
  2453  0043DC  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2454  0043DE  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2455  0043E0  0101               	movlb	1	; () banked
  2456  0043E2  6F06               	movwf	_Day& (0+255),b
  2457  0043E4  6B07               	clrf	(_Day+1)& (0+255),b
  2458  0043E6                     
  2459                           ; BSR set to: 1
  2460                           ;reloj.c: 57:     Date = I2C_Read(0);
  2461  0043E6  0E00               	movlw	0
  2462  0043E8  ECF0  F023         	call	_I2C_Read
  2463  0043EC  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2464  0043EE  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2465  0043F0  0101               	movlb	1	; () banked
  2466  0043F2  6F04               	movwf	_Date& (0+255),b
  2467  0043F4  6B05               	clrf	(_Date+1)& (0+255),b
  2468  0043F6                     
  2469                           ; BSR set to: 1
  2470                           ;reloj.c: 58:     Month = I2C_Read(0);
  2471  0043F6  0E00               	movlw	0
  2472  0043F8  ECF0  F023         	call	_I2C_Read
  2473  0043FC  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2474  0043FE  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2475  004400  0101               	movlb	1	; () banked
  2476  004402  6F02               	movwf	_Month& (0+255),b
  2477  004404  6B03               	clrf	(_Month+1)& (0+255),b
  2478  004406                     
  2479                           ; BSR set to: 1
  2480                           ;reloj.c: 59:     Year = I2C_Read(1);
  2481  004406  0E01               	movlw	1
  2482  004408  ECF0  F023         	call	_I2C_Read
  2483  00440C  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2484  00440E  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2485  004410  0101               	movlb	1	; () banked
  2486  004412  6F00               	movwf	_Year& (0+255),b
  2487  004414  6B01               	clrf	(_Year+1)& (0+255),b
  2488  004416                     
  2489                           ; BSR set to: 1
  2490                           ;reloj.c: 60:     I2C_Stop();
  2491  004416  EC6A  F025         	call	_I2C_Stop	;wreg free
  2492  00441A  0012               	return		;funcret
  2493  00441C                     __end_of_RTC_Read_Calendar:
  2494                           	callstack 0
  2495                           
  2496 ;; *************** function _I2C_Stop *****************
  2497 ;; Defined at:
  2498 ;;		line 186 in file "Reloj_ar.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      unsigned char 
  2505 ;; Registers used:
  2506 ;;		wreg
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2515 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_RTC_Read_Calendar
  2522 ;;		_RTC_Calendario
  2523 ;;		_I2C_Start_Wait
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text7
  2528  004AD4                     __ptext7:
  2529                           	callstack 0
  2530  004AD4                     _I2C_Stop:
  2531                           	callstack 28
  2532  004AD4                     
  2533                           ;Reloj_ar.c: 188:     PEN = 1;
  2534  004AD4  84C5               	bsf	4037,2,c	;volatile
  2535  004AD6                     l446:
  2536  004AD6  B4C5               	btfsc	4037,2,c	;volatile
  2537  004AD8  EF70  F025         	goto	u5851
  2538  004ADC  EF72  F025         	goto	u5850
  2539  004AE0                     u5851:
  2540  004AE0  EF6B  F025         	goto	l446
  2541  004AE4                     u5850:
  2542  004AE4                     
  2543                           ;Reloj_ar.c: 190:     if(!SSPSTATbits.P);
  2544  004AE4  50C7               	movf	199,w,c	;volatile
  2545  004AE6  0012               	return		;funcret
  2546  004AE8                     __end_of_I2C_Stop:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function _I2C_Start *****************
  2550 ;; Defined at:
  2551 ;;		line 134 in file "Reloj_ar.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  slave_write_    1    wreg     unsigned char 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  slave_write_    1    1[COMRAM] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      unsigned char 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2565 ;;      Params:         0       0       0       0       0       0       0       0       0
  2566 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2568 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2569 ;;Total ram usage:        1 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 2
  2572 ;; This function calls:
  2573 ;;		_I2C_Write
  2574 ;; This function is called by:
  2575 ;;		_RTC_Read_Clock
  2576 ;;		_RTC_Read_Calendar
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text8
  2581  004A00                     __ptext8:
  2582                           	callstack 0
  2583  004A00                     _I2C_Start:
  2584                           	callstack 26
  2585                           
  2586                           ;incstack = 0
  2587                           ;I2C_Start@slave_write_address stored from wreg
  2588  004A00  6E02               	movwf	I2C_Start@slave_write_address^0,c
  2589  004A02                     
  2590                           ;Reloj_ar.c: 134: char I2C_Start(char slave_write_address);Reloj_ar.c: 135: {;Reloj_ar.c
      +                          : 136:     SSPCON2bits.SEN=1;
  2591  004A02  80C5               	bsf	197,0,c	;volatile
  2592  004A04                     l430:
  2593  004A04  B0C5               	btfsc	197,0,c	;volatile
  2594  004A06  EF07  F025         	goto	u5791
  2595  004A0A  EF09  F025         	goto	u5790
  2596  004A0E                     u5791:
  2597  004A0E  EF02  F025         	goto	l430
  2598  004A12                     u5790:
  2599  004A12                     
  2600                           ;Reloj_ar.c: 138:  SSPIF=0;
  2601  004A12  969E               	bcf	3998,3,c	;volatile
  2602                           
  2603                           ;Reloj_ar.c: 139:     if(!SSPSTATbits.S)
  2604  004A14  B6C7               	btfsc	199,3,c	;volatile
  2605  004A16  EF0F  F025         	goto	u5801
  2606  004A1A  EF11  F025         	goto	u5800
  2607  004A1E                     u5801:
  2608  004A1E  EF13  F025         	goto	l5300
  2609  004A22                     u5800:
  2610  004A22  EF16  F025         	goto	l434
  2611  004A26                     l5300:
  2612                           
  2613                           ;Reloj_ar.c: 141:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Sta
      +                          rt is never used
  2614  004A26  5002               	movf	I2C_Start@slave_write_address^0,w,c
  2615  004A28  EC41  F025         	call	_I2C_Write
  2616  004A2C                     l434:
  2617  004A2C  0012               	return		;funcret
  2618  004A2E                     __end_of_I2C_Start:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function _I2C_Repeated_Start *****************
  2622 ;; Defined at:
  2623 ;;		line 159 in file "Reloj_ar.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  slave_read_a    1    wreg     unsigned char 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      unsigned char 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2637 ;;      Params:         0       0       0       0       0       0       0       0       0
  2638 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2640 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2641 ;;Total ram usage:        1 bytes
  2642 ;; Hardware stack levels used: 1
  2643 ;; Hardware stack levels required when called: 2
  2644 ;; This function calls:
  2645 ;;		_I2C_Write
  2646 ;; This function is called by:
  2647 ;;		_RTC_Read_Clock
  2648 ;;		_RTC_Read_Calendar
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text9
  2653  004A2E                     __ptext9:
  2654                           	callstack 0
  2655  004A2E                     _I2C_Repeated_Start:
  2656                           	callstack 26
  2657                           
  2658                           ;incstack = 0
  2659                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  2660  004A2E  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  2661  004A30                     
  2662                           ;Reloj_ar.c: 159: char I2C_Repeated_Start(char slave_read_address);Reloj_ar.c: 160: {;Re
      +                          loj_ar.c: 161:     RSEN = 1;
  2663  004A30  82C5               	bsf	4037,1,c	;volatile
  2664  004A32                     l437:
  2665  004A32  B2C5               	btfsc	4037,1,c	;volatile
  2666  004A34  EF1E  F025         	goto	u5811
  2667  004A38  EF20  F025         	goto	u5810
  2668  004A3C                     u5811:
  2669  004A3C  EF19  F025         	goto	l437
  2670  004A40                     u5810:
  2671  004A40                     
  2672                           ;Reloj_ar.c: 163:     SSPIF = 0;
  2673  004A40  969E               	bcf	3998,3,c	;volatile
  2674                           
  2675                           ;Reloj_ar.c: 164:  if(!SSPSTATbits.S)
  2676  004A42  B6C7               	btfsc	199,3,c	;volatile
  2677  004A44  EF26  F025         	goto	u5821
  2678  004A48  EF28  F025         	goto	u5820
  2679  004A4C                     u5821:
  2680  004A4C  EF2A  F025         	goto	l5308
  2681  004A50                     u5820:
  2682  004A50  EF2D  F025         	goto	l441
  2683  004A54                     l5308:
  2684                           
  2685                           ;Reloj_ar.c: 166:     I2C_Write(slave_read_address);
  2686  004A54  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  2687  004A56  EC41  F025         	call	_I2C_Write
  2688  004A5A                     l441:
  2689  004A5A  0012               	return		;funcret
  2690  004A5C                     __end_of_I2C_Repeated_Start:
  2691                           	callstack 0
  2692                           
  2693 ;; *************** function _I2C_Write *****************
  2694 ;; Defined at:
  2695 ;;		line 208 in file "Reloj_ar.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  data            1    wreg     unsigned char 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  data            1    0[COMRAM] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      unsigned char 
  2702 ;; Registers used:
  2703 ;;		wreg, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0
  2710 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2712 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2713 ;;Total ram usage:        1 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 1
  2716 ;; This function calls:
  2717 ;;		_I2C_Ready
  2718 ;; This function is called by:
  2719 ;;		_RTC_Read_Clock
  2720 ;;		_RTC_Read_Calendar
  2721 ;;		_I2C_Start
  2722 ;;		_I2C_Repeated_Start
  2723 ;;		_I2C_Start_Wait
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text10
  2728  004A82                     __ptext10:
  2729                           	callstack 0
  2730  004A82                     _I2C_Write:
  2731                           	callstack 27
  2732                           
  2733                           ;incstack = 0
  2734                           ;I2C_Write@data stored from wreg
  2735  004A82  6E01               	movwf	I2C_Write@data^0,c
  2736  004A84                     
  2737                           ;Reloj_ar.c: 208: char I2C_Write(unsigned char data);Reloj_ar.c: 209: {;Reloj_ar.c: 210:
      +                                 SSPBUF = data;
  2738  004A84  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  2739  004A88                     
  2740                           ;Reloj_ar.c: 211:       I2C_Ready();
  2741  004A88  EC92  F025         	call	_I2C_Ready	;wreg free
  2742  004A8C                     
  2743                           ;Reloj_ar.c: 212:       if (ACKSTAT)
  2744  004A8C  ACC5               	btfss	4037,6,c	;volatile
  2745  004A8E  EF4B  F025         	goto	u5521
  2746  004A92  EF4D  F025         	goto	u5520
  2747  004A96                     u5521:
  2748  004A96  EF50  F025         	goto	l5086
  2749  004A9A                     u5520:
  2750  004A9A                     
  2751                           ;Reloj_ar.c: 213:         return 1;
  2752  004A9A  0E01               	movlw	1
  2753  004A9C  EF51  F025         	goto	l454
  2754  004AA0                     l5086:
  2755                           
  2756                           ;Reloj_ar.c: 215:         return 2;
  2757  004AA0  0E02               	movlw	2
  2758  004AA2                     l454:
  2759  004AA2  0012               	return		;funcret
  2760  004AA4                     __end_of_I2C_Write:
  2761                           	callstack 0
  2762                           
  2763 ;; *************** function _I2C_Read *****************
  2764 ;; Defined at:
  2765 ;;		line 27 in file "Reloj_ar.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;  flag            1    wreg     unsigned char 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  flag            1    0[COMRAM] unsigned char 
  2770 ;;  buffer          1    1[COMRAM] unsigned char 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      unsigned char 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0
  2781 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2783 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2784 ;;Total ram usage:        2 bytes
  2785 ;; Hardware stack levels used: 1
  2786 ;; Hardware stack levels required when called: 1
  2787 ;; This function calls:
  2788 ;;		_I2C_Ack
  2789 ;;		_I2C_Nack
  2790 ;;		_I2C_Ready
  2791 ;; This function is called by:
  2792 ;;		_RTC_Read_Clock
  2793 ;;		_RTC_Read_Calendar
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text11
  2798  0047E0                     __ptext11:
  2799                           	callstack 0
  2800  0047E0                     _I2C_Read:
  2801                           	callstack 27
  2802                           
  2803                           ;incstack = 0
  2804                           ;I2C_Read@flag stored from wreg
  2805  0047E0  6E01               	movwf	I2C_Read@flag^0,c
  2806  0047E2                     
  2807                           ;Reloj_ar.c: 27: char I2C_Read(char flag);Reloj_ar.c: 29: {;Reloj_ar.c: 30:         char
      +                           buffer;;Reloj_ar.c: 31:         RCEN = 1;
  2808  0047E2  86C5               	bsf	4037,3,c	;volatile
  2809  0047E4                     l402:
  2810  0047E4  A0C7               	btfss	199,0,c	;volatile
  2811  0047E6  EFF7  F023         	goto	u5831
  2812  0047EA  EFF9  F023         	goto	u5830
  2813  0047EE                     u5831:
  2814  0047EE  EFF2  F023         	goto	l402
  2815  0047F2                     u5830:
  2816  0047F2                     
  2817                           ;Reloj_ar.c: 34:         buffer = SSPBUF;
  2818  0047F2  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  2819  0047F6                     
  2820                           ;Reloj_ar.c: 36:         if(flag==0)
  2821  0047F6  5001               	movf	I2C_Read@flag^0,w,c
  2822  0047F8  A4D8               	btfss	status,2,c
  2823  0047FA  EF01  F024         	goto	u5841
  2824  0047FE  EF03  F024         	goto	u5840
  2825  004802                     u5841:
  2826  004802  EF07  F024         	goto	l5322
  2827  004806                     u5840:
  2828  004806                     
  2829                           ;Reloj_ar.c: 37:             I2C_Ack();
  2830  004806  EC7E  F025         	call	_I2C_Ack	;wreg free
  2831  00480A  EF09  F024         	goto	l406
  2832  00480E                     l5322:
  2833                           
  2834                           ;Reloj_ar.c: 39:             I2C_Nack();
  2835  00480E  EC74  F025         	call	_I2C_Nack	;wreg free
  2836  004812                     l406:
  2837                           
  2838                           ;Reloj_ar.c: 40:         I2C_Ready();
  2839  004812  EC92  F025         	call	_I2C_Ready	;wreg free
  2840  004816                     
  2841                           ;Reloj_ar.c: 41:         return(buffer);
  2842  004816  5002               	movf	I2C_Read@buffer^0,w,c
  2843  004818  0012               	return		;funcret
  2844  00481A                     __end_of_I2C_Read:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _I2C_Ready *****************
  2848 ;; Defined at:
  2849 ;;		line 83 in file "Reloj_ar.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		None
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2866 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_I2C_Read
  2873 ;;		_I2C_Write
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text12
  2878  004B24                     __ptext12:
  2879                           	callstack 0
  2880  004B24                     _I2C_Ready:
  2881                           	callstack 27
  2882  004B24                     l413:
  2883  004B24  A69E               	btfss	3998,3,c	;volatile
  2884  004B26  EF97  F025         	goto	u4671
  2885  004B2A  EF99  F025         	goto	u4670
  2886  004B2E                     u4671:
  2887  004B2E  EF92  F025         	goto	l413
  2888  004B32                     u4670:
  2889  004B32                     
  2890                           ;Reloj_ar.c: 86:     SSPIF=0;
  2891  004B32  969E               	bcf	3998,3,c	;volatile
  2892  004B34  0012               	return		;funcret
  2893  004B36                     __end_of_I2C_Ready:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _I2C_Nack *****************
  2897 ;; Defined at:
  2898 ;;		line 250 in file "Reloj_ar.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;		None
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		None
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2912 ;;      Params:         0       0       0       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2915 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2916 ;;Total ram usage:        0 bytes
  2917 ;; Hardware stack levels used: 1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_I2C_Read
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text13
  2926  004AE8                     __ptext13:
  2927                           	callstack 0
  2928  004AE8                     _I2C_Nack:
  2929                           	callstack 27
  2930  004AE8                     
  2931                           ;Reloj_ar.c: 252:     ACKDT=1;
  2932  004AE8  8AC5               	bsf	4037,5,c	;volatile
  2933                           
  2934                           ;Reloj_ar.c: 253:  ACKEN=1;
  2935  004AEA  88C5               	bsf	4037,4,c	;volatile
  2936  004AEC                     l464:
  2937  004AEC  B8C5               	btfsc	4037,4,c	;volatile
  2938  004AEE  EF7B  F025         	goto	u5541
  2939  004AF2  EF7D  F025         	goto	u5540
  2940  004AF6                     u5541:
  2941  004AF6  EF76  F025         	goto	l464
  2942  004AFA                     u5540:
  2943  004AFA  0012               	return		;funcret
  2944  004AFC                     __end_of_I2C_Nack:
  2945                           	callstack 0
  2946                           
  2947 ;; *************** function _I2C_Ack *****************
  2948 ;; Defined at:
  2949 ;;		line 230 in file "Reloj_ar.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		None
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_I2C_Read
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text14
  2977  004AFC                     __ptext14:
  2978                           	callstack 0
  2979  004AFC                     _I2C_Ack:
  2980                           	callstack 27
  2981  004AFC                     
  2982                           ;Reloj_ar.c: 232:     ACKDT=0;
  2983  004AFC  9AC5               	bcf	4037,5,c	;volatile
  2984                           
  2985                           ;Reloj_ar.c: 233:  ACKEN=1;
  2986  004AFE  88C5               	bsf	4037,4,c	;volatile
  2987  004B00                     l458:
  2988  004B00  B8C5               	btfsc	4037,4,c	;volatile
  2989  004B02  EF85  F025         	goto	u5531
  2990  004B06  EF87  F025         	goto	u5530
  2991  004B0A                     u5531:
  2992  004B0A  EF80  F025         	goto	l458
  2993  004B0E                     u5530:
  2994  004B0E  0012               	return		;funcret
  2995  004B10                     __end_of_I2C_Ack:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _LCD_Init *****************
  2999 ;; Defined at:
  3000 ;;		line 23 in file "LCD_caracter.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3014 ;;      Params:         0       0       0       0       0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 2
  3021 ;; This function calls:
  3022 ;;		_LCD_Command
  3023 ;;		_LCD_MSdelay
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;;		_RTC_Calendario
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text15
  3031  0049D0                     __ptext15:
  3032                           	callstack 0
  3033  0049D0                     _LCD_Init:
  3034                           	callstack 27
  3035  0049D0                     
  3036                           ;LCD_caracter.c: 25:     TRISD = 0;
  3037  0049D0  0E00               	movlw	0
  3038  0049D2  6E95               	movwf	149,c	;volatile
  3039  0049D4                     
  3040                           ;LCD_caracter.c: 26:     LCD_MSdelay(15);
  3041  0049D4  0E00               	movlw	0
  3042  0049D6  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  3043  0049D8  0E0F               	movlw	15
  3044  0049DA  6E01               	movwf	LCD_MSdelay@val^0,c
  3045  0049DC  EC01  F023         	call	_LCD_MSdelay	;wreg free
  3046  0049E0                     
  3047                           ;LCD_caracter.c: 27:     LCD_Command(0x02);
  3048  0049E0  0E02               	movlw	2
  3049  0049E2  ECB5  F022         	call	_LCD_Command
  3050  0049E6                     
  3051                           ;LCD_caracter.c: 29:     LCD_Command(0x28);
  3052  0049E6  0E28               	movlw	40
  3053  0049E8  ECB5  F022         	call	_LCD_Command
  3054  0049EC                     
  3055                           ;LCD_caracter.c: 31:  LCD_Command(0x01);
  3056  0049EC  0E01               	movlw	1
  3057  0049EE  ECB5  F022         	call	_LCD_Command
  3058  0049F2                     
  3059                           ;LCD_caracter.c: 32:     LCD_Command(0x0c);
  3060  0049F2  0E0C               	movlw	12
  3061  0049F4  ECB5  F022         	call	_LCD_Command
  3062  0049F8                     
  3063                           ;LCD_caracter.c: 33:  LCD_Command(0x06);
  3064  0049F8  0E06               	movlw	6
  3065  0049FA  ECB5  F022         	call	_LCD_Command
  3066  0049FE  0012               	return		;funcret
  3067  004A00                     __end_of_LCD_Init:
  3068                           	callstack 0
  3069                           
  3070 ;; *************** function _LCD_Clear *****************
  3071 ;; Defined at:
  3072 ;;		line 155 in file "LCD_caracter.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3089 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 2
  3093 ;; This function calls:
  3094 ;;		_LCD_Command
  3095 ;;		_LCD_MSdelay
  3096 ;; This function is called by:
  3097 ;;		_main
  3098 ;;		_RTC_Calendario
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text16
  3103  004B10                     __ptext16:
  3104                           	callstack 0
  3105  004B10                     _LCD_Clear:
  3106                           	callstack 27
  3107  004B10                     
  3108                           ;LCD_caracter.c: 157:     LCD_Command(0x01);
  3109  004B10  0E01               	movlw	1
  3110  004B12  ECB5  F022         	call	_LCD_Command
  3111                           
  3112                           ;LCD_caracter.c: 158:     LCD_MSdelay(3);
  3113  004B16  0E00               	movlw	0
  3114  004B18  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  3115  004B1A  0E03               	movlw	3
  3116  004B1C  6E01               	movwf	LCD_MSdelay@val^0,c
  3117  004B1E  EC01  F023         	call	_LCD_MSdelay	;wreg free
  3118  004B22  0012               	return		;funcret
  3119  004B24                     __end_of_LCD_Clear:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _I2C_Init *****************
  3123 ;; Defined at:
  3124 ;;		line 57 in file "Reloj_ar.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_main
  3148 ;;		_RTC_Calendario
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text17
  3153  004AA4                     __ptext17:
  3154                           	callstack 0
  3155  004AA4                     _I2C_Init:
  3156                           	callstack 29
  3157  004AA4                     
  3158                           ;Reloj_ar.c: 59:     TRISB0=1;
  3159  004AA4  8093               	bsf	3987,0,c	;volatile
  3160                           
  3161                           ;Reloj_ar.c: 60:  TRISB1=1;
  3162  004AA6  8293               	bsf	3987,1,c	;volatile
  3163  004AA8                     
  3164                           ;Reloj_ar.c: 61:  SSPSTAT=80;
  3165  004AA8  0E50               	movlw	80
  3166  004AAA  6EC7               	movwf	199,c	;volatile
  3167                           
  3168                           ;Reloj_ar.c: 62:     SSPCON1=0x28;
  3169  004AAC  0E28               	movlw	40
  3170  004AAE  6EC6               	movwf	198,c	;volatile
  3171                           
  3172                           ;Reloj_ar.c: 64:  SSPCON2=0;
  3173  004AB0  0E00               	movlw	0
  3174  004AB2  6EC5               	movwf	197,c	;volatile
  3175                           
  3176                           ;Reloj_ar.c: 65:     SSPADD=((8000000/(4*100000))-1);
  3177  004AB4  0E13               	movlw	19
  3178  004AB6  6EC8               	movwf	200,c	;volatile
  3179  004AB8                     
  3180                           ;Reloj_ar.c: 66:     SSPIE=1;
  3181  004AB8  869D               	bsf	3997,3,c	;volatile
  3182  004ABA                     
  3183                           ;Reloj_ar.c: 67:     SSPIF=0;
  3184  004ABA  969E               	bcf	3998,3,c	;volatile
  3185  004ABC  0012               	return		;funcret
  3186  004ABE                     __end_of_I2C_Init:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function _Estados *****************
  3190 ;; Defined at:
  3191 ;;		line 25 in file "Estados.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2    6[BANK0 ] int 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3205 ;;      Params:         0       2       0       0       0       0       0       0       0
  3206 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3208 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        6 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 2
  3212 ;; This function calls:
  3213 ;;		_ReadADC
  3214 ;;		_ReadLUZ
  3215 ;;		___flge
  3216 ;;		___xxtofl
  3217 ;; This function is called by:
  3218 ;;		_main
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text18
  3223  002D0A                     __ptext18:
  3224                           	callstack 0
  3225  002D0A                     _Estados:
  3226                           	callstack 28
  3227  002D0A                     
  3228                           ;Estados.c: 26:     tempar = ReadADC();
  3229  002D0A  EC20  F01C         	call	_ReadADC	;wreg free
  3230  002D0E  0100               	movlb	0	; () banked
  3231  002D10  C060  F068         	movff	?_ReadADC,_Estados$1937
  3232  002D14  C061  F069         	movff	?_ReadADC+1,_Estados$1937+1
  3233  002D18  6B6A               	clrf	(_Estados$1937+2)& (0+255),b
  3234  002D1A  6B6B               	clrf	(_Estados$1937+3)& (0+255),b
  3235  002D1C                     
  3236                           ; BSR set to: 0
  3237                           ;Estados.c: 26:     tempar = ReadADC();
  3238  002D1C  C068  F005         	movff	_Estados$1937,___xxtofl@val
  3239  002D20  C069  F006         	movff	_Estados$1937+1,___xxtofl@val+1
  3240  002D24  C06A  F007         	movff	_Estados$1937+2,___xxtofl@val+2
  3241  002D28  C06B  F008         	movff	_Estados$1937+3,___xxtofl@val+3
  3242  002D2C  0E00               	movlw	0
  3243  002D2E  ECCD  F018         	call	___xxtofl
  3244  002D32  C005  F0EE         	movff	?___xxtofl,_tempar
  3245  002D36  C006  F0EF         	movff	?___xxtofl+1,_tempar+1
  3246  002D3A  C007  F0F0         	movff	?___xxtofl+2,_tempar+2
  3247  002D3E  C008  F0F1         	movff	?___xxtofl+3,_tempar+3
  3248  002D42                     
  3249                           ;Estados.c: 27:     luz = ReadLUZ();
  3250  002D42  EC64  F020         	call	_ReadLUZ	;wreg free
  3251  002D46  C001  F005         	movff	?_ReadLUZ,___xxtofl@val
  3252  002D4A  C002  F006         	movff	?_ReadLUZ+1,___xxtofl@val+1
  3253  002D4E  6A07               	clrf	(___xxtofl@val+2)^0,c
  3254  002D50  6A08               	clrf	(___xxtofl@val+3)^0,c
  3255  002D52  0E00               	movlw	0
  3256  002D54  ECCD  F018         	call	___xxtofl
  3257  002D58  C005  F0EA         	movff	?___xxtofl,_luz
  3258  002D5C  C006  F0EB         	movff	?___xxtofl+1,_luz+1
  3259  002D60  C007  F0EC         	movff	?___xxtofl+2,_luz+2
  3260  002D64  C008  F0ED         	movff	?___xxtofl+3,_luz+3
  3261  002D68                     
  3262                           ;Estados.c: 30:     if (tempar > 15 && (luz > 0 && luz < 400)) {
  3263  002D68  0E00               	movlw	0
  3264  002D6A  6E2C               	movwf	___flge@ff1^0,c
  3265  002D6C  0E00               	movlw	0
  3266  002D6E  6E2D               	movwf	(___flge@ff1+1)^0,c
  3267  002D70  0E70               	movlw	112
  3268  002D72  6E2E               	movwf	(___flge@ff1+2)^0,c
  3269  002D74  0E41               	movlw	65
  3270  002D76  6E2F               	movwf	(___flge@ff1+3)^0,c
  3271  002D78  C0EE  F030         	movff	_tempar,___flge@ff2
  3272  002D7C  C0EF  F031         	movff	_tempar+1,___flge@ff2+1
  3273  002D80  C0F0  F032         	movff	_tempar+2,___flge@ff2+2
  3274  002D84  C0F1  F033         	movff	_tempar+3,___flge@ff2+3
  3275  002D88  EC9E  F01B         	call	___flge	;wreg free
  3276  002D8C  B0D8               	btfsc	status,0,c
  3277  002D8E  EFCB  F016         	goto	u6071
  3278  002D92  EFCD  F016         	goto	u6070
  3279  002D96                     u6071:
  3280  002D96  EF08  F017         	goto	l5684
  3281  002D9A                     u6070:
  3282  002D9A  0E00               	movlw	0
  3283  002D9C  6E2C               	movwf	___flge@ff1^0,c
  3284  002D9E  0E00               	movlw	0
  3285  002DA0  6E2D               	movwf	(___flge@ff1+1)^0,c
  3286  002DA2  0E00               	movlw	0
  3287  002DA4  6E2E               	movwf	(___flge@ff1+2)^0,c
  3288  002DA6  0E00               	movlw	0
  3289  002DA8  6E2F               	movwf	(___flge@ff1+3)^0,c
  3290  002DAA  C0EA  F030         	movff	_luz,___flge@ff2
  3291  002DAE  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3292  002DB2  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3293  002DB6  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3294  002DBA  EC9E  F01B         	call	___flge	;wreg free
  3295  002DBE  B0D8               	btfsc	status,0,c
  3296  002DC0  EFE4  F016         	goto	u6081
  3297  002DC4  EFE6  F016         	goto	u6080
  3298  002DC8                     u6081:
  3299  002DC8  EF08  F017         	goto	l5684
  3300  002DCC                     u6080:
  3301  002DCC  C0EA  F02C         	movff	_luz,___flge@ff1
  3302  002DD0  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3303  002DD4  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3304  002DD8  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3305  002DDC  0E00               	movlw	0
  3306  002DDE  6E30               	movwf	___flge@ff2^0,c
  3307  002DE0  0E00               	movlw	0
  3308  002DE2  6E31               	movwf	(___flge@ff2+1)^0,c
  3309  002DE4  0EC8               	movlw	200
  3310  002DE6  6E32               	movwf	(___flge@ff2+2)^0,c
  3311  002DE8  0E43               	movlw	67
  3312  002DEA  6E33               	movwf	(___flge@ff2+3)^0,c
  3313  002DEC  EC9E  F01B         	call	___flge	;wreg free
  3314  002DF0  B0D8               	btfsc	status,0,c
  3315  002DF2  EFFD  F016         	goto	u6091
  3316  002DF6  EFFF  F016         	goto	u6090
  3317  002DFA                     u6091:
  3318  002DFA  EF08  F017         	goto	l5684
  3319  002DFE                     u6090:
  3320  002DFE                     
  3321                           ;Estados.c: 31:         return 1;
  3322  002DFE  0E00               	movlw	0
  3323  002E00  0100               	movlb	0	; () banked
  3324  002E02  6F67               	movwf	(?_Estados+1)& (0+255),b
  3325  002E04  0E01               	movlw	1
  3326  002E06  6F66               	movwf	?_Estados& (0+255),b
  3327  002E08  EFC3  F017         	goto	l517
  3328  002E0C                     l5680:
  3329  002E0C  EFC3  F017         	goto	l517
  3330  002E10                     l5684:
  3331  002E10  C0EE  F02C         	movff	_tempar,___flge@ff1
  3332  002E14  C0EF  F02D         	movff	_tempar+1,___flge@ff1+1
  3333  002E18  C0F0  F02E         	movff	_tempar+2,___flge@ff1+2
  3334  002E1C  C0F1  F02F         	movff	_tempar+3,___flge@ff1+3
  3335  002E20  0E00               	movlw	0
  3336  002E22  6E30               	movwf	___flge@ff2^0,c
  3337  002E24  0E00               	movlw	0
  3338  002E26  6E31               	movwf	(___flge@ff2+1)^0,c
  3339  002E28  0E40               	movlw	64
  3340  002E2A  6E32               	movwf	(___flge@ff2+2)^0,c
  3341  002E2C  0E41               	movlw	65
  3342  002E2E  6E33               	movwf	(___flge@ff2+3)^0,c
  3343  002E30  EC9E  F01B         	call	___flge	;wreg free
  3344  002E34  A0D8               	btfss	status,0,c
  3345  002E36  EF1F  F017         	goto	u6101
  3346  002E3A  EF21  F017         	goto	u6100
  3347  002E3E                     u6101:
  3348  002E3E  EF73  F017         	goto	l5698
  3349  002E42                     u6100:
  3350  002E42  0E00               	movlw	0
  3351  002E44  6E2C               	movwf	___flge@ff1^0,c
  3352  002E46  0E00               	movlw	0
  3353  002E48  6E2D               	movwf	(___flge@ff1+1)^0,c
  3354  002E4A  0E70               	movlw	112
  3355  002E4C  6E2E               	movwf	(___flge@ff1+2)^0,c
  3356  002E4E  0E41               	movlw	65
  3357  002E50  6E2F               	movwf	(___flge@ff1+3)^0,c
  3358  002E52  C0EE  F030         	movff	_tempar,___flge@ff2
  3359  002E56  C0EF  F031         	movff	_tempar+1,___flge@ff2+1
  3360  002E5A  C0F0  F032         	movff	_tempar+2,___flge@ff2+2
  3361  002E5E  C0F1  F033         	movff	_tempar+3,___flge@ff2+3
  3362  002E62  EC9E  F01B         	call	___flge	;wreg free
  3363  002E66  A0D8               	btfss	status,0,c
  3364  002E68  EF38  F017         	goto	u6111
  3365  002E6C  EF3A  F017         	goto	u6110
  3366  002E70                     u6111:
  3367  002E70  EF73  F017         	goto	l5698
  3368  002E74                     u6110:
  3369  002E74  0E00               	movlw	0
  3370  002E76  6E2C               	movwf	___flge@ff1^0,c
  3371  002E78  0E00               	movlw	0
  3372  002E7A  6E2D               	movwf	(___flge@ff1+1)^0,c
  3373  002E7C  0EC8               	movlw	200
  3374  002E7E  6E2E               	movwf	(___flge@ff1+2)^0,c
  3375  002E80  0E43               	movlw	67
  3376  002E82  6E2F               	movwf	(___flge@ff1+3)^0,c
  3377  002E84  C0EA  F030         	movff	_luz,___flge@ff2
  3378  002E88  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3379  002E8C  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3380  002E90  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3381  002E94  EC9E  F01B         	call	___flge	;wreg free
  3382  002E98  B0D8               	btfsc	status,0,c
  3383  002E9A  EF51  F017         	goto	u6121
  3384  002E9E  EF53  F017         	goto	u6120
  3385  002EA2                     u6121:
  3386  002EA2  EF73  F017         	goto	l5698
  3387  002EA6                     u6120:
  3388  002EA6  C0EA  F02C         	movff	_luz,___flge@ff1
  3389  002EAA  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3390  002EAE  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3391  002EB2  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3392  002EB6  0E00               	movlw	0
  3393  002EB8  6E30               	movwf	___flge@ff2^0,c
  3394  002EBA  0E00               	movlw	0
  3395  002EBC  6E31               	movwf	(___flge@ff2+1)^0,c
  3396  002EBE  0E2F               	movlw	47
  3397  002EC0  6E32               	movwf	(___flge@ff2+2)^0,c
  3398  002EC2  0E44               	movlw	68
  3399  002EC4  6E33               	movwf	(___flge@ff2+3)^0,c
  3400  002EC6  EC9E  F01B         	call	___flge	;wreg free
  3401  002ECA  B0D8               	btfsc	status,0,c
  3402  002ECC  EF6A  F017         	goto	u6131
  3403  002ED0  EF6C  F017         	goto	u6130
  3404  002ED4                     u6131:
  3405  002ED4  EF73  F017         	goto	l5698
  3406  002ED8                     u6130:
  3407  002ED8                     
  3408                           ;Estados.c: 33:         return 2;
  3409  002ED8  0E00               	movlw	0
  3410  002EDA  0100               	movlb	0	; () banked
  3411  002EDC  6F67               	movwf	(?_Estados+1)& (0+255),b
  3412  002EDE  0E02               	movlw	2
  3413  002EE0  6F66               	movwf	?_Estados& (0+255),b
  3414  002EE2  EFC3  F017         	goto	l517
  3415  002EE6                     l5698:
  3416  002EE6  C0EE  F02C         	movff	_tempar,___flge@ff1
  3417  002EEA  C0EF  F02D         	movff	_tempar+1,___flge@ff1+1
  3418  002EEE  C0F0  F02E         	movff	_tempar+2,___flge@ff1+2
  3419  002EF2  C0F1  F02F         	movff	_tempar+3,___flge@ff1+3
  3420  002EF6  0E00               	movlw	0
  3421  002EF8  6E30               	movwf	___flge@ff2^0,c
  3422  002EFA  0E00               	movlw	0
  3423  002EFC  6E31               	movwf	(___flge@ff2+1)^0,c
  3424  002EFE  0E40               	movlw	64
  3425  002F00  6E32               	movwf	(___flge@ff2+2)^0,c
  3426  002F02  0E41               	movlw	65
  3427  002F04  6E33               	movwf	(___flge@ff2+3)^0,c
  3428  002F06  EC9E  F01B         	call	___flge	;wreg free
  3429  002F0A  B0D8               	btfsc	status,0,c
  3430  002F0C  EF8A  F017         	goto	u6141
  3431  002F10  EF8C  F017         	goto	u6140
  3432  002F14                     u6141:
  3433  002F14  EF06  F017         	goto	l5680
  3434  002F18                     u6140:
  3435  002F18  0E00               	movlw	0
  3436  002F1A  6E2C               	movwf	___flge@ff1^0,c
  3437  002F1C  0E00               	movlw	0
  3438  002F1E  6E2D               	movwf	(___flge@ff1+1)^0,c
  3439  002F20  0E2F               	movlw	47
  3440  002F22  6E2E               	movwf	(___flge@ff1+2)^0,c
  3441  002F24  0E44               	movlw	68
  3442  002F26  6E2F               	movwf	(___flge@ff1+3)^0,c
  3443  002F28  C0EA  F030         	movff	_luz,___flge@ff2
  3444  002F2C  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3445  002F30  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3446  002F34  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3447  002F38  EC9E  F01B         	call	___flge	;wreg free
  3448  002F3C  B0D8               	btfsc	status,0,c
  3449  002F3E  EFA3  F017         	goto	u6151
  3450  002F42  EFA5  F017         	goto	u6150
  3451  002F46                     u6151:
  3452  002F46  EF06  F017         	goto	l5680
  3453  002F4A                     u6150:
  3454  002F4A  C0EA  F02C         	movff	_luz,___flge@ff1
  3455  002F4E  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3456  002F52  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3457  002F56  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3458  002F5A  0E00               	movlw	0
  3459  002F5C  6E30               	movwf	___flge@ff2^0,c
  3460  002F5E  0E80               	movlw	128
  3461  002F60  6E31               	movwf	(___flge@ff2+1)^0,c
  3462  002F62  0EBB               	movlw	187
  3463  002F64  6E32               	movwf	(___flge@ff2+2)^0,c
  3464  002F66  0E44               	movlw	68
  3465  002F68  6E33               	movwf	(___flge@ff2+3)^0,c
  3466  002F6A  EC9E  F01B         	call	___flge	;wreg free
  3467  002F6E  B0D8               	btfsc	status,0,c
  3468  002F70  EFBC  F017         	goto	u6161
  3469  002F74  EFBE  F017         	goto	u6160
  3470  002F78                     u6161:
  3471  002F78  EF06  F017         	goto	l5680
  3472  002F7C                     u6160:
  3473  002F7C                     
  3474                           ;Estados.c: 36:         return 3;
  3475  002F7C  0E00               	movlw	0
  3476  002F7E  0100               	movlb	0	; () banked
  3477  002F80  6F67               	movwf	(?_Estados+1)& (0+255),b
  3478  002F82  0E03               	movlw	3
  3479  002F84  6F66               	movwf	?_Estados& (0+255),b
  3480  002F86                     l517:
  3481  002F86  0012               	return		;funcret
  3482  002F88                     __end_of_Estados:
  3483                           	callstack 0
  3484                           
  3485 ;; *************** function _ReadLUZ *****************
  3486 ;; Defined at:
  3487 ;;		line 21 in file "Sensor_luz.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  2    0[COMRAM] unsigned short 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3501 ;;      Params:         2       0       0       0       0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3503 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3504 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3505 ;;Total ram usage:        4 bytes
  3506 ;; Hardware stack levels used: 1
  3507 ;; This function calls:
  3508 ;;		Nothing
  3509 ;; This function is called by:
  3510 ;;		_Estados
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text19
  3515  0040C8                     __ptext19:
  3516                           	callstack 0
  3517  0040C8                     _ReadLUZ:
  3518                           	callstack 29
  3519  0040C8                     
  3520                           ;Sensor_luz.c: 23:     TRISD = 0x00;
  3521  0040C8  0E00               	movlw	0
  3522  0040CA  6E95               	movwf	149,c	;volatile
  3523  0040CC                     
  3524                           ;Sensor_luz.c: 24:     TRISA = 0xFF;
  3525  0040CC  6892               	setf	146,c	;volatile
  3526                           
  3527                           ;Sensor_luz.c: 26:     OSCCONbits.IRCF = 0b111;
  3528  0040CE  0E70               	movlw	112
  3529  0040D0  12D3               	iorwf	211,f,c	;volatile
  3530                           
  3531                           ;Sensor_luz.c: 27:     OSCCONbits.SCS = 0b10;
  3532  0040D2  50D3               	movf	211,w,c	;volatile
  3533  0040D4  0BFC               	andlw	-4
  3534  0040D6  0902               	iorlw	2
  3535  0040D8  6ED3               	movwf	211,c	;volatile
  3536                           
  3537                           ;Sensor_luz.c: 30:     ADCON1bits.PCFG = 0b1101;
  3538  0040DA  50C1               	movf	193,w,c	;volatile
  3539  0040DC  0BF0               	andlw	-16
  3540  0040DE  090D               	iorlw	13
  3541  0040E0  6EC1               	movwf	193,c	;volatile
  3542                           
  3543                           ;Sensor_luz.c: 31:     ADCON1bits.VCFG = 0b00;
  3544  0040E2  0ECF               	movlw	-49
  3545  0040E4  16C1               	andwf	193,f,c	;volatile
  3546                           
  3547                           ;Sensor_luz.c: 32:     ADCON0bits.CHS = 0b0001;
  3548  0040E6  50C2               	movf	194,w,c	;volatile
  3549  0040E8  0BC3               	andlw	-61
  3550  0040EA  0904               	iorlw	4
  3551  0040EC  6EC2               	movwf	194,c	;volatile
  3552                           
  3553                           ;Sensor_luz.c: 33:     ADCON2bits.ACQT = 0b010;
  3554  0040EE  50C0               	movf	192,w,c	;volatile
  3555  0040F0  0BC7               	andlw	-57
  3556  0040F2  0910               	iorlw	16
  3557  0040F4  6EC0               	movwf	192,c	;volatile
  3558                           
  3559                           ;Sensor_luz.c: 34:     ADCON2bits.ADCS = 0b001;
  3560  0040F6  50C0               	movf	192,w,c	;volatile
  3561  0040F8  0BF8               	andlw	-8
  3562  0040FA  0901               	iorlw	1
  3563  0040FC  6EC0               	movwf	192,c	;volatile
  3564  0040FE                     
  3565                           ;Sensor_luz.c: 35:     ADCON2bits.ADFM = 1;
  3566  0040FE  8EC0               	bsf	192,7,c	;volatile
  3567  004100                     
  3568                           ;Sensor_luz.c: 36:     ADCON0bits.ADON = 1;
  3569  004100  80C2               	bsf	194,0,c	;volatile
  3570  004102                     
  3571                           ;Sensor_luz.c: 39:         ADCON0bits.GO_DONE = 1;
  3572  004102  82C2               	bsf	194,1,c	;volatile
  3573  004104                     l217:
  3574  004104  B2C2               	btfsc	194,1,c	;volatile
  3575  004106  EF87  F020         	goto	u6021
  3576  00410A  EF89  F020         	goto	u6020
  3577  00410E                     u6021:
  3578  00410E  EF82  F020         	goto	l217
  3579  004112                     u6020:
  3580  004112                     
  3581                           ;Sensor_luz.c: 41:         result = ADRESH;
  3582  004112  CFC4 F0FA          	movff	4036,_result	;volatile
  3583  004116  0100               	movlb	0	; () banked
  3584  004118  6BFB               	clrf	(_result+1)& (0+255),b
  3585  00411A                     
  3586                           ; BSR set to: 0
  3587                           ;Sensor_luz.c: 42:         result = (result << 8) + ADRESL;
  3588  00411A  51FA               	movf	_result& (0+255),w,b
  3589  00411C  6E03               	movwf	??_ReadLUZ^0,c
  3590  00411E  50C3               	movf	195,w,c	;volatile
  3591  004120  6FFA               	movwf	_result& (0+255),b
  3592  004122  C003  F0FB         	movff	??_ReadLUZ,_result+1
  3593  004126                     
  3594                           ; BSR set to: 0
  3595                           ;Sensor_luz.c: 44:         return result;
  3596  004126  C0FA  F001         	movff	_result,?_ReadLUZ
  3597  00412A  C0FB  F002         	movff	_result+1,?_ReadLUZ+1
  3598  00412E                     
  3599                           ; BSR set to: 0
  3600  00412E  0012               	return		;funcret
  3601  004130                     __end_of_ReadLUZ:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _ReadADC *****************
  3605 ;; Defined at:
  3606 ;;		line 22 in file "Temperatura.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  result          2    4[BANK0 ] unsigned short 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  2    0[BANK0 ] unsigned short 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3620 ;;      Params:         0       2       0       0       0       0       0       0       0
  3621 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3622 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3623 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3624 ;;Total ram usage:        6 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 1
  3627 ;; This function calls:
  3628 ;;		___fladd
  3629 ;;		___fldiv
  3630 ;;		___flmul
  3631 ;;		___fltol
  3632 ;;		___xxtofl
  3633 ;; This function is called by:
  3634 ;;		_Estados
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text20
  3639  003840                     __ptext20:
  3640                           	callstack 0
  3641  003840                     _ReadADC:
  3642                           	callstack 28
  3643  003840                     
  3644                           ;Temperatura.c: 24:     uint16_t result;;Temperatura.c: 26:     TRISD = 0x00;
  3645  003840  0E00               	movlw	0
  3646  003842  6E95               	movwf	149,c	;volatile
  3647  003844                     
  3648                           ;Temperatura.c: 27:     TRISA = 0xFF;
  3649  003844  6892               	setf	146,c	;volatile
  3650                           
  3651                           ;Temperatura.c: 29:     OSCCONbits.IRCF = 0b111;
  3652  003846  0E70               	movlw	112
  3653  003848  12D3               	iorwf	211,f,c	;volatile
  3654                           
  3655                           ;Temperatura.c: 30:     OSCCONbits.SCS = 0b10;
  3656  00384A  50D3               	movf	211,w,c	;volatile
  3657  00384C  0BFC               	andlw	-4
  3658  00384E  0902               	iorlw	2
  3659  003850  6ED3               	movwf	211,c	;volatile
  3660                           
  3661                           ;Temperatura.c: 33:     ADCON1bits.PCFG = 0b1110;
  3662  003852  50C1               	movf	193,w,c	;volatile
  3663  003854  0BF0               	andlw	-16
  3664  003856  090E               	iorlw	14
  3665  003858  6EC1               	movwf	193,c	;volatile
  3666                           
  3667                           ;Temperatura.c: 34:     ADCON1bits.VCFG = 0b00;
  3668  00385A  0ECF               	movlw	-49
  3669  00385C  16C1               	andwf	193,f,c	;volatile
  3670                           
  3671                           ;Temperatura.c: 35:     ADCON0bits.CHS = 0b0000;
  3672  00385E  0EC3               	movlw	-61
  3673  003860  16C2               	andwf	194,f,c	;volatile
  3674                           
  3675                           ;Temperatura.c: 36:     ADCON2bits.ACQT = 0b010;
  3676  003862  50C0               	movf	192,w,c	;volatile
  3677  003864  0BC7               	andlw	-57
  3678  003866  0910               	iorlw	16
  3679  003868  6EC0               	movwf	192,c	;volatile
  3680                           
  3681                           ;Temperatura.c: 37:     ADCON2bits.ADCS = 0b001;
  3682  00386A  50C0               	movf	192,w,c	;volatile
  3683  00386C  0BF8               	andlw	-8
  3684  00386E  0901               	iorlw	1
  3685  003870  6EC0               	movwf	192,c	;volatile
  3686  003872                     
  3687                           ;Temperatura.c: 38:     ADCON2bits.ADFM = 1;
  3688  003872  8EC0               	bsf	192,7,c	;volatile
  3689  003874                     
  3690                           ;Temperatura.c: 39:     ADCON0bits.ADON = 1;
  3691  003874  80C2               	bsf	194,0,c	;volatile
  3692  003876                     
  3693                           ;Temperatura.c: 42:         ADCON0bits.GO_DONE = 1;
  3694  003876  82C2               	bsf	194,1,c	;volatile
  3695  003878                     l172:
  3696  003878  B2C2               	btfsc	194,1,c	;volatile
  3697  00387A  EF41  F01C         	goto	u6011
  3698  00387E  EF43  F01C         	goto	u6010
  3699  003882                     u6011:
  3700  003882  EF3C  F01C         	goto	l172
  3701  003886                     u6010:
  3702  003886                     
  3703                           ;Temperatura.c: 44:         result = ADRESH;
  3704  003886  CFC4 F064          	movff	4036,ReadADC@result	;volatile
  3705  00388A  0100               	movlb	0	; () banked
  3706  00388C  6B65               	clrf	(ReadADC@result+1)& (0+255),b
  3707  00388E                     
  3708                           ; BSR set to: 0
  3709                           ;Temperatura.c: 45:         result = (result << 8) + ADRESL;
  3710  00388E  5164               	movf	ReadADC@result& (0+255),w,b
  3711  003890  6F62               	movwf	??_ReadADC& (0+255),b
  3712  003892  50C3               	movf	195,w,c	;volatile
  3713  003894  6F64               	movwf	ReadADC@result& (0+255),b
  3714  003896  C062  F065         	movff	??_ReadADC,ReadADC@result+1
  3715  00389A                     
  3716                           ; BSR set to: 0
  3717                           ;Temperatura.c: 46:         result = ((result*500.0)/1023.0)-49.5;
  3718  00389A  0E00               	movlw	0
  3719  00389C  6E49               	movwf	___fladd@a^0,c
  3720  00389E  0E00               	movlw	0
  3721  0038A0  6E4A               	movwf	(___fladd@a+1)^0,c
  3722  0038A2  0E46               	movlw	70
  3723  0038A4  6E4B               	movwf	(___fladd@a+2)^0,c
  3724  0038A6  0EC2               	movlw	194
  3725  0038A8  6E4C               	movwf	(___fladd@a+3)^0,c
  3726  0038AA  0E00               	movlw	0
  3727  0038AC  6E30               	movwf	___fldiv@a^0,c
  3728  0038AE  0EC0               	movlw	192
  3729  0038B0  6E31               	movwf	(___fldiv@a+1)^0,c
  3730  0038B2  0E7F               	movlw	127
  3731  0038B4  6E32               	movwf	(___fldiv@a+2)^0,c
  3732  0038B6  0E44               	movlw	68
  3733  0038B8  6E33               	movwf	(___fldiv@a+3)^0,c
  3734  0038BA  0E00               	movlw	0
  3735  0038BC  6E17               	movwf	___flmul@a^0,c
  3736  0038BE  0E00               	movlw	0
  3737  0038C0  6E18               	movwf	(___flmul@a+1)^0,c
  3738  0038C2  0EFA               	movlw	250
  3739  0038C4  6E19               	movwf	(___flmul@a+2)^0,c
  3740  0038C6  0E43               	movlw	67
  3741  0038C8  6E1A               	movwf	(___flmul@a+3)^0,c
  3742  0038CA  C064  F005         	movff	ReadADC@result,___xxtofl@val
  3743  0038CE  C065  F006         	movff	ReadADC@result+1,___xxtofl@val+1
  3744  0038D2  6A07               	clrf	(___xxtofl@val+2)^0,c
  3745  0038D4  6A08               	clrf	(___xxtofl@val+3)^0,c
  3746  0038D6  0E00               	movlw	0
  3747  0038D8  ECCD  F018         	call	___xxtofl
  3748  0038DC  C005  F013         	movff	?___xxtofl,___flmul@b
  3749  0038E0  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  3750  0038E4  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  3751  0038E8  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  3752  0038EC  ECBE  F00F         	call	___flmul	;wreg free
  3753  0038F0  C013  F02C         	movff	?___flmul,___fldiv@b
  3754  0038F4  C014  F02D         	movff	?___flmul+1,___fldiv@b+1
  3755  0038F8  C015  F02E         	movff	?___flmul+2,___fldiv@b+2
  3756  0038FC  C016  F02F         	movff	?___flmul+3,___fldiv@b+3
  3757  003900  ECD3  F011         	call	___fldiv	;wreg free
  3758  003904  C02C  F045         	movff	?___fldiv,___fladd@b
  3759  003908  C02D  F046         	movff	?___fldiv+1,___fladd@b+1
  3760  00390C  C02E  F047         	movff	?___fldiv+2,___fladd@b+2
  3761  003910  C02F  F048         	movff	?___fldiv+3,___fladd@b+3
  3762  003914  EC5E  F00D         	call	___fladd	;wreg free
  3763  003918  C045  F055         	movff	?___fladd,___fltol@f1
  3764  00391C  C046  F056         	movff	?___fladd+1,___fltol@f1+1
  3765  003920  C047  F057         	movff	?___fladd+2,___fltol@f1+2
  3766  003924  C048  F058         	movff	?___fladd+3,___fltol@f1+3
  3767  003928  EC1B  F01B         	call	___fltol	;wreg free
  3768  00392C  C055  F064         	movff	?___fltol,ReadADC@result
  3769  003930  C056  F065         	movff	?___fltol+1,ReadADC@result+1
  3770  003934                     
  3771                           ;Temperatura.c: 48:         return result;
  3772  003934  C064  F060         	movff	ReadADC@result,?_ReadADC
  3773  003938  C065  F061         	movff	ReadADC@result+1,?_ReadADC+1
  3774  00393C  0012               	return		;funcret
  3775  00393E                     __end_of_ReadADC:
  3776                           	callstack 0
  3777                           
  3778 ;; *************** function ___xxtofl *****************
  3779 ;; Defined at:
  3780 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  sign            1    wreg     unsigned char 
  3783 ;;  val             4    4[COMRAM] long 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  sign            1   12[COMRAM] unsigned char 
  3786 ;;  arg             4   14[COMRAM] unsigned long 
  3787 ;;  exp             1   13[COMRAM] unsigned char 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  4    4[COMRAM] unsigned char 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3797 ;;      Params:         4       0       0       0       0       0       0       0       0
  3798 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3799 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3800 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3801 ;;Total ram usage:       14 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_ReadADC
  3807 ;;		_Estados
  3808 ;;		_USART_Init
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text21
  3813  00319A                     __ptext21:
  3814                           	callstack 0
  3815  00319A                     ___xxtofl:
  3816                           	callstack 29
  3817                           
  3818                           ;incstack = 0
  3819                           ;___xxtofl@sign stored from wreg
  3820  00319A  6E0D               	movwf	___xxtofl@sign^0,c
  3821  00319C  500D               	movf	___xxtofl@sign^0,w,c
  3822  00319E  B4D8               	btfsc	status,2,c
  3823  0031A0  EFD4  F018         	goto	u5871
  3824  0031A4  EFD6  F018         	goto	u5870
  3825  0031A8                     u5871:
  3826  0031A8  EFF8  F018         	goto	l1251
  3827  0031AC                     u5870:
  3828  0031AC  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  3829  0031AE  EFDD  F018         	goto	u5880
  3830  0031B2  EFDB  F018         	goto	u5881
  3831  0031B6                     u5881:
  3832  0031B6  EFF8  F018         	goto	l1251
  3833  0031BA                     u5880:
  3834  0031BA  C005  F009         	movff	___xxtofl@val,??___xxtofl
  3835  0031BE  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  3836  0031C2  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  3837  0031C6  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  3838  0031CA  1E09               	comf	??___xxtofl^0,f,c
  3839  0031CC  1E0A               	comf	(??___xxtofl+1)^0,f,c
  3840  0031CE  1E0B               	comf	(??___xxtofl+2)^0,f,c
  3841  0031D0  1E0C               	comf	(??___xxtofl+3)^0,f,c
  3842  0031D2  2A09               	incf	??___xxtofl^0,f,c
  3843  0031D4  0E00               	movlw	0
  3844  0031D6  220A               	addwfc	(??___xxtofl+1)^0,f,c
  3845  0031D8  220B               	addwfc	(??___xxtofl+2)^0,f,c
  3846  0031DA  220C               	addwfc	(??___xxtofl+3)^0,f,c
  3847  0031DC  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  3848  0031E0  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  3849  0031E4  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  3850  0031E8  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  3851  0031EC  EF00  F019         	goto	l5340
  3852  0031F0                     l1251:
  3853  0031F0  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  3854  0031F4  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3855  0031F8  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3856  0031FC  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3857  003200                     l5340:
  3858  003200  5005               	movf	___xxtofl@val^0,w,c
  3859  003202  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  3860  003204  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  3861  003206  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  3862  003208  A4D8               	btfss	status,2,c
  3863  00320A  EF09  F019         	goto	u5891
  3864  00320E  EF0B  F019         	goto	u5890
  3865  003212                     u5891:
  3866  003212  EF15  F019         	goto	l5346
  3867  003216                     u5890:
  3868  003216  0E00               	movlw	0
  3869  003218  6E05               	movwf	?___xxtofl^0,c
  3870  00321A  0E00               	movlw	0
  3871  00321C  6E06               	movwf	(?___xxtofl+1)^0,c
  3872  00321E  0E00               	movlw	0
  3873  003220  6E07               	movwf	(?___xxtofl+2)^0,c
  3874  003222  0E00               	movlw	0
  3875  003224  6E08               	movwf	(?___xxtofl+3)^0,c
  3876  003226  EFA6  F019         	goto	l1254
  3877  00322A                     l5346:
  3878  00322A  0E96               	movlw	150
  3879  00322C  6E0E               	movwf	___xxtofl@exp^0,c
  3880  00322E  EF1F  F019         	goto	l5350
  3881  003232                     l5348:
  3882  003232  2A0E               	incf	___xxtofl@exp^0,f,c
  3883  003234  90D8               	bcf	status,0,c
  3884  003236  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  3885  003238  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  3886  00323A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  3887  00323C  320F               	rrcf	___xxtofl@arg^0,f,c
  3888  00323E                     l5350:
  3889  00323E  0E00               	movlw	0
  3890  003240  140F               	andwf	___xxtofl@arg^0,w,c
  3891  003242  6E09               	movwf	??___xxtofl^0,c
  3892  003244  0E00               	movlw	0
  3893  003246  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  3894  003248  6E0A               	movwf	(??___xxtofl+1)^0,c
  3895  00324A  0E00               	movlw	0
  3896  00324C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  3897  00324E  6E0B               	movwf	(??___xxtofl+2)^0,c
  3898  003250  0EFE               	movlw	254
  3899  003252  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  3900  003254  6E0C               	movwf	(??___xxtofl+3)^0,c
  3901  003256  5009               	movf	??___xxtofl^0,w,c
  3902  003258  100A               	iorwf	(??___xxtofl+1)^0,w,c
  3903  00325A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  3904  00325C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  3905  00325E  A4D8               	btfss	status,2,c
  3906  003260  EF34  F019         	goto	u5901
  3907  003264  EF36  F019         	goto	u5900
  3908  003268                     u5901:
  3909  003268  EF19  F019         	goto	l5348
  3910  00326C                     u5900:
  3911  00326C  EF44  F019         	goto	l1258
  3912  003270                     l5352:
  3913  003270  2A0E               	incf	___xxtofl@exp^0,f,c
  3914  003272  0E01               	movlw	1
  3915  003274  260F               	addwf	___xxtofl@arg^0,f,c
  3916  003276  0E00               	movlw	0
  3917  003278  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  3918  00327A  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  3919  00327C  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  3920  00327E  90D8               	bcf	status,0,c
  3921  003280  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  3922  003282  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  3923  003284  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  3924  003286  320F               	rrcf	___xxtofl@arg^0,f,c
  3925  003288                     l1258:
  3926  003288  0E00               	movlw	0
  3927  00328A  140F               	andwf	___xxtofl@arg^0,w,c
  3928  00328C  6E09               	movwf	??___xxtofl^0,c
  3929  00328E  0E00               	movlw	0
  3930  003290  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  3931  003292  6E0A               	movwf	(??___xxtofl+1)^0,c
  3932  003294  0E00               	movlw	0
  3933  003296  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  3934  003298  6E0B               	movwf	(??___xxtofl+2)^0,c
  3935  00329A  0EFF               	movlw	255
  3936  00329C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  3937  00329E  6E0C               	movwf	(??___xxtofl+3)^0,c
  3938  0032A0  5009               	movf	??___xxtofl^0,w,c
  3939  0032A2  100A               	iorwf	(??___xxtofl+1)^0,w,c
  3940  0032A4  100B               	iorwf	(??___xxtofl+2)^0,w,c
  3941  0032A6  100C               	iorwf	(??___xxtofl+3)^0,w,c
  3942  0032A8  A4D8               	btfss	status,2,c
  3943  0032AA  EF59  F019         	goto	u5911
  3944  0032AE  EF5B  F019         	goto	u5910
  3945  0032B2                     u5911:
  3946  0032B2  EF38  F019         	goto	l5352
  3947  0032B6                     u5910:
  3948  0032B6  EF63  F019         	goto	l5360
  3949  0032BA                     l5358:
  3950  0032BA  060E               	decf	___xxtofl@exp^0,f,c
  3951  0032BC  90D8               	bcf	status,0,c
  3952  0032BE  360F               	rlcf	___xxtofl@arg^0,f,c
  3953  0032C0  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  3954  0032C2  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  3955  0032C4  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  3956  0032C6                     l5360:
  3957  0032C6  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  3958  0032C8  EF68  F019         	goto	u5921
  3959  0032CC  EF6A  F019         	goto	u5920
  3960  0032D0                     u5921:
  3961  0032D0  EF72  F019         	goto	l1265
  3962  0032D4                     u5920:
  3963  0032D4  0E02               	movlw	2
  3964  0032D6  600E               	cpfslt	___xxtofl@exp^0,c
  3965  0032D8  EF70  F019         	goto	u5931
  3966  0032DC  EF72  F019         	goto	u5930
  3967  0032E0                     u5931:
  3968  0032E0  EF5D  F019         	goto	l5358
  3969  0032E4                     u5930:
  3970  0032E4                     l1265:
  3971  0032E4  B00E               	btfsc	___xxtofl@exp^0,0,c
  3972  0032E6  EF77  F019         	goto	u5941
  3973  0032EA  EF79  F019         	goto	u5940
  3974  0032EE                     u5941:
  3975  0032EE  EF7A  F019         	goto	l5366
  3976  0032F2                     u5940:
  3977  0032F2  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  3978  0032F4                     l5366:
  3979  0032F4  90D8               	bcf	status,0,c
  3980  0032F6  320E               	rrcf	___xxtofl@exp^0,f,c
  3981  0032F8  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  3982  0032FC  6A0A               	clrf	(??___xxtofl+1)^0,c
  3983  0032FE  6A0B               	clrf	(??___xxtofl+2)^0,c
  3984  003300  6A0C               	clrf	(??___xxtofl+3)^0,c
  3985  003302  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  3986  003306  6A0B               	clrf	(??___xxtofl+2)^0,c
  3987  003308  6A0A               	clrf	(??___xxtofl+1)^0,c
  3988  00330A  6A09               	clrf	??___xxtofl^0,c
  3989  00330C  5009               	movf	??___xxtofl^0,w,c
  3990  00330E  120F               	iorwf	___xxtofl@arg^0,f,c
  3991  003310  500A               	movf	(??___xxtofl+1)^0,w,c
  3992  003312  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  3993  003314  500B               	movf	(??___xxtofl+2)^0,w,c
  3994  003316  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  3995  003318  500C               	movf	(??___xxtofl+3)^0,w,c
  3996  00331A  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  3997  00331C  500D               	movf	___xxtofl@sign^0,w,c
  3998  00331E  B4D8               	btfsc	status,2,c
  3999  003320  EF94  F019         	goto	u5951
  4000  003324  EF96  F019         	goto	u5950
  4001  003328                     u5951:
  4002  003328  EF9E  F019         	goto	l5376
  4003  00332C                     u5950:
  4004  00332C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  4005  00332E  EF9D  F019         	goto	u5960
  4006  003332  EF9B  F019         	goto	u5961
  4007  003336                     u5961:
  4008  003336  EF9E  F019         	goto	l5376
  4009  00333A                     u5960:
  4010  00333A  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  4011  00333C                     l5376:
  4012  00333C  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  4013  003340  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  4014  003344  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  4015  003348  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  4016  00334C                     l1254:
  4017  00334C  0012               	return		;funcret
  4018  00334E                     __end_of___xxtofl:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _Cloudy_State *****************
  4022 ;; Defined at:
  4023 ;;		line 82 in file "Estados.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4040 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4041 ;;Total ram usage:        0 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; Hardware stack levels required when called: 8
  4044 ;; This function calls:
  4045 ;;		_LCD_Char
  4046 ;;		_LCD_Command
  4047 ;;		_LCD_Custom_Char
  4048 ;;		_LCD_String_xy
  4049 ;;		_sprintf
  4050 ;; This function is called by:
  4051 ;;		_main
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text22
  4056  00441C                     __ptext22:
  4057                           	callstack 0
  4058  00441C                     _Cloudy_State:
  4059                           	callstack 22
  4060  00441C                     
  4061                           ;Estados.c: 83:     LATE0 = 1;
  4062  00441C  808D               	bsf	3981,0,c	;volatile
  4063                           
  4064                           ;Estados.c: 84:     LATE1 = 1;
  4065  00441E  828D               	bsf	3981,1,c	;volatile
  4066                           
  4067                           ;Estados.c: 85:     LATE2 = 0;
  4068  004420  948D               	bcf	3981,2,c	;volatile
  4069  004422                     
  4070                           ;Estados.c: 86:     sprintf(Stemp, "%0.0fC", tempar);
  4071  004422  0E5E               	movlw	low _Stemp
  4072  004424  0100               	movlb	0	; () banked
  4073  004426  6FCC               	movwf	sprintf@s& (0+255),b
  4074  004428  0E01               	movlw	high _Stemp
  4075  00442A  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  4076  00442C  0E0D               	movlw	low STR_19
  4077  00442E  6FCE               	movwf	sprintf@fmt& (0+255),b
  4078  004430  0E08               	movlw	high STR_19
  4079  004432  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  4080  004434  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  4081  004438  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  4082  00443C  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  4083  004440  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  4084  004444  EC3B  F022         	call	_sprintf	;wreg free
  4085  004448                     
  4086                           ;Estados.c: 87:     LCD_String_xy(1, 0, Stemp);
  4087  004448  0E00               	movlw	0
  4088  00444A  6E0B               	movwf	LCD_String_xy@pos^0,c
  4089  00444C  0E5E               	movlw	low _Stemp
  4090  00444E  6E0C               	movwf	LCD_String_xy@msg^0,c
  4091  004450  0E01               	movlw	high _Stemp
  4092  004452  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  4093  004454  0E01               	movlw	1
  4094  004456  ECB2  F023         	call	_LCD_String_xy
  4095  00445A                     
  4096                           ;Estados.c: 88:     LCD_Custom_Char(0, character3);
  4097  00445A  0ED5               	movlw	low _character3
  4098  00445C  6E09               	movwf	LCD_Custom_Char@msg^0,c
  4099  00445E  0E01               	movlw	high _character3
  4100  004460  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  4101  004462  0E00               	movlw	0
  4102  004464  EC26  F023         	call	_LCD_Custom_Char
  4103                           
  4104                           ;Estados.c: 89:     LCD_Command(0xc0);
  4105  004468  0EC0               	movlw	192
  4106  00446A  ECB5  F022         	call	_LCD_Command
  4107                           
  4108                           ;Estados.c: 90:     LCD_Char(0);
  4109  00446E  0E00               	movlw	0
  4110  004470  ECDB  F022         	call	_LCD_Char
  4111  004474  0012               	return		;funcret
  4112  004476                     __end_of_Cloudy_State:
  4113                           	callstack 0
  4114                           
  4115 ;; *************** function _sprintf *****************
  4116 ;; Defined at:
  4117 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  s               2  108[BANK0 ] PTR unsigned char 
  4120 ;;		 -> Stemp(20), RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), 
  4121 ;;		 -> RTC_Calendario@hours(10), RTC_Calendario@mins(10), RTC_Calendario@secs(10), 
  4122 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  4123 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4124 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4125 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  f               6  118[BANK0 ] struct _IO_FILE
  4128 ;;  ap              2  116[BANK0 ] PTR void [1]
  4129 ;;		 -> ?_sprintf(2), 
  4130 ;;  ret             2    0        int 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  2  108[BANK0 ] int 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4140 ;;      Params:         0       8       0       0       0       0       0       0       0
  4141 ;;      Locals:         0       8       0       0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4143 ;;      Totals:         0      16       0       0       0       0       0       0       0
  4144 ;;Total ram usage:       16 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 7
  4147 ;; This function calls:
  4148 ;;		_vfprintf
  4149 ;; This function is called by:
  4150 ;;		_RTC_Calendario
  4151 ;;		_Sunny_State
  4152 ;;		_Cloudy_State
  4153 ;;		_Rainy_State
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text23
  4158  004476                     __ptext23:
  4159                           	callstack 0
  4160  004476                     _sprintf:
  4161                           	callstack 22
  4162  004476  0ED0               	movlw	low (?_sprintf+4)
  4163  004478  0100               	movlb	0	; () banked
  4164  00447A  6FD4               	movwf	sprintf@ap& (0+255),b
  4165  00447C  0E00               	movlw	high (?_sprintf+4)
  4166  00447E  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  4167  004480  C0CC  F0D6         	movff	sprintf@s,sprintf@f
  4168  004484  C0CD  F0D7         	movff	sprintf@s+1,sprintf@f+1
  4169  004488                     
  4170                           ; BSR set to: 0
  4171  004488  0E00               	movlw	0
  4172  00448A  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  4173  00448C  0E00               	movlw	0
  4174  00448E  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  4175  004490                     
  4176                           ; BSR set to: 0
  4177  004490  0E00               	movlw	0
  4178  004492  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  4179  004494  0E00               	movlw	0
  4180  004496  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  4181  004498                     
  4182                           ; BSR set to: 0
  4183  004498  0ED6               	movlw	low sprintf@f
  4184  00449A  6FC4               	movwf	vfprintf@fp& (0+255),b
  4185  00449C  0E00               	movlw	high sprintf@f
  4186  00449E  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  4187  0044A0  C0CE  F0C6         	movff	sprintf@fmt,vfprintf@fmt
  4188  0044A4  C0CF  F0C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4189  0044A8  0ED4               	movlw	low sprintf@ap
  4190  0044AA  6FC8               	movwf	vfprintf@ap& (0+255),b
  4191  0044AC  0E00               	movlw	high sprintf@ap
  4192  0044AE  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  4193  0044B0  EC98  F020         	call	_vfprintf	;wreg free
  4194  0044B4  0100               	movlb	0	; () banked
  4195  0044B6  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  4196  0044B8  25CC               	addwf	sprintf@s& (0+255),w,b
  4197  0044BA  6ED9               	movwf	fsr2l,c
  4198  0044BC  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  4199  0044BE  21CD               	addwfc	(sprintf@s+1)& (0+255),w,b
  4200  0044C0  6EDA               	movwf	fsr2h,c
  4201  0044C2  0E00               	movlw	0
  4202  0044C4  6EDF               	movwf	indf2,c
  4203  0044C6                     
  4204                           ; BSR set to: 0
  4205  0044C6  0012               	return		;funcret
  4206  0044C8                     __end_of_sprintf:
  4207                           	callstack 0
  4208                           
  4209 ;; *************** function _vfprintf *****************
  4210 ;; Defined at:
  4211 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  fp              2  100[BANK0 ] PTR struct _IO_FILE
  4214 ;;		 -> sprintf@f(6), 
  4215 ;;  fmt             2  102[BANK0 ] PTR const unsigned char 
  4216 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4217 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4218 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4219 ;;  ap              2  104[BANK0 ] PTR PTR void 
  4220 ;;		 -> sprintf@ap(2), 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  cfmt            2  106[BANK0 ] PTR unsigned char 
  4223 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4224 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4225 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2  100[BANK0 ] int 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4235 ;;      Params:         0       6       0       0       0       0       0       0       0
  4236 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4238 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4239 ;;Total ram usage:        8 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 6
  4242 ;; This function calls:
  4243 ;;		_vfpfcnvrt
  4244 ;; This function is called by:
  4245 ;;		_sprintf
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text24
  4250  004130                     __ptext24:
  4251                           	callstack 0
  4252  004130                     _vfprintf:
  4253                           	callstack 22
  4254  004130                     
  4255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4256  004130  C0C6  F0CA         	movff	vfprintf@fmt,vfprintf@cfmt
  4257  004134  C0C7  F0CB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4258  004138                     
  4259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4260  004138  0E00               	movlw	0
  4261  00413A  0100               	movlb	0	; () banked
  4262  00413C  6FF3               	movwf	(_nout+1)& (0+255),b
  4263  00413E  0E00               	movlw	0
  4264  004140  6FF2               	movwf	_nout& (0+255),b
  4265                           
  4266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4267  004142  EFB6  F020         	goto	l5386
  4268  004146                     l5384:
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4272  004146  C0C4  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  4273  00414A  C0C5  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4274  00414E  0ECA               	movlw	low vfprintf@cfmt
  4275  004150  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  4276  004152  0E00               	movlw	high vfprintf@cfmt
  4277  004154  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4278  004156  C0C8  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  4279  00415A  C0C9  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4280  00415E  EC57  F00A         	call	_vfpfcnvrt	;wreg free
  4281  004162  0100               	movlb	0	; () banked
  4282  004164  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  4283  004166  27F2               	addwf	_nout& (0+255),f,b
  4284  004168  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4285  00416A  23F3               	addwfc	(_nout+1)& (0+255),f,b
  4286  00416C                     l5386:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4290  00416C  C0CA  FFF6         	movff	vfprintf@cfmt,tblptrl
  4291  004170  C0CB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4292  004174                     	if	0	;tblptru may be non-zero
  4293  004174                     	endif
  4294  004174                     	if	0	;tblptru may be non-zero
  4295  004174                     	endif
  4296  004174  0008               	tblrd		*
  4297  004176  50F5               	movf	tablat,w,c
  4298  004178  0900               	iorlw	0
  4299  00417A  A4D8               	btfss	status,2,c
  4300  00417C  EFC2  F020         	goto	u5971
  4301  004180  EFC4  F020         	goto	u5970
  4302  004184                     u5971:
  4303  004184  EFA3  F020         	goto	l5384
  4304  004188                     u5970:
  4305  004188                     
  4306                           ; BSR set to: 0
  4307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4308  004188  C0F2  F0C4         	movff	_nout,?_vfprintf
  4309  00418C  C0F3  F0C5         	movff	_nout+1,?_vfprintf+1
  4310  004190                     
  4311                           ; BSR set to: 0
  4312  004190  0012               	return		;funcret
  4313  004192                     __end_of_vfprintf:
  4314                           	callstack 0
  4315                           
  4316 ;; *************** function _vfpfcnvrt *****************
  4317 ;; Defined at:
  4318 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  4321 ;;		 -> sprintf@f(6), 
  4322 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  4323 ;;		 -> vfprintf@cfmt(2), 
  4324 ;;  ap              2   72[BANK0 ] PTR PTR void 
  4325 ;;		 -> sprintf@ap(2), 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  llu             8   78[BANK0 ] unsigned long long 
  4328 ;;  ll              8    0        long long 
  4329 ;;  f               4   92[BANK0 ] long long 
  4330 ;;  ct              3   96[BANK0 ] unsigned char [3]
  4331 ;;  vp              3    0        PTR void 
  4332 ;;  cp              3    0        PTR unsigned char 
  4333 ;;  done            2   86[BANK0 ] int 
  4334 ;;  i               2    0        int 
  4335 ;;  c               1   99[BANK0 ] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  2   68[BANK0 ] int 
  4338 ;; Registers used:
  4339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4345 ;;      Params:         0       6       0       0       0       0       0       0       0
  4346 ;;      Locals:         0      22       0       0       0       0       0       0       0
  4347 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4348 ;;      Totals:         0      32       0       0       0       0       0       0       0
  4349 ;;Total ram usage:       32 bytes
  4350 ;; Hardware stack levels used: 1
  4351 ;; Hardware stack levels required when called: 5
  4352 ;; This function calls:
  4353 ;;		_atoi
  4354 ;;		_efgtoa
  4355 ;;		_fputc
  4356 ;;		_isdigit
  4357 ;;		_isupper
  4358 ;;		_strncmp
  4359 ;;		_tolower
  4360 ;;		_xtoa
  4361 ;; This function is called by:
  4362 ;;		_vfprintf
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text25
  4367  0014AE                     __ptext25:
  4368                           	callstack 0
  4369  0014AE                     _vfpfcnvrt:
  4370                           	callstack 22
  4371  0014AE                     
  4372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4373  0014AE  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4374  0014B2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4375  0014B6  CFDE FFF6          	movff	postinc2,tblptrl
  4376  0014BA  CFDD FFF7          	movff	postdec2,tblptrh
  4377  0014BE                     	if	0	;tblptru may be non-zero
  4378  0014BE                     	endif
  4379  0014BE                     	if	0	;tblptru may be non-zero
  4380  0014BE                     	endif
  4381  0014BE  0008               	tblrd		*
  4382  0014C0  50F5               	movf	tablat,w,c
  4383  0014C2  0A25               	xorlw	37
  4384  0014C4  A4D8               	btfss	status,2,c
  4385  0014C6  EF67  F00A         	goto	u5551
  4386  0014CA  EF69  F00A         	goto	u5550
  4387  0014CE                     u5551:
  4388  0014CE  EF42  F00D         	goto	l5222
  4389  0014D2                     u5550:
  4390  0014D2                     
  4391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4392  0014D2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4393  0014D6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4394  0014DA  2ADE               	incf	postinc2,f,c
  4395  0014DC  0E00               	movlw	0
  4396  0014DE  22DD               	addwfc	postdec2,f,c
  4397  0014E0                     
  4398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4399  0014E0  0E00               	movlw	0
  4400  0014E2  0100               	movlb	0	; () banked
  4401  0014E4  6FF5               	movwf	(_width+1)& (0+255),b
  4402  0014E6  0E00               	movlw	0
  4403  0014E8  6FF4               	movwf	_width& (0+255),b
  4404  0014EA  C0F4  F0F8         	movff	_width,_flags
  4405  0014EE  C0F5  F0F9         	movff	_width+1,_flags+1
  4406  0014F2                     
  4407                           ; BSR set to: 0
  4408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4409  0014F2  69F6               	setf	_prec& (0+255),b
  4410  0014F4  69F7               	setf	(_prec+1)& (0+255),b
  4411  0014F6                     
  4412                           ; BSR set to: 0
  4413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4414  0014F6  0E00               	movlw	0
  4415  0014F8  6FB7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4416  0014FA  0E00               	movlw	0
  4417  0014FC  6FB6               	movwf	vfpfcnvrt@done& (0+255),b
  4418                           
  4419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4420  0014FE  EFC7  F00A         	goto	l5130
  4421  001502                     l5104:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4425  001502  81F8               	bsf	_flags& (0+255),0,b
  4426  001504                     l5106:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4430  001504  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4431  001508  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4432  00150C  2ADE               	incf	postinc2,f,c
  4433  00150E  0E00               	movlw	0
  4434  001510  22DD               	addwfc	postdec2,f,c
  4435                           
  4436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4437  001512  EFC7  F00A         	goto	l5130
  4438  001516                     l5108:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4442  001516  83F8               	bsf	_flags& (0+255),1,b
  4443  001518  EF82  F00A         	goto	l5106
  4444  00151C                     l5112:
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4448  00151C  85F8               	bsf	_flags& (0+255),2,b
  4449  00151E  EF82  F00A         	goto	l5106
  4450  001522                     l5116:
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4454  001522  87F8               	bsf	_flags& (0+255),3,b
  4455  001524  EF82  F00A         	goto	l5106
  4456  001528                     l5120:
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4460  001528  89F8               	bsf	_flags& (0+255),4,b
  4461  00152A  EF82  F00A         	goto	l5106
  4462  00152E                     l5124:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4466  00152E  0E00               	movlw	0
  4467  001530  6FB7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4468  001532  0E01               	movlw	1
  4469  001534  6FB6               	movwf	vfpfcnvrt@done& (0+255),b
  4470                           
  4471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4472  001536  EFC7  F00A         	goto	l5130
  4473  00153A                     l5128:
  4474                           
  4475                           ; BSR set to: 0
  4476  00153A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4477  00153E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4478  001542  CFDE FFF6          	movff	postinc2,tblptrl
  4479  001546  CFDD FFF7          	movff	postdec2,tblptrh
  4480  00154A                     	if	0	;tblptru may be non-zero
  4481  00154A                     	endif
  4482  00154A                     	if	0	;tblptru may be non-zero
  4483  00154A                     	endif
  4484  00154A  0008               	tblrd		*
  4485  00154C  50F5               	movf	tablat,w,c
  4486  00154E  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4487  001550  6BAB               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4488                           
  4489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4490                           ; Switch size 1, requested type "simple"
  4491                           ; Number of cases is 1, Range of values is 0 to 0
  4492                           ; switch strategies available:
  4493                           ; Name         Instructions Cycles
  4494                           ; simple_byte            4     3 (average)
  4495                           ;	Chosen strategy is simple_byte
  4496  001552  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4497  001554  0A00               	xorlw	0	; case 0
  4498  001556  B4D8               	btfsc	status,2,c
  4499  001558  EFB0  F00A         	goto	l5882
  4500  00155C  EF97  F00A         	goto	l5124
  4501  001560                     l5882:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ; Switch size 1, requested type "simple"
  4505                           ; Number of cases is 5, Range of values is 32 to 48
  4506                           ; switch strategies available:
  4507                           ; Name         Instructions Cycles
  4508                           ; simple_byte           16     9 (average)
  4509                           ;	Chosen strategy is simple_byte
  4510  001560  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4511  001562  0A20               	xorlw	32	; case 32
  4512  001564  B4D8               	btfsc	status,2,c
  4513  001566  EF91  F00A         	goto	l5116
  4514  00156A  0A03               	xorlw	3	; case 35
  4515  00156C  B4D8               	btfsc	status,2,c
  4516  00156E  EF94  F00A         	goto	l5120
  4517  001572  0A08               	xorlw	8	; case 43
  4518  001574  B4D8               	btfsc	status,2,c
  4519  001576  EF8E  F00A         	goto	l5112
  4520  00157A  0A06               	xorlw	6	; case 45
  4521  00157C  B4D8               	btfsc	status,2,c
  4522  00157E  EF81  F00A         	goto	l5104
  4523  001582  0A1D               	xorlw	29	; case 48
  4524  001584  B4D8               	btfsc	status,2,c
  4525  001586  EF8B  F00A         	goto	l5108
  4526  00158A  EF97  F00A         	goto	l5124
  4527  00158E                     l5130:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4531  00158E  51B6               	movf	vfpfcnvrt@done& (0+255),w,b
  4532  001590  11B7               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4533  001592  B4D8               	btfsc	status,2,c
  4534  001594  EFCE  F00A         	goto	u5561
  4535  001598  EFD0  F00A         	goto	u5560
  4536  00159C                     u5561:
  4537  00159C  EF9D  F00A         	goto	l5128
  4538  0015A0                     u5560:
  4539  0015A0                     
  4540                           ; BSR set to: 0
  4541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4542  0015A0  A1F8               	btfss	_flags& (0+255),0,b
  4543  0015A2  EFD5  F00A         	goto	u5571
  4544  0015A6  EFD7  F00A         	goto	u5570
  4545  0015AA                     u5571:
  4546  0015AA  EFD8  F00A         	goto	l5134
  4547  0015AE                     u5570:
  4548  0015AE                     
  4549                           ; BSR set to: 0
  4550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4551  0015AE  93F8               	bcf	_flags& (0+255),1,b
  4552  0015B0                     l5134:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  4556  0015B0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4557  0015B4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4558  0015B8  CFDE FFF6          	movff	postinc2,tblptrl
  4559  0015BC  CFDD FFF7          	movff	postdec2,tblptrh
  4560  0015C0                     	if	0	;tblptru may be non-zero
  4561  0015C0                     	endif
  4562  0015C0                     	if	0	;tblptru may be non-zero
  4563  0015C0                     	endif
  4564  0015C0  0008               	tblrd		*
  4565  0015C2  50F5               	movf	tablat,w,c
  4566  0015C4  0A2E               	xorlw	46
  4567  0015C6  A4D8               	btfss	status,2,c
  4568  0015C8  EFE8  F00A         	goto	u5581
  4569  0015CC  EFEA  F00A         	goto	u5580
  4570  0015D0                     u5581:
  4571  0015D0  EF68  F00B         	goto	l5154
  4572  0015D4                     u5580:
  4573  0015D4                     
  4574                           ; BSR set to: 0
  4575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  4576  0015D4  0E00               	movlw	0
  4577  0015D6  6FF7               	movwf	(_prec+1)& (0+255),b
  4578  0015D8  0E00               	movlw	0
  4579  0015DA  6FF6               	movwf	_prec& (0+255),b
  4580  0015DC                     
  4581                           ; BSR set to: 0
  4582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  4583  0015DC  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4584  0015E0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4585  0015E4  2ADE               	incf	postinc2,f,c
  4586  0015E6  0E00               	movlw	0
  4587  0015E8  22DD               	addwfc	postdec2,f,c
  4588  0015EA                     
  4589                           ; BSR set to: 0
  4590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  4591  0015EA  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4592  0015EE  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4593  0015F2  CFDE FFF6          	movff	postinc2,tblptrl
  4594  0015F6  CFDD FFF7          	movff	postdec2,tblptrh
  4595  0015FA                     	if	0	;tblptru may be non-zero
  4596  0015FA                     	endif
  4597  0015FA                     	if	0	;tblptru may be non-zero
  4598  0015FA                     	endif
  4599  0015FA  0008               	tblrd		*
  4600  0015FC  50F5               	movf	tablat,w,c
  4601  0015FE  0A2A               	xorlw	42
  4602  001600  A4D8               	btfss	status,2,c
  4603  001602  EF05  F00B         	goto	u5591
  4604  001606  EF07  F00B         	goto	u5590
  4605  00160A                     u5591:
  4606  00160A  EF24  F00B         	goto	l5144
  4607  00160E                     u5590:
  4608  00160E                     
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  4611  00160E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4612  001612  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4613  001616  2ADE               	incf	postinc2,f,c
  4614  001618  0E00               	movlw	0
  4615  00161A  22DD               	addwfc	postdec2,f,c
  4616                           
  4617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4618  00161C  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4619  001620  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4620  001624  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4621  001628  0E02               	movlw	2
  4622  00162A  26DE               	addwf	postinc2,f,c
  4623  00162C  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4624  001630  0E00               	movlw	0
  4625  001632  22DD               	addwfc	postdec2,f,c
  4626  001634  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4627  001638  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4628  00163C  CFDE F0F6          	movff	postinc2,_prec
  4629  001640  CFDD F0F7          	movff	postdec2,_prec+1
  4630                           
  4631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  4632  001644  EF68  F00B         	goto	l5154
  4633  001648                     l5144:
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  4637  001648  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4638  00164C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4639  001650  CFDE F008          	movff	postinc2,atoi@s
  4640  001654  CFDD F009          	movff	postdec2,atoi@s+1
  4641  001658  ECA7  F019         	call	_atoi	;wreg free
  4642  00165C  C008  F0F6         	movff	?_atoi,_prec
  4643  001660  C009  F0F7         	movff	?_atoi+1,_prec+1
  4644                           
  4645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4646  001664  EF3B  F00B         	goto	l5148
  4647  001668                     l5146:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  4651  001668  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4652  00166C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4653  001670  2ADE               	incf	postinc2,f,c
  4654  001672  0E00               	movlw	0
  4655  001674  22DD               	addwfc	postdec2,f,c
  4656  001676                     l5148:
  4657  001676  0ED0               	movlw	208
  4658  001678  0100               	movlb	0	; () banked
  4659  00167A  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4660  00167C  0EFF               	movlw	255
  4661  00167E  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4662  001680  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4663  001684  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4664  001688  CFDE FFF6          	movff	postinc2,tblptrl
  4665  00168C  CFDD FFF7          	movff	postdec2,tblptrh
  4666  001690                     	if	0	;tblptru may be non-zero
  4667  001690                     	endif
  4668  001690                     	if	0	;tblptru may be non-zero
  4669  001690                     	endif
  4670  001690  0008               	tblrd		*
  4671  001692  50F5               	movf	tablat,w,c
  4672  001694  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4673  001696  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4674  001698  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4675  00169A  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4676  00169C  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4677  00169E  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4678  0016A0  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4679  0016A2  E10A               	bnz	u5600
  4680  0016A4  0E0A               	movlw	10
  4681  0016A6  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4682  0016A8  A0D8               	btfss	status,0,c
  4683  0016AA  EF59  F00B         	goto	u5601
  4684  0016AE  EF5C  F00B         	goto	u5600
  4685  0016B2                     u5601:
  4686  0016B2  0E01               	movlw	1
  4687  0016B4  EF5D  F00B         	goto	u5610
  4688  0016B8                     u5600:
  4689  0016B8  0E00               	movlw	0
  4690  0016BA                     u5610:
  4691  0016BA  6FB8               	movwf	_vfpfcnvrt$1538& (0+255),b
  4692  0016BC  6BB9               	clrf	(_vfpfcnvrt$1538+1)& (0+255),b
  4693  0016BE                     
  4694                           ; BSR set to: 0
  4695  0016BE  51B8               	movf	_vfpfcnvrt$1538& (0+255),w,b
  4696  0016C0  11B9               	iorwf	(_vfpfcnvrt$1538+1)& (0+255),w,b
  4697  0016C2  A4D8               	btfss	status,2,c
  4698  0016C4  EF66  F00B         	goto	u5621
  4699  0016C8  EF68  F00B         	goto	u5620
  4700  0016CC                     u5621:
  4701  0016CC  EF34  F00B         	goto	l5146
  4702  0016D0                     u5620:
  4703  0016D0                     l5154:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  4707  0016D0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4708  0016D4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4709  0016D8  CFDE FFF6          	movff	postinc2,tblptrl
  4710  0016DC  CFDD FFF7          	movff	postdec2,tblptrh
  4711  0016E0                     	if	0	;tblptru may be non-zero
  4712  0016E0                     	endif
  4713  0016E0                     	if	0	;tblptru may be non-zero
  4714  0016E0                     	endif
  4715  0016E0  0008               	tblrd		*
  4716  0016E2  50F5               	movf	tablat,w,c
  4717  0016E4  6E07               	movwf	tolower@c^0,c
  4718  0016E6  6A08               	clrf	(tolower@c+1)^0,c
  4719  0016E8  ECC9  F020         	call	_tolower	;wreg free
  4720  0016EC  5007               	movf	?_tolower^0,w,c
  4721  0016EE  0100               	movlb	0	; () banked
  4722  0016F0  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  4723  0016F2                     
  4724                           ; BSR set to: 0
  4725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  4726  0016F2  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  4727  0016F4  B4D8               	btfsc	status,2,c
  4728  0016F6  EF7F  F00B         	goto	u5631
  4729  0016FA  EF81  F00B         	goto	u5630
  4730  0016FE                     u5631:
  4731  0016FE  EFBB  F00B         	goto	l5164
  4732  001702                     u5630:
  4733  001702                     
  4734                           ; BSR set to: 0
  4735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  4736  001702  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4737  001706  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4738  00170A  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  4739  00170E  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  4740  001712  0E01               	movlw	1
  4741  001714  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  4742  001716  0E00               	movlw	0
  4743  001718  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4744  00171A  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4745  00171E  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4746  001722                     	if	0	;tblptru may be non-zero
  4747  001722                     	endif
  4748  001722                     	if	0	;tblptru may be non-zero
  4749  001722                     	endif
  4750  001722  0008               	tblrd		*
  4751  001724  50F5               	movf	tablat,w,c
  4752  001726  6E07               	movwf	tolower@c^0,c
  4753  001728  6A08               	clrf	(tolower@c+1)^0,c
  4754  00172A  ECC9  F020         	call	_tolower	;wreg free
  4755  00172E  5007               	movf	?_tolower^0,w,c
  4756  001730  0100               	movlb	0	; () banked
  4757  001732  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4758  001734                     
  4759                           ; BSR set to: 0
  4760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  4761  001734  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4762  001736  B4D8               	btfsc	status,2,c
  4763  001738  EFA0  F00B         	goto	u5641
  4764  00173C  EFA2  F00B         	goto	u5640
  4765  001740                     u5641:
  4766  001740  EFBB  F00B         	goto	l5164
  4767  001744                     u5640:
  4768  001744                     
  4769                           ; BSR set to: 0
  4770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  4771  001744  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4772  001748  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4773  00174C  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  4774  001750  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  4775  001754  0E02               	movlw	2
  4776  001756  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  4777  001758  0E00               	movlw	0
  4778  00175A  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4779  00175C  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4780  001760  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4781  001764                     	if	0	;tblptru may be non-zero
  4782  001764                     	endif
  4783  001764                     	if	0	;tblptru may be non-zero
  4784  001764                     	endif
  4785  001764  0008               	tblrd		*
  4786  001766  50F5               	movf	tablat,w,c
  4787  001768  6E07               	movwf	tolower@c^0,c
  4788  00176A  6A08               	clrf	(tolower@c+1)^0,c
  4789  00176C  ECC9  F020         	call	_tolower	;wreg free
  4790  001770  5007               	movf	?_tolower^0,w,c
  4791  001772  0100               	movlb	0	; () banked
  4792  001774  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4793  001776                     l5164:
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  4797  001776  0E66               	movlw	102
  4798  001778  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4799  00177A  A4D8               	btfss	status,2,c
  4800  00177C  EFC2  F00B         	goto	u5651
  4801  001780  EFC4  F00B         	goto	u5650
  4802  001784                     u5651:
  4803  001784  EF04  F00C         	goto	l5176
  4804  001788                     u5650:
  4805  001788                     
  4806                           ; BSR set to: 0
  4807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  4808  001788  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4809  00178C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4810  001790  CFDE FFF6          	movff	postinc2,tblptrl
  4811  001794  CFDD FFF7          	movff	postdec2,tblptrh
  4812  001798                     	if	0	;tblptru may be non-zero
  4813  001798                     	endif
  4814  001798                     	if	0	;tblptru may be non-zero
  4815  001798                     	endif
  4816  001798  0008               	tblrd		*
  4817  00179A  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4818  00179E                     
  4819                           ; BSR set to: 0
  4820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  4821  00179E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4822  0017A2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4823  0017A6  2ADE               	incf	postinc2,f,c
  4824  0017A8  0E00               	movlw	0
  4825  0017AA  22DD               	addwfc	postdec2,f,c
  4826  0017AC                     
  4827                           ; BSR set to: 0
  4828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4829  0017AC  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4830  0017B0  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4831  0017B4  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4832  0017B8  0E04               	movlw	4
  4833  0017BA  26DE               	addwf	postinc2,f,c
  4834  0017BC  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4835  0017C0  0E00               	movlw	0
  4836  0017C2  22DD               	addwfc	postdec2,f,c
  4837  0017C4  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4838  0017C8  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4839  0017CC  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4840  0017D0  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4841  0017D4  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4842  0017D8  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4843  0017DC                     l5172:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  4847  0017DC  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  4848  0017E0  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4849  0017E4  C0BC  F062         	movff	vfpfcnvrt@f,efgtoa@f
  4850  0017E8  C0BD  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4851  0017EC  C0BE  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4852  0017F0  C0BF  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4853  0017F4  C0C3  F066         	movff	vfpfcnvrt@c,efgtoa@c
  4854  0017F8  EC2B  F004         	call	_efgtoa	;wreg free
  4855  0017FC  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  4856  001800  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4857  001804  EF5D  F00D         	goto	l1476
  4858  001808                     l5176:
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4862  001808  0EC0               	movlw	low vfpfcnvrt@ct
  4863  00180A  6E01               	movwf	strncmp@_l^0,c
  4864  00180C  0E00               	movlw	high vfpfcnvrt@ct
  4865  00180E  6E02               	movwf	(strncmp@_l+1)^0,c
  4866  001810  0E4C               	movlw	low STR_31
  4867  001812  6E03               	movwf	strncmp@_r^0,c
  4868  001814  0E08               	movlw	high STR_31
  4869  001816  6E04               	movwf	(strncmp@_r+1)^0,c
  4870  001818  0E00               	movlw	0
  4871  00181A  6E06               	movwf	(strncmp@n+1)^0,c
  4872  00181C  0E02               	movlw	2
  4873  00181E  6E05               	movwf	strncmp@n^0,c
  4874  001820  EC1E  F01D         	call	_strncmp	;wreg free
  4875  001824  5001               	movf	?_strncmp^0,w,c
  4876  001826  1002               	iorwf	(?_strncmp+1)^0,w,c
  4877  001828  A4D8               	btfss	status,2,c
  4878  00182A  EF19  F00C         	goto	u5661
  4879  00182E  EF1B  F00C         	goto	u5660
  4880  001832                     u5661:
  4881  001832  EF97  F00C         	goto	l5192
  4882  001836                     u5660:
  4883  001836                     
  4884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4885  001836  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4886  00183A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4887  00183E  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  4888  001842  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  4889  001846  0E01               	movlw	1
  4890  001848  0100               	movlb	0	; () banked
  4891  00184A  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  4892  00184C  0E00               	movlw	0
  4893  00184E  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4894  001850  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4895  001854  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4896  001858                     	if	0	;tblptru may be non-zero
  4897  001858                     	endif
  4898  001858                     	if	0	;tblptru may be non-zero
  4899  001858                     	endif
  4900  001858  0008               	tblrd		*
  4901  00185A  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4902  00185E  0EBF               	movlw	191
  4903  001860  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4904  001862  0EFF               	movlw	255
  4905  001864  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4906  001866  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4907  00186A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4908  00186E  CFDE FFF6          	movff	postinc2,tblptrl
  4909  001872  CFDD FFF7          	movff	postdec2,tblptrh
  4910  001876                     	if	0	;tblptru may be non-zero
  4911  001876                     	endif
  4912  001876                     	if	0	;tblptru may be non-zero
  4913  001876                     	endif
  4914  001876  0008               	tblrd		*
  4915  001878  50F5               	movf	tablat,w,c
  4916  00187A  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4917  00187C  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4918  00187E  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4919  001880  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4920  001882  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4921  001884  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4922  001886  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4923  001888  E10A               	bnz	u5670
  4924  00188A  0E1A               	movlw	26
  4925  00188C  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4926  00188E  A0D8               	btfss	status,0,c
  4927  001890  EF4C  F00C         	goto	u5671
  4928  001894  EF4F  F00C         	goto	u5670
  4929  001898                     u5671:
  4930  001898  0E01               	movlw	1
  4931  00189A  EF50  F00C         	goto	u5680
  4932  00189E                     u5670:
  4933  00189E  0E00               	movlw	0
  4934  0018A0                     u5680:
  4935  0018A0  6FBA               	movwf	_vfpfcnvrt$1542& (0+255),b
  4936  0018A2  6BBB               	clrf	(_vfpfcnvrt$1542+1)& (0+255),b
  4937  0018A4                     
  4938                           ; BSR set to: 0
  4939  0018A4  51BA               	movf	_vfpfcnvrt$1542& (0+255),w,b
  4940  0018A6  11BB               	iorwf	(_vfpfcnvrt$1542+1)& (0+255),w,b
  4941  0018A8  B4D8               	btfsc	status,2,c
  4942  0018AA  EF59  F00C         	goto	u5691
  4943  0018AE  EF5B  F00C         	goto	u5690
  4944  0018B2                     u5691:
  4945  0018B2  EF75  F00C         	goto	l5186
  4946  0018B6                     u5690:
  4947  0018B6                     
  4948                           ; BSR set to: 0
  4949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4950  0018B6  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4951  0018BA  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4952  0018BE  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4953  0018C2  0E04               	movlw	4
  4954  0018C4  26DE               	addwf	postinc2,f,c
  4955  0018C6  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4956  0018CA  0E00               	movlw	0
  4957  0018CC  22DD               	addwfc	postdec2,f,c
  4958  0018CE  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4959  0018D2  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4960  0018D6  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4961  0018DA  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4962  0018DE  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4963  0018E2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4964                           
  4965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  4966  0018E6  EF8D  F00C         	goto	l1483
  4967  0018EA                     l5186:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4971  0018EA  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4972  0018EE  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4973  0018F2  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4974  0018F6  0E04               	movlw	4
  4975  0018F8  26DE               	addwf	postinc2,f,c
  4976  0018FA  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4977  0018FE  0E00               	movlw	0
  4978  001900  22DD               	addwfc	postdec2,f,c
  4979  001902  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4980  001906  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4981  00190A  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4982  00190E  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4983  001912  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4984  001916  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4985  00191A                     l1483:
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4989  00191A  0E02               	movlw	2
  4990  00191C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4991  001920  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4992  001924  26DE               	addwf	postinc2,f,c
  4993  001926  0E00               	movlw	0
  4994  001928  22DD               	addwfc	postdec2,f,c
  4995  00192A  EFEE  F00B         	goto	l5172
  4996  00192E                     l5192:
  4997                           
  4998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4999  00192E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5000  001932  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5001  001936  CFDE FFF6          	movff	postinc2,tblptrl
  5002  00193A  CFDD FFF7          	movff	postdec2,tblptrh
  5003  00193E                     	if	0	;tblptru may be non-zero
  5004  00193E                     	endif
  5005  00193E                     	if	0	;tblptru may be non-zero
  5006  00193E                     	endif
  5007  00193E  0008               	tblrd		*
  5008  001940  50F5               	movf	tablat,w,c
  5009  001942  0A78               	xorlw	120
  5010  001944  B4D8               	btfsc	status,2,c
  5011  001946  EFA7  F00C         	goto	u5701
  5012  00194A  EFA9  F00C         	goto	u5700
  5013  00194E                     u5701:
  5014  00194E  EFBB  F00C         	goto	l5196
  5015  001952                     u5700:
  5016  001952  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5017  001956  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5018  00195A  CFDE FFF6          	movff	postinc2,tblptrl
  5019  00195E  CFDD FFF7          	movff	postdec2,tblptrh
  5020  001962                     	if	0	;tblptru may be non-zero
  5021  001962                     	endif
  5022  001962                     	if	0	;tblptru may be non-zero
  5023  001962                     	endif
  5024  001962  0008               	tblrd		*
  5025  001964  50F5               	movf	tablat,w,c
  5026  001966  0A58               	xorlw	88
  5027  001968  A4D8               	btfss	status,2,c
  5028  00196A  EFB9  F00C         	goto	u5711
  5029  00196E  EFBB  F00C         	goto	u5710
  5030  001972                     u5711:
  5031  001972  EF0A  F00D         	goto	l5206
  5032  001976                     u5710:
  5033  001976                     l5196:
  5034                           
  5035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5036  001976  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5037  00197A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5038  00197E  CFDE FFF6          	movff	postinc2,tblptrl
  5039  001982  CFDD FFF7          	movff	postdec2,tblptrh
  5040  001986                     	if	0	;tblptru may be non-zero
  5041  001986                     	endif
  5042  001986                     	if	0	;tblptru may be non-zero
  5043  001986                     	endif
  5044  001986  0008               	tblrd		*
  5045  001988  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  5046  00198C                     
  5047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5048  00198C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5049  001990  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5050  001994  2ADE               	incf	postinc2,f,c
  5051  001996  0E00               	movlw	0
  5052  001998  22DD               	addwfc	postdec2,f,c
  5053  00199A                     
  5054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5055  00199A  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5056  00199E  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5057  0019A2  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  5058  0019A6  0E02               	movlw	2
  5059  0019A8  26DE               	addwf	postinc2,f,c
  5060  0019AA  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  5061  0019AE  0E00               	movlw	0
  5062  0019B0  22DD               	addwfc	postdec2,f,c
  5063  0019B2  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5064  0019B6  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5065  0019BA  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt+2
  5066  0019BE  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+3
  5067  0019C2  C0AC  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5068  0019C6  C0AD  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5069  0019CA  0100               	movlb	0	; () banked
  5070  0019CC  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5071  0019CE  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5072  0019D0  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5073  0019D2  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5074  0019D4  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5075  0019D6  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5076  0019D8                     
  5077                           ; BSR set to: 0
  5078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5079  0019D8  C0A4  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5080  0019DC  C0A5  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5081  0019E0  C0AE  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5082  0019E4  C0AF  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5083  0019E8  C0B0  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5084  0019EC  C0B1  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5085  0019F0  C0B2  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5086  0019F4  C0B3  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5087  0019F8  C0B4  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5088  0019FC  C0B5  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5089  001A00  C0C3  F026         	movff	vfpfcnvrt@c,xtoa@x
  5090  001A04  EC18  F015         	call	_xtoa	;wreg free
  5091  001A08  C01C  F0A4         	movff	?_xtoa,?_vfpfcnvrt
  5092  001A0C  C01D  F0A5         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5093  001A10  EF5D  F00D         	goto	l1476
  5094  001A14                     l5206:
  5095                           
  5096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5097  001A14  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5098  001A18  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5099  001A1C  CFDE FFF6          	movff	postinc2,tblptrl
  5100  001A20  CFDD FFF7          	movff	postdec2,tblptrh
  5101  001A24                     	if	0	;tblptru may be non-zero
  5102  001A24                     	endif
  5103  001A24                     	if	0	;tblptru may be non-zero
  5104  001A24                     	endif
  5105  001A24  0008               	tblrd		*
  5106  001A26  50F5               	movf	tablat,w,c
  5107  001A28  0A25               	xorlw	37
  5108  001A2A  A4D8               	btfss	status,2,c
  5109  001A2C  EF1A  F00D         	goto	u5721
  5110  001A30  EF1C  F00D         	goto	u5720
  5111  001A34                     u5721:
  5112  001A34  EF34  F00D         	goto	l5216
  5113  001A38                     u5720:
  5114  001A38                     
  5115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5116  001A38  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5117  001A3C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5118  001A40  2ADE               	incf	postinc2,f,c
  5119  001A42  0E00               	movlw	0
  5120  001A44  22DD               	addwfc	postdec2,f,c
  5121  001A46                     
  5122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5123  001A46  0E00               	movlw	0
  5124  001A48  6E02               	movwf	(fputc@c+1)^0,c
  5125  001A4A  0E25               	movlw	37
  5126  001A4C  6E01               	movwf	fputc@c^0,c
  5127  001A4E  C0A4  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5128  001A52  C0A5  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5129  001A56  EC89  F01D         	call	_fputc	;wreg free
  5130  001A5A                     l5212:
  5131                           
  5132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5133  001A5A  0E00               	movlw	0
  5134  001A5C  0100               	movlb	0	; () banked
  5135  001A5E  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5136  001A60  0E01               	movlw	1
  5137  001A62  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  5138  001A64  EF5D  F00D         	goto	l1476
  5139  001A68                     l5216:
  5140                           
  5141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5142  001A68  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5143  001A6C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5144  001A70  2ADE               	incf	postinc2,f,c
  5145  001A72  0E00               	movlw	0
  5146  001A74  22DD               	addwfc	postdec2,f,c
  5147  001A76                     
  5148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5149  001A76  0E00               	movlw	0
  5150  001A78  0100               	movlb	0	; () banked
  5151  001A7A  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5152  001A7C  0E00               	movlw	0
  5153  001A7E  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  5154  001A80  EF5D  F00D         	goto	l1476
  5155  001A84                     l5222:
  5156                           
  5157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5158  001A84  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5159  001A88  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5160  001A8C  CFDE FFF6          	movff	postinc2,tblptrl
  5161  001A90  CFDD FFF7          	movff	postdec2,tblptrh
  5162  001A94                     	if	0	;tblptru may be non-zero
  5163  001A94                     	endif
  5164  001A94                     	if	0	;tblptru may be non-zero
  5165  001A94                     	endif
  5166  001A94  0008               	tblrd		*
  5167  001A96  50F5               	movf	tablat,w,c
  5168  001A98  6E01               	movwf	fputc@c^0,c
  5169  001A9A  6A02               	clrf	(fputc@c+1)^0,c
  5170  001A9C  C0A4  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5171  001AA0  C0A5  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5172  001AA4  EC89  F01D         	call	_fputc	;wreg free
  5173  001AA8                     
  5174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5175  001AA8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5176  001AAC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5177  001AB0  2ADE               	incf	postinc2,f,c
  5178  001AB2  0E00               	movlw	0
  5179  001AB4  22DD               	addwfc	postdec2,f,c
  5180  001AB6  EF2D  F00D         	goto	l5212
  5181  001ABA                     l1476:
  5182  001ABA  0012               	return		;funcret
  5183  001ABC                     __end_of_vfpfcnvrt:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _xtoa *****************
  5187 ;; Defined at:
  5188 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5191 ;;		 -> sprintf@f(6), 
  5192 ;;  d               8   29[COMRAM] unsigned long long 
  5193 ;;  x               1   37[COMRAM] unsigned char 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  n               8   54[COMRAM] unsigned long long 
  5196 ;;  c               2   64[COMRAM] int 
  5197 ;;  i               2   62[COMRAM] int 
  5198 ;;  w               2   52[COMRAM] int 
  5199 ;;  p               2   50[COMRAM] int 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  2   27[COMRAM] int 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5209 ;;      Params:        11       0       0       0       0       0       0       0       0
  5210 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5211 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5212 ;;      Totals:        39       0       0       0       0       0       0       0       0
  5213 ;;Total ram usage:       39 bytes
  5214 ;; Hardware stack levels used: 1
  5215 ;; Hardware stack levels required when called: 4
  5216 ;; This function calls:
  5217 ;;		_isalpha
  5218 ;;		_isupper
  5219 ;;		_pad
  5220 ;;		_toupper
  5221 ;; This function is called by:
  5222 ;;		_vfpfcnvrt
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text26
  5227  002A30                     __ptext26:
  5228                           	callstack 0
  5229  002A30                     _xtoa:
  5230                           	callstack 22
  5231  002A30                     
  5232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5233  002A30  0100               	movlb	0	; () banked
  5234  002A32  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5235  002A34  EF1E  F015         	goto	u5221
  5236  002A38  EF20  F015         	goto	u5220
  5237  002A3C                     u5221:
  5238  002A3C  EF21  F015         	goto	l4924
  5239  002A40                     u5220:
  5240  002A40                     
  5241                           ; BSR set to: 0
  5242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5243  002A40  93F8               	bcf	_flags& (0+255),1,b
  5244  002A42                     l4924:
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5248  002A42  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5249  002A44  EF2E  F015         	goto	u5230
  5250  002A48  51F7               	movf	(_prec+1)& (0+255),w,b
  5251  002A4A  E106               	bnz	u5231
  5252  002A4C  05F6               	decf	_prec& (0+255),w,b
  5253  002A4E  B0D8               	btfsc	status,0,c
  5254  002A50  EF2C  F015         	goto	u5231
  5255  002A54  EF2E  F015         	goto	u5230
  5256  002A58                     u5231:
  5257  002A58  EF34  F015         	goto	l1422
  5258  002A5C                     u5230:
  5259  002A5C                     
  5260                           ; BSR set to: 0
  5261  002A5C  0E00               	movlw	0
  5262  002A5E  6E34               	movwf	(xtoa@p+1)^0,c
  5263  002A60  0E01               	movlw	1
  5264  002A62  6E33               	movwf	xtoa@p^0,c
  5265  002A64  EF38  F015         	goto	l1424
  5266  002A68                     l1422:
  5267                           
  5268                           ; BSR set to: 0
  5269  002A68  C0F6  F033         	movff	_prec,xtoa@p
  5270  002A6C  C0F7  F034         	movff	_prec+1,xtoa@p+1
  5271  002A70                     l1424:
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5275  002A70  C0F4  F035         	movff	_width,xtoa@w
  5276  002A74  C0F5  F036         	movff	_width+1,xtoa@w+1
  5277                           
  5278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5279  002A78  A9F8               	btfss	_flags& (0+255),4,b
  5280  002A7A  EF41  F015         	goto	u5241
  5281  002A7E  EF43  F015         	goto	u5240
  5282  002A82                     u5241:
  5283  002A82  EF47  F015         	goto	l4930
  5284  002A86                     u5240:
  5285  002A86                     
  5286                           ; BSR set to: 0
  5287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5288  002A86  0EFE               	movlw	254
  5289  002A88  2635               	addwf	xtoa@w^0,f,c
  5290  002A8A  0EFF               	movlw	255
  5291  002A8C  2236               	addwfc	(xtoa@w+1)^0,f,c
  5292  002A8E                     l4930:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5296  002A8E  C01E  F037         	movff	xtoa@d,xtoa@n
  5297  002A92  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5298  002A96  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5299  002A9A  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5300  002A9E  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5301  002AA2  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5302  002AA6  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5303  002AAA  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5304  002AAE                     
  5305                           ; BSR set to: 0
  5306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5307  002AAE  0E00               	movlw	0
  5308  002AB0  6E40               	movwf	(xtoa@i+1)^0,c
  5309  002AB2  0E4F               	movlw	79
  5310  002AB4  6E3F               	movwf	xtoa@i^0,c
  5311  002AB6                     
  5312                           ; BSR set to: 0
  5313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5314  002AB6  0E00               	movlw	0
  5315  002AB8  0101               	movlb	1	; () banked
  5316  002ABA  6F5D               	movwf	(_dbuf+79)& (0+255),b
  5317                           
  5318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5319  002ABC  EF13  F016         	goto	l4966
  5320  002AC0                     l4936:
  5321                           
  5322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  5323  002AC0  063F               	decf	xtoa@i^0,f,c
  5324  002AC2  A0D8               	btfss	status,0,c
  5325  002AC4  0640               	decf	(xtoa@i+1)^0,f,c
  5326  002AC6                     
  5327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5328  002AC6  0E0F               	movlw	15
  5329  002AC8  1437               	andwf	xtoa@n^0,w,c
  5330  002ACA  6E41               	movwf	xtoa@c^0,c
  5331  002ACC  6A42               	clrf	(xtoa@c+1)^0,c
  5332  002ACE                     
  5333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5334  002ACE  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5335  002AD0  EF73  F015         	goto	u5251
  5336  002AD4  5042               	movf	(xtoa@c+1)^0,w,c
  5337  002AD6  E109               	bnz	u5250
  5338  002AD8  0E0A               	movlw	10
  5339  002ADA  5C41               	subwf	xtoa@c^0,w,c
  5340  002ADC  A0D8               	btfss	status,0,c
  5341  002ADE  EF73  F015         	goto	u5251
  5342  002AE2  EF75  F015         	goto	u5250
  5343  002AE6                     u5251:
  5344  002AE6  EF7D  F015         	goto	l4944
  5345  002AEA                     u5250:
  5346  002AEA  0E57               	movlw	87
  5347  002AEC  2441               	addwf	xtoa@c^0,w,c
  5348  002AEE  6E41               	movwf	xtoa@c^0,c
  5349  002AF0  0E00               	movlw	0
  5350  002AF2  2042               	addwfc	(xtoa@c+1)^0,w,c
  5351  002AF4  6E42               	movwf	(xtoa@c+1)^0,c
  5352  002AF6  EF83  F015         	goto	l1431
  5353  002AFA                     l4944:
  5354  002AFA  0E30               	movlw	48
  5355  002AFC  2441               	addwf	xtoa@c^0,w,c
  5356  002AFE  6E41               	movwf	xtoa@c^0,c
  5357  002B00  0E00               	movlw	0
  5358  002B02  2042               	addwfc	(xtoa@c+1)^0,w,c
  5359  002B04  6E42               	movwf	(xtoa@c+1)^0,c
  5360  002B06                     l1431:
  5361  002B06  0EBF               	movlw	191
  5362  002B08  6E27               	movwf	??_xtoa^0,c
  5363  002B0A  0EFF               	movlw	255
  5364  002B0C  6E28               	movwf	(??_xtoa+1)^0,c
  5365  002B0E  5026               	movf	xtoa@x^0,w,c
  5366  002B10  6E29               	movwf	(??_xtoa+2)^0,c
  5367  002B12  6A2A               	clrf	(??_xtoa+3)^0,c
  5368  002B14  5027               	movf	??_xtoa^0,w,c
  5369  002B16  2629               	addwf	(??_xtoa+2)^0,f,c
  5370  002B18  5028               	movf	(??_xtoa+1)^0,w,c
  5371  002B1A  222A               	addwfc	(??_xtoa+3)^0,f,c
  5372  002B1C  502A               	movf	(??_xtoa+3)^0,w,c
  5373  002B1E  E10A               	bnz	u5260
  5374  002B20  0E1A               	movlw	26
  5375  002B22  5C29               	subwf	(??_xtoa+2)^0,w,c
  5376  002B24  A0D8               	btfss	status,0,c
  5377  002B26  EF97  F015         	goto	u5261
  5378  002B2A  EF9A  F015         	goto	u5260
  5379  002B2E                     u5261:
  5380  002B2E  0E01               	movlw	1
  5381  002B30  EF9B  F015         	goto	u5270
  5382  002B34                     u5260:
  5383  002B34  0E00               	movlw	0
  5384  002B36                     u5270:
  5385  002B36  6E2F               	movwf	_xtoa$1523^0,c
  5386  002B38  6A30               	clrf	(_xtoa$1523+1)^0,c
  5387  002B3A  502F               	movf	_xtoa$1523^0,w,c
  5388  002B3C  1030               	iorwf	(_xtoa$1523+1)^0,w,c
  5389  002B3E  B4D8               	btfsc	status,2,c
  5390  002B40  EFA4  F015         	goto	u5281
  5391  002B44  EFA6  F015         	goto	u5280
  5392  002B48                     u5281:
  5393  002B48  EFD6  F015         	goto	l4958
  5394  002B4C                     u5280:
  5395  002B4C  0E9F               	movlw	159
  5396  002B4E  6E27               	movwf	??_xtoa^0,c
  5397  002B50  0EFF               	movlw	255
  5398  002B52  6E28               	movwf	(??_xtoa+1)^0,c
  5399  002B54  0E20               	movlw	32
  5400  002B56  1041               	iorwf	xtoa@c^0,w,c
  5401  002B58  6E29               	movwf	(??_xtoa+2)^0,c
  5402  002B5A  0E00               	movlw	0
  5403  002B5C  1042               	iorwf	(xtoa@c+1)^0,w,c
  5404  002B5E  6E2A               	movwf	(??_xtoa+3)^0,c
  5405  002B60  5027               	movf	??_xtoa^0,w,c
  5406  002B62  2629               	addwf	(??_xtoa+2)^0,f,c
  5407  002B64  5028               	movf	(??_xtoa+1)^0,w,c
  5408  002B66  222A               	addwfc	(??_xtoa+3)^0,f,c
  5409  002B68  502A               	movf	(??_xtoa+3)^0,w,c
  5410  002B6A  E10A               	bnz	u5290
  5411  002B6C  0E1A               	movlw	26
  5412  002B6E  5C29               	subwf	(??_xtoa+2)^0,w,c
  5413  002B70  A0D8               	btfss	status,0,c
  5414  002B72  EFBD  F015         	goto	u5291
  5415  002B76  EFC0  F015         	goto	u5290
  5416  002B7A                     u5291:
  5417  002B7A  0E01               	movlw	1
  5418  002B7C  EFC1  F015         	goto	u5300
  5419  002B80                     u5290:
  5420  002B80  0E00               	movlw	0
  5421  002B82                     u5300:
  5422  002B82  6E31               	movwf	_xtoa$1524^0,c
  5423  002B84  6A32               	clrf	(_xtoa$1524+1)^0,c
  5424  002B86  5031               	movf	_xtoa$1524^0,w,c
  5425  002B88  1032               	iorwf	(_xtoa$1524+1)^0,w,c
  5426  002B8A  B4D8               	btfsc	status,2,c
  5427  002B8C  EFCA  F015         	goto	u5311
  5428  002B90  EFCC  F015         	goto	u5310
  5429  002B94                     u5311:
  5430  002B94  EFD6  F015         	goto	l4958
  5431  002B98                     u5310:
  5432  002B98                     
  5433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5434  002B98  C041  F007         	movff	xtoa@c,toupper@c
  5435  002B9C  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5436  002BA0  EC28  F021         	call	_toupper	;wreg free
  5437  002BA4  C007  F041         	movff	?_toupper,xtoa@c
  5438  002BA8  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5439  002BAC                     l4958:
  5440                           
  5441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5442  002BAC  0E0E               	movlw	low _dbuf
  5443  002BAE  243F               	addwf	xtoa@i^0,w,c
  5444  002BB0  6ED9               	movwf	fsr2l,c
  5445  002BB2  0E01               	movlw	high _dbuf
  5446  002BB4  2040               	addwfc	(xtoa@i+1)^0,w,c
  5447  002BB6  6EDA               	movwf	fsr2h,c
  5448  002BB8  C041  FFDF         	movff	xtoa@c,indf2
  5449  002BBC                     
  5450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  5451  002BBC  0633               	decf	xtoa@p^0,f,c
  5452  002BBE  A0D8               	btfss	status,0,c
  5453  002BC0  0634               	decf	(xtoa@p+1)^0,f,c
  5454  002BC2                     
  5455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  5456  002BC2  0635               	decf	xtoa@w^0,f,c
  5457  002BC4  A0D8               	btfss	status,0,c
  5458  002BC6  0636               	decf	(xtoa@w+1)^0,f,c
  5459  002BC8                     
  5460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5461  002BC8  C037  F027         	movff	xtoa@n,??_xtoa
  5462  002BCC  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5463  002BD0  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5464  002BD4  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5465  002BD8  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5466  002BDC  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5467  002BE0  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5468  002BE4  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5469  002BE8  0E05               	movlw	5
  5470  002BEA  EF00  F016         	goto	u5320
  5471  002BEE                     u5325:
  5472  002BEE  90D8               	bcf	status,0,c
  5473  002BF0  322E               	rrcf	(??_xtoa+7)^0,f,c
  5474  002BF2  322D               	rrcf	(??_xtoa+6)^0,f,c
  5475  002BF4  322C               	rrcf	(??_xtoa+5)^0,f,c
  5476  002BF6  322B               	rrcf	(??_xtoa+4)^0,f,c
  5477  002BF8  322A               	rrcf	(??_xtoa+3)^0,f,c
  5478  002BFA  3229               	rrcf	(??_xtoa+2)^0,f,c
  5479  002BFC  3228               	rrcf	(??_xtoa+1)^0,f,c
  5480  002BFE  3227               	rrcf	??_xtoa^0,f,c
  5481  002C00                     u5320:
  5482  002C00  2EE8               	decfsz	wreg,f,c
  5483  002C02  EFF7  F015         	goto	u5325
  5484  002C06  C027  F037         	movff	??_xtoa,xtoa@n
  5485  002C0A  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5486  002C0E  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5487  002C12  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5488  002C16  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5489  002C1A  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5490  002C1E  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5491  002C22  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5492  002C26                     l4966:
  5493                           
  5494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5495  002C26  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5496  002C28  EF1F  F016         	goto	u5331
  5497  002C2C  5040               	movf	(xtoa@i+1)^0,w,c
  5498  002C2E  E109               	bnz	u5330
  5499  002C30  0E02               	movlw	2
  5500  002C32  5C3F               	subwf	xtoa@i^0,w,c
  5501  002C34  A0D8               	btfss	status,0,c
  5502  002C36  EF1F  F016         	goto	u5331
  5503  002C3A  EF21  F016         	goto	u5330
  5504  002C3E                     u5331:
  5505  002C3E  EF52  F016         	goto	l1445
  5506  002C42                     u5330:
  5507  002C42  5037               	movf	xtoa@n^0,w,c
  5508  002C44  1038               	iorwf	(xtoa@n+1)^0,w,c
  5509  002C46  1039               	iorwf	(xtoa@n+2)^0,w,c
  5510  002C48  103A               	iorwf	(xtoa@n+3)^0,w,c
  5511  002C4A  103B               	iorwf	(xtoa@n+4)^0,w,c
  5512  002C4C  103C               	iorwf	(xtoa@n+5)^0,w,c
  5513  002C4E  103D               	iorwf	(xtoa@n+6)^0,w,c
  5514  002C50  103E               	iorwf	(xtoa@n+7)^0,w,c
  5515  002C52  A4D8               	btfss	status,2,c
  5516  002C54  EF2E  F016         	goto	u5341
  5517  002C58  EF30  F016         	goto	u5340
  5518  002C5C                     u5341:
  5519  002C5C  EF60  F015         	goto	l4936
  5520  002C60                     u5340:
  5521  002C60  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5522  002C62  EF3D  F016         	goto	u5350
  5523  002C66  5034               	movf	(xtoa@p+1)^0,w,c
  5524  002C68  E106               	bnz	u5351
  5525  002C6A  0433               	decf	xtoa@p^0,w,c
  5526  002C6C  B0D8               	btfsc	status,0,c
  5527  002C6E  EF3B  F016         	goto	u5351
  5528  002C72  EF3D  F016         	goto	u5350
  5529  002C76                     u5351:
  5530  002C76  EF60  F015         	goto	l4936
  5531  002C7A                     u5350:
  5532  002C7A  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5533  002C7C  EF48  F016         	goto	u5361
  5534  002C80  5036               	movf	(xtoa@w+1)^0,w,c
  5535  002C82  E108               	bnz	u5360
  5536  002C84  0435               	decf	xtoa@w^0,w,c
  5537  002C86  A0D8               	btfss	status,0,c
  5538  002C88  EF48  F016         	goto	u5361
  5539  002C8C  EF4A  F016         	goto	u5360
  5540  002C90                     u5361:
  5541  002C90  EF52  F016         	goto	l1445
  5542  002C94                     u5360:
  5543  002C94  0100               	movlb	0	; () banked
  5544  002C96  B3F8               	btfsc	_flags& (0+255),1,b
  5545  002C98  EF50  F016         	goto	u5371
  5546  002C9C  EF52  F016         	goto	u5370
  5547  002CA0                     u5371:
  5548  002CA0  EF60  F015         	goto	l4936
  5549  002CA4                     u5370:
  5550  002CA4                     l1445:
  5551                           
  5552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5553  002CA4  0100               	movlb	0	; () banked
  5554  002CA6  A9F8               	btfss	_flags& (0+255),4,b
  5555  002CA8  EF58  F016         	goto	u5381
  5556  002CAC  EF5A  F016         	goto	u5380
  5557  002CB0                     u5381:
  5558  002CB0  EF70  F016         	goto	l4982
  5559  002CB4                     u5380:
  5560  002CB4                     
  5561                           ; BSR set to: 0
  5562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  5563  002CB4  063F               	decf	xtoa@i^0,f,c
  5564  002CB6  A0D8               	btfss	status,0,c
  5565  002CB8  0640               	decf	(xtoa@i+1)^0,f,c
  5566  002CBA                     
  5567                           ; BSR set to: 0
  5568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5569  002CBA  0E0E               	movlw	low _dbuf
  5570  002CBC  243F               	addwf	xtoa@i^0,w,c
  5571  002CBE  6ED9               	movwf	fsr2l,c
  5572  002CC0  0E01               	movlw	high _dbuf
  5573  002CC2  2040               	addwfc	(xtoa@i+1)^0,w,c
  5574  002CC4  6EDA               	movwf	fsr2h,c
  5575  002CC6  C026  FFDF         	movff	xtoa@x,indf2
  5576  002CCA                     
  5577                           ; BSR set to: 0
  5578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  5579  002CCA  063F               	decf	xtoa@i^0,f,c
  5580  002CCC  A0D8               	btfss	status,0,c
  5581  002CCE  0640               	decf	(xtoa@i+1)^0,f,c
  5582                           
  5583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5584  002CD0  0E0E               	movlw	low _dbuf
  5585  002CD2  243F               	addwf	xtoa@i^0,w,c
  5586  002CD4  6ED9               	movwf	fsr2l,c
  5587  002CD6  0E01               	movlw	high _dbuf
  5588  002CD8  2040               	addwfc	(xtoa@i+1)^0,w,c
  5589  002CDA  6EDA               	movwf	fsr2h,c
  5590  002CDC  0E30               	movlw	48
  5591  002CDE  6EDF               	movwf	indf2,c
  5592  002CE0                     l4982:
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5596  002CE0  C01C  F011         	movff	xtoa@fp,pad@fp
  5597  002CE4  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5598  002CE8  0E0E               	movlw	low _dbuf
  5599  002CEA  243F               	addwf	xtoa@i^0,w,c
  5600  002CEC  6E13               	movwf	pad@buf^0,c
  5601  002CEE  0E01               	movlw	high _dbuf
  5602  002CF0  2040               	addwfc	(xtoa@i+1)^0,w,c
  5603  002CF2  6E14               	movwf	(pad@buf+1)^0,c
  5604  002CF4  C035  F015         	movff	xtoa@w,pad@p
  5605  002CF8  C036  F016         	movff	xtoa@w+1,pad@p+1
  5606  002CFC  ECEE  F01D         	call	_pad	;wreg free
  5607  002D00  C011  F01C         	movff	?_pad,?_xtoa
  5608  002D04  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5609  002D08  0012               	return		;funcret
  5610  002D0A                     __end_of_xtoa:
  5611                           	callstack 0
  5612                           
  5613 ;; *************** function _toupper *****************
  5614 ;; Defined at:
  5615 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  c               2    6[COMRAM] int 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  2    6[COMRAM] int 
  5622 ;; Registers used:
  5623 ;;		wreg, status,2, status,0
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5629 ;;      Params:         2       0       0       0       0       0       0       0       0
  5630 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5631 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5632 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5633 ;;Total ram usage:        8 bytes
  5634 ;; Hardware stack levels used: 1
  5635 ;; Hardware stack levels required when called: 1
  5636 ;; This function calls:
  5637 ;;		_islower
  5638 ;; This function is called by:
  5639 ;;		_xtoa
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text27
  5644  004250                     __ptext27:
  5645                           	callstack 0
  5646  004250                     _toupper:
  5647                           	callstack 24
  5648  004250  0E9F               	movlw	159
  5649  004252  6E09               	movwf	??_toupper^0,c
  5650  004254  0EFF               	movlw	255
  5651  004256  6E0A               	movwf	(??_toupper+1)^0,c
  5652  004258  C007  F00B         	movff	toupper@c,??_toupper+2
  5653  00425C  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5654  004260  5009               	movf	??_toupper^0,w,c
  5655  004262  260B               	addwf	(??_toupper+2)^0,f,c
  5656  004264  500A               	movf	(??_toupper+1)^0,w,c
  5657  004266  220C               	addwfc	(??_toupper+3)^0,f,c
  5658  004268  500C               	movf	(??_toupper+3)^0,w,c
  5659  00426A  E10A               	bnz	u4580
  5660  00426C  0E1A               	movlw	26
  5661  00426E  5C0B               	subwf	(??_toupper+2)^0,w,c
  5662  004270  A0D8               	btfss	status,0,c
  5663  004272  EF3D  F021         	goto	u4581
  5664  004276  EF40  F021         	goto	u4580
  5665  00427A                     u4581:
  5666  00427A  0E01               	movlw	1
  5667  00427C  EF41  F021         	goto	u4590
  5668  004280                     u4580:
  5669  004280  0E00               	movlw	0
  5670  004282                     u4590:
  5671  004282  6E0D               	movwf	_toupper$1696^0,c
  5672  004284  6A0E               	clrf	(_toupper$1696+1)^0,c
  5673  004286  500D               	movf	_toupper$1696^0,w,c
  5674  004288  100E               	iorwf	(_toupper$1696+1)^0,w,c
  5675  00428A  B4D8               	btfsc	status,2,c
  5676  00428C  EF4A  F021         	goto	u4601
  5677  004290  EF4C  F021         	goto	u4600
  5678  004294                     u4601:
  5679  004294  EF52  F021         	goto	l1636
  5680  004298                     u4600:
  5681  004298  0E5F               	movlw	95
  5682  00429A  1407               	andwf	toupper@c^0,w,c
  5683  00429C  6E07               	movwf	?_toupper^0,c
  5684  00429E  6A08               	clrf	(?_toupper+1)^0,c
  5685  0042A0  EF56  F021         	goto	l1641
  5686  0042A4                     l1636:
  5687  0042A4  C007  F007         	movff	toupper@c,?_toupper
  5688  0042A8  C008  F008         	movff	toupper@c+1,?_toupper+1
  5689  0042AC                     l1641:
  5690  0042AC  0012               	return		;funcret
  5691  0042AE                     __end_of_toupper:
  5692                           	callstack 0
  5693                           
  5694 ;; *************** function _islower *****************
  5695 ;; Defined at:
  5696 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  c               2    0[COMRAM] int 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  2    0[COMRAM] int 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5710 ;;      Params:         2       0       0       0       0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5712 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5713 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5714 ;;Total ram usage:        6 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_toupper
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text28
  5724  00481A                     __ptext28:
  5725                           	callstack 0
  5726  00481A                     _islower:
  5727                           	callstack 24
  5728  00481A  0E9F               	movlw	159
  5729  00481C  6E03               	movwf	??_islower^0,c
  5730  00481E  0EFF               	movlw	255
  5731  004820  6E04               	movwf	(??_islower+1)^0,c
  5732  004822  C001  F005         	movff	islower@c,??_islower+2
  5733  004826  C002  F006         	movff	islower@c+1,??_islower+3
  5734  00482A  5003               	movf	??_islower^0,w,c
  5735  00482C  2605               	addwf	(??_islower+2)^0,f,c
  5736  00482E  5004               	movf	(??_islower+1)^0,w,c
  5737  004830  2206               	addwfc	(??_islower+3)^0,f,c
  5738  004832  5006               	movf	(??_islower+3)^0,w,c
  5739  004834  E10A               	bnz	u3580
  5740  004836  0E1A               	movlw	26
  5741  004838  5C05               	subwf	(??_islower+2)^0,w,c
  5742  00483A  A0D8               	btfss	status,0,c
  5743  00483C  EF22  F024         	goto	u3581
  5744  004840  EF25  F024         	goto	u3580
  5745  004844                     u3581:
  5746  004844  0E01               	movlw	1
  5747  004846  EF26  F024         	goto	u3590
  5748  00484A                     u3580:
  5749  00484A  0E00               	movlw	0
  5750  00484C                     u3590:
  5751  00484C  6E01               	movwf	?_islower^0,c
  5752  00484E  6A02               	clrf	(?_islower+1)^0,c
  5753  004850  0012               	return		;funcret
  5754  004852                     __end_of_islower:
  5755                           	callstack 0
  5756                           
  5757 ;; *************** function _isalpha *****************
  5758 ;; Defined at:
  5759 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  c               2    0[COMRAM] int 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;		None
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  2    0[COMRAM] int 
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5773 ;;      Params:         2       0       0       0       0       0       0       0       0
  5774 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5775 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5776 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5777 ;;Total ram usage:        6 bytes
  5778 ;; Hardware stack levels used: 1
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_xtoa
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text29
  5787  0047A4                     __ptext29:
  5788                           	callstack 0
  5789  0047A4                     _isalpha:
  5790                           	callstack 25
  5791  0047A4  0E9F               	movlw	159
  5792  0047A6  6E03               	movwf	??_isalpha^0,c
  5793  0047A8  0EFF               	movlw	255
  5794  0047AA  6E04               	movwf	(??_isalpha+1)^0,c
  5795  0047AC  0E20               	movlw	32
  5796  0047AE  1001               	iorwf	isalpha@c^0,w,c
  5797  0047B0  6E05               	movwf	(??_isalpha+2)^0,c
  5798  0047B2  0E00               	movlw	0
  5799  0047B4  1002               	iorwf	(isalpha@c+1)^0,w,c
  5800  0047B6  6E06               	movwf	(??_isalpha+3)^0,c
  5801  0047B8  5003               	movf	??_isalpha^0,w,c
  5802  0047BA  2605               	addwf	(??_isalpha+2)^0,f,c
  5803  0047BC  5004               	movf	(??_isalpha+1)^0,w,c
  5804  0047BE  2206               	addwfc	(??_isalpha+3)^0,f,c
  5805  0047C0  5006               	movf	(??_isalpha+3)^0,w,c
  5806  0047C2  E10A               	bnz	u4560
  5807  0047C4  0E1A               	movlw	26
  5808  0047C6  5C05               	subwf	(??_isalpha+2)^0,w,c
  5809  0047C8  A0D8               	btfss	status,0,c
  5810  0047CA  EFE9  F023         	goto	u4561
  5811  0047CE  EFEC  F023         	goto	u4560
  5812  0047D2                     u4561:
  5813  0047D2  0E01               	movlw	1
  5814  0047D4  EFED  F023         	goto	u4570
  5815  0047D8                     u4560:
  5816  0047D8  0E00               	movlw	0
  5817  0047DA                     u4570:
  5818  0047DA  6E01               	movwf	?_isalpha^0,c
  5819  0047DC  6A02               	clrf	(?_isalpha+1)^0,c
  5820  0047DE  0012               	return		;funcret
  5821  0047E0                     __end_of_isalpha:
  5822                           	callstack 0
  5823                           
  5824 ;; *************** function _strncmp *****************
  5825 ;; Defined at:
  5826 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5829 ;;		 -> vfpfcnvrt@ct(3), 
  5830 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5831 ;;		 -> STR_33(3), 
  5832 ;;  n               2    4[COMRAM] unsigned int 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5835 ;;		 -> STR_33(3), 
  5836 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5837 ;;		 -> vfpfcnvrt@ct(3), 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  2    0[COMRAM] int 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5847 ;;      Params:         6       0       0       0       0       0       0       0       0
  5848 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5849 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5850 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5851 ;;Total ram usage:       11 bytes
  5852 ;; Hardware stack levels used: 1
  5853 ;; This function calls:
  5854 ;;		Nothing
  5855 ;; This function is called by:
  5856 ;;		_vfpfcnvrt
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text30
  5861  003A3C                     __ptext30:
  5862                           	callstack 0
  5863  003A3C                     _strncmp:
  5864                           	callstack 26
  5865  003A3C  C001  F008         	movff	strncmp@_l,strncmp@l
  5866  003A40  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5867  003A44  C003  F00A         	movff	strncmp@_r,strncmp@r
  5868  003A48  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5869  003A4C  0605               	decf	strncmp@n^0,f,c
  5870  003A4E  A0D8               	btfss	status,0,c
  5871  003A50  0606               	decf	(strncmp@n+1)^0,f,c
  5872  003A52  2805               	incf	strncmp@n^0,w,c
  5873  003A54  E106               	bnz	u5461
  5874  003A56  2806               	incf	(strncmp@n+1)^0,w,c
  5875  003A58  A4D8               	btfss	status,2,c
  5876  003A5A  EF31  F01D         	goto	u5461
  5877  003A5E  EF33  F01D         	goto	u5460
  5878  003A62                     u5461:
  5879  003A62  EF40  F01D         	goto	l5036
  5880  003A66                     u5460:
  5881  003A66  0E00               	movlw	0
  5882  003A68  6E02               	movwf	(?_strncmp+1)^0,c
  5883  003A6A  0E00               	movlw	0
  5884  003A6C  6E01               	movwf	?_strncmp^0,c
  5885  003A6E  EF88  F01D         	goto	l1613
  5886  003A72                     l5034:
  5887  003A72  4A08               	infsnz	strncmp@l^0,f,c
  5888  003A74  2A09               	incf	(strncmp@l+1)^0,f,c
  5889  003A76  4A0A               	infsnz	strncmp@r^0,f,c
  5890  003A78  2A0B               	incf	(strncmp@r+1)^0,f,c
  5891  003A7A  0605               	decf	strncmp@n^0,f,c
  5892  003A7C  A0D8               	btfss	status,0,c
  5893  003A7E  0606               	decf	(strncmp@n+1)^0,f,c
  5894  003A80                     l5036:
  5895  003A80  C008  FFD9         	movff	strncmp@l,fsr2l
  5896  003A84  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5897  003A88  50DF               	movf	indf2,w,c
  5898  003A8A  B4D8               	btfsc	status,2,c
  5899  003A8C  EF4A  F01D         	goto	u5471
  5900  003A90  EF4C  F01D         	goto	u5470
  5901  003A94                     u5471:
  5902  003A94  EF77  F01D         	goto	l5044
  5903  003A98                     u5470:
  5904  003A98  C00A  FFF6         	movff	strncmp@r,tblptrl
  5905  003A9C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5906  003AA0                     	if	0	;tblptru may be non-zero
  5907  003AA0                     	endif
  5908  003AA0                     	if	0	;tblptru may be non-zero
  5909  003AA0                     	endif
  5910  003AA0  0008               	tblrd		*
  5911  003AA2  50F5               	movf	tablat,w,c
  5912  003AA4  0900               	iorlw	0
  5913  003AA6  B4D8               	btfsc	status,2,c
  5914  003AA8  EF58  F01D         	goto	u5481
  5915  003AAC  EF5A  F01D         	goto	u5480
  5916  003AB0                     u5481:
  5917  003AB0  EF77  F01D         	goto	l5044
  5918  003AB4                     u5480:
  5919  003AB4  5005               	movf	strncmp@n^0,w,c
  5920  003AB6  1006               	iorwf	(strncmp@n+1)^0,w,c
  5921  003AB8  B4D8               	btfsc	status,2,c
  5922  003ABA  EF61  F01D         	goto	u5491
  5923  003ABE  EF63  F01D         	goto	u5490
  5924  003AC2                     u5491:
  5925  003AC2  EF77  F01D         	goto	l5044
  5926  003AC6                     u5490:
  5927  003AC6  C008  FFD9         	movff	strncmp@l,fsr2l
  5928  003ACA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5929  003ACE  50DF               	movf	indf2,w,c
  5930  003AD0  6E07               	movwf	??_strncmp^0,c
  5931  003AD2  C00A  FFF6         	movff	strncmp@r,tblptrl
  5932  003AD6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5933  003ADA                     	if	0	;tblptru may be non-zero
  5934  003ADA                     	endif
  5935  003ADA                     	if	0	;tblptru may be non-zero
  5936  003ADA                     	endif
  5937  003ADA  0008               	tblrd		*
  5938  003ADC  50F5               	movf	tablat,w,c
  5939  003ADE  1807               	xorwf	??_strncmp^0,w,c
  5940  003AE0  B4D8               	btfsc	status,2,c
  5941  003AE2  EF75  F01D         	goto	u5501
  5942  003AE6  EF77  F01D         	goto	u5500
  5943  003AEA                     u5501:
  5944  003AEA  EF39  F01D         	goto	l5034
  5945  003AEE                     u5500:
  5946  003AEE                     l5044:
  5947  003AEE  C008  FFD9         	movff	strncmp@l,fsr2l
  5948  003AF2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5949  003AF6  50DF               	movf	indf2,w,c
  5950  003AF8  6E07               	movwf	??_strncmp^0,c
  5951  003AFA  C00A  FFF6         	movff	strncmp@r,tblptrl
  5952  003AFE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5953  003B02                     	if	0	;tblptru may be non-zero
  5954  003B02                     	endif
  5955  003B02                     	if	0	;tblptru may be non-zero
  5956  003B02                     	endif
  5957  003B02  0008               	tblrd		*
  5958  003B04  50F5               	movf	tablat,w,c
  5959  003B06  5C07               	subwf	??_strncmp^0,w,c
  5960  003B08  6E01               	movwf	?_strncmp^0,c
  5961  003B0A  6A02               	clrf	(?_strncmp+1)^0,c
  5962  003B0C  A0D8               	btfss	status,0,c
  5963  003B0E  0602               	decf	(?_strncmp+1)^0,f,c
  5964  003B10                     l1613:
  5965  003B10  0012               	return		;funcret
  5966  003B12                     __end_of_strncmp:
  5967                           	callstack 0
  5968                           
  5969 ;; *************** function _efgtoa *****************
  5970 ;; Defined at:
  5971 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  5974 ;;		 -> sprintf@f(6), 
  5975 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  5976 ;;  c               1    6[BANK0 ] unsigned char 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  u               4   64[BANK0 ] unsigned char 
  5979 ;;  g               4   56[BANK0 ] unsigned char 
  5980 ;;  l               4   50[BANK0 ] unsigned char 
  5981 ;;  h               4   46[BANK0 ] unsigned char 
  5982 ;;  ou              4   32[BANK0 ] unsigned char 
  5983 ;;  n               2   62[BANK0 ] int 
  5984 ;;  e               2   60[BANK0 ] int 
  5985 ;;  i               2   54[BANK0 ] int 
  5986 ;;  w               2   42[BANK0 ] int 
  5987 ;;  p               2   40[BANK0 ] int 
  5988 ;;  sign            2   38[BANK0 ] int 
  5989 ;;  d               2   36[BANK0 ] int 
  5990 ;;  m               2   30[BANK0 ] int 
  5991 ;;  ne              2   28[BANK0 ] int 
  5992 ;;  pp              2   26[BANK0 ] int 
  5993 ;;  t               2   24[BANK0 ] int 
  5994 ;;  mode            1   45[BANK0 ] unsigned char 
  5995 ;;  nmode           1   44[BANK0 ] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  2    0[BANK0 ] int 
  5998 ;; Registers used:
  5999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6005 ;;      Params:         0       7       0       0       0       0       0       0       0
  6006 ;;      Locals:         0      56       0       0       0       0       0       0       0
  6007 ;;      Temps:          0       5       0       0       0       0       0       0       0
  6008 ;;      Totals:         0      68       0       0       0       0       0       0       0
  6009 ;;Total ram usage:       68 bytes
  6010 ;; Hardware stack levels used: 1
  6011 ;; Hardware stack levels required when called: 4
  6012 ;; This function calls:
  6013 ;;		___awdiv
  6014 ;;		___awmod
  6015 ;;		___fladd
  6016 ;;		___fldiv
  6017 ;;		___fleq
  6018 ;;		___flge
  6019 ;;		___flmul
  6020 ;;		___flneg
  6021 ;;		___flsub
  6022 ;;		___fltol
  6023 ;;		___fpclassifyf
  6024 ;;		_floorf
  6025 ;;		_isupper
  6026 ;;		_pad
  6027 ;;		_strcpy
  6028 ;;		_tolower
  6029 ;; This function is called by:
  6030 ;;		_vfpfcnvrt
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text31
  6035  000856                     __ptext31:
  6036                           	callstack 0
  6037  000856                     _efgtoa:
  6038                           	callstack 22
  6039  000856                     
  6040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  6041  000856  0E00               	movlw	0
  6042  000858  0100               	movlb	0	; () banked
  6043  00085A  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  6044  00085C  0E00               	movlw	0
  6045  00085E  6F86               	movwf	efgtoa@sign& (0+255),b
  6046  000860                     
  6047                           ; BSR set to: 0
  6048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  6049  000860  C062  F098         	movff	efgtoa@f,efgtoa@g
  6050  000864  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  6051  000868  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  6052  00086C  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  6053  000870                     
  6054                           ; BSR set to: 0
  6055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  6056  000870  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6057  000872  EF3F  F004         	goto	u4680
  6058  000876  EF3D  F004         	goto	u4681
  6059  00087A                     u4681:
  6060  00087A  EF55  F004         	goto	l4622
  6061  00087E                     u4680:
  6062  00087E                     
  6063                           ; BSR set to: 0
  6064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  6065  00087E  0E00               	movlw	0
  6066  000880  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  6067  000882  0E01               	movlw	1
  6068  000884  6F86               	movwf	efgtoa@sign& (0+255),b
  6069  000886                     
  6070                           ; BSR set to: 0
  6071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  6072  000886  C098  F001         	movff	efgtoa@g,___flneg@f1
  6073  00088A  C099  F002         	movff	efgtoa@g+1,___flneg@f1+1
  6074  00088E  C09A  F003         	movff	efgtoa@g+2,___flneg@f1+2
  6075  000892  C09B  F004         	movff	efgtoa@g+3,___flneg@f1+3
  6076  000896  EC45  F024         	call	___flneg	;wreg free
  6077  00089A  C001  F098         	movff	?___flneg,efgtoa@g
  6078  00089E  C002  F099         	movff	?___flneg+1,efgtoa@g+1
  6079  0008A2  C003  F09A         	movff	?___flneg+2,efgtoa@g+2
  6080  0008A6  C004  F09B         	movff	?___flneg+3,efgtoa@g+3
  6081  0008AA                     l4622:
  6082                           
  6083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  6084  0008AA  0E00               	movlw	0
  6085  0008AC  0100               	movlb	0	; () banked
  6086  0008AE  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  6087  0008B0  0E00               	movlw	0
  6088  0008B2  6F9E               	movwf	efgtoa@n& (0+255),b
  6089  0008B4                     
  6090                           ; BSR set to: 0
  6091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  6092  0008B4  C0F4  F08A         	movff	_width,efgtoa@w
  6093  0008B8  C0F5  F08B         	movff	_width+1,efgtoa@w+1
  6094  0008BC                     
  6095                           ; BSR set to: 0
  6096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  6097  0008BC  5186               	movf	efgtoa@sign& (0+255),w,b
  6098  0008BE  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6099  0008C0  A4D8               	btfss	status,2,c
  6100  0008C2  EF65  F004         	goto	u4691
  6101  0008C6  EF67  F004         	goto	u4690
  6102  0008CA                     u4691:
  6103  0008CA  EF6E  F004         	goto	l4630
  6104  0008CE                     u4690:
  6105  0008CE                     
  6106                           ; BSR set to: 0
  6107  0008CE  A5F8               	btfss	_flags& (0+255),2,b
  6108  0008D0  EF6C  F004         	goto	u4701
  6109  0008D4  EF6E  F004         	goto	u4700
  6110  0008D8                     u4701:
  6111  0008D8  EF88  F004         	goto	l4642
  6112  0008DC                     u4700:
  6113  0008DC                     l4630:
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  6117  0008DC  5186               	movf	efgtoa@sign& (0+255),w,b
  6118  0008DE  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6119  0008E0  A4D8               	btfss	status,2,c
  6120  0008E2  EF75  F004         	goto	u4711
  6121  0008E6  EF77  F004         	goto	u4710
  6122  0008EA                     u4711:
  6123  0008EA  EF7D  F004         	goto	l4634
  6124  0008EE                     u4710:
  6125  0008EE                     
  6126                           ; BSR set to: 0
  6127  0008EE  0E00               	movlw	0
  6128  0008F0  6F6D               	movwf	(_efgtoa$1501+1)& (0+255),b
  6129  0008F2  0E2B               	movlw	43
  6130  0008F4  6F6C               	movwf	_efgtoa$1501& (0+255),b
  6131  0008F6  EF81  F004         	goto	l4636
  6132  0008FA                     l4634:
  6133                           
  6134                           ; BSR set to: 0
  6135  0008FA  0E00               	movlw	0
  6136  0008FC  6F6D               	movwf	(_efgtoa$1501+1)& (0+255),b
  6137  0008FE  0E2D               	movlw	45
  6138  000900  6F6C               	movwf	_efgtoa$1501& (0+255),b
  6139  000902                     l4636:
  6140                           
  6141                           ; BSR set to: 0
  6142  000902  C06C  F10E         	movff	_efgtoa$1501,_dbuf
  6143  000906                     
  6144                           ; BSR set to: 0
  6145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  6146  000906  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  6147  000908  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  6148  00090A                     
  6149                           ; BSR set to: 0
  6150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  6151  00090A  078A               	decf	efgtoa@w& (0+255),f,b
  6152  00090C  A0D8               	btfss	status,0,c
  6153  00090E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6154  000910                     l4642:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6158  000910  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  6159  000914  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6160  000918  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6161  00091C  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6162  000920  EC9F  F01C         	call	___fpclassifyf	;wreg free
  6163  000924  0401               	decf	?___fpclassifyf^0,w,c
  6164  000926  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6165  000928  A4D8               	btfss	status,2,c
  6166  00092A  EF99  F004         	goto	u4721
  6167  00092E  EF9B  F004         	goto	u4720
  6168  000932                     u4721:
  6169  000932  EFF2  F004         	goto	l4660
  6170  000936                     u4720:
  6171  000936  0EBF               	movlw	191
  6172  000938  0100               	movlb	0	; () banked
  6173  00093A  6F67               	movwf	??_efgtoa& (0+255),b
  6174  00093C  0EFF               	movlw	255
  6175  00093E  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6176  000940  5166               	movf	efgtoa@c& (0+255),w,b
  6177  000942  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  6178  000944  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  6179  000946  5167               	movf	??_efgtoa& (0+255),w,b
  6180  000948  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6181  00094A  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6182  00094C  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6183  00094E  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6184  000950  E10A               	bnz	u4730
  6185  000952  0E1A               	movlw	26
  6186  000954  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6187  000956  A0D8               	btfss	status,0,c
  6188  000958  EFB0  F004         	goto	u4731
  6189  00095C  EFB3  F004         	goto	u4730
  6190  000960                     u4731:
  6191  000960  0E01               	movlw	1
  6192  000962  EFB4  F004         	goto	u4740
  6193  000966                     u4730:
  6194  000966  0E00               	movlw	0
  6195  000968                     u4740:
  6196  000968  6F6E               	movwf	_efgtoa$1502& (0+255),b
  6197  00096A  6B6F               	clrf	(_efgtoa$1502+1)& (0+255),b
  6198  00096C                     
  6199                           ; BSR set to: 0
  6200  00096C  516E               	movf	_efgtoa$1502& (0+255),w,b
  6201  00096E  116F               	iorwf	(_efgtoa$1502+1)& (0+255),w,b
  6202  000970  B4D8               	btfsc	status,2,c
  6203  000972  EFBD  F004         	goto	u4751
  6204  000976  EFBF  F004         	goto	u4750
  6205  00097A                     u4751:
  6206  00097A  EFCD  F004         	goto	l4652
  6207  00097E                     u4750:
  6208  00097E                     
  6209                           ; BSR set to: 0
  6210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  6211  00097E  0E0E               	movlw	low _dbuf
  6212  000980  259E               	addwf	efgtoa@n& (0+255),w,b
  6213  000982  6E01               	movwf	strcpy@dest^0,c
  6214  000984  0E01               	movlw	high _dbuf
  6215  000986  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6216  000988  6E02               	movwf	(strcpy@dest+1)^0,c
  6217  00098A  0E14               	movlw	low STR_23
  6218  00098C  6E03               	movwf	strcpy@src^0,c
  6219  00098E  0E08               	movlw	high STR_23
  6220  000990  6E04               	movwf	(strcpy@src+1)^0,c
  6221  000992  EC86  F021         	call	_strcpy	;wreg free
  6222                           
  6223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  6224  000996  EFD9  F004         	goto	l4654
  6225  00099A                     l4652:
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  6229  00099A  0E0E               	movlw	low _dbuf
  6230  00099C  259E               	addwf	efgtoa@n& (0+255),w,b
  6231  00099E  6E01               	movwf	strcpy@dest^0,c
  6232  0009A0  0E01               	movlw	high _dbuf
  6233  0009A2  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6234  0009A4  6E02               	movwf	(strcpy@dest+1)^0,c
  6235  0009A6  0E1C               	movlw	low STR_24
  6236  0009A8  6E03               	movwf	strcpy@src^0,c
  6237  0009AA  0E08               	movlw	high STR_24
  6238  0009AC  6E04               	movwf	(strcpy@src+1)^0,c
  6239  0009AE  EC86  F021         	call	_strcpy	;wreg free
  6240  0009B2                     l4654:
  6241                           
  6242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6243  0009B2  0100               	movlb	0	; () banked
  6244  0009B4  0EFD               	movlw	253
  6245  0009B6  278A               	addwf	efgtoa@w& (0+255),f,b
  6246  0009B8  0EFF               	movlw	255
  6247  0009BA  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6248  0009BC                     l4656:
  6249                           
  6250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6251  0009BC  C060  F011         	movff	efgtoa@fp,pad@fp
  6252  0009C0  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  6253  0009C4  0E0E               	movlw	low _dbuf
  6254  0009C6  6E13               	movwf	pad@buf^0,c
  6255  0009C8  0E01               	movlw	high _dbuf
  6256  0009CA  6E14               	movwf	(pad@buf+1)^0,c
  6257  0009CC  C08A  F015         	movff	efgtoa@w,pad@p
  6258  0009D0  C08B  F016         	movff	efgtoa@w+1,pad@p+1
  6259  0009D4  ECEE  F01D         	call	_pad	;wreg free
  6260  0009D8  C011  F060         	movff	?_pad,?_efgtoa
  6261  0009DC  C012  F061         	movff	?_pad+1,?_efgtoa+1
  6262  0009E0  EF56  F00A         	goto	l1342
  6263  0009E4                     l4660:
  6264                           
  6265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6266  0009E4  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  6267  0009E8  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6268  0009EC  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6269  0009F0  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6270  0009F4  EC9F  F01C         	call	___fpclassifyf	;wreg free
  6271  0009F8  5001               	movf	?___fpclassifyf^0,w,c
  6272  0009FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6273  0009FC  A4D8               	btfss	status,2,c
  6274  0009FE  EF03  F005         	goto	u4761
  6275  000A02  EF05  F005         	goto	u4760
  6276  000A06                     u4761:
  6277  000A06  EF45  F005         	goto	l4678
  6278  000A0A                     u4760:
  6279  000A0A  0EBF               	movlw	191
  6280  000A0C  0100               	movlb	0	; () banked
  6281  000A0E  6F67               	movwf	??_efgtoa& (0+255),b
  6282  000A10  0EFF               	movlw	255
  6283  000A12  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6284  000A14  5166               	movf	efgtoa@c& (0+255),w,b
  6285  000A16  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  6286  000A18  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  6287  000A1A  5167               	movf	??_efgtoa& (0+255),w,b
  6288  000A1C  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6289  000A1E  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6290  000A20  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6291  000A22  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6292  000A24  E10A               	bnz	u4770
  6293  000A26  0E1A               	movlw	26
  6294  000A28  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6295  000A2A  A0D8               	btfss	status,0,c
  6296  000A2C  EF1A  F005         	goto	u4771
  6297  000A30  EF1D  F005         	goto	u4770
  6298  000A34                     u4771:
  6299  000A34  0E01               	movlw	1
  6300  000A36  EF1E  F005         	goto	u4780
  6301  000A3A                     u4770:
  6302  000A3A  0E00               	movlw	0
  6303  000A3C                     u4780:
  6304  000A3C  6F70               	movwf	_efgtoa$1507& (0+255),b
  6305  000A3E  6B71               	clrf	(_efgtoa$1507+1)& (0+255),b
  6306  000A40                     
  6307                           ; BSR set to: 0
  6308  000A40  5170               	movf	_efgtoa$1507& (0+255),w,b
  6309  000A42  1171               	iorwf	(_efgtoa$1507+1)& (0+255),w,b
  6310  000A44  B4D8               	btfsc	status,2,c
  6311  000A46  EF27  F005         	goto	u4791
  6312  000A4A  EF29  F005         	goto	u4790
  6313  000A4E                     u4791:
  6314  000A4E  EF37  F005         	goto	l4670
  6315  000A52                     u4790:
  6316  000A52                     
  6317                           ; BSR set to: 0
  6318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  6319  000A52  0E0E               	movlw	low _dbuf
  6320  000A54  259E               	addwf	efgtoa@n& (0+255),w,b
  6321  000A56  6E01               	movwf	strcpy@dest^0,c
  6322  000A58  0E01               	movlw	high _dbuf
  6323  000A5A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6324  000A5C  6E02               	movwf	(strcpy@dest+1)^0,c
  6325  000A5E  0E18               	movlw	low STR_27
  6326  000A60  6E03               	movwf	strcpy@src^0,c
  6327  000A62  0E08               	movlw	high STR_27
  6328  000A64  6E04               	movwf	(strcpy@src+1)^0,c
  6329  000A66  EC86  F021         	call	_strcpy	;wreg free
  6330                           
  6331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  6332  000A6A  EFD9  F004         	goto	l4654
  6333  000A6E                     l4670:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  6337  000A6E  0E0E               	movlw	low _dbuf
  6338  000A70  259E               	addwf	efgtoa@n& (0+255),w,b
  6339  000A72  6E01               	movwf	strcpy@dest^0,c
  6340  000A74  0E01               	movlw	high _dbuf
  6341  000A76  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6342  000A78  6E02               	movwf	(strcpy@dest+1)^0,c
  6343  000A7A  0E20               	movlw	low STR_28
  6344  000A7C  6E03               	movwf	strcpy@src^0,c
  6345  000A7E  0E08               	movlw	high STR_28
  6346  000A80  6E04               	movwf	(strcpy@src+1)^0,c
  6347  000A82  EC86  F021         	call	_strcpy	;wreg free
  6348  000A86  EFD9  F004         	goto	l4654
  6349  000A8A                     l4678:
  6350                           
  6351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  6352  000A8A  0E00               	movlw	0
  6353  000A8C  0100               	movlb	0	; () banked
  6354  000A8E  6FA0               	movwf	efgtoa@u& (0+255),b
  6355  000A90  0E00               	movlw	0
  6356  000A92  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  6357  000A94  0E80               	movlw	128
  6358  000A96  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  6359  000A98  0E3F               	movlw	63
  6360  000A9A  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  6361                           
  6362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  6363  000A9C  0E00               	movlw	0
  6364  000A9E  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  6365  000AA0  0E00               	movlw	0
  6366  000AA2  6F9C               	movwf	efgtoa@e& (0+255),b
  6367  000AA4                     
  6368                           ; BSR set to: 0
  6369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  6370  000AA4  C098  F001         	movff	efgtoa@g,___fleq@ff1
  6371  000AA8  C099  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  6372  000AAC  C09A  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  6373  000AB0  C09B  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  6374  000AB4  0E00               	movlw	0
  6375  000AB6  6E05               	movwf	___fleq@ff2^0,c
  6376  000AB8  0E00               	movlw	0
  6377  000ABA  6E06               	movwf	(___fleq@ff2+1)^0,c
  6378  000ABC  0E00               	movlw	0
  6379  000ABE  6E07               	movwf	(___fleq@ff2+2)^0,c
  6380  000AC0  0E00               	movlw	0
  6381  000AC2  6E08               	movwf	(___fleq@ff2+3)^0,c
  6382  000AC4  ECC5  F01F         	call	___fleq	;wreg free
  6383  000AC8  B0D8               	btfsc	status,0,c
  6384  000ACA  EF69  F005         	goto	u4801
  6385  000ACE  EF6B  F005         	goto	u4800
  6386  000AD2                     u4801:
  6387  000AD2  EFEE  F005         	goto	l4696
  6388  000AD6                     u4800:
  6389  000AD6  EF8A  F005         	goto	l4688
  6390  000ADA                     l4684:
  6391                           
  6392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  6393  000ADA  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6394  000ADE  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6395  000AE2  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6396  000AE6  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6397  000AEA  0E00               	movlw	0
  6398  000AEC  6E17               	movwf	___flmul@a^0,c
  6399  000AEE  0E00               	movlw	0
  6400  000AF0  6E18               	movwf	(___flmul@a+1)^0,c
  6401  000AF2  0E20               	movlw	32
  6402  000AF4  6E19               	movwf	(___flmul@a+2)^0,c
  6403  000AF6  0E41               	movlw	65
  6404  000AF8  6E1A               	movwf	(___flmul@a+3)^0,c
  6405  000AFA  ECBE  F00F         	call	___flmul	;wreg free
  6406  000AFE  C013  F0A0         	movff	?___flmul,efgtoa@u
  6407  000B02  C014  F0A1         	movff	?___flmul+1,efgtoa@u+1
  6408  000B06  C015  F0A2         	movff	?___flmul+2,efgtoa@u+2
  6409  000B0A  C016  F0A3         	movff	?___flmul+3,efgtoa@u+3
  6410  000B0E                     
  6411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  6412  000B0E  0100               	movlb	0	; () banked
  6413  000B10  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  6414  000B12  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  6415  000B14                     l4688:
  6416                           
  6417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  6418  000B14  C098  F02C         	movff	efgtoa@g,___flge@ff1
  6419  000B18  C099  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  6420  000B1C  C09A  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  6421  000B20  C09B  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  6422  000B24  0E00               	movlw	0
  6423  000B26  6E17               	movwf	___flmul@a^0,c
  6424  000B28  0E00               	movlw	0
  6425  000B2A  6E18               	movwf	(___flmul@a+1)^0,c
  6426  000B2C  0E20               	movlw	32
  6427  000B2E  6E19               	movwf	(___flmul@a+2)^0,c
  6428  000B30  0E41               	movlw	65
  6429  000B32  6E1A               	movwf	(___flmul@a+3)^0,c
  6430  000B34  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6431  000B38  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6432  000B3C  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6433  000B40  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6434  000B44  ECBE  F00F         	call	___flmul	;wreg free
  6435  000B48  C013  F030         	movff	?___flmul,___flge@ff2
  6436  000B4C  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  6437  000B50  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  6438  000B54  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  6439  000B58  EC9E  F01B         	call	___flge	;wreg free
  6440  000B5C  B0D8               	btfsc	status,0,c
  6441  000B5E  EFB3  F005         	goto	u4811
  6442  000B62  EFB5  F005         	goto	u4810
  6443  000B66                     u4811:
  6444  000B66  EF6D  F005         	goto	l4684
  6445  000B6A                     u4810:
  6446  000B6A  EFD5  F005         	goto	l4694
  6447  000B6E                     l4690:
  6448                           
  6449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  6450  000B6E  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  6451  000B72  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  6452  000B76  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  6453  000B7A  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  6454  000B7E  0E00               	movlw	0
  6455  000B80  6E30               	movwf	___fldiv@a^0,c
  6456  000B82  0E00               	movlw	0
  6457  000B84  6E31               	movwf	(___fldiv@a+1)^0,c
  6458  000B86  0E20               	movlw	32
  6459  000B88  6E32               	movwf	(___fldiv@a+2)^0,c
  6460  000B8A  0E41               	movlw	65
  6461  000B8C  6E33               	movwf	(___fldiv@a+3)^0,c
  6462  000B8E  ECD3  F011         	call	___fldiv	;wreg free
  6463  000B92  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  6464  000B96  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  6465  000B9A  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  6466  000B9E  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  6467  000BA2                     
  6468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  6469  000BA2  0100               	movlb	0	; () banked
  6470  000BA4  079C               	decf	efgtoa@e& (0+255),f,b
  6471  000BA6  A0D8               	btfss	status,0,c
  6472  000BA8  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  6473  000BAA                     l4694:
  6474                           
  6475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  6476  000BAA  C098  F02C         	movff	efgtoa@g,___flge@ff1
  6477  000BAE  C099  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  6478  000BB2  C09A  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  6479  000BB6  C09B  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  6480  000BBA  C0A0  F030         	movff	efgtoa@u,___flge@ff2
  6481  000BBE  C0A1  F031         	movff	efgtoa@u+1,___flge@ff2+1
  6482  000BC2  C0A2  F032         	movff	efgtoa@u+2,___flge@ff2+2
  6483  000BC6  C0A3  F033         	movff	efgtoa@u+3,___flge@ff2+3
  6484  000BCA  EC9E  F01B         	call	___flge	;wreg free
  6485  000BCE  A0D8               	btfss	status,0,c
  6486  000BD0  EFEC  F005         	goto	u4821
  6487  000BD4  EFEE  F005         	goto	u4820
  6488  000BD8                     u4821:
  6489  000BD8  EFB7  F005         	goto	l4690
  6490  000BDC                     u4820:
  6491  000BDC                     l4696:
  6492                           
  6493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  6494  000BDC  C066  F007         	movff	efgtoa@c,tolower@c
  6495  000BE0  6A08               	clrf	(tolower@c+1)^0,c
  6496  000BE2  ECC9  F020         	call	_tolower	;wreg free
  6497  000BE6  5007               	movf	?_tolower^0,w,c
  6498  000BE8  0100               	movlb	0	; () banked
  6499  000BEA  6F8D               	movwf	efgtoa@mode& (0+255),b
  6500  000BEC                     
  6501                           ; BSR set to: 0
  6502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  6503  000BEC  C08D  F08C         	movff	efgtoa@mode,efgtoa@nmode
  6504  000BF0                     
  6505                           ; BSR set to: 0
  6506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  6507  000BF0  0E67               	movlw	103
  6508  000BF2  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6509  000BF4  A4D8               	btfss	status,2,c
  6510  000BF6  EFFF  F005         	goto	u4831
  6511  000BFA  EF01  F006         	goto	u4830
  6512  000BFE                     u4831:
  6513  000BFE  EF27  F006         	goto	l4710
  6514  000C02                     u4830:
  6515  000C02                     
  6516                           ; BSR set to: 0
  6517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  6518  000C02  51F6               	movf	_prec& (0+255),w,b
  6519  000C04  11F7               	iorwf	(_prec+1)& (0+255),w,b
  6520  000C06  A4D8               	btfss	status,2,c
  6521  000C08  EF08  F006         	goto	u4841
  6522  000C0C  EF0A  F006         	goto	u4840
  6523  000C10                     u4841:
  6524  000C10  EF0E  F006         	goto	l4706
  6525  000C14                     u4840:
  6526  000C14                     
  6527                           ; BSR set to: 0
  6528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  6529  000C14  0E00               	movlw	0
  6530  000C16  6FF7               	movwf	(_prec+1)& (0+255),b
  6531  000C18  0E01               	movlw	1
  6532  000C1A  6FF6               	movwf	_prec& (0+255),b
  6533  000C1C                     l4706:
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  6537  000C1C  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6538  000C1E  EF1B  F006         	goto	u4850
  6539  000C22  51F7               	movf	(_prec+1)& (0+255),w,b
  6540  000C24  E106               	bnz	u4851
  6541  000C26  05F6               	decf	_prec& (0+255),w,b
  6542  000C28  B0D8               	btfsc	status,0,c
  6543  000C2A  EF19  F006         	goto	u4851
  6544  000C2E  EF1B  F006         	goto	u4850
  6545  000C32                     u4851:
  6546  000C32  EF21  F006         	goto	l1360
  6547  000C36                     u4850:
  6548  000C36                     l4708:
  6549                           
  6550                           ; BSR set to: 0
  6551  000C36  0E00               	movlw	0
  6552  000C38  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  6553  000C3A  0E06               	movlw	6
  6554  000C3C  6F88               	movwf	efgtoa@p& (0+255),b
  6555  000C3E  EF30  F006         	goto	l4716
  6556  000C42                     l1360:
  6557                           
  6558                           ; BSR set to: 0
  6559  000C42  C0F6  F088         	movff	_prec,efgtoa@p
  6560  000C46  C0F7  F089         	movff	_prec+1,efgtoa@p+1
  6561  000C4A  EF30  F006         	goto	l4716
  6562  000C4E                     l4710:
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  6566  000C4E  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6567  000C50  EF2C  F006         	goto	u4861
  6568  000C54  EF2E  F006         	goto	u4860
  6569  000C58                     u4861:
  6570  000C58  EF1B  F006         	goto	l4708
  6571  000C5C                     u4860:
  6572  000C5C  EF21  F006         	goto	l1360
  6573  000C60                     l4716:
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  6577  000C60  0E67               	movlw	103
  6578  000C62  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6579  000C64  A4D8               	btfss	status,2,c
  6580  000C66  EF37  F006         	goto	u4871
  6581  000C6A  EF39  F006         	goto	u4870
  6582  000C6E                     u4871:
  6583  000C6E  EF68  F006         	goto	l4726
  6584  000C72                     u4870:
  6585  000C72                     
  6586                           ; BSR set to: 0
  6587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  6588  000C72  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  6589  000C74  EF47  F006         	goto	u4880
  6590  000C78  0EFC               	movlw	252
  6591  000C7A  5D9C               	subwf	efgtoa@e& (0+255),w,b
  6592  000C7C  0EFF               	movlw	255
  6593  000C7E  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6594  000C80  A0D8               	btfss	status,0,c
  6595  000C82  EF45  F006         	goto	u4881
  6596  000C86  EF47  F006         	goto	u4880
  6597  000C8A                     u4881:
  6598  000C8A  EF66  F006         	goto	l4724
  6599  000C8E                     u4880:
  6600  000C8E                     
  6601                           ; BSR set to: 0
  6602  000C8E  0EFF               	movlw	255
  6603  000C90  6F67               	movwf	??_efgtoa& (0+255),b
  6604  000C92  0EFF               	movlw	255
  6605  000C94  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6606  000C96  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  6607  000C9A  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  6608  000C9E  5167               	movf	??_efgtoa& (0+255),w,b
  6609  000CA0  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6610  000CA2  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6611  000CA4  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6612  000CA6  519C               	movf	efgtoa@e& (0+255),w,b
  6613  000CA8  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6614  000CAA  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6615  000CAC  0A80               	xorlw	128
  6616  000CAE  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  6617  000CB0  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  6618  000CB2  0A80               	xorlw	128
  6619  000CB4  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6620  000CB6  A0D8               	btfss	status,0,c
  6621  000CB8  EF60  F006         	goto	u4891
  6622  000CBC  EF62  F006         	goto	u4890
  6623  000CC0                     u4891:
  6624  000CC0  EF66  F006         	goto	l4724
  6625  000CC4                     u4890:
  6626  000CC4                     
  6627                           ; BSR set to: 0
  6628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  6629  000CC4  0E66               	movlw	102
  6630  000CC6  6F8C               	movwf	efgtoa@nmode& (0+255),b
  6631                           
  6632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  6633  000CC8  EF68  F006         	goto	l4726
  6634  000CCC                     l4724:
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  6638  000CCC  0E65               	movlw	101
  6639  000CCE  6F8C               	movwf	efgtoa@nmode& (0+255),b
  6640  000CD0                     l4726:
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  6644  000CD0  C088  F07E         	movff	efgtoa@p,efgtoa@m
  6645  000CD4  C089  F07F         	movff	efgtoa@p+1,efgtoa@m+1
  6646  000CD8                     
  6647                           ; BSR set to: 0
  6648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  6649  000CD8  0E67               	movlw	103
  6650  000CDA  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6651  000CDC  A4D8               	btfss	status,2,c
  6652  000CDE  EF73  F006         	goto	u4901
  6653  000CE2  EF75  F006         	goto	u4900
  6654  000CE6                     u4901:
  6655  000CE6  EF85  F006         	goto	l4734
  6656  000CEA                     u4900:
  6657  000CEA                     
  6658                           ; BSR set to: 0
  6659  000CEA  0E66               	movlw	102
  6660  000CEC  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6661  000CEE  A4D8               	btfss	status,2,c
  6662  000CF0  EF7C  F006         	goto	u4911
  6663  000CF4  EF7E  F006         	goto	u4910
  6664  000CF8                     u4911:
  6665  000CF8  EF87  F006         	goto	l4736
  6666  000CFC                     u4910:
  6667  000CFC                     
  6668                           ; BSR set to: 0
  6669  000CFC  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6670  000CFE  EF85  F006         	goto	u4920
  6671  000D02  EF83  F006         	goto	u4921
  6672  000D06                     u4921:
  6673  000D06  EF87  F006         	goto	l4736
  6674  000D0A                     u4920:
  6675  000D0A                     l4734:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  6679  000D0A  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  6680  000D0C  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  6681  000D0E                     l4736:
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  6685  000D0E  0E66               	movlw	102
  6686  000D10  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6687  000D12  A4D8               	btfss	status,2,c
  6688  000D14  EF8E  F006         	goto	u4931
  6689  000D18  EF90  F006         	goto	u4930
  6690  000D1C                     u4931:
  6691  000D1C  EFB0  F006         	goto	l4746
  6692  000D20                     u4930:
  6693  000D20                     
  6694                           ; BSR set to: 0
  6695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  6696  000D20  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6697  000D22  EF97  F006         	goto	u4940
  6698  000D26  EF95  F006         	goto	u4941
  6699  000D2A                     u4941:
  6700  000D2A  EFA3  F006         	goto	l4742
  6701  000D2E                     u4940:
  6702  000D2E                     
  6703                           ; BSR set to: 0
  6704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  6705  000D2E  0E00               	movlw	0
  6706  000D30  6FA0               	movwf	efgtoa@u& (0+255),b
  6707  000D32  0E00               	movlw	0
  6708  000D34  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  6709  000D36  0E80               	movlw	128
  6710  000D38  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  6711  000D3A  0E3F               	movlw	63
  6712  000D3C  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  6713                           
  6714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  6715  000D3E  0E00               	movlw	0
  6716  000D40  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  6717  000D42  0E00               	movlw	0
  6718  000D44  6F9C               	movwf	efgtoa@e& (0+255),b
  6719  000D46                     l4742:
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  6723  000D46  0E67               	movlw	103
  6724  000D48  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6725  000D4A  B4D8               	btfsc	status,2,c
  6726  000D4C  EFAA  F006         	goto	u4951
  6727  000D50  EFAC  F006         	goto	u4950
  6728  000D54                     u4951:
  6729  000D54  EFB0  F006         	goto	l4746
  6730  000D58                     u4950:
  6731  000D58                     
  6732                           ; BSR set to: 0
  6733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  6734  000D58  519C               	movf	efgtoa@e& (0+255),w,b
  6735  000D5A  277E               	addwf	efgtoa@m& (0+255),f,b
  6736  000D5C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  6737  000D5E  237F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6738  000D60                     l4746:
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  6742  000D60  0E00               	movlw	0
  6743  000D62  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  6744  000D64  0E00               	movlw	0
  6745  000D66  6F96               	movwf	efgtoa@i& (0+255),b
  6746  000D68                     
  6747                           ; BSR set to: 0
  6748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  6749  000D68  C098  F08E         	movff	efgtoa@g,efgtoa@h
  6750  000D6C  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  6751  000D70  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  6752  000D74  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  6753  000D78                     
  6754                           ; BSR set to: 0
  6755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  6756  000D78  C0A0  F080         	movff	efgtoa@u,efgtoa@ou
  6757  000D7C  C0A1  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  6758  000D80  C0A2  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  6759  000D84  C0A3  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  6760                           
  6761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6762  000D88  EF41  F007         	goto	l4760
  6763  000D8C                     l4752:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  6767  000D8C  C08E  F02C         	movff	efgtoa@h,___fldiv@b
  6768  000D90  C08F  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  6769  000D94  C090  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  6770  000D98  C091  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  6771  000D9C  C0A0  F030         	movff	efgtoa@u,___fldiv@a
  6772  000DA0  C0A1  F031         	movff	efgtoa@u+1,___fldiv@a+1
  6773  000DA4  C0A2  F032         	movff	efgtoa@u+2,___fldiv@a+2
  6774  000DA8  C0A3  F033         	movff	efgtoa@u+3,___fldiv@a+3
  6775  000DAC  ECD3  F011         	call	___fldiv	;wreg free
  6776  000DB0  C02C  F045         	movff	?___fldiv,floorf@x
  6777  000DB4  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  6778  000DB8  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  6779  000DBC  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  6780  000DC0  ECC4  F017         	call	_floorf	;wreg free
  6781  000DC4  C045  F092         	movff	?_floorf,efgtoa@l
  6782  000DC8  C046  F093         	movff	?_floorf+1,efgtoa@l+1
  6783  000DCC  C047  F094         	movff	?_floorf+2,efgtoa@l+2
  6784  000DD0  C048  F095         	movff	?_floorf+3,efgtoa@l+3
  6785                           
  6786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  6787  000DD4  C092  F055         	movff	efgtoa@l,___fltol@f1
  6788  000DD8  C093  F056         	movff	efgtoa@l+1,___fltol@f1+1
  6789  000DDC  C094  F057         	movff	efgtoa@l+2,___fltol@f1+2
  6790  000DE0  C095  F058         	movff	efgtoa@l+3,___fltol@f1+3
  6791  000DE4  EC1B  F01B         	call	___fltol	;wreg free
  6792  000DE8  C055  F084         	movff	?___fltol,efgtoa@d
  6793  000DEC  C056  F085         	movff	?___fltol+1,efgtoa@d+1
  6794  000DF0                     
  6795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  6796  000DF0  C08E  F055         	movff	efgtoa@h,___flsub@b
  6797  000DF4  C08F  F056         	movff	efgtoa@h+1,___flsub@b+1
  6798  000DF8  C090  F057         	movff	efgtoa@h+2,___flsub@b+2
  6799  000DFC  C091  F058         	movff	efgtoa@h+3,___flsub@b+3
  6800  000E00  C0A0  F017         	movff	efgtoa@u,___flmul@a
  6801  000E04  C0A1  F018         	movff	efgtoa@u+1,___flmul@a+1
  6802  000E08  C0A2  F019         	movff	efgtoa@u+2,___flmul@a+2
  6803  000E0C  C0A3  F01A         	movff	efgtoa@u+3,___flmul@a+3
  6804  000E10  C092  F013         	movff	efgtoa@l,___flmul@b
  6805  000E14  C093  F014         	movff	efgtoa@l+1,___flmul@b+1
  6806  000E18  C094  F015         	movff	efgtoa@l+2,___flmul@b+2
  6807  000E1C  C095  F016         	movff	efgtoa@l+3,___flmul@b+3
  6808  000E20  ECBE  F00F         	call	___flmul	;wreg free
  6809  000E24  C013  F059         	movff	?___flmul,___flsub@a
  6810  000E28  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  6811  000E2C  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  6812  000E30  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  6813  000E34  EC6D  F023         	call	___flsub	;wreg free
  6814  000E38  C055  F08E         	movff	?___flsub,efgtoa@h
  6815  000E3C  C056  F08F         	movff	?___flsub+1,efgtoa@h+1
  6816  000E40  C057  F090         	movff	?___flsub+2,efgtoa@h+2
  6817  000E44  C058  F091         	movff	?___flsub+3,efgtoa@h+3
  6818  000E48                     
  6819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  6820  000E48  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  6821  000E4C  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  6822  000E50  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  6823  000E54  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  6824  000E58  0E00               	movlw	0
  6825  000E5A  6E30               	movwf	___fldiv@a^0,c
  6826  000E5C  0E00               	movlw	0
  6827  000E5E  6E31               	movwf	(___fldiv@a+1)^0,c
  6828  000E60  0E20               	movlw	32
  6829  000E62  6E32               	movwf	(___fldiv@a+2)^0,c
  6830  000E64  0E41               	movlw	65
  6831  000E66  6E33               	movwf	(___fldiv@a+3)^0,c
  6832  000E68  ECD3  F011         	call	___fldiv	;wreg free
  6833  000E6C  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  6834  000E70  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  6835  000E74  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  6836  000E78  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  6837  000E7C                     
  6838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  6839  000E7C  0100               	movlb	0	; () banked
  6840  000E7E  4B96               	infsnz	efgtoa@i& (0+255),f,b
  6841  000E80  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  6842  000E82                     l4760:
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6846  000E82  517E               	movf	efgtoa@m& (0+255),w,b
  6847  000E84  5D96               	subwf	efgtoa@i& (0+255),w,b
  6848  000E86  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  6849  000E88  0A80               	xorlw	128
  6850  000E8A  6F67               	movwf	??_efgtoa& (0+255),b
  6851  000E8C  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  6852  000E8E  0A80               	xorlw	128
  6853  000E90  5967               	subwfb	??_efgtoa& (0+255),w,b
  6854  000E92  A0D8               	btfss	status,0,c
  6855  000E94  EF4E  F007         	goto	u4961
  6856  000E98  EF50  F007         	goto	u4960
  6857  000E9C                     u4961:
  6858  000E9C  EFC6  F006         	goto	l4752
  6859  000EA0                     u4960:
  6860  000EA0                     
  6861                           ; BSR set to: 0
  6862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  6863  000EA0  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6864  000EA4  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6865  000EA8  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6866  000EAC  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6867  000EB0  0E00               	movlw	0
  6868  000EB2  6E17               	movwf	___flmul@a^0,c
  6869  000EB4  0E00               	movlw	0
  6870  000EB6  6E18               	movwf	(___flmul@a+1)^0,c
  6871  000EB8  0EA0               	movlw	160
  6872  000EBA  6E19               	movwf	(___flmul@a+2)^0,c
  6873  000EBC  0E40               	movlw	64
  6874  000EBE  6E1A               	movwf	(___flmul@a+3)^0,c
  6875  000EC0  ECBE  F00F         	call	___flmul	;wreg free
  6876  000EC4  C013  F092         	movff	?___flmul,efgtoa@l
  6877  000EC8  C014  F093         	movff	?___flmul+1,efgtoa@l+1
  6878  000ECC  C015  F094         	movff	?___flmul+2,efgtoa@l+2
  6879  000ED0  C016  F095         	movff	?___flmul+3,efgtoa@l+3
  6880  000ED4                     
  6881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  6882  000ED4  C08E  F02C         	movff	efgtoa@h,___flge@ff1
  6883  000ED8  C08F  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  6884  000EDC  C090  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  6885  000EE0  C091  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  6886  000EE4  C092  F030         	movff	efgtoa@l,___flge@ff2
  6887  000EE8  C093  F031         	movff	efgtoa@l+1,___flge@ff2+1
  6888  000EEC  C094  F032         	movff	efgtoa@l+2,___flge@ff2+2
  6889  000EF0  C095  F033         	movff	efgtoa@l+3,___flge@ff2+3
  6890  000EF4  EC9E  F01B         	call	___flge	;wreg free
  6891  000EF8  B0D8               	btfsc	status,0,c
  6892  000EFA  EF81  F007         	goto	u4971
  6893  000EFE  EF83  F007         	goto	u4970
  6894  000F02                     u4971:
  6895  000F02  EF8E  F007         	goto	l4768
  6896  000F06                     u4970:
  6897  000F06                     
  6898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  6899  000F06  0E00               	movlw	0
  6900  000F08  0100               	movlb	0	; () banked
  6901  000F0A  6F92               	movwf	efgtoa@l& (0+255),b
  6902  000F0C  0E00               	movlw	0
  6903  000F0E  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  6904  000F10  0E00               	movlw	0
  6905  000F12  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  6906  000F14  0E00               	movlw	0
  6907  000F16  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  6908                           
  6909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  6910  000F18  EFB7  F007         	goto	l4774
  6911  000F1C                     l4768:
  6912                           
  6913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  6914  000F1C  C08E  F001         	movff	efgtoa@h,___fleq@ff1
  6915  000F20  C08F  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  6916  000F24  C090  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  6917  000F28  C091  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  6918  000F2C  C092  F005         	movff	efgtoa@l,___fleq@ff2
  6919  000F30  C093  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  6920  000F34  C094  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  6921  000F38  C095  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  6922  000F3C  ECC5  F01F         	call	___fleq	;wreg free
  6923  000F40  A0D8               	btfss	status,0,c
  6924  000F42  EFA5  F007         	goto	u4981
  6925  000F46  EFA7  F007         	goto	u4980
  6926  000F4A                     u4981:
  6927  000F4A  EFB7  F007         	goto	l4774
  6928  000F4E                     u4980:
  6929  000F4E  0100               	movlb	0	; () banked
  6930  000F50  B184               	btfsc	efgtoa@d& (0+255),0,b
  6931  000F52  EFAD  F007         	goto	u4991
  6932  000F56  EFAF  F007         	goto	u4990
  6933  000F5A                     u4991:
  6934  000F5A  EFB7  F007         	goto	l4774
  6935  000F5E                     u4990:
  6936  000F5E                     
  6937                           ; BSR set to: 0
  6938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  6939  000F5E  0E00               	movlw	0
  6940  000F60  6F92               	movwf	efgtoa@l& (0+255),b
  6941  000F62  0E00               	movlw	0
  6942  000F64  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  6943  000F66  0E00               	movlw	0
  6944  000F68  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  6945  000F6A  0E00               	movlw	0
  6946  000F6C  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  6947  000F6E                     l4774:
  6948                           
  6949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  6950  000F6E  C098  F045         	movff	efgtoa@g,___fladd@b
  6951  000F72  C099  F046         	movff	efgtoa@g+1,___fladd@b+1
  6952  000F76  C09A  F047         	movff	efgtoa@g+2,___fladd@b+2
  6953  000F7A  C09B  F048         	movff	efgtoa@g+3,___fladd@b+3
  6954  000F7E  C092  F049         	movff	efgtoa@l,___fladd@a
  6955  000F82  C093  F04A         	movff	efgtoa@l+1,___fladd@a+1
  6956  000F86  C094  F04B         	movff	efgtoa@l+2,___fladd@a+2
  6957  000F8A  C095  F04C         	movff	efgtoa@l+3,___fladd@a+3
  6958  000F8E  EC5E  F00D         	call	___fladd	;wreg free
  6959  000F92  C045  F08E         	movff	?___fladd,efgtoa@h
  6960  000F96  C046  F08F         	movff	?___fladd+1,efgtoa@h+1
  6961  000F9A  C047  F090         	movff	?___fladd+2,efgtoa@h+2
  6962  000F9E  C048  F091         	movff	?___fladd+3,efgtoa@h+3
  6963  000FA2                     
  6964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  6965  000FA2  C08E  F02C         	movff	efgtoa@h,___flge@ff1
  6966  000FA6  C08F  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  6967  000FAA  C090  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  6968  000FAE  C091  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  6969  000FB2  0E00               	movlw	0
  6970  000FB4  6E17               	movwf	___flmul@a^0,c
  6971  000FB6  0E00               	movlw	0
  6972  000FB8  6E18               	movwf	(___flmul@a+1)^0,c
  6973  000FBA  0E20               	movlw	32
  6974  000FBC  6E19               	movwf	(___flmul@a+2)^0,c
  6975  000FBE  0E41               	movlw	65
  6976  000FC0  6E1A               	movwf	(___flmul@a+3)^0,c
  6977  000FC2  C080  F013         	movff	efgtoa@ou,___flmul@b
  6978  000FC6  C081  F014         	movff	efgtoa@ou+1,___flmul@b+1
  6979  000FCA  C082  F015         	movff	efgtoa@ou+2,___flmul@b+2
  6980  000FCE  C083  F016         	movff	efgtoa@ou+3,___flmul@b+3
  6981  000FD2  ECBE  F00F         	call	___flmul	;wreg free
  6982  000FD6  C013  F030         	movff	?___flmul,___flge@ff2
  6983  000FDA  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  6984  000FDE  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  6985  000FE2  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  6986  000FE6  EC9E  F01B         	call	___flge	;wreg free
  6987  000FEA  A0D8               	btfss	status,0,c
  6988  000FEC  EFFA  F007         	goto	u5001
  6989  000FF0  EFFC  F007         	goto	u5000
  6990  000FF4                     u5001:
  6991  000FF4  EF25  F008         	goto	l4786
  6992  000FF8                     u5000:
  6993  000FF8                     
  6994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  6995  000FF8  0100               	movlb	0	; () banked
  6996  000FFA  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  6997  000FFC  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  6998  000FFE                     
  6999                           ; BSR set to: 0
  7000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  7001  000FFE  C080  F013         	movff	efgtoa@ou,___flmul@b
  7002  001002  C081  F014         	movff	efgtoa@ou+1,___flmul@b+1
  7003  001006  C082  F015         	movff	efgtoa@ou+2,___flmul@b+2
  7004  00100A  C083  F016         	movff	efgtoa@ou+3,___flmul@b+3
  7005  00100E  0E00               	movlw	0
  7006  001010  6E17               	movwf	___flmul@a^0,c
  7007  001012  0E00               	movlw	0
  7008  001014  6E18               	movwf	(___flmul@a+1)^0,c
  7009  001016  0E20               	movlw	32
  7010  001018  6E19               	movwf	(___flmul@a+2)^0,c
  7011  00101A  0E41               	movlw	65
  7012  00101C  6E1A               	movwf	(___flmul@a+3)^0,c
  7013  00101E  ECBE  F00F         	call	___flmul	;wreg free
  7014  001022  C013  F080         	movff	?___flmul,efgtoa@ou
  7015  001026  C014  F081         	movff	?___flmul+1,efgtoa@ou+1
  7016  00102A  C015  F082         	movff	?___flmul+2,efgtoa@ou+2
  7017  00102E  C016  F083         	movff	?___flmul+3,efgtoa@ou+3
  7018  001032                     
  7019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  7020  001032  0E66               	movlw	102
  7021  001034  0100               	movlb	0	; () banked
  7022  001036  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7023  001038  A4D8               	btfss	status,2,c
  7024  00103A  EF21  F008         	goto	u5011
  7025  00103E  EF23  F008         	goto	u5010
  7026  001042                     u5011:
  7027  001042  EF25  F008         	goto	l4786
  7028  001046                     u5010:
  7029  001046                     
  7030                           ; BSR set to: 0
  7031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  7032  001046  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  7033  001048  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  7034  00104A                     l4786:
  7035                           
  7036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  7037  00104A  C080  F0A0         	movff	efgtoa@ou,efgtoa@u
  7038  00104E  C081  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  7039  001052  C082  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  7040  001056  C083  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  7041  00105A                     
  7042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  7043  00105A  0E65               	movlw	101
  7044  00105C  0100               	movlb	0	; () banked
  7045  00105E  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7046  001060  B4D8               	btfsc	status,2,c
  7047  001062  EF35  F008         	goto	u5021
  7048  001066  EF37  F008         	goto	u5020
  7049  00106A                     u5021:
  7050  00106A  EF3D  F008         	goto	l4792
  7051  00106E                     u5020:
  7052  00106E                     
  7053                           ; BSR set to: 0
  7054  00106E  C09C  F07C         	movff	efgtoa@e,efgtoa@ne
  7055  001072  C09D  F07D         	movff	efgtoa@e+1,efgtoa@ne+1
  7056  001076  EF41  F008         	goto	l1388
  7057  00107A                     l4792:
  7058                           
  7059                           ; BSR set to: 0
  7060  00107A  0E00               	movlw	0
  7061  00107C  6F7D               	movwf	(efgtoa@ne+1)& (0+255),b
  7062  00107E  0E00               	movlw	0
  7063  001080  6F7C               	movwf	efgtoa@ne& (0+255),b
  7064  001082                     l1388:
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  7068  001082  0E00               	movlw	0
  7069  001084  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  7070  001086  0E00               	movlw	0
  7071  001088  6F7A               	movwf	efgtoa@pp& (0+255),b
  7072                           
  7073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  7074  00108A  0E00               	movlw	0
  7075  00108C  6F79               	movwf	(efgtoa@t+1)& (0+255),b
  7076  00108E  0E00               	movlw	0
  7077  001090  6F78               	movwf	efgtoa@t& (0+255),b
  7078                           
  7079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  7080  001092  0E00               	movlw	0
  7081  001094  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7082  001096  0E00               	movlw	0
  7083  001098  6F96               	movwf	efgtoa@i& (0+255),b
  7084                           
  7085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7086  00109A  EF3C  F009         	goto	l4842
  7087  00109E                     l4794:
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  7091  00109E  C08E  F02C         	movff	efgtoa@h,___fldiv@b
  7092  0010A2  C08F  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  7093  0010A6  C090  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  7094  0010AA  C091  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  7095  0010AE  C0A0  F030         	movff	efgtoa@u,___fldiv@a
  7096  0010B2  C0A1  F031         	movff	efgtoa@u+1,___fldiv@a+1
  7097  0010B6  C0A2  F032         	movff	efgtoa@u+2,___fldiv@a+2
  7098  0010BA  C0A3  F033         	movff	efgtoa@u+3,___fldiv@a+3
  7099  0010BE  ECD3  F011         	call	___fldiv	;wreg free
  7100  0010C2  C02C  F045         	movff	?___fldiv,floorf@x
  7101  0010C6  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  7102  0010CA  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  7103  0010CE  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  7104  0010D2  ECC4  F017         	call	_floorf	;wreg free
  7105  0010D6  C045  F092         	movff	?_floorf,efgtoa@l
  7106  0010DA  C046  F093         	movff	?_floorf+1,efgtoa@l+1
  7107  0010DE  C047  F094         	movff	?_floorf+2,efgtoa@l+2
  7108  0010E2  C048  F095         	movff	?_floorf+3,efgtoa@l+3
  7109                           
  7110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  7111  0010E6  C092  F055         	movff	efgtoa@l,___fltol@f1
  7112  0010EA  C093  F056         	movff	efgtoa@l+1,___fltol@f1+1
  7113  0010EE  C094  F057         	movff	efgtoa@l+2,___fltol@f1+2
  7114  0010F2  C095  F058         	movff	efgtoa@l+3,___fltol@f1+3
  7115  0010F6  EC1B  F01B         	call	___fltol	;wreg free
  7116  0010FA  C055  F084         	movff	?___fltol,efgtoa@d
  7117  0010FE  C056  F085         	movff	?___fltol+1,efgtoa@d+1
  7118  001102                     
  7119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7120  001102  0100               	movlb	0	; () banked
  7121  001104  B9F8               	btfsc	_flags& (0+255),4,b
  7122  001106  EF87  F008         	goto	u5031
  7123  00110A  EF89  F008         	goto	u5030
  7124  00110E                     u5031:
  7125  00110E  EFA6  F008         	goto	l4806
  7126  001112                     u5030:
  7127  001112                     
  7128                           ; BSR set to: 0
  7129  001112  5184               	movf	efgtoa@d& (0+255),w,b
  7130  001114  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7131  001116  A4D8               	btfss	status,2,c
  7132  001118  EF90  F008         	goto	u5041
  7133  00111C  EF92  F008         	goto	u5040
  7134  001120                     u5041:
  7135  001120  EFA6  F008         	goto	l4806
  7136  001124                     u5040:
  7137  001124                     
  7138                           ; BSR set to: 0
  7139  001124  0E67               	movlw	103
  7140  001126  198D               	xorwf	efgtoa@mode& (0+255),w,b
  7141  001128  A4D8               	btfss	status,2,c
  7142  00112A  EF99  F008         	goto	u5051
  7143  00112E  EF9B  F008         	goto	u5050
  7144  001132                     u5051:
  7145  001132  EFA6  F008         	goto	l4806
  7146  001136                     u5050:
  7147  001136                     
  7148                           ; BSR set to: 0
  7149  001136  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7150  001138  EFA2  F008         	goto	u5060
  7151  00113C  EFA0  F008         	goto	u5061
  7152  001140                     u5061:
  7153  001140  EFA6  F008         	goto	l4806
  7154  001144                     u5060:
  7155  001144                     
  7156                           ; BSR set to: 0
  7157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  7158  001144  4B78               	infsnz	efgtoa@t& (0+255),f,b
  7159  001146  2B79               	incf	(efgtoa@t+1)& (0+255),f,b
  7160                           
  7161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  7162  001148  EFF0  F008         	goto	l4834
  7163  00114C                     l4806:
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  7167  00114C  517A               	movf	efgtoa@pp& (0+255),w,b
  7168  00114E  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7169  001150  A4D8               	btfss	status,2,c
  7170  001152  EFAD  F008         	goto	u5071
  7171  001156  EFAF  F008         	goto	u5070
  7172  00115A                     u5071:
  7173  00115A  EFD9  F008         	goto	l4826
  7174  00115E                     u5070:
  7175  00115E                     
  7176                           ; BSR set to: 0
  7177  00115E  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7178  001160  EFB6  F008         	goto	u5080
  7179  001164  EFB4  F008         	goto	u5081
  7180  001168                     u5081:
  7181  001168  EFD9  F008         	goto	l4826
  7182  00116C                     u5080:
  7183  00116C                     
  7184                           ; BSR set to: 0
  7185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  7186  00116C  0E0E               	movlw	low _dbuf
  7187  00116E  259E               	addwf	efgtoa@n& (0+255),w,b
  7188  001170  6ED9               	movwf	fsr2l,c
  7189  001172  0E01               	movlw	high _dbuf
  7190  001174  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7191  001176  6EDA               	movwf	fsr2h,c
  7192  001178  0E2E               	movlw	46
  7193  00117A  6EDF               	movwf	indf2,c
  7194  00117C                     
  7195                           ; BSR set to: 0
  7196  00117C  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7197  00117E  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7198  001180                     
  7199                           ; BSR set to: 0
  7200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  7201  001180  078A               	decf	efgtoa@w& (0+255),f,b
  7202  001182  A0D8               	btfss	status,0,c
  7203  001184  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7204  001186                     
  7205                           ; BSR set to: 0
  7206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  7207  001186  0E00               	movlw	0
  7208  001188  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  7209  00118A  0E01               	movlw	1
  7210  00118C  6F7A               	movwf	efgtoa@pp& (0+255),b
  7211  00118E  EFD9  F008         	goto	l4826
  7212  001192                     l4818:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  7216  001192  0E0E               	movlw	low _dbuf
  7217  001194  259E               	addwf	efgtoa@n& (0+255),w,b
  7218  001196  6ED9               	movwf	fsr2l,c
  7219  001198  0E01               	movlw	high _dbuf
  7220  00119A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7221  00119C  6EDA               	movwf	fsr2h,c
  7222  00119E  0E30               	movlw	48
  7223  0011A0  6EDF               	movwf	indf2,c
  7224  0011A2                     
  7225                           ; BSR set to: 0
  7226  0011A2  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7227  0011A4  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7228  0011A6                     
  7229                           ; BSR set to: 0
  7230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  7231  0011A6  078A               	decf	efgtoa@w& (0+255),f,b
  7232  0011A8  A0D8               	btfss	status,0,c
  7233  0011AA  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7234  0011AC                     
  7235                           ; BSR set to: 0
  7236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  7237  0011AC  0778               	decf	efgtoa@t& (0+255),f,b
  7238  0011AE  A0D8               	btfss	status,0,c
  7239  0011B0  0779               	decf	(efgtoa@t+1)& (0+255),f,b
  7240  0011B2                     l4826:
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  7244  0011B2  5178               	movf	efgtoa@t& (0+255),w,b
  7245  0011B4  1179               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7246  0011B6  A4D8               	btfss	status,2,c
  7247  0011B8  EFE0  F008         	goto	u5091
  7248  0011BC  EFE2  F008         	goto	u5090
  7249  0011C0                     u5091:
  7250  0011C0  EFC9  F008         	goto	l4818
  7251  0011C4                     u5090:
  7252  0011C4                     
  7253                           ; BSR set to: 0
  7254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7255  0011C4  0E0E               	movlw	low _dbuf
  7256  0011C6  259E               	addwf	efgtoa@n& (0+255),w,b
  7257  0011C8  6ED9               	movwf	fsr2l,c
  7258  0011CA  0E01               	movlw	high _dbuf
  7259  0011CC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7260  0011CE  6EDA               	movwf	fsr2h,c
  7261  0011D0  5184               	movf	efgtoa@d& (0+255),w,b
  7262  0011D2  0F30               	addlw	48
  7263  0011D4  6EDF               	movwf	indf2,c
  7264  0011D6                     
  7265                           ; BSR set to: 0
  7266  0011D6  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7267  0011D8  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7268  0011DA                     
  7269                           ; BSR set to: 0
  7270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  7271  0011DA  078A               	decf	efgtoa@w& (0+255),f,b
  7272  0011DC  A0D8               	btfss	status,0,c
  7273  0011DE  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7274  0011E0                     l4834:
  7275                           
  7276                           ; BSR set to: 0
  7277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  7278  0011E0  C08E  F055         	movff	efgtoa@h,___flsub@b
  7279  0011E4  C08F  F056         	movff	efgtoa@h+1,___flsub@b+1
  7280  0011E8  C090  F057         	movff	efgtoa@h+2,___flsub@b+2
  7281  0011EC  C091  F058         	movff	efgtoa@h+3,___flsub@b+3
  7282  0011F0  C0A0  F017         	movff	efgtoa@u,___flmul@a
  7283  0011F4  C0A1  F018         	movff	efgtoa@u+1,___flmul@a+1
  7284  0011F8  C0A2  F019         	movff	efgtoa@u+2,___flmul@a+2
  7285  0011FC  C0A3  F01A         	movff	efgtoa@u+3,___flmul@a+3
  7286  001200  C092  F013         	movff	efgtoa@l,___flmul@b
  7287  001204  C093  F014         	movff	efgtoa@l+1,___flmul@b+1
  7288  001208  C094  F015         	movff	efgtoa@l+2,___flmul@b+2
  7289  00120C  C095  F016         	movff	efgtoa@l+3,___flmul@b+3
  7290  001210  ECBE  F00F         	call	___flmul	;wreg free
  7291  001214  C013  F059         	movff	?___flmul,___flsub@a
  7292  001218  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  7293  00121C  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  7294  001220  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  7295  001224  EC6D  F023         	call	___flsub	;wreg free
  7296  001228  C055  F08E         	movff	?___flsub,efgtoa@h
  7297  00122C  C056  F08F         	movff	?___flsub+1,efgtoa@h+1
  7298  001230  C057  F090         	movff	?___flsub+2,efgtoa@h+2
  7299  001234  C058  F091         	movff	?___flsub+3,efgtoa@h+3
  7300  001238                     
  7301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  7302  001238  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  7303  00123C  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  7304  001240  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  7305  001244  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  7306  001248  0E00               	movlw	0
  7307  00124A  6E30               	movwf	___fldiv@a^0,c
  7308  00124C  0E00               	movlw	0
  7309  00124E  6E31               	movwf	(___fldiv@a+1)^0,c
  7310  001250  0E20               	movlw	32
  7311  001252  6E32               	movwf	(___fldiv@a+2)^0,c
  7312  001254  0E41               	movlw	65
  7313  001256  6E33               	movwf	(___fldiv@a+3)^0,c
  7314  001258  ECD3  F011         	call	___fldiv	;wreg free
  7315  00125C  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  7316  001260  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  7317  001264  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  7318  001268  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  7319  00126C                     
  7320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  7321  00126C  0100               	movlb	0	; () banked
  7322  00126E  077C               	decf	efgtoa@ne& (0+255),f,b
  7323  001270  A0D8               	btfss	status,0,c
  7324  001272  077D               	decf	(efgtoa@ne+1)& (0+255),f,b
  7325  001274                     
  7326                           ; BSR set to: 0
  7327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  7328  001274  4B96               	infsnz	efgtoa@i& (0+255),f,b
  7329  001276  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  7330  001278                     l4842:
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7334  001278  517E               	movf	efgtoa@m& (0+255),w,b
  7335  00127A  5D96               	subwf	efgtoa@i& (0+255),w,b
  7336  00127C  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7337  00127E  0A80               	xorlw	128
  7338  001280  6F67               	movwf	??_efgtoa& (0+255),b
  7339  001282  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  7340  001284  0A80               	xorlw	128
  7341  001286  5967               	subwfb	??_efgtoa& (0+255),w,b
  7342  001288  B0D8               	btfsc	status,0,c
  7343  00128A  EF49  F009         	goto	u5101
  7344  00128E  EF4B  F009         	goto	u5100
  7345  001292                     u5101:
  7346  001292  EF59  F009         	goto	l4846
  7347  001296                     u5100:
  7348  001296                     
  7349                           ; BSR set to: 0
  7350  001296  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7351  001298  EF57  F009         	goto	u5111
  7352  00129C  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  7353  00129E  E109               	bnz	u5110
  7354  0012A0  0E4B               	movlw	75
  7355  0012A2  5D9E               	subwf	efgtoa@n& (0+255),w,b
  7356  0012A4  A0D8               	btfss	status,0,c
  7357  0012A6  EF57  F009         	goto	u5111
  7358  0012AA  EF59  F009         	goto	u5110
  7359  0012AE                     u5111:
  7360  0012AE  EF4F  F008         	goto	l4794
  7361  0012B2                     u5110:
  7362  0012B2                     l4846:
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7366  0012B2  517A               	movf	efgtoa@pp& (0+255),w,b
  7367  0012B4  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7368  0012B6  A4D8               	btfss	status,2,c
  7369  0012B8  EF60  F009         	goto	u5121
  7370  0012BC  EF62  F009         	goto	u5120
  7371  0012C0                     u5121:
  7372  0012C0  EF73  F009         	goto	l4854
  7373  0012C4                     u5120:
  7374  0012C4                     
  7375                           ; BSR set to: 0
  7376  0012C4  A9F8               	btfss	_flags& (0+255),4,b
  7377  0012C6  EF67  F009         	goto	u5131
  7378  0012CA  EF69  F009         	goto	u5130
  7379  0012CE                     u5131:
  7380  0012CE  EF73  F009         	goto	l4854
  7381  0012D2                     u5130:
  7382  0012D2                     
  7383                           ; BSR set to: 0
  7384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  7385  0012D2  0E0E               	movlw	low _dbuf
  7386  0012D4  259E               	addwf	efgtoa@n& (0+255),w,b
  7387  0012D6  6ED9               	movwf	fsr2l,c
  7388  0012D8  0E01               	movlw	high _dbuf
  7389  0012DA  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7390  0012DC  6EDA               	movwf	fsr2h,c
  7391  0012DE  0E2E               	movlw	46
  7392  0012E0  6EDF               	movwf	indf2,c
  7393  0012E2                     
  7394                           ; BSR set to: 0
  7395  0012E2  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7396  0012E4  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7397  0012E6                     l4854:
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  7401  0012E6  0E0E               	movlw	low _dbuf
  7402  0012E8  259E               	addwf	efgtoa@n& (0+255),w,b
  7403  0012EA  6ED9               	movwf	fsr2l,c
  7404  0012EC  0E01               	movlw	high _dbuf
  7405  0012EE  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7406  0012F0  6EDA               	movwf	fsr2h,c
  7407  0012F2  0E00               	movlw	0
  7408  0012F4  6EDF               	movwf	indf2,c
  7409  0012F6                     
  7410                           ; BSR set to: 0
  7411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  7412  0012F6  0E65               	movlw	101
  7413  0012F8  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7414  0012FA  A4D8               	btfss	status,2,c
  7415  0012FC  EF82  F009         	goto	u5141
  7416  001300  EF84  F009         	goto	u5140
  7417  001304                     u5141:
  7418  001304  EFDE  F004         	goto	l4656
  7419  001308                     u5140:
  7420  001308                     
  7421                           ; BSR set to: 0
  7422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  7423  001308  0E00               	movlw	0
  7424  00130A  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7425  00130C  0E4F               	movlw	79
  7426  00130E  6F96               	movwf	efgtoa@i& (0+255),b
  7427  001310                     
  7428                           ; BSR set to: 0
  7429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  7430  001310  0E0E               	movlw	low _dbuf
  7431  001312  2596               	addwf	efgtoa@i& (0+255),w,b
  7432  001314  6ED9               	movwf	fsr2l,c
  7433  001316  0E01               	movlw	high _dbuf
  7434  001318  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7435  00131A  6EDA               	movwf	fsr2h,c
  7436  00131C  0E00               	movlw	0
  7437  00131E  6EDF               	movwf	indf2,c
  7438  001320                     
  7439                           ; BSR set to: 0
  7440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  7441  001320  0E00               	movlw	0
  7442  001322  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  7443  001324  0E00               	movlw	0
  7444  001326  6F86               	movwf	efgtoa@sign& (0+255),b
  7445  001328                     
  7446                           ; BSR set to: 0
  7447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  7448  001328  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7449  00132A  EF9B  F009         	goto	u5150
  7450  00132E  EF99  F009         	goto	u5151
  7451  001332                     u5151:
  7452  001332  EFA3  F009         	goto	l4870
  7453  001336                     u5150:
  7454  001336                     
  7455                           ; BSR set to: 0
  7456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  7457  001336  0E00               	movlw	0
  7458  001338  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  7459  00133A  0E01               	movlw	1
  7460  00133C  6F86               	movwf	efgtoa@sign& (0+255),b
  7461  00133E                     
  7462                           ; BSR set to: 0
  7463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  7464  00133E  6D9C               	negf	efgtoa@e& (0+255),b
  7465  001340  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  7466  001342  B0D8               	btfsc	status,0,c
  7467  001344  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7468  001346                     l4870:
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  7472  001346  0E00               	movlw	0
  7473  001348  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  7474  00134A  0E02               	movlw	2
  7475  00134C  6F88               	movwf	efgtoa@p& (0+255),b
  7476                           
  7477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7478  00134E  EFD4  F009         	goto	l4882
  7479  001352                     l4872:
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  7483  001352  0796               	decf	efgtoa@i& (0+255),f,b
  7484  001354  A0D8               	btfss	status,0,c
  7485  001356  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7486  001358                     
  7487                           ; BSR set to: 0
  7488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  7489  001358  0E0E               	movlw	low _dbuf
  7490  00135A  2596               	addwf	efgtoa@i& (0+255),w,b
  7491  00135C  6ED9               	movwf	fsr2l,c
  7492  00135E  0E01               	movlw	high _dbuf
  7493  001360  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7494  001362  6EDA               	movwf	fsr2h,c
  7495  001364  C09C  F001         	movff	efgtoa@e,___awmod@dividend
  7496  001368  C09D  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  7497  00136C  0E00               	movlw	0
  7498  00136E  6E04               	movwf	(___awmod@divisor+1)^0,c
  7499  001370  0E0A               	movlw	10
  7500  001372  6E03               	movwf	___awmod@divisor^0,c
  7501  001374  EC6D  F01F         	call	___awmod	;wreg free
  7502  001378  5001               	movf	?___awmod^0,w,c
  7503  00137A  0F30               	addlw	48
  7504  00137C  6EDF               	movwf	indf2,c
  7505  00137E                     
  7506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  7507  00137E  C09C  F001         	movff	efgtoa@e,___awdiv@dividend
  7508  001382  C09D  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  7509  001386  0E00               	movlw	0
  7510  001388  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7511  00138A  0E0A               	movlw	10
  7512  00138C  6E03               	movwf	___awdiv@divisor^0,c
  7513  00138E  EC51  F01E         	call	___awdiv	;wreg free
  7514  001392  C001  F09C         	movff	?___awdiv,efgtoa@e
  7515  001396  C002  F09D         	movff	?___awdiv+1,efgtoa@e+1
  7516  00139A                     
  7517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  7518  00139A  0100               	movlb	0	; () banked
  7519  00139C  0788               	decf	efgtoa@p& (0+255),f,b
  7520  00139E  A0D8               	btfss	status,0,c
  7521  0013A0  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  7522  0013A2                     
  7523                           ; BSR set to: 0
  7524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  7525  0013A2  078A               	decf	efgtoa@w& (0+255),f,b
  7526  0013A4  A0D8               	btfss	status,0,c
  7527  0013A6  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7528  0013A8                     l4882:
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7532  0013A8  519C               	movf	efgtoa@e& (0+255),w,b
  7533  0013AA  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7534  0013AC  A4D8               	btfss	status,2,c
  7535  0013AE  EFDB  F009         	goto	u5161
  7536  0013B2  EFDD  F009         	goto	u5160
  7537  0013B6                     u5161:
  7538  0013B6  EFA9  F009         	goto	l4872
  7539  0013BA                     u5160:
  7540  0013BA                     
  7541                           ; BSR set to: 0
  7542  0013BA  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7543  0013BC  EFEA  F009         	goto	u5170
  7544  0013C0  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  7545  0013C2  E106               	bnz	u5171
  7546  0013C4  0588               	decf	efgtoa@p& (0+255),w,b
  7547  0013C6  B0D8               	btfsc	status,0,c
  7548  0013C8  EFE8  F009         	goto	u5171
  7549  0013CC  EFEA  F009         	goto	u5170
  7550  0013D0                     u5171:
  7551  0013D0  EFA9  F009         	goto	l4872
  7552  0013D4                     u5170:
  7553  0013D4                     
  7554                           ; BSR set to: 0
  7555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  7556  0013D4  0796               	decf	efgtoa@i& (0+255),f,b
  7557  0013D6  A0D8               	btfss	status,0,c
  7558  0013D8  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7559  0013DA                     
  7560                           ; BSR set to: 0
  7561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  7562  0013DA  5186               	movf	efgtoa@sign& (0+255),w,b
  7563  0013DC  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7564  0013DE  A4D8               	btfss	status,2,c
  7565  0013E0  EFF4  F009         	goto	u5181
  7566  0013E4  EFF6  F009         	goto	u5180
  7567  0013E8                     u5181:
  7568  0013E8  EFFC  F009         	goto	l4892
  7569  0013EC                     u5180:
  7570  0013EC                     
  7571                           ; BSR set to: 0
  7572  0013EC  0E00               	movlw	0
  7573  0013EE  6F73               	movwf	(_efgtoa$1511+1)& (0+255),b
  7574  0013F0  0E2B               	movlw	43
  7575  0013F2  6F72               	movwf	_efgtoa$1511& (0+255),b
  7576  0013F4  EF00  F00A         	goto	l4894
  7577  0013F8                     l4892:
  7578                           
  7579                           ; BSR set to: 0
  7580  0013F8  0E00               	movlw	0
  7581  0013FA  6F73               	movwf	(_efgtoa$1511+1)& (0+255),b
  7582  0013FC  0E2D               	movlw	45
  7583  0013FE  6F72               	movwf	_efgtoa$1511& (0+255),b
  7584  001400                     l4894:
  7585                           
  7586                           ; BSR set to: 0
  7587  001400  0E0E               	movlw	low _dbuf
  7588  001402  2596               	addwf	efgtoa@i& (0+255),w,b
  7589  001404  6ED9               	movwf	fsr2l,c
  7590  001406  0E01               	movlw	high _dbuf
  7591  001408  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7592  00140A  6EDA               	movwf	fsr2h,c
  7593  00140C  C072  FFDF         	movff	_efgtoa$1511,indf2
  7594  001410                     
  7595                           ; BSR set to: 0
  7596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  7597  001410  078A               	decf	efgtoa@w& (0+255),f,b
  7598  001412  A0D8               	btfss	status,0,c
  7599  001414  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7600  001416                     
  7601                           ; BSR set to: 0
  7602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7603  001416  0796               	decf	efgtoa@i& (0+255),f,b
  7604  001418  A0D8               	btfss	status,0,c
  7605  00141A  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7606  00141C                     
  7607                           ; BSR set to: 0
  7608  00141C  0EBF               	movlw	191
  7609  00141E  6F67               	movwf	??_efgtoa& (0+255),b
  7610  001420  0EFF               	movlw	255
  7611  001422  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  7612  001424  5166               	movf	efgtoa@c& (0+255),w,b
  7613  001426  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  7614  001428  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  7615  00142A  5167               	movf	??_efgtoa& (0+255),w,b
  7616  00142C  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  7617  00142E  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  7618  001430  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7619  001432  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  7620  001434  E10A               	bnz	u5190
  7621  001436  0E1A               	movlw	26
  7622  001438  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  7623  00143A  A0D8               	btfss	status,0,c
  7624  00143C  EF22  F00A         	goto	u5191
  7625  001440  EF25  F00A         	goto	u5190
  7626  001444                     u5191:
  7627  001444  0E01               	movlw	1
  7628  001446  EF26  F00A         	goto	u5200
  7629  00144A                     u5190:
  7630  00144A  0E00               	movlw	0
  7631  00144C                     u5200:
  7632  00144C  6F76               	movwf	_efgtoa$1513& (0+255),b
  7633  00144E  6B77               	clrf	(_efgtoa$1513+1)& (0+255),b
  7634  001450                     
  7635                           ; BSR set to: 0
  7636  001450  5176               	movf	_efgtoa$1513& (0+255),w,b
  7637  001452  1177               	iorwf	(_efgtoa$1513+1)& (0+255),w,b
  7638  001454  A4D8               	btfss	status,2,c
  7639  001456  EF2F  F00A         	goto	u5211
  7640  00145A  EF31  F00A         	goto	u5210
  7641  00145E                     u5211:
  7642  00145E  EF37  F00A         	goto	l4908
  7643  001462                     u5210:
  7644  001462                     
  7645                           ; BSR set to: 0
  7646  001462  0E00               	movlw	0
  7647  001464  6F75               	movwf	(_efgtoa$1512+1)& (0+255),b
  7648  001466  0E65               	movlw	101
  7649  001468  6F74               	movwf	_efgtoa$1512& (0+255),b
  7650  00146A  EF3B  F00A         	goto	l4910
  7651  00146E                     l4908:
  7652                           
  7653                           ; BSR set to: 0
  7654  00146E  0E00               	movlw	0
  7655  001470  6F75               	movwf	(_efgtoa$1512+1)& (0+255),b
  7656  001472  0E45               	movlw	69
  7657  001474  6F74               	movwf	_efgtoa$1512& (0+255),b
  7658  001476                     l4910:
  7659                           
  7660                           ; BSR set to: 0
  7661  001476  0E0E               	movlw	low _dbuf
  7662  001478  2596               	addwf	efgtoa@i& (0+255),w,b
  7663  00147A  6ED9               	movwf	fsr2l,c
  7664  00147C  0E01               	movlw	high _dbuf
  7665  00147E  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7666  001480  6EDA               	movwf	fsr2h,c
  7667  001482  C074  FFDF         	movff	_efgtoa$1512,indf2
  7668  001486                     
  7669                           ; BSR set to: 0
  7670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  7671  001486  078A               	decf	efgtoa@w& (0+255),f,b
  7672  001488  A0D8               	btfss	status,0,c
  7673  00148A  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7674  00148C                     
  7675                           ; BSR set to: 0
  7676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  7677  00148C  0E0E               	movlw	low _dbuf
  7678  00148E  259E               	addwf	efgtoa@n& (0+255),w,b
  7679  001490  6E01               	movwf	strcpy@dest^0,c
  7680  001492  0E01               	movlw	high _dbuf
  7681  001494  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7682  001496  6E02               	movwf	(strcpy@dest+1)^0,c
  7683  001498  0E0E               	movlw	low _dbuf
  7684  00149A  2596               	addwf	efgtoa@i& (0+255),w,b
  7685  00149C  6E03               	movwf	strcpy@src^0,c
  7686  00149E  0E01               	movlw	high _dbuf
  7687  0014A0  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7688  0014A2  6E04               	movwf	(strcpy@src+1)^0,c
  7689  0014A4  EC86  F021         	call	_strcpy	;wreg free
  7690  0014A8  EFDE  F004         	goto	l4656
  7691  0014AC                     l1342:
  7692  0014AC  0012               	return		;funcret
  7693  0014AE                     __end_of_efgtoa:
  7694                           	callstack 0
  7695                           
  7696 ;; *************** function _tolower *****************
  7697 ;; Defined at:
  7698 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;  c               2    6[COMRAM] int 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;		None
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  2    6[COMRAM] int 
  7705 ;; Registers used:
  7706 ;;		wreg, status,2, status,0
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7712 ;;      Params:         2       0       0       0       0       0       0       0       0
  7713 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7714 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7715 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7716 ;;Total ram usage:        8 bytes
  7717 ;; Hardware stack levels used: 1
  7718 ;; Hardware stack levels required when called: 1
  7719 ;; This function calls:
  7720 ;;		_isupper
  7721 ;; This function is called by:
  7722 ;;		_efgtoa
  7723 ;;		_vfpfcnvrt
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text32
  7728  004192                     __ptext32:
  7729                           	callstack 0
  7730  004192                     _tolower:
  7731                           	callstack 25
  7732  004192  0EBF               	movlw	191
  7733  004194  6E09               	movwf	??_tolower^0,c
  7734  004196  0EFF               	movlw	255
  7735  004198  6E0A               	movwf	(??_tolower+1)^0,c
  7736  00419A  C007  F00B         	movff	tolower@c,??_tolower+2
  7737  00419E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  7738  0041A2  5009               	movf	??_tolower^0,w,c
  7739  0041A4  260B               	addwf	(??_tolower+2)^0,f,c
  7740  0041A6  500A               	movf	(??_tolower+1)^0,w,c
  7741  0041A8  220C               	addwfc	(??_tolower+3)^0,f,c
  7742  0041AA  500C               	movf	(??_tolower+3)^0,w,c
  7743  0041AC  E10A               	bnz	u4430
  7744  0041AE  0E1A               	movlw	26
  7745  0041B0  5C0B               	subwf	(??_tolower+2)^0,w,c
  7746  0041B2  A0D8               	btfss	status,0,c
  7747  0041B4  EFDE  F020         	goto	u4431
  7748  0041B8  EFE1  F020         	goto	u4430
  7749  0041BC                     u4431:
  7750  0041BC  0E01               	movlw	1
  7751  0041BE  EFE2  F020         	goto	u4440
  7752  0041C2                     u4430:
  7753  0041C2  0E00               	movlw	0
  7754  0041C4                     u4440:
  7755  0041C4  6E0D               	movwf	_tolower$1681^0,c
  7756  0041C6  6A0E               	clrf	(_tolower$1681+1)^0,c
  7757  0041C8  500D               	movf	_tolower$1681^0,w,c
  7758  0041CA  100E               	iorwf	(_tolower$1681+1)^0,w,c
  7759  0041CC  B4D8               	btfsc	status,2,c
  7760  0041CE  EFEB  F020         	goto	u4451
  7761  0041D2  EFED  F020         	goto	u4450
  7762  0041D6                     u4451:
  7763  0041D6  EFF4  F020         	goto	l1623
  7764  0041DA                     u4450:
  7765  0041DA  0E20               	movlw	32
  7766  0041DC  1007               	iorwf	tolower@c^0,w,c
  7767  0041DE  6E07               	movwf	?_tolower^0,c
  7768  0041E0  5008               	movf	(tolower@c+1)^0,w,c
  7769  0041E2  6E08               	movwf	(?_tolower+1)^0,c
  7770  0041E4  EFF8  F020         	goto	l1628
  7771  0041E8                     l1623:
  7772  0041E8  C007  F007         	movff	tolower@c,?_tolower
  7773  0041EC  C008  F008         	movff	tolower@c+1,?_tolower+1
  7774  0041F0                     l1628:
  7775  0041F0  0012               	return		;funcret
  7776  0041F2                     __end_of_tolower:
  7777                           	callstack 0
  7778                           
  7779 ;; *************** function _isupper *****************
  7780 ;; Defined at:
  7781 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;  c               2    0[COMRAM] int 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;		None
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  2    0[COMRAM] int 
  7788 ;; Registers used:
  7789 ;;		wreg, status,2, status,0
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7795 ;;      Params:         2       0       0       0       0       0       0       0       0
  7796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7797 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7798 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7799 ;;Total ram usage:        6 bytes
  7800 ;; Hardware stack levels used: 1
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_efgtoa
  7805 ;;		_xtoa
  7806 ;;		_vfpfcnvrt
  7807 ;;		_tolower
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text33
  7812  004852                     __ptext33:
  7813                           	callstack 0
  7814  004852                     _isupper:
  7815                           	callstack 25
  7816  004852  0EBF               	movlw	191
  7817  004854  6E03               	movwf	??_isupper^0,c
  7818  004856  0EFF               	movlw	255
  7819  004858  6E04               	movwf	(??_isupper+1)^0,c
  7820  00485A  C001  F005         	movff	isupper@c,??_isupper+2
  7821  00485E  C002  F006         	movff	isupper@c+1,??_isupper+3
  7822  004862  5003               	movf	??_isupper^0,w,c
  7823  004864  2605               	addwf	(??_isupper+2)^0,f,c
  7824  004866  5004               	movf	(??_isupper+1)^0,w,c
  7825  004868  2206               	addwfc	(??_isupper+3)^0,f,c
  7826  00486A  5006               	movf	(??_isupper+3)^0,w,c
  7827  00486C  E10A               	bnz	u3560
  7828  00486E  0E1A               	movlw	26
  7829  004870  5C05               	subwf	(??_isupper+2)^0,w,c
  7830  004872  A0D8               	btfss	status,0,c
  7831  004874  EF3E  F024         	goto	u3561
  7832  004878  EF41  F024         	goto	u3560
  7833  00487C                     u3561:
  7834  00487C  0E01               	movlw	1
  7835  00487E  EF42  F024         	goto	u3570
  7836  004882                     u3560:
  7837  004882  0E00               	movlw	0
  7838  004884                     u3570:
  7839  004884  6E01               	movwf	?_isupper^0,c
  7840  004886  6A02               	clrf	(?_isupper+1)^0,c
  7841  004888  0012               	return		;funcret
  7842  00488A                     __end_of_isupper:
  7843                           	callstack 0
  7844                           
  7845 ;; *************** function _strcpy *****************
  7846 ;; Defined at:
  7847 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7850 ;;		 -> dbuf(80), 
  7851 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7852 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  7853 ;;		 -> dbuf(80), 
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;  d               2    8[COMRAM] PTR unsigned char 
  7856 ;;		 -> dbuf(80), 
  7857 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7858 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  7859 ;;		 -> dbuf(80), 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  2    0[COMRAM] PTR unsigned char 
  7862 ;; Registers used:
  7863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7869 ;;      Params:         4       0       0       0       0       0       0       0       0
  7870 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7871 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7872 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7873 ;;Total ram usage:       10 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; This function calls:
  7876 ;;		Nothing
  7877 ;; This function is called by:
  7878 ;;		_efgtoa
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text34
  7883  00430C                     __ptext34:
  7884                           	callstack 0
  7885  00430C                     _strcpy:
  7886                           	callstack 25
  7887  00430C  C003  F007         	movff	strcpy@src,strcpy@s
  7888  004310  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  7889  004314  C001  F009         	movff	strcpy@dest,strcpy@d
  7890  004318  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  7891  00431C                     l4524:
  7892  00431C  5007               	movf	strcpy@s^0,w,c
  7893  00431E  6E05               	movwf	??_strcpy^0,c
  7894  004320  5008               	movf	(strcpy@s+1)^0,w,c
  7895  004322  6E06               	movwf	(??_strcpy+1)^0,c
  7896  004324  4A07               	infsnz	strcpy@s^0,f,c
  7897  004326  2A08               	incf	(strcpy@s+1)^0,f,c
  7898  004328  C005  FFF6         	movff	??_strcpy,tblptrl
  7899  00432C  C006  FFF7         	movff	??_strcpy+1,tblptrh
  7900  004330  6AF8               	clrf	tblptru,c
  7901  004332  C009  FFD9         	movff	strcpy@d,fsr2l
  7902  004336  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  7903  00433A  4A09               	infsnz	strcpy@d^0,f,c
  7904  00433C  2A0A               	incf	(strcpy@d+1)^0,f,c
  7905  00433E  0E07               	movlw	(high __ramtop+-1)
  7906  004340  64F7               	cpfsgt	tblptrh,c
  7907  004342  D003               	bra	u4417
  7908  004344  0008               	tblrd		*
  7909  004346  50F5               	movf	tablat,w,c
  7910  004348  D005               	bra	u4410
  7911  00434A                     u4417:
  7912  00434A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7913  00434E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7914  004352  50E7               	movf	indf1,w,c
  7915  004354                     u4410:
  7916  004354  6EDF               	movwf	indf2,c
  7917  004356  50DF               	movf	indf2,w,c
  7918  004358  A4D8               	btfss	status,2,c
  7919  00435A  EFB1  F021         	goto	u4421
  7920  00435E  EFB3  F021         	goto	u4420
  7921  004362                     u4421:
  7922  004362  EF8E  F021         	goto	l4524
  7923  004366                     u4420:
  7924  004366  0012               	return		;funcret
  7925  004368                     __end_of_strcpy:
  7926                           	callstack 0
  7927                           
  7928 ;; *************** function _pad *****************
  7929 ;; Defined at:
  7930 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7933 ;;		 -> sprintf@f(6), 
  7934 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7935 ;;		 -> dbuf(80), 
  7936 ;;  p               2   20[COMRAM] int 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  w               2   25[COMRAM] int 
  7939 ;;  i               2   23[COMRAM] int 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  2   16[COMRAM] int 
  7942 ;; Registers used:
  7943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7949 ;;      Params:         6       0       0       0       0       0       0       0       0
  7950 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7951 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7952 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7953 ;;Total ram usage:       11 bytes
  7954 ;; Hardware stack levels used: 1
  7955 ;; Hardware stack levels required when called: 3
  7956 ;; This function calls:
  7957 ;;		_fputc
  7958 ;;		_fputs
  7959 ;;		_strlen
  7960 ;; This function is called by:
  7961 ;;		_efgtoa
  7962 ;;		_xtoa
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           	psect	text35
  7967  003BDC                     __ptext35:
  7968                           	callstack 0
  7969  003BDC                     _pad:
  7970                           	callstack 22
  7971  003BDC                     
  7972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7973  003BDC  0100               	movlb	0	; () banked
  7974  003BDE  A1F8               	btfss	_flags& (0+255),0,b
  7975  003BE0  EFF4  F01D         	goto	u4301
  7976  003BE4  EFF6  F01D         	goto	u4300
  7977  003BE8                     u4301:
  7978  003BE8  EF00  F01E         	goto	l4482
  7979  003BEC                     u4300:
  7980  003BEC                     
  7981                           ; BSR set to: 0
  7982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7983  003BEC  C013  F00A         	movff	pad@buf,fputs@s
  7984  003BF0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7985  003BF4  C011  F00C         	movff	pad@fp,fputs@fp
  7986  003BF8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7987  003BFC  EC90  F023         	call	_fputs	;wreg free
  7988  003C00                     l4482:
  7989                           
  7990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7991  003C00  BE16               	btfsc	(pad@p+1)^0,7,c
  7992  003C02  EF05  F01E         	goto	u4311
  7993  003C06  EF07  F01E         	goto	u4310
  7994  003C0A                     u4311:
  7995  003C0A  EF0D  F01E         	goto	l4486
  7996  003C0E                     u4310:
  7997  003C0E  C015  F01A         	movff	pad@p,pad@w
  7998  003C12  C016  F01B         	movff	pad@p+1,pad@w+1
  7999  003C16  EF11  F01E         	goto	l1319
  8000  003C1A                     l4486:
  8001  003C1A  0E00               	movlw	0
  8002  003C1C  6E1B               	movwf	(pad@w+1)^0,c
  8003  003C1E  0E00               	movlw	0
  8004  003C20  6E1A               	movwf	pad@w^0,c
  8005  003C22                     l1319:
  8006                           
  8007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8008  003C22  0E00               	movlw	0
  8009  003C24  6E19               	movwf	(pad@i+1)^0,c
  8010  003C26  0E00               	movlw	0
  8011  003C28  6E18               	movwf	pad@i^0,c
  8012                           
  8013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8014  003C2A  EF23  F01E         	goto	l4492
  8015  003C2E                     l4488:
  8016                           
  8017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8018  003C2E  0E00               	movlw	0
  8019  003C30  6E02               	movwf	(fputc@c+1)^0,c
  8020  003C32  0E20               	movlw	32
  8021  003C34  6E01               	movwf	fputc@c^0,c
  8022  003C36  C011  F003         	movff	pad@fp,fputc@fp
  8023  003C3A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8024  003C3E  EC89  F01D         	call	_fputc	;wreg free
  8025  003C42                     
  8026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8027  003C42  4A18               	infsnz	pad@i^0,f,c
  8028  003C44  2A19               	incf	(pad@i+1)^0,f,c
  8029  003C46                     l4492:
  8030                           
  8031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8032  003C46  501A               	movf	pad@w^0,w,c
  8033  003C48  5C18               	subwf	pad@i^0,w,c
  8034  003C4A  5019               	movf	(pad@i+1)^0,w,c
  8035  003C4C  0A80               	xorlw	128
  8036  003C4E  6E17               	movwf	??_pad^0,c
  8037  003C50  501B               	movf	(pad@w+1)^0,w,c
  8038  003C52  0A80               	xorlw	128
  8039  003C54  5817               	subwfb	??_pad^0,w,c
  8040  003C56  A0D8               	btfss	status,0,c
  8041  003C58  EF30  F01E         	goto	u4321
  8042  003C5C  EF32  F01E         	goto	u4320
  8043  003C60                     u4321:
  8044  003C60  EF17  F01E         	goto	l4488
  8045  003C64                     u4320:
  8046  003C64                     
  8047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8048  003C64  0100               	movlb	0	; () banked
  8049  003C66  B1F8               	btfsc	_flags& (0+255),0,b
  8050  003C68  EF38  F01E         	goto	u4331
  8051  003C6C  EF3A  F01E         	goto	u4330
  8052  003C70                     u4331:
  8053  003C70  EF44  F01E         	goto	l4496
  8054  003C74                     u4330:
  8055  003C74                     
  8056                           ; BSR set to: 0
  8057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8058  003C74  C013  F00A         	movff	pad@buf,fputs@s
  8059  003C78  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8060  003C7C  C011  F00C         	movff	pad@fp,fputs@fp
  8061  003C80  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8062  003C84  EC90  F023         	call	_fputs	;wreg free
  8063  003C88                     l4496:
  8064                           
  8065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8066  003C88  C013  F001         	movff	pad@buf,strlen@s
  8067  003C8C  C014  F002         	movff	pad@buf+1,strlen@s+1
  8068  003C90  EC99  F024         	call	_strlen	;wreg free
  8069  003C94  501A               	movf	pad@w^0,w,c
  8070  003C96  2401               	addwf	?_strlen^0,w,c
  8071  003C98  6E11               	movwf	?_pad^0,c
  8072  003C9A  501B               	movf	(pad@w+1)^0,w,c
  8073  003C9C  2002               	addwfc	(?_strlen+1)^0,w,c
  8074  003C9E  6E12               	movwf	(?_pad+1)^0,c
  8075  003CA0  0012               	return		;funcret
  8076  003CA2                     __end_of_pad:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function _strlen *****************
  8080 ;; Defined at:
  8081 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8084 ;;		 -> dbuf(80), 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8087 ;;		 -> dbuf(80), 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  2    0[COMRAM] unsigned int 
  8090 ;; Registers used:
  8091 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8097 ;;      Params:         2       0       0       0       0       0       0       0       0
  8098 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8100 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8101 ;;Total ram usage:        4 bytes
  8102 ;; Hardware stack levels used: 1
  8103 ;; This function calls:
  8104 ;;		Nothing
  8105 ;; This function is called by:
  8106 ;;		_pad
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text36
  8111  004932                     __ptext36:
  8112                           	callstack 0
  8113  004932                     _strlen:
  8114                           	callstack 24
  8115  004932  C001  F003         	movff	strlen@s,strlen@a
  8116  004936  C002  F004         	movff	strlen@s+1,strlen@a+1
  8117  00493A  EFA1  F024         	goto	l4014
  8118  00493E                     l4012:
  8119  00493E  4A01               	infsnz	strlen@s^0,f,c
  8120  004940  2A02               	incf	(strlen@s+1)^0,f,c
  8121  004942                     l4014:
  8122  004942  C001  FFD9         	movff	strlen@s,fsr2l
  8123  004946  C002  FFDA         	movff	strlen@s+1,fsr2h
  8124  00494A  50DF               	movf	indf2,w,c
  8125  00494C  A4D8               	btfss	status,2,c
  8126  00494E  EFAB  F024         	goto	u3551
  8127  004952  EFAD  F024         	goto	u3550
  8128  004956                     u3551:
  8129  004956  EF9F  F024         	goto	l4012
  8130  00495A                     u3550:
  8131  00495A  5003               	movf	strlen@a^0,w,c
  8132  00495C  5C01               	subwf	strlen@s^0,w,c
  8133  00495E  6E01               	movwf	?_strlen^0,c
  8134  004960  5004               	movf	(strlen@a+1)^0,w,c
  8135  004962  5802               	subwfb	(strlen@s+1)^0,w,c
  8136  004964  6E02               	movwf	(?_strlen+1)^0,c
  8137  004966  0012               	return		;funcret
  8138  004968                     __end_of_strlen:
  8139                           	callstack 0
  8140                           
  8141 ;; *************** function _fputs *****************
  8142 ;; Defined at:
  8143 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8146 ;;		 -> dbuf(80), 
  8147 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8148 ;;		 -> sprintf@f(6), 
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;  i               2   14[COMRAM] int 
  8151 ;;  c               1   13[COMRAM] unsigned char 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  2    9[COMRAM] int 
  8154 ;; Registers used:
  8155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8161 ;;      Params:         4       0       0       0       0       0       0       0       0
  8162 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8164 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8165 ;;Total ram usage:        7 bytes
  8166 ;; Hardware stack levels used: 1
  8167 ;; Hardware stack levels required when called: 2
  8168 ;; This function calls:
  8169 ;;		_fputc
  8170 ;; This function is called by:
  8171 ;;		_pad
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text37
  8176  004720                     __ptext37:
  8177                           	callstack 0
  8178  004720                     _fputs:
  8179                           	callstack 22
  8180  004720  0E00               	movlw	0
  8181  004722  6E10               	movwf	(fputs@i+1)^0,c
  8182  004724  0E00               	movlw	0
  8183  004726  6E0F               	movwf	fputs@i^0,c
  8184  004728  EFA1  F023         	goto	l4008
  8185  00472C                     l4004:
  8186  00472C  C00E  F001         	movff	fputs@c,fputc@c
  8187  004730  6A02               	clrf	(fputc@c+1)^0,c
  8188  004732  C00C  F003         	movff	fputs@fp,fputc@fp
  8189  004736  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8190  00473A  EC89  F01D         	call	_fputc	;wreg free
  8191  00473E  4A0F               	infsnz	fputs@i^0,f,c
  8192  004740  2A10               	incf	(fputs@i+1)^0,f,c
  8193  004742                     l4008:
  8194  004742  500F               	movf	fputs@i^0,w,c
  8195  004744  240A               	addwf	fputs@s^0,w,c
  8196  004746  6ED9               	movwf	fsr2l,c
  8197  004748  5010               	movf	(fputs@i+1)^0,w,c
  8198  00474A  200B               	addwfc	(fputs@s+1)^0,w,c
  8199  00474C  6EDA               	movwf	fsr2h,c
  8200  00474E  50DF               	movf	indf2,w,c
  8201  004750  6E0E               	movwf	fputs@c^0,c
  8202  004752  500E               	movf	fputs@c^0,w,c
  8203  004754  A4D8               	btfss	status,2,c
  8204  004756  EFAF  F023         	goto	u3541
  8205  00475A  EFB1  F023         	goto	u3540
  8206  00475E                     u3541:
  8207  00475E  EF96  F023         	goto	l4004
  8208  004762                     u3540:
  8209  004762  0012               	return		;funcret
  8210  004764                     __end_of_fputs:
  8211                           	callstack 0
  8212                           
  8213 ;; *************** function _fputc *****************
  8214 ;; Defined at:
  8215 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;  c               2    0[COMRAM] int 
  8218 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8219 ;;		 -> sprintf@f(6), 
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;		None
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  2    0[COMRAM] int 
  8224 ;; Registers used:
  8225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8231 ;;      Params:         4       0       0       0       0       0       0       0       0
  8232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8233 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8234 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8235 ;;Total ram usage:        9 bytes
  8236 ;; Hardware stack levels used: 1
  8237 ;; Hardware stack levels required when called: 1
  8238 ;; This function calls:
  8239 ;;		_putch
  8240 ;; This function is called by:
  8241 ;;		_pad
  8242 ;;		_vfpfcnvrt
  8243 ;;		_fputs
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text38
  8248  003B12                     __ptext38:
  8249                           	callstack 0
  8250  003B12                     _fputc:
  8251                           	callstack 22
  8252  003B12  5003               	movf	fputc@fp^0,w,c
  8253  003B14  1004               	iorwf	(fputc@fp+1)^0,w,c
  8254  003B16  B4D8               	btfsc	status,2,c
  8255  003B18  EF90  F01D         	goto	u3111
  8256  003B1C  EF92  F01D         	goto	u3110
  8257  003B20                     u3111:
  8258  003B20  EF9B  F01D         	goto	l3790
  8259  003B24                     u3110:
  8260  003B24  5003               	movf	fputc@fp^0,w,c
  8261  003B26  1004               	iorwf	(fputc@fp+1)^0,w,c
  8262  003B28  A4D8               	btfss	status,2,c
  8263  003B2A  EF99  F01D         	goto	u3121
  8264  003B2E  EF9B  F01D         	goto	u3120
  8265  003B32                     u3121:
  8266  003B32  EFA0  F01D         	goto	l3792
  8267  003B36                     u3120:
  8268  003B36                     l3790:
  8269  003B36  5001               	movf	fputc@c^0,w,c
  8270  003B38  ECA4  F025         	call	_putch
  8271  003B3C  EFED  F01D         	goto	l1586
  8272  003B40                     l3792:
  8273  003B40  EE20 F004          	lfsr	2,4
  8274  003B44  5003               	movf	fputc@fp^0,w,c
  8275  003B46  26D9               	addwf	fsr2l,f,c
  8276  003B48  5004               	movf	(fputc@fp+1)^0,w,c
  8277  003B4A  22DA               	addwfc	fsr2h,f,c
  8278  003B4C  50DE               	movf	postinc2,w,c
  8279  003B4E  10DE               	iorwf	postinc2,w,c
  8280  003B50  B4D8               	btfsc	status,2,c
  8281  003B52  EFAD  F01D         	goto	u3131
  8282  003B56  EFAF  F01D         	goto	u3130
  8283  003B5A                     u3131:
  8284  003B5A  EFCA  F01D         	goto	l3796
  8285  003B5E                     u3130:
  8286  003B5E  EE20 F004          	lfsr	2,4
  8287  003B62  5003               	movf	fputc@fp^0,w,c
  8288  003B64  26D9               	addwf	fsr2l,f,c
  8289  003B66  5004               	movf	(fputc@fp+1)^0,w,c
  8290  003B68  22DA               	addwfc	fsr2h,f,c
  8291  003B6A  EE10 F002          	lfsr	1,2
  8292  003B6E  5003               	movf	fputc@fp^0,w,c
  8293  003B70  26E1               	addwf	fsr1l,f,c
  8294  003B72  5004               	movf	(fputc@fp+1)^0,w,c
  8295  003B74  22E2               	addwfc	fsr1h,f,c
  8296  003B76  50DE               	movf	postinc2,w,c
  8297  003B78  5CE6               	subwf	postinc1,w,c
  8298  003B7A  50E6               	movf	postinc1,w,c
  8299  003B7C  0A80               	xorlw	128
  8300  003B7E  6E09               	movwf	(??_fputc+4)^0,c
  8301  003B80  50DE               	movf	postinc2,w,c
  8302  003B82  0A80               	xorlw	128
  8303  003B84  5809               	subwfb	(??_fputc+4)^0,w,c
  8304  003B86  B0D8               	btfsc	status,0,c
  8305  003B88  EFC8  F01D         	goto	u3141
  8306  003B8C  EFCA  F01D         	goto	u3140
  8307  003B90                     u3141:
  8308  003B90  EFED  F01D         	goto	l1586
  8309  003B94                     u3140:
  8310  003B94                     l3796:
  8311  003B94  EE20 F002          	lfsr	2,2
  8312  003B98  5003               	movf	fputc@fp^0,w,c
  8313  003B9A  26D9               	addwf	fsr2l,f,c
  8314  003B9C  5004               	movf	(fputc@fp+1)^0,w,c
  8315  003B9E  22DA               	addwfc	fsr2h,f,c
  8316  003BA0  CFDE F005          	movff	postinc2,??_fputc
  8317  003BA4  CFDD F006          	movff	postdec2,??_fputc+1
  8318  003BA8  C003  FFD9         	movff	fputc@fp,fsr2l
  8319  003BAC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8320  003BB0  CFDE F007          	movff	postinc2,??_fputc+2
  8321  003BB4  CFDD F008          	movff	postdec2,??_fputc+3
  8322  003BB8  5005               	movf	??_fputc^0,w,c
  8323  003BBA  2407               	addwf	(??_fputc+2)^0,w,c
  8324  003BBC  6ED9               	movwf	fsr2l,c
  8325  003BBE  5006               	movf	(??_fputc+1)^0,w,c
  8326  003BC0  2008               	addwfc	(??_fputc+3)^0,w,c
  8327  003BC2  6EDA               	movwf	fsr2h,c
  8328  003BC4  C001  FFDF         	movff	fputc@c,indf2
  8329  003BC8  EE20 F002          	lfsr	2,2
  8330  003BCC  5003               	movf	fputc@fp^0,w,c
  8331  003BCE  26D9               	addwf	fsr2l,f,c
  8332  003BD0  5004               	movf	(fputc@fp+1)^0,w,c
  8333  003BD2  22DA               	addwfc	fsr2h,f,c
  8334  003BD4  2ADE               	incf	postinc2,f,c
  8335  003BD6  0E00               	movlw	0
  8336  003BD8  22DD               	addwfc	postdec2,f,c
  8337  003BDA                     l1586:
  8338  003BDA  0012               	return		;funcret
  8339  003BDC                     __end_of_fputc:
  8340                           	callstack 0
  8341                           
  8342 ;; *************** function _putch *****************
  8343 ;; Defined at:
  8344 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  c               1    wreg     unsigned char 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  c               1    0[COMRAM] unsigned char 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		wreg
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8358 ;;      Params:         0       0       0       0       0       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8361 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8362 ;;Total ram usage:        0 bytes
  8363 ;; Hardware stack levels used: 1
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_fputc
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text39
  8372  004B48                     __ptext39:
  8373                           	callstack 0
  8374  004B48                     _putch:
  8375                           	callstack 22
  8376  004B48  0012               	return		;funcret
  8377  004B4A                     __end_of_putch:
  8378                           	callstack 0
  8379                           
  8380 ;; *************** function _floorf *****************
  8381 ;; Defined at:
  8382 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  x               4   68[COMRAM] float 
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  u               4   84[COMRAM] struct .
  8387 ;;  m               4   78[COMRAM] unsigned long 
  8388 ;;  e               2   82[COMRAM] int 
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  4   68[COMRAM] float 
  8391 ;; Registers used:
  8392 ;;		wreg, status,2, status,0
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8398 ;;      Params:         4       0       0       0       0       0       0       0       0
  8399 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8400 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8401 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8402 ;;Total ram usage:       20 bytes
  8403 ;; Hardware stack levels used: 1
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_efgtoa
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           	psect	text40
  8412  002F88                     __ptext40:
  8413                           	callstack 0
  8414  002F88                     _floorf:
  8415                           	callstack 25
  8416  002F88  C0E2  F055         	movff	floorf@F527,floorf@u
  8417  002F8C  C0E3  F056         	movff	floorf@F527+1,floorf@u+1
  8418  002F90  C0E4  F057         	movff	floorf@F527+2,floorf@u+2
  8419  002F94  C0E5  F058         	movff	floorf@F527+3,floorf@u+3
  8420  002F98  C045  F055         	movff	floorf@x,floorf@u
  8421  002F9C  C046  F056         	movff	floorf@x+1,floorf@u+1
  8422  002FA0  C047  F057         	movff	floorf@x+2,floorf@u+2
  8423  002FA4  C048  F058         	movff	floorf@x+3,floorf@u+3
  8424  002FA8  0E81               	movlw	129
  8425  002FAA  6E49               	movwf	??_floorf^0,c
  8426  002FAC  0EFF               	movlw	255
  8427  002FAE  6E4A               	movwf	(??_floorf+1)^0,c
  8428  002FB0  C055  F04B         	movff	floorf@u,??_floorf+2
  8429  002FB4  C056  F04C         	movff	floorf@u+1,??_floorf+3
  8430  002FB8  C057  F04D         	movff	floorf@u+2,??_floorf+4
  8431  002FBC  C058  F04E         	movff	floorf@u+3,??_floorf+5
  8432  002FC0  0E18               	movlw	24
  8433  002FC2  EFE8  F017         	goto	u4460
  8434  002FC6                     u4465:
  8435  002FC6  90D8               	bcf	status,0,c
  8436  002FC8  324E               	rrcf	(??_floorf+5)^0,f,c
  8437  002FCA  324D               	rrcf	(??_floorf+4)^0,f,c
  8438  002FCC  324C               	rrcf	(??_floorf+3)^0,f,c
  8439  002FCE  324B               	rrcf	(??_floorf+2)^0,f,c
  8440  002FD0                     u4460:
  8441  002FD0  2EE8               	decfsz	wreg,f,c
  8442  002FD2  EFE3  F017         	goto	u4465
  8443  002FD6  504B               	movf	(??_floorf+2)^0,w,c
  8444  002FD8  2449               	addwf	??_floorf^0,w,c
  8445  002FDA  6E53               	movwf	floorf@e^0,c
  8446  002FDC  0E00               	movlw	0
  8447  002FDE  204A               	addwfc	(??_floorf+1)^0,w,c
  8448  002FE0  6E54               	movwf	(floorf@e+1)^0,c
  8449  002FE2  BE54               	btfsc	(floorf@e+1)^0,7,c
  8450  002FE4  EFFD  F017         	goto	u4471
  8451  002FE8  5054               	movf	(floorf@e+1)^0,w,c
  8452  002FEA  E109               	bnz	u4470
  8453  002FEC  0E17               	movlw	23
  8454  002FEE  5C53               	subwf	floorf@e^0,w,c
  8455  002FF0  A0D8               	btfss	status,0,c
  8456  002FF2  EFFD  F017         	goto	u4471
  8457  002FF6  EFFF  F017         	goto	u4470
  8458  002FFA                     u4471:
  8459  002FFA  EF09  F018         	goto	l4542
  8460  002FFE                     u4470:
  8461  002FFE                     l4540:
  8462  002FFE  C045  F045         	movff	floorf@x,?_floorf
  8463  003002  C046  F046         	movff	floorf@x+1,?_floorf+1
  8464  003006  C047  F047         	movff	floorf@x+2,?_floorf+2
  8465  00300A  C048  F048         	movff	floorf@x+3,?_floorf+3
  8466  00300E  EFCC  F018         	goto	l1541
  8467  003012                     l4542:
  8468  003012  BE54               	btfsc	(floorf@e+1)^0,7,c
  8469  003014  EF0E  F018         	goto	u4481
  8470  003018  EF10  F018         	goto	u4480
  8471  00301C                     u4481:
  8472  00301C  EF80  F018         	goto	l4552
  8473  003020                     u4480:
  8474  003020  C053  F049         	movff	floorf@e,??_floorf
  8475  003024  0EFF               	movlw	255
  8476  003026  6E4A               	movwf	(??_floorf+1)^0,c
  8477  003028  0EFF               	movlw	255
  8478  00302A  6E4B               	movwf	(??_floorf+2)^0,c
  8479  00302C  0E7F               	movlw	127
  8480  00302E  6E4C               	movwf	(??_floorf+3)^0,c
  8481  003030  0E00               	movlw	0
  8482  003032  6E4D               	movwf	(??_floorf+4)^0,c
  8483  003034                     u4495:
  8484  003034  6649               	tstfsz	??_floorf^0,c
  8485  003036  EF1F  F018         	goto	u4496
  8486  00303A  EF27  F018         	goto	u4497
  8487  00303E                     u4496:
  8488  00303E  344D               	rlcf	(??_floorf+4)^0,w,c
  8489  003040  324D               	rrcf	(??_floorf+4)^0,f,c
  8490  003042  324C               	rrcf	(??_floorf+3)^0,f,c
  8491  003044  324B               	rrcf	(??_floorf+2)^0,f,c
  8492  003046  324A               	rrcf	(??_floorf+1)^0,f,c
  8493  003048  2E49               	decfsz	??_floorf^0,f,c
  8494  00304A  EF1A  F018         	goto	u4495
  8495  00304E                     u4497:
  8496  00304E  C04A  F04F         	movff	??_floorf+1,floorf@m
  8497  003052  C04B  F050         	movff	??_floorf+2,floorf@m+1
  8498  003056  C04C  F051         	movff	??_floorf+3,floorf@m+2
  8499  00305A  C04D  F052         	movff	??_floorf+4,floorf@m+3
  8500  00305E  504F               	movf	floorf@m^0,w,c
  8501  003060  1455               	andwf	floorf@u^0,w,c
  8502  003062  6E49               	movwf	??_floorf^0,c
  8503  003064  5050               	movf	(floorf@m+1)^0,w,c
  8504  003066  1456               	andwf	(floorf@u+1)^0,w,c
  8505  003068  6E4A               	movwf	(??_floorf+1)^0,c
  8506  00306A  5051               	movf	(floorf@m+2)^0,w,c
  8507  00306C  1457               	andwf	(floorf@u+2)^0,w,c
  8508  00306E  6E4B               	movwf	(??_floorf+2)^0,c
  8509  003070  5052               	movf	(floorf@m+3)^0,w,c
  8510  003072  1458               	andwf	(floorf@u+3)^0,w,c
  8511  003074  6E4C               	movwf	(??_floorf+3)^0,c
  8512  003076  5049               	movf	??_floorf^0,w,c
  8513  003078  104A               	iorwf	(??_floorf+1)^0,w,c
  8514  00307A  104B               	iorwf	(??_floorf+2)^0,w,c
  8515  00307C  104C               	iorwf	(??_floorf+3)^0,w,c
  8516  00307E  A4D8               	btfss	status,2,c
  8517  003080  EF44  F018         	goto	u4501
  8518  003084  EF46  F018         	goto	u4500
  8519  003088                     u4501:
  8520  003088  EF48  F018         	goto	l4548
  8521  00308C                     u4500:
  8522  00308C  EFFF  F017         	goto	l4540
  8523  003090                     l4548:
  8524  003090  C055  F049         	movff	floorf@u,??_floorf
  8525  003094  C056  F04A         	movff	floorf@u+1,??_floorf+1
  8526  003098  C057  F04B         	movff	floorf@u+2,??_floorf+2
  8527  00309C  C058  F04C         	movff	floorf@u+3,??_floorf+3
  8528  0030A0  0E20               	movlw	32
  8529  0030A2  EF58  F018         	goto	u4510
  8530  0030A6                     u4515:
  8531  0030A6  90D8               	bcf	status,0,c
  8532  0030A8  324C               	rrcf	(??_floorf+3)^0,f,c
  8533  0030AA  324B               	rrcf	(??_floorf+2)^0,f,c
  8534  0030AC  324A               	rrcf	(??_floorf+1)^0,f,c
  8535  0030AE  3249               	rrcf	??_floorf^0,f,c
  8536  0030B0                     u4510:
  8537  0030B0  2EE8               	decfsz	wreg,f,c
  8538  0030B2  EF53  F018         	goto	u4515
  8539  0030B6  5049               	movf	??_floorf^0,w,c
  8540  0030B8  104A               	iorwf	(??_floorf+1)^0,w,c
  8541  0030BA  104B               	iorwf	(??_floorf+2)^0,w,c
  8542  0030BC  104C               	iorwf	(??_floorf+3)^0,w,c
  8543  0030BE  B4D8               	btfsc	status,2,c
  8544  0030C0  EF64  F018         	goto	u4521
  8545  0030C4  EF66  F018         	goto	u4520
  8546  0030C8                     u4521:
  8547  0030C8  EF6E  F018         	goto	l1544
  8548  0030CC                     u4520:
  8549  0030CC  504F               	movf	floorf@m^0,w,c
  8550  0030CE  2655               	addwf	floorf@u^0,f,c
  8551  0030D0  5050               	movf	(floorf@m+1)^0,w,c
  8552  0030D2  2256               	addwfc	(floorf@u+1)^0,f,c
  8553  0030D4  5051               	movf	(floorf@m+2)^0,w,c
  8554  0030D6  2257               	addwfc	(floorf@u+2)^0,f,c
  8555  0030D8  5052               	movf	(floorf@m+3)^0,w,c
  8556  0030DA  2258               	addwfc	(floorf@u+3)^0,f,c
  8557  0030DC                     l1544:
  8558  0030DC  1C4F               	comf	floorf@m^0,w,c
  8559  0030DE  6E49               	movwf	??_floorf^0,c
  8560  0030E0  1C50               	comf	(floorf@m+1)^0,w,c
  8561  0030E2  6E4A               	movwf	(??_floorf+1)^0,c
  8562  0030E4  1C51               	comf	(floorf@m+2)^0,w,c
  8563  0030E6  6E4B               	movwf	(??_floorf+2)^0,c
  8564  0030E8  1C52               	comf	(floorf@m+3)^0,w,c
  8565  0030EA  6E4C               	movwf	(??_floorf+3)^0,c
  8566  0030EC  5049               	movf	??_floorf^0,w,c
  8567  0030EE  1655               	andwf	floorf@u^0,f,c
  8568  0030F0  504A               	movf	(??_floorf+1)^0,w,c
  8569  0030F2  1656               	andwf	(floorf@u+1)^0,f,c
  8570  0030F4  504B               	movf	(??_floorf+2)^0,w,c
  8571  0030F6  1657               	andwf	(floorf@u+2)^0,f,c
  8572  0030F8  504C               	movf	(??_floorf+3)^0,w,c
  8573  0030FA  1658               	andwf	(floorf@u+3)^0,f,c
  8574  0030FC  EFC4  F018         	goto	l4560
  8575  003100                     l4552:
  8576  003100  C055  F049         	movff	floorf@u,??_floorf
  8577  003104  C056  F04A         	movff	floorf@u+1,??_floorf+1
  8578  003108  C057  F04B         	movff	floorf@u+2,??_floorf+2
  8579  00310C  C058  F04C         	movff	floorf@u+3,??_floorf+3
  8580  003110  0E20               	movlw	32
  8581  003112  EF90  F018         	goto	u4530
  8582  003116                     u4535:
  8583  003116  90D8               	bcf	status,0,c
  8584  003118  324C               	rrcf	(??_floorf+3)^0,f,c
  8585  00311A  324B               	rrcf	(??_floorf+2)^0,f,c
  8586  00311C  324A               	rrcf	(??_floorf+1)^0,f,c
  8587  00311E  3249               	rrcf	??_floorf^0,f,c
  8588  003120                     u4530:
  8589  003120  2EE8               	decfsz	wreg,f,c
  8590  003122  EF8B  F018         	goto	u4535
  8591  003126  5049               	movf	??_floorf^0,w,c
  8592  003128  104A               	iorwf	(??_floorf+1)^0,w,c
  8593  00312A  104B               	iorwf	(??_floorf+2)^0,w,c
  8594  00312C  104C               	iorwf	(??_floorf+3)^0,w,c
  8595  00312E  A4D8               	btfss	status,2,c
  8596  003130  EF9C  F018         	goto	u4541
  8597  003134  EF9E  F018         	goto	u4540
  8598  003138                     u4541:
  8599  003138  EFA8  F018         	goto	l4556
  8600  00313C                     u4540:
  8601  00313C  0E00               	movlw	0
  8602  00313E  6E55               	movwf	floorf@u^0,c
  8603  003140  0E00               	movlw	0
  8604  003142  6E56               	movwf	(floorf@u+1)^0,c
  8605  003144  0E00               	movlw	0
  8606  003146  6E57               	movwf	(floorf@u+2)^0,c
  8607  003148  0E00               	movlw	0
  8608  00314A  6E58               	movwf	(floorf@u+3)^0,c
  8609  00314C  EFC4  F018         	goto	l4560
  8610  003150                     l4556:
  8611  003150  90D8               	bcf	status,0,c
  8612  003152  3455               	rlcf	floorf@u^0,w,c
  8613  003154  6E49               	movwf	??_floorf^0,c
  8614  003156  3456               	rlcf	(floorf@u+1)^0,w,c
  8615  003158  6E4A               	movwf	(??_floorf+1)^0,c
  8616  00315A  3457               	rlcf	(floorf@u+2)^0,w,c
  8617  00315C  6E4B               	movwf	(??_floorf+2)^0,c
  8618  00315E  3458               	rlcf	(floorf@u+3)^0,w,c
  8619  003160  6E4C               	movwf	(??_floorf+3)^0,c
  8620  003162  5049               	movf	??_floorf^0,w,c
  8621  003164  104A               	iorwf	(??_floorf+1)^0,w,c
  8622  003166  104B               	iorwf	(??_floorf+2)^0,w,c
  8623  003168  104C               	iorwf	(??_floorf+3)^0,w,c
  8624  00316A  B4D8               	btfsc	status,2,c
  8625  00316C  EFBA  F018         	goto	u4551
  8626  003170  EFBC  F018         	goto	u4550
  8627  003174                     u4551:
  8628  003174  EFC4  F018         	goto	l4560
  8629  003178                     u4550:
  8630  003178  0E00               	movlw	0
  8631  00317A  6E55               	movwf	floorf@u^0,c
  8632  00317C  0E00               	movlw	0
  8633  00317E  6E56               	movwf	(floorf@u+1)^0,c
  8634  003180  0E80               	movlw	128
  8635  003182  6E57               	movwf	(floorf@u+2)^0,c
  8636  003184  0EBF               	movlw	191
  8637  003186  6E58               	movwf	(floorf@u+3)^0,c
  8638  003188                     l4560:
  8639  003188  C055  F045         	movff	floorf@u,?_floorf
  8640  00318C  C056  F046         	movff	floorf@u+1,?_floorf+1
  8641  003190  C057  F047         	movff	floorf@u+2,?_floorf+2
  8642  003194  C058  F048         	movff	floorf@u+3,?_floorf+3
  8643  003198                     l1541:
  8644  003198  0012               	return		;funcret
  8645  00319A                     __end_of_floorf:
  8646                           	callstack 0
  8647                           
  8648 ;; *************** function ___fpclassifyf *****************
  8649 ;; Defined at:
  8650 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;  x               4    0[COMRAM] float 
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;  u               4   10[COMRAM] struct .
  8655 ;;  e               2    8[COMRAM] int 
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  2    0[COMRAM] int 
  8658 ;; Registers used:
  8659 ;;		wreg, status,2, status,0
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/0
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8665 ;;      Params:         4       0       0       0       0       0       0       0       0
  8666 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8667 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8668 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8669 ;;Total ram usage:       14 bytes
  8670 ;; Hardware stack levels used: 1
  8671 ;; This function calls:
  8672 ;;		Nothing
  8673 ;; This function is called by:
  8674 ;;		_efgtoa
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           	psect	text41
  8679  00393E                     __ptext41:
  8680                           	callstack 0
  8681  00393E                     ___fpclassifyf:
  8682                           	callstack 25
  8683  00393E  C0E6  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8684  003942  C0E7  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8685  003946  C0E8  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8686  00394A  C0E9  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8687  00394E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8688  003952  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8689  003956  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8690  00395A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8691  00395E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8692  003962  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8693  003966  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8694  00396A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8695  00396E  0E18               	movlw	24
  8696  003970  EFBF  F01C         	goto	u4340
  8697  003974                     u4345:
  8698  003974  90D8               	bcf	status,0,c
  8699  003976  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8700  003978  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8701  00397A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8702  00397C  3205               	rrcf	??___fpclassifyf^0,f,c
  8703  00397E                     u4340:
  8704  00397E  2EE8               	decfsz	wreg,f,c
  8705  003980  EFBA  F01C         	goto	u4345
  8706  003984  5005               	movf	??___fpclassifyf^0,w,c
  8707  003986  6E09               	movwf	___fpclassifyf@e^0,c
  8708  003988  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8709  00398A  5009               	movf	___fpclassifyf@e^0,w,c
  8710  00398C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8711  00398E  A4D8               	btfss	status,2,c
  8712  003990  EFCC  F01C         	goto	u4351
  8713  003994  EFCE  F01C         	goto	u4350
  8714  003998                     u4351:
  8715  003998  EFEE  F01C         	goto	l4512
  8716  00399C                     u4350:
  8717  00399C  90D8               	bcf	status,0,c
  8718  00399E  340B               	rlcf	___fpclassifyf@u^0,w,c
  8719  0039A0  6E05               	movwf	??___fpclassifyf^0,c
  8720  0039A2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8721  0039A4  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8722  0039A6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8723  0039A8  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8724  0039AA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8725  0039AC  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8726  0039AE  5005               	movf	??___fpclassifyf^0,w,c
  8727  0039B0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8728  0039B2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8729  0039B4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8730  0039B6  A4D8               	btfss	status,2,c
  8731  0039B8  EFE0  F01C         	goto	u4361
  8732  0039BC  EFE2  F01C         	goto	u4360
  8733  0039C0                     u4361:
  8734  0039C0  EFE8  F01C         	goto	l4508
  8735  0039C4                     u4360:
  8736  0039C4  0E00               	movlw	0
  8737  0039C6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8738  0039C8  0E02               	movlw	2
  8739  0039CA  6E01               	movwf	?___fpclassifyf^0,c
  8740  0039CC  EF1D  F01D         	goto	l1503
  8741  0039D0                     l4508:
  8742  0039D0  0E00               	movlw	0
  8743  0039D2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8744  0039D4  0E03               	movlw	3
  8745  0039D6  6E01               	movwf	?___fpclassifyf^0,c
  8746  0039D8  EF1D  F01D         	goto	l1503
  8747  0039DC                     l4512:
  8748  0039DC  2809               	incf	___fpclassifyf@e^0,w,c
  8749  0039DE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8750  0039E0  A4D8               	btfss	status,2,c
  8751  0039E2  EFF5  F01C         	goto	u4371
  8752  0039E6  EFF7  F01C         	goto	u4370
  8753  0039EA                     u4371:
  8754  0039EA  EF19  F01D         	goto	l4518
  8755  0039EE                     u4370:
  8756  0039EE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8757  0039F2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8758  0039F6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8759  0039FA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8760  0039FE  0E09               	movlw	9
  8761  003A00                     u4385:
  8762  003A00  90D8               	bcf	status,0,c
  8763  003A02  3605               	rlcf	??___fpclassifyf^0,f,c
  8764  003A04  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8765  003A06  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8766  003A08  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8767  003A0A  2EE8               	decfsz	wreg,f,c
  8768  003A0C  EF00  F01D         	goto	u4385
  8769  003A10  5005               	movf	??___fpclassifyf^0,w,c
  8770  003A12  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8771  003A14  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8772  003A16  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8773  003A18  B4D8               	btfsc	status,2,c
  8774  003A1A  EF11  F01D         	goto	u4391
  8775  003A1E  EF14  F01D         	goto	u4390
  8776  003A22                     u4391:
  8777  003A22  0E01               	movlw	1
  8778  003A24  EF15  F01D         	goto	u4400
  8779  003A28                     u4390:
  8780  003A28  0E00               	movlw	0
  8781  003A2A                     u4400:
  8782  003A2A  6E01               	movwf	?___fpclassifyf^0,c
  8783  003A2C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8784  003A2E  EF1D  F01D         	goto	l1503
  8785  003A32                     l4518:
  8786  003A32  0E00               	movlw	0
  8787  003A34  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8788  003A36  0E04               	movlw	4
  8789  003A38  6E01               	movwf	?___fpclassifyf^0,c
  8790  003A3A                     l1503:
  8791  003A3A  0012               	return		;funcret
  8792  003A3C                     __end_of___fpclassifyf:
  8793                           	callstack 0
  8794                           
  8795 ;; *************** function ___fltol *****************
  8796 ;; Defined at:
  8797 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  f1              4   84[COMRAM] int 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  exp1            1   93[COMRAM] unsigned char 
  8802 ;;  sign1           1   92[COMRAM] unsigned char 
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  4   84[COMRAM] long 
  8805 ;; Registers used:
  8806 ;;		wreg, status,2, status,0
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8812 ;;      Params:         4       0       0       0       0       0       0       0       0
  8813 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8814 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8815 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8816 ;;Total ram usage:       10 bytes
  8817 ;; Hardware stack levels used: 1
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_ReadADC
  8822 ;;		_USART_Init
  8823 ;;		_efgtoa
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text42
  8828  003636                     __ptext42:
  8829                           	callstack 0
  8830  003636                     ___fltol:
  8831                           	callstack 29
  8832  003636  3457               	rlcf	(___fltol@f1+2)^0,w,c
  8833  003638  3458               	rlcf	(___fltol@f1+3)^0,w,c
  8834  00363A  6E5E               	movwf	___fltol@exp1^0,c
  8835  00363C  505E               	movf	___fltol@exp1^0,w,c
  8836  00363E  A4D8               	btfss	status,2,c
  8837  003640  EF24  F01B         	goto	u4231
  8838  003644  EF26  F01B         	goto	u4230
  8839  003648                     u4231:
  8840  003648  EF30  F01B         	goto	l4440
  8841  00364C                     u4230:
  8842  00364C                     l4436:
  8843  00364C  0E00               	movlw	0
  8844  00364E  6E55               	movwf	?___fltol^0,c
  8845  003650  0E00               	movlw	0
  8846  003652  6E56               	movwf	(?___fltol+1)^0,c
  8847  003654  0E00               	movlw	0
  8848  003656  6E57               	movwf	(?___fltol+2)^0,c
  8849  003658  0E00               	movlw	0
  8850  00365A  6E58               	movwf	(?___fltol+3)^0,c
  8851  00365C  EF9D  F01B         	goto	l893
  8852  003660                     l4440:
  8853  003660  C055  F059         	movff	___fltol@f1,??___fltol
  8854  003664  C056  F05A         	movff	___fltol@f1+1,??___fltol+1
  8855  003668  C057  F05B         	movff	___fltol@f1+2,??___fltol+2
  8856  00366C  C058  F05C         	movff	___fltol@f1+3,??___fltol+3
  8857  003670  0E20               	movlw	32
  8858  003672  EF40  F01B         	goto	u4240
  8859  003676                     u4245:
  8860  003676  90D8               	bcf	status,0,c
  8861  003678  325C               	rrcf	(??___fltol+3)^0,f,c
  8862  00367A  325B               	rrcf	(??___fltol+2)^0,f,c
  8863  00367C  325A               	rrcf	(??___fltol+1)^0,f,c
  8864  00367E  3259               	rrcf	??___fltol^0,f,c
  8865  003680                     u4240:
  8866  003680  2EE8               	decfsz	wreg,f,c
  8867  003682  EF3B  F01B         	goto	u4245
  8868  003686  5059               	movf	??___fltol^0,w,c
  8869  003688  6E5D               	movwf	___fltol@sign1^0,c
  8870  00368A  8E57               	bsf	(___fltol@f1+2)^0,7,c
  8871  00368C  0EFF               	movlw	255
  8872  00368E  1655               	andwf	___fltol@f1^0,f,c
  8873  003690  0EFF               	movlw	255
  8874  003692  1656               	andwf	(___fltol@f1+1)^0,f,c
  8875  003694  0EFF               	movlw	255
  8876  003696  1657               	andwf	(___fltol@f1+2)^0,f,c
  8877  003698  0E00               	movlw	0
  8878  00369A  1658               	andwf	(___fltol@f1+3)^0,f,c
  8879  00369C  0E96               	movlw	150
  8880  00369E  5E5E               	subwf	___fltol@exp1^0,f,c
  8881  0036A0  BE5E               	btfsc	___fltol@exp1^0,7,c
  8882  0036A2  EF57  F01B         	goto	u4250
  8883  0036A6  EF55  F01B         	goto	u4251
  8884  0036AA                     u4251:
  8885  0036AA  EF6D  F01B         	goto	l4460
  8886  0036AE                     u4250:
  8887  0036AE  505E               	movf	___fltol@exp1^0,w,c
  8888  0036B0  0A80               	xorlw	128
  8889  0036B2  0F97               	addlw	151
  8890  0036B4  B0D8               	btfsc	status,0,c
  8891  0036B6  EF5F  F01B         	goto	u4261
  8892  0036BA  EF61  F01B         	goto	u4260
  8893  0036BE                     u4261:
  8894  0036BE  EF63  F01B         	goto	l4456
  8895  0036C2                     u4260:
  8896  0036C2  EF26  F01B         	goto	l4436
  8897  0036C6                     l4456:
  8898  0036C6  90D8               	bcf	status,0,c
  8899  0036C8  3258               	rrcf	(___fltol@f1+3)^0,f,c
  8900  0036CA  3257               	rrcf	(___fltol@f1+2)^0,f,c
  8901  0036CC  3256               	rrcf	(___fltol@f1+1)^0,f,c
  8902  0036CE  3255               	rrcf	___fltol@f1^0,f,c
  8903  0036D0  3E5E               	incfsz	___fltol@exp1^0,f,c
  8904  0036D2  EF63  F01B         	goto	l4456
  8905  0036D6  EF85  F01B         	goto	l4470
  8906  0036DA                     l4460:
  8907  0036DA  0E1F               	movlw	31
  8908  0036DC  645E               	cpfsgt	___fltol@exp1^0,c
  8909  0036DE  EF73  F01B         	goto	u4271
  8910  0036E2  EF75  F01B         	goto	u4270
  8911  0036E6                     u4271:
  8912  0036E6  EF7D  F01B         	goto	l4468
  8913  0036EA                     u4270:
  8914  0036EA  EF26  F01B         	goto	l4436
  8915  0036EE                     l4466:
  8916  0036EE  90D8               	bcf	status,0,c
  8917  0036F0  3655               	rlcf	___fltol@f1^0,f,c
  8918  0036F2  3656               	rlcf	(___fltol@f1+1)^0,f,c
  8919  0036F4  3657               	rlcf	(___fltol@f1+2)^0,f,c
  8920  0036F6  3658               	rlcf	(___fltol@f1+3)^0,f,c
  8921  0036F8  065E               	decf	___fltol@exp1^0,f,c
  8922  0036FA                     l4468:
  8923  0036FA  505E               	movf	___fltol@exp1^0,w,c
  8924  0036FC  A4D8               	btfss	status,2,c
  8925  0036FE  EF83  F01B         	goto	u4281
  8926  003702  EF85  F01B         	goto	u4280
  8927  003706                     u4281:
  8928  003706  EF77  F01B         	goto	l4466
  8929  00370A                     u4280:
  8930  00370A                     l4470:
  8931  00370A  505D               	movf	___fltol@sign1^0,w,c
  8932  00370C  B4D8               	btfsc	status,2,c
  8933  00370E  EF8B  F01B         	goto	u4291
  8934  003712  EF8D  F01B         	goto	u4290
  8935  003716                     u4291:
  8936  003716  EF95  F01B         	goto	l4474
  8937  00371A                     u4290:
  8938  00371A  1E58               	comf	(___fltol@f1+3)^0,f,c
  8939  00371C  1E57               	comf	(___fltol@f1+2)^0,f,c
  8940  00371E  1E56               	comf	(___fltol@f1+1)^0,f,c
  8941  003720  6C55               	negf	___fltol@f1^0,c
  8942  003722  0E00               	movlw	0
  8943  003724  2256               	addwfc	(___fltol@f1+1)^0,f,c
  8944  003726  2257               	addwfc	(___fltol@f1+2)^0,f,c
  8945  003728  2258               	addwfc	(___fltol@f1+3)^0,f,c
  8946  00372A                     l4474:
  8947  00372A  C055  F055         	movff	___fltol@f1,?___fltol
  8948  00372E  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  8949  003732  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  8950  003736  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  8951  00373A                     l893:
  8952  00373A  0012               	return		;funcret
  8953  00373C                     __end_of___fltol:
  8954                           	callstack 0
  8955                           
  8956 ;; *************** function ___flsub *****************
  8957 ;; Defined at:
  8958 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  b               4   84[COMRAM] long 
  8961 ;;  a               4   88[COMRAM] long 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;		None
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  4   84[COMRAM] long 
  8966 ;; Registers used:
  8967 ;;		wreg, status,2, status,0, cstack
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8973 ;;      Params:         8       0       0       0       0       0       0       0       0
  8974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8976 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8977 ;;Total ram usage:        8 bytes
  8978 ;; Hardware stack levels used: 1
  8979 ;; Hardware stack levels required when called: 1
  8980 ;; This function calls:
  8981 ;;		___fladd
  8982 ;; This function is called by:
  8983 ;;		_efgtoa
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text43
  8988  0046DA                     __ptext43:
  8989                           	callstack 0
  8990  0046DA                     ___flsub:
  8991                           	callstack 24
  8992  0046DA  0E00               	movlw	0
  8993  0046DC  1A59               	xorwf	___flsub@a^0,f,c
  8994  0046DE  0E00               	movlw	0
  8995  0046E0  1A5A               	xorwf	(___flsub@a+1)^0,f,c
  8996  0046E2  0E00               	movlw	0
  8997  0046E4  1A5B               	xorwf	(___flsub@a+2)^0,f,c
  8998  0046E6  0E80               	movlw	128
  8999  0046E8  1A5C               	xorwf	(___flsub@a+3)^0,f,c
  9000  0046EA  C055  F045         	movff	___flsub@b,___fladd@b
  9001  0046EE  C056  F046         	movff	___flsub@b+1,___fladd@b+1
  9002  0046F2  C057  F047         	movff	___flsub@b+2,___fladd@b+2
  9003  0046F6  C058  F048         	movff	___flsub@b+3,___fladd@b+3
  9004  0046FA  C059  F049         	movff	___flsub@a,___fladd@a
  9005  0046FE  C05A  F04A         	movff	___flsub@a+1,___fladd@a+1
  9006  004702  C05B  F04B         	movff	___flsub@a+2,___fladd@a+2
  9007  004706  C05C  F04C         	movff	___flsub@a+3,___fladd@a+3
  9008  00470A  EC5E  F00D         	call	___fladd	;wreg free
  9009  00470E  C045  F055         	movff	?___fladd,?___flsub
  9010  004712  C046  F056         	movff	?___fladd+1,?___flsub+1
  9011  004716  C047  F057         	movff	?___fladd+2,?___flsub+2
  9012  00471A  C048  F058         	movff	?___fladd+3,?___flsub+3
  9013  00471E  0012               	return		;funcret
  9014  004720                     __end_of___flsub:
  9015                           	callstack 0
  9016                           
  9017 ;; *************** function ___fladd *****************
  9018 ;; Defined at:
  9019 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;  b               4   68[COMRAM] long 
  9022 ;;  a               4   72[COMRAM] long 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;  grs             1   83[COMRAM] unsigned char 
  9025 ;;  bexp            1   82[COMRAM] unsigned char 
  9026 ;;  aexp            1   81[COMRAM] unsigned char 
  9027 ;;  signs           1   80[COMRAM] unsigned char 
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  4   68[COMRAM] unsigned char 
  9030 ;; Registers used:
  9031 ;;		wreg, status,2, status,0
  9032 ;; Tracked objects:
  9033 ;;		On entry : 0/0
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9037 ;;      Params:         8       0       0       0       0       0       0       0       0
  9038 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9039 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9040 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9041 ;;Total ram usage:       16 bytes
  9042 ;; Hardware stack levels used: 1
  9043 ;; This function calls:
  9044 ;;		Nothing
  9045 ;; This function is called by:
  9046 ;;		_ReadADC
  9047 ;;		_USART_Init
  9048 ;;		___flsub
  9049 ;;		_efgtoa
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           	psect	text44
  9054  001ABC                     __ptext44:
  9055                           	callstack 0
  9056  001ABC                     ___fladd:
  9057                           	callstack 29
  9058  001ABC  5048               	movf	(___fladd@b+3)^0,w,c
  9059  001ABE  0B80               	andlw	128
  9060  001AC0  6E51               	movwf	___fladd@signs^0,c
  9061  001AC2  5048               	movf	(___fladd@b+3)^0,w,c
  9062  001AC4  2448               	addwf	(___fladd@b+3)^0,w,c
  9063  001AC6  6E53               	movwf	___fladd@bexp^0,c
  9064  001AC8  AE47               	btfss	(___fladd@b+2)^0,7,c
  9065  001ACA  EF69  F00D         	goto	u3151
  9066  001ACE  EF6B  F00D         	goto	u3150
  9067  001AD2                     u3151:
  9068  001AD2  EF6C  F00D         	goto	l3806
  9069  001AD6                     u3150:
  9070  001AD6  8053               	bsf	___fladd@bexp^0,0,c
  9071  001AD8                     l3806:
  9072  001AD8  5053               	movf	___fladd@bexp^0,w,c
  9073  001ADA  B4D8               	btfsc	status,2,c
  9074  001ADC  EF72  F00D         	goto	u3161
  9075  001AE0  EF74  F00D         	goto	u3160
  9076  001AE4                     u3161:
  9077  001AE4  EF89  F00D         	goto	l3816
  9078  001AE8                     u3160:
  9079  001AE8  2853               	incf	___fladd@bexp^0,w,c
  9080  001AEA  A4D8               	btfss	status,2,c
  9081  001AEC  EF7A  F00D         	goto	u3171
  9082  001AF0  EF7C  F00D         	goto	u3170
  9083  001AF4                     u3171:
  9084  001AF4  EF84  F00D         	goto	l3812
  9085  001AF8                     u3170:
  9086  001AF8  0E00               	movlw	0
  9087  001AFA  6E45               	movwf	___fladd@b^0,c
  9088  001AFC  0E00               	movlw	0
  9089  001AFE  6E46               	movwf	(___fladd@b+1)^0,c
  9090  001B00  0E00               	movlw	0
  9091  001B02  6E47               	movwf	(___fladd@b+2)^0,c
  9092  001B04  0E00               	movlw	0
  9093  001B06  6E48               	movwf	(___fladd@b+3)^0,c
  9094  001B08                     l3812:
  9095  001B08  8E47               	bsf	(___fladd@b+2)^0,7,c
  9096  001B0A  0E00               	movlw	0
  9097  001B0C  6E48               	movwf	(___fladd@b+3)^0,c
  9098  001B0E  EF91  F00D         	goto	l3818
  9099  001B12                     l3816:
  9100  001B12  0E00               	movlw	0
  9101  001B14  6E45               	movwf	___fladd@b^0,c
  9102  001B16  0E00               	movlw	0
  9103  001B18  6E46               	movwf	(___fladd@b+1)^0,c
  9104  001B1A  0E00               	movlw	0
  9105  001B1C  6E47               	movwf	(___fladd@b+2)^0,c
  9106  001B1E  0E00               	movlw	0
  9107  001B20  6E48               	movwf	(___fladd@b+3)^0,c
  9108  001B22                     l3818:
  9109  001B22  504C               	movf	(___fladd@a+3)^0,w,c
  9110  001B24  0B80               	andlw	128
  9111  001B26  6E52               	movwf	___fladd@aexp^0,c
  9112  001B28  5051               	movf	___fladd@signs^0,w,c
  9113  001B2A  1852               	xorwf	___fladd@aexp^0,w,c
  9114  001B2C  B4D8               	btfsc	status,2,c
  9115  001B2E  EF9B  F00D         	goto	u3181
  9116  001B32  EF9D  F00D         	goto	u3180
  9117  001B36                     u3181:
  9118  001B36  EF9E  F00D         	goto	l3824
  9119  001B3A                     u3180:
  9120  001B3A  8C51               	bsf	___fladd@signs^0,6,c
  9121  001B3C                     l3824:
  9122  001B3C  504C               	movf	(___fladd@a+3)^0,w,c
  9123  001B3E  244C               	addwf	(___fladd@a+3)^0,w,c
  9124  001B40  6E52               	movwf	___fladd@aexp^0,c
  9125  001B42  AE4B               	btfss	(___fladd@a+2)^0,7,c
  9126  001B44  EFA6  F00D         	goto	u3191
  9127  001B48  EFA8  F00D         	goto	u3190
  9128  001B4C                     u3191:
  9129  001B4C  EFA9  F00D         	goto	l3830
  9130  001B50                     u3190:
  9131  001B50  8052               	bsf	___fladd@aexp^0,0,c
  9132  001B52                     l3830:
  9133  001B52  5052               	movf	___fladd@aexp^0,w,c
  9134  001B54  B4D8               	btfsc	status,2,c
  9135  001B56  EFAF  F00D         	goto	u3201
  9136  001B5A  EFB1  F00D         	goto	u3200
  9137  001B5E                     u3201:
  9138  001B5E  EFC6  F00D         	goto	l3840
  9139  001B62                     u3200:
  9140  001B62  2852               	incf	___fladd@aexp^0,w,c
  9141  001B64  A4D8               	btfss	status,2,c
  9142  001B66  EFB7  F00D         	goto	u3211
  9143  001B6A  EFB9  F00D         	goto	u3210
  9144  001B6E                     u3211:
  9145  001B6E  EFC1  F00D         	goto	l3836
  9146  001B72                     u3210:
  9147  001B72  0E00               	movlw	0
  9148  001B74  6E49               	movwf	___fladd@a^0,c
  9149  001B76  0E00               	movlw	0
  9150  001B78  6E4A               	movwf	(___fladd@a+1)^0,c
  9151  001B7A  0E00               	movlw	0
  9152  001B7C  6E4B               	movwf	(___fladd@a+2)^0,c
  9153  001B7E  0E00               	movlw	0
  9154  001B80  6E4C               	movwf	(___fladd@a+3)^0,c
  9155  001B82                     l3836:
  9156  001B82  8E4B               	bsf	(___fladd@a+2)^0,7,c
  9157  001B84  0E00               	movlw	0
  9158  001B86  6E4C               	movwf	(___fladd@a+3)^0,c
  9159  001B88  EFCE  F00D         	goto	l3842
  9160  001B8C                     l3840:
  9161  001B8C  0E00               	movlw	0
  9162  001B8E  6E49               	movwf	___fladd@a^0,c
  9163  001B90  0E00               	movlw	0
  9164  001B92  6E4A               	movwf	(___fladd@a+1)^0,c
  9165  001B94  0E00               	movlw	0
  9166  001B96  6E4B               	movwf	(___fladd@a+2)^0,c
  9167  001B98  0E00               	movlw	0
  9168  001B9A  6E4C               	movwf	(___fladd@a+3)^0,c
  9169  001B9C                     l3842:
  9170  001B9C  5053               	movf	___fladd@bexp^0,w,c
  9171  001B9E  5C52               	subwf	___fladd@aexp^0,w,c
  9172  001BA0  B0D8               	btfsc	status,0,c
  9173  001BA2  EFD5  F00D         	goto	u3221
  9174  001BA6  EFD7  F00D         	goto	u3220
  9175  001BAA                     u3221:
  9176  001BAA  EFFE  F00D         	goto	l3878
  9177  001BAE                     u3220:
  9178  001BAE  AC51               	btfss	___fladd@signs^0,6,c
  9179  001BB0  EFDC  F00D         	goto	u3231
  9180  001BB4  EFDE  F00D         	goto	u3230
  9181  001BB8                     u3231:
  9182  001BB8  EFE0  F00D         	goto	l3848
  9183  001BBC                     u3230:
  9184  001BBC  0E80               	movlw	128
  9185  001BBE  1A51               	xorwf	___fladd@signs^0,f,c
  9186  001BC0                     l3848:
  9187  001BC0  C053  F054         	movff	___fladd@bexp,___fladd@grs
  9188  001BC4  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  9189  001BC8  C054  F052         	movff	___fladd@grs,___fladd@aexp
  9190  001BCC  C045  F054         	movff	___fladd@b,___fladd@grs
  9191  001BD0  C049  F045         	movff	___fladd@a,___fladd@b
  9192  001BD4  C054  F049         	movff	___fladd@grs,___fladd@a
  9193  001BD8  C046  F054         	movff	___fladd@b+1,___fladd@grs
  9194  001BDC  C04A  F046         	movff	___fladd@a+1,___fladd@b+1
  9195  001BE0  C054  F04A         	movff	___fladd@grs,___fladd@a+1
  9196  001BE4  C047  F054         	movff	___fladd@b+2,___fladd@grs
  9197  001BE8  C04B  F047         	movff	___fladd@a+2,___fladd@b+2
  9198  001BEC  C054  F04B         	movff	___fladd@grs,___fladd@a+2
  9199  001BF0  C048  F054         	movff	___fladd@b+3,___fladd@grs
  9200  001BF4  C04C  F048         	movff	___fladd@a+3,___fladd@b+3
  9201  001BF8  C054  F04C         	movff	___fladd@grs,___fladd@a+3
  9202  001BFC                     l3878:
  9203  001BFC  0E00               	movlw	0
  9204  001BFE  6E54               	movwf	___fladd@grs^0,c
  9205  001C00  5053               	movf	___fladd@bexp^0,w,c
  9206  001C02  C052  F04D         	movff	___fladd@aexp,??___fladd
  9207  001C06  6A4E               	clrf	(??___fladd+1)^0,c
  9208  001C08  5E4D               	subwf	??___fladd^0,f,c
  9209  001C0A  0E00               	movlw	0
  9210  001C0C  5A4E               	subwfb	(??___fladd+1)^0,f,c
  9211  001C0E  BE4E               	btfsc	(??___fladd+1)^0,7,c
  9212  001C10  EF13  F00E         	goto	u3241
  9213  001C14  504E               	movf	(??___fladd+1)^0,w,c
  9214  001C16  E109               	bnz	u3240
  9215  001C18  0E1A               	movlw	26
  9216  001C1A  5C4D               	subwf	??___fladd^0,w,c
  9217  001C1C  A0D8               	btfss	status,0,c
  9218  001C1E  EF13  F00E         	goto	u3241
  9219  001C22  EF15  F00E         	goto	u3240
  9220  001C26                     u3241:
  9221  001C26  EF4C  F00E         	goto	l1125
  9222  001C2A                     u3240:
  9223  001C2A  5045               	movf	___fladd@b^0,w,c
  9224  001C2C  1046               	iorwf	(___fladd@b+1)^0,w,c
  9225  001C2E  1047               	iorwf	(___fladd@b+2)^0,w,c
  9226  001C30  1048               	iorwf	(___fladd@b+3)^0,w,c
  9227  001C32  A4D8               	btfss	status,2,c
  9228  001C34  EF1E  F00E         	goto	u3251
  9229  001C38  EF21  F00E         	goto	u3250
  9230  001C3C                     u3251:
  9231  001C3C  0E01               	movlw	1
  9232  001C3E  EF22  F00E         	goto	u3260
  9233  001C42                     u3250:
  9234  001C42  0E00               	movlw	0
  9235  001C44                     u3260:
  9236  001C44  6E54               	movwf	___fladd@grs^0,c
  9237  001C46  0E00               	movlw	0
  9238  001C48  6E45               	movwf	___fladd@b^0,c
  9239  001C4A  0E00               	movlw	0
  9240  001C4C  6E46               	movwf	(___fladd@b+1)^0,c
  9241  001C4E  0E00               	movlw	0
  9242  001C50  6E47               	movwf	(___fladd@b+2)^0,c
  9243  001C52  0E00               	movlw	0
  9244  001C54  6E48               	movwf	(___fladd@b+3)^0,c
  9245  001C56  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  9246  001C5A  EF55  F00E         	goto	l1124
  9247  001C5E                     l1126:
  9248  001C5E  A054               	btfss	___fladd@grs^0,0,c
  9249  001C60  EF34  F00E         	goto	u3271
  9250  001C64  EF36  F00E         	goto	u3270
  9251  001C68                     u3271:
  9252  001C68  EF3C  F00E         	goto	l3890
  9253  001C6C                     u3270:
  9254  001C6C  90D8               	bcf	status,0,c
  9255  001C6E  3054               	rrcf	___fladd@grs^0,w,c
  9256  001C70  0901               	iorlw	1
  9257  001C72  6E54               	movwf	___fladd@grs^0,c
  9258  001C74  EF3E  F00E         	goto	l3892
  9259  001C78                     l3890:
  9260  001C78  90D8               	bcf	status,0,c
  9261  001C7A  3254               	rrcf	___fladd@grs^0,f,c
  9262  001C7C                     l3892:
  9263  001C7C  A045               	btfss	___fladd@b^0,0,c
  9264  001C7E  EF43  F00E         	goto	u3281
  9265  001C82  EF45  F00E         	goto	u3280
  9266  001C86                     u3281:
  9267  001C86  EF46  F00E         	goto	l3896
  9268  001C8A                     u3280:
  9269  001C8A  8E54               	bsf	___fladd@grs^0,7,c
  9270  001C8C                     l3896:
  9271  001C8C  3448               	rlcf	(___fladd@b+3)^0,w,c
  9272  001C8E  3248               	rrcf	(___fladd@b+3)^0,f,c
  9273  001C90  3247               	rrcf	(___fladd@b+2)^0,f,c
  9274  001C92  3246               	rrcf	(___fladd@b+1)^0,f,c
  9275  001C94  3245               	rrcf	___fladd@b^0,f,c
  9276  001C96  2A53               	incf	___fladd@bexp^0,f,c
  9277  001C98                     l1125:
  9278  001C98  5052               	movf	___fladd@aexp^0,w,c
  9279  001C9A  5C53               	subwf	___fladd@bexp^0,w,c
  9280  001C9C  A0D8               	btfss	status,0,c
  9281  001C9E  EF53  F00E         	goto	u3291
  9282  001CA2  EF55  F00E         	goto	u3290
  9283  001CA6                     u3291:
  9284  001CA6  EF2F  F00E         	goto	l1126
  9285  001CAA                     u3290:
  9286  001CAA                     l1124:
  9287  001CAA  BC51               	btfsc	___fladd@signs^0,6,c
  9288  001CAC  EF5A  F00E         	goto	u3301
  9289  001CB0  EF5C  F00E         	goto	u3300
  9290  001CB4                     u3301:
  9291  001CB4  EF9C  F00E         	goto	l3924
  9292  001CB8                     u3300:
  9293  001CB8  5053               	movf	___fladd@bexp^0,w,c
  9294  001CBA  A4D8               	btfss	status,2,c
  9295  001CBC  EF62  F00E         	goto	u3311
  9296  001CC0  EF64  F00E         	goto	u3310
  9297  001CC4                     u3311:
  9298  001CC4  EF6E  F00E         	goto	l3906
  9299  001CC8                     u3310:
  9300  001CC8  0E00               	movlw	0
  9301  001CCA  6E45               	movwf	?___fladd^0,c
  9302  001CCC  0E00               	movlw	0
  9303  001CCE  6E46               	movwf	(?___fladd+1)^0,c
  9304  001CD0  0E00               	movlw	0
  9305  001CD2  6E47               	movwf	(?___fladd+2)^0,c
  9306  001CD4  0E00               	movlw	0
  9307  001CD6  6E48               	movwf	(?___fladd+3)^0,c
  9308  001CD8  EFBD  F00F         	goto	l1133
  9309  001CDC                     l3906:
  9310  001CDC  5049               	movf	___fladd@a^0,w,c
  9311  001CDE  2645               	addwf	___fladd@b^0,f,c
  9312  001CE0  504A               	movf	(___fladd@a+1)^0,w,c
  9313  001CE2  2246               	addwfc	(___fladd@b+1)^0,f,c
  9314  001CE4  504B               	movf	(___fladd@a+2)^0,w,c
  9315  001CE6  2247               	addwfc	(___fladd@b+2)^0,f,c
  9316  001CE8  504C               	movf	(___fladd@a+3)^0,w,c
  9317  001CEA  2248               	addwfc	(___fladd@b+3)^0,f,c
  9318  001CEC  A048               	btfss	(___fladd@b+3)^0,0,c
  9319  001CEE  EF7B  F00E         	goto	u3321
  9320  001CF2  EF7D  F00E         	goto	u3320
  9321  001CF6                     u3321:
  9322  001CF6  EF29  F00F         	goto	l3960
  9323  001CFA                     u3320:
  9324  001CFA  A054               	btfss	___fladd@grs^0,0,c
  9325  001CFC  EF82  F00E         	goto	u3331
  9326  001D00  EF84  F00E         	goto	u3330
  9327  001D04                     u3331:
  9328  001D04  EF8A  F00E         	goto	l3914
  9329  001D08                     u3330:
  9330  001D08  90D8               	bcf	status,0,c
  9331  001D0A  3054               	rrcf	___fladd@grs^0,w,c
  9332  001D0C  0901               	iorlw	1
  9333  001D0E  6E54               	movwf	___fladd@grs^0,c
  9334  001D10  EF8C  F00E         	goto	l3916
  9335  001D14                     l3914:
  9336  001D14  90D8               	bcf	status,0,c
  9337  001D16  3254               	rrcf	___fladd@grs^0,f,c
  9338  001D18                     l3916:
  9339  001D18  A045               	btfss	___fladd@b^0,0,c
  9340  001D1A  EF91  F00E         	goto	u3341
  9341  001D1E  EF93  F00E         	goto	u3340
  9342  001D22                     u3341:
  9343  001D22  EF94  F00E         	goto	l3920
  9344  001D26                     u3340:
  9345  001D26  8E54               	bsf	___fladd@grs^0,7,c
  9346  001D28                     l3920:
  9347  001D28  3448               	rlcf	(___fladd@b+3)^0,w,c
  9348  001D2A  3248               	rrcf	(___fladd@b+3)^0,f,c
  9349  001D2C  3247               	rrcf	(___fladd@b+2)^0,f,c
  9350  001D2E  3246               	rrcf	(___fladd@b+1)^0,f,c
  9351  001D30  3245               	rrcf	___fladd@b^0,f,c
  9352  001D32  2A53               	incf	___fladd@bexp^0,f,c
  9353  001D34  EF29  F00F         	goto	l3960
  9354  001D38                     l3924:
  9355  001D38  5049               	movf	___fladd@a^0,w,c
  9356  001D3A  5C45               	subwf	___fladd@b^0,w,c
  9357  001D3C  504A               	movf	(___fladd@a+1)^0,w,c
  9358  001D3E  5846               	subwfb	(___fladd@b+1)^0,w,c
  9359  001D40  504B               	movf	(___fladd@a+2)^0,w,c
  9360  001D42  5847               	subwfb	(___fladd@b+2)^0,w,c
  9361  001D44  5048               	movf	(___fladd@b+3)^0,w,c
  9362  001D46  0A80               	xorlw	128
  9363  001D48  6E4D               	movwf	??___fladd^0,c
  9364  001D4A  504C               	movf	(___fladd@a+3)^0,w,c
  9365  001D4C  0A80               	xorlw	128
  9366  001D4E  584D               	subwfb	??___fladd^0,w,c
  9367  001D50  B0D8               	btfsc	status,0,c
  9368  001D52  EFAD  F00E         	goto	u3351
  9369  001D56  EFAF  F00E         	goto	u3350
  9370  001D5A                     u3351:
  9371  001D5A  EFDA  F00E         	goto	l3934
  9372  001D5E                     u3350:
  9373  001D5E  5045               	movf	___fladd@b^0,w,c
  9374  001D60  5C49               	subwf	___fladd@a^0,w,c
  9375  001D62  6E4D               	movwf	??___fladd^0,c
  9376  001D64  5046               	movf	(___fladd@b+1)^0,w,c
  9377  001D66  584A               	subwfb	(___fladd@a+1)^0,w,c
  9378  001D68  6E4E               	movwf	(??___fladd+1)^0,c
  9379  001D6A  5047               	movf	(___fladd@b+2)^0,w,c
  9380  001D6C  584B               	subwfb	(___fladd@a+2)^0,w,c
  9381  001D6E  6E4F               	movwf	(??___fladd+2)^0,c
  9382  001D70  5048               	movf	(___fladd@b+3)^0,w,c
  9383  001D72  584C               	subwfb	(___fladd@a+3)^0,w,c
  9384  001D74  6E50               	movwf	(??___fladd+3)^0,c
  9385  001D76  0EFF               	movlw	255
  9386  001D78  244D               	addwf	??___fladd^0,w,c
  9387  001D7A  6E45               	movwf	___fladd@b^0,c
  9388  001D7C  0EFF               	movlw	255
  9389  001D7E  204E               	addwfc	(??___fladd+1)^0,w,c
  9390  001D80  6E46               	movwf	(___fladd@b+1)^0,c
  9391  001D82  0EFF               	movlw	255
  9392  001D84  204F               	addwfc	(??___fladd+2)^0,w,c
  9393  001D86  6E47               	movwf	(___fladd@b+2)^0,c
  9394  001D88  0EFF               	movlw	255
  9395  001D8A  2050               	addwfc	(??___fladd+3)^0,w,c
  9396  001D8C  6E48               	movwf	(___fladd@b+3)^0,c
  9397  001D8E  0E80               	movlw	128
  9398  001D90  1A51               	xorwf	___fladd@signs^0,f,c
  9399  001D92  6C54               	negf	___fladd@grs^0,c
  9400  001D94  5054               	movf	___fladd@grs^0,w,c
  9401  001D96  A4D8               	btfss	status,2,c
  9402  001D98  EFD0  F00E         	goto	u3361
  9403  001D9C  EFD2  F00E         	goto	u3360
  9404  001DA0                     u3361:
  9405  001DA0  EFE2  F00E         	goto	l1141
  9406  001DA4                     u3360:
  9407  001DA4  0E01               	movlw	1
  9408  001DA6  2645               	addwf	___fladd@b^0,f,c
  9409  001DA8  0E00               	movlw	0
  9410  001DAA  2246               	addwfc	(___fladd@b+1)^0,f,c
  9411  001DAC  2247               	addwfc	(___fladd@b+2)^0,f,c
  9412  001DAE  2248               	addwfc	(___fladd@b+3)^0,f,c
  9413  001DB0  EFE2  F00E         	goto	l1141
  9414  001DB4                     l3934:
  9415  001DB4  5049               	movf	___fladd@a^0,w,c
  9416  001DB6  5E45               	subwf	___fladd@b^0,f,c
  9417  001DB8  504A               	movf	(___fladd@a+1)^0,w,c
  9418  001DBA  5A46               	subwfb	(___fladd@b+1)^0,f,c
  9419  001DBC  504B               	movf	(___fladd@a+2)^0,w,c
  9420  001DBE  5A47               	subwfb	(___fladd@b+2)^0,f,c
  9421  001DC0  504C               	movf	(___fladd@a+3)^0,w,c
  9422  001DC2  5A48               	subwfb	(___fladd@b+3)^0,f,c
  9423  001DC4                     l1141:
  9424  001DC4  5045               	movf	___fladd@b^0,w,c
  9425  001DC6  1046               	iorwf	(___fladd@b+1)^0,w,c
  9426  001DC8  1047               	iorwf	(___fladd@b+2)^0,w,c
  9427  001DCA  1048               	iorwf	(___fladd@b+3)^0,w,c
  9428  001DCC  A4D8               	btfss	status,2,c
  9429  001DCE  EFEB  F00E         	goto	u3371
  9430  001DD2  EFED  F00E         	goto	u3370
  9431  001DD6                     u3371:
  9432  001DD6  EF22  F00F         	goto	l3958
  9433  001DDA                     u3370:
  9434  001DDA  5054               	movf	___fladd@grs^0,w,c
  9435  001DDC  A4D8               	btfss	status,2,c
  9436  001DDE  EFF3  F00E         	goto	u3381
  9437  001DE2  EFF5  F00E         	goto	u3380
  9438  001DE6                     u3381:
  9439  001DE6  EF22  F00F         	goto	l3958
  9440  001DEA                     u3380:
  9441  001DEA  0E00               	movlw	0
  9442  001DEC  6E45               	movwf	?___fladd^0,c
  9443  001DEE  0E00               	movlw	0
  9444  001DF0  6E46               	movwf	(?___fladd+1)^0,c
  9445  001DF2  0E00               	movlw	0
  9446  001DF4  6E47               	movwf	(?___fladd+2)^0,c
  9447  001DF6  0E00               	movlw	0
  9448  001DF8  6E48               	movwf	(?___fladd+3)^0,c
  9449  001DFA  EFBD  F00F         	goto	l1133
  9450  001DFE                     l3942:
  9451  001DFE  90D8               	bcf	status,0,c
  9452  001E00  3645               	rlcf	___fladd@b^0,f,c
  9453  001E02  3646               	rlcf	(___fladd@b+1)^0,f,c
  9454  001E04  3647               	rlcf	(___fladd@b+2)^0,f,c
  9455  001E06  3648               	rlcf	(___fladd@b+3)^0,f,c
  9456  001E08  AE54               	btfss	___fladd@grs^0,7,c
  9457  001E0A  EF09  F00F         	goto	u3391
  9458  001E0E  EF0B  F00F         	goto	u3390
  9459  001E12                     u3391:
  9460  001E12  EF0C  F00F         	goto	l3948
  9461  001E16                     u3390:
  9462  001E16  8045               	bsf	___fladd@b^0,0,c
  9463  001E18                     l3948:
  9464  001E18  A054               	btfss	___fladd@grs^0,0,c
  9465  001E1A  EF11  F00F         	goto	u3401
  9466  001E1E  EF13  F00F         	goto	u3400
  9467  001E22                     u3401:
  9468  001E22  EF17  F00F         	goto	l3952
  9469  001E26                     u3400:
  9470  001E26  80D8               	bsf	status,0,c
  9471  001E28  3654               	rlcf	___fladd@grs^0,f,c
  9472  001E2A  EF19  F00F         	goto	l3954
  9473  001E2E                     l3952:
  9474  001E2E  90D8               	bcf	status,0,c
  9475  001E30  3654               	rlcf	___fladd@grs^0,f,c
  9476  001E32                     l3954:
  9477  001E32  5053               	movf	___fladd@bexp^0,w,c
  9478  001E34  B4D8               	btfsc	status,2,c
  9479  001E36  EF1F  F00F         	goto	u3411
  9480  001E3A  EF21  F00F         	goto	u3410
  9481  001E3E                     u3411:
  9482  001E3E  EF22  F00F         	goto	l3958
  9483  001E42                     u3410:
  9484  001E42  0653               	decf	___fladd@bexp^0,f,c
  9485  001E44                     l3958:
  9486  001E44  AE47               	btfss	(___fladd@b+2)^0,7,c
  9487  001E46  EF27  F00F         	goto	u3421
  9488  001E4A  EF29  F00F         	goto	u3420
  9489  001E4E                     u3421:
  9490  001E4E  EFFF  F00E         	goto	l3942
  9491  001E52                     u3420:
  9492  001E52                     l3960:
  9493  001E52  0E00               	movlw	0
  9494  001E54  6E52               	movwf	___fladd@aexp^0,c
  9495  001E56  AE54               	btfss	___fladd@grs^0,7,c
  9496  001E58  EF30  F00F         	goto	u3431
  9497  001E5C  EF32  F00F         	goto	u3430
  9498  001E60                     u3431:
  9499  001E60  EF4A  F00F         	goto	l1150
  9500  001E64                     u3430:
  9501  001E64  C054  F04D         	movff	___fladd@grs,??___fladd
  9502  001E68  0E7F               	movlw	127
  9503  001E6A  164D               	andwf	??___fladd^0,f,c
  9504  001E6C  B4D8               	btfsc	status,2,c
  9505  001E6E  EF3B  F00F         	goto	u3441
  9506  001E72  EF3D  F00F         	goto	u3440
  9507  001E76                     u3441:
  9508  001E76  EF41  F00F         	goto	l1151
  9509  001E7A                     u3440:
  9510  001E7A                     l3966:
  9511  001E7A  0E01               	movlw	1
  9512  001E7C  6E52               	movwf	___fladd@aexp^0,c
  9513  001E7E  EF4A  F00F         	goto	l1150
  9514  001E82                     l1151:
  9515  001E82  A045               	btfss	___fladd@b^0,0,c
  9516  001E84  EF46  F00F         	goto	u3451
  9517  001E88  EF48  F00F         	goto	u3450
  9518  001E8C                     u3451:
  9519  001E8C  EF4A  F00F         	goto	l1150
  9520  001E90                     u3450:
  9521  001E90  EF3D  F00F         	goto	l3966
  9522  001E94                     l1150:
  9523  001E94  5052               	movf	___fladd@aexp^0,w,c
  9524  001E96  B4D8               	btfsc	status,2,c
  9525  001E98  EF50  F00F         	goto	u3461
  9526  001E9C  EF52  F00F         	goto	u3460
  9527  001EA0                     u3461:
  9528  001EA0  EF7D  F00F         	goto	l3978
  9529  001EA4                     u3460:
  9530  001EA4  0E01               	movlw	1
  9531  001EA6  2645               	addwf	___fladd@b^0,f,c
  9532  001EA8  0E00               	movlw	0
  9533  001EAA  2246               	addwfc	(___fladd@b+1)^0,f,c
  9534  001EAC  2247               	addwfc	(___fladd@b+2)^0,f,c
  9535  001EAE  2248               	addwfc	(___fladd@b+3)^0,f,c
  9536  001EB0  A048               	btfss	(___fladd@b+3)^0,0,c
  9537  001EB2  EF5D  F00F         	goto	u3471
  9538  001EB6  EF5F  F00F         	goto	u3470
  9539  001EBA                     u3471:
  9540  001EBA  EF7D  F00F         	goto	l3978
  9541  001EBE                     u3470:
  9542  001EBE  C045  F04D         	movff	___fladd@b,??___fladd
  9543  001EC2  C046  F04E         	movff	___fladd@b+1,??___fladd+1
  9544  001EC6  C047  F04F         	movff	___fladd@b+2,??___fladd+2
  9545  001ECA  C048  F050         	movff	___fladd@b+3,??___fladd+3
  9546  001ECE  3450               	rlcf	(??___fladd+3)^0,w,c
  9547  001ED0  3250               	rrcf	(??___fladd+3)^0,f,c
  9548  001ED2  324F               	rrcf	(??___fladd+2)^0,f,c
  9549  001ED4  324E               	rrcf	(??___fladd+1)^0,f,c
  9550  001ED6  324D               	rrcf	??___fladd^0,f,c
  9551  001ED8  C04D  F045         	movff	??___fladd,___fladd@b
  9552  001EDC  C04E  F046         	movff	??___fladd+1,___fladd@b+1
  9553  001EE0  C04F  F047         	movff	??___fladd+2,___fladd@b+2
  9554  001EE4  C050  F048         	movff	??___fladd+3,___fladd@b+3
  9555  001EE8  2853               	incf	___fladd@bexp^0,w,c
  9556  001EEA  B4D8               	btfsc	status,2,c
  9557  001EEC  EF7A  F00F         	goto	u3481
  9558  001EF0  EF7C  F00F         	goto	u3480
  9559  001EF4                     u3481:
  9560  001EF4  EF7D  F00F         	goto	l3978
  9561  001EF8                     u3480:
  9562  001EF8  2A53               	incf	___fladd@bexp^0,f,c
  9563  001EFA                     l3978:
  9564  001EFA  2853               	incf	___fladd@bexp^0,w,c
  9565  001EFC  B4D8               	btfsc	status,2,c
  9566  001EFE  EF83  F00F         	goto	u3491
  9567  001F02  EF85  F00F         	goto	u3490
  9568  001F06                     u3491:
  9569  001F06  EF8D  F00F         	goto	l3982
  9570  001F0A                     u3490:
  9571  001F0A  5053               	movf	___fladd@bexp^0,w,c
  9572  001F0C  A4D8               	btfss	status,2,c
  9573  001F0E  EF8B  F00F         	goto	u3501
  9574  001F12  EF8D  F00F         	goto	u3500
  9575  001F16                     u3501:
  9576  001F16  EF9F  F00F         	goto	l3986
  9577  001F1A                     u3500:
  9578  001F1A                     l3982:
  9579  001F1A  0E00               	movlw	0
  9580  001F1C  6E45               	movwf	___fladd@b^0,c
  9581  001F1E  0E00               	movlw	0
  9582  001F20  6E46               	movwf	(___fladd@b+1)^0,c
  9583  001F22  0E00               	movlw	0
  9584  001F24  6E47               	movwf	(___fladd@b+2)^0,c
  9585  001F26  0E00               	movlw	0
  9586  001F28  6E48               	movwf	(___fladd@b+3)^0,c
  9587  001F2A  5053               	movf	___fladd@bexp^0,w,c
  9588  001F2C  A4D8               	btfss	status,2,c
  9589  001F2E  EF9B  F00F         	goto	u3511
  9590  001F32  EF9D  F00F         	goto	u3510
  9591  001F36                     u3511:
  9592  001F36  EF9F  F00F         	goto	l3986
  9593  001F3A                     u3510:
  9594  001F3A  0E00               	movlw	0
  9595  001F3C  6E51               	movwf	___fladd@signs^0,c
  9596  001F3E                     l3986:
  9597  001F3E  A053               	btfss	___fladd@bexp^0,0,c
  9598  001F40  EFA4  F00F         	goto	u3521
  9599  001F44  EFA6  F00F         	goto	u3520
  9600  001F48                     u3521:
  9601  001F48  EFA9  F00F         	goto	l3990
  9602  001F4C                     u3520:
  9603  001F4C  8E47               	bsf	(___fladd@b+2)^0,7,c
  9604  001F4E  EFAA  F00F         	goto	l3992
  9605  001F52                     l3990:
  9606  001F52  9E47               	bcf	(___fladd@b+2)^0,7,c
  9607  001F54                     l3992:
  9608  001F54  90D8               	bcf	status,0,c
  9609  001F56  3053               	rrcf	___fladd@bexp^0,w,c
  9610  001F58  6E48               	movwf	(___fladd@b+3)^0,c
  9611  001F5A  AE51               	btfss	___fladd@signs^0,7,c
  9612  001F5C  EFB2  F00F         	goto	u3531
  9613  001F60  EFB4  F00F         	goto	u3530
  9614  001F64                     u3531:
  9615  001F64  EFB5  F00F         	goto	l3998
  9616  001F68                     u3530:
  9617  001F68  8E48               	bsf	(___fladd@b+3)^0,7,c
  9618  001F6A                     l3998:
  9619  001F6A  C045  F045         	movff	___fladd@b,?___fladd
  9620  001F6E  C046  F046         	movff	___fladd@b+1,?___fladd+1
  9621  001F72  C047  F047         	movff	___fladd@b+2,?___fladd+2
  9622  001F76  C048  F048         	movff	___fladd@b+3,?___fladd+3
  9623  001F7A                     l1133:
  9624  001F7A  0012               	return		;funcret
  9625  001F7C                     __end_of___fladd:
  9626                           	callstack 0
  9627                           
  9628 ;; *************** function ___flneg *****************
  9629 ;; Defined at:
  9630 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  f1              4    0[COMRAM] unsigned char 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;		None
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  4    0[COMRAM] unsigned char 
  9637 ;; Registers used:
  9638 ;;		wreg, status,2, status,0
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9644 ;;      Params:         4       0       0       0       0       0       0       0       0
  9645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9647 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9648 ;;Total ram usage:        4 bytes
  9649 ;; Hardware stack levels used: 1
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_efgtoa
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text45
  9658  00488A                     __ptext45:
  9659                           	callstack 0
  9660  00488A                     ___flneg:
  9661                           	callstack 25
  9662  00488A  5001               	movf	___flneg@f1^0,w,c
  9663  00488C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9664  00488E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9665  004890  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9666  004892  B4D8               	btfsc	status,2,c
  9667  004894  EF4E  F024         	goto	u4221
  9668  004898  EF50  F024         	goto	u4220
  9669  00489C                     u4221:
  9670  00489C  EF58  F024         	goto	l4430
  9671  0048A0                     u4220:
  9672  0048A0  0E00               	movlw	0
  9673  0048A2  1A01               	xorwf	___flneg@f1^0,f,c
  9674  0048A4  0E00               	movlw	0
  9675  0048A6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9676  0048A8  0E00               	movlw	0
  9677  0048AA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9678  0048AC  0E80               	movlw	128
  9679  0048AE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9680  0048B0                     l4430:
  9681  0048B0  C001  F001         	movff	___flneg@f1,?___flneg
  9682  0048B4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9683  0048B8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9684  0048BC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9685  0048C0  0012               	return		;funcret
  9686  0048C2                     __end_of___flneg:
  9687                           	callstack 0
  9688                           
  9689 ;; *************** function ___flmul *****************
  9690 ;; Defined at:
  9691 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;  b               4   18[COMRAM] unsigned char 
  9694 ;;  a               4   22[COMRAM] unsigned char 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;  prod            4   37[COMRAM] struct .
  9697 ;;  grs             4   31[COMRAM] unsigned long 
  9698 ;;  temp            2   41[COMRAM] struct .
  9699 ;;  bexp            1   36[COMRAM] unsigned char 
  9700 ;;  aexp            1   35[COMRAM] unsigned char 
  9701 ;;  sign            1   30[COMRAM] unsigned char 
  9702 ;; Return value:  Size  Location     Type
  9703 ;;                  4   18[COMRAM] unsigned char 
  9704 ;; Registers used:
  9705 ;;		wreg, status,2, status,0, prodl, prodh
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9711 ;;      Params:         8       0       0       0       0       0       0       0       0
  9712 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9713 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9714 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9715 ;;Total ram usage:       25 bytes
  9716 ;; Hardware stack levels used: 1
  9717 ;; This function calls:
  9718 ;;		Nothing
  9719 ;; This function is called by:
  9720 ;;		_ReadADC
  9721 ;;		_efgtoa
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           	psect	text46
  9726  001F7C                     __ptext46:
  9727                           	callstack 0
  9728  001F7C                     ___flmul:
  9729                           	callstack 25
  9730  001F7C  5016               	movf	(___flmul@b+3)^0,w,c
  9731  001F7E  0B80               	andlw	128
  9732  001F80  6E1F               	movwf	___flmul@sign^0,c
  9733  001F82  5016               	movf	(___flmul@b+3)^0,w,c
  9734  001F84  2416               	addwf	(___flmul@b+3)^0,w,c
  9735  001F86  6E25               	movwf	___flmul@bexp^0,c
  9736  001F88  AE15               	btfss	(___flmul@b+2)^0,7,c
  9737  001F8A  EFC9  F00F         	goto	u3831
  9738  001F8E  EFCB  F00F         	goto	u3830
  9739  001F92                     u3831:
  9740  001F92  EFCC  F00F         	goto	l4178
  9741  001F96                     u3830:
  9742  001F96  8025               	bsf	___flmul@bexp^0,0,c
  9743  001F98                     l4178:
  9744  001F98  5025               	movf	___flmul@bexp^0,w,c
  9745  001F9A  B4D8               	btfsc	status,2,c
  9746  001F9C  EFD2  F00F         	goto	u3841
  9747  001FA0  EFD4  F00F         	goto	u3840
  9748  001FA4                     u3841:
  9749  001FA4  EFE7  F00F         	goto	l4186
  9750  001FA8                     u3840:
  9751  001FA8  2825               	incf	___flmul@bexp^0,w,c
  9752  001FAA  A4D8               	btfss	status,2,c
  9753  001FAC  EFDA  F00F         	goto	u3851
  9754  001FB0  EFDC  F00F         	goto	u3850
  9755  001FB4                     u3851:
  9756  001FB4  EFE4  F00F         	goto	l4184
  9757  001FB8                     u3850:
  9758  001FB8  0E00               	movlw	0
  9759  001FBA  6E13               	movwf	___flmul@b^0,c
  9760  001FBC  0E00               	movlw	0
  9761  001FBE  6E14               	movwf	(___flmul@b+1)^0,c
  9762  001FC0  0E00               	movlw	0
  9763  001FC2  6E15               	movwf	(___flmul@b+2)^0,c
  9764  001FC4  0E00               	movlw	0
  9765  001FC6  6E16               	movwf	(___flmul@b+3)^0,c
  9766  001FC8                     l4184:
  9767  001FC8  8E15               	bsf	(___flmul@b+2)^0,7,c
  9768  001FCA  EFEF  F00F         	goto	l4188
  9769  001FCE                     l4186:
  9770  001FCE  0E00               	movlw	0
  9771  001FD0  6E13               	movwf	___flmul@b^0,c
  9772  001FD2  0E00               	movlw	0
  9773  001FD4  6E14               	movwf	(___flmul@b+1)^0,c
  9774  001FD6  0E00               	movlw	0
  9775  001FD8  6E15               	movwf	(___flmul@b+2)^0,c
  9776  001FDA  0E00               	movlw	0
  9777  001FDC  6E16               	movwf	(___flmul@b+3)^0,c
  9778  001FDE                     l4188:
  9779  001FDE  501A               	movf	(___flmul@a+3)^0,w,c
  9780  001FE0  0B80               	andlw	128
  9781  001FE2  1A1F               	xorwf	___flmul@sign^0,f,c
  9782  001FE4  501A               	movf	(___flmul@a+3)^0,w,c
  9783  001FE6  241A               	addwf	(___flmul@a+3)^0,w,c
  9784  001FE8  6E24               	movwf	___flmul@aexp^0,c
  9785  001FEA  AE19               	btfss	(___flmul@a+2)^0,7,c
  9786  001FEC  EFFA  F00F         	goto	u3861
  9787  001FF0  EFFC  F00F         	goto	u3860
  9788  001FF4                     u3861:
  9789  001FF4  EFFD  F00F         	goto	l4196
  9790  001FF8                     u3860:
  9791  001FF8  8024               	bsf	___flmul@aexp^0,0,c
  9792  001FFA                     l4196:
  9793  001FFA  5024               	movf	___flmul@aexp^0,w,c
  9794  001FFC  B4D8               	btfsc	status,2,c
  9795  001FFE  EF03  F010         	goto	u3871
  9796  002002  EF05  F010         	goto	u3870
  9797  002006                     u3871:
  9798  002006  EF18  F010         	goto	l4204
  9799  00200A                     u3870:
  9800  00200A  2824               	incf	___flmul@aexp^0,w,c
  9801  00200C  A4D8               	btfss	status,2,c
  9802  00200E  EF0B  F010         	goto	u3881
  9803  002012  EF0D  F010         	goto	u3880
  9804  002016                     u3881:
  9805  002016  EF15  F010         	goto	l4202
  9806  00201A                     u3880:
  9807  00201A  0E00               	movlw	0
  9808  00201C  6E17               	movwf	___flmul@a^0,c
  9809  00201E  0E00               	movlw	0
  9810  002020  6E18               	movwf	(___flmul@a+1)^0,c
  9811  002022  0E00               	movlw	0
  9812  002024  6E19               	movwf	(___flmul@a+2)^0,c
  9813  002026  0E00               	movlw	0
  9814  002028  6E1A               	movwf	(___flmul@a+3)^0,c
  9815  00202A                     l4202:
  9816  00202A  8E19               	bsf	(___flmul@a+2)^0,7,c
  9817  00202C  EF20  F010         	goto	l1210
  9818  002030                     l4204:
  9819  002030  0E00               	movlw	0
  9820  002032  6E17               	movwf	___flmul@a^0,c
  9821  002034  0E00               	movlw	0
  9822  002036  6E18               	movwf	(___flmul@a+1)^0,c
  9823  002038  0E00               	movlw	0
  9824  00203A  6E19               	movwf	(___flmul@a+2)^0,c
  9825  00203C  0E00               	movlw	0
  9826  00203E  6E1A               	movwf	(___flmul@a+3)^0,c
  9827  002040                     l1210:
  9828  002040  5024               	movf	___flmul@aexp^0,w,c
  9829  002042  B4D8               	btfsc	status,2,c
  9830  002044  EF26  F010         	goto	u3891
  9831  002048  EF28  F010         	goto	u3890
  9832  00204C                     u3891:
  9833  00204C  EF30  F010         	goto	l4208
  9834  002050                     u3890:
  9835  002050  5025               	movf	___flmul@bexp^0,w,c
  9836  002052  A4D8               	btfss	status,2,c
  9837  002054  EF2E  F010         	goto	u3901
  9838  002058  EF30  F010         	goto	u3900
  9839  00205C                     u3901:
  9840  00205C  EF3A  F010         	goto	l4212
  9841  002060                     u3900:
  9842  002060                     l4208:
  9843  002060  0E00               	movlw	0
  9844  002062  6E13               	movwf	?___flmul^0,c
  9845  002064  0E00               	movlw	0
  9846  002066  6E14               	movwf	(?___flmul+1)^0,c
  9847  002068  0E00               	movlw	0
  9848  00206A  6E15               	movwf	(?___flmul+2)^0,c
  9849  00206C  0E00               	movlw	0
  9850  00206E  6E16               	movwf	(?___flmul+3)^0,c
  9851  002070  EFD2  F011         	goto	l1214
  9852  002074                     l4212:
  9853  002074  5019               	movf	(___flmul@a+2)^0,w,c
  9854  002076  0213               	mulwf	___flmul@b^0,c
  9855  002078  CFF3 F02A          	movff	prodl,___flmul@temp
  9856  00207C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9857  002080  502A               	movf	___flmul@temp^0,w,c
  9858  002082  6E20               	movwf	___flmul@grs^0,c
  9859  002084  6A21               	clrf	(___flmul@grs+1)^0,c
  9860  002086  6A22               	clrf	(___flmul@grs+2)^0,c
  9861  002088  6A23               	clrf	(___flmul@grs+3)^0,c
  9862  00208A  502B               	movf	(___flmul@temp+1)^0,w,c
  9863  00208C  6E26               	movwf	___flmul@prod^0,c
  9864  00208E  6A27               	clrf	(___flmul@prod+1)^0,c
  9865  002090  6A28               	clrf	(___flmul@prod+2)^0,c
  9866  002092  6A29               	clrf	(___flmul@prod+3)^0,c
  9867  002094  5018               	movf	(___flmul@a+1)^0,w,c
  9868  002096  0214               	mulwf	(___flmul@b+1)^0,c
  9869  002098  CFF3 F02A          	movff	prodl,___flmul@temp
  9870  00209C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9871  0020A0  502A               	movf	___flmul@temp^0,w,c
  9872  0020A2  2620               	addwf	___flmul@grs^0,f,c
  9873  0020A4  0E00               	movlw	0
  9874  0020A6  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9875  0020A8  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9876  0020AA  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9877  0020AC  502B               	movf	(___flmul@temp+1)^0,w,c
  9878  0020AE  2626               	addwf	___flmul@prod^0,f,c
  9879  0020B0  0E00               	movlw	0
  9880  0020B2  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9881  0020B4  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9882  0020B6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9883  0020B8  5017               	movf	___flmul@a^0,w,c
  9884  0020BA  0215               	mulwf	(___flmul@b+2)^0,c
  9885  0020BC  CFF3 F02A          	movff	prodl,___flmul@temp
  9886  0020C0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9887  0020C4  502A               	movf	___flmul@temp^0,w,c
  9888  0020C6  2620               	addwf	___flmul@grs^0,f,c
  9889  0020C8  0E00               	movlw	0
  9890  0020CA  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9891  0020CC  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9892  0020CE  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9893  0020D0  502B               	movf	(___flmul@temp+1)^0,w,c
  9894  0020D2  2626               	addwf	___flmul@prod^0,f,c
  9895  0020D4  0E00               	movlw	0
  9896  0020D6  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9897  0020D8  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9898  0020DA  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9899  0020DC  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  9900  0020E0  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  9901  0020E4  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  9902  0020E8  6A20               	clrf	___flmul@grs^0,c
  9903  0020EA  5017               	movf	___flmul@a^0,w,c
  9904  0020EC  0214               	mulwf	(___flmul@b+1)^0,c
  9905  0020EE  CFF3 F02A          	movff	prodl,___flmul@temp
  9906  0020F2  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9907  0020F6  502A               	movf	___flmul@temp^0,w,c
  9908  0020F8  2620               	addwf	___flmul@grs^0,f,c
  9909  0020FA  502B               	movf	(___flmul@temp+1)^0,w,c
  9910  0020FC  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9911  0020FE  0E00               	movlw	0
  9912  002100  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9913  002102  0E00               	movlw	0
  9914  002104  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9915  002106  5018               	movf	(___flmul@a+1)^0,w,c
  9916  002108  0213               	mulwf	___flmul@b^0,c
  9917  00210A  CFF3 F02A          	movff	prodl,___flmul@temp
  9918  00210E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9919  002112  502A               	movf	___flmul@temp^0,w,c
  9920  002114  2620               	addwf	___flmul@grs^0,f,c
  9921  002116  502B               	movf	(___flmul@temp+1)^0,w,c
  9922  002118  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9923  00211A  0E00               	movlw	0
  9924  00211C  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9925  00211E  0E00               	movlw	0
  9926  002120  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9927  002122  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  9928  002126  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  9929  00212A  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  9930  00212E  6A20               	clrf	___flmul@grs^0,c
  9931  002130  5017               	movf	___flmul@a^0,w,c
  9932  002132  0213               	mulwf	___flmul@b^0,c
  9933  002134  CFF3 F02A          	movff	prodl,___flmul@temp
  9934  002138  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9935  00213C  502A               	movf	___flmul@temp^0,w,c
  9936  00213E  2620               	addwf	___flmul@grs^0,f,c
  9937  002140  502B               	movf	(___flmul@temp+1)^0,w,c
  9938  002142  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9939  002144  0E00               	movlw	0
  9940  002146  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9941  002148  0E00               	movlw	0
  9942  00214A  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9943  00214C  5019               	movf	(___flmul@a+2)^0,w,c
  9944  00214E  0214               	mulwf	(___flmul@b+1)^0,c
  9945  002150  CFF3 F02A          	movff	prodl,___flmul@temp
  9946  002154  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9947  002158  502A               	movf	___flmul@temp^0,w,c
  9948  00215A  2626               	addwf	___flmul@prod^0,f,c
  9949  00215C  502B               	movf	(___flmul@temp+1)^0,w,c
  9950  00215E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9951  002160  0E00               	movlw	0
  9952  002162  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9953  002164  0E00               	movlw	0
  9954  002166  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9955  002168  5018               	movf	(___flmul@a+1)^0,w,c
  9956  00216A  0215               	mulwf	(___flmul@b+2)^0,c
  9957  00216C  CFF3 F02A          	movff	prodl,___flmul@temp
  9958  002170  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9959  002174  502A               	movf	___flmul@temp^0,w,c
  9960  002176  2626               	addwf	___flmul@prod^0,f,c
  9961  002178  502B               	movf	(___flmul@temp+1)^0,w,c
  9962  00217A  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9963  00217C  0E00               	movlw	0
  9964  00217E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9965  002180  0E00               	movlw	0
  9966  002182  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9967  002184  5019               	movf	(___flmul@a+2)^0,w,c
  9968  002186  0215               	mulwf	(___flmul@b+2)^0,c
  9969  002188  CFF3 F02A          	movff	prodl,___flmul@temp
  9970  00218C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9971  002190  502A               	movf	___flmul@temp^0,w,c
  9972  002192  6E1B               	movwf	??___flmul^0,c
  9973  002194  502B               	movf	(___flmul@temp+1)^0,w,c
  9974  002196  6E1C               	movwf	(??___flmul+1)^0,c
  9975  002198  6A1D               	clrf	(??___flmul+2)^0,c
  9976  00219A  6A1E               	clrf	(??___flmul+3)^0,c
  9977  00219C  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  9978  0021A0  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  9979  0021A4  C01B  F01C         	movff	??___flmul,??___flmul+1
  9980  0021A8  6A1B               	clrf	??___flmul^0,c
  9981  0021AA  501B               	movf	??___flmul^0,w,c
  9982  0021AC  2626               	addwf	___flmul@prod^0,f,c
  9983  0021AE  501C               	movf	(??___flmul+1)^0,w,c
  9984  0021B0  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9985  0021B2  501D               	movf	(??___flmul+2)^0,w,c
  9986  0021B4  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9987  0021B6  501E               	movf	(??___flmul+3)^0,w,c
  9988  0021B8  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9989  0021BA  C020  F01B         	movff	___flmul@grs,??___flmul
  9990  0021BE  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  9991  0021C2  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  9992  0021C6  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  9993  0021CA  0E19               	movlw	25
  9994  0021CC  EFED  F010         	goto	u3910
  9995  0021D0                     u3915:
  9996  0021D0  90D8               	bcf	status,0,c
  9997  0021D2  321E               	rrcf	(??___flmul+3)^0,f,c
  9998  0021D4  321D               	rrcf	(??___flmul+2)^0,f,c
  9999  0021D6  321C               	rrcf	(??___flmul+1)^0,f,c
 10000  0021D8  321B               	rrcf	??___flmul^0,f,c
 10001  0021DA                     u3910:
 10002  0021DA  2EE8               	decfsz	wreg,f,c
 10003  0021DC  EFE8  F010         	goto	u3915
 10004  0021E0  501B               	movf	??___flmul^0,w,c
 10005  0021E2  2626               	addwf	___flmul@prod^0,f,c
 10006  0021E4  501C               	movf	(??___flmul+1)^0,w,c
 10007  0021E6  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10008  0021E8  501D               	movf	(??___flmul+2)^0,w,c
 10009  0021EA  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10010  0021EC  501E               	movf	(??___flmul+3)^0,w,c
 10011  0021EE  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10012  0021F0  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 10013  0021F4  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 10014  0021F8  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 10015  0021FC  6A20               	clrf	___flmul@grs^0,c
 10016  0021FE  5024               	movf	___flmul@aexp^0,w,c
 10017  002200  C025  F01B         	movff	___flmul@bexp,??___flmul
 10018  002204  6A1C               	clrf	(??___flmul+1)^0,c
 10019  002206  261B               	addwf	??___flmul^0,f,c
 10020  002208  0E00               	movlw	0
 10021  00220A  221C               	addwfc	(??___flmul+1)^0,f,c
 10022  00220C  0E82               	movlw	130
 10023  00220E  241B               	addwf	??___flmul^0,w,c
 10024  002210  6E2A               	movwf	___flmul@temp^0,c
 10025  002212  0EFF               	movlw	255
 10026  002214  201C               	addwfc	(??___flmul+1)^0,w,c
 10027  002216  6E2B               	movwf	(___flmul@temp+1)^0,c
 10028  002218  EF23  F011         	goto	l4260
 10029  00221C                     l4254:
 10030  00221C  90D8               	bcf	status,0,c
 10031  00221E  3626               	rlcf	___flmul@prod^0,f,c
 10032  002220  3627               	rlcf	(___flmul@prod+1)^0,f,c
 10033  002222  3628               	rlcf	(___flmul@prod+2)^0,f,c
 10034  002224  3629               	rlcf	(___flmul@prod+3)^0,f,c
 10035  002226  AE23               	btfss	(___flmul@grs+3)^0,7,c
 10036  002228  EF18  F011         	goto	u3921
 10037  00222C  EF1A  F011         	goto	u3920
 10038  002230                     u3921:
 10039  002230  EF1B  F011         	goto	l1217
 10040  002234                     u3920:
 10041  002234  8026               	bsf	___flmul@prod^0,0,c
 10042  002236                     l1217:
 10043  002236  90D8               	bcf	status,0,c
 10044  002238  3620               	rlcf	___flmul@grs^0,f,c
 10045  00223A  3621               	rlcf	(___flmul@grs+1)^0,f,c
 10046  00223C  3622               	rlcf	(___flmul@grs+2)^0,f,c
 10047  00223E  3623               	rlcf	(___flmul@grs+3)^0,f,c
 10048  002240  062A               	decf	___flmul@temp^0,f,c
 10049  002242  A0D8               	btfss	status,0,c
 10050  002244  062B               	decf	(___flmul@temp+1)^0,f,c
 10051  002246                     l4260:
 10052  002246  AE28               	btfss	(___flmul@prod+2)^0,7,c
 10053  002248  EF28  F011         	goto	u3931
 10054  00224C  EF2A  F011         	goto	u3930
 10055  002250                     u3931:
 10056  002250  EF0E  F011         	goto	l4254
 10057  002254                     u3930:
 10058  002254  0E00               	movlw	0
 10059  002256  6E24               	movwf	___flmul@aexp^0,c
 10060  002258  AE23               	btfss	(___flmul@grs+3)^0,7,c
 10061  00225A  EF31  F011         	goto	u3941
 10062  00225E  EF33  F011         	goto	u3940
 10063  002262                     u3941:
 10064  002262  EF57  F011         	goto	l1219
 10065  002266                     u3940:
 10066  002266  0EFF               	movlw	255
 10067  002268  1420               	andwf	___flmul@grs^0,w,c
 10068  00226A  6E1B               	movwf	??___flmul^0,c
 10069  00226C  0EFF               	movlw	255
 10070  00226E  1421               	andwf	(___flmul@grs+1)^0,w,c
 10071  002270  6E1C               	movwf	(??___flmul+1)^0,c
 10072  002272  0EFF               	movlw	255
 10073  002274  1422               	andwf	(___flmul@grs+2)^0,w,c
 10074  002276  6E1D               	movwf	(??___flmul+2)^0,c
 10075  002278  0E7F               	movlw	127
 10076  00227A  1423               	andwf	(___flmul@grs+3)^0,w,c
 10077  00227C  6E1E               	movwf	(??___flmul+3)^0,c
 10078  00227E  501B               	movf	??___flmul^0,w,c
 10079  002280  101C               	iorwf	(??___flmul+1)^0,w,c
 10080  002282  101D               	iorwf	(??___flmul+2)^0,w,c
 10081  002284  101E               	iorwf	(??___flmul+3)^0,w,c
 10082  002286  B4D8               	btfsc	status,2,c
 10083  002288  EF48  F011         	goto	u3951
 10084  00228C  EF4A  F011         	goto	u3950
 10085  002290                     u3951:
 10086  002290  EF4E  F011         	goto	l1220
 10087  002294                     u3950:
 10088  002294                     l4268:
 10089  002294  0E01               	movlw	1
 10090  002296  6E24               	movwf	___flmul@aexp^0,c
 10091  002298  EF57  F011         	goto	l1219
 10092  00229C                     l1220:
 10093  00229C  A026               	btfss	___flmul@prod^0,0,c
 10094  00229E  EF53  F011         	goto	u3961
 10095  0022A2  EF55  F011         	goto	u3960
 10096  0022A6                     u3961:
 10097  0022A6  EF57  F011         	goto	l1219
 10098  0022AA                     u3960:
 10099  0022AA  EF4A  F011         	goto	l4268
 10100  0022AE                     l1219:
 10101  0022AE  5024               	movf	___flmul@aexp^0,w,c
 10102  0022B0  B4D8               	btfsc	status,2,c
 10103  0022B2  EF5D  F011         	goto	u3971
 10104  0022B6  EF5F  F011         	goto	u3970
 10105  0022BA                     u3971:
 10106  0022BA  EF83  F011         	goto	l4280
 10107  0022BE                     u3970:
 10108  0022BE  0E01               	movlw	1
 10109  0022C0  2626               	addwf	___flmul@prod^0,f,c
 10110  0022C2  0E00               	movlw	0
 10111  0022C4  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10112  0022C6  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10113  0022C8  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10114  0022CA  A029               	btfss	(___flmul@prod+3)^0,0,c
 10115  0022CC  EF6A  F011         	goto	u3981
 10116  0022D0  EF6C  F011         	goto	u3980
 10117  0022D4                     u3981:
 10118  0022D4  EF83  F011         	goto	l4280
 10119  0022D8                     u3980:
 10120  0022D8  C026  F01B         	movff	___flmul@prod,??___flmul
 10121  0022DC  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
 10122  0022E0  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
 10123  0022E4  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
 10124  0022E8  341E               	rlcf	(??___flmul+3)^0,w,c
 10125  0022EA  321E               	rrcf	(??___flmul+3)^0,f,c
 10126  0022EC  321D               	rrcf	(??___flmul+2)^0,f,c
 10127  0022EE  321C               	rrcf	(??___flmul+1)^0,f,c
 10128  0022F0  321B               	rrcf	??___flmul^0,f,c
 10129  0022F2  C01B  F026         	movff	??___flmul,___flmul@prod
 10130  0022F6  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
 10131  0022FA  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
 10132  0022FE  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
 10133  002302  4A2A               	infsnz	___flmul@temp^0,f,c
 10134  002304  2A2B               	incf	(___flmul@temp+1)^0,f,c
 10135  002306                     l4280:
 10136  002306  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
 10137  002308  EF8E  F011         	goto	u3991
 10138  00230C  502B               	movf	(___flmul@temp+1)^0,w,c
 10139  00230E  E108               	bnz	u3990
 10140  002310  282A               	incf	___flmul@temp^0,w,c
 10141  002312  A0D8               	btfss	status,0,c
 10142  002314  EF8E  F011         	goto	u3991
 10143  002318  EF90  F011         	goto	u3990
 10144  00231C                     u3991:
 10145  00231C  EF9A  F011         	goto	l4284
 10146  002320                     u3990:
 10147  002320  0E00               	movlw	0
 10148  002322  6E26               	movwf	___flmul@prod^0,c
 10149  002324  0E00               	movlw	0
 10150  002326  6E27               	movwf	(___flmul@prod+1)^0,c
 10151  002328  0E80               	movlw	128
 10152  00232A  6E28               	movwf	(___flmul@prod+2)^0,c
 10153  00232C  0E7F               	movlw	127
 10154  00232E  6E29               	movwf	(___flmul@prod+3)^0,c
 10155  002330  EFC8  F011         	goto	l4296
 10156  002334                     l4284:
 10157  002334  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
 10158  002336  EFA7  F011         	goto	u4000
 10159  00233A  502B               	movf	(___flmul@temp+1)^0,w,c
 10160  00233C  E106               	bnz	u4001
 10161  00233E  042A               	decf	___flmul@temp^0,w,c
 10162  002340  B0D8               	btfsc	status,0,c
 10163  002342  EFA5  F011         	goto	u4001
 10164  002346  EFA7  F011         	goto	u4000
 10165  00234A                     u4001:
 10166  00234A  EFB3  F011         	goto	l1227
 10167  00234E                     u4000:
 10168  00234E  0E00               	movlw	0
 10169  002350  6E26               	movwf	___flmul@prod^0,c
 10170  002352  0E00               	movlw	0
 10171  002354  6E27               	movwf	(___flmul@prod+1)^0,c
 10172  002356  0E00               	movlw	0
 10173  002358  6E28               	movwf	(___flmul@prod+2)^0,c
 10174  00235A  0E00               	movlw	0
 10175  00235C  6E29               	movwf	(___flmul@prod+3)^0,c
 10176  00235E  0E00               	movlw	0
 10177  002360  6E1F               	movwf	___flmul@sign^0,c
 10178  002362  EFC8  F011         	goto	l4296
 10179  002366                     l1227:
 10180  002366  C02A  F025         	movff	___flmul@temp,___flmul@bexp
 10181  00236A  0EFF               	movlw	255
 10182  00236C  1626               	andwf	___flmul@prod^0,f,c
 10183  00236E  0EFF               	movlw	255
 10184  002370  1627               	andwf	(___flmul@prod+1)^0,f,c
 10185  002372  0E7F               	movlw	127
 10186  002374  1628               	andwf	(___flmul@prod+2)^0,f,c
 10187  002376  0E00               	movlw	0
 10188  002378  1629               	andwf	(___flmul@prod+3)^0,f,c
 10189  00237A  A025               	btfss	___flmul@bexp^0,0,c
 10190  00237C  EFC2  F011         	goto	u4011
 10191  002380  EFC4  F011         	goto	u4010
 10192  002384                     u4011:
 10193  002384  EFC5  F011         	goto	l4294
 10194  002388                     u4010:
 10195  002388  8E28               	bsf	(___flmul@prod+2)^0,7,c
 10196  00238A                     l4294:
 10197  00238A  90D8               	bcf	status,0,c
 10198  00238C  3025               	rrcf	___flmul@bexp^0,w,c
 10199  00238E  6E29               	movwf	(___flmul@prod+3)^0,c
 10200  002390                     l4296:
 10201  002390  501F               	movf	___flmul@sign^0,w,c
 10202  002392  1229               	iorwf	(___flmul@prod+3)^0,f,c
 10203  002394  C026  F013         	movff	___flmul@prod,?___flmul
 10204  002398  C027  F014         	movff	___flmul@prod+1,?___flmul+1
 10205  00239C  C028  F015         	movff	___flmul@prod+2,?___flmul+2
 10206  0023A0  C029  F016         	movff	___flmul@prod+3,?___flmul+3
 10207  0023A4                     l1214:
 10208  0023A4  0012               	return		;funcret
 10209  0023A6                     __end_of___flmul:
 10210                           	callstack 0
 10211                           
 10212 ;; *************** function ___flge *****************
 10213 ;; Defined at:
 10214 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;  ff1             4   43[COMRAM] unsigned char 
 10217 ;;  ff2             4   47[COMRAM] unsigned char 
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;		None
 10220 ;; Return value:  Size  Location     Type
 10221 ;;		None               void
 10222 ;; Registers used:
 10223 ;;		wreg, status,2, status,0
 10224 ;; Tracked objects:
 10225 ;;		On entry : 0/0
 10226 ;;		On exit  : 0/0
 10227 ;;		Unchanged: 0/0
 10228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10229 ;;      Params:         8       0       0       0       0       0       0       0       0
 10230 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10231 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10232 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10233 ;;Total ram usage:       12 bytes
 10234 ;; Hardware stack levels used: 1
 10235 ;; This function calls:
 10236 ;;		Nothing
 10237 ;; This function is called by:
 10238 ;;		_Estados
 10239 ;;		_efgtoa
 10240 ;; This function uses a non-reentrant model
 10241 ;;
 10242                           
 10243                           	psect	text47
 10244  00373C                     __ptext47:
 10245                           	callstack 0
 10246  00373C                     ___flge:
 10247                           	callstack 25
 10248  00373C  0E00               	movlw	0
 10249  00373E  142C               	andwf	___flge@ff1^0,w,c
 10250  003740  6E34               	movwf	??___flge^0,c
 10251  003742  0E00               	movlw	0
 10252  003744  142D               	andwf	(___flge@ff1+1)^0,w,c
 10253  003746  6E35               	movwf	(??___flge+1)^0,c
 10254  003748  0E80               	movlw	128
 10255  00374A  142E               	andwf	(___flge@ff1+2)^0,w,c
 10256  00374C  6E36               	movwf	(??___flge+2)^0,c
 10257  00374E  0E7F               	movlw	127
 10258  003750  142F               	andwf	(___flge@ff1+3)^0,w,c
 10259  003752  6E37               	movwf	(??___flge+3)^0,c
 10260  003754  5034               	movf	??___flge^0,w,c
 10261  003756  1035               	iorwf	(??___flge+1)^0,w,c
 10262  003758  1036               	iorwf	(??___flge+2)^0,w,c
 10263  00375A  1037               	iorwf	(??___flge+3)^0,w,c
 10264  00375C  A4D8               	btfss	status,2,c
 10265  00375E  EFB3  F01B         	goto	u4171
 10266  003762  EFB5  F01B         	goto	u4170
 10267  003766                     u4171:
 10268  003766  EFBD  F01B         	goto	l4408
 10269  00376A                     u4170:
 10270  00376A  0E00               	movlw	0
 10271  00376C  6E2C               	movwf	___flge@ff1^0,c
 10272  00376E  0E00               	movlw	0
 10273  003770  6E2D               	movwf	(___flge@ff1+1)^0,c
 10274  003772  0E00               	movlw	0
 10275  003774  6E2E               	movwf	(___flge@ff1+2)^0,c
 10276  003776  0E00               	movlw	0
 10277  003778  6E2F               	movwf	(___flge@ff1+3)^0,c
 10278  00377A                     l4408:
 10279  00377A  0E00               	movlw	0
 10280  00377C  1430               	andwf	___flge@ff2^0,w,c
 10281  00377E  6E34               	movwf	??___flge^0,c
 10282  003780  0E00               	movlw	0
 10283  003782  1431               	andwf	(___flge@ff2+1)^0,w,c
 10284  003784  6E35               	movwf	(??___flge+1)^0,c
 10285  003786  0E80               	movlw	128
 10286  003788  1432               	andwf	(___flge@ff2+2)^0,w,c
 10287  00378A  6E36               	movwf	(??___flge+2)^0,c
 10288  00378C  0E7F               	movlw	127
 10289  00378E  1433               	andwf	(___flge@ff2+3)^0,w,c
 10290  003790  6E37               	movwf	(??___flge+3)^0,c
 10291  003792  5034               	movf	??___flge^0,w,c
 10292  003794  1035               	iorwf	(??___flge+1)^0,w,c
 10293  003796  1036               	iorwf	(??___flge+2)^0,w,c
 10294  003798  1037               	iorwf	(??___flge+3)^0,w,c
 10295  00379A  A4D8               	btfss	status,2,c
 10296  00379C  EFD2  F01B         	goto	u4181
 10297  0037A0  EFD4  F01B         	goto	u4180
 10298  0037A4                     u4181:
 10299  0037A4  EFDC  F01B         	goto	l4412
 10300  0037A8                     u4180:
 10301  0037A8  0E00               	movlw	0
 10302  0037AA  6E30               	movwf	___flge@ff2^0,c
 10303  0037AC  0E00               	movlw	0
 10304  0037AE  6E31               	movwf	(___flge@ff2+1)^0,c
 10305  0037B0  0E00               	movlw	0
 10306  0037B2  6E32               	movwf	(___flge@ff2+2)^0,c
 10307  0037B4  0E00               	movlw	0
 10308  0037B6  6E33               	movwf	(___flge@ff2+3)^0,c
 10309  0037B8                     l4412:
 10310  0037B8  AE2F               	btfss	(___flge@ff1+3)^0,7,c
 10311  0037BA  EFE1  F01B         	goto	u4191
 10312  0037BE  EFE3  F01B         	goto	u4190
 10313  0037C2                     u4191:
 10314  0037C2  EFEC  F01B         	goto	l4416
 10315  0037C6                     u4190:
 10316  0037C6  6C2C               	negf	___flge@ff1^0,c
 10317  0037C8  1E2D               	comf	(___flge@ff1+1)^0,f,c
 10318  0037CA  B0D8               	btfsc	status,0,c
 10319  0037CC  2A2D               	incf	(___flge@ff1+1)^0,f,c
 10320  0037CE  1E2E               	comf	(___flge@ff1+2)^0,f,c
 10321  0037D0  B0D8               	btfsc	status,0,c
 10322  0037D2  2A2E               	incf	(___flge@ff1+2)^0,f,c
 10323  0037D4  0E80               	movlw	128
 10324  0037D6  562F               	subfwb	(___flge@ff1+3)^0,f,c
 10325  0037D8                     l4416:
 10326  0037D8  AE33               	btfss	(___flge@ff2+3)^0,7,c
 10327  0037DA  EFF1  F01B         	goto	u4201
 10328  0037DE  EFF3  F01B         	goto	u4200
 10329  0037E2                     u4201:
 10330  0037E2  EFFC  F01B         	goto	l861
 10331  0037E6                     u4200:
 10332  0037E6  6C30               	negf	___flge@ff2^0,c
 10333  0037E8  1E31               	comf	(___flge@ff2+1)^0,f,c
 10334  0037EA  B0D8               	btfsc	status,0,c
 10335  0037EC  2A31               	incf	(___flge@ff2+1)^0,f,c
 10336  0037EE  1E32               	comf	(___flge@ff2+2)^0,f,c
 10337  0037F0  B0D8               	btfsc	status,0,c
 10338  0037F2  2A32               	incf	(___flge@ff2+2)^0,f,c
 10339  0037F4  0E80               	movlw	128
 10340  0037F6  5633               	subfwb	(___flge@ff2+3)^0,f,c
 10341  0037F8                     l861:
 10342  0037F8  0E00               	movlw	0
 10343  0037FA  1A2C               	xorwf	___flge@ff1^0,f,c
 10344  0037FC  0E00               	movlw	0
 10345  0037FE  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
 10346  003800  0E00               	movlw	0
 10347  003802  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
 10348  003804  0E80               	movlw	128
 10349  003806  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
 10350  003808  0E00               	movlw	0
 10351  00380A  1A30               	xorwf	___flge@ff2^0,f,c
 10352  00380C  0E00               	movlw	0
 10353  00380E  1A31               	xorwf	(___flge@ff2+1)^0,f,c
 10354  003810  0E00               	movlw	0
 10355  003812  1A32               	xorwf	(___flge@ff2+2)^0,f,c
 10356  003814  0E80               	movlw	128
 10357  003816  1A33               	xorwf	(___flge@ff2+3)^0,f,c
 10358  003818  5030               	movf	___flge@ff2^0,w,c
 10359  00381A  5C2C               	subwf	___flge@ff1^0,w,c
 10360  00381C  5031               	movf	(___flge@ff2+1)^0,w,c
 10361  00381E  582D               	subwfb	(___flge@ff1+1)^0,w,c
 10362  003820  5032               	movf	(___flge@ff2+2)^0,w,c
 10363  003822  582E               	subwfb	(___flge@ff1+2)^0,w,c
 10364  003824  5033               	movf	(___flge@ff2+3)^0,w,c
 10365  003826  582F               	subwfb	(___flge@ff1+3)^0,w,c
 10366  003828  B0D8               	btfsc	status,0,c
 10367  00382A  EF19  F01C         	goto	u4211
 10368  00382E  EF1B  F01C         	goto	u4210
 10369  003832                     u4211:
 10370  003832  EF1E  F01C         	goto	l4422
 10371  003836                     u4210:
 10372  003836  90D8               	bcf	status,0,c
 10373  003838  EF1F  F01C         	goto	l866
 10374  00383C                     l4422:
 10375  00383C  80D8               	bsf	status,0,c
 10376  00383E                     l866:
 10377  00383E  0012               	return		;funcret
 10378  003840                     __end_of___flge:
 10379                           	callstack 0
 10380                           
 10381 ;; *************** function ___fleq *****************
 10382 ;; Defined at:
 10383 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
 10384 ;; Parameters:    Size  Location     Type
 10385 ;;  ff1             4    0[COMRAM] unsigned char 
 10386 ;;  ff2             4    4[COMRAM] unsigned char 
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;		None
 10389 ;; Return value:  Size  Location     Type
 10390 ;;		None               void
 10391 ;; Registers used:
 10392 ;;		wreg, status,2, status,0
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/0
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10398 ;;      Params:         8       0       0       0       0       0       0       0       0
 10399 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10400 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10401 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10402 ;;Total ram usage:       12 bytes
 10403 ;; Hardware stack levels used: 1
 10404 ;; This function calls:
 10405 ;;		Nothing
 10406 ;; This function is called by:
 10407 ;;		_efgtoa
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           	psect	text48
 10412  003F8A                     __ptext48:
 10413                           	callstack 0
 10414  003F8A                     ___fleq:
 10415                           	callstack 25
 10416  003F8A  0E00               	movlw	0
 10417  003F8C  1401               	andwf	___fleq@ff1^0,w,c
 10418  003F8E  6E09               	movwf	??___fleq^0,c
 10419  003F90  0E00               	movlw	0
 10420  003F92  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10421  003F94  6E0A               	movwf	(??___fleq+1)^0,c
 10422  003F96  0E80               	movlw	128
 10423  003F98  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10424  003F9A  6E0B               	movwf	(??___fleq+2)^0,c
 10425  003F9C  0E7F               	movlw	127
 10426  003F9E  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10427  003FA0  6E0C               	movwf	(??___fleq+3)^0,c
 10428  003FA2  5009               	movf	??___fleq^0,w,c
 10429  003FA4  100A               	iorwf	(??___fleq+1)^0,w,c
 10430  003FA6  100B               	iorwf	(??___fleq+2)^0,w,c
 10431  003FA8  100C               	iorwf	(??___fleq+3)^0,w,c
 10432  003FAA  A4D8               	btfss	status,2,c
 10433  003FAC  EFDA  F01F         	goto	u4141
 10434  003FB0  EFDC  F01F         	goto	u4140
 10435  003FB4                     u4141:
 10436  003FB4  EFE4  F01F         	goto	l4392
 10437  003FB8                     u4140:
 10438  003FB8  0E00               	movlw	0
 10439  003FBA  6E01               	movwf	___fleq@ff1^0,c
 10440  003FBC  0E00               	movlw	0
 10441  003FBE  6E02               	movwf	(___fleq@ff1+1)^0,c
 10442  003FC0  0E00               	movlw	0
 10443  003FC2  6E03               	movwf	(___fleq@ff1+2)^0,c
 10444  003FC4  0E00               	movlw	0
 10445  003FC6  6E04               	movwf	(___fleq@ff1+3)^0,c
 10446  003FC8                     l4392:
 10447  003FC8  0E00               	movlw	0
 10448  003FCA  1405               	andwf	___fleq@ff2^0,w,c
 10449  003FCC  6E09               	movwf	??___fleq^0,c
 10450  003FCE  0E00               	movlw	0
 10451  003FD0  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10452  003FD2  6E0A               	movwf	(??___fleq+1)^0,c
 10453  003FD4  0E80               	movlw	128
 10454  003FD6  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10455  003FD8  6E0B               	movwf	(??___fleq+2)^0,c
 10456  003FDA  0E7F               	movlw	127
 10457  003FDC  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10458  003FDE  6E0C               	movwf	(??___fleq+3)^0,c
 10459  003FE0  5009               	movf	??___fleq^0,w,c
 10460  003FE2  100A               	iorwf	(??___fleq+1)^0,w,c
 10461  003FE4  100B               	iorwf	(??___fleq+2)^0,w,c
 10462  003FE6  100C               	iorwf	(??___fleq+3)^0,w,c
 10463  003FE8  A4D8               	btfss	status,2,c
 10464  003FEA  EFF9  F01F         	goto	u4151
 10465  003FEE  EFFB  F01F         	goto	u4150
 10466  003FF2                     u4151:
 10467  003FF2  EF03  F020         	goto	l4396
 10468  003FF6                     u4150:
 10469  003FF6  0E00               	movlw	0
 10470  003FF8  6E05               	movwf	___fleq@ff2^0,c
 10471  003FFA  0E00               	movlw	0
 10472  003FFC  6E06               	movwf	(___fleq@ff2+1)^0,c
 10473  003FFE  0E00               	movlw	0
 10474  004000  6E07               	movwf	(___fleq@ff2+2)^0,c
 10475  004002  0E00               	movlw	0
 10476  004004  6E08               	movwf	(___fleq@ff2+3)^0,c
 10477  004006                     l4396:
 10478  004006  5005               	movf	___fleq@ff2^0,w,c
 10479  004008  1801               	xorwf	___fleq@ff1^0,w,c
 10480  00400A  E10F               	bnz	u4160
 10481  00400C  5006               	movf	(___fleq@ff2+1)^0,w,c
 10482  00400E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10483  004010  E10C               	bnz	u4160
 10484  004012  5007               	movf	(___fleq@ff2+2)^0,w,c
 10485  004014  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10486  004016  E109               	bnz	u4160
 10487  004018  5008               	movf	(___fleq@ff2+3)^0,w,c
 10488  00401A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10489  00401C  B4D8               	btfsc	status,2,c
 10490  00401E  EF13  F020         	goto	u4161
 10491  004022  EF15  F020         	goto	u4160
 10492  004026                     u4161:
 10493  004026  EF18  F020         	goto	l4400
 10494  00402A                     u4160:
 10495  00402A  90D8               	bcf	status,0,c
 10496  00402C  EF19  F020         	goto	l855
 10497  004030                     l4400:
 10498  004030  80D8               	bsf	status,0,c
 10499  004032                     l855:
 10500  004032  0012               	return		;funcret
 10501  004034                     __end_of___fleq:
 10502                           	callstack 0
 10503                           
 10504 ;; *************** function ___fldiv *****************
 10505 ;; Defined at:
 10506 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 10507 ;; Parameters:    Size  Location     Type
 10508 ;;  b               4   43[COMRAM] unsigned char 
 10509 ;;  a               4   47[COMRAM] unsigned char 
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;  grs             4   62[COMRAM] unsigned long 
 10512 ;;  rem             4   55[COMRAM] unsigned long 
 10513 ;;  new_exp         2   60[COMRAM] short 
 10514 ;;  aexp            1   67[COMRAM] unsigned char 
 10515 ;;  bexp            1   66[COMRAM] unsigned char 
 10516 ;;  sign            1   59[COMRAM] unsigned char 
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  4   43[COMRAM] unsigned char 
 10519 ;; Registers used:
 10520 ;;		wreg, status,2, status,0
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10526 ;;      Params:         8       0       0       0       0       0       0       0       0
 10527 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10528 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10529 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10530 ;;Total ram usage:       25 bytes
 10531 ;; Hardware stack levels used: 1
 10532 ;; This function calls:
 10533 ;;		Nothing
 10534 ;; This function is called by:
 10535 ;;		_ReadADC
 10536 ;;		_USART_Init
 10537 ;;		_efgtoa
 10538 ;; This function uses a non-reentrant model
 10539 ;;
 10540                           
 10541                           	psect	text49
 10542  0023A6                     __ptext49:
 10543                           	callstack 0
 10544  0023A6                     ___fldiv:
 10545                           	callstack 29
 10546  0023A6  502F               	movf	(___fldiv@b+3)^0,w,c
 10547  0023A8  0B80               	andlw	128
 10548  0023AA  6E3C               	movwf	___fldiv@sign^0,c
 10549  0023AC  502F               	movf	(___fldiv@b+3)^0,w,c
 10550  0023AE  242F               	addwf	(___fldiv@b+3)^0,w,c
 10551  0023B0  6E43               	movwf	___fldiv@bexp^0,c
 10552  0023B2  AE2E               	btfss	(___fldiv@b+2)^0,7,c
 10553  0023B4  EFDE  F011         	goto	u3601
 10554  0023B8  EFE0  F011         	goto	u3600
 10555  0023BC                     u3601:
 10556  0023BC  EFE1  F011         	goto	l4040
 10557  0023C0                     u3600:
 10558  0023C0  8043               	bsf	___fldiv@bexp^0,0,c
 10559  0023C2                     l4040:
 10560  0023C2  5043               	movf	___fldiv@bexp^0,w,c
 10561  0023C4  B4D8               	btfsc	status,2,c
 10562  0023C6  EFE7  F011         	goto	u3611
 10563  0023CA  EFE9  F011         	goto	u3610
 10564  0023CE                     u3611:
 10565  0023CE  EFFE  F011         	goto	l4050
 10566  0023D2                     u3610:
 10567  0023D2  2843               	incf	___fldiv@bexp^0,w,c
 10568  0023D4  A4D8               	btfss	status,2,c
 10569  0023D6  EFEF  F011         	goto	u3621
 10570  0023DA  EFF1  F011         	goto	u3620
 10571  0023DE                     u3621:
 10572  0023DE  EFF9  F011         	goto	l4046
 10573  0023E2                     u3620:
 10574  0023E2  0E00               	movlw	0
 10575  0023E4  6E2C               	movwf	___fldiv@b^0,c
 10576  0023E6  0E00               	movlw	0
 10577  0023E8  6E2D               	movwf	(___fldiv@b+1)^0,c
 10578  0023EA  0E00               	movlw	0
 10579  0023EC  6E2E               	movwf	(___fldiv@b+2)^0,c
 10580  0023EE  0E00               	movlw	0
 10581  0023F0  6E2F               	movwf	(___fldiv@b+3)^0,c
 10582  0023F2                     l4046:
 10583  0023F2  8E2E               	bsf	(___fldiv@b+2)^0,7,c
 10584  0023F4  0E00               	movlw	0
 10585  0023F6  6E2F               	movwf	(___fldiv@b+3)^0,c
 10586  0023F8  EF06  F012         	goto	l4052
 10587  0023FC                     l4050:
 10588  0023FC  0E00               	movlw	0
 10589  0023FE  6E2C               	movwf	___fldiv@b^0,c
 10590  002400  0E00               	movlw	0
 10591  002402  6E2D               	movwf	(___fldiv@b+1)^0,c
 10592  002404  0E00               	movlw	0
 10593  002406  6E2E               	movwf	(___fldiv@b+2)^0,c
 10594  002408  0E00               	movlw	0
 10595  00240A  6E2F               	movwf	(___fldiv@b+3)^0,c
 10596  00240C                     l4052:
 10597  00240C  5033               	movf	(___fldiv@a+3)^0,w,c
 10598  00240E  0B80               	andlw	128
 10599  002410  1A3C               	xorwf	___fldiv@sign^0,f,c
 10600  002412  5033               	movf	(___fldiv@a+3)^0,w,c
 10601  002414  2433               	addwf	(___fldiv@a+3)^0,w,c
 10602  002416  6E44               	movwf	___fldiv@aexp^0,c
 10603  002418  AE32               	btfss	(___fldiv@a+2)^0,7,c
 10604  00241A  EF11  F012         	goto	u3631
 10605  00241E  EF13  F012         	goto	u3630
 10606  002422                     u3631:
 10607  002422  EF14  F012         	goto	l4060
 10608  002426                     u3630:
 10609  002426  8044               	bsf	___fldiv@aexp^0,0,c
 10610  002428                     l4060:
 10611  002428  5044               	movf	___fldiv@aexp^0,w,c
 10612  00242A  B4D8               	btfsc	status,2,c
 10613  00242C  EF1A  F012         	goto	u3641
 10614  002430  EF1C  F012         	goto	u3640
 10615  002434                     u3641:
 10616  002434  EF31  F012         	goto	l4070
 10617  002438                     u3640:
 10618  002438  2844               	incf	___fldiv@aexp^0,w,c
 10619  00243A  A4D8               	btfss	status,2,c
 10620  00243C  EF22  F012         	goto	u3651
 10621  002440  EF24  F012         	goto	u3650
 10622  002444                     u3651:
 10623  002444  EF2C  F012         	goto	l4066
 10624  002448                     u3650:
 10625  002448  0E00               	movlw	0
 10626  00244A  6E30               	movwf	___fldiv@a^0,c
 10627  00244C  0E00               	movlw	0
 10628  00244E  6E31               	movwf	(___fldiv@a+1)^0,c
 10629  002450  0E00               	movlw	0
 10630  002452  6E32               	movwf	(___fldiv@a+2)^0,c
 10631  002454  0E00               	movlw	0
 10632  002456  6E33               	movwf	(___fldiv@a+3)^0,c
 10633  002458                     l4066:
 10634  002458  8E32               	bsf	(___fldiv@a+2)^0,7,c
 10635  00245A  0E00               	movlw	0
 10636  00245C  6E33               	movwf	(___fldiv@a+3)^0,c
 10637  00245E  EF39  F012         	goto	l4072
 10638  002462                     l4070:
 10639  002462  0E00               	movlw	0
 10640  002464  6E30               	movwf	___fldiv@a^0,c
 10641  002466  0E00               	movlw	0
 10642  002468  6E31               	movwf	(___fldiv@a+1)^0,c
 10643  00246A  0E00               	movlw	0
 10644  00246C  6E32               	movwf	(___fldiv@a+2)^0,c
 10645  00246E  0E00               	movlw	0
 10646  002470  6E33               	movwf	(___fldiv@a+3)^0,c
 10647  002472                     l4072:
 10648  002472  5030               	movf	___fldiv@a^0,w,c
 10649  002474  1031               	iorwf	(___fldiv@a+1)^0,w,c
 10650  002476  1032               	iorwf	(___fldiv@a+2)^0,w,c
 10651  002478  1033               	iorwf	(___fldiv@a+3)^0,w,c
 10652  00247A  A4D8               	btfss	status,2,c
 10653  00247C  EF42  F012         	goto	u3661
 10654  002480  EF44  F012         	goto	u3660
 10655  002484                     u3661:
 10656  002484  EF5C  F012         	goto	l4084
 10657  002488                     u3660:
 10658  002488  0E00               	movlw	0
 10659  00248A  6E2C               	movwf	___fldiv@b^0,c
 10660  00248C  0E00               	movlw	0
 10661  00248E  6E2D               	movwf	(___fldiv@b+1)^0,c
 10662  002490  0E00               	movlw	0
 10663  002492  6E2E               	movwf	(___fldiv@b+2)^0,c
 10664  002494  0E00               	movlw	0
 10665  002496  6E2F               	movwf	(___fldiv@b+3)^0,c
 10666  002498  0E80               	movlw	128
 10667  00249A  122E               	iorwf	(___fldiv@b+2)^0,f,c
 10668  00249C  0E7F               	movlw	127
 10669  00249E  122F               	iorwf	(___fldiv@b+3)^0,f,c
 10670  0024A0                     l4078:
 10671  0024A0  503C               	movf	___fldiv@sign^0,w,c
 10672  0024A2  122F               	iorwf	(___fldiv@b+3)^0,f,c
 10673  0024A4  C02C  F02C         	movff	___fldiv@b,?___fldiv
 10674  0024A8  C02D  F02D         	movff	___fldiv@b+1,?___fldiv+1
 10675  0024AC  C02E  F02E         	movff	___fldiv@b+2,?___fldiv+2
 10676  0024B0  C02F  F02F         	movff	___fldiv@b+3,?___fldiv+3
 10677  0024B4  EF9F  F013         	goto	l1178
 10678  0024B8                     l4084:
 10679  0024B8  5043               	movf	___fldiv@bexp^0,w,c
 10680  0024BA  A4D8               	btfss	status,2,c
 10681  0024BC  EF62  F012         	goto	u3671
 10682  0024C0  EF64  F012         	goto	u3670
 10683  0024C4                     u3671:
 10684  0024C4  EF6E  F012         	goto	l4092
 10685  0024C8                     u3670:
 10686  0024C8  0E00               	movlw	0
 10687  0024CA  6E2C               	movwf	?___fldiv^0,c
 10688  0024CC  0E00               	movlw	0
 10689  0024CE  6E2D               	movwf	(?___fldiv+1)^0,c
 10690  0024D0  0E00               	movlw	0
 10691  0024D2  6E2E               	movwf	(?___fldiv+2)^0,c
 10692  0024D4  0E00               	movlw	0
 10693  0024D6  6E2F               	movwf	(?___fldiv+3)^0,c
 10694  0024D8  EF9F  F013         	goto	l1178
 10695  0024DC                     l4092:
 10696  0024DC  5044               	movf	___fldiv@aexp^0,w,c
 10697  0024DE  C043  F034         	movff	___fldiv@bexp,??___fldiv
 10698  0024E2  6A35               	clrf	(??___fldiv+1)^0,c
 10699  0024E4  5E34               	subwf	??___fldiv^0,f,c
 10700  0024E6  0E00               	movlw	0
 10701  0024E8  5A35               	subwfb	(??___fldiv+1)^0,f,c
 10702  0024EA  0E7F               	movlw	127
 10703  0024EC  2434               	addwf	??___fldiv^0,w,c
 10704  0024EE  6E3D               	movwf	___fldiv@new_exp^0,c
 10705  0024F0  0E00               	movlw	0
 10706  0024F2  2035               	addwfc	(??___fldiv+1)^0,w,c
 10707  0024F4  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 10708  0024F6  C02C  F038         	movff	___fldiv@b,___fldiv@rem
 10709  0024FA  C02D  F039         	movff	___fldiv@b+1,___fldiv@rem+1
 10710  0024FE  C02E  F03A         	movff	___fldiv@b+2,___fldiv@rem+2
 10711  002502  C02F  F03B         	movff	___fldiv@b+3,___fldiv@rem+3
 10712  002506  0E00               	movlw	0
 10713  002508  6E2C               	movwf	___fldiv@b^0,c
 10714  00250A  0E00               	movlw	0
 10715  00250C  6E2D               	movwf	(___fldiv@b+1)^0,c
 10716  00250E  0E00               	movlw	0
 10717  002510  6E2E               	movwf	(___fldiv@b+2)^0,c
 10718  002512  0E00               	movlw	0
 10719  002514  6E2F               	movwf	(___fldiv@b+3)^0,c
 10720  002516  0E00               	movlw	0
 10721  002518  6E3F               	movwf	___fldiv@grs^0,c
 10722  00251A  0E00               	movlw	0
 10723  00251C  6E40               	movwf	(___fldiv@grs+1)^0,c
 10724  00251E  0E00               	movlw	0
 10725  002520  6E41               	movwf	(___fldiv@grs+2)^0,c
 10726  002522  0E00               	movlw	0
 10727  002524  6E42               	movwf	(___fldiv@grs+3)^0,c
 10728  002526  0E00               	movlw	0
 10729  002528  6E44               	movwf	___fldiv@aexp^0,c
 10730  00252A  EFCF  F012         	goto	l1180
 10731  00252E                     l4102:
 10732  00252E  5044               	movf	___fldiv@aexp^0,w,c
 10733  002530  B4D8               	btfsc	status,2,c
 10734  002532  EF9D  F012         	goto	u3681
 10735  002536  EF9F  F012         	goto	u3680
 10736  00253A                     u3681:
 10737  00253A  EFB6  F012         	goto	l4110
 10738  00253E                     u3680:
 10739  00253E  90D8               	bcf	status,0,c
 10740  002540  3638               	rlcf	___fldiv@rem^0,f,c
 10741  002542  3639               	rlcf	(___fldiv@rem+1)^0,f,c
 10742  002544  363A               	rlcf	(___fldiv@rem+2)^0,f,c
 10743  002546  363B               	rlcf	(___fldiv@rem+3)^0,f,c
 10744  002548  90D8               	bcf	status,0,c
 10745  00254A  362C               	rlcf	___fldiv@b^0,f,c
 10746  00254C  362D               	rlcf	(___fldiv@b+1)^0,f,c
 10747  00254E  362E               	rlcf	(___fldiv@b+2)^0,f,c
 10748  002550  362F               	rlcf	(___fldiv@b+3)^0,f,c
 10749  002552  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 10750  002554  EFAE  F012         	goto	u3691
 10751  002558  EFB0  F012         	goto	u3690
 10752  00255C                     u3691:
 10753  00255C  EFB1  F012         	goto	l1183
 10754  002560                     u3690:
 10755  002560  802C               	bsf	___fldiv@b^0,0,c
 10756  002562                     l1183:
 10757  002562  90D8               	bcf	status,0,c
 10758  002564  363F               	rlcf	___fldiv@grs^0,f,c
 10759  002566  3640               	rlcf	(___fldiv@grs+1)^0,f,c
 10760  002568  3641               	rlcf	(___fldiv@grs+2)^0,f,c
 10761  00256A  3642               	rlcf	(___fldiv@grs+3)^0,f,c
 10762  00256C                     l4110:
 10763  00256C  5030               	movf	___fldiv@a^0,w,c
 10764  00256E  5C38               	subwf	___fldiv@rem^0,w,c
 10765  002570  5031               	movf	(___fldiv@a+1)^0,w,c
 10766  002572  5839               	subwfb	(___fldiv@rem+1)^0,w,c
 10767  002574  5032               	movf	(___fldiv@a+2)^0,w,c
 10768  002576  583A               	subwfb	(___fldiv@rem+2)^0,w,c
 10769  002578  5033               	movf	(___fldiv@a+3)^0,w,c
 10770  00257A  583B               	subwfb	(___fldiv@rem+3)^0,w,c
 10771  00257C  A0D8               	btfss	status,0,c
 10772  00257E  EFC3  F012         	goto	u3701
 10773  002582  EFC5  F012         	goto	u3700
 10774  002586                     u3701:
 10775  002586  EFCE  F012         	goto	l4116
 10776  00258A                     u3700:
 10777  00258A  8C42               	bsf	(___fldiv@grs+3)^0,6,c
 10778  00258C  5030               	movf	___fldiv@a^0,w,c
 10779  00258E  5E38               	subwf	___fldiv@rem^0,f,c
 10780  002590  5031               	movf	(___fldiv@a+1)^0,w,c
 10781  002592  5A39               	subwfb	(___fldiv@rem+1)^0,f,c
 10782  002594  5032               	movf	(___fldiv@a+2)^0,w,c
 10783  002596  5A3A               	subwfb	(___fldiv@rem+2)^0,f,c
 10784  002598  5033               	movf	(___fldiv@a+3)^0,w,c
 10785  00259A  5A3B               	subwfb	(___fldiv@rem+3)^0,f,c
 10786  00259C                     l4116:
 10787  00259C  2A44               	incf	___fldiv@aexp^0,f,c
 10788  00259E                     l1180:
 10789  00259E  0E19               	movlw	25
 10790  0025A0  6444               	cpfsgt	___fldiv@aexp^0,c
 10791  0025A2  EFD5  F012         	goto	u3711
 10792  0025A6  EFD7  F012         	goto	u3710
 10793  0025AA                     u3711:
 10794  0025AA  EF97  F012         	goto	l4102
 10795  0025AE                     u3710:
 10796  0025AE  5038               	movf	___fldiv@rem^0,w,c
 10797  0025B0  1039               	iorwf	(___fldiv@rem+1)^0,w,c
 10798  0025B2  103A               	iorwf	(___fldiv@rem+2)^0,w,c
 10799  0025B4  103B               	iorwf	(___fldiv@rem+3)^0,w,c
 10800  0025B6  B4D8               	btfsc	status,2,c
 10801  0025B8  EFE0  F012         	goto	u3721
 10802  0025BC  EFE2  F012         	goto	u3720
 10803  0025C0                     u3721:
 10804  0025C0  EFFA  F012         	goto	l4128
 10805  0025C4                     u3720:
 10806  0025C4  803F               	bsf	___fldiv@grs^0,0,c
 10807  0025C6  EFFA  F012         	goto	l4128
 10808  0025CA                     l4122:
 10809  0025CA  90D8               	bcf	status,0,c
 10810  0025CC  362C               	rlcf	___fldiv@b^0,f,c
 10811  0025CE  362D               	rlcf	(___fldiv@b+1)^0,f,c
 10812  0025D0  362E               	rlcf	(___fldiv@b+2)^0,f,c
 10813  0025D2  362F               	rlcf	(___fldiv@b+3)^0,f,c
 10814  0025D4  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 10815  0025D6  EFEF  F012         	goto	u3731
 10816  0025DA  EFF1  F012         	goto	u3730
 10817  0025DE                     u3731:
 10818  0025DE  EFF2  F012         	goto	l1189
 10819  0025E2                     u3730:
 10820  0025E2  802C               	bsf	___fldiv@b^0,0,c
 10821  0025E4                     l1189:
 10822  0025E4  90D8               	bcf	status,0,c
 10823  0025E6  363F               	rlcf	___fldiv@grs^0,f,c
 10824  0025E8  3640               	rlcf	(___fldiv@grs+1)^0,f,c
 10825  0025EA  3641               	rlcf	(___fldiv@grs+2)^0,f,c
 10826  0025EC  3642               	rlcf	(___fldiv@grs+3)^0,f,c
 10827  0025EE  063D               	decf	___fldiv@new_exp^0,f,c
 10828  0025F0  A0D8               	btfss	status,0,c
 10829  0025F2  063E               	decf	(___fldiv@new_exp+1)^0,f,c
 10830  0025F4                     l4128:
 10831  0025F4  AE2E               	btfss	(___fldiv@b+2)^0,7,c
 10832  0025F6  EFFF  F012         	goto	u3741
 10833  0025FA  EF01  F013         	goto	u3740
 10834  0025FE                     u3741:
 10835  0025FE  EFE5  F012         	goto	l4122
 10836  002602                     u3740:
 10837  002602  0E00               	movlw	0
 10838  002604  6E44               	movwf	___fldiv@aexp^0,c
 10839  002606  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 10840  002608  EF08  F013         	goto	u3751
 10841  00260C  EF0A  F013         	goto	u3750
 10842  002610                     u3751:
 10843  002610  EF2E  F013         	goto	l1191
 10844  002614                     u3750:
 10845  002614  0EFF               	movlw	255
 10846  002616  143F               	andwf	___fldiv@grs^0,w,c
 10847  002618  6E34               	movwf	??___fldiv^0,c
 10848  00261A  0EFF               	movlw	255
 10849  00261C  1440               	andwf	(___fldiv@grs+1)^0,w,c
 10850  00261E  6E35               	movwf	(??___fldiv+1)^0,c
 10851  002620  0EFF               	movlw	255
 10852  002622  1441               	andwf	(___fldiv@grs+2)^0,w,c
 10853  002624  6E36               	movwf	(??___fldiv+2)^0,c
 10854  002626  0E7F               	movlw	127
 10855  002628  1442               	andwf	(___fldiv@grs+3)^0,w,c
 10856  00262A  6E37               	movwf	(??___fldiv+3)^0,c
 10857  00262C  5034               	movf	??___fldiv^0,w,c
 10858  00262E  1035               	iorwf	(??___fldiv+1)^0,w,c
 10859  002630  1036               	iorwf	(??___fldiv+2)^0,w,c
 10860  002632  1037               	iorwf	(??___fldiv+3)^0,w,c
 10861  002634  B4D8               	btfsc	status,2,c
 10862  002636  EF1F  F013         	goto	u3761
 10863  00263A  EF21  F013         	goto	u3760
 10864  00263E                     u3761:
 10865  00263E  EF25  F013         	goto	l1192
 10866  002642                     u3760:
 10867  002642                     l4136:
 10868  002642  0E01               	movlw	1
 10869  002644  6E44               	movwf	___fldiv@aexp^0,c
 10870  002646  EF2E  F013         	goto	l1191
 10871  00264A                     l1192:
 10872  00264A  A02C               	btfss	___fldiv@b^0,0,c
 10873  00264C  EF2A  F013         	goto	u3771
 10874  002650  EF2C  F013         	goto	u3770
 10875  002654                     u3771:
 10876  002654  EF2E  F013         	goto	l1191
 10877  002658                     u3770:
 10878  002658  EF21  F013         	goto	l4136
 10879  00265C                     l1191:
 10880  00265C  5044               	movf	___fldiv@aexp^0,w,c
 10881  00265E  B4D8               	btfsc	status,2,c
 10882  002660  EF34  F013         	goto	u3781
 10883  002664  EF36  F013         	goto	u3780
 10884  002668                     u3781:
 10885  002668  EF5A  F013         	goto	l4148
 10886  00266C                     u3780:
 10887  00266C  0E01               	movlw	1
 10888  00266E  262C               	addwf	___fldiv@b^0,f,c
 10889  002670  0E00               	movlw	0
 10890  002672  222D               	addwfc	(___fldiv@b+1)^0,f,c
 10891  002674  222E               	addwfc	(___fldiv@b+2)^0,f,c
 10892  002676  222F               	addwfc	(___fldiv@b+3)^0,f,c
 10893  002678  A02F               	btfss	(___fldiv@b+3)^0,0,c
 10894  00267A  EF41  F013         	goto	u3791
 10895  00267E  EF43  F013         	goto	u3790
 10896  002682                     u3791:
 10897  002682  EF5A  F013         	goto	l4148
 10898  002686                     u3790:
 10899  002686  C02C  F034         	movff	___fldiv@b,??___fldiv
 10900  00268A  C02D  F035         	movff	___fldiv@b+1,??___fldiv+1
 10901  00268E  C02E  F036         	movff	___fldiv@b+2,??___fldiv+2
 10902  002692  C02F  F037         	movff	___fldiv@b+3,??___fldiv+3
 10903  002696  3437               	rlcf	(??___fldiv+3)^0,w,c
 10904  002698  3237               	rrcf	(??___fldiv+3)^0,f,c
 10905  00269A  3236               	rrcf	(??___fldiv+2)^0,f,c
 10906  00269C  3235               	rrcf	(??___fldiv+1)^0,f,c
 10907  00269E  3234               	rrcf	??___fldiv^0,f,c
 10908  0026A0  C034  F02C         	movff	??___fldiv,___fldiv@b
 10909  0026A4  C035  F02D         	movff	??___fldiv+1,___fldiv@b+1
 10910  0026A8  C036  F02E         	movff	??___fldiv+2,___fldiv@b+2
 10911  0026AC  C037  F02F         	movff	??___fldiv+3,___fldiv@b+3
 10912  0026B0  4A3D               	infsnz	___fldiv@new_exp^0,f,c
 10913  0026B2  2A3E               	incf	(___fldiv@new_exp+1)^0,f,c
 10914  0026B4                     l4148:
 10915  0026B4  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10916  0026B6  EF65  F013         	goto	u3801
 10917  0026BA  503E               	movf	(___fldiv@new_exp+1)^0,w,c
 10918  0026BC  E108               	bnz	u3800
 10919  0026BE  283D               	incf	___fldiv@new_exp^0,w,c
 10920  0026C0  A0D8               	btfss	status,0,c
 10921  0026C2  EF65  F013         	goto	u3801
 10922  0026C6  EF67  F013         	goto	u3800
 10923  0026CA                     u3801:
 10924  0026CA  EF72  F013         	goto	l4152
 10925  0026CE                     u3800:
 10926  0026CE  0E00               	movlw	0
 10927  0026D0  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 10928  0026D2  683D               	setf	___fldiv@new_exp^0,c
 10929  0026D4  0E00               	movlw	0
 10930  0026D6  6E2C               	movwf	___fldiv@b^0,c
 10931  0026D8  0E00               	movlw	0
 10932  0026DA  6E2D               	movwf	(___fldiv@b+1)^0,c
 10933  0026DC  0E00               	movlw	0
 10934  0026DE  6E2E               	movwf	(___fldiv@b+2)^0,c
 10935  0026E0  0E00               	movlw	0
 10936  0026E2  6E2F               	movwf	(___fldiv@b+3)^0,c
 10937  0026E4                     l4152:
 10938  0026E4  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10939  0026E6  EF7F  F013         	goto	u3810
 10940  0026EA  503E               	movf	(___fldiv@new_exp+1)^0,w,c
 10941  0026EC  E106               	bnz	u3811
 10942  0026EE  043D               	decf	___fldiv@new_exp^0,w,c
 10943  0026F0  B0D8               	btfsc	status,0,c
 10944  0026F2  EF7D  F013         	goto	u3811
 10945  0026F6  EF7F  F013         	goto	u3810
 10946  0026FA                     u3811:
 10947  0026FA  EF8D  F013         	goto	l4156
 10948  0026FE                     u3810:
 10949  0026FE  0E00               	movlw	0
 10950  002700  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 10951  002702  0E00               	movlw	0
 10952  002704  6E3D               	movwf	___fldiv@new_exp^0,c
 10953  002706  0E00               	movlw	0
 10954  002708  6E2C               	movwf	___fldiv@b^0,c
 10955  00270A  0E00               	movlw	0
 10956  00270C  6E2D               	movwf	(___fldiv@b+1)^0,c
 10957  00270E  0E00               	movlw	0
 10958  002710  6E2E               	movwf	(___fldiv@b+2)^0,c
 10959  002712  0E00               	movlw	0
 10960  002714  6E2F               	movwf	(___fldiv@b+3)^0,c
 10961  002716  0E00               	movlw	0
 10962  002718  6E3C               	movwf	___fldiv@sign^0,c
 10963  00271A                     l4156:
 10964  00271A  C03D  F043         	movff	___fldiv@new_exp,___fldiv@bexp
 10965  00271E  A043               	btfss	___fldiv@bexp^0,0,c
 10966  002720  EF94  F013         	goto	u3821
 10967  002724  EF96  F013         	goto	u3820
 10968  002728                     u3821:
 10969  002728  EF99  F013         	goto	l4162
 10970  00272C                     u3820:
 10971  00272C  8E2E               	bsf	(___fldiv@b+2)^0,7,c
 10972  00272E  EF9A  F013         	goto	l4164
 10973  002732                     l4162:
 10974  002732  9E2E               	bcf	(___fldiv@b+2)^0,7,c
 10975  002734                     l4164:
 10976  002734  90D8               	bcf	status,0,c
 10977  002736  3043               	rrcf	___fldiv@bexp^0,w,c
 10978  002738  6E2F               	movwf	(___fldiv@b+3)^0,c
 10979  00273A  EF50  F012         	goto	l4078
 10980  00273E                     l1178:
 10981  00273E  0012               	return		;funcret
 10982  002740                     __end_of___fldiv:
 10983                           	callstack 0
 10984                           
 10985 ;; *************** function ___awmod *****************
 10986 ;; Defined at:
 10987 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  dividend        2    0[COMRAM] int 
 10990 ;;  divisor         2    2[COMRAM] int 
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;  sign            1    5[COMRAM] unsigned char 
 10993 ;;  counter         1    4[COMRAM] unsigned char 
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  2    0[COMRAM] int 
 10996 ;; Registers used:
 10997 ;;		wreg, status,2, status,0
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 0/0
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11003 ;;      Params:         4       0       0       0       0       0       0       0       0
 11004 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11005 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11006 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11007 ;;Total ram usage:        6 bytes
 11008 ;; Hardware stack levels used: 1
 11009 ;; This function calls:
 11010 ;;		Nothing
 11011 ;; This function is called by:
 11012 ;;		_efgtoa
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text50
 11017  003EDA                     __ptext50:
 11018                           	callstack 0
 11019  003EDA                     ___awmod:
 11020                           	callstack 25
 11021  003EDA  0E00               	movlw	0
 11022  003EDC  6E06               	movwf	___awmod@sign^0,c
 11023  003EDE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11024  003EE0  EF76  F01F         	goto	u4080
 11025  003EE4  EF74  F01F         	goto	u4081
 11026  003EE8                     u4081:
 11027  003EE8  EF7C  F01F         	goto	l4360
 11028  003EEC                     u4080:
 11029  003EEC  6C01               	negf	___awmod@dividend^0,c
 11030  003EEE  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11031  003EF0  B0D8               	btfsc	status,0,c
 11032  003EF2  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11033  003EF4  0E01               	movlw	1
 11034  003EF6  6E06               	movwf	___awmod@sign^0,c
 11035  003EF8                     l4360:
 11036  003EF8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11037  003EFA  EF83  F01F         	goto	u4090
 11038  003EFE  EF81  F01F         	goto	u4091
 11039  003F02                     u4091:
 11040  003F02  EF87  F01F         	goto	l4364
 11041  003F06                     u4090:
 11042  003F06  6C03               	negf	___awmod@divisor^0,c
 11043  003F08  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11044  003F0A  B0D8               	btfsc	status,0,c
 11045  003F0C  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11046  003F0E                     l4364:
 11047  003F0E  5003               	movf	___awmod@divisor^0,w,c
 11048  003F10  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11049  003F12  B4D8               	btfsc	status,2,c
 11050  003F14  EF8E  F01F         	goto	u4101
 11051  003F18  EF90  F01F         	goto	u4100
 11052  003F1C                     u4101:
 11053  003F1C  EFB4  F01F         	goto	l4380
 11054  003F20                     u4100:
 11055  003F20  0E01               	movlw	1
 11056  003F22  6E05               	movwf	___awmod@counter^0,c
 11057  003F24  EF98  F01F         	goto	l4370
 11058  003F28                     l4368:
 11059  003F28  90D8               	bcf	status,0,c
 11060  003F2A  3603               	rlcf	___awmod@divisor^0,f,c
 11061  003F2C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11062  003F2E  2A05               	incf	___awmod@counter^0,f,c
 11063  003F30                     l4370:
 11064  003F30  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11065  003F32  EF9D  F01F         	goto	u4111
 11066  003F36  EF9F  F01F         	goto	u4110
 11067  003F3A                     u4111:
 11068  003F3A  EF94  F01F         	goto	l4368
 11069  003F3E                     u4110:
 11070  003F3E                     l4372:
 11071  003F3E  5003               	movf	___awmod@divisor^0,w,c
 11072  003F40  5C01               	subwf	___awmod@dividend^0,w,c
 11073  003F42  5004               	movf	(___awmod@divisor+1)^0,w,c
 11074  003F44  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11075  003F46  A0D8               	btfss	status,0,c
 11076  003F48  EFA8  F01F         	goto	u4121
 11077  003F4C  EFAA  F01F         	goto	u4120
 11078  003F50                     u4121:
 11079  003F50  EFAE  F01F         	goto	l4376
 11080  003F54                     u4120:
 11081  003F54  5003               	movf	___awmod@divisor^0,w,c
 11082  003F56  5E01               	subwf	___awmod@dividend^0,f,c
 11083  003F58  5004               	movf	(___awmod@divisor+1)^0,w,c
 11084  003F5A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11085  003F5C                     l4376:
 11086  003F5C  90D8               	bcf	status,0,c
 11087  003F5E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11088  003F60  3203               	rrcf	___awmod@divisor^0,f,c
 11089  003F62  2E05               	decfsz	___awmod@counter^0,f,c
 11090  003F64  EF9F  F01F         	goto	l4372
 11091  003F68                     l4380:
 11092  003F68  5006               	movf	___awmod@sign^0,w,c
 11093  003F6A  B4D8               	btfsc	status,2,c
 11094  003F6C  EFBA  F01F         	goto	u4131
 11095  003F70  EFBC  F01F         	goto	u4130
 11096  003F74                     u4131:
 11097  003F74  EFC0  F01F         	goto	l4384
 11098  003F78                     u4130:
 11099  003F78  6C01               	negf	___awmod@dividend^0,c
 11100  003F7A  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11101  003F7C  B0D8               	btfsc	status,0,c
 11102  003F7E  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11103  003F80                     l4384:
 11104  003F80  C001  F001         	movff	___awmod@dividend,?___awmod
 11105  003F84  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11106  003F88  0012               	return		;funcret
 11107  003F8A                     __end_of___awmod:
 11108                           	callstack 0
 11109                           
 11110 ;; *************** function ___awdiv *****************
 11111 ;; Defined at:
 11112 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;  dividend        2    0[COMRAM] int 
 11115 ;;  divisor         2    2[COMRAM] int 
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;  quotient        2    6[COMRAM] int 
 11118 ;;  sign            1    5[COMRAM] unsigned char 
 11119 ;;  counter         1    4[COMRAM] unsigned char 
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  2    0[COMRAM] int 
 11122 ;; Registers used:
 11123 ;;		wreg, status,2, status,0
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11129 ;;      Params:         4       0       0       0       0       0       0       0       0
 11130 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11131 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11132 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11133 ;;Total ram usage:        8 bytes
 11134 ;; Hardware stack levels used: 1
 11135 ;; This function calls:
 11136 ;;		Nothing
 11137 ;; This function is called by:
 11138 ;;		_efgtoa
 11139 ;; This function uses a non-reentrant model
 11140 ;;
 11141                           
 11142                           	psect	text51
 11143  003CA2                     __ptext51:
 11144                           	callstack 0
 11145  003CA2                     ___awdiv:
 11146                           	callstack 25
 11147  003CA2  0E00               	movlw	0
 11148  003CA4  6E06               	movwf	___awdiv@sign^0,c
 11149  003CA6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11150  003CA8  EF5A  F01E         	goto	u4020
 11151  003CAC  EF58  F01E         	goto	u4021
 11152  003CB0                     u4021:
 11153  003CB0  EF60  F01E         	goto	l4316
 11154  003CB4                     u4020:
 11155  003CB4  6C03               	negf	___awdiv@divisor^0,c
 11156  003CB6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11157  003CB8  B0D8               	btfsc	status,0,c
 11158  003CBA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11159  003CBC  0E01               	movlw	1
 11160  003CBE  6E06               	movwf	___awdiv@sign^0,c
 11161  003CC0                     l4316:
 11162  003CC0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11163  003CC2  EF67  F01E         	goto	u4030
 11164  003CC6  EF65  F01E         	goto	u4031
 11165  003CCA                     u4031:
 11166  003CCA  EF6D  F01E         	goto	l4322
 11167  003CCE                     u4030:
 11168  003CCE  6C01               	negf	___awdiv@dividend^0,c
 11169  003CD0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11170  003CD2  B0D8               	btfsc	status,0,c
 11171  003CD4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11172  003CD6  0E01               	movlw	1
 11173  003CD8  1A06               	xorwf	___awdiv@sign^0,f,c
 11174  003CDA                     l4322:
 11175  003CDA  0E00               	movlw	0
 11176  003CDC  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11177  003CDE  0E00               	movlw	0
 11178  003CE0  6E07               	movwf	___awdiv@quotient^0,c
 11179  003CE2  5003               	movf	___awdiv@divisor^0,w,c
 11180  003CE4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11181  003CE6  B4D8               	btfsc	status,2,c
 11182  003CE8  EF78  F01E         	goto	u4041
 11183  003CEC  EF7A  F01E         	goto	u4040
 11184  003CF0                     u4041:
 11185  003CF0  EFA2  F01E         	goto	l4344
 11186  003CF4                     u4040:
 11187  003CF4  0E01               	movlw	1
 11188  003CF6  6E05               	movwf	___awdiv@counter^0,c
 11189  003CF8  EF82  F01E         	goto	l4330
 11190  003CFC                     l4328:
 11191  003CFC  90D8               	bcf	status,0,c
 11192  003CFE  3603               	rlcf	___awdiv@divisor^0,f,c
 11193  003D00  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11194  003D02  2A05               	incf	___awdiv@counter^0,f,c
 11195  003D04                     l4330:
 11196  003D04  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11197  003D06  EF87  F01E         	goto	u4051
 11198  003D0A  EF89  F01E         	goto	u4050
 11199  003D0E                     u4051:
 11200  003D0E  EF7E  F01E         	goto	l4328
 11201  003D12                     u4050:
 11202  003D12                     l4332:
 11203  003D12  90D8               	bcf	status,0,c
 11204  003D14  3607               	rlcf	___awdiv@quotient^0,f,c
 11205  003D16  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11206  003D18  5003               	movf	___awdiv@divisor^0,w,c
 11207  003D1A  5C01               	subwf	___awdiv@dividend^0,w,c
 11208  003D1C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11209  003D1E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11210  003D20  A0D8               	btfss	status,0,c
 11211  003D22  EF95  F01E         	goto	u4061
 11212  003D26  EF97  F01E         	goto	u4060
 11213  003D2A                     u4061:
 11214  003D2A  EF9C  F01E         	goto	l4340
 11215  003D2E                     u4060:
 11216  003D2E  5003               	movf	___awdiv@divisor^0,w,c
 11217  003D30  5E01               	subwf	___awdiv@dividend^0,f,c
 11218  003D32  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11219  003D34  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11220  003D36  8007               	bsf	___awdiv@quotient^0,0,c
 11221  003D38                     l4340:
 11222  003D38  90D8               	bcf	status,0,c
 11223  003D3A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11224  003D3C  3203               	rrcf	___awdiv@divisor^0,f,c
 11225  003D3E  2E05               	decfsz	___awdiv@counter^0,f,c
 11226  003D40  EF89  F01E         	goto	l4332
 11227  003D44                     l4344:
 11228  003D44  5006               	movf	___awdiv@sign^0,w,c
 11229  003D46  B4D8               	btfsc	status,2,c
 11230  003D48  EFA8  F01E         	goto	u4071
 11231  003D4C  EFAA  F01E         	goto	u4070
 11232  003D50                     u4071:
 11233  003D50  EFAE  F01E         	goto	l4348
 11234  003D54                     u4070:
 11235  003D54  6C07               	negf	___awdiv@quotient^0,c
 11236  003D56  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11237  003D58  B0D8               	btfsc	status,0,c
 11238  003D5A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11239  003D5C                     l4348:
 11240  003D5C  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11241  003D60  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11242  003D64  0012               	return		;funcret
 11243  003D66                     __end_of___awdiv:
 11244                           	callstack 0
 11245                           
 11246 ;; *************** function _atoi *****************
 11247 ;; Defined at:
 11248 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11251 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
 11252 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 11253 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;  n               2   20[COMRAM] int 
 11256 ;;  neg             2   13[COMRAM] int 
 11257 ;; Return value:  Size  Location     Type
 11258 ;;                  2    7[COMRAM] int 
 11259 ;; Registers used:
 11260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11266 ;;      Params:         2       0       0       0       0       0       0       0       0
 11267 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11268 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11269 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11270 ;;Total ram usage:       15 bytes
 11271 ;; Hardware stack levels used: 1
 11272 ;; Hardware stack levels required when called: 1
 11273 ;; This function calls:
 11274 ;;		___wmul
 11275 ;;		_isdigit
 11276 ;;		_isspace
 11277 ;; This function is called by:
 11278 ;;		_vfpfcnvrt
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           	psect	text52
 11283  00334E                     __ptext52:
 11284                           	callstack 0
 11285  00334E                     _atoi:
 11286                           	callstack 25
 11287  00334E  0E00               	movlw	0
 11288  003350  6E16               	movwf	(atoi@n+1)^0,c
 11289  003352  0E00               	movlw	0
 11290  003354  6E15               	movwf	atoi@n^0,c
 11291  003356  0E00               	movlw	0
 11292  003358  6E0F               	movwf	(atoi@neg+1)^0,c
 11293  00335A  0E00               	movlw	0
 11294  00335C  6E0E               	movwf	atoi@neg^0,c
 11295  00335E  EFB3  F019         	goto	l4990
 11296  003362                     l4988:
 11297  003362  4A08               	infsnz	atoi@s^0,f,c
 11298  003364  2A09               	incf	(atoi@s+1)^0,f,c
 11299  003366                     l4990:
 11300  003366  0E01               	movlw	1
 11301  003368  6E14               	movwf	_atoi$1578^0,c
 11302  00336A  C008  FFF6         	movff	atoi@s,tblptrl
 11303  00336E  C009  FFF7         	movff	atoi@s+1,tblptrh
 11304  003372                     	if	0	;tblptru may be non-zero
 11305  003372                     	endif
 11306  003372                     	if	0	;tblptru may be non-zero
 11307  003372                     	endif
 11308  003372  0008               	tblrd		*
 11309  003374  50F5               	movf	tablat,w,c
 11310  003376  0A20               	xorlw	32
 11311  003378  B4D8               	btfsc	status,2,c
 11312  00337A  EFC1  F019         	goto	u5391
 11313  00337E  EFC3  F019         	goto	u5390
 11314  003382                     u5391:
 11315  003382  EFE0  F019         	goto	l4998
 11316  003386                     u5390:
 11317  003386  0EF7               	movlw	247
 11318  003388  6E0A               	movwf	??_atoi^0,c
 11319  00338A  0EFF               	movlw	255
 11320  00338C  6E0B               	movwf	(??_atoi+1)^0,c
 11321  00338E  C008  FFF6         	movff	atoi@s,tblptrl
 11322  003392  C009  FFF7         	movff	atoi@s+1,tblptrh
 11323  003396                     	if	0	;tblptru may be non-zero
 11324  003396                     	endif
 11325  003396                     	if	0	;tblptru may be non-zero
 11326  003396                     	endif
 11327  003396  0008               	tblrd		*
 11328  003398  50F5               	movf	tablat,w,c
 11329  00339A  6E0C               	movwf	(??_atoi+2)^0,c
 11330  00339C  6A0D               	clrf	(??_atoi+3)^0,c
 11331  00339E  500A               	movf	??_atoi^0,w,c
 11332  0033A0  260C               	addwf	(??_atoi+2)^0,f,c
 11333  0033A2  500B               	movf	(??_atoi+1)^0,w,c
 11334  0033A4  220D               	addwfc	(??_atoi+3)^0,f,c
 11335  0033A6  500D               	movf	(??_atoi+3)^0,w,c
 11336  0033A8  E109               	bnz	u5400
 11337  0033AA  0E05               	movlw	5
 11338  0033AC  5C0C               	subwf	(??_atoi+2)^0,w,c
 11339  0033AE  A0D8               	btfss	status,0,c
 11340  0033B0  EFDC  F019         	goto	u5401
 11341  0033B4  EFDE  F019         	goto	u5400
 11342  0033B8                     u5401:
 11343  0033B8  EFE0  F019         	goto	l4998
 11344  0033BC                     u5400:
 11345  0033BC  0E00               	movlw	0
 11346  0033BE  6E14               	movwf	_atoi$1578^0,c
 11347  0033C0                     l4998:
 11348  0033C0  C014  F010         	movff	_atoi$1578,_atoi$1577
 11349  0033C4  6A11               	clrf	(_atoi$1577+1)^0,c
 11350  0033C6  5010               	movf	_atoi$1577^0,w,c
 11351  0033C8  1011               	iorwf	(_atoi$1577+1)^0,w,c
 11352  0033CA  A4D8               	btfss	status,2,c
 11353  0033CC  EFEA  F019         	goto	u5411
 11354  0033D0  EFEC  F019         	goto	u5410
 11355  0033D4                     u5411:
 11356  0033D4  EFB1  F019         	goto	l4988
 11357  0033D8                     u5410:
 11358  0033D8  EFF6  F019         	goto	l5008
 11359  0033DC                     l5004:
 11360  0033DC  0E00               	movlw	0
 11361  0033DE  6E0F               	movwf	(atoi@neg+1)^0,c
 11362  0033E0  0E01               	movlw	1
 11363  0033E2  6E0E               	movwf	atoi@neg^0,c
 11364  0033E4                     l5006:
 11365  0033E4  4A08               	infsnz	atoi@s^0,f,c
 11366  0033E6  2A09               	incf	(atoi@s+1)^0,f,c
 11367  0033E8  EF2B  F01A         	goto	l5014
 11368  0033EC                     l5008:
 11369  0033EC  C008  FFF6         	movff	atoi@s,tblptrl
 11370  0033F0  C009  FFF7         	movff	atoi@s+1,tblptrh
 11371  0033F4                     	if	0	;tblptru may be non-zero
 11372  0033F4                     	endif
 11373  0033F4                     	if	0	;tblptru may be non-zero
 11374  0033F4                     	endif
 11375  0033F4  0008               	tblrd		*
 11376  0033F6  50F5               	movf	tablat,w,c
 11377  0033F8  6E0A               	movwf	??_atoi^0,c
 11378  0033FA  6A0B               	clrf	(??_atoi+1)^0,c
 11379                           
 11380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11381                           ; Switch size 1, requested type "simple"
 11382                           ; Number of cases is 1, Range of values is 0 to 0
 11383                           ; switch strategies available:
 11384                           ; Name         Instructions Cycles
 11385                           ; simple_byte            4     3 (average)
 11386                           ;	Chosen strategy is simple_byte
 11387  0033FC  500B               	movf	(??_atoi+1)^0,w,c
 11388  0033FE  0A00               	xorlw	0	; case 0
 11389  003400  B4D8               	btfsc	status,2,c
 11390  003402  EF05  F01A         	goto	l5884
 11391  003406  EF2B  F01A         	goto	l5014
 11392  00340A                     l5884:
 11393                           
 11394                           ; Switch size 1, requested type "simple"
 11395                           ; Number of cases is 2, Range of values is 43 to 45
 11396                           ; switch strategies available:
 11397                           ; Name         Instructions Cycles
 11398                           ; simple_byte            7     4 (average)
 11399                           ;	Chosen strategy is simple_byte
 11400  00340A  500A               	movf	??_atoi^0,w,c
 11401  00340C  0A2B               	xorlw	43	; case 43
 11402  00340E  B4D8               	btfsc	status,2,c
 11403  003410  EFF2  F019         	goto	l5006
 11404  003414  0A06               	xorlw	6	; case 45
 11405  003416  B4D8               	btfsc	status,2,c
 11406  003418  EFEE  F019         	goto	l5004
 11407  00341C  EF2B  F01A         	goto	l5014
 11408  003420                     l5010:
 11409  003420  C015  F001         	movff	atoi@n,___wmul@multiplier
 11410  003424  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11411  003428  0E00               	movlw	0
 11412  00342A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11413  00342C  0E0A               	movlw	10
 11414  00342E  6E03               	movwf	___wmul@multiplicand^0,c
 11415  003430  EC2E  F025         	call	___wmul	;wreg free
 11416  003434  C008  FFF6         	movff	atoi@s,tblptrl
 11417  003438  C009  FFF7         	movff	atoi@s+1,tblptrh
 11418  00343C                     	if	0	;tblptru may be non-zero
 11419  00343C                     	endif
 11420  00343C                     	if	0	;tblptru may be non-zero
 11421  00343C                     	endif
 11422  00343C  0008               	tblrd		*
 11423  00343E  50F5               	movf	tablat,w,c
 11424  003440  5E01               	subwf	?___wmul^0,f,c
 11425  003442  0E00               	movlw	0
 11426  003444  5A02               	subwfb	(?___wmul+1)^0,f,c
 11427  003446  0E30               	movlw	48
 11428  003448  2401               	addwf	?___wmul^0,w,c
 11429  00344A  6E15               	movwf	atoi@n^0,c
 11430  00344C  0E00               	movlw	0
 11431  00344E  2002               	addwfc	(?___wmul+1)^0,w,c
 11432  003450  6E16               	movwf	(atoi@n+1)^0,c
 11433  003452  EFF2  F019         	goto	l5006
 11434  003456                     l5014:
 11435  003456  0ED0               	movlw	208
 11436  003458  6E0A               	movwf	??_atoi^0,c
 11437  00345A  0EFF               	movlw	255
 11438  00345C  6E0B               	movwf	(??_atoi+1)^0,c
 11439  00345E  C008  FFF6         	movff	atoi@s,tblptrl
 11440  003462  C009  FFF7         	movff	atoi@s+1,tblptrh
 11441  003466                     	if	0	;tblptru may be non-zero
 11442  003466                     	endif
 11443  003466                     	if	0	;tblptru may be non-zero
 11444  003466                     	endif
 11445  003466  0008               	tblrd		*
 11446  003468  50F5               	movf	tablat,w,c
 11447  00346A  6E0C               	movwf	(??_atoi+2)^0,c
 11448  00346C  6A0D               	clrf	(??_atoi+3)^0,c
 11449  00346E  500A               	movf	??_atoi^0,w,c
 11450  003470  260C               	addwf	(??_atoi+2)^0,f,c
 11451  003472  500B               	movf	(??_atoi+1)^0,w,c
 11452  003474  220D               	addwfc	(??_atoi+3)^0,f,c
 11453  003476  500D               	movf	(??_atoi+3)^0,w,c
 11454  003478  E10A               	bnz	u5420
 11455  00347A  0E0A               	movlw	10
 11456  00347C  5C0C               	subwf	(??_atoi+2)^0,w,c
 11457  00347E  A0D8               	btfss	status,0,c
 11458  003480  EF44  F01A         	goto	u5421
 11459  003484  EF47  F01A         	goto	u5420
 11460  003488                     u5421:
 11461  003488  0E01               	movlw	1
 11462  00348A  EF48  F01A         	goto	u5430
 11463  00348E                     u5420:
 11464  00348E  0E00               	movlw	0
 11465  003490                     u5430:
 11466  003490  6E12               	movwf	_atoi$1579^0,c
 11467  003492  6A13               	clrf	(_atoi$1579+1)^0,c
 11468  003494  5012               	movf	_atoi$1579^0,w,c
 11469  003496  1013               	iorwf	(_atoi$1579+1)^0,w,c
 11470  003498  A4D8               	btfss	status,2,c
 11471  00349A  EF51  F01A         	goto	u5441
 11472  00349E  EF53  F01A         	goto	u5440
 11473  0034A2                     u5441:
 11474  0034A2  EF10  F01A         	goto	l5010
 11475  0034A6                     u5440:
 11476  0034A6  500E               	movf	atoi@neg^0,w,c
 11477  0034A8  100F               	iorwf	(atoi@neg+1)^0,w,c
 11478  0034AA  A4D8               	btfss	status,2,c
 11479  0034AC  EF5A  F01A         	goto	u5451
 11480  0034B0  EF5C  F01A         	goto	u5450
 11481  0034B4                     u5451:
 11482  0034B4  EF6A  F01A         	goto	l1532
 11483  0034B8                     u5450:
 11484  0034B8  C015  F00A         	movff	atoi@n,??_atoi
 11485  0034BC  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11486  0034C0  1E0A               	comf	??_atoi^0,f,c
 11487  0034C2  1E0B               	comf	(??_atoi+1)^0,f,c
 11488  0034C4  4A0A               	infsnz	??_atoi^0,f,c
 11489  0034C6  2A0B               	incf	(??_atoi+1)^0,f,c
 11490  0034C8  C00A  F008         	movff	??_atoi,?_atoi
 11491  0034CC  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11492  0034D0  EF6E  F01A         	goto	l1535
 11493  0034D4                     l1532:
 11494  0034D4  C015  F008         	movff	atoi@n,?_atoi
 11495  0034D8  C016  F009         	movff	atoi@n+1,?_atoi+1
 11496  0034DC                     l1535:
 11497  0034DC  0012               	return		;funcret
 11498  0034DE                     __end_of_atoi:
 11499                           	callstack 0
 11500                           
 11501 ;; *************** function _isspace *****************
 11502 ;; Defined at:
 11503 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;  c               2    0[COMRAM] int 
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;		None
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  2    0[COMRAM] int 
 11510 ;; Registers used:
 11511 ;;		wreg, status,2, status,0
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/0
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11517 ;;      Params:         2       0       0       0       0       0       0       0       0
 11518 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11519 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11520 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11521 ;;Total ram usage:        7 bytes
 11522 ;; Hardware stack levels used: 1
 11523 ;; This function calls:
 11524 ;;		Nothing
 11525 ;; This function is called by:
 11526 ;;		_atoi
 11527 ;; This function uses a non-reentrant model
 11528 ;;
 11529                           
 11530                           	psect	text53
 11531  0044C8                     __ptext53:
 11532                           	callstack 0
 11533  0044C8                     _isspace:
 11534                           	callstack 25
 11535  0044C8  0E01               	movlw	1
 11536  0044CA  6E07               	movwf	_isspace$1617^0,c
 11537  0044CC  0E20               	movlw	32
 11538  0044CE  1801               	xorwf	isspace@c^0,w,c
 11539  0044D0  1002               	iorwf	(isspace@c+1)^0,w,c
 11540  0044D2  B4D8               	btfsc	status,2,c
 11541  0044D4  EF6E  F022         	goto	u4631
 11542  0044D8  EF70  F022         	goto	u4630
 11543  0044DC                     u4631:
 11544  0044DC  EF89  F022         	goto	l4590
 11545  0044E0                     u4630:
 11546  0044E0  0EF7               	movlw	247
 11547  0044E2  6E03               	movwf	??_isspace^0,c
 11548  0044E4  0EFF               	movlw	255
 11549  0044E6  6E04               	movwf	(??_isspace+1)^0,c
 11550  0044E8  C001  F005         	movff	isspace@c,??_isspace+2
 11551  0044EC  C002  F006         	movff	isspace@c+1,??_isspace+3
 11552  0044F0  5003               	movf	??_isspace^0,w,c
 11553  0044F2  2605               	addwf	(??_isspace+2)^0,f,c
 11554  0044F4  5004               	movf	(??_isspace+1)^0,w,c
 11555  0044F6  2206               	addwfc	(??_isspace+3)^0,f,c
 11556  0044F8  5006               	movf	(??_isspace+3)^0,w,c
 11557  0044FA  E109               	bnz	u4640
 11558  0044FC  0E05               	movlw	5
 11559  0044FE  5C05               	subwf	(??_isspace+2)^0,w,c
 11560  004500  A0D8               	btfss	status,0,c
 11561  004502  EF85  F022         	goto	u4641
 11562  004506  EF87  F022         	goto	u4640
 11563  00450A                     u4641:
 11564  00450A  EF89  F022         	goto	l4590
 11565  00450E                     u4640:
 11566  00450E  0E00               	movlw	0
 11567  004510  6E07               	movwf	_isspace$1617^0,c
 11568  004512                     l4590:
 11569  004512  C007  F001         	movff	_isspace$1617,?_isspace
 11570  004516  6A02               	clrf	(?_isspace+1)^0,c
 11571  004518  0012               	return		;funcret
 11572  00451A                     __end_of_isspace:
 11573                           	callstack 0
 11574                           
 11575 ;; *************** function _isdigit *****************
 11576 ;; Defined at:
 11577 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 11578 ;; Parameters:    Size  Location     Type
 11579 ;;  c               2    0[COMRAM] int 
 11580 ;; Auto vars:     Size  Location     Type
 11581 ;;		None
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  2    0[COMRAM] int 
 11584 ;; Registers used:
 11585 ;;		wreg, status,2, status,0
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11591 ;;      Params:         2       0       0       0       0       0       0       0       0
 11592 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11593 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11594 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11595 ;;Total ram usage:        6 bytes
 11596 ;; Hardware stack levels used: 1
 11597 ;; This function calls:
 11598 ;;		Nothing
 11599 ;; This function is called by:
 11600 ;;		_vfpfcnvrt
 11601 ;;		_atoi
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text54
 11606  0048C2                     __ptext54:
 11607                           	callstack 0
 11608  0048C2                     _isdigit:
 11609                           	callstack 26
 11610  0048C2  0ED0               	movlw	208
 11611  0048C4  6E03               	movwf	??_isdigit^0,c
 11612  0048C6  0EFF               	movlw	255
 11613  0048C8  6E04               	movwf	(??_isdigit+1)^0,c
 11614  0048CA  C001  F005         	movff	isdigit@c,??_isdigit+2
 11615  0048CE  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11616  0048D2  5003               	movf	??_isdigit^0,w,c
 11617  0048D4  2605               	addwf	(??_isdigit+2)^0,f,c
 11618  0048D6  5004               	movf	(??_isdigit+1)^0,w,c
 11619  0048D8  2206               	addwfc	(??_isdigit+3)^0,f,c
 11620  0048DA  5006               	movf	(??_isdigit+3)^0,w,c
 11621  0048DC  E10A               	bnz	u4610
 11622  0048DE  0E0A               	movlw	10
 11623  0048E0  5C05               	subwf	(??_isdigit+2)^0,w,c
 11624  0048E2  A0D8               	btfss	status,0,c
 11625  0048E4  EF76  F024         	goto	u4611
 11626  0048E8  EF79  F024         	goto	u4610
 11627  0048EC                     u4611:
 11628  0048EC  0E01               	movlw	1
 11629  0048EE  EF7A  F024         	goto	u4620
 11630  0048F2                     u4610:
 11631  0048F2  0E00               	movlw	0
 11632  0048F4                     u4620:
 11633  0048F4  6E01               	movwf	?_isdigit^0,c
 11634  0048F6  6A02               	clrf	(?_isdigit+1)^0,c
 11635  0048F8  0012               	return		;funcret
 11636  0048FA                     __end_of_isdigit:
 11637                           	callstack 0
 11638                           
 11639 ;; *************** function ___wmul *****************
 11640 ;; Defined at:
 11641 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;  multiplier      2    0[COMRAM] unsigned int 
 11644 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11645 ;; Auto vars:     Size  Location     Type
 11646 ;;  product         2    4[COMRAM] unsigned int 
 11647 ;; Return value:  Size  Location     Type
 11648 ;;                  2    0[COMRAM] unsigned int 
 11649 ;; Registers used:
 11650 ;;		wreg, status,2, status,0, prodl, prodh
 11651 ;; Tracked objects:
 11652 ;;		On entry : 0/0
 11653 ;;		On exit  : 0/0
 11654 ;;		Unchanged: 0/0
 11655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11656 ;;      Params:         4       0       0       0       0       0       0       0       0
 11657 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11658 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11659 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11660 ;;Total ram usage:        6 bytes
 11661 ;; Hardware stack levels used: 1
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_atoi
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           	psect	text55
 11670  004A5C                     __ptext55:
 11671                           	callstack 0
 11672  004A5C                     ___wmul:
 11673                           	callstack 25
 11674  004A5C  5001               	movf	___wmul@multiplier^0,w,c
 11675  004A5E  0203               	mulwf	___wmul@multiplicand^0,c
 11676  004A60  CFF3 F005          	movff	prodl,___wmul@product
 11677  004A64  CFF4 F006          	movff	prodh,___wmul@product+1
 11678  004A68  5001               	movf	___wmul@multiplier^0,w,c
 11679  004A6A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11680  004A6C  50F3               	movf	243,w,c
 11681  004A6E  2606               	addwf	(___wmul@product+1)^0,f,c
 11682  004A70  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11683  004A72  0203               	mulwf	___wmul@multiplicand^0,c
 11684  004A74  50F3               	movf	243,w,c
 11685  004A76  2606               	addwf	(___wmul@product+1)^0,f,c
 11686  004A78  C005  F001         	movff	___wmul@product,?___wmul
 11687  004A7C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11688  004A80  0012               	return		;funcret
 11689  004A82                     __end_of___wmul:
 11690                           	callstack 0
 11691                           
 11692 ;; *************** function _LCD_String_xy *****************
 11693 ;; Defined at:
 11694 ;;		line 124 in file "LCD_caracter.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;  row             1    wreg     unsigned char 
 11697 ;;  pos             1   10[COMRAM] unsigned char 
 11698 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 11699 ;;		 -> Stemp(20), RTC_Calendario@date(10), RTC_Calendario@hours(10), STR_2(3), 
 11700 ;;		 -> STR_1(3), 
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;  row             1   13[COMRAM] unsigned char 
 11703 ;;  location        1   14[COMRAM] unsigned char 
 11704 ;; Return value:  Size  Location     Type
 11705 ;;                  1    wreg      void 
 11706 ;; Registers used:
 11707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11708 ;; Tracked objects:
 11709 ;;		On entry : 0/0
 11710 ;;		On exit  : 0/0
 11711 ;;		Unchanged: 0/0
 11712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11713 ;;      Params:         3       0       0       0       0       0       0       0       0
 11714 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11715 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11716 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11717 ;;Total ram usage:        5 bytes
 11718 ;; Hardware stack levels used: 1
 11719 ;; Hardware stack levels required when called: 3
 11720 ;; This function calls:
 11721 ;;		_LCD_Command
 11722 ;;		_LCD_String
 11723 ;; This function is called by:
 11724 ;;		_RTC_Calendario
 11725 ;;		_Sunny_State
 11726 ;;		_Cloudy_State
 11727 ;;		_Rainy_State
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	text56
 11732  004764                     __ptext56:
 11733                           	callstack 0
 11734  004764                     _LCD_String_xy:
 11735                           	callstack 26
 11736                           
 11737                           ;incstack = 0
 11738                           ;LCD_String_xy@row stored from wreg
 11739  004764  6E0E               	movwf	LCD_String_xy@row^0,c
 11740  004766                     
 11741                           ;LCD_caracter.c: 127:     if(row<=1)
 11742  004766  0E02               	movlw	2
 11743  004768  600E               	cpfslt	LCD_String_xy@row^0,c
 11744  00476A  EFB9  F023         	goto	u5981
 11745  00476E  EFBB  F023         	goto	u5980
 11746  004772                     u5981:
 11747  004772  EFC4  F023         	goto	l5420
 11748  004776                     u5980:
 11749  004776                     
 11750                           ;LCD_caracter.c: 128:     {;LCD_caracter.c: 129:         location=(0x80) | ((pos) & 0x0f
      +                          );
 11751  004776  500B               	movf	LCD_String_xy@pos^0,w,c
 11752  004778  0B0F               	andlw	15
 11753  00477A  0980               	iorlw	128
 11754  00477C  6E0F               	movwf	LCD_String_xy@location^0,c
 11755  00477E                     
 11756                           ;LCD_caracter.c: 130:         LCD_Command(location);
 11757  00477E  500F               	movf	LCD_String_xy@location^0,w,c
 11758  004780  ECB5  F022         	call	_LCD_Command
 11759                           
 11760                           ;LCD_caracter.c: 131:     }
 11761  004784  EFCB  F023         	goto	l5424
 11762  004788                     l5420:
 11763                           
 11764                           ;LCD_caracter.c: 133:     {;LCD_caracter.c: 134:         location=(0xC0) | ((pos) & 0x0f
      +                          );
 11765  004788  500B               	movf	LCD_String_xy@pos^0,w,c
 11766  00478A  0B0F               	andlw	15
 11767  00478C  09C0               	iorlw	192
 11768  00478E  6E0F               	movwf	LCD_String_xy@location^0,c
 11769  004790                     
 11770                           ;LCD_caracter.c: 135:         LCD_Command(location);
 11771  004790  500F               	movf	LCD_String_xy@location^0,w,c
 11772  004792  ECB5  F022         	call	_LCD_Command
 11773  004796                     l5424:
 11774                           
 11775                           ;LCD_caracter.c: 139:     LCD_String(msg);
 11776  004796  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 11777  00479A  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 11778  00479E  EC57  F021         	call	_LCD_String	;wreg free
 11779  0047A2  0012               	return		;funcret
 11780  0047A4                     __end_of_LCD_String_xy:
 11781                           	callstack 0
 11782                           
 11783 ;; *************** function _LCD_String *****************
 11784 ;; Defined at:
 11785 ;;		line 101 in file "LCD_caracter.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 11788 ;;		 -> Stemp(20), STR_18(4), STR_17(4), STR_16(4), 
 11789 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
 11790 ;;		 -> RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), 
 11791 ;;		 -> RTC_Calendario@mins(10), RTC_Calendario@secs(10), STR_2(3), STR_1(3), 
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;		None
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  1    wreg      void 
 11796 ;; Registers used:
 11797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11803 ;;      Params:         2       0       0       0       0       0       0       0       0
 11804 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11805 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11806 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11807 ;;Total ram usage:        2 bytes
 11808 ;; Hardware stack levels used: 1
 11809 ;; Hardware stack levels required when called: 2
 11810 ;; This function calls:
 11811 ;;		_LCD_Char
 11812 ;; This function is called by:
 11813 ;;		_LCD_String_xy
 11814 ;;		_RTC_Calendario
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818                           	psect	text57
 11819  0042AE                     __ptext57:
 11820                           	callstack 0
 11821  0042AE                     _LCD_String:
 11822                           	callstack 26
 11823  0042AE                     
 11824                           ;LCD_caracter.c: 101: void LCD_String(const char *msg);LCD_caracter.c: 102: {;LCD_caract
      +                          er.c: 103:  while((*msg)!=0)
 11825  0042AE  EF6D  F021         	goto	l5262
 11826  0042B2                     l5258:
 11827                           
 11828                           ;LCD_caracter.c: 104:  {;LCD_caracter.c: 105:    LCD_Char(*msg);
 11829  0042B2  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11830  0042B6  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11831  0042BA  6AF8               	clrf	tblptru,c
 11832  0042BC  0E07               	movlw	(high __ramtop+-1)
 11833  0042BE  64F7               	cpfsgt	tblptrh,c
 11834  0042C0  D003               	bra	u5737
 11835  0042C2  0008               	tblrd		*
 11836  0042C4  50F5               	movf	tablat,w,c
 11837  0042C6  D005               	bra	u5730
 11838  0042C8                     u5737:
 11839  0042C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 11840  0042CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 11841  0042D0  50E7               	movf	indf1,w,c
 11842  0042D2                     u5730:
 11843  0042D2  ECDB  F022         	call	_LCD_Char
 11844  0042D6                     
 11845                           ;LCD_caracter.c: 106:    msg++;
 11846  0042D6  4A09               	infsnz	LCD_String@msg^0,f,c
 11847  0042D8  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 11848  0042DA                     l5262:
 11849                           
 11850                           ;LCD_caracter.c: 103:  while((*msg)!=0)
 11851  0042DA  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11852  0042DE  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11853  0042E2  6AF8               	clrf	tblptru,c
 11854  0042E4  0E07               	movlw	(high __ramtop+-1)
 11855  0042E6  64F7               	cpfsgt	tblptrh,c
 11856  0042E8  D003               	bra	u5747
 11857  0042EA  0008               	tblrd		*
 11858  0042EC  50F5               	movf	tablat,w,c
 11859  0042EE  D005               	bra	u5740
 11860  0042F0                     u5747:
 11861  0042F0  CFF6 FFE1          	movff	tblptrl,fsr1l
 11862  0042F4  CFF7 FFE2          	movff	tblptrh,fsr1h
 11863  0042F8  50E7               	movf	indf1,w,c
 11864  0042FA                     u5740:
 11865  0042FA  0900               	iorlw	0
 11866  0042FC  A4D8               	btfss	status,2,c
 11867  0042FE  EF83  F021         	goto	u5751
 11868  004302  EF85  F021         	goto	u5750
 11869  004306                     u5751:
 11870  004306  EF59  F021         	goto	l5258
 11871  00430A                     u5750:
 11872  00430A  0012               	return		;funcret
 11873  00430C                     __end_of_LCD_String:
 11874                           	callstack 0
 11875                           
 11876 ;; *************** function _LCD_Custom_Char *****************
 11877 ;; Defined at:
 11878 ;;		line 174 in file "LCD_caracter.c"
 11879 ;; Parameters:    Size  Location     Type
 11880 ;;  loc             1    wreg     unsigned char 
 11881 ;;  msg             2    8[COMRAM] PTR unsigned char 
 11882 ;;		 -> character1(8), character3(8), character2(8), 
 11883 ;; Auto vars:     Size  Location     Type
 11884 ;;  loc             1   10[COMRAM] unsigned char 
 11885 ;;  i               1   11[COMRAM] unsigned char 
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      void 
 11888 ;; Registers used:
 11889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11895 ;;      Params:         2       0       0       0       0       0       0       0       0
 11896 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11897 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11898 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11899 ;;Total ram usage:        4 bytes
 11900 ;; Hardware stack levels used: 1
 11901 ;; Hardware stack levels required when called: 2
 11902 ;; This function calls:
 11903 ;;		_LCD_Char
 11904 ;;		_LCD_Command
 11905 ;; This function is called by:
 11906 ;;		_Sunny_State
 11907 ;;		_Cloudy_State
 11908 ;;		_Rainy_State
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text58
 11913  00464C                     __ptext58:
 11914                           	callstack 0
 11915  00464C                     _LCD_Custom_Char:
 11916                           	callstack 27
 11917                           
 11918                           ;incstack = 0
 11919                           ;LCD_Custom_Char@loc stored from wreg
 11920  00464C  6E0B               	movwf	LCD_Custom_Char@loc^0,c
 11921  00464E                     
 11922                           ;LCD_caracter.c: 174: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_
      +                          caracter.c: 175: {;LCD_caracter.c: 176:     unsigned char i;;LCD_caracter.c: 177:     if
      +                           (loc< 8 )
 11923  00464E  0E08               	movlw	8
 11924  004650  600B               	cpfslt	LCD_Custom_Char@loc^0,c
 11925  004652  EF2D  F023         	goto	u5991
 11926  004656  EF2F  F023         	goto	u5990
 11927  00465A                     u5991:
 11928  00465A  EF49  F023         	goto	l124
 11929  00465E                     u5990:
 11930  00465E                     
 11931                           ;LCD_caracter.c: 178:     {;LCD_caracter.c: 179:      LCD_Command ( 0x40 +(loc* 8 ));
 11932  00465E  500B               	movf	LCD_Custom_Char@loc^0,w,c
 11933  004660  0D08               	mullw	8
 11934  004662  50F3               	movf	243,w,c
 11935  004664  0F40               	addlw	64
 11936  004666  ECB5  F022         	call	_LCD_Command
 11937  00466A                     
 11938                           ;LCD_caracter.c: 180:        for (i= 0 ;i< 8 ;i++)
 11939  00466A  0E00               	movlw	0
 11940  00466C  6E0C               	movwf	LCD_Custom_Char@i^0,c
 11941  00466E                     l5436:
 11942                           
 11943                           ;LCD_caracter.c: 181:            LCD_Char (msg[i]);
 11944  00466E  500C               	movf	LCD_Custom_Char@i^0,w,c
 11945  004670  2409               	addwf	LCD_Custom_Char@msg^0,w,c
 11946  004672  6ED9               	movwf	fsr2l,c
 11947  004674  0E00               	movlw	0
 11948  004676  200A               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
 11949  004678  6EDA               	movwf	fsr2h,c
 11950  00467A  50DF               	movf	indf2,w,c
 11951  00467C  ECDB  F022         	call	_LCD_Char
 11952  004680  2A0C               	incf	LCD_Custom_Char@i^0,f,c
 11953  004682  0E07               	movlw	7
 11954  004684  640C               	cpfsgt	LCD_Custom_Char@i^0,c
 11955  004686  EF47  F023         	goto	u6001
 11956  00468A  EF49  F023         	goto	u6000
 11957  00468E                     u6001:
 11958  00468E  EF37  F023         	goto	l5436
 11959  004692                     u6000:
 11960  004692                     l124:
 11961  004692  0012               	return		;funcret
 11962  004694                     __end_of_LCD_Custom_Char:
 11963                           	callstack 0
 11964                           
 11965 ;; *************** function _LCD_Command *****************
 11966 ;; Defined at:
 11967 ;;		line 48 in file "LCD_caracter.c"
 11968 ;; Parameters:    Size  Location     Type
 11969 ;;  cmd             1    wreg     unsigned char 
 11970 ;; Auto vars:     Size  Location     Type
 11971 ;;  cmd             1    7[COMRAM] unsigned char 
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  1    wreg      void 
 11974 ;; Registers used:
 11975 ;;		wreg, status,2, status,0, cstack
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11981 ;;      Params:         0       0       0       0       0       0       0       0       0
 11982 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11983 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11984 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11985 ;;Total ram usage:        2 bytes
 11986 ;; Hardware stack levels used: 1
 11987 ;; Hardware stack levels required when called: 1
 11988 ;; This function calls:
 11989 ;;		_LCD_MSdelay
 11990 ;; This function is called by:
 11991 ;;		_LCD_Init
 11992 ;;		_LCD_String_xy
 11993 ;;		_LCD_Clear
 11994 ;;		_LCD_Custom_Char
 11995 ;;		_Sunny_State
 11996 ;;		_Cloudy_State
 11997 ;;		_Rainy_State
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001                           	psect	text59
 12002  00456A                     __ptext59:
 12003                           	callstack 0
 12004  00456A                     _LCD_Command:
 12005                           	callstack 27
 12006                           
 12007                           ;incstack = 0
 12008                           ;LCD_Command@cmd stored from wreg
 12009  00456A  6E08               	movwf	LCD_Command@cmd^0,c
 12010  00456C                     
 12011                           ;LCD_caracter.c: 48: void LCD_Command(unsigned char cmd );LCD_caracter.c: 49: {;LCD_cara
      +                          cter.c: 50:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 12012  00456C  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 12013  004570  0EF0               	movlw	240
 12014  004572  1607               	andwf	??_LCD_Command^0,f,c
 12015  004574  508C               	movf	140,w,c	;volatile
 12016  004576  0B0F               	andlw	15
 12017  004578  1007               	iorwf	??_LCD_Command^0,w,c
 12018  00457A  6E8C               	movwf	140,c	;volatile
 12019  00457C                     
 12020                           ;LCD_caracter.c: 51:  LATD0 = 0;
 12021  00457C  908C               	bcf	3980,0,c	;volatile
 12022  00457E                     
 12023                           ;LCD_caracter.c: 52:  LATD1 = 1;
 12024  00457E  828C               	bsf	3980,1,c	;volatile
 12025  004580                     
 12026                           ;LCD_caracter.c: 53:  __nop();
 12027  004580  F000               	nop	
 12028  004582                     
 12029                           ;LCD_caracter.c: 54:  LATD1 = 0;
 12030  004582  928C               	bcf	3980,1,c	;volatile
 12031  004584                     
 12032                           ;LCD_caracter.c: 55:  LCD_MSdelay(1);
 12033  004584  0E00               	movlw	0
 12034  004586  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12035  004588  0E01               	movlw	1
 12036  00458A  6E01               	movwf	LCD_MSdelay@val^0,c
 12037  00458C  EC01  F023         	call	_LCD_MSdelay	;wreg free
 12038  004590                     
 12039                           ;LCD_caracter.c: 56:     LATD = (LATD & 0x0f) | (cmd<<4);
 12040  004590  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 12041  004594  3A07               	swapf	??_LCD_Command^0,f,c
 12042  004596  0EF0               	movlw	240
 12043  004598  1607               	andwf	??_LCD_Command^0,f,c
 12044  00459A  508C               	movf	140,w,c	;volatile
 12045  00459C  0B0F               	andlw	15
 12046  00459E  1007               	iorwf	??_LCD_Command^0,w,c
 12047  0045A0  6E8C               	movwf	140,c	;volatile
 12048  0045A2                     
 12049                           ;LCD_caracter.c: 57:  LATD1 = 1;
 12050  0045A2  828C               	bsf	3980,1,c	;volatile
 12051  0045A4                     
 12052                           ;LCD_caracter.c: 58:  __nop();
 12053  0045A4  F000               	nop	
 12054  0045A6                     
 12055                           ;LCD_caracter.c: 59:  LATD1 = 0;
 12056  0045A6  928C               	bcf	3980,1,c	;volatile
 12057                           
 12058                           ;LCD_caracter.c: 60:  LCD_MSdelay(3);
 12059  0045A8  0E00               	movlw	0
 12060  0045AA  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12061  0045AC  0E03               	movlw	3
 12062  0045AE  6E01               	movwf	LCD_MSdelay@val^0,c
 12063  0045B0  EC01  F023         	call	_LCD_MSdelay	;wreg free
 12064  0045B4  0012               	return		;funcret
 12065  0045B6                     __end_of_LCD_Command:
 12066                           	callstack 0
 12067                           
 12068 ;; *************** function _LCD_Char *****************
 12069 ;; Defined at:
 12070 ;;		line 75 in file "LCD_caracter.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;  dat             1    wreg     unsigned char 
 12073 ;; Auto vars:     Size  Location     Type
 12074 ;;  dat             1    7[COMRAM] unsigned char 
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  1    wreg      void 
 12077 ;; Registers used:
 12078 ;;		wreg, status,2, status,0, cstack
 12079 ;; Tracked objects:
 12080 ;;		On entry : 0/0
 12081 ;;		On exit  : 0/0
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12084 ;;      Params:         0       0       0       0       0       0       0       0       0
 12085 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12086 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12087 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12088 ;;Total ram usage:        2 bytes
 12089 ;; Hardware stack levels used: 1
 12090 ;; Hardware stack levels required when called: 1
 12091 ;; This function calls:
 12092 ;;		_LCD_MSdelay
 12093 ;; This function is called by:
 12094 ;;		_LCD_String
 12095 ;;		_LCD_Custom_Char
 12096 ;;		_Sunny_State
 12097 ;;		_Cloudy_State
 12098 ;;		_Rainy_State
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           	psect	text60
 12103  0045B6                     __ptext60:
 12104                           	callstack 0
 12105  0045B6                     _LCD_Char:
 12106                           	callstack 26
 12107                           
 12108                           ;incstack = 0
 12109                           ;LCD_Char@dat stored from wreg
 12110  0045B6  6E08               	movwf	LCD_Char@dat^0,c
 12111  0045B8                     
 12112                           ;LCD_caracter.c: 75: void LCD_Char(unsigned char dat);LCD_caracter.c: 76: {;LCD_caracter
      +                          .c: 77:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 12113  0045B8  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12114  0045BC  0EF0               	movlw	240
 12115  0045BE  1607               	andwf	??_LCD_Char^0,f,c
 12116  0045C0  508C               	movf	140,w,c	;volatile
 12117  0045C2  0B0F               	andlw	15
 12118  0045C4  1007               	iorwf	??_LCD_Char^0,w,c
 12119  0045C6  6E8C               	movwf	140,c	;volatile
 12120  0045C8                     
 12121                           ;LCD_caracter.c: 78:  LATD0 = 1;
 12122  0045C8  808C               	bsf	3980,0,c	;volatile
 12123  0045CA                     
 12124                           ;LCD_caracter.c: 79:  LATD1 = 1;
 12125  0045CA  828C               	bsf	3980,1,c	;volatile
 12126  0045CC                     
 12127                           ;LCD_caracter.c: 80:  __nop();
 12128  0045CC  F000               	nop	
 12129  0045CE                     
 12130                           ;LCD_caracter.c: 81:  LATD1 = 0;
 12131  0045CE  928C               	bcf	3980,1,c	;volatile
 12132  0045D0                     
 12133                           ;LCD_caracter.c: 82:  LCD_MSdelay(1);
 12134  0045D0  0E00               	movlw	0
 12135  0045D2  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12136  0045D4  0E01               	movlw	1
 12137  0045D6  6E01               	movwf	LCD_MSdelay@val^0,c
 12138  0045D8  EC01  F023         	call	_LCD_MSdelay	;wreg free
 12139  0045DC                     
 12140                           ;LCD_caracter.c: 83:     LATD = (LATD & 0x0f) | (dat<<4);
 12141  0045DC  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12142  0045E0  3A07               	swapf	??_LCD_Char^0,f,c
 12143  0045E2  0EF0               	movlw	240
 12144  0045E4  1607               	andwf	??_LCD_Char^0,f,c
 12145  0045E6  508C               	movf	140,w,c	;volatile
 12146  0045E8  0B0F               	andlw	15
 12147  0045EA  1007               	iorwf	??_LCD_Char^0,w,c
 12148  0045EC  6E8C               	movwf	140,c	;volatile
 12149  0045EE                     
 12150                           ;LCD_caracter.c: 84:  LATD1 = 1;
 12151  0045EE  828C               	bsf	3980,1,c	;volatile
 12152  0045F0                     
 12153                           ;LCD_caracter.c: 85:  __nop();
 12154  0045F0  F000               	nop	
 12155  0045F2                     
 12156                           ;LCD_caracter.c: 86:  LATD1 = 0;
 12157  0045F2  928C               	bcf	3980,1,c	;volatile
 12158                           
 12159                           ;LCD_caracter.c: 87:  LCD_MSdelay(3);
 12160  0045F4  0E00               	movlw	0
 12161  0045F6  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12162  0045F8  0E03               	movlw	3
 12163  0045FA  6E01               	movwf	LCD_MSdelay@val^0,c
 12164  0045FC  EC01  F023         	call	_LCD_MSdelay	;wreg free
 12165  004600  0012               	return		;funcret
 12166  004602                     __end_of_LCD_Char:
 12167                           	callstack 0
 12168                           
 12169 ;; *************** function _LCD_MSdelay *****************
 12170 ;; Defined at:
 12171 ;;		line 199 in file "LCD_caracter.c"
 12172 ;; Parameters:    Size  Location     Type
 12173 ;;  val             2    0[COMRAM] unsigned int 
 12174 ;; Auto vars:     Size  Location     Type
 12175 ;;  j               2    4[COMRAM] unsigned int 
 12176 ;;  i               2    2[COMRAM] unsigned int 
 12177 ;; Return value:  Size  Location     Type
 12178 ;;                  1    wreg      void 
 12179 ;; Registers used:
 12180 ;;		wreg, status,2, status,0
 12181 ;; Tracked objects:
 12182 ;;		On entry : 0/0
 12183 ;;		On exit  : 0/0
 12184 ;;		Unchanged: 0/0
 12185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12186 ;;      Params:         2       0       0       0       0       0       0       0       0
 12187 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12188 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12189 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12190 ;;Total ram usage:        6 bytes
 12191 ;; Hardware stack levels used: 1
 12192 ;; This function calls:
 12193 ;;		Nothing
 12194 ;; This function is called by:
 12195 ;;		_main
 12196 ;;		_LCD_Init
 12197 ;;		_LCD_Command
 12198 ;;		_LCD_Char
 12199 ;;		_LCD_Clear
 12200 ;;		_RTC_Calendario
 12201 ;; This function uses a non-reentrant model
 12202 ;;
 12203                           
 12204                           	psect	text61
 12205  004602                     __ptext61:
 12206                           	callstack 0
 12207  004602                     _LCD_MSdelay:
 12208                           	callstack 26
 12209  004602                     
 12210                           ;LCD_caracter.c: 199: void LCD_MSdelay(unsigned int val);LCD_caracter.c: 200: {;LCD_cara
      +                          cter.c: 201:  unsigned int i,j;;LCD_caracter.c: 202:  for(i=0;i<val;i++)
 12211  004602  0E00               	movlw	0
 12212  004604  6E04               	movwf	(LCD_MSdelay@i+1)^0,c
 12213  004606  0E00               	movlw	0
 12214  004608  6E03               	movwf	LCD_MSdelay@i^0,c
 12215  00460A  EF1A  F023         	goto	l4608
 12216  00460E                     l4596:
 12217                           
 12218                           ;LCD_caracter.c: 203:      for(j=0;j<165;j++);
 12219  00460E  0E00               	movlw	0
 12220  004610  6E06               	movwf	(LCD_MSdelay@j+1)^0,c
 12221  004612  0E00               	movlw	0
 12222  004614  6E05               	movwf	LCD_MSdelay@j^0,c
 12223  004616                     l4602:
 12224  004616  4A05               	infsnz	LCD_MSdelay@j^0,f,c
 12225  004618  2A06               	incf	(LCD_MSdelay@j+1)^0,f,c
 12226  00461A  5006               	movf	(LCD_MSdelay@j+1)^0,w,c
 12227  00461C  E109               	bnz	u4650
 12228  00461E  0EA5               	movlw	165
 12229  004620  5C05               	subwf	LCD_MSdelay@j^0,w,c
 12230  004622  A0D8               	btfss	status,0,c
 12231  004624  EF16  F023         	goto	u4651
 12232  004628  EF18  F023         	goto	u4650
 12233  00462C                     u4651:
 12234  00462C  EF0B  F023         	goto	l4602
 12235  004630                     u4650:
 12236  004630  4A03               	infsnz	LCD_MSdelay@i^0,f,c
 12237  004632  2A04               	incf	(LCD_MSdelay@i+1)^0,f,c
 12238  004634                     l4608:
 12239  004634  5001               	movf	LCD_MSdelay@val^0,w,c
 12240  004636  5C03               	subwf	LCD_MSdelay@i^0,w,c
 12241  004638  5002               	movf	(LCD_MSdelay@val+1)^0,w,c
 12242  00463A  5804               	subwfb	(LCD_MSdelay@i+1)^0,w,c
 12243  00463C  A0D8               	btfss	status,0,c
 12244  00463E  EF23  F023         	goto	u4661
 12245  004642  EF25  F023         	goto	u4660
 12246  004646                     u4661:
 12247  004646  EF07  F023         	goto	l4596
 12248  00464A                     u4660:
 12249  00464A  0012               	return		;funcret
 12250  00464C                     __end_of_LCD_MSdelay:
 12251                           	callstack 0
 12252                           
 12253 ;; *************** function _Alarm_Status *****************
 12254 ;; Defined at:
 12255 ;;		line 130 in file "Estados.c"
 12256 ;; Parameters:    Size  Location     Type
 12257 ;;		None
 12258 ;; Auto vars:     Size  Location     Type
 12259 ;;		None
 12260 ;; Return value:  Size  Location     Type
 12261 ;;                  1    wreg      void 
 12262 ;; Registers used:
 12263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12264 ;; Tracked objects:
 12265 ;;		On entry : 0/0
 12266 ;;		On exit  : 0/0
 12267 ;;		Unchanged: 0/0
 12268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12269 ;;      Params:         0       0       0       0       0       0       0       0       0
 12270 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12271 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12272 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12273 ;;Total ram usage:        0 bytes
 12274 ;; Hardware stack levels used: 1
 12275 ;; Hardware stack levels required when called: 3
 12276 ;; This function calls:
 12277 ;;		_PlayCancion
 12278 ;;		_USART_SendString
 12279 ;; This function is called by:
 12280 ;;		_main
 12281 ;; This function uses a non-reentrant model
 12282 ;;
 12283                           
 12284                           	psect	text62
 12285  004B36                     __ptext62:
 12286                           	callstack 0
 12287  004B36                     _Alarm_Status:
 12288                           	callstack 27
 12289  004B36                     
 12290                           ;Estados.c: 132:     USART_SendString("Buenos Dias");
 12291  004B36  0E01               	movlw	low STR_22
 12292  004B38  6E02               	movwf	USART_SendString@out^0,c
 12293  004B3A  0E08               	movlw	high STR_22
 12294  004B3C  6E03               	movwf	(USART_SendString@out+1)^0,c
 12295  004B3E  ECB4  F024         	call	_USART_SendString	;wreg free
 12296  004B42                     
 12297                           ;Estados.c: 133:     PlayCancion();
 12298  004B42  EC6F  F01A         	call	_PlayCancion	;wreg free
 12299  004B46  0012               	return		;funcret
 12300  004B48                     __end_of_Alarm_Status:
 12301                           	callstack 0
 12302                           
 12303 ;; *************** function _USART_SendString *****************
 12304 ;; Defined at:
 12305 ;;		line 93 in file "Bluetooth.c"
 12306 ;; Parameters:    Size  Location     Type
 12307 ;;  out             2    1[COMRAM] PTR const unsigned char 
 12308 ;;		 -> STR_22(12), 
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      void 
 12313 ;; Registers used:
 12314 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12320 ;;      Params:         2       0       0       0       0       0       0       0       0
 12321 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12322 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12323 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12324 ;;Total ram usage:        2 bytes
 12325 ;; Hardware stack levels used: 1
 12326 ;; Hardware stack levels required when called: 1
 12327 ;; This function calls:
 12328 ;;		_USART_TransmitChar
 12329 ;; This function is called by:
 12330 ;;		_Alarm_Status
 12331 ;; This function uses a non-reentrant model
 12332 ;;
 12333                           
 12334                           	psect	text63
 12335  004968                     __ptext63:
 12336                           	callstack 0
 12337  004968                     _USART_SendString:
 12338                           	callstack 28
 12339  004968                     
 12340                           ;Bluetooth.c: 94:     while (*out != '\0') {
 12341  004968  EFC0  F024         	goto	l5536
 12342  00496C                     l5532:
 12343                           
 12344                           ;Bluetooth.c: 95:         USART_TransmitChar(*out);
 12345  00496C  C002  FFF6         	movff	USART_SendString@out,tblptrl
 12346  004970  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
 12347  004974                     	if	0	;tblptru may be non-zero
 12348  004974                     	endif
 12349  004974                     	if	0	;tblptru may be non-zero
 12350  004974                     	endif
 12351  004974  0008               	tblrd		*
 12352  004976  50F5               	movf	tablat,w,c
 12353  004978  EC5F  F025         	call	_USART_TransmitChar
 12354  00497C                     
 12355                           ;Bluetooth.c: 96:         out++;
 12356  00497C  4A02               	infsnz	USART_SendString@out^0,f,c
 12357  00497E  2A03               	incf	(USART_SendString@out+1)^0,f,c
 12358  004980                     l5536:
 12359                           
 12360                           ;Bluetooth.c: 94:     while (*out != '\0') {
 12361  004980  C002  FFF6         	movff	USART_SendString@out,tblptrl
 12362  004984  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
 12363  004988                     	if	0	;tblptru may be non-zero
 12364  004988                     	endif
 12365  004988                     	if	0	;tblptru may be non-zero
 12366  004988                     	endif
 12367  004988  0008               	tblrd		*
 12368  00498A  50F5               	movf	tablat,w,c
 12369  00498C  0900               	iorlw	0
 12370  00498E  A4D8               	btfss	status,2,c
 12371  004990  EFCC  F024         	goto	u6031
 12372  004994  EFCE  F024         	goto	u6030
 12373  004998                     u6031:
 12374  004998  EFB6  F024         	goto	l5532
 12375  00499C                     u6030:
 12376  00499C  0012               	return		;funcret
 12377  00499E                     __end_of_USART_SendString:
 12378                           	callstack 0
 12379                           
 12380 ;; *************** function _USART_TransmitChar *****************
 12381 ;; Defined at:
 12382 ;;		line 59 in file "Bluetooth.c"
 12383 ;; Parameters:    Size  Location     Type
 12384 ;;  out             1    wreg     unsigned char 
 12385 ;; Auto vars:     Size  Location     Type
 12386 ;;  out             1    0[COMRAM] unsigned char 
 12387 ;; Return value:  Size  Location     Type
 12388 ;;                  1    wreg      void 
 12389 ;; Registers used:
 12390 ;;		wreg
 12391 ;; Tracked objects:
 12392 ;;		On entry : 0/0
 12393 ;;		On exit  : 0/0
 12394 ;;		Unchanged: 0/0
 12395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12396 ;;      Params:         0       0       0       0       0       0       0       0       0
 12397 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12398 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12399 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12400 ;;Total ram usage:        1 bytes
 12401 ;; Hardware stack levels used: 1
 12402 ;; This function calls:
 12403 ;;		Nothing
 12404 ;; This function is called by:
 12405 ;;		_USART_SendString
 12406 ;; This function uses a non-reentrant model
 12407 ;;
 12408                           
 12409                           	psect	text64
 12410  004ABE                     __ptext64:
 12411                           	callstack 0
 12412  004ABE                     _USART_TransmitChar:
 12413                           	callstack 28
 12414                           
 12415                           ;incstack = 0
 12416                           ;USART_TransmitChar@out stored from wreg
 12417  004ABE  6E01               	movwf	USART_TransmitChar@out^0,c
 12418  004AC0                     l578:
 12419  004AC0  A89E               	btfss	3998,4,c	;volatile
 12420  004AC2  EF65  F025         	goto	u5861
 12421  004AC6  EF67  F025         	goto	u5860
 12422  004ACA                     u5861:
 12423  004ACA  EF60  F025         	goto	l578
 12424  004ACE                     u5860:
 12425  004ACE                     
 12426                           ;Bluetooth.c: 61:     TXREG = out;
 12427  004ACE  C001  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
 12428  004AD2  0012               	return		;funcret
 12429  004AD4                     __end_of_USART_TransmitChar:
 12430                           	callstack 0
 12431                           
 12432 ;; *************** function _PlayCancion *****************
 12433 ;; Defined at:
 12434 ;;		line 93 in file "Melodia.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;		None
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;		None
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12443 ;; Tracked objects:
 12444 ;;		On entry : 0/0
 12445 ;;		On exit  : 0/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12448 ;;      Params:         0       0       0       0       0       0       0       0       0
 12449 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12450 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12451 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12452 ;;Total ram usage:        2 bytes
 12453 ;; Hardware stack levels used: 1
 12454 ;; Hardware stack levels required when called: 2
 12455 ;; This function calls:
 12456 ;;		_play
 12457 ;; This function is called by:
 12458 ;;		_Sunny_State
 12459 ;;		_Alarm_Status
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           	psect	text65
 12464  0034DE                     __ptext65:
 12465                           	callstack 0
 12466  0034DE                     _PlayCancion:
 12467                           	callstack 27
 12468  0034DE                     
 12469                           ;Melodia.c: 96:         play (4 ,4,150);
 12470  0034DE  0E00               	movlw	0
 12471  0034E0  6E07               	movwf	(play@nota+1)^0,c
 12472  0034E2  0E04               	movlw	4
 12473  0034E4  6E06               	movwf	play@nota^0,c
 12474  0034E6  0E00               	movlw	0
 12475  0034E8  6E09               	movwf	(play@octava+1)^0,c
 12476  0034EA  0E04               	movlw	4
 12477  0034EC  6E08               	movwf	play@octava^0,c
 12478  0034EE  0E00               	movlw	0
 12479  0034F0  6E0B               	movwf	(play@duracion+1)^0,c
 12480  0034F2  0E96               	movlw	150
 12481  0034F4  6E0A               	movwf	play@duracion^0,c
 12482  0034F6  ECB3  F01E         	call	_play	;wreg free
 12483  0034FA                     
 12484                           ;Melodia.c: 97:         _delay((unsigned long)((50)*(8000000/4000.0)));
 12485  0034FA  0E82               	movlw	130
 12486  0034FC  6E13               	movwf	??_PlayCancion^0,c
 12487  0034FE  0EDE               	movlw	222
 12488  003500                     u6207:
 12489  003500  2EE8               	decfsz	wreg,f,c
 12490  003502  D7FE               	bra	u6207
 12491  003504  2E13               	decfsz	??_PlayCancion^0,f,c
 12492  003506  D7FC               	bra	u6207
 12493  003508                     
 12494                           ;Melodia.c: 98:         play (4 ,4,150);
 12495  003508  0E00               	movlw	0
 12496  00350A  6E07               	movwf	(play@nota+1)^0,c
 12497  00350C  0E04               	movlw	4
 12498  00350E  6E06               	movwf	play@nota^0,c
 12499  003510  0E00               	movlw	0
 12500  003512  6E09               	movwf	(play@octava+1)^0,c
 12501  003514  0E04               	movlw	4
 12502  003516  6E08               	movwf	play@octava^0,c
 12503  003518  0E00               	movlw	0
 12504  00351A  6E0B               	movwf	(play@duracion+1)^0,c
 12505  00351C  0E96               	movlw	150
 12506  00351E  6E0A               	movwf	play@duracion^0,c
 12507  003520  ECB3  F01E         	call	_play	;wreg free
 12508                           
 12509                           ;Melodia.c: 99:         _delay((unsigned long)((150)*(8000000/4000.0)));
 12510  003524  0E02               	movlw	2
 12511  003526  6E14               	movwf	(??_PlayCancion+1)^0,c
 12512  003528  0E86               	movlw	134
 12513  00352A  6E13               	movwf	??_PlayCancion^0,c
 12514  00352C  0E99               	movlw	153
 12515  00352E                     u6217:
 12516  00352E  2EE8               	decfsz	wreg,f,c
 12517  003530  D7FE               	bra	u6217
 12518  003532  2E13               	decfsz	??_PlayCancion^0,f,c
 12519  003534  D7FC               	bra	u6217
 12520  003536  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12521  003538  D7FA               	bra	u6217
 12522  00353A  F000               	nop	
 12523  00353C                     
 12524                           ;Melodia.c: 100:         play (4 ,4,150);
 12525  00353C  0E00               	movlw	0
 12526  00353E  6E07               	movwf	(play@nota+1)^0,c
 12527  003540  0E04               	movlw	4
 12528  003542  6E06               	movwf	play@nota^0,c
 12529  003544  0E00               	movlw	0
 12530  003546  6E09               	movwf	(play@octava+1)^0,c
 12531  003548  0E04               	movlw	4
 12532  00354A  6E08               	movwf	play@octava^0,c
 12533  00354C  0E00               	movlw	0
 12534  00354E  6E0B               	movwf	(play@duracion+1)^0,c
 12535  003550  0E96               	movlw	150
 12536  003552  6E0A               	movwf	play@duracion^0,c
 12537  003554  ECB3  F01E         	call	_play	;wreg free
 12538  003558                     
 12539                           ;Melodia.c: 101:         _delay((unsigned long)((200)*(8000000/4000.0)));
 12540  003558  0E03               	movlw	3
 12541  00355A  6E14               	movwf	(??_PlayCancion+1)^0,c
 12542  00355C  0E08               	movlw	8
 12543  00355E  6E13               	movwf	??_PlayCancion^0,c
 12544  003560  0E77               	movlw	119
 12545  003562                     u6227:
 12546  003562  2EE8               	decfsz	wreg,f,c
 12547  003564  D7FE               	bra	u6227
 12548  003566  2E13               	decfsz	??_PlayCancion^0,f,c
 12549  003568  D7FC               	bra	u6227
 12550  00356A  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12551  00356C  D7FA               	bra	u6227
 12552  00356E  F000               	nop	
 12553                           
 12554                           ;Melodia.c: 103:         play (0 ,4,125);
 12555  003570  0E00               	movlw	0
 12556  003572  6E07               	movwf	(play@nota+1)^0,c
 12557  003574  0E00               	movlw	0
 12558  003576  6E06               	movwf	play@nota^0,c
 12559  003578  0E00               	movlw	0
 12560  00357A  6E09               	movwf	(play@octava+1)^0,c
 12561  00357C  0E04               	movlw	4
 12562  00357E  6E08               	movwf	play@octava^0,c
 12563  003580  0E00               	movlw	0
 12564  003582  6E0B               	movwf	(play@duracion+1)^0,c
 12565  003584  0E7D               	movlw	125
 12566  003586  6E0A               	movwf	play@duracion^0,c
 12567  003588  ECB3  F01E         	call	_play	;wreg free
 12568  00358C                     
 12569                           ;Melodia.c: 104:         _delay((unsigned long)((50)*(8000000/4000.0)));
 12570  00358C  0E82               	movlw	130
 12571  00358E  6E13               	movwf	??_PlayCancion^0,c
 12572  003590  0EDE               	movlw	222
 12573  003592                     u6237:
 12574  003592  2EE8               	decfsz	wreg,f,c
 12575  003594  D7FE               	bra	u6237
 12576  003596  2E13               	decfsz	??_PlayCancion^0,f,c
 12577  003598  D7FC               	bra	u6237
 12578  00359A                     
 12579                           ;Melodia.c: 105:         play (4 ,4,125);
 12580  00359A  0E00               	movlw	0
 12581  00359C  6E07               	movwf	(play@nota+1)^0,c
 12582  00359E  0E04               	movlw	4
 12583  0035A0  6E06               	movwf	play@nota^0,c
 12584  0035A2  0E00               	movlw	0
 12585  0035A4  6E09               	movwf	(play@octava+1)^0,c
 12586  0035A6  0E04               	movlw	4
 12587  0035A8  6E08               	movwf	play@octava^0,c
 12588  0035AA  0E00               	movlw	0
 12589  0035AC  6E0B               	movwf	(play@duracion+1)^0,c
 12590  0035AE  0E7D               	movlw	125
 12591  0035B0  6E0A               	movwf	play@duracion^0,c
 12592  0035B2  ECB3  F01E         	call	_play	;wreg free
 12593                           
 12594                           ;Melodia.c: 106:         _delay((unsigned long)((150)*(8000000/4000.0)));
 12595  0035B6  0E02               	movlw	2
 12596  0035B8  6E14               	movwf	(??_PlayCancion+1)^0,c
 12597  0035BA  0E86               	movlw	134
 12598  0035BC  6E13               	movwf	??_PlayCancion^0,c
 12599  0035BE  0E99               	movlw	153
 12600  0035C0                     u6247:
 12601  0035C0  2EE8               	decfsz	wreg,f,c
 12602  0035C2  D7FE               	bra	u6247
 12603  0035C4  2E13               	decfsz	??_PlayCancion^0,f,c
 12604  0035C6  D7FC               	bra	u6247
 12605  0035C8  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12606  0035CA  D7FA               	bra	u6247
 12607  0035CC  F000               	nop	
 12608  0035CE                     
 12609                           ;Melodia.c: 107:         play (7 ,4,200);
 12610  0035CE  0E00               	movlw	0
 12611  0035D0  6E07               	movwf	(play@nota+1)^0,c
 12612  0035D2  0E07               	movlw	7
 12613  0035D4  6E06               	movwf	play@nota^0,c
 12614  0035D6  0E00               	movlw	0
 12615  0035D8  6E09               	movwf	(play@octava+1)^0,c
 12616  0035DA  0E04               	movlw	4
 12617  0035DC  6E08               	movwf	play@octava^0,c
 12618  0035DE  0E00               	movlw	0
 12619  0035E0  6E0B               	movwf	(play@duracion+1)^0,c
 12620  0035E2  0EC8               	movlw	200
 12621  0035E4  6E0A               	movwf	play@duracion^0,c
 12622  0035E6  ECB3  F01E         	call	_play	;wreg free
 12623  0035EA                     
 12624                           ;Melodia.c: 108:         _delay((unsigned long)((400)*(8000000/4000.0)));
 12625  0035EA  0E05               	movlw	5
 12626  0035EC  6E14               	movwf	(??_PlayCancion+1)^0,c
 12627  0035EE  0E0F               	movlw	15
 12628  0035F0  6E13               	movwf	??_PlayCancion^0,c
 12629  0035F2  0EF1               	movlw	241
 12630  0035F4                     u6257:
 12631  0035F4  2EE8               	decfsz	wreg,f,c
 12632  0035F6  D7FE               	bra	u6257
 12633  0035F8  2E13               	decfsz	??_PlayCancion^0,f,c
 12634  0035FA  D7FC               	bra	u6257
 12635  0035FC  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12636  0035FE  D7FA               	bra	u6257
 12637  003600  F000               	nop	
 12638                           
 12639                           ;Melodia.c: 109:         play (7 ,3,350);
 12640  003602  0E00               	movlw	0
 12641  003604  6E07               	movwf	(play@nota+1)^0,c
 12642  003606  0E07               	movlw	7
 12643  003608  6E06               	movwf	play@nota^0,c
 12644  00360A  0E00               	movlw	0
 12645  00360C  6E09               	movwf	(play@octava+1)^0,c
 12646  00360E  0E03               	movlw	3
 12647  003610  6E08               	movwf	play@octava^0,c
 12648  003612  0E01               	movlw	1
 12649  003614  6E0B               	movwf	(play@duracion+1)^0,c
 12650  003616  0E5E               	movlw	94
 12651  003618  6E0A               	movwf	play@duracion^0,c
 12652  00361A  ECB3  F01E         	call	_play	;wreg free
 12653  00361E                     
 12654                           ;Melodia.c: 110:         _delay((unsigned long)((300)*(8000000/4000.0)));
 12655  00361E  0E04               	movlw	4
 12656  003620  6E14               	movwf	(??_PlayCancion+1)^0,c
 12657  003622  0E0C               	movlw	12
 12658  003624  6E13               	movwf	??_PlayCancion^0,c
 12659  003626  0E34               	movlw	52
 12660  003628                     u6267:
 12661  003628  2EE8               	decfsz	wreg,f,c
 12662  00362A  D7FE               	bra	u6267
 12663  00362C  2E13               	decfsz	??_PlayCancion^0,f,c
 12664  00362E  D7FC               	bra	u6267
 12665  003630  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12666  003632  D7FA               	bra	u6267
 12667  003634  0012               	return		;funcret
 12668  003636                     __end_of_PlayCancion:
 12669                           	callstack 0
 12670                           
 12671 ;; *************** function _play *****************
 12672 ;; Defined at:
 12673 ;;		line 46 in file "Melodia.c"
 12674 ;; Parameters:    Size  Location     Type
 12675 ;;  nota            2    5[COMRAM] int 
 12676 ;;  octava          2    7[COMRAM] int 
 12677 ;;  duracion        2    9[COMRAM] int 
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;  fn              2   16[COMRAM] int 
 12680 ;;  CiclosL         2   14[COMRAM] int 
 12681 ;;  mS_Transcurr    2   12[COMRAM] int 
 12682 ;; Return value:  Size  Location     Type
 12683 ;;                  1    wreg      void 
 12684 ;; Registers used:
 12685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12686 ;; Tracked objects:
 12687 ;;		On entry : 0/0
 12688 ;;		On exit  : 0/0
 12689 ;;		Unchanged: 0/0
 12690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12691 ;;      Params:         6       0       0       0       0       0       0       0       0
 12692 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12693 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12694 ;;      Totals:        13       0       0       0       0       0       0       0       0
 12695 ;;Total ram usage:       13 bytes
 12696 ;; Hardware stack levels used: 1
 12697 ;; Hardware stack levels required when called: 1
 12698 ;; This function calls:
 12699 ;;		_delay_us
 12700 ;; This function is called by:
 12701 ;;		_PlayCancion
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           
 12705                           	psect	text66
 12706  003D66                     __ptext66:
 12707                           	callstack 0
 12708  003D66                     _play:
 12709                           	callstack 27
 12710  003D66                     
 12711                           ;Melodia.c: 47:      int fn;;Melodia.c: 48:      int mS_Transcurridos=0;
 12712  003D66  0E00               	movlw	0
 12713  003D68  6E0E               	movwf	(play@mS_Transcurridos+1)^0,c
 12714  003D6A  0E00               	movlw	0
 12715  003D6C  6E0D               	movwf	play@mS_Transcurridos^0,c
 12716                           
 12717                           ;Melodia.c: 49:      int CiclosL=0;
 12718  003D6E  0E00               	movlw	0
 12719  003D70  6E10               	movwf	(play@CiclosL+1)^0,c
 12720  003D72  0E00               	movlw	0
 12721  003D74  6E0F               	movwf	play@CiclosL^0,c
 12722  003D76                     
 12723                           ;Melodia.c: 51:      fn=FreqNota[nota];
 12724  003D76  90D8               	bcf	status,0,c
 12725  003D78  3406               	rlcf	play@nota^0,w,c
 12726  003D7A  6ED9               	movwf	fsr2l,c
 12727  003D7C  3407               	rlcf	(play@nota+1)^0,w,c
 12728  003D7E  6EDA               	movwf	fsr2h,c
 12729  003D80  0EB6               	movlw	low _FreqNota
 12730  003D82  26D9               	addwf	fsr2l,f,c
 12731  003D84  0E01               	movlw	high _FreqNota
 12732  003D86  22DA               	addwfc	fsr2h,f,c
 12733  003D88  CFDE F011          	movff	postinc2,play@fn
 12734  003D8C  CFDD F012          	movff	postdec2,play@fn+1
 12735  003D90                     
 12736                           ;Melodia.c: 53:      fn>>=(octava);
 12737  003D90  2808               	incf	play@octava^0,w,c
 12738  003D92  6E0C               	movwf	??_play^0,c
 12739  003D94  EFCF  F01E         	goto	u5760
 12740  003D98                     u5765:
 12741  003D98  3412               	rlcf	(play@fn+1)^0,w,c
 12742  003D9A  3212               	rrcf	(play@fn+1)^0,f,c
 12743  003D9C  3211               	rrcf	play@fn^0,f,c
 12744  003D9E                     u5760:
 12745  003D9E  2E0C               	decfsz	??_play^0,f,c
 12746  003DA0  EFCC  F01E         	goto	u5765
 12747  003DA4                     l5270:
 12748                           
 12749                           ;Melodia.c: 58:         TRISCbits . TRISC1 = 0;
 12750  003DA4  9294               	bcf	148,1,c	;volatile
 12751  003DA6                     
 12752                           ;Melodia.c: 59:         LATCbits . LATC1 = 1 ;
 12753  003DA6  828B               	bsf	139,1,c	;volatile
 12754  003DA8                     
 12755                           ;Melodia.c: 60:         delay_us(fn);;
 12756  003DA8  C011  F001         	movff	play@fn,delay_us@nota
 12757  003DAC  C012  F002         	movff	play@fn+1,delay_us@nota+1
 12758  003DB0  ECCF  F024         	call	_delay_us	;wreg free
 12759  003DB4                     
 12760                           ;Melodia.c: 61:         CiclosL+=(fn);
 12761  003DB4  5011               	movf	play@fn^0,w,c
 12762  003DB6  260F               	addwf	play@CiclosL^0,f,c
 12763  003DB8  5012               	movf	(play@fn+1)^0,w,c
 12764  003DBA  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12765  003DBC                     
 12766                           ;Melodia.c: 63:         LATCbits . LATC1 = 0 ;
 12767  003DBC  928B               	bcf	139,1,c	;volatile
 12768  003DBE                     
 12769                           ;Melodia.c: 64:          delay_us(fn);
 12770  003DBE  C011  F001         	movff	play@fn,delay_us@nota
 12771  003DC2  C012  F002         	movff	play@fn+1,delay_us@nota+1
 12772  003DC6  ECCF  F024         	call	_delay_us	;wreg free
 12773  003DCA                     
 12774                           ;Melodia.c: 65:         CiclosL+=(fn);
 12775  003DCA  5011               	movf	play@fn^0,w,c
 12776  003DCC  260F               	addwf	play@CiclosL^0,f,c
 12777  003DCE  5012               	movf	(play@fn+1)^0,w,c
 12778  003DD0  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12779  003DD2                     l5284:
 12780                           
 12781                           ;Melodia.c: 66:         CiclosL+=25;
 12782  003DD2  0E19               	movlw	25
 12783  003DD4  260F               	addwf	play@CiclosL^0,f,c
 12784  003DD6  0E00               	movlw	0
 12785  003DD8  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12786                           
 12787                           ;Melodia.c: 68:         while(CiclosL>999){
 12788  003DDA  EFF7  F01E         	goto	l5292
 12789  003DDE                     l5286:
 12790                           
 12791                           ;Melodia.c: 70:            CiclosL-=1000;
 12792  003DDE  0E18               	movlw	24
 12793  003DE0  260F               	addwf	play@CiclosL^0,f,c
 12794  003DE2  0EFC               	movlw	252
 12795  003DE4  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12796  003DE6                     
 12797                           ;Melodia.c: 71:            mS_Transcurridos++;
 12798  003DE6  4A0D               	infsnz	play@mS_Transcurridos^0,f,c
 12799  003DE8  2A0E               	incf	(play@mS_Transcurridos+1)^0,f,c
 12800  003DEA  EFE9  F01E         	goto	l5284
 12801  003DEE                     l5292:
 12802                           
 12803                           ;Melodia.c: 68:         while(CiclosL>999){
 12804  003DEE  BE10               	btfsc	(play@CiclosL+1)^0,7,c
 12805  003DF0  EF05  F01F         	goto	u5770
 12806  003DF4  0EE8               	movlw	232
 12807  003DF6  5C0F               	subwf	play@CiclosL^0,w,c
 12808  003DF8  0E03               	movlw	3
 12809  003DFA  5810               	subwfb	(play@CiclosL+1)^0,w,c
 12810  003DFC  B0D8               	btfsc	status,0,c
 12811  003DFE  EF03  F01F         	goto	u5771
 12812  003E02  EF05  F01F         	goto	u5770
 12813  003E06                     u5771:
 12814  003E06  EFEF  F01E         	goto	l5286
 12815  003E0A                     u5770:
 12816  003E0A                     
 12817                           ;Melodia.c: 74:      }while (duracion>mS_Transcurridos);
 12818  003E0A  500A               	movf	play@duracion^0,w,c
 12819  003E0C  5C0D               	subwf	play@mS_Transcurridos^0,w,c
 12820  003E0E  500E               	movf	(play@mS_Transcurridos+1)^0,w,c
 12821  003E10  0A80               	xorlw	128
 12822  003E12  6E0C               	movwf	??_play^0,c
 12823  003E14  500B               	movf	(play@duracion+1)^0,w,c
 12824  003E16  0A80               	xorlw	128
 12825  003E18  580C               	subwfb	??_play^0,w,c
 12826  003E1A  A0D8               	btfss	status,0,c
 12827  003E1C  EF12  F01F         	goto	u5781
 12828  003E20  EF14  F01F         	goto	u5780
 12829  003E24                     u5781:
 12830  003E24  EFD2  F01E         	goto	l5270
 12831  003E28                     u5780:
 12832  003E28  0012               	return		;funcret
 12833  003E2A                     __end_of_play:
 12834                           	callstack 0
 12835                           
 12836 ;; *************** function _delay_us *****************
 12837 ;; Defined at:
 12838 ;;		line 24 in file "Melodia.c"
 12839 ;; Parameters:    Size  Location     Type
 12840 ;;  nota            2    0[COMRAM] int 
 12841 ;; Auto vars:     Size  Location     Type
 12842 ;;  i               2    3[COMRAM] int 
 12843 ;; Return value:  Size  Location     Type
 12844 ;;                  1    wreg      void 
 12845 ;; Registers used:
 12846 ;;		wreg, status,2, status,0
 12847 ;; Tracked objects:
 12848 ;;		On entry : 0/0
 12849 ;;		On exit  : 0/0
 12850 ;;		Unchanged: 0/0
 12851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12852 ;;      Params:         2       0       0       0       0       0       0       0       0
 12853 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12854 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12855 ;;      Totals:         5       0       0       0       0       0       0       0       0
 12856 ;;Total ram usage:        5 bytes
 12857 ;; Hardware stack levels used: 1
 12858 ;; This function calls:
 12859 ;;		Nothing
 12860 ;; This function is called by:
 12861 ;;		_play
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           
 12865                           	psect	text67
 12866  00499E                     __ptext67:
 12867                           	callstack 0
 12868  00499E                     _delay_us:
 12869                           	callstack 27
 12870  00499E                     
 12871                           ;Melodia.c: 25:     for(int i=0; i<=nota;i++ ){
 12872  00499E  0E00               	movlw	0
 12873  0049A0  6E05               	movwf	(delay_us@i+1)^0,c
 12874  0049A2  0E00               	movlw	0
 12875  0049A4  6E04               	movwf	delay_us@i^0,c
 12876  0049A6  EFD8  F024         	goto	l5072
 12877  0049AA                     l254:
 12878                           
 12879                           ;Melodia.c: 26:         _delay((unsigned long)((1)*(8000000/4000000.0)));
 12880  0049AA  D000               	nop2		;2 cycle nop
 12881  0049AC                     
 12882                           ;Melodia.c: 27:     }
 12883  0049AC  4A04               	infsnz	delay_us@i^0,f,c
 12884  0049AE  2A05               	incf	(delay_us@i+1)^0,f,c
 12885  0049B0                     l5072:
 12886  0049B0  5004               	movf	delay_us@i^0,w,c
 12887  0049B2  5C01               	subwf	delay_us@nota^0,w,c
 12888  0049B4  5002               	movf	(delay_us@nota+1)^0,w,c
 12889  0049B6  0A80               	xorlw	128
 12890  0049B8  6E03               	movwf	??_delay_us^0,c
 12891  0049BA  5005               	movf	(delay_us@i+1)^0,w,c
 12892  0049BC  0A80               	xorlw	128
 12893  0049BE  5803               	subwfb	??_delay_us^0,w,c
 12894  0049C0  B0D8               	btfsc	status,0,c
 12895  0049C2  EFE5  F024         	goto	u5511
 12896  0049C6  EFE7  F024         	goto	u5510
 12897  0049CA                     u5511:
 12898  0049CA  EFD5  F024         	goto	l254
 12899  0049CE                     u5510:
 12900  0049CE  0012               	return		;funcret
 12901  0049D0                     __end_of_delay_us:
 12902                           	callstack 0
 12903                           
 12904                           	psect	rparam
 12905  0000                     
 12906                           	psect	idloc
 12907                           
 12908                           ;Config register IDLOC0 @ 0x200000
 12909                           ;	unspecified, using default values
 12910  200000                     	org	2097152
 12911  200000  FF                 	db	255
 12912                           
 12913                           ;Config register IDLOC1 @ 0x200001
 12914                           ;	unspecified, using default values
 12915  200001                     	org	2097153
 12916  200001  FF                 	db	255
 12917                           
 12918                           ;Config register IDLOC2 @ 0x200002
 12919                           ;	unspecified, using default values
 12920  200002                     	org	2097154
 12921  200002  FF                 	db	255
 12922                           
 12923                           ;Config register IDLOC3 @ 0x200003
 12924                           ;	unspecified, using default values
 12925  200003                     	org	2097155
 12926  200003  FF                 	db	255
 12927                           
 12928                           ;Config register IDLOC4 @ 0x200004
 12929                           ;	unspecified, using default values
 12930  200004                     	org	2097156
 12931  200004  FF                 	db	255
 12932                           
 12933                           ;Config register IDLOC5 @ 0x200005
 12934                           ;	unspecified, using default values
 12935  200005                     	org	2097157
 12936  200005  FF                 	db	255
 12937                           
 12938                           ;Config register IDLOC6 @ 0x200006
 12939                           ;	unspecified, using default values
 12940  200006                     	org	2097158
 12941  200006  FF                 	db	255
 12942                           
 12943                           ;Config register IDLOC7 @ 0x200007
 12944                           ;	unspecified, using default values
 12945  200007                     	org	2097159
 12946  200007  FF                 	db	255
 12947                           
 12948                           	psect	config
 12949                           
 12950                           ;Config register CONFIG1L @ 0x300000
 12951                           ;	PLL Prescaler Selection bits
 12952                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12953                           ;	System Clock Postscaler Selection bits
 12954                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12955                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12956                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12957  300000                     	org	3145728
 12958  300000  00                 	db	0
 12959                           
 12960                           ;Config register CONFIG1H @ 0x300001
 12961                           ;	Oscillator Selection bits
 12962                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12963                           ;	Fail-Safe Clock Monitor Enable bit
 12964                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12965                           ;	Internal/External Oscillator Switchover bit
 12966                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12967  300001                     	org	3145729
 12968  300001  09                 	db	9
 12969                           
 12970                           ;Config register CONFIG2L @ 0x300002
 12971                           ;	Power-up Timer Enable bit
 12972                           ;	PWRT = ON, PWRT enabled
 12973                           ;	Brown-out Reset Enable bits
 12974                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12975                           ;	Brown-out Reset Voltage bits
 12976                           ;	BORV = 3, Minimum setting 2.05V
 12977                           ;	USB Voltage Regulator Enable bit
 12978                           ;	VREGEN = OFF, USB voltage regulator disabled
 12979  300002                     	org	3145730
 12980  300002  18                 	db	24
 12981                           
 12982                           ;Config register CONFIG2H @ 0x300003
 12983                           ;	Watchdog Timer Enable bit
 12984                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12985                           ;	Watchdog Timer Postscale Select bits
 12986                           ;	WDTPS = 32768, 1:32768
 12987  300003                     	org	3145731
 12988  300003  1E                 	db	30
 12989                           
 12990                           ; Padding undefined space
 12991  300004                     	org	3145732
 12992  300004  FF                 	db	255
 12993                           
 12994                           ;Config register CONFIG3H @ 0x300005
 12995                           ;	CCP2 MUX bit
 12996                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12997                           ;	PORTB A/D Enable bit
 12998                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12999                           ;	Low-Power Timer 1 Oscillator Enable bit
 13000                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13001                           ;	MCLR Pin Enable bit
 13002                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 13003  300005                     	org	3145733
 13004  300005  81                 	db	129
 13005                           
 13006                           ;Config register CONFIG4L @ 0x300006
 13007                           ;	Stack Full/Underflow Reset Enable bit
 13008                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 13009                           ;	Single-Supply ICSP Enable bit
 13010                           ;	LVP = OFF, Single-Supply ICSP disabled
 13011                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 13012                           ;	ICPRT = OFF, ICPORT disabled
 13013                           ;	Extended Instruction Set Enable bit
 13014                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13015                           ;	Background Debugger Enable bit
 13016                           ;	DEBUG = 0x1, unprogrammed default
 13017  300006                     	org	3145734
 13018  300006  80                 	db	128
 13019                           
 13020                           ; Padding undefined space
 13021  300007                     	org	3145735
 13022  300007  FF                 	db	255
 13023                           
 13024                           ;Config register CONFIG5L @ 0x300008
 13025                           ;	Code Protection bit
 13026                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 13027                           ;	Code Protection bit
 13028                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 13029                           ;	Code Protection bit
 13030                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 13031                           ;	Code Protection bit
 13032                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 13033  300008                     	org	3145736
 13034  300008  0F                 	db	15
 13035                           
 13036                           ;Config register CONFIG5H @ 0x300009
 13037                           ;	Boot Block Code Protection bit
 13038                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 13039                           ;	Data EEPROM Code Protection bit
 13040                           ;	CPD = OFF, Data EEPROM is not code-protected
 13041  300009                     	org	3145737
 13042  300009  C0                 	db	192
 13043                           
 13044                           ;Config register CONFIG6L @ 0x30000A
 13045                           ;	Write Protection bit
 13046                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 13047                           ;	Write Protection bit
 13048                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 13049                           ;	Write Protection bit
 13050                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 13051                           ;	Write Protection bit
 13052                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 13053  30000A                     	org	3145738
 13054  30000A  0F                 	db	15
 13055                           
 13056                           ;Config register CONFIG6H @ 0x30000B
 13057                           ;	Configuration Register Write Protection bit
 13058                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 13059                           ;	Boot Block Write Protection bit
 13060                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 13061                           ;	Data EEPROM Write Protection bit
 13062                           ;	WRTD = OFF, Data EEPROM is not write-protected
 13063  30000B                     	org	3145739
 13064  30000B  E0                 	db	224
 13065                           
 13066                           ;Config register CONFIG7L @ 0x30000C
 13067                           ;	Table Read Protection bit
 13068                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13069                           ;	Table Read Protection bit
 13070                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13071                           ;	Table Read Protection bit
 13072                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13073                           ;	Table Read Protection bit
 13074                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13075  30000C                     	org	3145740
 13076  30000C  0F                 	db	15
 13077                           
 13078                           ;Config register CONFIG7H @ 0x30000D
 13079                           ;	Boot Block Table Read Protection bit
 13080                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 13081  30000D                     	org	3145741
 13082  30000D  40                 	db	64
 13083                           tosu	equ	0xFFF
 13084                           tosh	equ	0xFFE
 13085                           tosl	equ	0xFFD
 13086                           stkptr	equ	0xFFC
 13087                           pclatu	equ	0xFFB
 13088                           pclath	equ	0xFFA
 13089                           pcl	equ	0xFF9
 13090                           tblptru	equ	0xFF8
 13091                           tblptrh	equ	0xFF7
 13092                           tblptrl	equ	0xFF6
 13093                           tablat	equ	0xFF5
 13094                           prodh	equ	0xFF4
 13095                           prodl	equ	0xFF3
 13096                           indf0	equ	0xFEF
 13097                           postinc0	equ	0xFEE
 13098                           postdec0	equ	0xFED
 13099                           preinc0	equ	0xFEC
 13100                           plusw0	equ	0xFEB
 13101                           fsr0h	equ	0xFEA
 13102                           fsr0l	equ	0xFE9
 13103                           wreg	equ	0xFE8
 13104                           indf1	equ	0xFE7
 13105                           postinc1	equ	0xFE6
 13106                           postdec1	equ	0xFE5
 13107                           preinc1	equ	0xFE4
 13108                           plusw1	equ	0xFE3
 13109                           fsr1h	equ	0xFE2
 13110                           fsr1l	equ	0xFE1
 13111                           bsr	equ	0xFE0
 13112                           indf2	equ	0xFDF
 13113                           postinc2	equ	0xFDE
 13114                           postdec2	equ	0xFDD
 13115                           preinc2	equ	0xFDC
 13116                           plusw2	equ	0xFDB
 13117                           fsr2h	equ	0xFDA
 13118                           fsr2l	equ	0xFD9
 13119                           status	equ	0xFD8

Data Sizes:
    Strings     84
    Constant    0
    Data        55
    BSS         162
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    130     157
    BANK1           256     68     237
    BANK2           256      0      20
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1366_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[12]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character3(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _USART_Init->___fltol
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_LCD_MSdelay
    _LCD_Char->_LCD_MSdelay
    _Alarm_Status->_PlayCancion
    _USART_SendString->_USART_TransmitChar
    _PlayCancion->_play
    _play->_delay_us

Critical Paths under _main in BANK0

    _main->_RTC_Calendario
    _Sunny_State->_sprintf
    _Rainy_State->_sprintf
    _RTC_Calendario->_sprintf
    _Estados->_ReadADC
    _Cloudy_State->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_RTC_Calendario

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  213502
                                            126 BANK0      4     4      0
                       _Alarm_Status
                       _Cloudy_State
                            _Estados
                           _I2C_Init
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                     _RTC_Calendario
                        _Rainy_State
                        _Sunny_State
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4    6309
                                              0 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Sunny_State                                          0     0      0   48115
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                        _PlayCancion
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Rainy_State                                          0     0      0   46113
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendario                                      71    71      0   49072
                                            124 BANK0      2     2      0
                                              0 BANK1     68    68      0
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                         _LCD_String
                      _LCD_String_xy
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1444
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1444
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Estados                                              6     4      2   12024
                                              6 BANK0      6     4      2
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _ReadLUZ                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              6     4      2    9065
                                              0 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (1) _Cloudy_State                                         0     0      0   46113
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   38827
                                            108 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   36796
                                            100 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   36408
                                             68 BANK0     32    26      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5327
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   25204
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             68 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             84 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3193
                                             84 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2718
                                             68 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2310
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2311
                                             43 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    3948
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    1853
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     2      2    1850
                                              8 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     744
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0     744
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (5) _LCD_MSdelay                                          6     4      2     700
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Alarm_Status                                         0     0      0    2145
                        _PlayCancion
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (2) _USART_SendString                                     2     0      2     143
                                              1 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (3) _USART_TransmitChar                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PlayCancion                                          2     2      0    2002
                                             18 COMRAM     2     2      0
                               _play
 ---------------------------------------------------------------------------------
 (3) _play                                                13     7      6    2002
                                              5 COMRAM    13     7      6
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarm_Status
     _PlayCancion
       _play
         _delay_us
     _USART_SendString
       _USART_TransmitChar
   _Cloudy_State
     _LCD_Char
       _LCD_MSdelay
     _LCD_Command
       _LCD_MSdelay
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ReadLUZ (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _Estados
     _ReadADC
       ___fladd
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
     _ReadLUZ
     ___flge
     ___xxtofl
   _I2C_Init
   _LCD_Clear
     _LCD_Command
     _LCD_MSdelay
   _LCD_Init
     _LCD_Command
     _LCD_MSdelay
   _LCD_MSdelay
   _RTC_Calendario
     _I2C_Init
     _I2C_Stop
     _LCD_Clear
     _LCD_Init
     _LCD_MSdelay
     _LCD_String
     _LCD_String_xy
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
   _Rainy_State
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
     _LCD_String_xy
     _sprintf
   _Sunny_State
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
     _LCD_String_xy
     _PlayCancion
     _sprintf
   _USART_Init
     ___fladd
     ___fldiv
     ___fltol
     ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      14       9        7.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     44      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FD      20        0.0%
DATA                 0      0     1FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 11 09:25:04 2021

                          ?_LCD_MSdelay 0001                            ___fldiv@aexp 0044  
                          ___fldiv@bexp 0043                                       _i 005F  
                    __size_of_I2C_Ready 0012                            ___fldiv@sign 003C  
                    __size_of_I2C_Start 002E                            ?_LCD_Command 0001  
                           _SSPSTATbits 000FC7                      __size_of_I2C_Write 0022  
                                    l98 49FE                            ___awdiv@sign 0006  
                  __size_of_Sunny_State 005E                     ___wmul@multiplicand 0003  
                           ?_LCD_String 0009                         _LCD_Custom_Char 464C  
RTC_Read_Calendar@read_calendar_address 0004                                     l101 45B4  
                                   l110 430A                                     l104 4600  
                                   l115 47A2                                     l132 464A  
                                   l124 4692                                     l220 412E  
                                   l118 4B22                                     l217 4104  
                                   l410 4ABC                                     l402 47E4  
                                   l330 46D8                                     l219 4112  
                                   l172 3878                                     l404 47F2  
                                   l413 4B24                                     l333 441A  
                                   l254 49AA                                     l174 3886  
                                   l406 4812                                     l430 4A04  
                                   l175 393C                                     l415 4B32  
                                   l407 4818                                     l256 49CE  
                                   l264 3E28                                     l416 4B34  
                                   l432 4A12                                     l441 4A5A  
                                   l345 2A2E                                     l434 4A2C  
                                   l450 4AE6                                     l267 3634  
                                   l531 43C0                                     l517 2F86  
                                   l461 4B0E                                     l437 4A32  
                                   l525 424E                                     l534 4B46  
                                   l454 4AA2                                     l446 4AD6  
                                   l439 4A40                                     l528 4474  
                                   l464 4AEC                                     l448 4AE4  
                                   l458 4B00                                     l467 4AFA  
                                   l581 4AD2                                     l575 40C6  
                                   l840 3F88                                     l593 499C  
                                   l578 4AC0                                     l827 3D64  
                                   l596 4A80                                     l861 37F8  
                                   l870 48C0                                     l855 4032  
                                   l866 383E                                     l893 373A  
                                   _PEN 007E2A                                     _Day 0106  
                       __end_of_I2C_Ack 4B10                                     _pad 3BDC  
                                   _min 010A                                     _sec 010C  
                                   _luz 00EA                            ___awmod@sign 0006  
                                   wreg 000FE8                            ___flmul@aexp 0024  
                          ___flmul@bexp 0025                            ___flmul@sign 001F  
                          ___flmul@temp 002A                            ___flmul@prod 0026  
                           LCD_Char@dat 0008                            ___fltol@exp1 005E  
                                  l1210 2040                                    l1220 229C  
                                  l1124 1CAA                                    l1141 1DC4  
                                  l1133 1F7A                                    l1125 1C98  
                                  l1214 23A4                                    l1150 1E94  
                                  l1126 1C5E                                    l1151 1E82  
                                  l1217 2236                                    l1322 3C64  
                                  l1227 2366                                    l1219 22AE  
                                  l1251 31F0                                    l1180 259E  
                                  l1324 3CA0                                    l1166 471E  
                                  l1342 14AC                                    l1422 2A68  
                                  l1254 334C                                    l1191 265C  
                                  l1183 2562                                    l1503 3A3A  
                                  l1319 3C22                                    l1431 2B06  
                                  l1192 264A                                    l1360 0C42  
                                  l1424 2A70                                    l1265 32E4  
                                  l1178 273E                                    l4002 4720  
                                  l4010 4932                                    l1274 44C6  
                                  l1258 3288                                    l1603 4366  
                                  l1532 34D4                                    l4100 2526  
                                  l4004 472C                                    l4012 493E  
                                  l4020 4852                                    l1189 25E4  
                                  l1541 3198                                    l1613 3B10  
                                  l1445 2CA4                                    l1461 15A0  
                                  l4030 4A78                                    l4110 256C  
                                  l4102 252E                                    l4006 473E  
                                  l4014 4942                                    l1535 34DC  
                                  l1623 41E8                                    l1551 47DE  
                                  l1447 2D08                                    l4120 25C4  
                                  l4112 258A                                    l4104 253E  
                                  l4040 23C2                                    l4200 201A  
                                  l1544 30DC                                    l4008 4742  
                                  l4016 495A                                    l4024 481A  
                                  l1609 4966                                    l1641 42AC  
                                  l5010 3420                                    l5002 33C6  
                                  l4130 2602                                    l4122 25CA  
                                  l4114 258C                                    l4106 2552  
                                  l4042 23D2                                    l4050 23FC  
                                  l4034 23A6                                    l4202 202A  
                                  l1571 4888                                    l1483 191A  
                                  l4028 4A5C                                    l5020 34A6  
                                  l5004 33DC                                    l4140 266C  
                                  l4132 2606                                    l4124 25D4  
                                  l4116 259C                                    l4108 2560  
                                  l4060 2428                                    l4052 240C  
                                  l4044 23E2                                    l4036 23B2  
                                  l4220 20AC                                    l4212 2074  
                                  l4204 2030                                    l1628 41F0  
                                  l1388 1082                                    l1636 42A4  
                                  l1476 1ABA                                    l5100 14F2  
                                  l1492 4188                                    l1557 48F8  
                                  l1565 4518                                    l1493 4190  
                                  l5022 34B8                                    l5014 3456  
                                  l5006 33E4                                    l4310 3CA6  
                                  l4150 26CE                                    l4142 2678  
                                  l4134 2614                                    l4126 25E2  
                                  l4118 25AE                                    l4062 2438  
                                  l4070 2462                                    l4054 2412  
                                  l4046 23F2                                    l4038 23C0  
                                  l4230 20F6                                    l4222 20C4  
                                  l4214 2080                                    l4206 2050  
                                  l4302 46DA                                    l5030 3A66  
                                  l5102 14F6                                    l1647 4850  
                                  l5008 33EC                                    l4320 3CD6  
                                  l4312 3CB4                                    l4160 272C  
                                  l4152 26E4                                    l4144 2686  
                                  l4136 2642                                    l4128 25F4  
                                  l4080 24A4                                    l4072 2472  
                                  l4064 2448                                    l4056 2418  
                                  l4048 23F4                                    l4400 4030  
                                  l4240 214C                                    l4232 2106  
                                  l4224 20D0                                    l4216 208A  
                                  l4208 2060                                    l4304 46EA  
                                  l5040 3AB4                                    l5200 199A  
                                  l5120 1528                                    l5112 151C  
                                  l5104 1502                                    l5050 45C8  
                                  l5018 3494                                    l4330 3D04  
                                  l4322 3CDA                                    l4314 3CBC  
                                  l4162 2732                                    l4154 26FE  
                                  l4146 26B0                                    l4074 2488  
                                  l4066 2458                                    l4058 2426  
                                  l4410 37A8                                    l4250 21F0  
                                  l4242 2168                                    l4234 2112  
                                  l4226 20DC                                    l4218 20A0  
                                  l1586 3BDA                                    l1594 4762  
                                  l5042 3AC6                                    l5034 3A72  
                                  l5210 1A46                                    l5202 19D8  
                                  l5106 1504                                    l5130 158E  
                                  l5060 45DC                                    l5052 45CA  
                                  l4340 3D38                                    l4332 3D12  
                                  l4324 3CE2                                    l4316 3CC0  
                                  l4308 3CA2                                    l4164 2734  
                                  l4156 271A                                    l4148 26B4  
                                  l4092 24DC                                    l4076 2498  
                                  l4084 24B8                                    l4068 245A  
                                  l4420 3836                                    l4412 37B8  
                                  l4404 373C                                    l4260 2246  
                                  l4252 21FE                                    l4244 2174  
                                  l4236 2122                                    l4228 20EA  
                                  l4180 1FA8                                    l4172 1F7C  
                                  l4500 393E                                    l5044 3AEE  
                                  l5036 3A80                                    l5028 3A3C  
                                  l5212 1A5A                                    l5140 15EA  
                                  l5132 15AE                                    l5124 152E  
                                  l5116 1522                                    l5108 1516  
                                  l5300 4A26                                    l1597 4B48  
                                  l5070 49AC                                    l5062 45EE  
                                  l5054 45CC                                    l4342 3D3E  
                                  l4334 3D18                                    l4326 3CF4  
                                  l4318 3CCE                                    l4158 271E  
                                  l4094 24F6                                    l4086 24C8  
                                  l4078 24A0                                    l4422 383C  
                                  l4414 37C6                                    l4406 376A  
                                  l4262 2254                                    l4254 221C  
                                  l4246 2190                                    l4238 213C  
                                  l4190 1FE4                                    l4182 1FB8  
                                  l4174 1F88                                    l4430 48B0  
                                  l4502 395E                                    l5038 3A98  
                                  l5206 1A14                                    l5142 160E  
                                  l5134 15B0                                    l5222 1A84  
                                  l5310 4A5A                                    l5072 49B0  
                                  l5064 45F0                                    l5056 45CE  
                                  l5048 45B8                                    l5240 457E  
                                  l4336 3D2E                                    l4328 3CFC  
                                  l4344 3D44                                    l4360 3EF8  
                                  l4352 3EDA                                    l4096 2506  
                                  l4088 24C8                                    l4416 37D8  
                                  l4408 377A                                    l4272 22BE  
                                  l4280 2306                                    l4264 2258  
                                  l4256 2226                                    l4248 21BA  
                                  l4192 1FEA                                    l4184 1FC8  
                                  l4176 1F96                                    l3800 1ABC  
                                  l4440 3660                                    l4504 399C  
                                  l4512 39DC                                    l5224 1AA8  
                                  l5208 1A38                                    l5216 1A68  
                                  l5160 1734                                    l5152 16BE  
                                  l5144 1648                                    l5136 15D4  
                                  l5128 153A                                    l5400 49E0  
                                  l5320 4806                                    l5080 4A9A  
                                  l5304 4A30                                    l5330 4AC0  
                                  l4602 4616                                    l5066 45F2  
                                  l5058 45D0                                    l5250 45A2  
                                  l5242 4580                                    l4346 3D54  
                                  l4338 3D36                                    l4370 3F30  
                                  l4362 3F06                                    l4354 3EDE  
                                  l4098 2516                                    l4418 37E6  
                                  l4290 237A                                    l4282 2320  
                                  l4274 22CA                                    l4266 2266  
                                  l4258 2234                                    l4194 1FF8  
                                  l4186 1FCE                                    l4178 1F98  
                                  l4426 488A                                    l3810 1AF8  
                                  l3802 1AC8                                    l4450 36AE  
                                  l4442 368A                                    l4434 3636  
                                  l4514 39EE                                    l4506 39C4  
                                  l4522 430C                                    l4530 41C8  
                                  l5218 1A76                                    l5170 17AC  
                                  l5162 1744                                    l5146 1668  
                                  l5138 15DC                                    l5154 16D0  
                                  l5410 4B10                                    l5402 49E6  
                                  l5090 4AFC                                    l4610 4B24  
                                  l5322 480E                                    l5074 4A84  
                                  l5068 499E                                    l5332 4ACE  
                                  l4604 461A                                    l5252 45A4  
                                  l5244 4582                                    l5236 456C  
                                  l5260 42D6                                    l5420 4788  
                                  l5412 4766                                    l4348 3D5C  
                                  l4372 3F3E                                    l4380 3F68  
                                  l4364 3F0E                                    l4356 3EEC  
                                  l4292 2388                                    l4284 2334  
                                  l4276 22D8                                    l4268 2294  
                                  l4196 1FFA                                    l4188 1FDE  
                                  l4428 48A0                                    l3900 1CB8  
                                  l3820 1B28                                    l3812 1B08  
                                  l3804 1AD6                                    l4460 36DA  
                                  l4444 368C                                    l4436 364C  
                                  l4508 39D0                                    l4540 2FFE  
                                  l4524 431C                                    l4532 41DA  
                                  l4700 0BF0                                    l4620 0886  
                                  l4612 0856                                    l5172 17DC  
                                  l5164 1776                                    l5156 16F2  
                                  l5148 1676                                    l5340 3200  
                                  l5404 49EC                                    l5092 4AE8  
                                  l5324 4816                                    l5316 47E2  
                                  l5076 4A88                                    l5308 4A54  
                                  l5500 46A8                                    l5270 3DA4  
                                  l4606 4630                                    l5254 45A6  
                                  l5246 4584                                    l5238 457C  
                                  l5430 466A                                    l5262 42DA  
                                  l5422 4790                                    l5414 4766  
                                  l4382 3F78                                    l4374 3F54  
                                  l4366 3F20                                    l4358 3EF4  
                                  l4390 3FB8                                    l4294 238A  
                                  l4286 234E                                    l4278 2302  
                                  l4198 200A                                    l3910 1CFA  
                                  l3902 1CC8                                    l3830 1B52  
                                  l3822 1B3A                                    l3814 1B0A  
                                  l3806 1AD8                                    l4470 370A  
                                  l4446 369C                                    l4518 3A32  
                                  l4550 30CC                                    l4542 3012  
                                  l4526 4192                                    l4702 0C02  
                                  l4710 0C4E                                    l4630 08DC  
                                  l4622 08AA                                    l4614 0860  
                                  l5182 18A4                                    l5166 1788  
                                  l5158 1702                                    l5094 14AE  
                                  l5350 323E                                    l5342 3216  
                                  l5334 319C                                    l5406 49F2  
                                  l5318 47F6                                    l5086 4AA0  
                                  l5078 4A8C                                    l5510 43E6  
                                  l5502 46B8                                    ?_pad 0011  
                                  l5280 3DBE                                    l5272 3DA6  
                                  l5264 3D66                                    l4608 4634  
                                  l5248 4590                                    l5440 4682  
                                  l5256 42AE                                    l5424 4796  
                                  l5416 4776                                    l4384 3F80  
                                  l4376 3F5C                                    l4368 3F28  
                                  l4392 3FC8                                    l4288 236A  
                                  l4296 2390                                    l3920 1D28  
                                  l3912 1D08                                    l3832 1B62  
                                  l3840 1B8C                                    l3824 1B3C  
                                  l3808 1AE8                                    l3816 1B12  
                                  l4472 371A                                    l4456 36C6  
                                  l4448 36A0                                    l4560 3188  
                                  l4544 3020                                    l4552 3100  
                                  l4536 2F88                                    l4480 3BEC  
                                  l4800 1124                                    l4720 0C8E  
                                  l4704 0C14                                    l4640 090A  
                                  l4632 08EE                                    l4624 08B4  
                                  l4616 0870                                    l5184 18B6  
                                  l5192 192E                                    l5168 179E  
                                  l5176 1808                                    l5096 14D2  
                                  l5520 4488                                    l5360 32C6  
                                  l5352 3270                                    l5336 31AC  
                                  l5408 49F8                                    l5328 4AD4  
                                  l5512 43F6                                    l5504 46C8  
                                  l5600 28CA                                    l5282 3DCA  
                                  l5274 3DA8                                    l5266 3D76  
                                  l5530 4968                                    l5426 464E  
                                  l5258 42B2                                    l5418 477E  
                                  l4378 3F62                                    l4394 3FF6  
                                  l4298 2394                                    l3930 1D94  
                                  l3922 1D32                                    l3914 1D14  
                                  l3906 1CDC                                    l3850 1BC4  
                                  l3842 1B9C                                    l3834 1B72  
                                  l3826 1B42                                    l3818 1B22  
                                  l4474 372A                                    l4466 36EE  
                                  l4458 36D0                                    l4554 313C  
                                  l4538 2FA8                                    l4490 3C42  
                                  l4482 3C00                                    l4810 116C  
                                  l4802 1136                                    l4730 0CEA  
                                  l4722 0CC4                                    l4706 0C1C  
                                  l4650 097E                                    l4634 08FA  
                                  l4642 0910                                    l4626 08BC  
                                  l4618 087E                                    l5194 1952  
                                  l5186 18EA                                    l5178 1836  
                                  l5098 14E0                                    l5522 4490  
                                  l5370 331C                                    l5362 32D4  
                                  l5354 3272                                    l5346 322A  
                                  l5338 31BA                                    l5450 3876  
                                  l5442 3840                                    l5514 4406  
                                  l5506 43C4                                    l5610 292E  
                                  l5602 28D0                                    l5292 3DEE  
                                  l5284 3DD2                                    l5276 3DB4  
                                  l5268 3D90                                    l5532 496C  
                                  l5436 466E                                    l5428 465E  
                                  l4396 4006                                    l4388 3F8A  
                                  l3932 1DA4                                    l3916 1D18  
                                  l3908 1CEC                                    l3924 1D38  
                                  l3860 1BD8                                    l3852 1BC8  
                                  l3844 1BAE                                    l3836 1B82  
                                  l3828 1B50                                    l4468 36FA  
                                  l4556 3150                                    l4548 3090  
                                  l4492 3C46                                    l4484 3C0E  
                                  l4900 141C                                    l4820 11A2  
                                  l4812 117C                                    l4804 1144  
                                  l4740 0D2E                                    l4732 0CFC  
                                  l4724 0CCC                                    l4716 0C60  
                                  l4708 0C36                                    l4652 099A  
                                  l4644 0936                                    l4660 09E4  
                                  l4636 0902                                    l4628 08CE  
                                  l4564 47A4                                    l4572 4286  
                                  l5196 1976                                    l5380 4130  
                                  l5524 4498                                    l5372 332C  
                                  l5364 32F2                                    l5356 327E  
                                  l5348 3232                                    l5452 388E  
                                  l5444 3844                                    l5460 40C8  
                                  l5700 2F18                                    l5516 4416  
                                  l5508 43D6                                    l5612 2940  
                                  l5604 28D4                                    l5540 4038  
                                  l5294 3E0A                                    l5286 3DDE  
                                  l5278 3DBC                                    l5534 497C  
                                  l5438 4680                                    l4590 4512  
                                  l4582 44C8                                    l4398 402A  
                                  l3950 1E26                                    l3942 1DFE  
                                  l3926 1D5E                                    l3934 1DB4  
                                  l3918 1D26                                    l3870 1BEC  
                                  l3862 1BDC                                    l3854 1BCC  
                                  l3846 1BBC                                    l3838 1B84  
                                  l4558 3178                                    l3790 3B36  
                                  l4494 3C74                                    l4486 3C1A  
                                  l4478 3BDC                                    l4910 1476  
                                  l4830 11D6                                    l4822 11A6  
                                  l4814 1180                                    l4806 114C  
                                  l4750 0D78                                    l4742 0D46  
                                  l4734 0D0A                                    l4718 0C72  
                                  l4726 0CD0                                    l4670 0A6E  
                                  l4662 0A0A                                    l4654 09B2  
                                  l4638 0906                                    l4574 4298  
                                  l5198 198C                                    l5382 4138  
                                  l5526 44B4                                    l5518 4476  
                                  l5374 333A                                    l5366 32F4  
                                  l5358 32BA                                    l5454 389A  
                                  l5446 3872                                    l5470 411A  
                                  l5462 40CC                                    l5702 2F4A  
                                  l5390 4AA8                                    l5622 296C  
                                  l5614 294C                                    l5606 28F2  
                                  l5550 2746                                    l5542 40BE  
                                  l5288 3DE6                                    l5480 3508  
                                  l5536 4980                                    l4584 44CC  
                                  l3952 1E2E                                    l3944 1E08  
                                  l3936 1DDA                                    l3928 1D92  
                                  l3960 1E52                                    l3880 1C00  
                                  l3872 1BF0                                    l3864 1BE0  
                                  l3856 1BD0                                    l3848 1BC0  
                                  l3792 3B40                                    l4496 3C88  
                                  l4488 3C2E                                    l4912 1486  
                                  l4904 1450                                    l4840 1274  
                                  l4832 11DA                                    l4824 11AC  
                                  l4816 1186                                    l4808 115E  
                                  l4752 0D8C                                    l4760 0E82  
                                  l4744 0D58                                    l4736 0D0E  
                                  l4728 0CD8                                    l4680 0AA4  
                                  l4656 09BC                                    l4648 096C  
                                  l4568 4250                                    l4920 2A30  
                                  l5384 4146                                    l5376 333C  
                                  l5368 32F8                                    l5456 3934  
                                  l5448 3874                                    l5472 4126  
                                  l5464 40FE                                    l5704 2F7C  
                                  l5392 4AB8                                    l5296 4A02  
                                  l5640 299C                                    l5616 295C  
                                  l5608 2910                                    l5560 2768  
                                  l5552 2758                                    l5720 424A  
                                  l5712 41F2                                    l5544 40C2  
                                  l5490 35CE                                    l5482 353C  
                                  l4594 4602                                    l4578 48C2  
                                  l4586 44E0                                    l3970 1EA4  
                                  l3962 1E56                                    l3954 1E32  
                                  l3946 1E16                                    l3938 1DEA  
                                  l3890 1C78                                    l3882 1C2A  
                                  l3874 1BF4                                    l3866 1BE4  
                                  l3858 1BD4                                    l3794 3B5E  
                                  l3786 3B12                                    l4914 148C  
                                  l4906 1462                                    l4850 12D2  
                                  l4818 1192                                    l4826 11B2  
                                  l4834 11E0                                    l4842 1278  
                                  l4770 0F4E                                    l4762 0EA0  
                                  l4754 0DF0                                    l4738 0D20  
                                  l4746 0D60                                    l4690 0B6E  
                                  l4666 0A40                                    l4930 2A8E  
                                  l4922 2A40                                    l5386 416C  
                                  l5730 445A                                    l5466 4100  
                                  l5394 4ABA                                    l5634 298C  
                                  l5570 27AE                                    l5562 2774  
                                  l5554 275C                                    l5714 41F8  
                                  l5538 4034                                    l5492 35EA  
                                  l5484 3558                                    l5476 34DE  
                                  l4596 460E                                    l4588 450E  
                                  l3980 1F0A                                    l3972 1EB0  
                                  l3964 1E64                                    l3956 1E42  
                                  l3948 1E18                                    l3892 1C7C  
                                  l3884 1C46                                    l3876 1BF8  
                                  l3868 1BE8                                    l3796 3B94  
                                  l3788 3B24                                    l4908 146E  
                                  l4860 1310                                    l4852 12E2  
                                  l4844 1296                                    l4836 1238  
                                  l4828 11C4                                    l4780 0FFE  
                                  l4772 0F5E                                    l4764 0ED4  
                                  l4756 0E48                                    l4748 0D68  
                                  l4692 0BA2                                    l4684 0ADA  
                                  l4668 0A52                                    l4940 2ACE  
                                  l4932 2AAE                                    l4924 2A42  
                                  l5724 441C                                    l5468 4102  
                                  l5388 4AA4                                    l5396 49D0  
                                  l5652 29BC                                    l5628 297C  
                                  l5660 29CC                                    l5580 2824  
                                  l5572 27C0                                    l5564 277A  
                                  l5556 2760                                    l5548 2740  
                                  l5740 43A6                                    l5716 421E  
                                  l5494 361E                                    l5486 358C  
                                  l5478 34FA                                    l3990 1F52  
                                  l3982 1F1A                                    l3974 1EBE  
                                  l3966 1E7A                                    l3958 1E44  
                                  l3894 1C8A                                    l3886 1C56  
                                  l3878 1BFC                                    l4870 1346  
                                  l4862 1320                                    l4854 12E6  
                                  l4846 12B2                                    l4838 126C  
                                  l4790 106E                                    l4782 1032  
                                  l4774 0F6E                                    l4766 0F06  
                                  l4758 0E7C                                    l4694 0BAA  
                                  l4686 0B0E                                    l4678 0A8A  
                                  l4950 2B4C                                    l4942 2AEA  
                                  l4934 2AB6                                    l4926 2A5C  
                                  l5726 4422                                    l5670 2D42  
                                  l5398 49D4                                    l5646 29AC  
                                  l5590 2878                                    l5582 2836  
                                  l5574 27CA                                    l5566 278A  
                                  l5558 2764                                    l5734 4368  
                                  l5718 4230                                    l5750 3E2A  
                                  l5488 359A                                    l5744 4B36  
                                  l3992 1F54                                    l3984 1F3A  
                                  l3976 1EF8                                    l3896 1C8C  
                                  l3888 1C6C                                    l4880 13A2  
                                  l4872 1352                                    l4864 1328  
                                  l4856 12F6                                    l4848 12C4  
                                  l4792 107A                                    l4784 1046  
                                  l4776 0FA2                                    l4768 0F1C  
                                  l4688 0B14                                    l4696 0BDC  
                                  l4960 2BBC                                    l4944 2AFA  
                                  l4936 2AC0                                    l4928 2A86  
                                  l5728 4448                                    l5680 2E0C  
                                  l5672 2D68                                    l5592 2896  
                                  l5584 2842                                    l5576 27E8  
                                  l5568 2798                                    l5736 436E  
                                  l5760 3E54                                    l5752 3E32  
                                  l5746 4B42                                    l3994 1F5A  
                                  l3986 1F3E                                    l3978 1EFA  
                                  l3898 1C96                                    l4890 13EC  
                                  l4874 1358                                    l4882 13A8  
                                  l4866 1336                                    l4858 1308  
                                  l4794 109E                                    l4778 0FF8  
                                  l4786 104A                                    l4698 0BEC  
                                  l4970 2C60                                    l4962 2BC2  
                                  l4954 2B86                                    l4938 2AC6  
                                  l5690 2EA6                                    l5674 2D9A  
                                  l5666 2D0A                                    l5498 4696  
                                  l5594 28B4                                    l5578 2806  
                                  l5586 2852                                    l5738 4394  
                                  l5762 3E64                                    l5754 3E36  
                                  l3996 1F68                                    l3988 1F4C  
                                  l4892 13F8                                    l4884 13BA  
                                  l4876 137E                                    l4868 133E  
                                  l4796 1102                                    l4788 105A  
                                  l4980 2CCA                                    l4972 2C7A  
                                  l4964 2BC8                                    l4956 2B98  
                                  l4948 2B3A                                    l5692 2ED8  
                                  l5676 2DCC                                    l5684 2E10  
                                  l5668 2D1C                                    l5588 285A  
                                  l5764 3E6C                                    l5772 3E84  
                                  l5756 3E4C                                    l4990 3366  
                                  l3998 1F6A                                    l4894 1400  
                                  l4886 13D4                                    l4878 139A  
                                  l4798 1112                                    l4982 2CE0  
                                  l4974 2C94                                    l4958 2BAC  
                                  l4966 2C26                                    l5686 2E42  
                                  l5678 2DFE                                    l5766 3E74  
                                  l5774 3EC2                                    l5758 3E50  
                                  l4992 336A                                    l4896 1410  
                                  l4888 13DA                                    l4976 2CB4  
                                  l4968 2C42                                    l5688 2E74  
                                  l5880 29F0                                    l5768 3E7C  
                                  l4994 3386                                    l4986 334E  
                                  l4898 1416                                    l4978 2CBA  
                                  l5882 1560                                    l5698 2EE6  
                                  l5884 340A                                    l4996 33BC  
                                  l4988 3362                                    l4998 33C0  
                                  l5878 3E9C                                    STR_1 0852  
                                  STR_2 084F                                    STR_3 0824  
                                  STR_4 082C                                    STR_5 082C  
                                  STR_6 0824                                    STR_7 082C  
                                  STR_8 082C                                    STR_9 0828  
                                  u3110 3B24                                    u3111 3B20  
                                  u4000 234E                                    u3200 1B62  
                                  u3120 3B36                                    _LATD 000F8C  
                                  u4001 234A                                    u3201 1B5E  
                                  u3121 3B32                                    u4010 2388  
                                  u3210 1B72                                    u3130 3B5E  
                                  u4011 2384                                    u3211 1B6E  
                                  u3131 3B5A                                    u4020 3CB4  
                                  u4100 3F20                                    u3300 1CB8  
                                  u3220 1BAE                                    u3140 3B94  
                                  u4021 3CB0                                    u4101 3F1C  
                                  u3301 1CB4                                    u3221 1BAA  
                                  u3141 3B90                                    u4030 3CCE  
                                  u4110 3F3E                                    u3310 1CC8  
                                  u3230 1BBC                                    u3150 1AD6  
                                  u4031 3CCA                                    u4111 3F3A  
                                  u3311 1CC4                                    u3231 1BB8  
                                  u3151 1AD2                                    u4040 3CF4  
                                  u4120 3F54                                    u4200 37E6  
                                  u3400 1E26                                    u3320 1CFA  
                                  u3240 1C2A                                    u3160 1AE8  
                                  u5000 0FF8                                    u4041 3CF0  
                                  u4121 3F50                                    u4201 37E2  
                                  u3401 1E22                                    u3321 1CF6  
                                  u3241 1C26                                    u3161 1AE4  
                                  u5001 0FF4                                    u4050 3D12  
                                  u4130 3F78                                    u4210 3836  
                                  u3410 1E42                                    u3330 1D08  
                                  u3250 1C42                                    u3170 1AF8  
                                  u5010 1046                                    u4051 3D0E  
                                  u4131 3F74                                    u4211 3832  
                                  u3411 1E3E                                    u3331 1D04  
                                  u3251 1C3C                                    u3171 1AF4  
                                  u5011 1042                                    u4060 3D2E  
                                  u4140 3FB8                                    u4220 48A0  
                                  u3500 1F1A                                    u3420 1E52  
                                  u3340 1D26                                    u3260 1C44  
                                  u3180 1B3A                                    u4300 3BEC  
                                  u5100 1296                                    u5020 106E  
                                  u4061 3D2A                                    u4141 3FB4  
                                  u4221 489C                                    u3501 1F16  
                                  u3421 1E4E                                    u3341 1D22  
                                  u3181 1B36                                    u4301 3BE8  
                                  u5101 1292                                    u5021 106A  
                                  u4070 3D54                                    u4150 3FF6  
                                  u3510 1F3A                                    u3430 1E64  
                                  u3350 1D5E                                    u3270 1C6C  
                                  u3190 1B50                                    u4230 364C  
                                  u4310 3C0E                                    u5110 12B2  
                                  u5030 1112                                    u4071 3D50  
                                  u4151 3FF2                                    u3511 1F36  
                                  u3431 1E60                                    u3351 1D5A  
                                  u3271 1C68                                    u3191 1B4C  
                                  u4231 3648                                    u4311 3C0A  
                                  u5111 12AE                                    u5031 110E  
                                  u6000 4692                                    u4080 3EEC  
                                  u3600 23C0                                    u4160 402A  
                                  u3520 1F4C                                    u3440 1E7A  
                                  u3360 1DA4                                    u3280 1C8A  
                                  u4240 3680                                    u4400 3A2A  
                                  u4320 3C64                                    u5200 144C  
                                  u5120 12C4                                    u5040 1124  
                                  u6001 468E                                    u4081 3EE8  
                                  u3601 23BC                                    u4161 4026  
                                  u3521 1F48                                    u3441 1E76  
                                  u3361 1DA0                                    u3281 1C86  
                                  u4321 3C60                                    u5121 12C0  
                                  u5041 1120                                    u4090 3F06  
                                  u3610 23D2                                    u4170 376A  
                                  u3530 1F68                                    u3450 1E90  
                                  u3370 1DDA                                    u3290 1CAA  
                                  u4250 36AE                                    u4330 3C74  
                                  u4410 4354                                    u5210 1462  
                                  u5130 12D2                                    u5050 1136  
                                  u6010 3886                                    u4091 3F02  
                                  u3611 23CE                                    u4171 3766  
                                  u3531 1F64                                    u3451 1E8C  
                                  u3371 1DD6                                    u3291 1CA6  
                                  u4251 36AA                                    u4331 3C70  
                                  u5211 145E                                    u5131 12CE  
                                  u5051 1132                                    u6011 3882  
                                  u3700 258A                                    u3620 23E2  
                                  u4180 37A8                                    u3460 1EA4  
                                  u3380 1DEA                                    u4260 36C2  
                                  u4340 397E                                    u4500 308C  
                                  u3540 4762                                    u4420 4366  
                                  u5140 1308                                    u5060 1144  
                                  u5300 2B82                                    u5220 2A40  
                                  u6020 4112                                    u6100 2E42  
                                  u3701 2586                                    u3621 23DE  
                                  u4181 37A4                                    u3461 1EA0  
                                  u3381 1DE6                                    u4261 36BE  
                                  u4245 3676                                    u4501 3088  
                                  u3541 475E                                    u4421 4362  
                                  u5141 1304                                    u5061 1140  
                                  u5221 2A3C                                    u6021 410E  
                                  u6101 2E3E                                    u6030 499C  
                                  u3710 25AE                                    u3630 2426  
                                  u4190 37C6                                    u3470 1EBE  
                                  u3390 1E16                                    u4270 36EA  
                                  u4350 399C                                    u4510 30B0  
                                  u3550 495A                                    u4430 41C2  
                                  u5150 1336                                    u5070 115E  
                                  u5310 2B98                                    u5230 2A5C  
                                  u6110 2E74                                    u6031 4998  
                                  u3711 25AA                                    u3631 2422  
                                  u4191 37C2                                    u3471 1EBA  
                                  u3391 1E12                                    u4271 36E6  
                                  u4351 3998                                    u3551 4956  
                                  u4431 41BC                                    u5151 1332  
                                  u5071 115A                                    u5311 2B94  
                                  u5231 2A58                                    u6111 2E70  
                                  u5400 33BC                                    u3800 26CE  
                                  u3720 25C4                                    u3640 2438  
                                  u3480 1EF8                                    u4280 370A  
                                  u4360 39C4                                    u4520 30CC  
                                  u3560 4882                                    u4440 41C4  
                                  u5160 13BA                                    u5080 116C  
                                  u4600 4298                                    u5320 2C00  
                                  u5240 2A86                                    u6120 2EA6  
                                  u5401 33B8                                    u3801 26CA  
                                  u3721 25C0                                    u3641 2434  
                                  u3481 1EF4                                    u4281 3706  
                                  u4361 39C0                                    u4345 3974  
                                  u4521 30C8                                    u4417 434A  
                                  u3561 487C                                    u5161 13B6  
                                  u5081 1168                                    u4601 4294  
                                  u5241 2A82                                    u6121 2EA2  
                                  u6041 2750                                    u4610 48F2  
                                  u5410 33D8                                    u3810 26FE  
                                  u3730 25E2                                    u3650 2448  
                                  u3490 1F0A                                    u4290 371A  
                                  u4370 39EE                                    u4530 3120  
                                  u3570 4884                                    u4450 41DA  
                                  u5170 13D4                                    u5090 11C4  
                                  u5330 2C42                                    u5250 2AEA  
                                  u6130 2ED8                                    u6050 278A  
                                  u4611 48EC                                    u5411 33D4  
                                  u3811 26FA                                    u3731 25DE  
                                  u3651 2444                                    u3491 1F06  
                                  u4291 3716                                    u4371 39EA  
                                  u4515 30A6                                    u4451 41D6  
                                  u5171 13D0                                    u5091 11C0  
                                  u5331 2C3E                                    u5251 2AE6  
                                  u6131 2ED4                                    u6051 2786  
                                  u4620 48F4                                    u5420 348E  
                                  u3820 272C                                    u3740 2602  
                                  u3660 2488                                    u3900 2060  
                                  u4540 313C                                    u4460 2FD0  
                                  u5180 13EC                                    u4700 08DC  
                                  u5500 3AEE                                    u3580 484A  
                                  u5340 2C60                                    u5260 2B34  
                                  u6140 2F18                                    u6060 2798  
                                  u5421 3488                                    u3821 2728  
                                  u3741 25FE                                    u3661 2484  
                                  u3901 205C                                    u4541 3138  
                                  u5181 13E8                                    u4701 08D8  
                                  u5501 3AEA                                    u3581 4844  
                                  u5341 2C5C                                    u5325 2BEE  
                                  u5261 2B2E                                    u6141 2F14  
                                  u6061 2794                                    u5510 49CE  
                                  u4630 44E0                                    u5430 3490  
                                  u3750 2614                                    u3670 24C8  
                                  u3910 21DA                                    u3830 1F96  
                                  u4390 3A28                                    u4550 3178  
                                  u4470 2FFE                                    u5190 144A  
                                  u4710 08EE                                    u3590 484C  
                                  u5350 2C7A                                    u5270 2B36  
                                  u6150 2F4A                                    u6070 2D9A  
                                  u5511 49CA                                    u6207 3500  
                                  u4631 44DC                                    u3751 2610  
                                  u3671 24C4                                    u3831 1F92  
                                  u4391 3A22                                    u4551 3174  
                                  u4535 3116                                    u4471 2FFA  
                                  u5191 1444                                    u4711 08EA  
                                  u5351 2C76                                    u6151 2F46  
                                  u6071 2D96                                    u4640 450E  
                                  u5440 34A6                                    u3760 2642  
                                  u3680 253E                                    u3920 2234  
                                  u3840 1FA8                                    u4480 3020  
                                  u4800 0AD6                                    u4720 0936  
                                  u4560 47D8                                    u5360 2C94  
                                  u5280 2B4C                                    u5600 16B8  
                                  u6160 2F7C                                    u6080 2DCC  
                                  u5520 4A9A                                    u6217 352E  
                                  u4641 450A                                    u5441 34A2  
                                  u3761 263E                                    u3681 253A  
                                  u3921 2230                                    u3841 1FA4  
                                  u4385 3A00                                    u4481 301C  
                                  u4465 2FC6                                    u4801 0AD2  
                                  u4721 0932                                    u4561 47D2  
                                  u5361 2C90                                    u5281 2B48  
                                  u5601 16B2                                    u6161 2F78  
                                  u6081 2DC8                                    u5521 4A96  
                                  u4650 4630                                    u5450 34B8  
                                  u3770 2658                                    u3690 2560  
                                  u3930 2254                                    u3850 1FB8  
                                  u4810 0B6A                                    u4730 0966  
                                  u4570 47DA                                    u5370 2CA4  
                                  u5290 2B80                                    u5610 16BA  
                                  u6090 2DFE                                    u5530 4B0E  
                                  u6227 3562                                    u4651 462C  
                                  u5451 34B4                                    u3771 2654  
                                  u3691 255C                                    u3931 2250  
                                  u3915 21D0                                    u3851 1FB4  
                                  u4811 0B66                                    u4731 0960  
                                  u5371 2CA0                                    u5291 2B7A  
                                  u6091 2DFA                                    u5531 4B0A  
                                  u4660 464A                                    u3780 266C  
                                  u3940 2266                                    u3860 1FF8  
                                  u4900 0CEA                                    u4820 0BDC  
                                  u4740 0968                                    u5460 3A66  
                                  u4580 4280                                    u5380 2CB4  
                                  u5700 1952                                    u5620 16D0  
                                  u5540 4AFA                                    _RCEN 007E2B  
                                  _RCIF 007CF5                                    u6237 3592  
                                  u4661 4646                                    u3781 2668  
                                  u3941 2262                                    u3861 1FF4  
                                  u4901 0CE6                                    u4821 0BD8  
                                  u5461 3A62                                    u4581 427A  
                                  u5381 2CB0                                    u5701 194E  
                                  u5621 16CC                                    u5541 4AF6  
                                  u5390 3386                                    u3790 2686  
                                  u3950 2294                                    u3870 200A  
                                  u4910 0CFC                                    u4830 0C02  
                                  u4750 097E                                    u5470 3A98  
                                  u4590 4282                                    u5710 1976  
                                  u5630 1702                                    u5550 14D2  
                                  u4670 4B32                                    u6247 35C0  
                                  u5391 3382                                    u3791 2682  
                                  u3951 2290                                    u3871 2006  
                                  u4495 3034                                    u4911 0CF8  
                                  u4831 0BFE                                    u4751 097A  
                                  u5471 3A94                                    u5711 1972  
                                  u5631 16FE                                    u5551 14CE  
                                  u4671 4B2E                                    u3960 22AA  
                                  u3880 201A                                    u4496 303E  
                                  u4920 0D0A                                    u4840 0C14  
                                  u4760 0A0A                                    u4680 087E  
                                  u5480 3AB4                                    u5720 1A38  
                                  u5640 1744                                    u5560 15A0  
                                  u5800 4A22                                    u6257 35F4  
                                  u3961 22A6                                    u3881 2016  
                                  u4497 304E                                    u4921 0D06  
                                  u4841 0C10                                    u4761 0A06  
                                  u4681 087A                                    u5481 3AB0  
                                  u5721 1A34                                    u5641 1740  
                                  u5561 159C                                    u5801 4A1E  
                                  u5730 42D2                                    u3970 22BE  
                                  u3890 2050                                    u4930 0D20  
                                  u4850 0C36                                    u4770 0A3A  
                                  u4690 08CE                                    u5490 3AC6  
                                  u5650 1788                                    u5570 15AE  
                                  u5810 4A40                                    u6267 3628  
                                  u3971 22BA                                    u3891 204C  
                                  u4931 0D1C                                    u4851 0C32  
                                  u4771 0A34                                    u4691 08CA  
                                  u5491 3AC2                                    u5651 1784  
                                  u5571 15AA                                    u5811 4A3C  
                                  u5740 42FA                                    u3980 22D8  
                                  u4940 0D2E                                    u4860 0C5C  
                                  u4780 0A3C                                    u5660 1836  
                                  u5580 15D4                                    u5900 326C  
                                  u5820 4A50                                    u3981 22D4  
                                  u4941 0D2A                                    u4861 0C58  
                                  u5661 1832                                    u5581 15D0  
                                  u5901 3268                                    u5821 4A4C  
                                  u5750 430A                                    u3990 2320  
                                  u4950 0D58                                    u4870 0C72  
                                  u4790 0A52                                    u5670 189E  
                                  u5590 160E                                    u5910 32B6  
                                  u5830 47F2                                    u5751 4306  
                                  u3991 231C                                    u4951 0D54  
                                  u4871 0C6E                                    u4791 0A4E  
                                  u5671 1898                                    u5591 160A  
                                  u5911 32B2                                    u5831 47EE  
                                  u5760 3D9E                                    u4960 0EA0  
                                  u4880 0C8E                                    u5680 18A0  
                                  u5920 32D4                                    u5840 4806  
                                  u5737 42C8                                    u4961 0E9C  
                                  u4881 0C8A                                    u5921 32D0  
                                  u5841 4802                                    u5770 3E0A  
                                  u4970 0F06                                    u4890 0CC4  
                                  u5690 18B6                                    u5930 32E4  
                                  u5850 4AE4                                    u5771 3E06  
                                  u5747 42F0                                    u4971 0F02  
                                  u4891 0CC0                                    u5691 18B2  
                                  u5931 32E0                                    u5851 4AE0  
                                  u5780 3E28                                    u5860 4ACE  
                                  u4980 0F4E                                    u5940 32F2  
                                  u5781 3E24                                    u5765 3D98  
                                  u5861 4ACA                                    u4981 0F4A  
                                  u5941 32EE                                    u4990 0F5E  
                                  u5950 332C                                    u5870 31AC  
                                  u5790 4A12                                    u4991 0F5A  
                                  u5951 3328                                    u5871 31A8  
                                  u5791 4A0E                                    u5960 333A  
                                  u5880 31BA                                    u5961 3336  
                                  u5881 31B6                                    u5970 4188  
                                  u5890 3216                                    u5971 4184  
                                  u5891 3212                                    u5980 4776  
                                  u5981 4772                                    u5990 465E  
                                  u5991 465A                                    _RSEN 007E29  
                                  _TXIF 007CF4                                    _Date 0104  
                                  _Year 0100                                    _Sluz 0200  
                                  _dbuf 010E                                    _atoi 334E  
                                  _main 3E2A                         ?_RTC_Read_Clock 0001  
                                  _hour 0108                        __end_of_I2C_Nack 4AFC  
                    __size_of_LCD_Clear 0014                                    _play 3D66  
                                  _prec 00F6                        __end_of_I2C_Init 4ABE  
                      __end_of_I2C_Read 481A                                    _nout 00F2  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                __end_of_USART_SendString 499E  
                                  _xtoa 2A30                        __end_of_I2C_Stop 4AE8  
                         ___fpclassifyf 393E                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0000  
                       ___fldiv@new_exp 003D                           _LCD_String_xy 4764  
                          _tolower$1681 000D                            ___param_bank 000000  
                       __end_of_ReadADC 393E                         __end_of_ReadLUZ 4130  
                       __end_of_Estados 2F88        RTC_Read_Clock@read_clock_address 0004  
                                 ??_pad 0017                        __end_of_LCD_Char 4602  
                      __end_of_LCD_Init 4A00                           ReadADC@result 0064  
                          LCD_MSdelay@i 0003                            LCD_MSdelay@j 0005  
                         ___fltol@sign1 005D                                   ?_atoi 0008  
                       __end_of___fladd 1F7C                                   ?_main 0001  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                       __end_of___fldiv 2740                         __end_of___awdiv 3D66  
                       __end_of___flneg 48C2                                   ?_play 0006  
                                 STR_10 0828                                   STR_11 0824  
                                 STR_20 080D                                   STR_12 0840  
                                 STR_21 080D                                   STR_13 083C  
                                 STR_14 0834                                   STR_22 0801  
                                 STR_31 084C                                   STR_15 0830  
                                 STR_23 0814                                   STR_16 0848  
                                 STR_24 081C                                   STR_33 084C  
                                 STR_17 0838                                   STR_18 0844  
                                 STR_27 0818                                   STR_19 080D  
                                 STR_28 0820                         __end_of___awmod 3F8A  
                       __end_of___flmul 23A6                         __end_of___flsub 4720  
                       __end_of___fltol 373C                         ___awdiv@divisor 0003  
                                 ?_xtoa 001C                                   _LATD0 007C60  
                                 _LATD1 007C61                                   _LATE0 007C68  
                                 _LATE1 007C69                                   _LATE2 007C6A  
                       ___awdiv@counter 0005                                   _RCREG 000FAE  
                                 _RCSTA 000FAB                            vfpfcnvrt@fmt 00A6  
                          vfpfcnvrt@llu 00AE                                   _SPBRG 000FAF  
                                 _TRISA 000F92                                   _TRISD 000F95  
                                 _SSPIE 007CEB                                   _TRISE 000F96  
                                 _SSPIF 007CF3                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                                   _Month 0102  
                                 _Stemp 015E                                   _flags 00F8  
                                 _fputc 3B12                         __end_of_isalpha 47E0  
                                 _fputs 4720                         __end_of_isdigit 48FA  
                     __end_of_I2C_Ready 4B36                                   atoi@n 0015  
                                 pad@fp 0011                                   atoi@s 0008  
                                 _width 00F4                                   _putch 4B48  
                       __end_of_islower 4852                         __end_of_isspace 451A  
                     __end_of_I2C_Start 4A2E                       __end_of_I2C_Write 4AA4  
                       __end_of_isupper 488A                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 status 000FD8                     __size_of_LCD_String 005E  
                       __end_of_sprintf 44C8                          ?___fpclassifyf 0001  
                       __end_of_tolower 41F2                                   xtoa@c 0041  
                                 xtoa@d 001E                                   xtoa@i 003F  
                                 xtoa@n 0037                                   xtoa@p 0033  
                                 xtoa@w 0035                                   xtoa@x 0026  
                       __end_of_strncmp 3B12                         __end_of_toupper 42AE  
                         ??_PlayCancion 0013                          ?_LCD_String_xy 000B  
                         ??_Rainy_State 005F                             ?_USART_Init 0060  
                          _toupper$1696 000D                 __end_of_LCD_Custom_Char 4694  
                       __initialization 451A                            __end_of_atoi 34DE  
                          __end_of_main 3EDA                            __end_of_play 3E2A  
                          __end_of_xtoa 2D0A                               ??_I2C_Ack 0001  
                 __size_of_Alarm_Status 0012                                  ??_atoi 000A  
                                ??_main 00DE                                  ??_play 000C  
                                ??_xtoa 0027                       __end_of_LCD_Clear 4B24  
                         __activetblptr 000002                    __end_of_Cloudy_State 4476  
                                ?_fputc 0001                                  ?_fputs 000A  
                                _ADRESH 000FC4                                  _ADRESL 000FC3  
                      ___awdiv@dividend 0001                                  ?_putch 0001  
                      LCD_String_xy@msg 000C                        LCD_String_xy@pos 000B  
                      LCD_String_xy@row 000E                                  _OSCCON 000FD3  
                         vfpfcnvrt@done 00B6                                  _SSPADD 000FC8  
                                _TRISB0 007C98                                  _TRISB1 007C99  
                                _TRISC6 007CA6                                  _TRISC7 007CA7  
                                _SSPBUF 000FC9                        __end_of___xxtofl 334E  
                             ??_ReadADC 0062                               ??_ReadLUZ 0003  
                             ??_Estados 005F                        __end_of_delay_us 49D0  
                          _Alarm_Status 4B36                        ??_RTC_Calendario 00DC  
                          vfprintf@cfmt 00CA                                  ___flge 373C  
                                ___fleq 3F8A                               ??___fladd 004D  
                                ___wmul 4A5C                               ??___fldiv 0034  
                             ??___awdiv 0005                               ??___flneg 0005  
                             ??___awmod 0005                               ??___flmul 001B  
                             ??___flsub 005D                               ??___fltol 0059  
                                _efgtoa 0856                     __end_of_PlayCancion 3636  
                                _floorf 2F88                    __size_of_LCD_MSdelay 004A  
                   __end_of_Rainy_State 43C2                                  clear_0 4540  
                                clear_1 454C                                  clear_2 4558  
                      ___awdiv@quotient 0007                         ___awmod@divisor 0003  
                                isa$std 000001                                  _tempar 00EE  
                                _result 00FA                         ___awmod@counter 0005  
                    _I2C_Repeated_Start 4A2E                                  pad@buf 0013  
                  __size_of_LCD_Command 004C                                  _strcpy 430C  
                                _strlen 4932                                  fputc@c 0001  
                                fputs@c 000E                        LCD_Custom_Char@i 000C  
                                fputs@i 000F                               ?_I2C_Nack 0001  
                                fputs@s 000A                               ??_isalpha 0003  
                             ??_isdigit 0003                               ?_I2C_Init 0001  
                             ?_I2C_Read 0001                                  play@fn 0011  
                             ?_I2C_Stop 0001                         ___fpclassifyf@e 0009  
                       ___fpclassifyf@u 000B                         ___fpclassifyf@x 0001  
                             ??_islower 0003              __end_of_USART_TransmitChar 4AD4  
                          __mediumconst 0000                               ??_isspace 0003  
                                tblptrh 000FF7                               ??_isupper 0003  
                                tblptrl 000FF6                                  tblptru 000FF8  
                   ?_I2C_Repeated_Start 0001                     __size_of_USART_Init 0094  
                                putch@c 0001                        __end_of_vfprintf 4192  
                             ??_sprintf 005F                               ??_tolower 0009  
                                xtoa@fp 001C                               ??_strncmp 0007  
                             ??_toupper 0009                              ___flge@ff1 002C  
                            ___flge@ff2 0030                         ??___fpclassifyf 0005  
                          ___xxtofl@arg 000F                            ___xxtofl@exp 000E  
                          ___xxtofl@val 0005                              ___fleq@ff1 0001  
                            ___fleq@ff2 0005                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 4560  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000E  
                            ___flneg@f1 0001                           ___rparam_used 000001  
                            ___fltol@f1 0055                    ??_I2C_Repeated_Start 0002  
                      ?_LCD_Custom_Char 0009                          __pcstackCOMRAM 0001  
                           play@CiclosL 000F                            __pidataBANK1 48FA  
                         __end_of_fputc 3BDC                           __end_of_fputs 4764  
                         __end_of_putch 4B4A                            ??_LCD_String 000B  
                            ??_I2C_Nack 0001                              ??_I2C_Init 0001  
                            ??_I2C_Read 0001                              ??_I2C_Stop 0001  
                      ??_RTC_Read_Clock 0003                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00E2                              __pbssBANK1 0100  
                            __pbssBANK2 0200                              ??_LCD_Char 0007  
                            _character1 01E5                              _character2 01DD  
                            _character3 01D5                              ??_LCD_Init 0009  
                    __end_of_LCD_String 430C                       ?_USART_SendString 0002  
                           _PlayCancion 34DE                             _Rainy_State 4368  
                    ??_USART_SendString 0004                            I2C_Read@flag 0001  
                         ??_Sunny_State 005F                                 ?___flge 002C  
                               ?___fleq 0001                          I2C_Read@buffer 0002  
                               ?___wmul 0001                          LCD_MSdelay@val 0001  
                               ?_efgtoa 0060                                 ?_floorf 0045  
                               _I2C_Ack 4AFC                                 _ACKSTAT 007E2E  
                               ?_strcpy 0001                                 ?_strlen 0001  
                 __size_of_Cloudy_State 005A                               ?___xxtofl 0005  
                             ?_delay_us 0001                      __size_of_vfpfcnvrt 060E  
                               _SSPCON1 000FC6                                 _SSPCON2 000FC5  
                               _SSPSTAT 000FC7                               _I2C_Ready 4B24  
                               _ReadADC 3840                               _I2C_Start 4A00  
                               _ReadLUZ 40C8                               _I2C_Write 4A82  
                               _Estados 2D0A                           LCD_String@msg 0009  
                          ??_USART_Init 005F                                 __Hparam 0000  
                               __Lparam 0000                            _Cloudy_State 441C  
                       __size_of___flge 0104                         __size_of___fleq 00AA  
                               ___fladd 1ABC                       _RTC_Read_Calendar 43C2  
                               ___fldiv 23A6                                 ___awdiv 3CA2  
                               ___flneg 488A                                 ___awmod 3EDA  
                               ___flmul 1F7C                                 ___flsub 46DA  
                               ___fltol 3636                         __size_of___wmul 0026  
                             ?_vfprintf 00C4                            __psmallconst 0800  
                       __size_of_efgtoa 0C58                      ?_RTC_Read_Calendar 0001  
                       __size_of_floorf 0212                                 _data_in 00FC  
                               __pcinit 451A                                 __ramtop 0800  
                               __ptext0 3E2A                                 __ptext1 4034  
                               __ptext2 41F2                                 __ptext3 4368  
                               __ptext4 2740                                 __ptext5 4694  
                               __ptext6 43C2                                 __ptext7 4AD4  
                               __ptext8 4A00                                 __ptext9 4A2E  
                   USART_SendString@out 0002                     __end_of_Sunny_State 4250  
                       __size_of_strcpy 005C                         __size_of_strlen 0036  
                        USART_Init@temp 0064                            __size_of_pad 00C6  
                               _isalpha 47A4                                 _isdigit 48C2  
                            ??___xxtofl 0009                        ___awmod@dividend 0001  
                   ??_RTC_Read_Calendar 0003                                 _islower 481A  
                               _isspace 44C8                              ??_delay_us 0003  
                               _isupper 4852                                 efgtoa@c 0066  
                               efgtoa@d 0084                                 efgtoa@e 009C  
                               efgtoa@f 0062                                 efgtoa@g 0098  
                               efgtoa@h 008E                                 efgtoa@i 0096  
                               efgtoa@l 0092                                 efgtoa@m 007E  
                               efgtoa@n 009E                                 efgtoa@p 0088  
                               efgtoa@t 0078                                 efgtoa@u 00A0  
                               efgtoa@w 008A                               _LCD_Clear 4B10  
                               atoi@neg 000E                      __end_of_USART_Init 40C8  
                               _sprintf 4476                                 _tolower 4192  
                               _strncmp 3A3C                                 _toupper 4250  
                  end_of_initialization 4560                                 floorf@e 0053  
                               floorf@m 004F                                 floorf@u 0055  
                               floorf@x 0045                                 fputc@fp 0003  
                        LCD_Command@cmd 0008                           __Lmediumconst 0000  
                               fputs@fp 000C                              ?_I2C_Ready 0001  
                            ?_I2C_Start 0001                              ?_I2C_Write 0001  
             __end_of_RTC_Read_Calendar 441C                       __end_of_vfpfcnvrt 1ABC  
                            efgtoa@mode 008D                              efgtoa@sign 0086  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                              ??_vfprintf 005F  
                               strcpy@d 0009                                 strlen@a 0003  
                               strcpy@s 0007                                 strlen@s 0001  
                           ___fladd@grs 0054                           ___xxtofl@sign 000D  
                             _TRISCbits 000F94                              ?_LCD_Clear 0001  
                     __size_of_I2C_Nack 0014                       __size_of_I2C_Init 001A  
                     __size_of_I2C_Read 003A                             ___fldiv@grs 003F  
                           ___fldiv@rem 0038                       __size_of_I2C_Stop 0014  
                   USART_Init@baud_rate 0060                   USART_TransmitChar@out 0001  
                           ___flmul@grs 0020                            _Estados$1937 0068  
                    _USART_TransmitChar 4ABE                       __size_of_LCD_Char 004C  
                     __size_of_LCD_Init 0030                           ??_LCD_MSdelay 0003  
                           _Sunny_State 41F2                     ?_USART_TransmitChar 0001  
                         ??_LCD_Command 0007                          __end_of___flge 3840  
                        __end_of___fleq 4034                             vfpfcnvrt@ap 00A8  
                           vfpfcnvrt@ct 00C0                             vfpfcnvrt@fp 00A4  
                        __end_of___wmul 4A82                          __end_of_efgtoa 14AE  
                        __end_of_floorf 319A                              floorf@F527 00E2  
                        __end_of_strcpy 4368                          __end_of_strlen 4968  
                   start_initialization 451A                             __end_of_pad 3CA2  
                  ??_USART_TransmitChar 0001    I2C_Repeated_Start@slave_read_address 0002  
                 __end_of___fpclassifyf 3A3C                             ??_I2C_Ready 0001  
                           ??_I2C_Start 0002                             ??_I2C_Write 0001  
                 __end_of_LCD_String_xy 47A4                            ?_PlayCancion 0001  
                          ?_Rainy_State 0001              __size_of_RTC_Read_Calendar 005A  
                           vfprintf@fmt 00C6             __size_of_I2C_Repeated_Start 002E  
                              ??___flge 0034                                ??___fleq 0009  
                              ??___wmul 0005                                ??_efgtoa 0067  
                           __pdataBANK1 01B6                                ??_floorf 0049  
                              ?_I2C_Ack 0001                     __end_of_LCD_MSdelay 464C  
                              ??_strcpy 0005                                ??_strlen 0003  
             __size_of_USART_SendString 0036                __size_of_LCD_Custom_Char 0048  
                             ___fladd@a 0049                               ___fladd@b 0045  
                          play@duracion 000A                               ___fldiv@a 0030  
                             ___fldiv@b 002C                 __size_of_RTC_Calendario 02F0  
                   __end_of_LCD_Command 45B6                               ___flmul@a 0017  
                             ___flmul@b 0013                             __pbssCOMRAM 005F  
                             ___flsub@a 0059                               ___flsub@b 0055  
                         __pcstackBANK0 0060                           __pcstackBANK1 0172  
                           ??_LCD_Clear 0009                       __size_of___xxtofl 01B4  
                     __size_of_delay_us 0032                                ?_ReadADC 0060  
                             _atoi$1577 0010                               _atoi$1578 0014  
                             _atoi$1579 0012                                ?_ReadLUZ 0001  
                            play@octava 0008                                ?_Estados 0066  
                           _efgtoa$1501 006C                             _efgtoa$1502 006E  
                           _efgtoa$1511 0072                             _efgtoa$1512 0074  
                           _efgtoa$1513 0076                             _efgtoa$1507 0070  
                              ?___fladd 0045                                ?___fldiv 002C  
                              ?___awdiv 0001                                ?___flneg 0001  
                              ?___awmod 0001                                ?___flmul 0013  
                              ?___flsub 0055                                ?___fltol 0055  
                     __size_of_vfprintf 0062                             __smallconst 0800  
                              _I2C_Nack 4AE8                                ?_isalpha 0001  
                              ?_isdigit 0001                                _I2C_Init 4AA4  
                              _I2C_Read 47E0                                _I2C_Stop 4AD4  
                              ?_islower 0001                                ?_isspace 0001  
                              ?_isupper 0001                   LCD_String_xy@location 000F  
                              ?_sprintf 00CC                                ?_tolower 0007  
                        __size_of_fputc 00CA                          __size_of_fputs 0044  
                              ?_strncmp 0001                                ?_toupper 0007  
                        __size_of_putch 0002                                _LCD_Char 45B6  
                              _LCD_Init 49D0                    play@mS_Transcurridos 000D  
                        ___wmul@product 0005                                _LATCbits 000F8B  
                             delay_us@i 0004                           ?_Alarm_Status 0001  
               __size_of_RTC_Read_Clock 0046                             _LCD_MSdelay 4602  
                           _LCD_Command 456A                               _vfpfcnvrt 14AE  
                             _xtoa$1523 002F                               _xtoa$1524 0031  
                      __size_of_I2C_Ack 0014                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 0001                            _isspace$1617 0007  
                     ??_LCD_Custom_Char 000B                              vfpfcnvrt@c 00C3  
                            vfpfcnvrt@f 00BC                               copy_data0 452E  
                              _FreqNota 01B6            I2C_Start@slave_write_address 0002  
                          delay_us@nota 0001                          ??_Alarm_Status 0015  
                      __size_of_ReadADC 00FE                        __size_of_ReadLUZ 0068  
                              __Hrparam 0000                        __size_of_Estados 027E  
                            vfprintf@ap 00C8                                __Lrparam 0000  
                            vfprintf@fp 00C4                            ?_Sunny_State 0001  
                  __size_of_PlayCancion 0158                    __size_of_Rainy_State 005A  
                         I2C_Write@data 0001                        __size_of___fladd 04C0  
                      __size_of___fldiv 039A                        __size_of___awdiv 00C4  
                      __size_of___flneg 0038                        __size_of___awmod 00B0  
                      __size_of___flmul 042A                        __size_of___flsub 0046  
                      __size_of___fltol 0106                              ?_vfpfcnvrt 00A4  
                      _USART_SendString 4968                      ___fpclassifyf@F465 00E6  
                        _RTC_Calendario 2740                              sprintf@fmt 00CE  
                              ___xxtofl 319A                        __size_of_isalpha 003C  
                      __size_of_isdigit 0038                                _delay_us 499E  
                      __size_of_islower 0038                        __size_of_isspace 0052  
                              __ptext10 4A82                                __ptext11 47E0  
                              __ptext20 3840                                __ptext12 4B24  
                              __ptext21 319A                                __ptext13 4AE8  
                              __ptext30 3A3C                                __ptext22 441C  
                              __ptext14 4AFC                                __ptext31 0856  
                              __ptext23 4476                                __ptext15 49D0  
                              __ptext40 2F88                                __ptext32 4192  
                              __ptext24 4130                                __ptext16 4B10  
                              __ptext41 393E                                __ptext33 4852  
                              __ptext25 14AE                                __ptext17 4AA4  
                              __ptext50 3EDA                                __ptext42 3636  
                              __ptext34 430C                                __ptext26 2A30  
                              __ptext18 2D0A                                __ptext51 3CA2  
                              __ptext43 46DA                                __ptext35 3BDC  
                              __ptext27 4250                                __ptext19 40C8  
                              __ptext60 45B6                                __ptext52 334E  
                              __ptext44 1ABC                                __ptext36 4932  
                              __ptext28 481A                                __ptext61 4602  
                              __ptext53 44C8                                __ptext45 488A  
                              __ptext37 4720                                __ptext29 47A4  
                              __ptext62 4B36                                __ptext54 48C2  
                              __ptext46 1F7C                                __ptext38 3B12  
                              __ptext63 4968                                __ptext55 4A5C  
                              __ptext47 373C                                __ptext39 4B48  
                              __ptext64 4ABE                                __ptext56 4764  
                              __ptext48 3F8A                                __ptext65 34DE  
                              __ptext57 42AE                                __ptext49 23A6  
                              __ptext66 3D66                                __ptext58 464C  
                              __ptext67 499E                                __ptext59 456A  
                      __size_of_isupper 0038                        __size_of_sprintf 0052  
                      __size_of_tolower 0060                              strcpy@dest 0001  
                      __size_of_strncmp 00D6                        __size_of_toupper 005E  
                         __size_of_atoi 0190                           __size_of_main 00B0  
                         __size_of_play 00C4                           __size_of_xtoa 02DA  
                              efgtoa@fp 0060                                efgtoa@ne 007C  
                              efgtoa@pp 007A                                efgtoa@ou 0080  
                              isa$xinst 000000                                _vfprintf 4130  
                              main@caso 00E0                  __end_of_RTC_Calendario 2A30  
                            _LCD_String 42AE                          _vfpfcnvrt$1542 00BA  
                        _vfpfcnvrt$1538 00B8                                isalpha@c 0001  
                              isdigit@c 0001                      LCD_Custom_Char@loc 000B  
                    LCD_Custom_Char@msg 0009             __size_of_USART_TransmitChar 0016  
                             sprintf@ap 00D4                                play@nota 0006  
                              islower@c 0001                                isspace@c 0001  
                             strcpy@src 0003              __end_of_I2C_Repeated_Start 4A5C  
                              isupper@c 0001                          _RTC_Read_Clock 4694  
                             strncmp@_l 0001                               strncmp@_r 0003  
                            _OSCCONbits 000FD3                           ?_Cloudy_State 0001  
                           efgtoa@nmode 008C                     RTC_Calendario@F3580 01CE  
                           ??_vfpfcnvrt 00AA                         ?_RTC_Calendario 0001  
                   RTC_Calendario@AM_PM 01B5                                sprintf@f 00D6  
                              tolower@c 0007                                sprintf@s 00CC  
                __size_of___fpclassifyf 00FE                    __end_of_Alarm_Status 4B48  
                              strncmp@l 0008                                strncmp@n 0005  
                              strncmp@r 000A                                toupper@c 0007  
                __size_of_LCD_String_xy 0040                     RTC_Calendario@hours 01AB  
                   RTC_Calendario@month 0183                             _SSPCON2bits 000FC5  
                         ___fladd@signs 0051                      RTC_Calendario@date 0179  
                    RTC_Calendario@days 0172                      RTC_Calendario@mins 01A1  
                    RTC_Calendario@secs 0197                      RTC_Calendario@year 018D  
                          ___fladd@aexp 0052                            ___fladd@bexp 0053  
                __end_of_RTC_Read_Clock 46DA                              _USART_Init 4034  
                        ??_Cloudy_State 005F  
