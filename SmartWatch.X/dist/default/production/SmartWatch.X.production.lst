

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 04 10:47:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80  0000                     
    81                           ; Version 2.20
    82                           ; Generated 12/02/2020 GMT
    83                           ; 
    84                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F4550 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataBANK1
   117  0047BC                     __pidataBANK1:
   118                           	callstack 0
   119                           
   120                           ;initializer for _FreqNota
   121  0047BC  3BB9               	dw	15289
   122  0047BE  385E               	dw	14430
   123  0047C0  3534               	dw	13620
   124  0047C2  3238               	dw	12856
   125  0047C4  2F66               	dw	12134
   126  0047C6  2CBD               	dw	11453
   127  0047C8  2A3A               	dw	10810
   128  0047CA  27DC               	dw	10204
   129  0047CC  259F               	dw	9631
   130  0047CE  2382               	dw	9090
   131  0047D0  2184               	dw	8580
   132  0047D2  1FA3               	dw	8099
   133                           
   134                           ;initializer for RTC_Calendario@F3531
   135  0047D4  53                 	db	83
   136  0047D5  4D                 	db	77
   137  0047D6  54                 	db	84
   138  0047D7  57                 	db	87
   139  0047D8  74                 	db	116
   140  0047D9  46                 	db	70
   141  0047DA  73                 	db	115
   142                           
   143                           ;initializer for _character3
   144  0047DB  00                 	db	0
   145  0047DC  08                 	db	8
   146  0047DD  16                 	db	22
   147  0047DE  1F                 	db	31
   148  0047DF  1F                 	db	31
   149  0047E0  16                 	db	22
   150  0047E1  08                 	db	8
   151  0047E2  00                 	db	0
   152                           
   153                           ;initializer for _character2
   154  0047E3  15                 	db	21
   155  0047E4  0E                 	db	14
   156  0047E5  11                 	db	17
   157  0047E6  11                 	db	17
   158  0047E7  0E                 	db	14
   159  0047E8  15                 	db	21
   160  0047E9  00                 	db	0
   161  0047EA  00                 	db	0
   162                           
   163                           ;initializer for _character1
   164  0047EB  0E                 	db	14
   165  0047EC  1F                 	db	31
   166  0047ED  1F                 	db	31
   167  0047EE  0E                 	db	14
   168  0047EF  00                 	db	0
   169  0047F0  0A                 	db	10
   170  0047F1  0A                 	db	10
   171  0047F2  00                 	db	0
   172  0000                     _SSPCON2bits	set	4037
   173  0000                     _SSPADD	set	4040
   174  0000                     _SSPCON2	set	4037
   175  0000                     _SSPCON1	set	4038
   176  0000                     _SSPSTAT	set	4039
   177  0000                     _SSPBUF	set	4041
   178  0000                     _SSPSTATbits	set	4039
   179  0000                     _LATCbits	set	3979
   180  0000                     _TRISCbits	set	3988
   181  0000                     _ADRESL	set	4035
   182  0000                     _ADRESH	set	4036
   183  0000                     _ADCON2bits	set	4032
   184  0000                     _ADCON0bits	set	4034
   185  0000                     _ADCON1bits	set	4033
   186  0000                     _OSCCONbits	set	4051
   187  0000                     _TRISA	set	3986
   188  0000                     _LATD	set	3980
   189  0000                     _TRISD	set	3989
   190  0000                     _TRISE	set	3990
   191  0000                     _OSCCON	set	4051
   192  0000                     _ACKEN	set	32300
   193  0000                     _ACKDT	set	32301
   194  0000                     _PEN	set	32298
   195  0000                     _RSEN	set	32297
   196  0000                     _ACKSTAT	set	32302
   197  0000                     _SSPIF	set	31987
   198  0000                     _SSPIE	set	31979
   199  0000                     _TRISB1	set	31897
   200  0000                     _TRISB0	set	31896
   201  0000                     _RCEN	set	32299
   202  0000                     _LATD1	set	31841
   203  0000                     _LATD0	set	31840
   204  0000                     _LATE2	set	31850
   205  0000                     _LATE1	set	31849
   206  0000                     _LATE0	set	31848
   207                           
   208                           	psect	smallconst
   209  000800                     __psmallconst:
   210                           	callstack 0
   211  000800  00                 	db	0
   212  000801                     STR_1:
   213  000801  25                 	db	37
   214  000802  30                 	db	48	;'0'
   215  000803  2E                 	db	46
   216  000804  30                 	db	48	;'0'
   217  000805  66                 	db	102	;'f'
   218  000806  43                 	db	67	;'C'
   219  000807  00                 	db	0
   220  000808                     STR_22:
   221  000808  49                 	db	73	;'I'
   222  000809  4E                 	db	78	;'N'
   223  00080A  46                 	db	70	;'F'
   224  00080B  00                 	db	0
   225  00080C                     STR_26:
   226  00080C  4E                 	db	78	;'N'
   227  00080D  41                 	db	65	;'A'
   228  00080E  4E                 	db	78	;'N'
   229  00080F  00                 	db	0
   230  000810                     STR_23:
   231  000810  69                 	db	105	;'i'
   232  000811  6E                 	db	110	;'n'
   233  000812  66                 	db	102	;'f'
   234  000813  00                 	db	0
   235  000814                     STR_27:
   236  000814  6E                 	db	110	;'n'
   237  000815  61                 	db	97	;'a'
   238  000816  6E                 	db	110	;'n'
   239  000817  00                 	db	0
   240  000818                     STR_6:
   241  000818  25                 	db	37
   242  000819  78                 	db	120	;'x'
   243  00081A  20                 	db	32
   244  00081B  00                 	db	0
   245  00081C                     STR_12:
   246  00081C  25                 	db	37
   247  00081D  78                 	db	120	;'x'
   248  00081E  2D                 	db	45
   249  00081F  00                 	db	0
   250  000820                     STR_7:
   251  000820  25                 	db	37
   252  000821  78                 	db	120	;'x'
   253  000822  3A                 	db	58	;':'
   254  000823  00                 	db	0
   255  000824                     STR_18:
   256  000824  57                 	db	87	;'W'
   257  000825  65                 	db	101	;'e'
   258  000826  64                 	db	100	;'d'
   259  000827  00                 	db	0
   260  000828                     STR_17:
   261  000828  54                 	db	84	;'T'
   262  000829  75                 	db	117	;'u'
   263  00082A  65                 	db	101	;'e'
   264  00082B  00                 	db	0
   265  00082C                     STR_20:
   266  00082C  46                 	db	70	;'F'
   267  00082D  72                 	db	114	;'r'
   268  00082E  69                 	db	105	;'i'
   269  00082F  00                 	db	0
   270  000830                     STR_16:
   271  000830  4D                 	db	77	;'M'
   272  000831  6F                 	db	111	;'o'
   273  000832  6E                 	db	110	;'n'
   274  000833  00                 	db	0
   275  000834                     STR_15:
   276  000834  53                 	db	83	;'S'
   277  000835  75                 	db	117	;'u'
   278  000836  6E                 	db	110	;'n'
   279  000837  00                 	db	0
   280  000838                     STR_21:
   281  000838  53                 	db	83	;'S'
   282  000839  61                 	db	97	;'a'
   283  00083A  74                 	db	116	;'t'
   284  00083B  00                 	db	0
   285  00083C                     STR_19:
   286  00083C  54                 	db	84	;'T'
   287  00083D  68                 	db	104	;'h'
   288  00083E  75                 	db	117	;'u'
   289  00083F  00                 	db	0
   290  000840                     STR_30:
   291  000840  6C                 	db	108	;'l'
   292  000841  66                 	db	102	;'f'
   293  000842  00                 	db	0
   294  000843                     STR_5:
   295  000843  41                 	db	65	;'A'
   296  000844  4D                 	db	77	;'M'
   297  000845  00                 	db	0
   298  000846                     STR_4:
   299  000846  50                 	db	80	;'P'
   300  000847  4D                 	db	77	;'M'
   301  000848  00                 	db	0
   302  000849  00                 	db	0	; dummy byte at the end
   303  0000                     
   304                           ; #config settings
   305                           
   306                           	psect	cinit
   307  0043DC                     __pcinit:
   308                           	callstack 0
   309  0043DC                     start_initialization:
   310                           	callstack 0
   311  0043DC                     __initialization:
   312                           	callstack 0
   313                           
   314                           ; Initialize objects allocated to BANK1 (55 bytes)
   315                           ; load TBLPTR registers with __pidataBANK1
   316  0043DC  0EBC               	movlw	low __pidataBANK1
   317  0043DE  6EF6               	movwf	tblptrl,c
   318  0043E0  0E47               	movlw	high __pidataBANK1
   319  0043E2  6EF7               	movwf	tblptrh,c
   320  0043E4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   321  0043E6  6EF8               	movwf	tblptru,c
   322  0043E8  EE01  F0BA         	lfsr	0,__pdataBANK1
   323  0043EC  EE10 F037          	lfsr	1,55
   324  0043F0                     copy_data0:
   325  0043F0  0009               	tblrd		*+
   326  0043F2  CFF5 FFEE          	movff	tablat,postinc0
   327  0043F6  50E5               	movf	postdec1,w,c
   328  0043F8  50E1               	movf	fsr1l,w,c
   329  0043FA  E1FA               	bnz	copy_data0
   330                           
   331                           ; Clear objects allocated to BANK2 (20 bytes)
   332  0043FC  EE02  F000         	lfsr	0,__pbssBANK2
   333  004400  0E14               	movlw	20
   334  004402                     clear_0:
   335  004402  6AEE               	clrf	postinc0,c
   336  004404  06E8               	decf	wreg,f,c
   337  004406  E1FD               	bnz	clear_0
   338                           
   339                           ; Clear objects allocated to BANK1 (118 bytes)
   340  004408  EE01  F000         	lfsr	0,__pbssBANK1
   341  00440C  0E76               	movlw	118
   342  00440E                     clear_1:
   343  00440E  6AEE               	clrf	postinc0,c
   344  004410  06E8               	decf	wreg,f,c
   345  004412  E1FD               	bnz	clear_1
   346                           
   347                           ; Clear objects allocated to BANK0 (28 bytes)
   348  004414  EE00  F0E4         	lfsr	0,__pbssBANK0
   349  004418  0E1C               	movlw	28
   350  00441A                     clear_2:
   351  00441A  6AEE               	clrf	postinc0,c
   352  00441C  06E8               	decf	wreg,f,c
   353  00441E  E1FD               	bnz	clear_2
   354                           
   355                           ; Clear objects allocated to COMRAM (1 bytes)
   356  004420  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   357  004422                     end_of_initialization:
   358                           	callstack 0
   359  004422                     __end_of__initialization:
   360                           	callstack 0
   361  004422  0E00               	movlw	low (__Lmediumconst shr (0+16))
   362  004424  6EF8               	movwf	tblptru,c
   363  004426  0100               	movlb	0
   364  004428  EFCD  F011         	goto	_main	;jump to C main() function
   365                           
   366                           	psect	bssCOMRAM
   367  00005F                     __pbssCOMRAM:
   368                           	callstack 0
   369  00005F                     _i:
   370                           	callstack 0
   371  00005F                     	ds	1
   372                           
   373                           	psect	bssBANK0
   374  0000E4                     __pbssBANK0:
   375                           	callstack 0
   376  0000E4                     floorf@F527:
   377                           	callstack 0
   378  0000E4                     	ds	4
   379  0000E8                     ___fpclassifyf@F465:
   380                           	callstack 0
   381  0000E8                     	ds	4
   382  0000EC                     _temp:
   383                           	callstack 0
   384  0000EC                     	ds	4
   385  0000F0                     _luz:
   386                           	callstack 0
   387  0000F0                     	ds	4
   388  0000F4                     _tempar:
   389                           	callstack 0
   390  0000F4                     	ds	4
   391  0000F8                     _nout:
   392                           	callstack 0
   393  0000F8                     	ds	2
   394  0000FA                     _width:
   395                           	callstack 0
   396  0000FA                     	ds	2
   397  0000FC                     _prec:
   398                           	callstack 0
   399  0000FC                     	ds	2
   400  0000FE                     _flags:
   401                           	callstack 0
   402  0000FE                     	ds	2
   403                           
   404                           	psect	bssBANK1
   405  000100                     __pbssBANK1:
   406                           	callstack 0
   407  000100                     _temperatura:
   408                           	callstack 0
   409  000100                     	ds	4
   410  000104                     _Year:
   411                           	callstack 0
   412  000104                     	ds	2
   413  000106                     _Month:
   414                           	callstack 0
   415  000106                     	ds	2
   416  000108                     _Date:
   417                           	callstack 0
   418  000108                     	ds	2
   419  00010A                     _Day:
   420                           	callstack 0
   421  00010A                     	ds	2
   422  00010C                     _hour:
   423                           	callstack 0
   424  00010C                     	ds	2
   425  00010E                     _min:
   426                           	callstack 0
   427  00010E                     	ds	2
   428  000110                     _sec:
   429                           	callstack 0
   430  000110                     	ds	2
   431  000112                     _dbuf:
   432                           	callstack 0
   433  000112                     	ds	80
   434  000162                     _Stemp:
   435                           	callstack 0
   436  000162                     	ds	20
   437                           
   438                           	psect	dataBANK1
   439  0001BA                     __pdataBANK1:
   440                           	callstack 0
   441  0001BA                     _FreqNota:
   442                           	callstack 0
   443  0001BA                     	ds	24
   444  0001D2                     RTC_Calendario@F3531:
   445                           	callstack 0
   446  0001D2                     	ds	7
   447  0001D9                     _character3:
   448                           	callstack 0
   449  0001D9                     	ds	8
   450  0001E1                     _character2:
   451                           	callstack 0
   452  0001E1                     	ds	8
   453  0001E9                     _character1:
   454                           	callstack 0
   455  0001E9                     	ds	8
   456                           
   457                           	psect	bssBANK2
   458  000200                     __pbssBANK2:
   459                           	callstack 0
   460  000200                     _Sluz:
   461                           	callstack 0
   462  000200                     	ds	20
   463                           
   464                           	psect	cstackBANK1
   465  000176                     __pcstackBANK1:
   466                           	callstack 0
   467  000176                     RTC_Calendario@days:
   468                           	callstack 0
   469                           
   470                           ; 7 bytes @ 0x0
   471  000176                     	ds	7
   472  00017D                     RTC_Calendario@date:
   473                           	callstack 0
   474                           
   475                           ; 10 bytes @ 0x7
   476  00017D                     	ds	10
   477  000187                     RTC_Calendario@month:
   478                           	callstack 0
   479                           
   480                           ; 10 bytes @ 0x11
   481  000187                     	ds	10
   482  000191                     RTC_Calendario@year:
   483                           	callstack 0
   484                           
   485                           ; 10 bytes @ 0x1B
   486  000191                     	ds	10
   487  00019B                     RTC_Calendario@secs:
   488                           	callstack 0
   489                           
   490                           ; 10 bytes @ 0x25
   491  00019B                     	ds	10
   492  0001A5                     RTC_Calendario@mins:
   493                           	callstack 0
   494                           
   495                           ; 10 bytes @ 0x2F
   496  0001A5                     	ds	10
   497  0001AF                     RTC_Calendario@hours:
   498                           	callstack 0
   499                           
   500                           ; 10 bytes @ 0x39
   501  0001AF                     	ds	10
   502  0001B9                     RTC_Calendario@AM_PM:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x43
   506  0001B9                     	ds	1
   507                           
   508                           	psect	cstackBANK0
   509  000060                     __pcstackBANK0:
   510                           	callstack 0
   511  000060                     ___fltol@sign1:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x0
   515  000060                     	ds	1
   516  000061                     ___fltol@exp1:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x1
   520  000061                     	ds	1
   521  000062                     ?_ReadADC:
   522                           	callstack 0
   523  000062                     ?_efgtoa:
   524                           	callstack 0
   525  000062                     efgtoa@fp:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x2
   529  000062                     	ds	2
   530  000064                     ??_ReadADC:
   531  000064                     efgtoa@f:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x4
   535  000064                     	ds	2
   536  000066                     ReadADC@result:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x6
   540  000066                     	ds	2
   541  000068                     efgtoa@c:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x8
   545  000068                     	ds	1
   546  000069                     ??_efgtoa:
   547                           
   548                           ; 1 bytes @ 0x9
   549  000069                     	ds	5
   550  00006E                     _efgtoa$1394:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xE
   554  00006E                     	ds	2
   555  000070                     _efgtoa$1395:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x10
   559  000070                     	ds	2
   560  000072                     _efgtoa$1400:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x12
   564  000072                     	ds	2
   565  000074                     _efgtoa$1404:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x14
   569  000074                     	ds	2
   570  000076                     _efgtoa$1405:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x16
   574  000076                     	ds	2
   575  000078                     _efgtoa$1406:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x18
   579  000078                     	ds	2
   580  00007A                     efgtoa@t:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x1A
   584  00007A                     	ds	2
   585  00007C                     efgtoa@pp:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x1C
   589  00007C                     	ds	2
   590  00007E                     efgtoa@ne:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x1E
   594  00007E                     	ds	2
   595  000080                     efgtoa@m:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x20
   599  000080                     	ds	2
   600  000082                     efgtoa@ou:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0x22
   604  000082                     	ds	4
   605  000086                     efgtoa@d:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x26
   609  000086                     	ds	2
   610  000088                     efgtoa@sign:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x28
   614  000088                     	ds	2
   615  00008A                     efgtoa@p:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x2A
   619  00008A                     	ds	2
   620  00008C                     efgtoa@w:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x2C
   624  00008C                     	ds	2
   625  00008E                     efgtoa@nmode:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x2E
   629  00008E                     	ds	1
   630  00008F                     efgtoa@mode:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x2F
   634  00008F                     	ds	1
   635  000090                     efgtoa@h:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x30
   639  000090                     	ds	4
   640  000094                     efgtoa@l:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x34
   644  000094                     	ds	4
   645  000098                     efgtoa@i:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x38
   649  000098                     	ds	2
   650  00009A                     efgtoa@g:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0x3A
   654  00009A                     	ds	4
   655  00009E                     efgtoa@e:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x3E
   659  00009E                     	ds	2
   660  0000A0                     efgtoa@n:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x40
   664  0000A0                     	ds	2
   665  0000A2                     efgtoa@u:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x42
   669  0000A2                     	ds	4
   670  0000A6                     ?_vfpfcnvrt:
   671                           	callstack 0
   672  0000A6                     vfpfcnvrt@fp:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x46
   676  0000A6                     	ds	2
   677  0000A8                     vfpfcnvrt@fmt:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x48
   681  0000A8                     	ds	2
   682  0000AA                     vfpfcnvrt@ap:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x4A
   686  0000AA                     	ds	2
   687  0000AC                     ??_vfpfcnvrt:
   688                           
   689                           ; 1 bytes @ 0x4C
   690  0000AC                     	ds	4
   691  0000B0                     vfpfcnvrt@llu:
   692                           	callstack 0
   693                           
   694                           ; 8 bytes @ 0x50
   695  0000B0                     	ds	8
   696  0000B8                     vfpfcnvrt@done:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x58
   700  0000B8                     	ds	2
   701  0000BA                     _vfpfcnvrt$1431:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x5A
   705  0000BA                     	ds	2
   706  0000BC                     _vfpfcnvrt$1435:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x5C
   710  0000BC                     	ds	2
   711  0000BE                     vfpfcnvrt@f:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x5E
   715  0000BE                     	ds	4
   716  0000C2                     vfpfcnvrt@ct:
   717                           	callstack 0
   718                           
   719                           ; 3 bytes @ 0x62
   720  0000C2                     	ds	3
   721  0000C5                     vfpfcnvrt@c:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x65
   725  0000C5                     	ds	1
   726  0000C6                     ?_vfprintf:
   727                           	callstack 0
   728  0000C6                     vfprintf@fp:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x66
   732  0000C6                     	ds	2
   733  0000C8                     vfprintf@fmt:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x68
   737  0000C8                     	ds	2
   738  0000CA                     vfprintf@ap:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x6A
   742  0000CA                     	ds	2
   743  0000CC                     vfprintf@cfmt:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x6C
   747  0000CC                     	ds	2
   748  0000CE                     ?_sprintf:
   749                           	callstack 0
   750  0000CE                     sprintf@s:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x6E
   754  0000CE                     	ds	2
   755  0000D0                     sprintf@fmt:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x70
   759  0000D0                     	ds	6
   760  0000D6                     sprintf@ap:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x76
   764  0000D6                     	ds	2
   765  0000D8                     sprintf@f:
   766                           	callstack 0
   767                           
   768                           ; 6 bytes @ 0x78
   769  0000D8                     	ds	6
   770  0000DE                     ??_RTC_Calendario:
   771                           
   772                           ; 1 bytes @ 0x7E
   773  0000DE                     	ds	2
   774  0000E0                     _main$1813:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x80
   778  0000E0                     	ds	4
   779                           
   780                           	psect	cstackCOMRAM
   781  000001                     __pcstackCOMRAM:
   782                           	callstack 0
   783  000001                     ?_ReadLUZ:
   784                           	callstack 0
   785  000001                     ?_strlen:
   786                           	callstack 0
   787  000001                     ?___fpclassifyf:
   788                           	callstack 0
   789  000001                     ?_isupper:
   790                           	callstack 0
   791  000001                     ?_isalpha:
   792                           	callstack 0
   793  000001                     ?_isdigit:
   794                           	callstack 0
   795  000001                     ?_strncmp:
   796                           	callstack 0
   797  000001                     ?_isspace:
   798                           	callstack 0
   799  000001                     ?_islower:
   800                           	callstack 0
   801  000001                     ?___wmul:
   802                           	callstack 0
   803  000001                     ?___awdiv:
   804                           	callstack 0
   805  000001                     ?___awmod:
   806                           	callstack 0
   807  000001                     ?___flneg:
   808                           	callstack 0
   809  000001                     I2C_Read@flag:
   810                           	callstack 0
   811  000001                     I2C_Write@data:
   812                           	callstack 0
   813  000001                     LCD_MSdelay@val:
   814                           	callstack 0
   815  000001                     delay_us@nota:
   816                           	callstack 0
   817  000001                     ___wmul@multiplier:
   818                           	callstack 0
   819  000001                     ___awdiv@dividend:
   820                           	callstack 0
   821  000001                     ___awmod@dividend:
   822                           	callstack 0
   823  000001                     isalpha@c:
   824                           	callstack 0
   825  000001                     isdigit@c:
   826                           	callstack 0
   827  000001                     isspace@c:
   828                           	callstack 0
   829  000001                     isupper@c:
   830                           	callstack 0
   831  000001                     fputc@c:
   832                           	callstack 0
   833  000001                     strcpy@dest:
   834                           	callstack 0
   835  000001                     strlen@s:
   836                           	callstack 0
   837  000001                     strncmp@_l:
   838                           	callstack 0
   839  000001                     islower@c:
   840                           	callstack 0
   841  000001                     ___fleq@ff1:
   842                           	callstack 0
   843  000001                     ___flneg@f1:
   844                           	callstack 0
   845  000001                     ___fpclassifyf@x:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x0
   849  000001                     	ds	1
   850  000002                     I2C_Read@buffer:
   851                           	callstack 0
   852  000002                     I2C_Start@slave_write_address:
   853                           	callstack 0
   854  000002                     I2C_Repeated_Start@slave_read_address:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x1
   858  000002                     	ds	1
   859  000003                     ??_ReadLUZ:
   860  000003                     ??_isupper:
   861  000003                     ??_isalpha:
   862  000003                     ??_isdigit:
   863  000003                     ??_isspace:
   864  000003                     ??_islower:
   865  000003                     ??_delay_us:
   866  000003                     ??_RTC_Read_Clock:
   867  000003                     ??_RTC_Read_Calendar:
   868  000003                     LCD_MSdelay@i:
   869                           	callstack 0
   870  000003                     ___wmul@multiplicand:
   871                           	callstack 0
   872  000003                     ___awdiv@divisor:
   873                           	callstack 0
   874  000003                     ___awmod@divisor:
   875                           	callstack 0
   876  000003                     fputc@fp:
   877                           	callstack 0
   878  000003                     strcpy@src:
   879                           	callstack 0
   880  000003                     strlen@a:
   881                           	callstack 0
   882  000003                     strncmp@_r:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x2
   886  000003                     	ds	1
   887  000004                     RTC_Read_Clock@read_clock_address:
   888                           	callstack 0
   889  000004                     RTC_Read_Calendar@read_calendar_address:
   890                           	callstack 0
   891  000004                     delay_us@i:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x3
   895  000004                     	ds	1
   896  000005                     ??_fputc:
   897  000005                     ??___fpclassifyf:
   898  000005                     ??_strcpy:
   899  000005                     ___awdiv@counter:
   900                           	callstack 0
   901  000005                     ___awmod@counter:
   902                           	callstack 0
   903  000005                     LCD_MSdelay@j:
   904                           	callstack 0
   905  000005                     ReadLUZ@result:
   906                           	callstack 0
   907  000005                     ___wmul@product:
   908                           	callstack 0
   909  000005                     strncmp@n:
   910                           	callstack 0
   911  000005                     ___fleq@ff2:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x4
   915  000005                     	ds	1
   916  000006                     ___awdiv@sign:
   917                           	callstack 0
   918  000006                     ___awmod@sign:
   919                           	callstack 0
   920  000006                     play@nota:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x5
   924  000006                     	ds	1
   925  000007                     ??_LCD_Command:
   926  000007                     ??_LCD_Char:
   927  000007                     ??_strncmp:
   928  000007                     ?_tolower:
   929                           	callstack 0
   930  000007                     ?_toupper:
   931                           	callstack 0
   932  000007                     ?___xxtofl:
   933                           	callstack 0
   934  000007                     _isspace$1510:
   935                           	callstack 0
   936  000007                     ___awdiv@quotient:
   937                           	callstack 0
   938  000007                     strcpy@s:
   939                           	callstack 0
   940  000007                     tolower@c:
   941                           	callstack 0
   942  000007                     toupper@c:
   943                           	callstack 0
   944  000007                     ___xxtofl@val:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x6
   948  000007                     	ds	1
   949  000008                     ?_atoi:
   950                           	callstack 0
   951  000008                     LCD_Command@cmd:
   952                           	callstack 0
   953  000008                     LCD_Char@dat:
   954                           	callstack 0
   955  000008                     play@octava:
   956                           	callstack 0
   957  000008                     atoi@s:
   958                           	callstack 0
   959  000008                     strncmp@l:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x7
   963  000008                     	ds	1
   964  000009                     ??_tolower:
   965  000009                     ??_toupper:
   966  000009                     ??___fleq:
   967  000009                     LCD_String@msg:
   968                           	callstack 0
   969  000009                     LCD_Custom_Char@msg:
   970                           	callstack 0
   971  000009                     ___fpclassifyf@e:
   972                           	callstack 0
   973  000009                     strcpy@d:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x8
   977  000009                     	ds	1
   978  00000A                     ??_atoi:
   979  00000A                     play@duracion:
   980                           	callstack 0
   981  00000A                     fputs@s:
   982                           	callstack 0
   983  00000A                     strncmp@r:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x9
   987  00000A                     	ds	1
   988  00000B                     ??___xxtofl:
   989  00000B                     LCD_String_xy@pos:
   990                           	callstack 0
   991  00000B                     LCD_Custom_Char@loc:
   992                           	callstack 0
   993  00000B                     ___fpclassifyf@u:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0xA
   997  00000B                     	ds	1
   998  00000C                     ??_play:
   999  00000C                     LCD_Custom_Char@i:
  1000                           	callstack 0
  1001  00000C                     LCD_String_xy@msg:
  1002                           	callstack 0
  1003  00000C                     fputs@fp:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0xB
  1007  00000C                     	ds	1
  1008  00000D                     play@mS_Transcurridos:
  1009                           	callstack 0
  1010  00000D                     _tolower$1574:
  1011                           	callstack 0
  1012  00000D                     _toupper$1589:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0xC
  1016  00000D                     	ds	1
  1017  00000E                     LCD_String_xy@row:
  1018                           	callstack 0
  1019  00000E                     fputs@c:
  1020                           	callstack 0
  1021  00000E                     atoi@neg:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0xD
  1025  00000E                     	ds	1
  1026  00000F                     LCD_String_xy@location:
  1027                           	callstack 0
  1028  00000F                     ___xxtofl@sign:
  1029                           	callstack 0
  1030  00000F                     play@CiclosL:
  1031                           	callstack 0
  1032  00000F                     fputs@i:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0xE
  1036  00000F                     	ds	1
  1037  000010                     ___xxtofl@exp:
  1038                           	callstack 0
  1039  000010                     _atoi$1470:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0xF
  1043  000010                     	ds	1
  1044  000011                     ?_pad:
  1045                           	callstack 0
  1046  000011                     play@fn:
  1047                           	callstack 0
  1048  000011                     pad@fp:
  1049                           	callstack 0
  1050  000011                     ___xxtofl@arg:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x10
  1054  000011                     	ds	1
  1055  000012                     _atoi$1472:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x11
  1059  000012                     	ds	1
  1060  000013                     ??_PlayCancion:
  1061  000013                     pad@buf:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x12
  1065  000013                     	ds	1
  1066  000014                     _atoi$1471:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x13
  1070  000014                     	ds	1
  1071  000015                     ?___flmul:
  1072                           	callstack 0
  1073  000015                     pad@p:
  1074                           	callstack 0
  1075  000015                     atoi@n:
  1076                           	callstack 0
  1077  000015                     ___flmul@b:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x14
  1081  000015                     	ds	2
  1082  000017                     ??_pad:
  1083                           
  1084                           ; 1 bytes @ 0x16
  1085  000017                     	ds	1
  1086  000018                     pad@i:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x17
  1090  000018                     	ds	1
  1091  000019                     ___flmul@a:
  1092                           	callstack 0
  1093                           
  1094                           ; 4 bytes @ 0x18
  1095  000019                     	ds	1
  1096  00001A                     pad@w:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x19
  1100  00001A                     	ds	2
  1101  00001C                     ?_xtoa:
  1102                           	callstack 0
  1103  00001C                     xtoa@fp:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x1B
  1107  00001C                     	ds	1
  1108  00001D                     ??___flmul:
  1109                           
  1110                           ; 1 bytes @ 0x1C
  1111  00001D                     	ds	1
  1112  00001E                     xtoa@d:
  1113                           	callstack 0
  1114                           
  1115                           ; 8 bytes @ 0x1D
  1116  00001E                     	ds	3
  1117  000021                     ___flmul@sign:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x20
  1121  000021                     	ds	1
  1122  000022                     ___flmul@grs:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x21
  1126  000022                     	ds	4
  1127  000026                     ___flmul@aexp:
  1128                           	callstack 0
  1129  000026                     xtoa@x:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x25
  1133  000026                     	ds	1
  1134  000027                     ??_xtoa:
  1135  000027                     ___flmul@bexp:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x26
  1139  000027                     	ds	1
  1140  000028                     ___flmul@prod:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x27
  1144  000028                     	ds	4
  1145  00002C                     ___flmul@temp:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x2B
  1149  00002C                     	ds	2
  1150  00002E                     ?___fldiv:
  1151                           	callstack 0
  1152  00002E                     ___flge@ff1:
  1153                           	callstack 0
  1154  00002E                     ___fldiv@b:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x2D
  1158  00002E                     	ds	1
  1159  00002F                     _xtoa$1416:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x2E
  1163  00002F                     	ds	2
  1164  000031                     _xtoa$1417:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x30
  1168  000031                     	ds	1
  1169  000032                     ___flge@ff2:
  1170                           	callstack 0
  1171  000032                     ___fldiv@a:
  1172                           	callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x31
  1175  000032                     	ds	1
  1176  000033                     xtoa@p:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x32
  1180  000033                     	ds	2
  1181  000035                     xtoa@w:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x34
  1185  000035                     	ds	1
  1186  000036                     ??___fldiv:
  1187  000036                     ??___flge:
  1188                           
  1189                           ; 1 bytes @ 0x35
  1190  000036                     	ds	1
  1191  000037                     xtoa@n:
  1192                           	callstack 0
  1193                           
  1194                           ; 8 bytes @ 0x36
  1195  000037                     	ds	3
  1196  00003A                     ___fldiv@rem:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x39
  1200  00003A                     	ds	4
  1201  00003E                     ___fldiv@sign:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x3D
  1205  00003E                     	ds	1
  1206  00003F                     ___fldiv@new_exp:
  1207                           	callstack 0
  1208  00003F                     xtoa@i:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x3E
  1212  00003F                     	ds	2
  1213  000041                     xtoa@c:
  1214                           	callstack 0
  1215  000041                     ___fldiv@grs:
  1216                           	callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x40
  1219  000041                     	ds	4
  1220  000045                     ___fldiv@bexp:
  1221                           	callstack 0
  1222                           
  1223                           ; 1 bytes @ 0x44
  1224  000045                     	ds	1
  1225  000046                     ___fldiv@aexp:
  1226                           	callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x45
  1229  000046                     	ds	1
  1230  000047                     ?___fladd:
  1231                           	callstack 0
  1232  000047                     ?_floorf:
  1233                           	callstack 0
  1234  000047                     ___fladd@b:
  1235                           	callstack 0
  1236  000047                     floorf@x:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x46
  1240  000047                     	ds	4
  1241  00004B                     ??_floorf:
  1242  00004B                     ___fladd@a:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x4A
  1246  00004B                     	ds	4
  1247  00004F                     ??___fladd:
  1248                           
  1249                           ; 1 bytes @ 0x4E
  1250  00004F                     	ds	2
  1251  000051                     floorf@m:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x50
  1255  000051                     	ds	2
  1256  000053                     ___fladd@signs:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x52
  1260  000053                     	ds	1
  1261  000054                     ___fladd@aexp:
  1262                           	callstack 0
  1263                           
  1264                           ; 1 bytes @ 0x53
  1265  000054                     	ds	1
  1266  000055                     ___fladd@bexp:
  1267                           	callstack 0
  1268  000055                     floorf@e:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x54
  1272  000055                     	ds	1
  1273  000056                     ___fladd@grs:
  1274                           	callstack 0
  1275                           
  1276                           ; 1 bytes @ 0x55
  1277  000056                     	ds	1
  1278  000057                     ?___flsub:
  1279                           	callstack 0
  1280  000057                     ?___fltol:
  1281                           	callstack 0
  1282  000057                     ___fltol@f1:
  1283                           	callstack 0
  1284  000057                     ___flsub@b:
  1285                           	callstack 0
  1286  000057                     floorf@u:
  1287                           	callstack 0
  1288                           
  1289                           ; 4 bytes @ 0x56
  1290  000057                     	ds	4
  1291  00005B                     ??___fltol:
  1292  00005B                     ___flsub@a:
  1293                           	callstack 0
  1294                           
  1295                           ; 4 bytes @ 0x5A
  1296  00005B                     	ds	4
  1297  00005F                     
  1298                           ; 1 bytes @ 0x5E
  1299 ;;
  1300 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1301 ;;
  1302 ;; *************** function _main *****************
  1303 ;; Defined at:
  1304 ;;		line 55 in file "smart_main.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0
  1319 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1321 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1322 ;;Total ram usage:        4 bytes
  1323 ;; Hardware stack levels required when called: 9
  1324 ;; This function calls:
  1325 ;;		_I2C_Init
  1326 ;;		_LCD_Char
  1327 ;;		_LCD_Clear
  1328 ;;		_LCD_Command
  1329 ;;		_LCD_Custom_Char
  1330 ;;		_LCD_Init
  1331 ;;		_LCD_MSdelay
  1332 ;;		_LCD_String_xy
  1333 ;;		_PlayCancion
  1334 ;;		_RTC_Calendario
  1335 ;;		_ReadADC
  1336 ;;		_ReadLUZ
  1337 ;;		___flge
  1338 ;;		___xxtofl
  1339 ;;		_sprintf
  1340 ;; This function is called by:
  1341 ;;		Startup code after reset
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text0
  1346  00239A                     __ptext0:
  1347                           	callstack 0
  1348  00239A                     _main:
  1349                           	callstack 22
  1350  00239A                     
  1351                           ;smart_main.c: 56:     OSCCON = 0x72;
  1352  00239A  0E72               	movlw	114
  1353  00239C  6ED3               	movwf	211,c	;volatile
  1354                           
  1355                           ;smart_main.c: 57:     TRISE = 0x00;
  1356  00239E  0E00               	movlw	0
  1357  0023A0  6E96               	movwf	150,c	;volatile
  1358  0023A2                     
  1359                           ;smart_main.c: 60:     I2C_Init();
  1360  0023A2  EC98  F024         	call	_I2C_Init	;wreg free
  1361  0023A6                     
  1362                           ;smart_main.c: 61:     LCD_Init();
  1363  0023A6  EC2E  F024         	call	_LCD_Init	;wreg free
  1364  0023AA                     
  1365                           ;smart_main.c: 62:     LCD_Clear();
  1366  0023AA  ECC3  F024         	call	_LCD_Clear	;wreg free
  1367  0023AE                     l5336:
  1368                           
  1369                           ;smart_main.c: 65:         tempar = ReadADC();
  1370  0023AE  ECAD  F01C         	call	_ReadADC	;wreg free
  1371  0023B2  0100               	movlb	0	; () banked
  1372  0023B4  C062  F0E0         	movff	?_ReadADC,_main$1813
  1373  0023B8  C063  F0E1         	movff	?_ReadADC+1,_main$1813+1
  1374  0023BC  6BE2               	clrf	(_main$1813+2)& (0+255),b
  1375  0023BE  6BE3               	clrf	(_main$1813+3)& (0+255),b
  1376  0023C0                     
  1377                           ; BSR set to: 0
  1378                           ;smart_main.c: 65:         tempar = ReadADC();
  1379  0023C0  C0E0  F007         	movff	_main$1813,___xxtofl@val
  1380  0023C4  C0E1  F008         	movff	_main$1813+1,___xxtofl@val+1
  1381  0023C8  C0E2  F009         	movff	_main$1813+2,___xxtofl@val+2
  1382  0023CC  C0E3  F00A         	movff	_main$1813+3,___xxtofl@val+3
  1383  0023D0  0E00               	movlw	0
  1384  0023D2  EC59  F019         	call	___xxtofl
  1385  0023D6  C007  F0F4         	movff	?___xxtofl,_tempar
  1386  0023DA  C008  F0F5         	movff	?___xxtofl+1,_tempar+1
  1387  0023DE  C009  F0F6         	movff	?___xxtofl+2,_tempar+2
  1388  0023E2  C00A  F0F7         	movff	?___xxtofl+3,_tempar+3
  1389  0023E6                     
  1390                           ;smart_main.c: 66:         luz = ReadLUZ();
  1391  0023E6  EC4F  F020         	call	_ReadLUZ	;wreg free
  1392  0023EA  C001  F007         	movff	?_ReadLUZ,___xxtofl@val
  1393  0023EE  C002  F008         	movff	?_ReadLUZ+1,___xxtofl@val+1
  1394  0023F2  6A09               	clrf	(___xxtofl@val+2)^0,c
  1395  0023F4  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1396  0023F6  0E00               	movlw	0
  1397  0023F8  EC59  F019         	call	___xxtofl
  1398  0023FC  C007  F0F0         	movff	?___xxtofl,_luz
  1399  002400  C008  F0F1         	movff	?___xxtofl+1,_luz+1
  1400  002404  C009  F0F2         	movff	?___xxtofl+2,_luz+2
  1401  002408  C00A  F0F3         	movff	?___xxtofl+3,_luz+3
  1402  00240C                     
  1403                           ;smart_main.c: 67:         RTC_Calendario();
  1404  00240C  EC6B  F015         	call	_RTC_Calendario	;wreg free
  1405  002410                     
  1406                           ;smart_main.c: 68:         LCD_MSdelay(10);
  1407  002410  0E00               	movlw	0
  1408  002412  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1409  002414  0E0A               	movlw	10
  1410  002416  6E01               	movwf	LCD_MSdelay@val^0,c
  1411  002418  EC62  F022         	call	_LCD_MSdelay	;wreg free
  1412  00241C                     
  1413                           ;smart_main.c: 70:         if (tempar > 15 && (luz > 0 && luz < 400)) {
  1414  00241C  0E00               	movlw	0
  1415  00241E  6E2E               	movwf	___flge@ff1^0,c
  1416  002420  0E00               	movlw	0
  1417  002422  6E2F               	movwf	(___flge@ff1+1)^0,c
  1418  002424  0E70               	movlw	112
  1419  002426  6E30               	movwf	(___flge@ff1+2)^0,c
  1420  002428  0E41               	movlw	65
  1421  00242A  6E31               	movwf	(___flge@ff1+3)^0,c
  1422  00242C  C0F4  F032         	movff	_tempar,___flge@ff2
  1423  002430  C0F5  F033         	movff	_tempar+1,___flge@ff2+1
  1424  002434  C0F6  F034         	movff	_tempar+2,___flge@ff2+2
  1425  002438  C0F7  F035         	movff	_tempar+3,___flge@ff2+3
  1426  00243C  EC2B  F01C         	call	___flge	;wreg free
  1427  002440  B0D8               	btfsc	status,0,c
  1428  002442  EF25  F012         	goto	u6021
  1429  002446  EF27  F012         	goto	u6020
  1430  00244A                     u6021:
  1431  00244A  EF89  F012         	goto	l5362
  1432  00244E                     u6020:
  1433  00244E  0E00               	movlw	0
  1434  002450  6E2E               	movwf	___flge@ff1^0,c
  1435  002452  0E00               	movlw	0
  1436  002454  6E2F               	movwf	(___flge@ff1+1)^0,c
  1437  002456  0E00               	movlw	0
  1438  002458  6E30               	movwf	(___flge@ff1+2)^0,c
  1439  00245A  0E00               	movlw	0
  1440  00245C  6E31               	movwf	(___flge@ff1+3)^0,c
  1441  00245E  C0F0  F032         	movff	_luz,___flge@ff2
  1442  002462  C0F1  F033         	movff	_luz+1,___flge@ff2+1
  1443  002466  C0F2  F034         	movff	_luz+2,___flge@ff2+2
  1444  00246A  C0F3  F035         	movff	_luz+3,___flge@ff2+3
  1445  00246E  EC2B  F01C         	call	___flge	;wreg free
  1446  002472  B0D8               	btfsc	status,0,c
  1447  002474  EF3E  F012         	goto	u6031
  1448  002478  EF40  F012         	goto	u6030
  1449  00247C                     u6031:
  1450  00247C  EF89  F012         	goto	l5362
  1451  002480                     u6030:
  1452  002480  C0F0  F02E         	movff	_luz,___flge@ff1
  1453  002484  C0F1  F02F         	movff	_luz+1,___flge@ff1+1
  1454  002488  C0F2  F030         	movff	_luz+2,___flge@ff1+2
  1455  00248C  C0F3  F031         	movff	_luz+3,___flge@ff1+3
  1456  002490  0E00               	movlw	0
  1457  002492  6E32               	movwf	___flge@ff2^0,c
  1458  002494  0E00               	movlw	0
  1459  002496  6E33               	movwf	(___flge@ff2+1)^0,c
  1460  002498  0EC8               	movlw	200
  1461  00249A  6E34               	movwf	(___flge@ff2+2)^0,c
  1462  00249C  0E43               	movlw	67
  1463  00249E  6E35               	movwf	(___flge@ff2+3)^0,c
  1464  0024A0  EC2B  F01C         	call	___flge	;wreg free
  1465  0024A4  B0D8               	btfsc	status,0,c
  1466  0024A6  EF57  F012         	goto	u6041
  1467  0024AA  EF59  F012         	goto	u6040
  1468  0024AE                     u6041:
  1469  0024AE  EF89  F012         	goto	l5362
  1470  0024B2                     u6040:
  1471  0024B2                     
  1472                           ;smart_main.c: 71:             LATE0 = 0;
  1473  0024B2  908D               	bcf	3981,0,c	;volatile
  1474                           
  1475                           ;smart_main.c: 72:             LATE1 = 0;
  1476  0024B4  928D               	bcf	3981,1,c	;volatile
  1477                           
  1478                           ;smart_main.c: 73:             LATE2 = 0;
  1479  0024B6  948D               	bcf	3981,2,c	;volatile
  1480  0024B8                     
  1481                           ;smart_main.c: 74:             sprintf(Stemp, "%0.0fC", tempar);
  1482  0024B8  0E62               	movlw	low _Stemp
  1483  0024BA  0100               	movlb	0	; () banked
  1484  0024BC  6FCE               	movwf	sprintf@s& (0+255),b
  1485  0024BE  0E01               	movlw	high _Stemp
  1486  0024C0  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1487  0024C2  0E01               	movlw	low STR_1
  1488  0024C4  6FD0               	movwf	sprintf@fmt& (0+255),b
  1489  0024C6  0E08               	movlw	high STR_1
  1490  0024C8  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1491  0024CA  C0F4  F0D2         	movff	_tempar,?_sprintf+4
  1492  0024CE  C0F5  F0D3         	movff	_tempar+1,?_sprintf+5
  1493  0024D2  C0F6  F0D4         	movff	_tempar+2,?_sprintf+6
  1494  0024D6  C0F7  F0D5         	movff	_tempar+3,?_sprintf+7
  1495  0024DA  EC9C  F021         	call	_sprintf	;wreg free
  1496  0024DE                     
  1497                           ;smart_main.c: 75:             LCD_String_xy(1, 0, Stemp);
  1498  0024DE  0E00               	movlw	0
  1499  0024E0  6E0B               	movwf	LCD_String_xy@pos^0,c
  1500  0024E2  0E62               	movlw	low _Stemp
  1501  0024E4  6E0C               	movwf	LCD_String_xy@msg^0,c
  1502  0024E6  0E01               	movlw	high _Stemp
  1503  0024E8  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1504  0024EA  0E01               	movlw	1
  1505  0024EC  EC13  F023         	call	_LCD_String_xy
  1506  0024F0                     
  1507                           ;smart_main.c: 76:             LCD_Custom_Char(0, character2);
  1508  0024F0  0EE1               	movlw	low _character2
  1509  0024F2  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1510  0024F4  0E01               	movlw	high _character2
  1511  0024F6  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1512  0024F8  0E00               	movlw	0
  1513  0024FA  EC87  F022         	call	_LCD_Custom_Char
  1514                           
  1515                           ;smart_main.c: 77:             LCD_Command(0xc0);
  1516  0024FE  0EC0               	movlw	192
  1517  002500  EC16  F022         	call	_LCD_Command
  1518                           
  1519                           ;smart_main.c: 78:             LCD_Char(0);
  1520  002504  0E00               	movlw	0
  1521  002506  EC3C  F022         	call	_LCD_Char
  1522  00250A                     
  1523                           ;smart_main.c: 79:             PlayCancion();
  1524  00250A  ECFB  F01A         	call	_PlayCancion	;wreg free
  1525                           
  1526                           ;smart_main.c: 80:         }
  1527  00250E  EF92  F013         	goto	l59
  1528  002512                     l5362:
  1529  002512  C0F4  F02E         	movff	_tempar,___flge@ff1
  1530  002516  C0F5  F02F         	movff	_tempar+1,___flge@ff1+1
  1531  00251A  C0F6  F030         	movff	_tempar+2,___flge@ff1+2
  1532  00251E  C0F7  F031         	movff	_tempar+3,___flge@ff1+3
  1533  002522  0E00               	movlw	0
  1534  002524  6E32               	movwf	___flge@ff2^0,c
  1535  002526  0E00               	movlw	0
  1536  002528  6E33               	movwf	(___flge@ff2+1)^0,c
  1537  00252A  0E40               	movlw	64
  1538  00252C  6E34               	movwf	(___flge@ff2+2)^0,c
  1539  00252E  0E41               	movlw	65
  1540  002530  6E35               	movwf	(___flge@ff2+3)^0,c
  1541  002532  EC2B  F01C         	call	___flge	;wreg free
  1542  002536  A0D8               	btfss	status,0,c
  1543  002538  EFA0  F012         	goto	u6051
  1544  00253C  EFA2  F012         	goto	u6050
  1545  002540                     u6051:
  1546  002540  EF1B  F013         	goto	l5378
  1547  002544                     u6050:
  1548  002544  0E00               	movlw	0
  1549  002546  6E2E               	movwf	___flge@ff1^0,c
  1550  002548  0E00               	movlw	0
  1551  00254A  6E2F               	movwf	(___flge@ff1+1)^0,c
  1552  00254C  0E70               	movlw	112
  1553  00254E  6E30               	movwf	(___flge@ff1+2)^0,c
  1554  002550  0E41               	movlw	65
  1555  002552  6E31               	movwf	(___flge@ff1+3)^0,c
  1556  002554  C0F4  F032         	movff	_tempar,___flge@ff2
  1557  002558  C0F5  F033         	movff	_tempar+1,___flge@ff2+1
  1558  00255C  C0F6  F034         	movff	_tempar+2,___flge@ff2+2
  1559  002560  C0F7  F035         	movff	_tempar+3,___flge@ff2+3
  1560  002564  EC2B  F01C         	call	___flge	;wreg free
  1561  002568  A0D8               	btfss	status,0,c
  1562  00256A  EFB9  F012         	goto	u6061
  1563  00256E  EFBB  F012         	goto	u6060
  1564  002572                     u6061:
  1565  002572  EF1B  F013         	goto	l5378
  1566  002576                     u6060:
  1567  002576  0E00               	movlw	0
  1568  002578  6E2E               	movwf	___flge@ff1^0,c
  1569  00257A  0E00               	movlw	0
  1570  00257C  6E2F               	movwf	(___flge@ff1+1)^0,c
  1571  00257E  0EC8               	movlw	200
  1572  002580  6E30               	movwf	(___flge@ff1+2)^0,c
  1573  002582  0E43               	movlw	67
  1574  002584  6E31               	movwf	(___flge@ff1+3)^0,c
  1575  002586  C0F0  F032         	movff	_luz,___flge@ff2
  1576  00258A  C0F1  F033         	movff	_luz+1,___flge@ff2+1
  1577  00258E  C0F2  F034         	movff	_luz+2,___flge@ff2+2
  1578  002592  C0F3  F035         	movff	_luz+3,___flge@ff2+3
  1579  002596  EC2B  F01C         	call	___flge	;wreg free
  1580  00259A  B0D8               	btfsc	status,0,c
  1581  00259C  EFD2  F012         	goto	u6071
  1582  0025A0  EFD4  F012         	goto	u6070
  1583  0025A4                     u6071:
  1584  0025A4  EF1B  F013         	goto	l5378
  1585  0025A8                     u6070:
  1586  0025A8  C0F0  F02E         	movff	_luz,___flge@ff1
  1587  0025AC  C0F1  F02F         	movff	_luz+1,___flge@ff1+1
  1588  0025B0  C0F2  F030         	movff	_luz+2,___flge@ff1+2
  1589  0025B4  C0F3  F031         	movff	_luz+3,___flge@ff1+3
  1590  0025B8  0E00               	movlw	0
  1591  0025BA  6E32               	movwf	___flge@ff2^0,c
  1592  0025BC  0E00               	movlw	0
  1593  0025BE  6E33               	movwf	(___flge@ff2+1)^0,c
  1594  0025C0  0E2F               	movlw	47
  1595  0025C2  6E34               	movwf	(___flge@ff2+2)^0,c
  1596  0025C4  0E44               	movlw	68
  1597  0025C6  6E35               	movwf	(___flge@ff2+3)^0,c
  1598  0025C8  EC2B  F01C         	call	___flge	;wreg free
  1599  0025CC  B0D8               	btfsc	status,0,c
  1600  0025CE  EFEB  F012         	goto	u6081
  1601  0025D2  EFED  F012         	goto	u6080
  1602  0025D6                     u6081:
  1603  0025D6  EF1B  F013         	goto	l5378
  1604  0025DA                     u6080:
  1605  0025DA                     
  1606                           ;smart_main.c: 82:             LATE0 = 1;
  1607  0025DA  808D               	bsf	3981,0,c	;volatile
  1608                           
  1609                           ;smart_main.c: 83:             LATE1 = 1;
  1610  0025DC  828D               	bsf	3981,1,c	;volatile
  1611                           
  1612                           ;smart_main.c: 84:             LATE2 = 0;
  1613  0025DE  948D               	bcf	3981,2,c	;volatile
  1614  0025E0                     
  1615                           ;smart_main.c: 85:             sprintf(Stemp, "%0.0fC", tempar);
  1616  0025E0  0E62               	movlw	low _Stemp
  1617  0025E2  0100               	movlb	0	; () banked
  1618  0025E4  6FCE               	movwf	sprintf@s& (0+255),b
  1619  0025E6  0E01               	movlw	high _Stemp
  1620  0025E8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1621  0025EA  0E01               	movlw	low STR_1
  1622  0025EC  6FD0               	movwf	sprintf@fmt& (0+255),b
  1623  0025EE  0E08               	movlw	high STR_1
  1624  0025F0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1625  0025F2  C0F4  F0D2         	movff	_tempar,?_sprintf+4
  1626  0025F6  C0F5  F0D3         	movff	_tempar+1,?_sprintf+5
  1627  0025FA  C0F6  F0D4         	movff	_tempar+2,?_sprintf+6
  1628  0025FE  C0F7  F0D5         	movff	_tempar+3,?_sprintf+7
  1629  002602  EC9C  F021         	call	_sprintf	;wreg free
  1630  002606                     
  1631                           ;smart_main.c: 86:             LCD_String_xy(1, 0, Stemp);
  1632  002606  0E00               	movlw	0
  1633  002608  6E0B               	movwf	LCD_String_xy@pos^0,c
  1634  00260A  0E62               	movlw	low _Stemp
  1635  00260C  6E0C               	movwf	LCD_String_xy@msg^0,c
  1636  00260E  0E01               	movlw	high _Stemp
  1637  002610  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1638  002612  0E01               	movlw	1
  1639  002614  EC13  F023         	call	_LCD_String_xy
  1640  002618                     
  1641                           ;smart_main.c: 87:             LCD_Custom_Char(0, character3);
  1642  002618  0ED9               	movlw	low _character3
  1643  00261A  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1644  00261C  0E01               	movlw	high _character3
  1645  00261E  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1646  002620  0E00               	movlw	0
  1647  002622  EC87  F022         	call	_LCD_Custom_Char
  1648                           
  1649                           ;smart_main.c: 88:             LCD_Command(0xc0);
  1650  002626  0EC0               	movlw	192
  1651  002628  EC16  F022         	call	_LCD_Command
  1652                           
  1653                           ;smart_main.c: 89:             LCD_Char(0);
  1654  00262C  0E00               	movlw	0
  1655  00262E  EC3C  F022         	call	_LCD_Char
  1656                           
  1657                           ;smart_main.c: 91:         }
  1658  002632  EF92  F013         	goto	l59
  1659  002636                     l5378:
  1660  002636  C0F4  F02E         	movff	_tempar,___flge@ff1
  1661  00263A  C0F5  F02F         	movff	_tempar+1,___flge@ff1+1
  1662  00263E  C0F6  F030         	movff	_tempar+2,___flge@ff1+2
  1663  002642  C0F7  F031         	movff	_tempar+3,___flge@ff1+3
  1664  002646  0E00               	movlw	0
  1665  002648  6E32               	movwf	___flge@ff2^0,c
  1666  00264A  0E00               	movlw	0
  1667  00264C  6E33               	movwf	(___flge@ff2+1)^0,c
  1668  00264E  0E40               	movlw	64
  1669  002650  6E34               	movwf	(___flge@ff2+2)^0,c
  1670  002652  0E41               	movlw	65
  1671  002654  6E35               	movwf	(___flge@ff2+3)^0,c
  1672  002656  EC2B  F01C         	call	___flge	;wreg free
  1673  00265A  B0D8               	btfsc	status,0,c
  1674  00265C  EF32  F013         	goto	u6091
  1675  002660  EF34  F013         	goto	u6090
  1676  002664                     u6091:
  1677  002664  EF92  F013         	goto	l59
  1678  002668                     u6090:
  1679  002668  0E00               	movlw	0
  1680  00266A  6E2E               	movwf	___flge@ff1^0,c
  1681  00266C  0E00               	movlw	0
  1682  00266E  6E2F               	movwf	(___flge@ff1+1)^0,c
  1683  002670  0E2F               	movlw	47
  1684  002672  6E30               	movwf	(___flge@ff1+2)^0,c
  1685  002674  0E44               	movlw	68
  1686  002676  6E31               	movwf	(___flge@ff1+3)^0,c
  1687  002678  C0F0  F032         	movff	_luz,___flge@ff2
  1688  00267C  C0F1  F033         	movff	_luz+1,___flge@ff2+1
  1689  002680  C0F2  F034         	movff	_luz+2,___flge@ff2+2
  1690  002684  C0F3  F035         	movff	_luz+3,___flge@ff2+3
  1691  002688  EC2B  F01C         	call	___flge	;wreg free
  1692  00268C  B0D8               	btfsc	status,0,c
  1693  00268E  EF4B  F013         	goto	u6101
  1694  002692  EF4D  F013         	goto	u6100
  1695  002696                     u6101:
  1696  002696  EF92  F013         	goto	l59
  1697  00269A                     u6100:
  1698  00269A  C0F0  F02E         	movff	_luz,___flge@ff1
  1699  00269E  C0F1  F02F         	movff	_luz+1,___flge@ff1+1
  1700  0026A2  C0F2  F030         	movff	_luz+2,___flge@ff1+2
  1701  0026A6  C0F3  F031         	movff	_luz+3,___flge@ff1+3
  1702  0026AA  0E00               	movlw	0
  1703  0026AC  6E32               	movwf	___flge@ff2^0,c
  1704  0026AE  0E80               	movlw	128
  1705  0026B0  6E33               	movwf	(___flge@ff2+1)^0,c
  1706  0026B2  0EBB               	movlw	187
  1707  0026B4  6E34               	movwf	(___flge@ff2+2)^0,c
  1708  0026B6  0E44               	movlw	68
  1709  0026B8  6E35               	movwf	(___flge@ff2+3)^0,c
  1710  0026BA  EC2B  F01C         	call	___flge	;wreg free
  1711  0026BE  B0D8               	btfsc	status,0,c
  1712  0026C0  EF64  F013         	goto	u6111
  1713  0026C4  EF66  F013         	goto	u6110
  1714  0026C8                     u6111:
  1715  0026C8  EF92  F013         	goto	l59
  1716  0026CC                     u6110:
  1717  0026CC                     
  1718                           ;smart_main.c: 93:             LATE0 = 1;
  1719  0026CC  808D               	bsf	3981,0,c	;volatile
  1720                           
  1721                           ;smart_main.c: 94:             LATE1 = 1;
  1722  0026CE  828D               	bsf	3981,1,c	;volatile
  1723                           
  1724                           ;smart_main.c: 95:             LATE2 = 1;
  1725  0026D0  848D               	bsf	3981,2,c	;volatile
  1726  0026D2                     
  1727                           ;smart_main.c: 96:             sprintf(Stemp, "%0.0fC", tempar);
  1728  0026D2  0E62               	movlw	low _Stemp
  1729  0026D4  0100               	movlb	0	; () banked
  1730  0026D6  6FCE               	movwf	sprintf@s& (0+255),b
  1731  0026D8  0E01               	movlw	high _Stemp
  1732  0026DA  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1733  0026DC  0E01               	movlw	low STR_1
  1734  0026DE  6FD0               	movwf	sprintf@fmt& (0+255),b
  1735  0026E0  0E08               	movlw	high STR_1
  1736  0026E2  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1737  0026E4  C0F4  F0D2         	movff	_tempar,?_sprintf+4
  1738  0026E8  C0F5  F0D3         	movff	_tempar+1,?_sprintf+5
  1739  0026EC  C0F6  F0D4         	movff	_tempar+2,?_sprintf+6
  1740  0026F0  C0F7  F0D5         	movff	_tempar+3,?_sprintf+7
  1741  0026F4  EC9C  F021         	call	_sprintf	;wreg free
  1742  0026F8                     
  1743                           ;smart_main.c: 97:             LCD_String_xy(1, 0, Stemp);
  1744  0026F8  0E00               	movlw	0
  1745  0026FA  6E0B               	movwf	LCD_String_xy@pos^0,c
  1746  0026FC  0E62               	movlw	low _Stemp
  1747  0026FE  6E0C               	movwf	LCD_String_xy@msg^0,c
  1748  002700  0E01               	movlw	high _Stemp
  1749  002702  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1750  002704  0E01               	movlw	1
  1751  002706  EC13  F023         	call	_LCD_String_xy
  1752  00270A                     
  1753                           ;smart_main.c: 98:             LCD_Custom_Char(0, character1);
  1754  00270A  0EE9               	movlw	low _character1
  1755  00270C  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1756  00270E  0E01               	movlw	high _character1
  1757  002710  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1758  002712  0E00               	movlw	0
  1759  002714  EC87  F022         	call	_LCD_Custom_Char
  1760                           
  1761                           ;smart_main.c: 99:             LCD_Command(0xc0);
  1762  002718  0EC0               	movlw	192
  1763  00271A  EC16  F022         	call	_LCD_Command
  1764                           
  1765                           ;smart_main.c: 100:             LCD_Char(0);
  1766  00271E  0E00               	movlw	0
  1767  002720  EC3C  F022         	call	_LCD_Char
  1768  002724                     l59:
  1769                           
  1770                           ;smart_main.c: 102:         LCD_MSdelay(3000);
  1771  002724  0E0B               	movlw	11
  1772  002726  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1773  002728  0EB8               	movlw	184
  1774  00272A  6E01               	movwf	LCD_MSdelay@val^0,c
  1775  00272C  EC62  F022         	call	_LCD_MSdelay	;wreg free
  1776                           
  1777                           ;smart_main.c: 103:         LCD_Clear();
  1778  002730  ECC3  F024         	call	_LCD_Clear	;wreg free
  1779  002734  EFD7  F011         	goto	l5336
  1780  002738  EF00  F000         	goto	start
  1781  00273C                     __end_of_main:
  1782                           	callstack 0
  1783                           
  1784 ;; *************** function _ReadLUZ *****************
  1785 ;; Defined at:
  1786 ;;		line 12 in file "Sensor_luz.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  result          2    4[COMRAM] unsigned short 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  2    0[COMRAM] unsigned short 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1800 ;;      Params:         2       0       0       0       0       0       0       0       0
  1801 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1802 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1803 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1804 ;;Total ram usage:        6 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_main
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text1
  1814  00409E                     __ptext1:
  1815                           	callstack 0
  1816  00409E                     _ReadLUZ:
  1817                           	callstack 30
  1818  00409E                     
  1819                           ;Sensor_luz.c: 14:     uint16_t result;;Sensor_luz.c: 16:     TRISD = 0x00;
  1820  00409E  0E00               	movlw	0
  1821  0040A0  6E95               	movwf	149,c	;volatile
  1822  0040A2                     
  1823                           ;Sensor_luz.c: 17:     TRISA = 0xFF;
  1824  0040A2  6892               	setf	146,c	;volatile
  1825                           
  1826                           ;Sensor_luz.c: 19:     OSCCONbits.IRCF = 0b111;
  1827  0040A4  0E70               	movlw	112
  1828  0040A6  12D3               	iorwf	211,f,c	;volatile
  1829                           
  1830                           ;Sensor_luz.c: 20:     OSCCONbits.SCS = 0b10;
  1831  0040A8  50D3               	movf	211,w,c	;volatile
  1832  0040AA  0BFC               	andlw	-4
  1833  0040AC  0902               	iorlw	2
  1834  0040AE  6ED3               	movwf	211,c	;volatile
  1835                           
  1836                           ;Sensor_luz.c: 23:     ADCON1bits.PCFG = 0b1101;
  1837  0040B0  50C1               	movf	193,w,c	;volatile
  1838  0040B2  0BF0               	andlw	-16
  1839  0040B4  090D               	iorlw	13
  1840  0040B6  6EC1               	movwf	193,c	;volatile
  1841                           
  1842                           ;Sensor_luz.c: 24:     ADCON1bits.VCFG = 0b00;
  1843  0040B8  0ECF               	movlw	-49
  1844  0040BA  16C1               	andwf	193,f,c	;volatile
  1845                           
  1846                           ;Sensor_luz.c: 25:     ADCON0bits.CHS = 0b0001;
  1847  0040BC  50C2               	movf	194,w,c	;volatile
  1848  0040BE  0BC3               	andlw	-61
  1849  0040C0  0904               	iorlw	4
  1850  0040C2  6EC2               	movwf	194,c	;volatile
  1851                           
  1852                           ;Sensor_luz.c: 26:     ADCON2bits.ACQT = 0b010;
  1853  0040C4  50C0               	movf	192,w,c	;volatile
  1854  0040C6  0BC7               	andlw	-57
  1855  0040C8  0910               	iorlw	16
  1856  0040CA  6EC0               	movwf	192,c	;volatile
  1857                           
  1858                           ;Sensor_luz.c: 27:     ADCON2bits.ADCS = 0b001;
  1859  0040CC  50C0               	movf	192,w,c	;volatile
  1860  0040CE  0BF8               	andlw	-8
  1861  0040D0  0901               	iorlw	1
  1862  0040D2  6EC0               	movwf	192,c	;volatile
  1863  0040D4                     
  1864                           ;Sensor_luz.c: 28:     ADCON2bits.ADFM = 1;
  1865  0040D4  8EC0               	bsf	192,7,c	;volatile
  1866  0040D6                     
  1867                           ;Sensor_luz.c: 29:     ADCON0bits.ADON = 1;
  1868  0040D6  80C2               	bsf	194,0,c	;volatile
  1869  0040D8                     
  1870                           ;Sensor_luz.c: 44:         ADCON0bits.GO_DONE = 1;
  1871  0040D8  82C2               	bsf	194,1,c	;volatile
  1872  0040DA                     l165:
  1873  0040DA  B2C2               	btfsc	194,1,c	;volatile
  1874  0040DC  EF72  F020         	goto	u5961
  1875  0040E0  EF74  F020         	goto	u5960
  1876  0040E4                     u5961:
  1877  0040E4  EF6D  F020         	goto	l165
  1878  0040E8                     u5960:
  1879  0040E8                     
  1880                           ;Sensor_luz.c: 46:         result = ADRESH;
  1881  0040E8  CFC4 F005          	movff	4036,ReadLUZ@result	;volatile
  1882  0040EC  6A06               	clrf	(ReadLUZ@result+1)^0,c
  1883  0040EE                     
  1884                           ;Sensor_luz.c: 47:         result = (result << 8) + ADRESL;
  1885  0040EE  5005               	movf	ReadLUZ@result^0,w,c
  1886  0040F0  6E03               	movwf	??_ReadLUZ^0,c
  1887  0040F2  50C3               	movf	195,w,c	;volatile
  1888  0040F4  6E05               	movwf	ReadLUZ@result^0,c
  1889  0040F6  C003  F006         	movff	??_ReadLUZ,ReadLUZ@result+1
  1890  0040FA                     
  1891                           ;Sensor_luz.c: 49:         return result;
  1892  0040FA  C005  F001         	movff	ReadLUZ@result,?_ReadLUZ
  1893  0040FE  C006  F002         	movff	ReadLUZ@result+1,?_ReadLUZ+1
  1894  004102  0012               	return		;funcret
  1895  004104                     __end_of_ReadLUZ:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _ReadADC *****************
  1899 ;; Defined at:
  1900 ;;		line 13 in file "Temperatura.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  result          2    6[BANK0 ] unsigned short 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  2    2[BANK0 ] unsigned short 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         0       2       0       0       0       0       0       0       0
  1915 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1916 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1917 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        6 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 1
  1921 ;; This function calls:
  1922 ;;		___fladd
  1923 ;;		___fldiv
  1924 ;;		___flmul
  1925 ;;		___fltol
  1926 ;;		___xxtofl
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text2
  1933  00395A                     __ptext2:
  1934                           	callstack 0
  1935  00395A                     _ReadADC:
  1936                           	callstack 29
  1937  00395A                     
  1938                           ;Temperatura.c: 15:     uint16_t result;;Temperatura.c: 17:     TRISD = 0x00;
  1939  00395A  0E00               	movlw	0
  1940  00395C  6E95               	movwf	149,c	;volatile
  1941  00395E                     
  1942                           ;Temperatura.c: 18:     TRISA = 0xFF;
  1943  00395E  6892               	setf	146,c	;volatile
  1944                           
  1945                           ;Temperatura.c: 20:     OSCCONbits.IRCF = 0b111;
  1946  003960  0E70               	movlw	112
  1947  003962  12D3               	iorwf	211,f,c	;volatile
  1948                           
  1949                           ;Temperatura.c: 21:     OSCCONbits.SCS = 0b10;
  1950  003964  50D3               	movf	211,w,c	;volatile
  1951  003966  0BFC               	andlw	-4
  1952  003968  0902               	iorlw	2
  1953  00396A  6ED3               	movwf	211,c	;volatile
  1954                           
  1955                           ;Temperatura.c: 24:     ADCON1bits.PCFG = 0b1110;
  1956  00396C  50C1               	movf	193,w,c	;volatile
  1957  00396E  0BF0               	andlw	-16
  1958  003970  090E               	iorlw	14
  1959  003972  6EC1               	movwf	193,c	;volatile
  1960                           
  1961                           ;Temperatura.c: 25:     ADCON1bits.VCFG = 0b00;
  1962  003974  0ECF               	movlw	-49
  1963  003976  16C1               	andwf	193,f,c	;volatile
  1964                           
  1965                           ;Temperatura.c: 26:     ADCON0bits.CHS = 0b0000;
  1966  003978  0EC3               	movlw	-61
  1967  00397A  16C2               	andwf	194,f,c	;volatile
  1968                           
  1969                           ;Temperatura.c: 27:     ADCON2bits.ACQT = 0b010;
  1970  00397C  50C0               	movf	192,w,c	;volatile
  1971  00397E  0BC7               	andlw	-57
  1972  003980  0910               	iorlw	16
  1973  003982  6EC0               	movwf	192,c	;volatile
  1974                           
  1975                           ;Temperatura.c: 28:     ADCON2bits.ADCS = 0b001;
  1976  003984  50C0               	movf	192,w,c	;volatile
  1977  003986  0BF8               	andlw	-8
  1978  003988  0901               	iorlw	1
  1979  00398A  6EC0               	movwf	192,c	;volatile
  1980  00398C                     
  1981                           ;Temperatura.c: 29:     ADCON2bits.ADFM = 1;
  1982  00398C  8EC0               	bsf	192,7,c	;volatile
  1983  00398E                     
  1984                           ;Temperatura.c: 30:     ADCON0bits.ADON = 1;
  1985  00398E  80C2               	bsf	194,0,c	;volatile
  1986  003990                     
  1987                           ;Temperatura.c: 33:         ADCON0bits.GO_DONE = 1;
  1988  003990  82C2               	bsf	194,1,c	;volatile
  1989  003992                     l140:
  1990  003992  B2C2               	btfsc	194,1,c	;volatile
  1991  003994  EFCE  F01C         	goto	u5951
  1992  003998  EFD0  F01C         	goto	u5950
  1993  00399C                     u5951:
  1994  00399C  EFC9  F01C         	goto	l140
  1995  0039A0                     u5950:
  1996  0039A0                     
  1997                           ;Temperatura.c: 35:         result = ADRESH;
  1998  0039A0  CFC4 F066          	movff	4036,ReadADC@result	;volatile
  1999  0039A4  0100               	movlb	0	; () banked
  2000  0039A6  6B67               	clrf	(ReadADC@result+1)& (0+255),b
  2001  0039A8                     
  2002                           ; BSR set to: 0
  2003                           ;Temperatura.c: 36:         result = (result << 8) + ADRESL;
  2004  0039A8  5166               	movf	ReadADC@result& (0+255),w,b
  2005  0039AA  6F64               	movwf	??_ReadADC& (0+255),b
  2006  0039AC  50C3               	movf	195,w,c	;volatile
  2007  0039AE  6F66               	movwf	ReadADC@result& (0+255),b
  2008  0039B0  C064  F067         	movff	??_ReadADC,ReadADC@result+1
  2009  0039B4                     
  2010                           ; BSR set to: 0
  2011                           ;Temperatura.c: 37:         result = ((result*500.0)/1023.0)-49.5;
  2012  0039B4  0E00               	movlw	0
  2013  0039B6  6E4B               	movwf	___fladd@a^0,c
  2014  0039B8  0E00               	movlw	0
  2015  0039BA  6E4C               	movwf	(___fladd@a+1)^0,c
  2016  0039BC  0E46               	movlw	70
  2017  0039BE  6E4D               	movwf	(___fladd@a+2)^0,c
  2018  0039C0  0EC2               	movlw	194
  2019  0039C2  6E4E               	movwf	(___fladd@a+3)^0,c
  2020  0039C4  0E00               	movlw	0
  2021  0039C6  6E32               	movwf	___fldiv@a^0,c
  2022  0039C8  0EC0               	movlw	192
  2023  0039CA  6E33               	movwf	(___fldiv@a+1)^0,c
  2024  0039CC  0E7F               	movlw	127
  2025  0039CE  6E34               	movwf	(___fldiv@a+2)^0,c
  2026  0039D0  0E44               	movlw	68
  2027  0039D2  6E35               	movwf	(___fldiv@a+3)^0,c
  2028  0039D4  0E00               	movlw	0
  2029  0039D6  6E19               	movwf	___flmul@a^0,c
  2030  0039D8  0E00               	movlw	0
  2031  0039DA  6E1A               	movwf	(___flmul@a+1)^0,c
  2032  0039DC  0EFA               	movlw	250
  2033  0039DE  6E1B               	movwf	(___flmul@a+2)^0,c
  2034  0039E0  0E43               	movlw	67
  2035  0039E2  6E1C               	movwf	(___flmul@a+3)^0,c
  2036  0039E4  C066  F007         	movff	ReadADC@result,___xxtofl@val
  2037  0039E8  C067  F008         	movff	ReadADC@result+1,___xxtofl@val+1
  2038  0039EC  6A09               	clrf	(___xxtofl@val+2)^0,c
  2039  0039EE  6A0A               	clrf	(___xxtofl@val+3)^0,c
  2040  0039F0  0E00               	movlw	0
  2041  0039F2  EC59  F019         	call	___xxtofl
  2042  0039F6  C007  F015         	movff	?___xxtofl,___flmul@b
  2043  0039FA  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  2044  0039FE  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  2045  003A02  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  2046  003A06  ECB8  F00F         	call	___flmul	;wreg free
  2047  003A0A  C015  F02E         	movff	?___flmul,___fldiv@b
  2048  003A0E  C016  F02F         	movff	?___flmul+1,___fldiv@b+1
  2049  003A12  C017  F030         	movff	?___flmul+2,___fldiv@b+2
  2050  003A16  C018  F031         	movff	?___flmul+3,___fldiv@b+3
  2051  003A1A  EC9E  F013         	call	___fldiv	;wreg free
  2052  003A1E  C02E  F047         	movff	?___fldiv,___fladd@b
  2053  003A22  C02F  F048         	movff	?___fldiv+1,___fladd@b+1
  2054  003A26  C030  F049         	movff	?___fldiv+2,___fladd@b+2
  2055  003A2A  C031  F04A         	movff	?___fldiv+3,___fladd@b+3
  2056  003A2E  EC58  F00D         	call	___fladd	;wreg free
  2057  003A32  C047  F057         	movff	?___fladd,___fltol@f1
  2058  003A36  C048  F058         	movff	?___fladd+1,___fltol@f1+1
  2059  003A3A  C049  F059         	movff	?___fladd+2,___fltol@f1+2
  2060  003A3E  C04A  F05A         	movff	?___fladd+3,___fltol@f1+3
  2061  003A42  ECA7  F01B         	call	___fltol	;wreg free
  2062  003A46  C057  F066         	movff	?___fltol,ReadADC@result
  2063  003A4A  C058  F067         	movff	?___fltol+1,ReadADC@result+1
  2064  003A4E                     
  2065                           ;Temperatura.c: 39:         return result;
  2066  003A4E  C066  F062         	movff	ReadADC@result,?_ReadADC
  2067  003A52  C067  F063         	movff	ReadADC@result+1,?_ReadADC+1
  2068  003A56  0012               	return		;funcret
  2069  003A58                     __end_of_ReadADC:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function ___xxtofl *****************
  2073 ;; Defined at:
  2074 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  sign            1    wreg     unsigned char 
  2077 ;;  val             4    6[COMRAM] long 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  sign            1   14[COMRAM] unsigned char 
  2080 ;;  arg             4   16[COMRAM] unsigned long 
  2081 ;;  exp             1   15[COMRAM] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  4    6[COMRAM] unsigned char 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2091 ;;      Params:         4       0       0       0       0       0       0       0       0
  2092 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2093 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2094 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2095 ;;Total ram usage:       14 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;;		_ReadADC
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text3
  2106  0032B2                     __ptext3:
  2107                           	callstack 0
  2108  0032B2                     ___xxtofl:
  2109                           	callstack 30
  2110                           
  2111                           ;incstack = 0
  2112                           ;___xxtofl@sign stored from wreg
  2113  0032B2  6E0F               	movwf	___xxtofl@sign^0,c
  2114  0032B4  500F               	movf	___xxtofl@sign^0,w,c
  2115  0032B6  B4D8               	btfsc	status,2,c
  2116  0032B8  EF60  F019         	goto	u5851
  2117  0032BC  EF62  F019         	goto	u5850
  2118  0032C0                     u5851:
  2119  0032C0  EF84  F019         	goto	l1033
  2120  0032C4                     u5850:
  2121  0032C4  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  2122  0032C6  EF69  F019         	goto	u5860
  2123  0032CA  EF67  F019         	goto	u5861
  2124  0032CE                     u5861:
  2125  0032CE  EF84  F019         	goto	l1033
  2126  0032D2                     u5860:
  2127  0032D2  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  2128  0032D6  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  2129  0032DA  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  2130  0032DE  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  2131  0032E2  1E0B               	comf	??___xxtofl^0,f,c
  2132  0032E4  1E0C               	comf	(??___xxtofl+1)^0,f,c
  2133  0032E6  1E0D               	comf	(??___xxtofl+2)^0,f,c
  2134  0032E8  1E0E               	comf	(??___xxtofl+3)^0,f,c
  2135  0032EA  2A0B               	incf	??___xxtofl^0,f,c
  2136  0032EC  0E00               	movlw	0
  2137  0032EE  220C               	addwfc	(??___xxtofl+1)^0,f,c
  2138  0032F0  220D               	addwfc	(??___xxtofl+2)^0,f,c
  2139  0032F2  220E               	addwfc	(??___xxtofl+3)^0,f,c
  2140  0032F4  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  2141  0032F8  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  2142  0032FC  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  2143  003300  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  2144  003304  EF8C  F019         	goto	l5098
  2145  003308                     l1033:
  2146  003308  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  2147  00330C  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2148  003310  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2149  003314  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2150  003318                     l5098:
  2151  003318  5007               	movf	___xxtofl@val^0,w,c
  2152  00331A  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  2153  00331C  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  2154  00331E  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  2155  003320  A4D8               	btfss	status,2,c
  2156  003322  EF95  F019         	goto	u5871
  2157  003326  EF97  F019         	goto	u5870
  2158  00332A                     u5871:
  2159  00332A  EFA1  F019         	goto	l5104
  2160  00332E                     u5870:
  2161  00332E  0E00               	movlw	0
  2162  003330  6E07               	movwf	?___xxtofl^0,c
  2163  003332  0E00               	movlw	0
  2164  003334  6E08               	movwf	(?___xxtofl+1)^0,c
  2165  003336  0E00               	movlw	0
  2166  003338  6E09               	movwf	(?___xxtofl+2)^0,c
  2167  00333A  0E00               	movlw	0
  2168  00333C  6E0A               	movwf	(?___xxtofl+3)^0,c
  2169  00333E  EF32  F01A         	goto	l1036
  2170  003342                     l5104:
  2171  003342  0E96               	movlw	150
  2172  003344  6E10               	movwf	___xxtofl@exp^0,c
  2173  003346  EFAB  F019         	goto	l5108
  2174  00334A                     l5106:
  2175  00334A  2A10               	incf	___xxtofl@exp^0,f,c
  2176  00334C  90D8               	bcf	status,0,c
  2177  00334E  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  2178  003350  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  2179  003352  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  2180  003354  3211               	rrcf	___xxtofl@arg^0,f,c
  2181  003356                     l5108:
  2182  003356  0E00               	movlw	0
  2183  003358  1411               	andwf	___xxtofl@arg^0,w,c
  2184  00335A  6E0B               	movwf	??___xxtofl^0,c
  2185  00335C  0E00               	movlw	0
  2186  00335E  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  2187  003360  6E0C               	movwf	(??___xxtofl+1)^0,c
  2188  003362  0E00               	movlw	0
  2189  003364  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  2190  003366  6E0D               	movwf	(??___xxtofl+2)^0,c
  2191  003368  0EFE               	movlw	254
  2192  00336A  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  2193  00336C  6E0E               	movwf	(??___xxtofl+3)^0,c
  2194  00336E  500B               	movf	??___xxtofl^0,w,c
  2195  003370  100C               	iorwf	(??___xxtofl+1)^0,w,c
  2196  003372  100D               	iorwf	(??___xxtofl+2)^0,w,c
  2197  003374  100E               	iorwf	(??___xxtofl+3)^0,w,c
  2198  003376  A4D8               	btfss	status,2,c
  2199  003378  EFC0  F019         	goto	u5881
  2200  00337C  EFC2  F019         	goto	u5880
  2201  003380                     u5881:
  2202  003380  EFA5  F019         	goto	l5106
  2203  003384                     u5880:
  2204  003384  EFD0  F019         	goto	l1040
  2205  003388                     l5110:
  2206  003388  2A10               	incf	___xxtofl@exp^0,f,c
  2207  00338A  0E01               	movlw	1
  2208  00338C  2611               	addwf	___xxtofl@arg^0,f,c
  2209  00338E  0E00               	movlw	0
  2210  003390  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  2211  003392  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  2212  003394  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  2213  003396  90D8               	bcf	status,0,c
  2214  003398  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  2215  00339A  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  2216  00339C  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  2217  00339E  3211               	rrcf	___xxtofl@arg^0,f,c
  2218  0033A0                     l1040:
  2219  0033A0  0E00               	movlw	0
  2220  0033A2  1411               	andwf	___xxtofl@arg^0,w,c
  2221  0033A4  6E0B               	movwf	??___xxtofl^0,c
  2222  0033A6  0E00               	movlw	0
  2223  0033A8  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  2224  0033AA  6E0C               	movwf	(??___xxtofl+1)^0,c
  2225  0033AC  0E00               	movlw	0
  2226  0033AE  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  2227  0033B0  6E0D               	movwf	(??___xxtofl+2)^0,c
  2228  0033B2  0EFF               	movlw	255
  2229  0033B4  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  2230  0033B6  6E0E               	movwf	(??___xxtofl+3)^0,c
  2231  0033B8  500B               	movf	??___xxtofl^0,w,c
  2232  0033BA  100C               	iorwf	(??___xxtofl+1)^0,w,c
  2233  0033BC  100D               	iorwf	(??___xxtofl+2)^0,w,c
  2234  0033BE  100E               	iorwf	(??___xxtofl+3)^0,w,c
  2235  0033C0  A4D8               	btfss	status,2,c
  2236  0033C2  EFE5  F019         	goto	u5891
  2237  0033C6  EFE7  F019         	goto	u5890
  2238  0033CA                     u5891:
  2239  0033CA  EFC4  F019         	goto	l5110
  2240  0033CE                     u5890:
  2241  0033CE  EFEF  F019         	goto	l5118
  2242  0033D2                     l5116:
  2243  0033D2  0610               	decf	___xxtofl@exp^0,f,c
  2244  0033D4  90D8               	bcf	status,0,c
  2245  0033D6  3611               	rlcf	___xxtofl@arg^0,f,c
  2246  0033D8  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  2247  0033DA  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  2248  0033DC  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  2249  0033DE                     l5118:
  2250  0033DE  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  2251  0033E0  EFF4  F019         	goto	u5901
  2252  0033E4  EFF6  F019         	goto	u5900
  2253  0033E8                     u5901:
  2254  0033E8  EFFE  F019         	goto	l1047
  2255  0033EC                     u5900:
  2256  0033EC  0E02               	movlw	2
  2257  0033EE  6010               	cpfslt	___xxtofl@exp^0,c
  2258  0033F0  EFFC  F019         	goto	u5911
  2259  0033F4  EFFE  F019         	goto	u5910
  2260  0033F8                     u5911:
  2261  0033F8  EFE9  F019         	goto	l5116
  2262  0033FC                     u5910:
  2263  0033FC                     l1047:
  2264  0033FC  B010               	btfsc	___xxtofl@exp^0,0,c
  2265  0033FE  EF03  F01A         	goto	u5921
  2266  003402  EF05  F01A         	goto	u5920
  2267  003406                     u5921:
  2268  003406  EF06  F01A         	goto	l5124
  2269  00340A                     u5920:
  2270  00340A  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  2271  00340C                     l5124:
  2272  00340C  90D8               	bcf	status,0,c
  2273  00340E  3210               	rrcf	___xxtofl@exp^0,f,c
  2274  003410  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  2275  003414  6A0C               	clrf	(??___xxtofl+1)^0,c
  2276  003416  6A0D               	clrf	(??___xxtofl+2)^0,c
  2277  003418  6A0E               	clrf	(??___xxtofl+3)^0,c
  2278  00341A  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  2279  00341E  6A0D               	clrf	(??___xxtofl+2)^0,c
  2280  003420  6A0C               	clrf	(??___xxtofl+1)^0,c
  2281  003422  6A0B               	clrf	??___xxtofl^0,c
  2282  003424  500B               	movf	??___xxtofl^0,w,c
  2283  003426  1211               	iorwf	___xxtofl@arg^0,f,c
  2284  003428  500C               	movf	(??___xxtofl+1)^0,w,c
  2285  00342A  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  2286  00342C  500D               	movf	(??___xxtofl+2)^0,w,c
  2287  00342E  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  2288  003430  500E               	movf	(??___xxtofl+3)^0,w,c
  2289  003432  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  2290  003434  500F               	movf	___xxtofl@sign^0,w,c
  2291  003436  B4D8               	btfsc	status,2,c
  2292  003438  EF20  F01A         	goto	u5931
  2293  00343C  EF22  F01A         	goto	u5930
  2294  003440                     u5931:
  2295  003440  EF2A  F01A         	goto	l5134
  2296  003444                     u5930:
  2297  003444  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  2298  003446  EF29  F01A         	goto	u5940
  2299  00344A  EF27  F01A         	goto	u5941
  2300  00344E                     u5941:
  2301  00344E  EF2A  F01A         	goto	l5134
  2302  003452                     u5940:
  2303  003452  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  2304  003454                     l5134:
  2305  003454  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  2306  003458  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  2307  00345C  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  2308  003460  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  2309  003464                     l1036:
  2310  003464  0012               	return		;funcret
  2311  003466                     __end_of___xxtofl:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _RTC_Calendario *****************
  2315 ;; Defined at:
  2316 ;;		line 85 in file "reloj.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  hours          10   57[BANK1 ] unsigned char [10]
  2321 ;;  mins           10   47[BANK1 ] unsigned char [10]
  2322 ;;  secs           10   37[BANK1 ] unsigned char [10]
  2323 ;;  year           10   27[BANK1 ] unsigned char [10]
  2324 ;;  month          10   17[BANK1 ] unsigned char [10]
  2325 ;;  date           10    7[BANK1 ] unsigned char [10]
  2326 ;;  days            7    0[BANK1 ] unsigned char [7]
  2327 ;;  AM_PM           1   67[BANK1 ] unsigned char 
  2328 ;;  Clock_type      1    0        unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2338 ;;      Params:         0       0       0       0       0       0       0       0       0
  2339 ;;      Locals:         0       0      68       0       0       0       0       0       0
  2340 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2341 ;;      Totals:         0       2      68       0       0       0       0       0       0
  2342 ;;Total ram usage:       70 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 8
  2345 ;; This function calls:
  2346 ;;		_I2C_Init
  2347 ;;		_I2C_Stop
  2348 ;;		_LCD_Clear
  2349 ;;		_LCD_Init
  2350 ;;		_LCD_MSdelay
  2351 ;;		_LCD_String
  2352 ;;		_LCD_String_xy
  2353 ;;		_RTC_Read_Calendar
  2354 ;;		_RTC_Read_Clock
  2355 ;;		_sprintf
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text4
  2362  002AD6                     __ptext4:
  2363                           	callstack 0
  2364  002AD6                     _RTC_Calendario:
  2365                           	callstack 22
  2366  002AD6                     
  2367                           ;reloj.c: 91:     char AM_PM = 0x05;
  2368  002AD6  0E05               	movlw	5
  2369  002AD8  0101               	movlb	1	; () banked
  2370  002ADA  6FB9               	movwf	RTC_Calendario@AM_PM& (0+255),b
  2371  002ADC                     
  2372                           ; BSR set to: 1
  2373                           ;reloj.c: 92:     char days[7] = {'S','M','T','W','t','F','s'};
  2374  002ADC  EE21  F0D2         	lfsr	2,RTC_Calendario@F3531
  2375  002AE0  EE11  F076         	lfsr	1,RTC_Calendario@days
  2376  002AE4  0E06               	movlw	6
  2377  002AE6                     u5971:
  2378  002AE6  CFDB FFE3          	movff	plusw2,plusw1
  2379  002AEA  06E8               	decf	wreg,f,c
  2380  002AEC  E2FC               	bc	u5971
  2381  002AEE                     
  2382                           ; BSR set to: 1
  2383                           ;reloj.c: 93:     OSCCON=0x72;
  2384  002AEE  0E72               	movlw	114
  2385  002AF0  6ED3               	movwf	211,c	;volatile
  2386  002AF2                     
  2387                           ; BSR set to: 1
  2388                           ;reloj.c: 95:     I2C_Init();
  2389  002AF2  EC98  F024         	call	_I2C_Init	;wreg free
  2390  002AF6                     
  2391                           ;reloj.c: 96:     LCD_Init();
  2392  002AF6  EC2E  F024         	call	_LCD_Init	;wreg free
  2393  002AFA                     
  2394                           ;reloj.c: 97:     LCD_Clear();
  2395  002AFA  ECC3  F024         	call	_LCD_Clear	;wreg free
  2396  002AFE                     
  2397                           ;reloj.c: 98:     LCD_MSdelay(10);
  2398  002AFE  0E00               	movlw	0
  2399  002B00  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  2400  002B02  0E0A               	movlw	10
  2401  002B04  6E01               	movwf	LCD_MSdelay@val^0,c
  2402  002B06  EC62  F022         	call	_LCD_MSdelay	;wreg free
  2403  002B0A                     
  2404                           ;reloj.c: 100:     {;reloj.c: 101:         RTC_Read_Clock(0);
  2405  002B0A  0E00               	movlw	0
  2406  002B0C  ECCE  F022         	call	_RTC_Read_Clock
  2407  002B10                     
  2408                           ;reloj.c: 102:         if(hour & (1<<Clock_type)){
  2409  002B10  0101               	movlb	1	; () banked
  2410  002B12  AD0C               	btfss	_hour& (0+255),6,b
  2411  002B14  EF8E  F015         	goto	u5981
  2412  002B18  EF90  F015         	goto	u5980
  2413  002B1C                     u5981:
  2414  002B1C  EFF4  F015         	goto	l5210
  2415  002B20                     u5980:
  2416  002B20                     
  2417                           ; BSR set to: 1
  2418                           ;reloj.c: 104:             if(hour & (1<<AM_PM)){
  2419  002B20  AB0C               	btfss	_hour& (0+255),5,b
  2420  002B22  EF95  F015         	goto	u5991
  2421  002B26  EF97  F015         	goto	u5990
  2422  002B2A                     u5991:
  2423  002B2A  EFA2  F015         	goto	l5194
  2424  002B2E                     u5990:
  2425  002B2E                     
  2426                           ; BSR set to: 1
  2427                           ;reloj.c: 105:                 LCD_String_xy(1,14,"PM");
  2428  002B2E  0E0E               	movlw	14
  2429  002B30  6E0B               	movwf	LCD_String_xy@pos^0,c
  2430  002B32  0E46               	movlw	low STR_4
  2431  002B34  6E0C               	movwf	LCD_String_xy@msg^0,c
  2432  002B36  0E08               	movlw	high STR_4
  2433  002B38  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2434  002B3A  0E01               	movlw	1
  2435  002B3C  EC13  F023         	call	_LCD_String_xy
  2436                           
  2437                           ;reloj.c: 106:             }
  2438  002B40  EFAB  F015         	goto	l5196
  2439  002B44                     l5194:
  2440                           
  2441                           ; BSR set to: 1
  2442                           ;reloj.c: 108:                 LCD_String_xy(1,14,"AM");
  2443  002B44  0E0E               	movlw	14
  2444  002B46  6E0B               	movwf	LCD_String_xy@pos^0,c
  2445  002B48  0E43               	movlw	low STR_5
  2446  002B4A  6E0C               	movwf	LCD_String_xy@msg^0,c
  2447  002B4C  0E08               	movlw	high STR_5
  2448  002B4E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2449  002B50  0E01               	movlw	1
  2450  002B52  EC13  F023         	call	_LCD_String_xy
  2451  002B56                     l5196:
  2452                           
  2453                           ;reloj.c: 111:             hour = hour & (0x1f);
  2454  002B56  0E1F               	movlw	31
  2455  002B58  0101               	movlb	1	; () banked
  2456  002B5A  150C               	andwf	_hour& (0+255),w,b
  2457  002B5C  6F0C               	movwf	_hour& (0+255),b
  2458  002B5E  6B0D               	clrf	(_hour+1)& (0+255),b
  2459  002B60                     
  2460                           ; BSR set to: 1
  2461                           ;reloj.c: 112:             sprintf(secs,"%x ",sec);
  2462  002B60  0E9B               	movlw	low RTC_Calendario@secs
  2463  002B62  0100               	movlb	0	; () banked
  2464  002B64  6FCE               	movwf	sprintf@s& (0+255),b
  2465  002B66  0E01               	movlw	high RTC_Calendario@secs
  2466  002B68  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2467  002B6A  0E18               	movlw	low STR_6
  2468  002B6C  6FD0               	movwf	sprintf@fmt& (0+255),b
  2469  002B6E  0E08               	movlw	high STR_6
  2470  002B70  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2471  002B72  C110  F0D2         	movff	_sec,?_sprintf+4
  2472  002B76  C111  F0D3         	movff	_sec+1,?_sprintf+5
  2473  002B7A  EC9C  F021         	call	_sprintf	;wreg free
  2474  002B7E                     
  2475                           ;reloj.c: 113:             sprintf(mins,"%x:",min);
  2476  002B7E  0EA5               	movlw	low RTC_Calendario@mins
  2477  002B80  0100               	movlb	0	; () banked
  2478  002B82  6FCE               	movwf	sprintf@s& (0+255),b
  2479  002B84  0E01               	movlw	high RTC_Calendario@mins
  2480  002B86  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2481  002B88  0E20               	movlw	low STR_7
  2482  002B8A  6FD0               	movwf	sprintf@fmt& (0+255),b
  2483  002B8C  0E08               	movlw	high STR_7
  2484  002B8E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2485  002B90  C10E  F0D2         	movff	_min,?_sprintf+4
  2486  002B94  C10F  F0D3         	movff	_min+1,?_sprintf+5
  2487  002B98  EC9C  F021         	call	_sprintf	;wreg free
  2488  002B9C                     
  2489                           ;reloj.c: 114:             sprintf(hours,"%x:",hour);
  2490  002B9C  0EAF               	movlw	low RTC_Calendario@hours
  2491  002B9E  0100               	movlb	0	; () banked
  2492  002BA0  6FCE               	movwf	sprintf@s& (0+255),b
  2493  002BA2  0E01               	movlw	high RTC_Calendario@hours
  2494  002BA4  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2495  002BA6  0E20               	movlw	low STR_7
  2496  002BA8  6FD0               	movwf	sprintf@fmt& (0+255),b
  2497  002BAA  0E08               	movlw	high STR_7
  2498  002BAC  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2499  002BAE  C10C  F0D2         	movff	_hour,?_sprintf+4
  2500  002BB2  C10D  F0D3         	movff	_hour+1,?_sprintf+5
  2501  002BB6  EC9C  F021         	call	_sprintf	;wreg free
  2502  002BBA                     
  2503                           ;reloj.c: 115:             LCD_String_xy(0,4,hours);
  2504  002BBA  0E04               	movlw	4
  2505  002BBC  6E0B               	movwf	LCD_String_xy@pos^0,c
  2506  002BBE  0EAF               	movlw	low RTC_Calendario@hours
  2507  002BC0  6E0C               	movwf	LCD_String_xy@msg^0,c
  2508  002BC2  0E01               	movlw	high RTC_Calendario@hours
  2509  002BC4  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2510  002BC6  0E00               	movlw	0
  2511  002BC8  EC13  F023         	call	_LCD_String_xy
  2512  002BCC                     l5206:
  2513                           
  2514                           ;reloj.c: 116:             LCD_String(mins);
  2515  002BCC  0EA5               	movlw	low RTC_Calendario@mins
  2516  002BCE  6E09               	movwf	LCD_String@msg^0,c
  2517  002BD0  0E01               	movlw	high RTC_Calendario@mins
  2518  002BD2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2519  002BD4  EC12  F021         	call	_LCD_String	;wreg free
  2520  002BD8                     
  2521                           ;reloj.c: 117:             LCD_String(secs);
  2522  002BD8  0E9B               	movlw	low RTC_Calendario@secs
  2523  002BDA  6E09               	movwf	LCD_String@msg^0,c
  2524  002BDC  0E01               	movlw	high RTC_Calendario@secs
  2525  002BDE  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2526  002BE0  EC12  F021         	call	_LCD_String	;wreg free
  2527                           
  2528                           ;reloj.c: 118:         }
  2529  002BE4  EF30  F016         	goto	l5224
  2530  002BE8                     l5210:
  2531                           
  2532                           ; BSR set to: 1
  2533                           ;reloj.c: 121:             hour = hour & (0x3f);
  2534  002BE8  0E3F               	movlw	63
  2535  002BEA  150C               	andwf	_hour& (0+255),w,b
  2536  002BEC  6F0C               	movwf	_hour& (0+255),b
  2537  002BEE  6B0D               	clrf	(_hour+1)& (0+255),b
  2538  002BF0                     
  2539                           ; BSR set to: 1
  2540                           ;reloj.c: 122:             sprintf(secs,"%x ",sec);
  2541  002BF0  0E9B               	movlw	low RTC_Calendario@secs
  2542  002BF2  0100               	movlb	0	; () banked
  2543  002BF4  6FCE               	movwf	sprintf@s& (0+255),b
  2544  002BF6  0E01               	movlw	high RTC_Calendario@secs
  2545  002BF8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2546  002BFA  0E18               	movlw	low STR_6
  2547  002BFC  6FD0               	movwf	sprintf@fmt& (0+255),b
  2548  002BFE  0E08               	movlw	high STR_6
  2549  002C00  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2550  002C02  C110  F0D2         	movff	_sec,?_sprintf+4
  2551  002C06  C111  F0D3         	movff	_sec+1,?_sprintf+5
  2552  002C0A  EC9C  F021         	call	_sprintf	;wreg free
  2553  002C0E                     
  2554                           ;reloj.c: 123:             sprintf(mins,"%x:",min);
  2555  002C0E  0EA5               	movlw	low RTC_Calendario@mins
  2556  002C10  0100               	movlb	0	; () banked
  2557  002C12  6FCE               	movwf	sprintf@s& (0+255),b
  2558  002C14  0E01               	movlw	high RTC_Calendario@mins
  2559  002C16  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2560  002C18  0E20               	movlw	low STR_7
  2561  002C1A  6FD0               	movwf	sprintf@fmt& (0+255),b
  2562  002C1C  0E08               	movlw	high STR_7
  2563  002C1E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2564  002C20  C10E  F0D2         	movff	_min,?_sprintf+4
  2565  002C24  C10F  F0D3         	movff	_min+1,?_sprintf+5
  2566  002C28  EC9C  F021         	call	_sprintf	;wreg free
  2567  002C2C                     
  2568                           ;reloj.c: 124:             sprintf(hours,"%x:",hour);
  2569  002C2C  0EAF               	movlw	low RTC_Calendario@hours
  2570  002C2E  0100               	movlb	0	; () banked
  2571  002C30  6FCE               	movwf	sprintf@s& (0+255),b
  2572  002C32  0E01               	movlw	high RTC_Calendario@hours
  2573  002C34  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2574  002C36  0E20               	movlw	low STR_7
  2575  002C38  6FD0               	movwf	sprintf@fmt& (0+255),b
  2576  002C3A  0E08               	movlw	high STR_7
  2577  002C3C  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2578  002C3E  C10C  F0D2         	movff	_hour,?_sprintf+4
  2579  002C42  C10D  F0D3         	movff	_hour+1,?_sprintf+5
  2580  002C46  EC9C  F021         	call	_sprintf	;wreg free
  2581  002C4A                     
  2582                           ;reloj.c: 125:             LCD_String_xy(0,4,hours);
  2583  002C4A  0E04               	movlw	4
  2584  002C4C  6E0B               	movwf	LCD_String_xy@pos^0,c
  2585  002C4E  0EAF               	movlw	low RTC_Calendario@hours
  2586  002C50  6E0C               	movwf	LCD_String_xy@msg^0,c
  2587  002C52  0E01               	movlw	high RTC_Calendario@hours
  2588  002C54  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2589  002C56  0E00               	movlw	0
  2590  002C58  EC13  F023         	call	_LCD_String_xy
  2591  002C5C  EFE6  F015         	goto	l5206
  2592  002C60                     l5224:
  2593                           
  2594                           ;reloj.c: 130:         RTC_Read_Calendar(3);
  2595  002C60  0E03               	movlw	3
  2596  002C62  EC6F  F021         	call	_RTC_Read_Calendar
  2597  002C66                     
  2598                           ;reloj.c: 131:         I2C_Stop();
  2599  002C66  ECA5  F024         	call	_I2C_Stop	;wreg free
  2600  002C6A                     
  2601                           ;reloj.c: 132:         sprintf(date,"%x-",Date);
  2602  002C6A  0E7D               	movlw	low RTC_Calendario@date
  2603  002C6C  0100               	movlb	0	; () banked
  2604  002C6E  6FCE               	movwf	sprintf@s& (0+255),b
  2605  002C70  0E01               	movlw	high RTC_Calendario@date
  2606  002C72  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2607  002C74  0E1C               	movlw	low STR_12
  2608  002C76  6FD0               	movwf	sprintf@fmt& (0+255),b
  2609  002C78  0E08               	movlw	high STR_12
  2610  002C7A  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2611  002C7C  C108  F0D2         	movff	_Date,?_sprintf+4
  2612  002C80  C109  F0D3         	movff	_Date+1,?_sprintf+5
  2613  002C84  EC9C  F021         	call	_sprintf	;wreg free
  2614  002C88                     
  2615                           ;reloj.c: 133:         sprintf(month,"%x-",Month);
  2616  002C88  0E87               	movlw	low RTC_Calendario@month
  2617  002C8A  0100               	movlb	0	; () banked
  2618  002C8C  6FCE               	movwf	sprintf@s& (0+255),b
  2619  002C8E  0E01               	movlw	high RTC_Calendario@month
  2620  002C90  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2621  002C92  0E1C               	movlw	low STR_12
  2622  002C94  6FD0               	movwf	sprintf@fmt& (0+255),b
  2623  002C96  0E08               	movlw	high STR_12
  2624  002C98  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2625  002C9A  C106  F0D2         	movff	_Month,?_sprintf+4
  2626  002C9E  C107  F0D3         	movff	_Month+1,?_sprintf+5
  2627  002CA2  EC9C  F021         	call	_sprintf	;wreg free
  2628  002CA6                     
  2629                           ;reloj.c: 134:         sprintf(year,"%x ",Year);
  2630  002CA6  0E91               	movlw	low RTC_Calendario@year
  2631  002CA8  0100               	movlb	0	; () banked
  2632  002CAA  6FCE               	movwf	sprintf@s& (0+255),b
  2633  002CAC  0E01               	movlw	high RTC_Calendario@year
  2634  002CAE  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2635  002CB0  0E18               	movlw	low STR_6
  2636  002CB2  6FD0               	movwf	sprintf@fmt& (0+255),b
  2637  002CB4  0E08               	movlw	high STR_6
  2638  002CB6  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2639  002CB8  C104  F0D2         	movff	_Year,?_sprintf+4
  2640  002CBC  C105  F0D3         	movff	_Year+1,?_sprintf+5
  2641  002CC0  EC9C  F021         	call	_sprintf	;wreg free
  2642  002CC4                     
  2643                           ;reloj.c: 135:         LCD_String_xy(2,2,date);
  2644  002CC4  0E02               	movlw	2
  2645  002CC6  6E0B               	movwf	LCD_String_xy@pos^0,c
  2646  002CC8  0E7D               	movlw	low RTC_Calendario@date
  2647  002CCA  6E0C               	movwf	LCD_String_xy@msg^0,c
  2648  002CCC  0E01               	movlw	high RTC_Calendario@date
  2649  002CCE  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2650  002CD0  0E02               	movlw	2
  2651  002CD2  EC13  F023         	call	_LCD_String_xy
  2652  002CD6                     
  2653                           ;reloj.c: 136:         LCD_String(month);
  2654  002CD6  0E87               	movlw	low RTC_Calendario@month
  2655  002CD8  6E09               	movwf	LCD_String@msg^0,c
  2656  002CDA  0E01               	movlw	high RTC_Calendario@month
  2657  002CDC  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2658  002CDE  EC12  F021         	call	_LCD_String	;wreg free
  2659  002CE2                     
  2660                           ;reloj.c: 137:         LCD_String(year);
  2661  002CE2  0E91               	movlw	low RTC_Calendario@year
  2662  002CE4  6E09               	movwf	LCD_String@msg^0,c
  2663  002CE6  0E01               	movlw	high RTC_Calendario@year
  2664  002CE8  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2665  002CEA  EC12  F021         	call	_LCD_String	;wreg free
  2666                           
  2667                           ;reloj.c: 140:         switch(days[Day])
  2668  002CEE  EFB1  F016         	goto	l5284
  2669  002CF2                     l5240:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;reloj.c: 143:                         LCD_String("Sun");
  2673  002CF2  0E34               	movlw	low STR_15
  2674  002CF4  6E09               	movwf	LCD_String@msg^0,c
  2675  002CF6  0E08               	movlw	high STR_15
  2676  002CF8  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2677  002CFA  EC12  F021         	call	_LCD_String	;wreg free
  2678  002CFE  EFE2  F016         	goto	l253
  2679  002D02                     l5246:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;reloj.c: 147:                         LCD_String("Mon");
  2683  002D02  0E30               	movlw	low STR_16
  2684  002D04  6E09               	movwf	LCD_String@msg^0,c
  2685  002D06  0E08               	movlw	high STR_16
  2686  002D08  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2687  002D0A  EC12  F021         	call	_LCD_String	;wreg free
  2688  002D0E  EFE2  F016         	goto	l253
  2689  002D12                     l5252:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;reloj.c: 151:                         LCD_String("Tue");
  2693  002D12  0E28               	movlw	low STR_17
  2694  002D14  6E09               	movwf	LCD_String@msg^0,c
  2695  002D16  0E08               	movlw	high STR_17
  2696  002D18  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2697  002D1A  EC12  F021         	call	_LCD_String	;wreg free
  2698  002D1E  EFE2  F016         	goto	l253
  2699  002D22                     l5258:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;reloj.c: 155:                         LCD_String("Wed");
  2703  002D22  0E24               	movlw	low STR_18
  2704  002D24  6E09               	movwf	LCD_String@msg^0,c
  2705  002D26  0E08               	movlw	high STR_18
  2706  002D28  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2707  002D2A  EC12  F021         	call	_LCD_String	;wreg free
  2708  002D2E  EFE2  F016         	goto	l253
  2709  002D32                     l5264:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;reloj.c: 159:                         LCD_String("Thu");
  2713  002D32  0E3C               	movlw	low STR_19
  2714  002D34  6E09               	movwf	LCD_String@msg^0,c
  2715  002D36  0E08               	movlw	high STR_19
  2716  002D38  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2717  002D3A  EC12  F021         	call	_LCD_String	;wreg free
  2718  002D3E  EFE2  F016         	goto	l253
  2719  002D42                     l5270:
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;reloj.c: 163:                         LCD_String("Fri");
  2723  002D42  0E2C               	movlw	low STR_20
  2724  002D44  6E09               	movwf	LCD_String@msg^0,c
  2725  002D46  0E08               	movlw	high STR_20
  2726  002D48  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2727  002D4A  EC12  F021         	call	_LCD_String	;wreg free
  2728  002D4E  EFE2  F016         	goto	l253
  2729  002D52                     l5276:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;reloj.c: 167:                         LCD_String("Sat");
  2733  002D52  0E38               	movlw	low STR_21
  2734  002D54  6E09               	movwf	LCD_String@msg^0,c
  2735  002D56  0E08               	movlw	high STR_21
  2736  002D58  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2737  002D5A  EC12  F021         	call	_LCD_String	;wreg free
  2738  002D5E  EFE2  F016         	goto	l253
  2739  002D62                     l5284:
  2740  002D62  0E76               	movlw	low RTC_Calendario@days
  2741  002D64  0101               	movlb	1	; () banked
  2742  002D66  250A               	addwf	_Day& (0+255),w,b
  2743  002D68  6ED9               	movwf	fsr2l,c
  2744  002D6A  0E01               	movlw	high RTC_Calendario@days
  2745  002D6C  210B               	addwfc	(_Day+1)& (0+255),w,b
  2746  002D6E  6EDA               	movwf	fsr2h,c
  2747  002D70  50DF               	movf	indf2,w,c
  2748  002D72  0100               	movlb	0	; () banked
  2749  002D74  6FDE               	movwf	??_RTC_Calendario& (0+255),b
  2750  002D76  6BDF               	clrf	(??_RTC_Calendario+1)& (0+255),b
  2751                           
  2752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2753                           ; Switch size 1, requested type "simple"
  2754                           ; Number of cases is 1, Range of values is 0 to 0
  2755                           ; switch strategies available:
  2756                           ; Name         Instructions Cycles
  2757                           ; simple_byte            4     3 (average)
  2758                           ;	Chosen strategy is simple_byte
  2759  002D78  51DF               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2760  002D7A  0A00               	xorlw	0	; case 0
  2761  002D7C  B4D8               	btfsc	status,2,c
  2762  002D7E  EFC3  F016         	goto	l5470
  2763  002D82  EFE2  F016         	goto	l253
  2764  002D86                     l5470:
  2765                           
  2766                           ; BSR set to: 0
  2767                           ; Switch size 1, requested type "simple"
  2768                           ; Number of cases is 7, Range of values is 70 to 116
  2769                           ; switch strategies available:
  2770                           ; Name         Instructions Cycles
  2771                           ; simple_byte           22    12 (average)
  2772                           ;	Chosen strategy is simple_byte
  2773  002D86  51DE               	movf	??_RTC_Calendario& (0+255),w,b
  2774  002D88  0A46               	xorlw	70	; case 70
  2775  002D8A  B4D8               	btfsc	status,2,c
  2776  002D8C  EFA1  F016         	goto	l5270
  2777  002D90  0A0B               	xorlw	11	; case 77
  2778  002D92  B4D8               	btfsc	status,2,c
  2779  002D94  EF81  F016         	goto	l5246
  2780  002D98  0A1E               	xorlw	30	; case 83
  2781  002D9A  B4D8               	btfsc	status,2,c
  2782  002D9C  EF79  F016         	goto	l5240
  2783  002DA0  0A07               	xorlw	7	; case 84
  2784  002DA2  B4D8               	btfsc	status,2,c
  2785  002DA4  EF89  F016         	goto	l5252
  2786  002DA8  0A03               	xorlw	3	; case 87
  2787  002DAA  B4D8               	btfsc	status,2,c
  2788  002DAC  EF91  F016         	goto	l5258
  2789  002DB0  0A24               	xorlw	36	; case 115
  2790  002DB2  B4D8               	btfsc	status,2,c
  2791  002DB4  EFA9  F016         	goto	l5276
  2792  002DB8  0A07               	xorlw	7	; case 116
  2793  002DBA  B4D8               	btfsc	status,2,c
  2794  002DBC  EF99  F016         	goto	l5264
  2795  002DC0  EFE2  F016         	goto	l253
  2796  002DC4                     l253:
  2797  002DC4  0012               	return		;funcret
  2798  002DC6                     __end_of_RTC_Calendario:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function _sprintf *****************
  2802 ;; Defined at:
  2803 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  s               2  110[BANK0 ] PTR unsigned char 
  2806 ;;		 -> RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), 
  2807 ;;		 -> RTC_Calendario@mins(10), RTC_Calendario@secs(10), Stemp(20), 
  2808 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  2809 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
  2810 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  2811 ;;		 -> STR_6(4), STR_3(7), STR_2(7), STR_1(7), 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  f               6  120[BANK0 ] struct _IO_FILE
  2814 ;;  ap              2  118[BANK0 ] PTR void [1]
  2815 ;;		 -> ?_sprintf(2), 
  2816 ;;  ret             2    0        int 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  2  110[BANK0 ] int 
  2819 ;; Registers used:
  2820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2826 ;;      Params:         0       8       0       0       0       0       0       0       0
  2827 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2829 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2830 ;;Total ram usage:       16 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 7
  2833 ;; This function calls:
  2834 ;;		_vfprintf
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;;		_RTC_Calendario
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text5
  2842  004338                     __ptext5:
  2843                           	callstack 0
  2844  004338                     _sprintf:
  2845                           	callstack 23
  2846  004338  0ED2               	movlw	low (?_sprintf+4)
  2847  00433A  0100               	movlb	0	; () banked
  2848  00433C  6FD6               	movwf	sprintf@ap& (0+255),b
  2849  00433E  0E00               	movlw	high (?_sprintf+4)
  2850  004340  6FD7               	movwf	(sprintf@ap+1)& (0+255),b
  2851  004342  C0CE  F0D8         	movff	sprintf@s,sprintf@f
  2852  004346  C0CF  F0D9         	movff	sprintf@s+1,sprintf@f+1
  2853  00434A                     
  2854                           ; BSR set to: 0
  2855  00434A  0E00               	movlw	0
  2856  00434C  6FDB               	movwf	(sprintf@f+3)& (0+255),b
  2857  00434E  0E00               	movlw	0
  2858  004350  6FDA               	movwf	(sprintf@f+2)& (0+255),b
  2859  004352                     
  2860                           ; BSR set to: 0
  2861  004352  0E00               	movlw	0
  2862  004354  6FDD               	movwf	(sprintf@f+5)& (0+255),b
  2863  004356  0E00               	movlw	0
  2864  004358  6FDC               	movwf	(sprintf@f+4)& (0+255),b
  2865  00435A                     
  2866                           ; BSR set to: 0
  2867  00435A  0ED8               	movlw	low sprintf@f
  2868  00435C  6FC6               	movwf	vfprintf@fp& (0+255),b
  2869  00435E  0E00               	movlw	high sprintf@f
  2870  004360  6FC7               	movwf	(vfprintf@fp+1)& (0+255),b
  2871  004362  C0D0  F0C8         	movff	sprintf@fmt,vfprintf@fmt
  2872  004366  C0D1  F0C9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2873  00436A  0ED6               	movlw	low sprintf@ap
  2874  00436C  6FCA               	movwf	vfprintf@ap& (0+255),b
  2875  00436E  0E00               	movlw	high sprintf@ap
  2876  004370  6FCB               	movwf	(vfprintf@ap+1)& (0+255),b
  2877  004372  EC82  F020         	call	_vfprintf	;wreg free
  2878  004376  0100               	movlb	0	; () banked
  2879  004378  51DA               	movf	(sprintf@f+2)& (0+255),w,b
  2880  00437A  25CE               	addwf	sprintf@s& (0+255),w,b
  2881  00437C  6ED9               	movwf	fsr2l,c
  2882  00437E  51DB               	movf	(sprintf@f+3)& (0+255),w,b
  2883  004380  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  2884  004382  6EDA               	movwf	fsr2h,c
  2885  004384  0E00               	movlw	0
  2886  004386  6EDF               	movwf	indf2,c
  2887  004388                     
  2888                           ; BSR set to: 0
  2889  004388  0012               	return		;funcret
  2890  00438A                     __end_of_sprintf:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function _vfprintf *****************
  2894 ;; Defined at:
  2895 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  fp              2  102[BANK0 ] PTR struct _IO_FILE
  2898 ;;		 -> sprintf@f(6), 
  2899 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  2900 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
  2901 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  2902 ;;		 -> STR_6(4), STR_3(7), STR_2(7), STR_1(7), 
  2903 ;;  ap              2  106[BANK0 ] PTR PTR void 
  2904 ;;		 -> sprintf@ap(2), 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  2907 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
  2908 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  2909 ;;		 -> STR_6(4), STR_3(7), STR_2(7), STR_1(7), 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  2  102[BANK0 ] int 
  2912 ;; Registers used:
  2913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2919 ;;      Params:         0       6       0       0       0       0       0       0       0
  2920 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2922 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2923 ;;Total ram usage:        8 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 6
  2926 ;; This function calls:
  2927 ;;		_vfpfcnvrt
  2928 ;; This function is called by:
  2929 ;;		_sprintf
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text6
  2934  004104                     __ptext6:
  2935                           	callstack 0
  2936  004104                     _vfprintf:
  2937                           	callstack 23
  2938  004104                     
  2939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2940  004104  C0C8  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  2941  004108  C0C9  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2942  00410C                     
  2943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2944  00410C  0E00               	movlw	0
  2945  00410E  0100               	movlb	0	; () banked
  2946  004110  6FF9               	movwf	(_nout+1)& (0+255),b
  2947  004112  0E00               	movlw	0
  2948  004114  6FF8               	movwf	_nout& (0+255),b
  2949                           
  2950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2951  004116  EFA0  F020         	goto	l4988
  2952  00411A                     l4986:
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2956  00411A  C0C6  F0A6         	movff	vfprintf@fp,vfpfcnvrt@fp
  2957  00411E  C0C7  F0A7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2958  004122  0ECC               	movlw	low vfprintf@cfmt
  2959  004124  6FA8               	movwf	vfpfcnvrt@fmt& (0+255),b
  2960  004126  0E00               	movlw	high vfprintf@cfmt
  2961  004128  6FA9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2962  00412A  C0CA  F0AA         	movff	vfprintf@ap,vfpfcnvrt@ap
  2963  00412E  C0CB  F0AB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2964  004132  EC51  F00A         	call	_vfpfcnvrt	;wreg free
  2965  004136  0100               	movlb	0	; () banked
  2966  004138  51A6               	movf	?_vfpfcnvrt& (0+255),w,b
  2967  00413A  27F8               	addwf	_nout& (0+255),f,b
  2968  00413C  51A7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2969  00413E  23F9               	addwfc	(_nout+1)& (0+255),f,b
  2970  004140                     l4988:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2974  004140  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  2975  004144  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2976  004148                     	if	0	;tblptru may be non-zero
  2977  004148                     	endif
  2978  004148                     	if	0	;tblptru may be non-zero
  2979  004148                     	endif
  2980  004148  0008               	tblrd		*
  2981  00414A  50F5               	movf	tablat,w,c
  2982  00414C  0900               	iorlw	0
  2983  00414E  A4D8               	btfss	status,2,c
  2984  004150  EFAC  F020         	goto	u5801
  2985  004154  EFAE  F020         	goto	u5800
  2986  004158                     u5801:
  2987  004158  EF8D  F020         	goto	l4986
  2988  00415C                     u5800:
  2989  00415C                     
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2992  00415C  C0F8  F0C6         	movff	_nout,?_vfprintf
  2993  004160  C0F9  F0C7         	movff	_nout+1,?_vfprintf+1
  2994  004164                     
  2995                           ; BSR set to: 0
  2996  004164  0012               	return		;funcret
  2997  004166                     __end_of_vfprintf:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function _vfpfcnvrt *****************
  3001 ;; Defined at:
  3002 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  3005 ;;		 -> sprintf@f(6), 
  3006 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  3007 ;;		 -> vfprintf@cfmt(2), 
  3008 ;;  ap              2   74[BANK0 ] PTR PTR void 
  3009 ;;		 -> sprintf@ap(2), 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  llu             8   80[BANK0 ] unsigned long long 
  3012 ;;  ll              8    0        long long 
  3013 ;;  f               4   94[BANK0 ] long long 
  3014 ;;  ct              3   98[BANK0 ] unsigned char [3]
  3015 ;;  vp              3    0        PTR void 
  3016 ;;  cp              3    0        PTR unsigned char 
  3017 ;;  done            2   88[BANK0 ] int 
  3018 ;;  i               2    0        int 
  3019 ;;  c               1  101[BANK0 ] unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  2   70[BANK0 ] int 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3029 ;;      Params:         0       6       0       0       0       0       0       0       0
  3030 ;;      Locals:         0      22       0       0       0       0       0       0       0
  3031 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3032 ;;      Totals:         0      32       0       0       0       0       0       0       0
  3033 ;;Total ram usage:       32 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 5
  3036 ;; This function calls:
  3037 ;;		_atoi
  3038 ;;		_efgtoa
  3039 ;;		_fputc
  3040 ;;		_isdigit
  3041 ;;		_isupper
  3042 ;;		_strncmp
  3043 ;;		_tolower
  3044 ;;		_xtoa
  3045 ;; This function is called by:
  3046 ;;		_vfprintf
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text7
  3051  0014A2                     __ptext7:
  3052                           	callstack 0
  3053  0014A2                     _vfpfcnvrt:
  3054                           	callstack 23
  3055  0014A2                     
  3056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3057  0014A2  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3058  0014A6  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3059  0014AA  CFDE FFF6          	movff	postinc2,tblptrl
  3060  0014AE  CFDD FFF7          	movff	postdec2,tblptrh
  3061  0014B2                     	if	0	;tblptru may be non-zero
  3062  0014B2                     	endif
  3063  0014B2                     	if	0	;tblptru may be non-zero
  3064  0014B2                     	endif
  3065  0014B2  0008               	tblrd		*
  3066  0014B4  50F5               	movf	tablat,w,c
  3067  0014B6  0A25               	xorlw	37
  3068  0014B8  A4D8               	btfss	status,2,c
  3069  0014BA  EF61  F00A         	goto	u5511
  3070  0014BE  EF63  F00A         	goto	u5510
  3071  0014C2                     u5511:
  3072  0014C2  EF3C  F00D         	goto	l4900
  3073  0014C6                     u5510:
  3074  0014C6                     
  3075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3076  0014C6  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3077  0014CA  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3078  0014CE  2ADE               	incf	postinc2,f,c
  3079  0014D0  0E00               	movlw	0
  3080  0014D2  22DD               	addwfc	postdec2,f,c
  3081  0014D4                     
  3082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3083  0014D4  0E00               	movlw	0
  3084  0014D6  0100               	movlb	0	; () banked
  3085  0014D8  6FFB               	movwf	(_width+1)& (0+255),b
  3086  0014DA  0E00               	movlw	0
  3087  0014DC  6FFA               	movwf	_width& (0+255),b
  3088  0014DE  C0FA  F0FE         	movff	_width,_flags
  3089  0014E2  C0FB  F0FF         	movff	_width+1,_flags+1
  3090  0014E6                     
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3093  0014E6  69FC               	setf	_prec& (0+255),b
  3094  0014E8  69FD               	setf	(_prec+1)& (0+255),b
  3095  0014EA                     
  3096                           ; BSR set to: 0
  3097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  3098  0014EA  0E00               	movlw	0
  3099  0014EC  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3100  0014EE  0E00               	movlw	0
  3101  0014F0  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3104  0014F2  EFC1  F00A         	goto	l4808
  3105  0014F6                     l4782:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  3109  0014F6  81FE               	bsf	_flags& (0+255),0,b
  3110  0014F8                     l4784:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  3114  0014F8  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3115  0014FC  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3116  001500  2ADE               	incf	postinc2,f,c
  3117  001502  0E00               	movlw	0
  3118  001504  22DD               	addwfc	postdec2,f,c
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  3121  001506  EFC1  F00A         	goto	l4808
  3122  00150A                     l4786:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  3126  00150A  83FE               	bsf	_flags& (0+255),1,b
  3127  00150C  EF7C  F00A         	goto	l4784
  3128  001510                     l4790:
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  3132  001510  85FE               	bsf	_flags& (0+255),2,b
  3133  001512  EF7C  F00A         	goto	l4784
  3134  001516                     l4794:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  3138  001516  87FE               	bsf	_flags& (0+255),3,b
  3139  001518  EF7C  F00A         	goto	l4784
  3140  00151C                     l4798:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  3144  00151C  89FE               	bsf	_flags& (0+255),4,b
  3145  00151E  EF7C  F00A         	goto	l4784
  3146  001522                     l4802:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  3150  001522  0E00               	movlw	0
  3151  001524  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3152  001526  0E01               	movlw	1
  3153  001528  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  3156  00152A  EFC1  F00A         	goto	l4808
  3157  00152E                     l4806:
  3158                           
  3159                           ; BSR set to: 0
  3160  00152E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3161  001532  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3162  001536  CFDE FFF6          	movff	postinc2,tblptrl
  3163  00153A  CFDD FFF7          	movff	postdec2,tblptrh
  3164  00153E                     	if	0	;tblptru may be non-zero
  3165  00153E                     	endif
  3166  00153E                     	if	0	;tblptru may be non-zero
  3167  00153E                     	endif
  3168  00153E  0008               	tblrd		*
  3169  001540  50F5               	movf	tablat,w,c
  3170  001542  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3171  001544  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3172                           
  3173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3174                           ; Switch size 1, requested type "simple"
  3175                           ; Number of cases is 1, Range of values is 0 to 0
  3176                           ; switch strategies available:
  3177                           ; Name         Instructions Cycles
  3178                           ; simple_byte            4     3 (average)
  3179                           ;	Chosen strategy is simple_byte
  3180  001546  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3181  001548  0A00               	xorlw	0	; case 0
  3182  00154A  B4D8               	btfsc	status,2,c
  3183  00154C  EFAA  F00A         	goto	l5472
  3184  001550  EF91  F00A         	goto	l4802
  3185  001554                     l5472:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ; Switch size 1, requested type "simple"
  3189                           ; Number of cases is 5, Range of values is 32 to 48
  3190                           ; switch strategies available:
  3191                           ; Name         Instructions Cycles
  3192                           ; simple_byte           16     9 (average)
  3193                           ;	Chosen strategy is simple_byte
  3194  001554  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3195  001556  0A20               	xorlw	32	; case 32
  3196  001558  B4D8               	btfsc	status,2,c
  3197  00155A  EF8B  F00A         	goto	l4794
  3198  00155E  0A03               	xorlw	3	; case 35
  3199  001560  B4D8               	btfsc	status,2,c
  3200  001562  EF8E  F00A         	goto	l4798
  3201  001566  0A08               	xorlw	8	; case 43
  3202  001568  B4D8               	btfsc	status,2,c
  3203  00156A  EF88  F00A         	goto	l4790
  3204  00156E  0A06               	xorlw	6	; case 45
  3205  001570  B4D8               	btfsc	status,2,c
  3206  001572  EF7B  F00A         	goto	l4782
  3207  001576  0A1D               	xorlw	29	; case 48
  3208  001578  B4D8               	btfsc	status,2,c
  3209  00157A  EF85  F00A         	goto	l4786
  3210  00157E  EF91  F00A         	goto	l4802
  3211  001582                     l4808:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3215  001582  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  3216  001584  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3217  001586  B4D8               	btfsc	status,2,c
  3218  001588  EFC8  F00A         	goto	u5521
  3219  00158C  EFCA  F00A         	goto	u5520
  3220  001590                     u5521:
  3221  001590  EF97  F00A         	goto	l4806
  3222  001594                     u5520:
  3223  001594                     
  3224                           ; BSR set to: 0
  3225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  3226  001594  A1FE               	btfss	_flags& (0+255),0,b
  3227  001596  EFCF  F00A         	goto	u5531
  3228  00159A  EFD1  F00A         	goto	u5530
  3229  00159E                     u5531:
  3230  00159E  EFD2  F00A         	goto	l4812
  3231  0015A2                     u5530:
  3232  0015A2                     
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  3235  0015A2  93FE               	bcf	_flags& (0+255),1,b
  3236  0015A4                     l4812:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3240  0015A4  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3241  0015A8  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3242  0015AC  CFDE FFF6          	movff	postinc2,tblptrl
  3243  0015B0  CFDD FFF7          	movff	postdec2,tblptrh
  3244  0015B4                     	if	0	;tblptru may be non-zero
  3245  0015B4                     	endif
  3246  0015B4                     	if	0	;tblptru may be non-zero
  3247  0015B4                     	endif
  3248  0015B4  0008               	tblrd		*
  3249  0015B6  50F5               	movf	tablat,w,c
  3250  0015B8  0A2E               	xorlw	46
  3251  0015BA  A4D8               	btfss	status,2,c
  3252  0015BC  EFE2  F00A         	goto	u5541
  3253  0015C0  EFE4  F00A         	goto	u5540
  3254  0015C4                     u5541:
  3255  0015C4  EF62  F00B         	goto	l4832
  3256  0015C8                     u5540:
  3257  0015C8                     
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3260  0015C8  0E00               	movlw	0
  3261  0015CA  6FFD               	movwf	(_prec+1)& (0+255),b
  3262  0015CC  0E00               	movlw	0
  3263  0015CE  6FFC               	movwf	_prec& (0+255),b
  3264  0015D0                     
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3267  0015D0  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3268  0015D4  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3269  0015D8  2ADE               	incf	postinc2,f,c
  3270  0015DA  0E00               	movlw	0
  3271  0015DC  22DD               	addwfc	postdec2,f,c
  3272  0015DE                     
  3273                           ; BSR set to: 0
  3274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3275  0015DE  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3276  0015E2  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3277  0015E6  CFDE FFF6          	movff	postinc2,tblptrl
  3278  0015EA  CFDD FFF7          	movff	postdec2,tblptrh
  3279  0015EE                     	if	0	;tblptru may be non-zero
  3280  0015EE                     	endif
  3281  0015EE                     	if	0	;tblptru may be non-zero
  3282  0015EE                     	endif
  3283  0015EE  0008               	tblrd		*
  3284  0015F0  50F5               	movf	tablat,w,c
  3285  0015F2  0A2A               	xorlw	42
  3286  0015F4  A4D8               	btfss	status,2,c
  3287  0015F6  EFFF  F00A         	goto	u5551
  3288  0015FA  EF01  F00B         	goto	u5550
  3289  0015FE                     u5551:
  3290  0015FE  EF1E  F00B         	goto	l4822
  3291  001602                     u5550:
  3292  001602                     
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3295  001602  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3296  001606  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3297  00160A  2ADE               	incf	postinc2,f,c
  3298  00160C  0E00               	movlw	0
  3299  00160E  22DD               	addwfc	postdec2,f,c
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3302  001610  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3303  001614  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3304  001618  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3305  00161C  0E02               	movlw	2
  3306  00161E  26DE               	addwf	postinc2,f,c
  3307  001620  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3308  001624  0E00               	movlw	0
  3309  001626  22DD               	addwfc	postdec2,f,c
  3310  001628  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3311  00162C  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3312  001630  CFDE F0FC          	movff	postinc2,_prec
  3313  001634  CFDD F0FD          	movff	postdec2,_prec+1
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3316  001638  EF62  F00B         	goto	l4832
  3317  00163C                     l4822:
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3321  00163C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3322  001640  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3323  001644  CFDE F008          	movff	postinc2,atoi@s
  3324  001648  CFDD F009          	movff	postdec2,atoi@s+1
  3325  00164C  EC33  F01A         	call	_atoi	;wreg free
  3326  001650  C008  F0FC         	movff	?_atoi,_prec
  3327  001654  C009  F0FD         	movff	?_atoi+1,_prec+1
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3330  001658  EF35  F00B         	goto	l4826
  3331  00165C                     l4824:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3335  00165C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3336  001660  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3337  001664  2ADE               	incf	postinc2,f,c
  3338  001666  0E00               	movlw	0
  3339  001668  22DD               	addwfc	postdec2,f,c
  3340  00166A                     l4826:
  3341  00166A  0ED0               	movlw	208
  3342  00166C  0100               	movlb	0	; () banked
  3343  00166E  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3344  001670  0EFF               	movlw	255
  3345  001672  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3346  001674  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3347  001678  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3348  00167C  CFDE FFF6          	movff	postinc2,tblptrl
  3349  001680  CFDD FFF7          	movff	postdec2,tblptrh
  3350  001684                     	if	0	;tblptru may be non-zero
  3351  001684                     	endif
  3352  001684                     	if	0	;tblptru may be non-zero
  3353  001684                     	endif
  3354  001684  0008               	tblrd		*
  3355  001686  50F5               	movf	tablat,w,c
  3356  001688  6FAE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3357  00168A  6BAF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3358  00168C  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3359  00168E  27AE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3360  001690  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3361  001692  23AF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3362  001694  51AF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3363  001696  E10A               	bnz	u5560
  3364  001698  0E0A               	movlw	10
  3365  00169A  5DAE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3366  00169C  A0D8               	btfss	status,0,c
  3367  00169E  EF53  F00B         	goto	u5561
  3368  0016A2  EF56  F00B         	goto	u5560
  3369  0016A6                     u5561:
  3370  0016A6  0E01               	movlw	1
  3371  0016A8  EF57  F00B         	goto	u5570
  3372  0016AC                     u5560:
  3373  0016AC  0E00               	movlw	0
  3374  0016AE                     u5570:
  3375  0016AE  6FBA               	movwf	_vfpfcnvrt$1431& (0+255),b
  3376  0016B0  6BBB               	clrf	(_vfpfcnvrt$1431+1)& (0+255),b
  3377  0016B2                     
  3378                           ; BSR set to: 0
  3379  0016B2  51BA               	movf	_vfpfcnvrt$1431& (0+255),w,b
  3380  0016B4  11BB               	iorwf	(_vfpfcnvrt$1431+1)& (0+255),w,b
  3381  0016B6  A4D8               	btfss	status,2,c
  3382  0016B8  EF60  F00B         	goto	u5581
  3383  0016BC  EF62  F00B         	goto	u5580
  3384  0016C0                     u5581:
  3385  0016C0  EF2E  F00B         	goto	l4824
  3386  0016C4                     u5580:
  3387  0016C4                     l4832:
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3391  0016C4  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3392  0016C8  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3393  0016CC  CFDE FFF6          	movff	postinc2,tblptrl
  3394  0016D0  CFDD FFF7          	movff	postdec2,tblptrh
  3395  0016D4                     	if	0	;tblptru may be non-zero
  3396  0016D4                     	endif
  3397  0016D4                     	if	0	;tblptru may be non-zero
  3398  0016D4                     	endif
  3399  0016D4  0008               	tblrd		*
  3400  0016D6  50F5               	movf	tablat,w,c
  3401  0016D8  6E07               	movwf	tolower@c^0,c
  3402  0016DA  6A08               	clrf	(tolower@c+1)^0,c
  3403  0016DC  ECB3  F020         	call	_tolower	;wreg free
  3404  0016E0  5007               	movf	?_tolower^0,w,c
  3405  0016E2  0100               	movlb	0	; () banked
  3406  0016E4  6FC2               	movwf	vfpfcnvrt@ct& (0+255),b
  3407  0016E6                     
  3408                           ; BSR set to: 0
  3409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3410  0016E6  51C2               	movf	vfpfcnvrt@ct& (0+255),w,b
  3411  0016E8  B4D8               	btfsc	status,2,c
  3412  0016EA  EF79  F00B         	goto	u5591
  3413  0016EE  EF7B  F00B         	goto	u5590
  3414  0016F2                     u5591:
  3415  0016F2  EFB5  F00B         	goto	l4842
  3416  0016F6                     u5590:
  3417  0016F6                     
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3420  0016F6  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3421  0016FA  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3422  0016FE  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  3423  001702  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  3424  001706  0E01               	movlw	1
  3425  001708  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  3426  00170A  0E00               	movlw	0
  3427  00170C  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3428  00170E  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3429  001712  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3430  001716                     	if	0	;tblptru may be non-zero
  3431  001716                     	endif
  3432  001716                     	if	0	;tblptru may be non-zero
  3433  001716                     	endif
  3434  001716  0008               	tblrd		*
  3435  001718  50F5               	movf	tablat,w,c
  3436  00171A  6E07               	movwf	tolower@c^0,c
  3437  00171C  6A08               	clrf	(tolower@c+1)^0,c
  3438  00171E  ECB3  F020         	call	_tolower	;wreg free
  3439  001722  5007               	movf	?_tolower^0,w,c
  3440  001724  0100               	movlb	0	; () banked
  3441  001726  6FC3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3442  001728                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3445  001728  51C3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3446  00172A  B4D8               	btfsc	status,2,c
  3447  00172C  EF9A  F00B         	goto	u5601
  3448  001730  EF9C  F00B         	goto	u5600
  3449  001734                     u5601:
  3450  001734  EFB5  F00B         	goto	l4842
  3451  001738                     u5600:
  3452  001738                     
  3453                           ; BSR set to: 0
  3454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3455  001738  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3456  00173C  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3457  001740  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  3458  001744  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  3459  001748  0E02               	movlw	2
  3460  00174A  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  3461  00174C  0E00               	movlw	0
  3462  00174E  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3463  001750  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3464  001754  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3465  001758                     	if	0	;tblptru may be non-zero
  3466  001758                     	endif
  3467  001758                     	if	0	;tblptru may be non-zero
  3468  001758                     	endif
  3469  001758  0008               	tblrd		*
  3470  00175A  50F5               	movf	tablat,w,c
  3471  00175C  6E07               	movwf	tolower@c^0,c
  3472  00175E  6A08               	clrf	(tolower@c+1)^0,c
  3473  001760  ECB3  F020         	call	_tolower	;wreg free
  3474  001764  5007               	movf	?_tolower^0,w,c
  3475  001766  0100               	movlb	0	; () banked
  3476  001768  6FC4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3477  00176A                     l4842:
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3481  00176A  0E66               	movlw	102
  3482  00176C  19C2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3483  00176E  A4D8               	btfss	status,2,c
  3484  001770  EFBC  F00B         	goto	u5611
  3485  001774  EFBE  F00B         	goto	u5610
  3486  001778                     u5611:
  3487  001778  EFFE  F00B         	goto	l4854
  3488  00177C                     u5610:
  3489  00177C                     
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3492  00177C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3493  001780  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3494  001784  CFDE FFF6          	movff	postinc2,tblptrl
  3495  001788  CFDD FFF7          	movff	postdec2,tblptrh
  3496  00178C                     	if	0	;tblptru may be non-zero
  3497  00178C                     	endif
  3498  00178C                     	if	0	;tblptru may be non-zero
  3499  00178C                     	endif
  3500  00178C  0008               	tblrd		*
  3501  00178E  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  3502  001792                     
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3505  001792  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3506  001796  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3507  00179A  2ADE               	incf	postinc2,f,c
  3508  00179C  0E00               	movlw	0
  3509  00179E  22DD               	addwfc	postdec2,f,c
  3510  0017A0                     
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3513  0017A0  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3514  0017A4  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3515  0017A8  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3516  0017AC  0E04               	movlw	4
  3517  0017AE  26DE               	addwf	postinc2,f,c
  3518  0017B0  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3519  0017B4  0E00               	movlw	0
  3520  0017B6  22DD               	addwfc	postdec2,f,c
  3521  0017B8  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3522  0017BC  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3523  0017C0  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3524  0017C4  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3525  0017C8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3526  0017CC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3527  0017D0                     l4850:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3531  0017D0  C0A6  F062         	movff	vfpfcnvrt@fp,efgtoa@fp
  3532  0017D4  C0A7  F063         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3533  0017D8  C0BE  F064         	movff	vfpfcnvrt@f,efgtoa@f
  3534  0017DC  C0BF  F065         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3535  0017E0  C0C0  F066         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3536  0017E4  C0C1  F067         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3537  0017E8  C0C5  F068         	movff	vfpfcnvrt@c,efgtoa@c
  3538  0017EC  EC25  F004         	call	_efgtoa	;wreg free
  3539  0017F0  C062  F0A6         	movff	?_efgtoa,?_vfpfcnvrt
  3540  0017F4  C063  F0A7         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3541  0017F8  EF57  F00D         	goto	l1258
  3542  0017FC                     l4854:
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3546  0017FC  0EC2               	movlw	low vfpfcnvrt@ct
  3547  0017FE  6E01               	movwf	strncmp@_l^0,c
  3548  001800  0E00               	movlw	high vfpfcnvrt@ct
  3549  001802  6E02               	movwf	(strncmp@_l+1)^0,c
  3550  001804  0E40               	movlw	low STR_30
  3551  001806  6E03               	movwf	strncmp@_r^0,c
  3552  001808  0E08               	movlw	high STR_30
  3553  00180A  6E04               	movwf	(strncmp@_r+1)^0,c
  3554  00180C  0E00               	movlw	0
  3555  00180E  6E06               	movwf	(strncmp@n+1)^0,c
  3556  001810  0E02               	movlw	2
  3557  001812  6E05               	movwf	strncmp@n^0,c
  3558  001814  ECAB  F01D         	call	_strncmp	;wreg free
  3559  001818  5001               	movf	?_strncmp^0,w,c
  3560  00181A  1002               	iorwf	(?_strncmp+1)^0,w,c
  3561  00181C  A4D8               	btfss	status,2,c
  3562  00181E  EF13  F00C         	goto	u5621
  3563  001822  EF15  F00C         	goto	u5620
  3564  001826                     u5621:
  3565  001826  EF91  F00C         	goto	l4870
  3566  00182A                     u5620:
  3567  00182A                     
  3568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3569  00182A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3570  00182E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3571  001832  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  3572  001836  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  3573  00183A  0E01               	movlw	1
  3574  00183C  0100               	movlb	0	; () banked
  3575  00183E  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  3576  001840  0E00               	movlw	0
  3577  001842  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3578  001844  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3579  001848  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3580  00184C                     	if	0	;tblptru may be non-zero
  3581  00184C                     	endif
  3582  00184C                     	if	0	;tblptru may be non-zero
  3583  00184C                     	endif
  3584  00184C  0008               	tblrd		*
  3585  00184E  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  3586  001852  0EBF               	movlw	191
  3587  001854  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3588  001856  0EFF               	movlw	255
  3589  001858  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3590  00185A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3591  00185E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3592  001862  CFDE FFF6          	movff	postinc2,tblptrl
  3593  001866  CFDD FFF7          	movff	postdec2,tblptrh
  3594  00186A                     	if	0	;tblptru may be non-zero
  3595  00186A                     	endif
  3596  00186A                     	if	0	;tblptru may be non-zero
  3597  00186A                     	endif
  3598  00186A  0008               	tblrd		*
  3599  00186C  50F5               	movf	tablat,w,c
  3600  00186E  6FAE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3601  001870  6BAF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3602  001872  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3603  001874  27AE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3604  001876  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3605  001878  23AF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3606  00187A  51AF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3607  00187C  E10A               	bnz	u5630
  3608  00187E  0E1A               	movlw	26
  3609  001880  5DAE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3610  001882  A0D8               	btfss	status,0,c
  3611  001884  EF46  F00C         	goto	u5631
  3612  001888  EF49  F00C         	goto	u5630
  3613  00188C                     u5631:
  3614  00188C  0E01               	movlw	1
  3615  00188E  EF4A  F00C         	goto	u5640
  3616  001892                     u5630:
  3617  001892  0E00               	movlw	0
  3618  001894                     u5640:
  3619  001894  6FBC               	movwf	_vfpfcnvrt$1435& (0+255),b
  3620  001896  6BBD               	clrf	(_vfpfcnvrt$1435+1)& (0+255),b
  3621  001898                     
  3622                           ; BSR set to: 0
  3623  001898  51BC               	movf	_vfpfcnvrt$1435& (0+255),w,b
  3624  00189A  11BD               	iorwf	(_vfpfcnvrt$1435+1)& (0+255),w,b
  3625  00189C  B4D8               	btfsc	status,2,c
  3626  00189E  EF53  F00C         	goto	u5651
  3627  0018A2  EF55  F00C         	goto	u5650
  3628  0018A6                     u5651:
  3629  0018A6  EF6F  F00C         	goto	l4864
  3630  0018AA                     u5650:
  3631  0018AA                     
  3632                           ; BSR set to: 0
  3633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3634  0018AA  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3635  0018AE  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3636  0018B2  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3637  0018B6  0E04               	movlw	4
  3638  0018B8  26DE               	addwf	postinc2,f,c
  3639  0018BA  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3640  0018BE  0E00               	movlw	0
  3641  0018C0  22DD               	addwfc	postdec2,f,c
  3642  0018C2  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3643  0018C6  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3644  0018CA  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3645  0018CE  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3646  0018D2  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3647  0018D6  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3650  0018DA  EF87  F00C         	goto	l1265
  3651  0018DE                     l4864:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3655  0018DE  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3656  0018E2  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3657  0018E6  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3658  0018EA  0E04               	movlw	4
  3659  0018EC  26DE               	addwf	postinc2,f,c
  3660  0018EE  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3661  0018F2  0E00               	movlw	0
  3662  0018F4  22DD               	addwfc	postdec2,f,c
  3663  0018F6  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3664  0018FA  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3665  0018FE  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3666  001902  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3667  001906  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3668  00190A  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3669  00190E                     l1265:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3673  00190E  0E02               	movlw	2
  3674  001910  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3675  001914  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3676  001918  26DE               	addwf	postinc2,f,c
  3677  00191A  0E00               	movlw	0
  3678  00191C  22DD               	addwfc	postdec2,f,c
  3679  00191E  EFE8  F00B         	goto	l4850
  3680  001922                     l4870:
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3683  001922  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3684  001926  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3685  00192A  CFDE FFF6          	movff	postinc2,tblptrl
  3686  00192E  CFDD FFF7          	movff	postdec2,tblptrh
  3687  001932                     	if	0	;tblptru may be non-zero
  3688  001932                     	endif
  3689  001932                     	if	0	;tblptru may be non-zero
  3690  001932                     	endif
  3691  001932  0008               	tblrd		*
  3692  001934  50F5               	movf	tablat,w,c
  3693  001936  0A78               	xorlw	120
  3694  001938  B4D8               	btfsc	status,2,c
  3695  00193A  EFA1  F00C         	goto	u5661
  3696  00193E  EFA3  F00C         	goto	u5660
  3697  001942                     u5661:
  3698  001942  EFB5  F00C         	goto	l4874
  3699  001946                     u5660:
  3700  001946  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3701  00194A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3702  00194E  CFDE FFF6          	movff	postinc2,tblptrl
  3703  001952  CFDD FFF7          	movff	postdec2,tblptrh
  3704  001956                     	if	0	;tblptru may be non-zero
  3705  001956                     	endif
  3706  001956                     	if	0	;tblptru may be non-zero
  3707  001956                     	endif
  3708  001956  0008               	tblrd		*
  3709  001958  50F5               	movf	tablat,w,c
  3710  00195A  0A58               	xorlw	88
  3711  00195C  A4D8               	btfss	status,2,c
  3712  00195E  EFB3  F00C         	goto	u5671
  3713  001962  EFB5  F00C         	goto	u5670
  3714  001966                     u5671:
  3715  001966  EF04  F00D         	goto	l4884
  3716  00196A                     u5670:
  3717  00196A                     l4874:
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3720  00196A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3721  00196E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3722  001972  CFDE FFF6          	movff	postinc2,tblptrl
  3723  001976  CFDD FFF7          	movff	postdec2,tblptrh
  3724  00197A                     	if	0	;tblptru may be non-zero
  3725  00197A                     	endif
  3726  00197A                     	if	0	;tblptru may be non-zero
  3727  00197A                     	endif
  3728  00197A  0008               	tblrd		*
  3729  00197C  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  3730  001980                     
  3731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3732  001980  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3733  001984  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3734  001988  2ADE               	incf	postinc2,f,c
  3735  00198A  0E00               	movlw	0
  3736  00198C  22DD               	addwfc	postdec2,f,c
  3737  00198E                     
  3738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3739  00198E  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3740  001992  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3741  001996  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3742  00199A  0E02               	movlw	2
  3743  00199C  26DE               	addwf	postinc2,f,c
  3744  00199E  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3745  0019A2  0E00               	movlw	0
  3746  0019A4  22DD               	addwfc	postdec2,f,c
  3747  0019A6  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3748  0019AA  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3749  0019AE  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt+2
  3750  0019B2  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+3
  3751  0019B6  C0AE  F0B0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3752  0019BA  C0AF  F0B1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3753  0019BE  0100               	movlb	0	; () banked
  3754  0019C0  6BB2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3755  0019C2  6BB3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3756  0019C4  6BB4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3757  0019C6  6BB5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3758  0019C8  6BB6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3759  0019CA  6BB7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3760  0019CC                     
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  3763  0019CC  C0A6  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3764  0019D0  C0A7  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3765  0019D4  C0B0  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3766  0019D8  C0B1  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3767  0019DC  C0B2  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3768  0019E0  C0B3  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3769  0019E4  C0B4  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3770  0019E8  C0B5  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3771  0019EC  C0B6  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3772  0019F0  C0B7  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3773  0019F4  C0C5  F026         	movff	vfpfcnvrt@c,xtoa@x
  3774  0019F8  ECE3  F016         	call	_xtoa	;wreg free
  3775  0019FC  C01C  F0A6         	movff	?_xtoa,?_vfpfcnvrt
  3776  001A00  C01D  F0A7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3777  001A04  EF57  F00D         	goto	l1258
  3778  001A08                     l4884:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3781  001A08  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3782  001A0C  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3783  001A10  CFDE FFF6          	movff	postinc2,tblptrl
  3784  001A14  CFDD FFF7          	movff	postdec2,tblptrh
  3785  001A18                     	if	0	;tblptru may be non-zero
  3786  001A18                     	endif
  3787  001A18                     	if	0	;tblptru may be non-zero
  3788  001A18                     	endif
  3789  001A18  0008               	tblrd		*
  3790  001A1A  50F5               	movf	tablat,w,c
  3791  001A1C  0A25               	xorlw	37
  3792  001A1E  A4D8               	btfss	status,2,c
  3793  001A20  EF14  F00D         	goto	u5681
  3794  001A24  EF16  F00D         	goto	u5680
  3795  001A28                     u5681:
  3796  001A28  EF2E  F00D         	goto	l4894
  3797  001A2C                     u5680:
  3798  001A2C                     
  3799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3800  001A2C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3801  001A30  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3802  001A34  2ADE               	incf	postinc2,f,c
  3803  001A36  0E00               	movlw	0
  3804  001A38  22DD               	addwfc	postdec2,f,c
  3805  001A3A                     
  3806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3807  001A3A  0E00               	movlw	0
  3808  001A3C  6E02               	movwf	(fputc@c+1)^0,c
  3809  001A3E  0E25               	movlw	37
  3810  001A40  6E01               	movwf	fputc@c^0,c
  3811  001A42  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3812  001A46  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3813  001A4A  EC16  F01E         	call	_fputc	;wreg free
  3814  001A4E                     l4890:
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3817  001A4E  0E00               	movlw	0
  3818  001A50  0100               	movlb	0	; () banked
  3819  001A52  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3820  001A54  0E01               	movlw	1
  3821  001A56  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  3822  001A58  EF57  F00D         	goto	l1258
  3823  001A5C                     l4894:
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3826  001A5C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3827  001A60  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3828  001A64  2ADE               	incf	postinc2,f,c
  3829  001A66  0E00               	movlw	0
  3830  001A68  22DD               	addwfc	postdec2,f,c
  3831  001A6A                     
  3832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3833  001A6A  0E00               	movlw	0
  3834  001A6C  0100               	movlb	0	; () banked
  3835  001A6E  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3836  001A70  0E00               	movlw	0
  3837  001A72  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  3838  001A74  EF57  F00D         	goto	l1258
  3839  001A78                     l4900:
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3842  001A78  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3843  001A7C  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3844  001A80  CFDE FFF6          	movff	postinc2,tblptrl
  3845  001A84  CFDD FFF7          	movff	postdec2,tblptrh
  3846  001A88                     	if	0	;tblptru may be non-zero
  3847  001A88                     	endif
  3848  001A88                     	if	0	;tblptru may be non-zero
  3849  001A88                     	endif
  3850  001A88  0008               	tblrd		*
  3851  001A8A  50F5               	movf	tablat,w,c
  3852  001A8C  6E01               	movwf	fputc@c^0,c
  3853  001A8E  6A02               	clrf	(fputc@c+1)^0,c
  3854  001A90  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3855  001A94  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3856  001A98  EC16  F01E         	call	_fputc	;wreg free
  3857  001A9C                     
  3858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3859  001A9C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3860  001AA0  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3861  001AA4  2ADE               	incf	postinc2,f,c
  3862  001AA6  0E00               	movlw	0
  3863  001AA8  22DD               	addwfc	postdec2,f,c
  3864  001AAA  EF27  F00D         	goto	l4890
  3865  001AAE                     l1258:
  3866  001AAE  0012               	return		;funcret
  3867  001AB0                     __end_of_vfpfcnvrt:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function _xtoa *****************
  3871 ;; Defined at:
  3872 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3875 ;;		 -> sprintf@f(6), 
  3876 ;;  d               8   29[COMRAM] unsigned long long 
  3877 ;;  x               1   37[COMRAM] unsigned char 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  n               8   54[COMRAM] unsigned long long 
  3880 ;;  c               2   64[COMRAM] int 
  3881 ;;  i               2   62[COMRAM] int 
  3882 ;;  w               2   52[COMRAM] int 
  3883 ;;  p               2   50[COMRAM] int 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  2   27[COMRAM] int 
  3886 ;; Registers used:
  3887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3893 ;;      Params:        11       0       0       0       0       0       0       0       0
  3894 ;;      Locals:        20       0       0       0       0       0       0       0       0
  3895 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3896 ;;      Totals:        39       0       0       0       0       0       0       0       0
  3897 ;;Total ram usage:       39 bytes
  3898 ;; Hardware stack levels used: 1
  3899 ;; Hardware stack levels required when called: 4
  3900 ;; This function calls:
  3901 ;;		_isalpha
  3902 ;;		_isupper
  3903 ;;		_pad
  3904 ;;		_toupper
  3905 ;; This function is called by:
  3906 ;;		_vfpfcnvrt
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text8
  3911  002DC6                     __ptext8:
  3912                           	callstack 0
  3913  002DC6                     _xtoa:
  3914                           	callstack 23
  3915  002DC6                     
  3916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3917  002DC6  0100               	movlb	0	; () banked
  3918  002DC8  BFFD               	btfsc	(_prec+1)& (0+255),7,b
  3919  002DCA  EFE9  F016         	goto	u5191
  3920  002DCE  EFEB  F016         	goto	u5190
  3921  002DD2                     u5191:
  3922  002DD2  EFEC  F016         	goto	l4608
  3923  002DD6                     u5190:
  3924  002DD6                     
  3925                           ; BSR set to: 0
  3926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3927  002DD6  93FE               	bcf	_flags& (0+255),1,b
  3928  002DD8                     l4608:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3932  002DD8  BFFD               	btfsc	(_prec+1)& (0+255),7,b
  3933  002DDA  EFF9  F016         	goto	u5200
  3934  002DDE  51FD               	movf	(_prec+1)& (0+255),w,b
  3935  002DE0  E106               	bnz	u5201
  3936  002DE2  05FC               	decf	_prec& (0+255),w,b
  3937  002DE4  B0D8               	btfsc	status,0,c
  3938  002DE6  EFF7  F016         	goto	u5201
  3939  002DEA  EFF9  F016         	goto	u5200
  3940  002DEE                     u5201:
  3941  002DEE  EFFF  F016         	goto	l1204
  3942  002DF2                     u5200:
  3943  002DF2                     
  3944                           ; BSR set to: 0
  3945  002DF2  0E00               	movlw	0
  3946  002DF4  6E34               	movwf	(xtoa@p+1)^0,c
  3947  002DF6  0E01               	movlw	1
  3948  002DF8  6E33               	movwf	xtoa@p^0,c
  3949  002DFA  EF03  F017         	goto	l1206
  3950  002DFE                     l1204:
  3951                           
  3952                           ; BSR set to: 0
  3953  002DFE  C0FC  F033         	movff	_prec,xtoa@p
  3954  002E02  C0FD  F034         	movff	_prec+1,xtoa@p+1
  3955  002E06                     l1206:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3959  002E06  C0FA  F035         	movff	_width,xtoa@w
  3960  002E0A  C0FB  F036         	movff	_width+1,xtoa@w+1
  3961                           
  3962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3963  002E0E  A9FE               	btfss	_flags& (0+255),4,b
  3964  002E10  EF0C  F017         	goto	u5211
  3965  002E14  EF0E  F017         	goto	u5210
  3966  002E18                     u5211:
  3967  002E18  EF12  F017         	goto	l4614
  3968  002E1C                     u5210:
  3969  002E1C                     
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3972  002E1C  0EFE               	movlw	254
  3973  002E1E  2635               	addwf	xtoa@w^0,f,c
  3974  002E20  0EFF               	movlw	255
  3975  002E22  2236               	addwfc	(xtoa@w+1)^0,f,c
  3976  002E24                     l4614:
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3980  002E24  C01E  F037         	movff	xtoa@d,xtoa@n
  3981  002E28  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3982  002E2C  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3983  002E30  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3984  002E34  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3985  002E38  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3986  002E3C  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3987  002E40  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3988  002E44                     
  3989                           ; BSR set to: 0
  3990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3991  002E44  0E00               	movlw	0
  3992  002E46  6E40               	movwf	(xtoa@i+1)^0,c
  3993  002E48  0E4F               	movlw	79
  3994  002E4A  6E3F               	movwf	xtoa@i^0,c
  3995  002E4C                     
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3998  002E4C  0E00               	movlw	0
  3999  002E4E  0101               	movlb	1	; () banked
  4000  002E50  6F61               	movwf	(_dbuf+79)& (0+255),b
  4001                           
  4002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4003  002E52  EFDE  F017         	goto	l4650
  4004  002E56                     l4620:
  4005                           
  4006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  4007  002E56  063F               	decf	xtoa@i^0,f,c
  4008  002E58  A0D8               	btfss	status,0,c
  4009  002E5A  0640               	decf	(xtoa@i+1)^0,f,c
  4010  002E5C                     
  4011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  4012  002E5C  0E0F               	movlw	15
  4013  002E5E  1437               	andwf	xtoa@n^0,w,c
  4014  002E60  6E41               	movwf	xtoa@c^0,c
  4015  002E62  6A42               	clrf	(xtoa@c+1)^0,c
  4016  002E64                     
  4017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4018  002E64  BE42               	btfsc	(xtoa@c+1)^0,7,c
  4019  002E66  EF3E  F017         	goto	u5221
  4020  002E6A  5042               	movf	(xtoa@c+1)^0,w,c
  4021  002E6C  E109               	bnz	u5220
  4022  002E6E  0E0A               	movlw	10
  4023  002E70  5C41               	subwf	xtoa@c^0,w,c
  4024  002E72  A0D8               	btfss	status,0,c
  4025  002E74  EF3E  F017         	goto	u5221
  4026  002E78  EF40  F017         	goto	u5220
  4027  002E7C                     u5221:
  4028  002E7C  EF48  F017         	goto	l4628
  4029  002E80                     u5220:
  4030  002E80  0E57               	movlw	87
  4031  002E82  2441               	addwf	xtoa@c^0,w,c
  4032  002E84  6E41               	movwf	xtoa@c^0,c
  4033  002E86  0E00               	movlw	0
  4034  002E88  2042               	addwfc	(xtoa@c+1)^0,w,c
  4035  002E8A  6E42               	movwf	(xtoa@c+1)^0,c
  4036  002E8C  EF4E  F017         	goto	l1213
  4037  002E90                     l4628:
  4038  002E90  0E30               	movlw	48
  4039  002E92  2441               	addwf	xtoa@c^0,w,c
  4040  002E94  6E41               	movwf	xtoa@c^0,c
  4041  002E96  0E00               	movlw	0
  4042  002E98  2042               	addwfc	(xtoa@c+1)^0,w,c
  4043  002E9A  6E42               	movwf	(xtoa@c+1)^0,c
  4044  002E9C                     l1213:
  4045  002E9C  0EBF               	movlw	191
  4046  002E9E  6E27               	movwf	??_xtoa^0,c
  4047  002EA0  0EFF               	movlw	255
  4048  002EA2  6E28               	movwf	(??_xtoa+1)^0,c
  4049  002EA4  5026               	movf	xtoa@x^0,w,c
  4050  002EA6  6E29               	movwf	(??_xtoa+2)^0,c
  4051  002EA8  6A2A               	clrf	(??_xtoa+3)^0,c
  4052  002EAA  5027               	movf	??_xtoa^0,w,c
  4053  002EAC  2629               	addwf	(??_xtoa+2)^0,f,c
  4054  002EAE  5028               	movf	(??_xtoa+1)^0,w,c
  4055  002EB0  222A               	addwfc	(??_xtoa+3)^0,f,c
  4056  002EB2  502A               	movf	(??_xtoa+3)^0,w,c
  4057  002EB4  E10A               	bnz	u5230
  4058  002EB6  0E1A               	movlw	26
  4059  002EB8  5C29               	subwf	(??_xtoa+2)^0,w,c
  4060  002EBA  A0D8               	btfss	status,0,c
  4061  002EBC  EF62  F017         	goto	u5231
  4062  002EC0  EF65  F017         	goto	u5230
  4063  002EC4                     u5231:
  4064  002EC4  0E01               	movlw	1
  4065  002EC6  EF66  F017         	goto	u5240
  4066  002ECA                     u5230:
  4067  002ECA  0E00               	movlw	0
  4068  002ECC                     u5240:
  4069  002ECC  6E2F               	movwf	_xtoa$1416^0,c
  4070  002ECE  6A30               	clrf	(_xtoa$1416+1)^0,c
  4071  002ED0  502F               	movf	_xtoa$1416^0,w,c
  4072  002ED2  1030               	iorwf	(_xtoa$1416+1)^0,w,c
  4073  002ED4  B4D8               	btfsc	status,2,c
  4074  002ED6  EF6F  F017         	goto	u5251
  4075  002EDA  EF71  F017         	goto	u5250
  4076  002EDE                     u5251:
  4077  002EDE  EFA1  F017         	goto	l4642
  4078  002EE2                     u5250:
  4079  002EE2  0E9F               	movlw	159
  4080  002EE4  6E27               	movwf	??_xtoa^0,c
  4081  002EE6  0EFF               	movlw	255
  4082  002EE8  6E28               	movwf	(??_xtoa+1)^0,c
  4083  002EEA  0E20               	movlw	32
  4084  002EEC  1041               	iorwf	xtoa@c^0,w,c
  4085  002EEE  6E29               	movwf	(??_xtoa+2)^0,c
  4086  002EF0  0E00               	movlw	0
  4087  002EF2  1042               	iorwf	(xtoa@c+1)^0,w,c
  4088  002EF4  6E2A               	movwf	(??_xtoa+3)^0,c
  4089  002EF6  5027               	movf	??_xtoa^0,w,c
  4090  002EF8  2629               	addwf	(??_xtoa+2)^0,f,c
  4091  002EFA  5028               	movf	(??_xtoa+1)^0,w,c
  4092  002EFC  222A               	addwfc	(??_xtoa+3)^0,f,c
  4093  002EFE  502A               	movf	(??_xtoa+3)^0,w,c
  4094  002F00  E10A               	bnz	u5260
  4095  002F02  0E1A               	movlw	26
  4096  002F04  5C29               	subwf	(??_xtoa+2)^0,w,c
  4097  002F06  A0D8               	btfss	status,0,c
  4098  002F08  EF88  F017         	goto	u5261
  4099  002F0C  EF8B  F017         	goto	u5260
  4100  002F10                     u5261:
  4101  002F10  0E01               	movlw	1
  4102  002F12  EF8C  F017         	goto	u5270
  4103  002F16                     u5260:
  4104  002F16  0E00               	movlw	0
  4105  002F18                     u5270:
  4106  002F18  6E31               	movwf	_xtoa$1417^0,c
  4107  002F1A  6A32               	clrf	(_xtoa$1417+1)^0,c
  4108  002F1C  5031               	movf	_xtoa$1417^0,w,c
  4109  002F1E  1032               	iorwf	(_xtoa$1417+1)^0,w,c
  4110  002F20  B4D8               	btfsc	status,2,c
  4111  002F22  EF95  F017         	goto	u5281
  4112  002F26  EF97  F017         	goto	u5280
  4113  002F2A                     u5281:
  4114  002F2A  EFA1  F017         	goto	l4642
  4115  002F2E                     u5280:
  4116  002F2E                     
  4117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4118  002F2E  C041  F007         	movff	xtoa@c,toupper@c
  4119  002F32  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4120  002F36  ECE3  F020         	call	_toupper	;wreg free
  4121  002F3A  C007  F041         	movff	?_toupper,xtoa@c
  4122  002F3E  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4123  002F42                     l4642:
  4124                           
  4125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4126  002F42  0E12               	movlw	low _dbuf
  4127  002F44  243F               	addwf	xtoa@i^0,w,c
  4128  002F46  6ED9               	movwf	fsr2l,c
  4129  002F48  0E01               	movlw	high _dbuf
  4130  002F4A  2040               	addwfc	(xtoa@i+1)^0,w,c
  4131  002F4C  6EDA               	movwf	fsr2h,c
  4132  002F4E  C041  FFDF         	movff	xtoa@c,indf2
  4133  002F52                     
  4134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  4135  002F52  0633               	decf	xtoa@p^0,f,c
  4136  002F54  A0D8               	btfss	status,0,c
  4137  002F56  0634               	decf	(xtoa@p+1)^0,f,c
  4138  002F58                     
  4139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  4140  002F58  0635               	decf	xtoa@w^0,f,c
  4141  002F5A  A0D8               	btfss	status,0,c
  4142  002F5C  0636               	decf	(xtoa@w+1)^0,f,c
  4143  002F5E                     
  4144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4145  002F5E  C037  F027         	movff	xtoa@n,??_xtoa
  4146  002F62  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4147  002F66  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4148  002F6A  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4149  002F6E  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4150  002F72  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4151  002F76  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4152  002F7A  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4153  002F7E  0E05               	movlw	5
  4154  002F80  EFCB  F017         	goto	u5290
  4155  002F84                     u5295:
  4156  002F84  90D8               	bcf	status,0,c
  4157  002F86  322E               	rrcf	(??_xtoa+7)^0,f,c
  4158  002F88  322D               	rrcf	(??_xtoa+6)^0,f,c
  4159  002F8A  322C               	rrcf	(??_xtoa+5)^0,f,c
  4160  002F8C  322B               	rrcf	(??_xtoa+4)^0,f,c
  4161  002F8E  322A               	rrcf	(??_xtoa+3)^0,f,c
  4162  002F90  3229               	rrcf	(??_xtoa+2)^0,f,c
  4163  002F92  3228               	rrcf	(??_xtoa+1)^0,f,c
  4164  002F94  3227               	rrcf	??_xtoa^0,f,c
  4165  002F96                     u5290:
  4166  002F96  2EE8               	decfsz	wreg,f,c
  4167  002F98  EFC2  F017         	goto	u5295
  4168  002F9C  C027  F037         	movff	??_xtoa,xtoa@n
  4169  002FA0  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4170  002FA4  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4171  002FA8  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4172  002FAC  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4173  002FB0  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4174  002FB4  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4175  002FB8  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4176  002FBC                     l4650:
  4177                           
  4178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4179  002FBC  BE40               	btfsc	(xtoa@i+1)^0,7,c
  4180  002FBE  EFEA  F017         	goto	u5301
  4181  002FC2  5040               	movf	(xtoa@i+1)^0,w,c
  4182  002FC4  E109               	bnz	u5300
  4183  002FC6  0E02               	movlw	2
  4184  002FC8  5C3F               	subwf	xtoa@i^0,w,c
  4185  002FCA  A0D8               	btfss	status,0,c
  4186  002FCC  EFEA  F017         	goto	u5301
  4187  002FD0  EFEC  F017         	goto	u5300
  4188  002FD4                     u5301:
  4189  002FD4  EF1D  F018         	goto	l1227
  4190  002FD8                     u5300:
  4191  002FD8  5037               	movf	xtoa@n^0,w,c
  4192  002FDA  1038               	iorwf	(xtoa@n+1)^0,w,c
  4193  002FDC  1039               	iorwf	(xtoa@n+2)^0,w,c
  4194  002FDE  103A               	iorwf	(xtoa@n+3)^0,w,c
  4195  002FE0  103B               	iorwf	(xtoa@n+4)^0,w,c
  4196  002FE2  103C               	iorwf	(xtoa@n+5)^0,w,c
  4197  002FE4  103D               	iorwf	(xtoa@n+6)^0,w,c
  4198  002FE6  103E               	iorwf	(xtoa@n+7)^0,w,c
  4199  002FE8  A4D8               	btfss	status,2,c
  4200  002FEA  EFF9  F017         	goto	u5311
  4201  002FEE  EFFB  F017         	goto	u5310
  4202  002FF2                     u5311:
  4203  002FF2  EF2B  F017         	goto	l4620
  4204  002FF6                     u5310:
  4205  002FF6  BE34               	btfsc	(xtoa@p+1)^0,7,c
  4206  002FF8  EF08  F018         	goto	u5320
  4207  002FFC  5034               	movf	(xtoa@p+1)^0,w,c
  4208  002FFE  E106               	bnz	u5321
  4209  003000  0433               	decf	xtoa@p^0,w,c
  4210  003002  B0D8               	btfsc	status,0,c
  4211  003004  EF06  F018         	goto	u5321
  4212  003008  EF08  F018         	goto	u5320
  4213  00300C                     u5321:
  4214  00300C  EF2B  F017         	goto	l4620
  4215  003010                     u5320:
  4216  003010  BE36               	btfsc	(xtoa@w+1)^0,7,c
  4217  003012  EF13  F018         	goto	u5331
  4218  003016  5036               	movf	(xtoa@w+1)^0,w,c
  4219  003018  E108               	bnz	u5330
  4220  00301A  0435               	decf	xtoa@w^0,w,c
  4221  00301C  A0D8               	btfss	status,0,c
  4222  00301E  EF13  F018         	goto	u5331
  4223  003022  EF15  F018         	goto	u5330
  4224  003026                     u5331:
  4225  003026  EF1D  F018         	goto	l1227
  4226  00302A                     u5330:
  4227  00302A  0100               	movlb	0	; () banked
  4228  00302C  B3FE               	btfsc	_flags& (0+255),1,b
  4229  00302E  EF1B  F018         	goto	u5341
  4230  003032  EF1D  F018         	goto	u5340
  4231  003036                     u5341:
  4232  003036  EF2B  F017         	goto	l4620
  4233  00303A                     u5340:
  4234  00303A                     l1227:
  4235                           
  4236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4237  00303A  0100               	movlb	0	; () banked
  4238  00303C  A9FE               	btfss	_flags& (0+255),4,b
  4239  00303E  EF23  F018         	goto	u5351
  4240  003042  EF25  F018         	goto	u5350
  4241  003046                     u5351:
  4242  003046  EF3B  F018         	goto	l4666
  4243  00304A                     u5350:
  4244  00304A                     
  4245                           ; BSR set to: 0
  4246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  4247  00304A  063F               	decf	xtoa@i^0,f,c
  4248  00304C  A0D8               	btfss	status,0,c
  4249  00304E  0640               	decf	(xtoa@i+1)^0,f,c
  4250  003050                     
  4251                           ; BSR set to: 0
  4252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4253  003050  0E12               	movlw	low _dbuf
  4254  003052  243F               	addwf	xtoa@i^0,w,c
  4255  003054  6ED9               	movwf	fsr2l,c
  4256  003056  0E01               	movlw	high _dbuf
  4257  003058  2040               	addwfc	(xtoa@i+1)^0,w,c
  4258  00305A  6EDA               	movwf	fsr2h,c
  4259  00305C  C026  FFDF         	movff	xtoa@x,indf2
  4260  003060                     
  4261                           ; BSR set to: 0
  4262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  4263  003060  063F               	decf	xtoa@i^0,f,c
  4264  003062  A0D8               	btfss	status,0,c
  4265  003064  0640               	decf	(xtoa@i+1)^0,f,c
  4266                           
  4267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  4268  003066  0E12               	movlw	low _dbuf
  4269  003068  243F               	addwf	xtoa@i^0,w,c
  4270  00306A  6ED9               	movwf	fsr2l,c
  4271  00306C  0E01               	movlw	high _dbuf
  4272  00306E  2040               	addwfc	(xtoa@i+1)^0,w,c
  4273  003070  6EDA               	movwf	fsr2h,c
  4274  003072  0E30               	movlw	48
  4275  003074  6EDF               	movwf	indf2,c
  4276  003076                     l4666:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  4280  003076  C01C  F011         	movff	xtoa@fp,pad@fp
  4281  00307A  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4282  00307E  0E12               	movlw	low _dbuf
  4283  003080  243F               	addwf	xtoa@i^0,w,c
  4284  003082  6E13               	movwf	pad@buf^0,c
  4285  003084  0E01               	movlw	high _dbuf
  4286  003086  2040               	addwfc	(xtoa@i+1)^0,w,c
  4287  003088  6E14               	movwf	(pad@buf+1)^0,c
  4288  00308A  C035  F015         	movff	xtoa@w,pad@p
  4289  00308E  C036  F016         	movff	xtoa@w+1,pad@p+1
  4290  003092  EC7B  F01E         	call	_pad	;wreg free
  4291  003096  C011  F01C         	movff	?_pad,?_xtoa
  4292  00309A  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4293  00309E  0012               	return		;funcret
  4294  0030A0                     __end_of_xtoa:
  4295                           	callstack 0
  4296                           
  4297 ;; *************** function _toupper *****************
  4298 ;; Defined at:
  4299 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  c               2    6[COMRAM] int 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  2    6[COMRAM] int 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4313 ;;      Params:         2       0       0       0       0       0       0       0       0
  4314 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4315 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4316 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4317 ;;Total ram usage:        8 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 1
  4320 ;; This function calls:
  4321 ;;		_islower
  4322 ;; This function is called by:
  4323 ;;		_xtoa
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text9
  4328  0041C6                     __ptext9:
  4329                           	callstack 0
  4330  0041C6                     _toupper:
  4331                           	callstack 25
  4332  0041C6  0E9F               	movlw	159
  4333  0041C8  6E09               	movwf	??_toupper^0,c
  4334  0041CA  0EFF               	movlw	255
  4335  0041CC  6E0A               	movwf	(??_toupper+1)^0,c
  4336  0041CE  C007  F00B         	movff	toupper@c,??_toupper+2
  4337  0041D2  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4338  0041D6  5009               	movf	??_toupper^0,w,c
  4339  0041D8  260B               	addwf	(??_toupper+2)^0,f,c
  4340  0041DA  500A               	movf	(??_toupper+1)^0,w,c
  4341  0041DC  220C               	addwfc	(??_toupper+3)^0,f,c
  4342  0041DE  500C               	movf	(??_toupper+3)^0,w,c
  4343  0041E0  E10A               	bnz	u4550
  4344  0041E2  0E1A               	movlw	26
  4345  0041E4  5C0B               	subwf	(??_toupper+2)^0,w,c
  4346  0041E6  A0D8               	btfss	status,0,c
  4347  0041E8  EFF8  F020         	goto	u4551
  4348  0041EC  EFFB  F020         	goto	u4550
  4349  0041F0                     u4551:
  4350  0041F0  0E01               	movlw	1
  4351  0041F2  EFFC  F020         	goto	u4560
  4352  0041F6                     u4550:
  4353  0041F6  0E00               	movlw	0
  4354  0041F8                     u4560:
  4355  0041F8  6E0D               	movwf	_toupper$1589^0,c
  4356  0041FA  6A0E               	clrf	(_toupper$1589+1)^0,c
  4357  0041FC  500D               	movf	_toupper$1589^0,w,c
  4358  0041FE  100E               	iorwf	(_toupper$1589+1)^0,w,c
  4359  004200  B4D8               	btfsc	status,2,c
  4360  004202  EF05  F021         	goto	u4571
  4361  004206  EF07  F021         	goto	u4570
  4362  00420A                     u4571:
  4363  00420A  EF0D  F021         	goto	l1418
  4364  00420E                     u4570:
  4365  00420E  0E5F               	movlw	95
  4366  004210  1407               	andwf	toupper@c^0,w,c
  4367  004212  6E07               	movwf	?_toupper^0,c
  4368  004214  6A08               	clrf	(?_toupper+1)^0,c
  4369  004216  EF11  F021         	goto	l1423
  4370  00421A                     l1418:
  4371  00421A  C007  F007         	movff	toupper@c,?_toupper
  4372  00421E  C008  F008         	movff	toupper@c+1,?_toupper+1
  4373  004222                     l1423:
  4374  004222  0012               	return		;funcret
  4375  004224                     __end_of_toupper:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _islower *****************
  4379 ;; Defined at:
  4380 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  c               2    0[COMRAM] int 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  2    0[COMRAM] int 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4394 ;;      Params:         2       0       0       0       0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4396 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4397 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4398 ;;Total ram usage:        6 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_toupper
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text10
  4408  0046DC                     __ptext10:
  4409                           	callstack 0
  4410  0046DC                     _islower:
  4411                           	callstack 25
  4412  0046DC  0E9F               	movlw	159
  4413  0046DE  6E03               	movwf	??_islower^0,c
  4414  0046E0  0EFF               	movlw	255
  4415  0046E2  6E04               	movwf	(??_islower+1)^0,c
  4416  0046E4  C001  F005         	movff	islower@c,??_islower+2
  4417  0046E8  C002  F006         	movff	islower@c+1,??_islower+3
  4418  0046EC  5003               	movf	??_islower^0,w,c
  4419  0046EE  2605               	addwf	(??_islower+2)^0,f,c
  4420  0046F0  5004               	movf	(??_islower+1)^0,w,c
  4421  0046F2  2206               	addwfc	(??_islower+3)^0,f,c
  4422  0046F4  5006               	movf	(??_islower+3)^0,w,c
  4423  0046F6  E10A               	bnz	u3550
  4424  0046F8  0E1A               	movlw	26
  4425  0046FA  5C05               	subwf	(??_islower+2)^0,w,c
  4426  0046FC  A0D8               	btfss	status,0,c
  4427  0046FE  EF83  F023         	goto	u3551
  4428  004702  EF86  F023         	goto	u3550
  4429  004706                     u3551:
  4430  004706  0E01               	movlw	1
  4431  004708  EF87  F023         	goto	u3560
  4432  00470C                     u3550:
  4433  00470C  0E00               	movlw	0
  4434  00470E                     u3560:
  4435  00470E  6E01               	movwf	?_islower^0,c
  4436  004710  6A02               	clrf	(?_islower+1)^0,c
  4437  004712  0012               	return		;funcret
  4438  004714                     __end_of_islower:
  4439                           	callstack 0
  4440                           
  4441 ;; *************** function _isalpha *****************
  4442 ;; Defined at:
  4443 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  c               2    0[COMRAM] int 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  2    0[COMRAM] int 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4457 ;;      Params:         2       0       0       0       0       0       0       0       0
  4458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4459 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4460 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4461 ;;Total ram usage:        6 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_xtoa
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text11
  4471  004666                     __ptext11:
  4472                           	callstack 0
  4473  004666                     _isalpha:
  4474                           	callstack 26
  4475  004666  0E9F               	movlw	159
  4476  004668  6E03               	movwf	??_isalpha^0,c
  4477  00466A  0EFF               	movlw	255
  4478  00466C  6E04               	movwf	(??_isalpha+1)^0,c
  4479  00466E  0E20               	movlw	32
  4480  004670  1001               	iorwf	isalpha@c^0,w,c
  4481  004672  6E05               	movwf	(??_isalpha+2)^0,c
  4482  004674  0E00               	movlw	0
  4483  004676  1002               	iorwf	(isalpha@c+1)^0,w,c
  4484  004678  6E06               	movwf	(??_isalpha+3)^0,c
  4485  00467A  5003               	movf	??_isalpha^0,w,c
  4486  00467C  2605               	addwf	(??_isalpha+2)^0,f,c
  4487  00467E  5004               	movf	(??_isalpha+1)^0,w,c
  4488  004680  2206               	addwfc	(??_isalpha+3)^0,f,c
  4489  004682  5006               	movf	(??_isalpha+3)^0,w,c
  4490  004684  E10A               	bnz	u4530
  4491  004686  0E1A               	movlw	26
  4492  004688  5C05               	subwf	(??_isalpha+2)^0,w,c
  4493  00468A  A0D8               	btfss	status,0,c
  4494  00468C  EF4A  F023         	goto	u4531
  4495  004690  EF4D  F023         	goto	u4530
  4496  004694                     u4531:
  4497  004694  0E01               	movlw	1
  4498  004696  EF4E  F023         	goto	u4540
  4499  00469A                     u4530:
  4500  00469A  0E00               	movlw	0
  4501  00469C                     u4540:
  4502  00469C  6E01               	movwf	?_isalpha^0,c
  4503  00469E  6A02               	clrf	(?_isalpha+1)^0,c
  4504  0046A0  0012               	return		;funcret
  4505  0046A2                     __end_of_isalpha:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function _strncmp *****************
  4509 ;; Defined at:
  4510 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4513 ;;		 -> vfpfcnvrt@ct(3), 
  4514 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4515 ;;		 -> STR_32(3), 
  4516 ;;  n               2    4[COMRAM] unsigned int 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4519 ;;		 -> STR_32(3), 
  4520 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4521 ;;		 -> vfpfcnvrt@ct(3), 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  2    0[COMRAM] int 
  4524 ;; Registers used:
  4525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4531 ;;      Params:         6       0       0       0       0       0       0       0       0
  4532 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4533 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4534 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4535 ;;Total ram usage:       11 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_vfpfcnvrt
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text12
  4545  003B56                     __ptext12:
  4546                           	callstack 0
  4547  003B56                     _strncmp:
  4548                           	callstack 27
  4549  003B56  C001  F008         	movff	strncmp@_l,strncmp@l
  4550  003B5A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4551  003B5E  C003  F00A         	movff	strncmp@_r,strncmp@r
  4552  003B62  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4553  003B66  0605               	decf	strncmp@n^0,f,c
  4554  003B68  A0D8               	btfss	status,0,c
  4555  003B6A  0606               	decf	(strncmp@n+1)^0,f,c
  4556  003B6C  2805               	incf	strncmp@n^0,w,c
  4557  003B6E  E106               	bnz	u5431
  4558  003B70  2806               	incf	(strncmp@n+1)^0,w,c
  4559  003B72  A4D8               	btfss	status,2,c
  4560  003B74  EFBE  F01D         	goto	u5431
  4561  003B78  EFC0  F01D         	goto	u5430
  4562  003B7C                     u5431:
  4563  003B7C  EFCD  F01D         	goto	l4720
  4564  003B80                     u5430:
  4565  003B80  0E00               	movlw	0
  4566  003B82  6E02               	movwf	(?_strncmp+1)^0,c
  4567  003B84  0E00               	movlw	0
  4568  003B86  6E01               	movwf	?_strncmp^0,c
  4569  003B88  EF15  F01E         	goto	l1395
  4570  003B8C                     l4718:
  4571  003B8C  4A08               	infsnz	strncmp@l^0,f,c
  4572  003B8E  2A09               	incf	(strncmp@l+1)^0,f,c
  4573  003B90  4A0A               	infsnz	strncmp@r^0,f,c
  4574  003B92  2A0B               	incf	(strncmp@r+1)^0,f,c
  4575  003B94  0605               	decf	strncmp@n^0,f,c
  4576  003B96  A0D8               	btfss	status,0,c
  4577  003B98  0606               	decf	(strncmp@n+1)^0,f,c
  4578  003B9A                     l4720:
  4579  003B9A  C008  FFD9         	movff	strncmp@l,fsr2l
  4580  003B9E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4581  003BA2  50DF               	movf	indf2,w,c
  4582  003BA4  B4D8               	btfsc	status,2,c
  4583  003BA6  EFD7  F01D         	goto	u5441
  4584  003BAA  EFD9  F01D         	goto	u5440
  4585  003BAE                     u5441:
  4586  003BAE  EF04  F01E         	goto	l4728
  4587  003BB2                     u5440:
  4588  003BB2  C00A  FFF6         	movff	strncmp@r,tblptrl
  4589  003BB6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4590  003BBA                     	if	0	;tblptru may be non-zero
  4591  003BBA                     	endif
  4592  003BBA                     	if	0	;tblptru may be non-zero
  4593  003BBA                     	endif
  4594  003BBA  0008               	tblrd		*
  4595  003BBC  50F5               	movf	tablat,w,c
  4596  003BBE  0900               	iorlw	0
  4597  003BC0  B4D8               	btfsc	status,2,c
  4598  003BC2  EFE5  F01D         	goto	u5451
  4599  003BC6  EFE7  F01D         	goto	u5450
  4600  003BCA                     u5451:
  4601  003BCA  EF04  F01E         	goto	l4728
  4602  003BCE                     u5450:
  4603  003BCE  5005               	movf	strncmp@n^0,w,c
  4604  003BD0  1006               	iorwf	(strncmp@n+1)^0,w,c
  4605  003BD2  B4D8               	btfsc	status,2,c
  4606  003BD4  EFEE  F01D         	goto	u5461
  4607  003BD8  EFF0  F01D         	goto	u5460
  4608  003BDC                     u5461:
  4609  003BDC  EF04  F01E         	goto	l4728
  4610  003BE0                     u5460:
  4611  003BE0  C008  FFD9         	movff	strncmp@l,fsr2l
  4612  003BE4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4613  003BE8  50DF               	movf	indf2,w,c
  4614  003BEA  6E07               	movwf	??_strncmp^0,c
  4615  003BEC  C00A  FFF6         	movff	strncmp@r,tblptrl
  4616  003BF0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4617  003BF4                     	if	0	;tblptru may be non-zero
  4618  003BF4                     	endif
  4619  003BF4                     	if	0	;tblptru may be non-zero
  4620  003BF4                     	endif
  4621  003BF4  0008               	tblrd		*
  4622  003BF6  50F5               	movf	tablat,w,c
  4623  003BF8  1807               	xorwf	??_strncmp^0,w,c
  4624  003BFA  B4D8               	btfsc	status,2,c
  4625  003BFC  EF02  F01E         	goto	u5471
  4626  003C00  EF04  F01E         	goto	u5470
  4627  003C04                     u5471:
  4628  003C04  EFC6  F01D         	goto	l4718
  4629  003C08                     u5470:
  4630  003C08                     l4728:
  4631  003C08  C008  FFD9         	movff	strncmp@l,fsr2l
  4632  003C0C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4633  003C10  50DF               	movf	indf2,w,c
  4634  003C12  6E07               	movwf	??_strncmp^0,c
  4635  003C14  C00A  FFF6         	movff	strncmp@r,tblptrl
  4636  003C18  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4637  003C1C                     	if	0	;tblptru may be non-zero
  4638  003C1C                     	endif
  4639  003C1C                     	if	0	;tblptru may be non-zero
  4640  003C1C                     	endif
  4641  003C1C  0008               	tblrd		*
  4642  003C1E  50F5               	movf	tablat,w,c
  4643  003C20  5C07               	subwf	??_strncmp^0,w,c
  4644  003C22  6E01               	movwf	?_strncmp^0,c
  4645  003C24  6A02               	clrf	(?_strncmp+1)^0,c
  4646  003C26  A0D8               	btfss	status,0,c
  4647  003C28  0602               	decf	(?_strncmp+1)^0,f,c
  4648  003C2A                     l1395:
  4649  003C2A  0012               	return		;funcret
  4650  003C2C                     __end_of_strncmp:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function _efgtoa *****************
  4654 ;; Defined at:
  4655 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4658 ;;		 -> sprintf@f(6), 
  4659 ;;  f               4    4[BANK0 ] PTR struct _IO_FILE
  4660 ;;  c               1    8[BANK0 ] unsigned char 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  u               4   66[BANK0 ] unsigned char 
  4663 ;;  g               4   58[BANK0 ] unsigned char 
  4664 ;;  l               4   52[BANK0 ] unsigned char 
  4665 ;;  h               4   48[BANK0 ] unsigned char 
  4666 ;;  ou              4   34[BANK0 ] unsigned char 
  4667 ;;  n               2   64[BANK0 ] int 
  4668 ;;  e               2   62[BANK0 ] int 
  4669 ;;  i               2   56[BANK0 ] int 
  4670 ;;  w               2   44[BANK0 ] int 
  4671 ;;  p               2   42[BANK0 ] int 
  4672 ;;  sign            2   40[BANK0 ] int 
  4673 ;;  d               2   38[BANK0 ] int 
  4674 ;;  m               2   32[BANK0 ] int 
  4675 ;;  ne              2   30[BANK0 ] int 
  4676 ;;  pp              2   28[BANK0 ] int 
  4677 ;;  t               2   26[BANK0 ] int 
  4678 ;;  mode            1   47[BANK0 ] unsigned char 
  4679 ;;  nmode           1   46[BANK0 ] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  2    2[BANK0 ] int 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4689 ;;      Params:         0       7       0       0       0       0       0       0       0
  4690 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4691 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4692 ;;      Totals:         0      68       0       0       0       0       0       0       0
  4693 ;;Total ram usage:       68 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 4
  4696 ;; This function calls:
  4697 ;;		___awdiv
  4698 ;;		___awmod
  4699 ;;		___fladd
  4700 ;;		___fldiv
  4701 ;;		___fleq
  4702 ;;		___flge
  4703 ;;		___flmul
  4704 ;;		___flneg
  4705 ;;		___flsub
  4706 ;;		___fltol
  4707 ;;		___fpclassifyf
  4708 ;;		_floorf
  4709 ;;		_isupper
  4710 ;;		_pad
  4711 ;;		_strcpy
  4712 ;;		_tolower
  4713 ;; This function is called by:
  4714 ;;		_vfpfcnvrt
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text13
  4719  00084A                     __ptext13:
  4720                           	callstack 0
  4721  00084A                     _efgtoa:
  4722                           	callstack 23
  4723  00084A                     
  4724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4725  00084A  0E00               	movlw	0
  4726  00084C  0100               	movlb	0	; () banked
  4727  00084E  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  4728  000850  0E00               	movlw	0
  4729  000852  6F88               	movwf	efgtoa@sign& (0+255),b
  4730  000854                     
  4731                           ; BSR set to: 0
  4732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4733  000854  C064  F09A         	movff	efgtoa@f,efgtoa@g
  4734  000858  C065  F09B         	movff	efgtoa@f+1,efgtoa@g+1
  4735  00085C  C066  F09C         	movff	efgtoa@f+2,efgtoa@g+2
  4736  000860  C067  F09D         	movff	efgtoa@f+3,efgtoa@g+3
  4737  000864                     
  4738                           ; BSR set to: 0
  4739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4740  000864  BF9D               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4741  000866  EF39  F004         	goto	u4650
  4742  00086A  EF37  F004         	goto	u4651
  4743  00086E                     u4651:
  4744  00086E  EF4F  F004         	goto	l4306
  4745  000872                     u4650:
  4746  000872                     
  4747                           ; BSR set to: 0
  4748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4749  000872  0E00               	movlw	0
  4750  000874  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  4751  000876  0E01               	movlw	1
  4752  000878  6F88               	movwf	efgtoa@sign& (0+255),b
  4753  00087A                     
  4754                           ; BSR set to: 0
  4755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4756  00087A  C09A  F001         	movff	efgtoa@g,___flneg@f1
  4757  00087E  C09B  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4758  000882  C09C  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4759  000886  C09D  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4760  00088A  ECA6  F023         	call	___flneg	;wreg free
  4761  00088E  C001  F09A         	movff	?___flneg,efgtoa@g
  4762  000892  C002  F09B         	movff	?___flneg+1,efgtoa@g+1
  4763  000896  C003  F09C         	movff	?___flneg+2,efgtoa@g+2
  4764  00089A  C004  F09D         	movff	?___flneg+3,efgtoa@g+3
  4765  00089E                     l4306:
  4766                           
  4767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4768  00089E  0E00               	movlw	0
  4769  0008A0  0100               	movlb	0	; () banked
  4770  0008A2  6FA1               	movwf	(efgtoa@n+1)& (0+255),b
  4771  0008A4  0E00               	movlw	0
  4772  0008A6  6FA0               	movwf	efgtoa@n& (0+255),b
  4773  0008A8                     
  4774                           ; BSR set to: 0
  4775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4776  0008A8  C0FA  F08C         	movff	_width,efgtoa@w
  4777  0008AC  C0FB  F08D         	movff	_width+1,efgtoa@w+1
  4778  0008B0                     
  4779                           ; BSR set to: 0
  4780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4781  0008B0  5188               	movf	efgtoa@sign& (0+255),w,b
  4782  0008B2  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4783  0008B4  A4D8               	btfss	status,2,c
  4784  0008B6  EF5F  F004         	goto	u4661
  4785  0008BA  EF61  F004         	goto	u4660
  4786  0008BE                     u4661:
  4787  0008BE  EF68  F004         	goto	l4314
  4788  0008C2                     u4660:
  4789  0008C2                     
  4790                           ; BSR set to: 0
  4791  0008C2  A5FE               	btfss	_flags& (0+255),2,b
  4792  0008C4  EF66  F004         	goto	u4671
  4793  0008C8  EF68  F004         	goto	u4670
  4794  0008CC                     u4671:
  4795  0008CC  EF82  F004         	goto	l4326
  4796  0008D0                     u4670:
  4797  0008D0                     l4314:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4801  0008D0  5188               	movf	efgtoa@sign& (0+255),w,b
  4802  0008D2  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4803  0008D4  A4D8               	btfss	status,2,c
  4804  0008D6  EF6F  F004         	goto	u4681
  4805  0008DA  EF71  F004         	goto	u4680
  4806  0008DE                     u4681:
  4807  0008DE  EF77  F004         	goto	l4318
  4808  0008E2                     u4680:
  4809  0008E2                     
  4810                           ; BSR set to: 0
  4811  0008E2  0E00               	movlw	0
  4812  0008E4  6F6F               	movwf	(_efgtoa$1394+1)& (0+255),b
  4813  0008E6  0E2B               	movlw	43
  4814  0008E8  6F6E               	movwf	_efgtoa$1394& (0+255),b
  4815  0008EA  EF7B  F004         	goto	l4320
  4816  0008EE                     l4318:
  4817                           
  4818                           ; BSR set to: 0
  4819  0008EE  0E00               	movlw	0
  4820  0008F0  6F6F               	movwf	(_efgtoa$1394+1)& (0+255),b
  4821  0008F2  0E2D               	movlw	45
  4822  0008F4  6F6E               	movwf	_efgtoa$1394& (0+255),b
  4823  0008F6                     l4320:
  4824                           
  4825                           ; BSR set to: 0
  4826  0008F6  C06E  F112         	movff	_efgtoa$1394,_dbuf
  4827  0008FA                     
  4828                           ; BSR set to: 0
  4829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4830  0008FA  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  4831  0008FC  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  4832  0008FE                     
  4833                           ; BSR set to: 0
  4834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4835  0008FE  078C               	decf	efgtoa@w& (0+255),f,b
  4836  000900  A0D8               	btfss	status,0,c
  4837  000902  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  4838  000904                     l4326:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4842  000904  C09A  F001         	movff	efgtoa@g,___fpclassifyf@x
  4843  000908  C09B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4844  00090C  C09C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4845  000910  C09D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4846  000914  EC2C  F01D         	call	___fpclassifyf	;wreg free
  4847  000918  0401               	decf	?___fpclassifyf^0,w,c
  4848  00091A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4849  00091C  A4D8               	btfss	status,2,c
  4850  00091E  EF93  F004         	goto	u4691
  4851  000922  EF95  F004         	goto	u4690
  4852  000926                     u4691:
  4853  000926  EFEC  F004         	goto	l4344
  4854  00092A                     u4690:
  4855  00092A  0EBF               	movlw	191
  4856  00092C  0100               	movlb	0	; () banked
  4857  00092E  6F69               	movwf	??_efgtoa& (0+255),b
  4858  000930  0EFF               	movlw	255
  4859  000932  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  4860  000934  5168               	movf	efgtoa@c& (0+255),w,b
  4861  000936  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  4862  000938  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  4863  00093A  5169               	movf	??_efgtoa& (0+255),w,b
  4864  00093C  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  4865  00093E  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  4866  000940  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4867  000942  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  4868  000944  E10A               	bnz	u4700
  4869  000946  0E1A               	movlw	26
  4870  000948  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  4871  00094A  A0D8               	btfss	status,0,c
  4872  00094C  EFAA  F004         	goto	u4701
  4873  000950  EFAD  F004         	goto	u4700
  4874  000954                     u4701:
  4875  000954  0E01               	movlw	1
  4876  000956  EFAE  F004         	goto	u4710
  4877  00095A                     u4700:
  4878  00095A  0E00               	movlw	0
  4879  00095C                     u4710:
  4880  00095C  6F70               	movwf	_efgtoa$1395& (0+255),b
  4881  00095E  6B71               	clrf	(_efgtoa$1395+1)& (0+255),b
  4882  000960                     
  4883                           ; BSR set to: 0
  4884  000960  5170               	movf	_efgtoa$1395& (0+255),w,b
  4885  000962  1171               	iorwf	(_efgtoa$1395+1)& (0+255),w,b
  4886  000964  B4D8               	btfsc	status,2,c
  4887  000966  EFB7  F004         	goto	u4721
  4888  00096A  EFB9  F004         	goto	u4720
  4889  00096E                     u4721:
  4890  00096E  EFC7  F004         	goto	l4336
  4891  000972                     u4720:
  4892  000972                     
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4895  000972  0E12               	movlw	low _dbuf
  4896  000974  25A0               	addwf	efgtoa@n& (0+255),w,b
  4897  000976  6E01               	movwf	strcpy@dest^0,c
  4898  000978  0E01               	movlw	high _dbuf
  4899  00097A  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4900  00097C  6E02               	movwf	(strcpy@dest+1)^0,c
  4901  00097E  0E08               	movlw	low STR_22
  4902  000980  6E03               	movwf	strcpy@src^0,c
  4903  000982  0E08               	movlw	high STR_22
  4904  000984  6E04               	movwf	(strcpy@src+1)^0,c
  4905  000986  EC41  F021         	call	_strcpy	;wreg free
  4906                           
  4907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4908  00098A  EFD3  F004         	goto	l4338
  4909  00098E                     l4336:
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4913  00098E  0E12               	movlw	low _dbuf
  4914  000990  25A0               	addwf	efgtoa@n& (0+255),w,b
  4915  000992  6E01               	movwf	strcpy@dest^0,c
  4916  000994  0E01               	movlw	high _dbuf
  4917  000996  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4918  000998  6E02               	movwf	(strcpy@dest+1)^0,c
  4919  00099A  0E10               	movlw	low STR_23
  4920  00099C  6E03               	movwf	strcpy@src^0,c
  4921  00099E  0E08               	movlw	high STR_23
  4922  0009A0  6E04               	movwf	(strcpy@src+1)^0,c
  4923  0009A2  EC41  F021         	call	_strcpy	;wreg free
  4924  0009A6                     l4338:
  4925                           
  4926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4927  0009A6  0100               	movlb	0	; () banked
  4928  0009A8  0EFD               	movlw	253
  4929  0009AA  278C               	addwf	efgtoa@w& (0+255),f,b
  4930  0009AC  0EFF               	movlw	255
  4931  0009AE  238D               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4932  0009B0                     l4340:
  4933                           
  4934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4935  0009B0  C062  F011         	movff	efgtoa@fp,pad@fp
  4936  0009B4  C063  F012         	movff	efgtoa@fp+1,pad@fp+1
  4937  0009B8  0E12               	movlw	low _dbuf
  4938  0009BA  6E13               	movwf	pad@buf^0,c
  4939  0009BC  0E01               	movlw	high _dbuf
  4940  0009BE  6E14               	movwf	(pad@buf+1)^0,c
  4941  0009C0  C08C  F015         	movff	efgtoa@w,pad@p
  4942  0009C4  C08D  F016         	movff	efgtoa@w+1,pad@p+1
  4943  0009C8  EC7B  F01E         	call	_pad	;wreg free
  4944  0009CC  C011  F062         	movff	?_pad,?_efgtoa
  4945  0009D0  C012  F063         	movff	?_pad+1,?_efgtoa+1
  4946  0009D4  EF50  F00A         	goto	l1124
  4947  0009D8                     l4344:
  4948                           
  4949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4950  0009D8  C09A  F001         	movff	efgtoa@g,___fpclassifyf@x
  4951  0009DC  C09B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4952  0009E0  C09C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4953  0009E4  C09D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4954  0009E8  EC2C  F01D         	call	___fpclassifyf	;wreg free
  4955  0009EC  5001               	movf	?___fpclassifyf^0,w,c
  4956  0009EE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4957  0009F0  A4D8               	btfss	status,2,c
  4958  0009F2  EFFD  F004         	goto	u4731
  4959  0009F6  EFFF  F004         	goto	u4730
  4960  0009FA                     u4731:
  4961  0009FA  EF3F  F005         	goto	l4362
  4962  0009FE                     u4730:
  4963  0009FE  0EBF               	movlw	191
  4964  000A00  0100               	movlb	0	; () banked
  4965  000A02  6F69               	movwf	??_efgtoa& (0+255),b
  4966  000A04  0EFF               	movlw	255
  4967  000A06  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  4968  000A08  5168               	movf	efgtoa@c& (0+255),w,b
  4969  000A0A  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  4970  000A0C  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  4971  000A0E  5169               	movf	??_efgtoa& (0+255),w,b
  4972  000A10  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  4973  000A12  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  4974  000A14  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4975  000A16  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  4976  000A18  E10A               	bnz	u4740
  4977  000A1A  0E1A               	movlw	26
  4978  000A1C  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  4979  000A1E  A0D8               	btfss	status,0,c
  4980  000A20  EF14  F005         	goto	u4741
  4981  000A24  EF17  F005         	goto	u4740
  4982  000A28                     u4741:
  4983  000A28  0E01               	movlw	1
  4984  000A2A  EF18  F005         	goto	u4750
  4985  000A2E                     u4740:
  4986  000A2E  0E00               	movlw	0
  4987  000A30                     u4750:
  4988  000A30  6F72               	movwf	_efgtoa$1400& (0+255),b
  4989  000A32  6B73               	clrf	(_efgtoa$1400+1)& (0+255),b
  4990  000A34                     
  4991                           ; BSR set to: 0
  4992  000A34  5172               	movf	_efgtoa$1400& (0+255),w,b
  4993  000A36  1173               	iorwf	(_efgtoa$1400+1)& (0+255),w,b
  4994  000A38  B4D8               	btfsc	status,2,c
  4995  000A3A  EF21  F005         	goto	u4761
  4996  000A3E  EF23  F005         	goto	u4760
  4997  000A42                     u4761:
  4998  000A42  EF31  F005         	goto	l4354
  4999  000A46                     u4760:
  5000  000A46                     
  5001                           ; BSR set to: 0
  5002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  5003  000A46  0E12               	movlw	low _dbuf
  5004  000A48  25A0               	addwf	efgtoa@n& (0+255),w,b
  5005  000A4A  6E01               	movwf	strcpy@dest^0,c
  5006  000A4C  0E01               	movlw	high _dbuf
  5007  000A4E  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5008  000A50  6E02               	movwf	(strcpy@dest+1)^0,c
  5009  000A52  0E0C               	movlw	low STR_26
  5010  000A54  6E03               	movwf	strcpy@src^0,c
  5011  000A56  0E08               	movlw	high STR_26
  5012  000A58  6E04               	movwf	(strcpy@src+1)^0,c
  5013  000A5A  EC41  F021         	call	_strcpy	;wreg free
  5014                           
  5015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  5016  000A5E  EFD3  F004         	goto	l4338
  5017  000A62                     l4354:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  5021  000A62  0E12               	movlw	low _dbuf
  5022  000A64  25A0               	addwf	efgtoa@n& (0+255),w,b
  5023  000A66  6E01               	movwf	strcpy@dest^0,c
  5024  000A68  0E01               	movlw	high _dbuf
  5025  000A6A  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5026  000A6C  6E02               	movwf	(strcpy@dest+1)^0,c
  5027  000A6E  0E14               	movlw	low STR_27
  5028  000A70  6E03               	movwf	strcpy@src^0,c
  5029  000A72  0E08               	movlw	high STR_27
  5030  000A74  6E04               	movwf	(strcpy@src+1)^0,c
  5031  000A76  EC41  F021         	call	_strcpy	;wreg free
  5032  000A7A  EFD3  F004         	goto	l4338
  5033  000A7E                     l4362:
  5034                           
  5035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5036  000A7E  0E00               	movlw	0
  5037  000A80  0100               	movlb	0	; () banked
  5038  000A82  6FA2               	movwf	efgtoa@u& (0+255),b
  5039  000A84  0E00               	movlw	0
  5040  000A86  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  5041  000A88  0E80               	movlw	128
  5042  000A8A  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  5043  000A8C  0E3F               	movlw	63
  5044  000A8E  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  5045                           
  5046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5047  000A90  0E00               	movlw	0
  5048  000A92  6F9F               	movwf	(efgtoa@e+1)& (0+255),b
  5049  000A94  0E00               	movlw	0
  5050  000A96  6F9E               	movwf	efgtoa@e& (0+255),b
  5051  000A98                     
  5052                           ; BSR set to: 0
  5053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5054  000A98  C09A  F001         	movff	efgtoa@g,___fleq@ff1
  5055  000A9C  C09B  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5056  000AA0  C09C  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5057  000AA4  C09D  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5058  000AA8  0E00               	movlw	0
  5059  000AAA  6E05               	movwf	___fleq@ff2^0,c
  5060  000AAC  0E00               	movlw	0
  5061  000AAE  6E06               	movwf	(___fleq@ff2+1)^0,c
  5062  000AB0  0E00               	movlw	0
  5063  000AB2  6E07               	movwf	(___fleq@ff2+2)^0,c
  5064  000AB4  0E00               	movlw	0
  5065  000AB6  6E08               	movwf	(___fleq@ff2+3)^0,c
  5066  000AB8  ECFA  F01F         	call	___fleq	;wreg free
  5067  000ABC  B0D8               	btfsc	status,0,c
  5068  000ABE  EF63  F005         	goto	u4771
  5069  000AC2  EF65  F005         	goto	u4770
  5070  000AC6                     u4771:
  5071  000AC6  EFE8  F005         	goto	l4380
  5072  000ACA                     u4770:
  5073  000ACA  EF84  F005         	goto	l4372
  5074  000ACE                     l4368:
  5075                           
  5076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5077  000ACE  C0A2  F015         	movff	efgtoa@u,___flmul@b
  5078  000AD2  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  5079  000AD6  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  5080  000ADA  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  5081  000ADE  0E00               	movlw	0
  5082  000AE0  6E19               	movwf	___flmul@a^0,c
  5083  000AE2  0E00               	movlw	0
  5084  000AE4  6E1A               	movwf	(___flmul@a+1)^0,c
  5085  000AE6  0E20               	movlw	32
  5086  000AE8  6E1B               	movwf	(___flmul@a+2)^0,c
  5087  000AEA  0E41               	movlw	65
  5088  000AEC  6E1C               	movwf	(___flmul@a+3)^0,c
  5089  000AEE  ECB8  F00F         	call	___flmul	;wreg free
  5090  000AF2  C015  F0A2         	movff	?___flmul,efgtoa@u
  5091  000AF6  C016  F0A3         	movff	?___flmul+1,efgtoa@u+1
  5092  000AFA  C017  F0A4         	movff	?___flmul+2,efgtoa@u+2
  5093  000AFE  C018  F0A5         	movff	?___flmul+3,efgtoa@u+3
  5094  000B02                     
  5095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5096  000B02  0100               	movlb	0	; () banked
  5097  000B04  4B9E               	infsnz	efgtoa@e& (0+255),f,b
  5098  000B06  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  5099  000B08                     l4372:
  5100                           
  5101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5102  000B08  C09A  F02E         	movff	efgtoa@g,___flge@ff1
  5103  000B0C  C09B  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  5104  000B10  C09C  F030         	movff	efgtoa@g+2,___flge@ff1+2
  5105  000B14  C09D  F031         	movff	efgtoa@g+3,___flge@ff1+3
  5106  000B18  0E00               	movlw	0
  5107  000B1A  6E19               	movwf	___flmul@a^0,c
  5108  000B1C  0E00               	movlw	0
  5109  000B1E  6E1A               	movwf	(___flmul@a+1)^0,c
  5110  000B20  0E20               	movlw	32
  5111  000B22  6E1B               	movwf	(___flmul@a+2)^0,c
  5112  000B24  0E41               	movlw	65
  5113  000B26  6E1C               	movwf	(___flmul@a+3)^0,c
  5114  000B28  C0A2  F015         	movff	efgtoa@u,___flmul@b
  5115  000B2C  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  5116  000B30  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  5117  000B34  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  5118  000B38  ECB8  F00F         	call	___flmul	;wreg free
  5119  000B3C  C015  F032         	movff	?___flmul,___flge@ff2
  5120  000B40  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  5121  000B44  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  5122  000B48  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  5123  000B4C  EC2B  F01C         	call	___flge	;wreg free
  5124  000B50  B0D8               	btfsc	status,0,c
  5125  000B52  EFAD  F005         	goto	u4781
  5126  000B56  EFAF  F005         	goto	u4780
  5127  000B5A                     u4781:
  5128  000B5A  EF67  F005         	goto	l4368
  5129  000B5E                     u4780:
  5130  000B5E  EFCF  F005         	goto	l4378
  5131  000B62                     l4374:
  5132                           
  5133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5134  000B62  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  5135  000B66  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  5136  000B6A  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  5137  000B6E  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  5138  000B72  0E00               	movlw	0
  5139  000B74  6E32               	movwf	___fldiv@a^0,c
  5140  000B76  0E00               	movlw	0
  5141  000B78  6E33               	movwf	(___fldiv@a+1)^0,c
  5142  000B7A  0E20               	movlw	32
  5143  000B7C  6E34               	movwf	(___fldiv@a+2)^0,c
  5144  000B7E  0E41               	movlw	65
  5145  000B80  6E35               	movwf	(___fldiv@a+3)^0,c
  5146  000B82  EC9E  F013         	call	___fldiv	;wreg free
  5147  000B86  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  5148  000B8A  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  5149  000B8E  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  5150  000B92  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  5151  000B96                     
  5152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5153  000B96  0100               	movlb	0	; () banked
  5154  000B98  079E               	decf	efgtoa@e& (0+255),f,b
  5155  000B9A  A0D8               	btfss	status,0,c
  5156  000B9C  079F               	decf	(efgtoa@e+1)& (0+255),f,b
  5157  000B9E                     l4378:
  5158                           
  5159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5160  000B9E  C09A  F02E         	movff	efgtoa@g,___flge@ff1
  5161  000BA2  C09B  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  5162  000BA6  C09C  F030         	movff	efgtoa@g+2,___flge@ff1+2
  5163  000BAA  C09D  F031         	movff	efgtoa@g+3,___flge@ff1+3
  5164  000BAE  C0A2  F032         	movff	efgtoa@u,___flge@ff2
  5165  000BB2  C0A3  F033         	movff	efgtoa@u+1,___flge@ff2+1
  5166  000BB6  C0A4  F034         	movff	efgtoa@u+2,___flge@ff2+2
  5167  000BBA  C0A5  F035         	movff	efgtoa@u+3,___flge@ff2+3
  5168  000BBE  EC2B  F01C         	call	___flge	;wreg free
  5169  000BC2  A0D8               	btfss	status,0,c
  5170  000BC4  EFE6  F005         	goto	u4791
  5171  000BC8  EFE8  F005         	goto	u4790
  5172  000BCC                     u4791:
  5173  000BCC  EFB1  F005         	goto	l4374
  5174  000BD0                     u4790:
  5175  000BD0                     l4380:
  5176                           
  5177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5178  000BD0  C068  F007         	movff	efgtoa@c,tolower@c
  5179  000BD4  6A08               	clrf	(tolower@c+1)^0,c
  5180  000BD6  ECB3  F020         	call	_tolower	;wreg free
  5181  000BDA  5007               	movf	?_tolower^0,w,c
  5182  000BDC  0100               	movlb	0	; () banked
  5183  000BDE  6F8F               	movwf	efgtoa@mode& (0+255),b
  5184  000BE0                     
  5185                           ; BSR set to: 0
  5186                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5187  000BE0  C08F  F08E         	movff	efgtoa@mode,efgtoa@nmode
  5188  000BE4                     
  5189                           ; BSR set to: 0
  5190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5191  000BE4  0E67               	movlw	103
  5192  000BE6  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5193  000BE8  A4D8               	btfss	status,2,c
  5194  000BEA  EFF9  F005         	goto	u4801
  5195  000BEE  EFFB  F005         	goto	u4800
  5196  000BF2                     u4801:
  5197  000BF2  EF21  F006         	goto	l4394
  5198  000BF6                     u4800:
  5199  000BF6                     
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5202  000BF6  51FC               	movf	_prec& (0+255),w,b
  5203  000BF8  11FD               	iorwf	(_prec+1)& (0+255),w,b
  5204  000BFA  A4D8               	btfss	status,2,c
  5205  000BFC  EF02  F006         	goto	u4811
  5206  000C00  EF04  F006         	goto	u4810
  5207  000C04                     u4811:
  5208  000C04  EF08  F006         	goto	l4390
  5209  000C08                     u4810:
  5210  000C08                     
  5211                           ; BSR set to: 0
  5212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5213  000C08  0E00               	movlw	0
  5214  000C0A  6FFD               	movwf	(_prec+1)& (0+255),b
  5215  000C0C  0E01               	movlw	1
  5216  000C0E  6FFC               	movwf	_prec& (0+255),b
  5217  000C10                     l4390:
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5221  000C10  BFFD               	btfsc	(_prec+1)& (0+255),7,b
  5222  000C12  EF15  F006         	goto	u4820
  5223  000C16  51FD               	movf	(_prec+1)& (0+255),w,b
  5224  000C18  E106               	bnz	u4821
  5225  000C1A  05FC               	decf	_prec& (0+255),w,b
  5226  000C1C  B0D8               	btfsc	status,0,c
  5227  000C1E  EF13  F006         	goto	u4821
  5228  000C22  EF15  F006         	goto	u4820
  5229  000C26                     u4821:
  5230  000C26  EF1B  F006         	goto	l1142
  5231  000C2A                     u4820:
  5232  000C2A                     l4392:
  5233                           
  5234                           ; BSR set to: 0
  5235  000C2A  0E00               	movlw	0
  5236  000C2C  6F8B               	movwf	(efgtoa@p+1)& (0+255),b
  5237  000C2E  0E06               	movlw	6
  5238  000C30  6F8A               	movwf	efgtoa@p& (0+255),b
  5239  000C32  EF2A  F006         	goto	l4400
  5240  000C36                     l1142:
  5241                           
  5242                           ; BSR set to: 0
  5243  000C36  C0FC  F08A         	movff	_prec,efgtoa@p
  5244  000C3A  C0FD  F08B         	movff	_prec+1,efgtoa@p+1
  5245  000C3E  EF2A  F006         	goto	l4400
  5246  000C42                     l4394:
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5250  000C42  BFFD               	btfsc	(_prec+1)& (0+255),7,b
  5251  000C44  EF26  F006         	goto	u4831
  5252  000C48  EF28  F006         	goto	u4830
  5253  000C4C                     u4831:
  5254  000C4C  EF15  F006         	goto	l4392
  5255  000C50                     u4830:
  5256  000C50  EF1B  F006         	goto	l1142
  5257  000C54                     l4400:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5261  000C54  0E67               	movlw	103
  5262  000C56  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5263  000C58  A4D8               	btfss	status,2,c
  5264  000C5A  EF31  F006         	goto	u4841
  5265  000C5E  EF33  F006         	goto	u4840
  5266  000C62                     u4841:
  5267  000C62  EF62  F006         	goto	l4410
  5268  000C66                     u4840:
  5269  000C66                     
  5270                           ; BSR set to: 0
  5271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5272  000C66  AF9F               	btfss	(efgtoa@e+1)& (0+255),7,b
  5273  000C68  EF41  F006         	goto	u4850
  5274  000C6C  0EFC               	movlw	252
  5275  000C6E  5D9E               	subwf	efgtoa@e& (0+255),w,b
  5276  000C70  0EFF               	movlw	255
  5277  000C72  599F               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5278  000C74  A0D8               	btfss	status,0,c
  5279  000C76  EF3F  F006         	goto	u4851
  5280  000C7A  EF41  F006         	goto	u4850
  5281  000C7E                     u4851:
  5282  000C7E  EF60  F006         	goto	l4408
  5283  000C82                     u4850:
  5284  000C82                     
  5285                           ; BSR set to: 0
  5286  000C82  0EFF               	movlw	255
  5287  000C84  6F69               	movwf	??_efgtoa& (0+255),b
  5288  000C86  0EFF               	movlw	255
  5289  000C88  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  5290  000C8A  C08A  F06B         	movff	efgtoa@p,??_efgtoa+2
  5291  000C8E  C08B  F06C         	movff	efgtoa@p+1,??_efgtoa+3
  5292  000C92  5169               	movf	??_efgtoa& (0+255),w,b
  5293  000C94  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  5294  000C96  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  5295  000C98  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5296  000C9A  519E               	movf	efgtoa@e& (0+255),w,b
  5297  000C9C  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  5298  000C9E  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  5299  000CA0  0A80               	xorlw	128
  5300  000CA2  6F6D               	movwf	(??_efgtoa+4)& (0+255),b
  5301  000CA4  519F               	movf	(efgtoa@e+1)& (0+255),w,b
  5302  000CA6  0A80               	xorlw	128
  5303  000CA8  596D               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5304  000CAA  A0D8               	btfss	status,0,c
  5305  000CAC  EF5A  F006         	goto	u4861
  5306  000CB0  EF5C  F006         	goto	u4860
  5307  000CB4                     u4861:
  5308  000CB4  EF60  F006         	goto	l4408
  5309  000CB8                     u4860:
  5310  000CB8                     
  5311                           ; BSR set to: 0
  5312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5313  000CB8  0E66               	movlw	102
  5314  000CBA  6F8E               	movwf	efgtoa@nmode& (0+255),b
  5315                           
  5316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5317  000CBC  EF62  F006         	goto	l4410
  5318  000CC0                     l4408:
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5322  000CC0  0E65               	movlw	101
  5323  000CC2  6F8E               	movwf	efgtoa@nmode& (0+255),b
  5324  000CC4                     l4410:
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5328  000CC4  C08A  F080         	movff	efgtoa@p,efgtoa@m
  5329  000CC8  C08B  F081         	movff	efgtoa@p+1,efgtoa@m+1
  5330  000CCC                     
  5331                           ; BSR set to: 0
  5332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5333  000CCC  0E67               	movlw	103
  5334  000CCE  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5335  000CD0  A4D8               	btfss	status,2,c
  5336  000CD2  EF6D  F006         	goto	u4871
  5337  000CD6  EF6F  F006         	goto	u4870
  5338  000CDA                     u4871:
  5339  000CDA  EF7F  F006         	goto	l4418
  5340  000CDE                     u4870:
  5341  000CDE                     
  5342                           ; BSR set to: 0
  5343  000CDE  0E66               	movlw	102
  5344  000CE0  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5345  000CE2  A4D8               	btfss	status,2,c
  5346  000CE4  EF76  F006         	goto	u4881
  5347  000CE8  EF78  F006         	goto	u4880
  5348  000CEC                     u4881:
  5349  000CEC  EF81  F006         	goto	l4420
  5350  000CF0                     u4880:
  5351  000CF0                     
  5352                           ; BSR set to: 0
  5353  000CF0  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5354  000CF2  EF7F  F006         	goto	u4890
  5355  000CF6  EF7D  F006         	goto	u4891
  5356  000CFA                     u4891:
  5357  000CFA  EF81  F006         	goto	l4420
  5358  000CFE                     u4890:
  5359  000CFE                     l4418:
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5363  000CFE  4B80               	infsnz	efgtoa@m& (0+255),f,b
  5364  000D00  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  5365  000D02                     l4420:
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5369  000D02  0E66               	movlw	102
  5370  000D04  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5371  000D06  A4D8               	btfss	status,2,c
  5372  000D08  EF88  F006         	goto	u4901
  5373  000D0C  EF8A  F006         	goto	u4900
  5374  000D10                     u4901:
  5375  000D10  EFAA  F006         	goto	l4430
  5376  000D14                     u4900:
  5377  000D14                     
  5378                           ; BSR set to: 0
  5379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5380  000D14  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5381  000D16  EF91  F006         	goto	u4910
  5382  000D1A  EF8F  F006         	goto	u4911
  5383  000D1E                     u4911:
  5384  000D1E  EF9D  F006         	goto	l4426
  5385  000D22                     u4910:
  5386  000D22                     
  5387                           ; BSR set to: 0
  5388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5389  000D22  0E00               	movlw	0
  5390  000D24  6FA2               	movwf	efgtoa@u& (0+255),b
  5391  000D26  0E00               	movlw	0
  5392  000D28  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  5393  000D2A  0E80               	movlw	128
  5394  000D2C  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  5395  000D2E  0E3F               	movlw	63
  5396  000D30  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  5397                           
  5398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5399  000D32  0E00               	movlw	0
  5400  000D34  6F9F               	movwf	(efgtoa@e+1)& (0+255),b
  5401  000D36  0E00               	movlw	0
  5402  000D38  6F9E               	movwf	efgtoa@e& (0+255),b
  5403  000D3A                     l4426:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5407  000D3A  0E67               	movlw	103
  5408  000D3C  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5409  000D3E  B4D8               	btfsc	status,2,c
  5410  000D40  EFA4  F006         	goto	u4921
  5411  000D44  EFA6  F006         	goto	u4920
  5412  000D48                     u4921:
  5413  000D48  EFAA  F006         	goto	l4430
  5414  000D4C                     u4920:
  5415  000D4C                     
  5416                           ; BSR set to: 0
  5417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5418  000D4C  519E               	movf	efgtoa@e& (0+255),w,b
  5419  000D4E  2780               	addwf	efgtoa@m& (0+255),f,b
  5420  000D50  519F               	movf	(efgtoa@e+1)& (0+255),w,b
  5421  000D52  2381               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5422  000D54                     l4430:
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5426  000D54  0E00               	movlw	0
  5427  000D56  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  5428  000D58  0E00               	movlw	0
  5429  000D5A  6F98               	movwf	efgtoa@i& (0+255),b
  5430  000D5C                     
  5431                           ; BSR set to: 0
  5432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5433  000D5C  C09A  F090         	movff	efgtoa@g,efgtoa@h
  5434  000D60  C09B  F091         	movff	efgtoa@g+1,efgtoa@h+1
  5435  000D64  C09C  F092         	movff	efgtoa@g+2,efgtoa@h+2
  5436  000D68  C09D  F093         	movff	efgtoa@g+3,efgtoa@h+3
  5437  000D6C                     
  5438                           ; BSR set to: 0
  5439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5440  000D6C  C0A2  F082         	movff	efgtoa@u,efgtoa@ou
  5441  000D70  C0A3  F083         	movff	efgtoa@u+1,efgtoa@ou+1
  5442  000D74  C0A4  F084         	movff	efgtoa@u+2,efgtoa@ou+2
  5443  000D78  C0A5  F085         	movff	efgtoa@u+3,efgtoa@ou+3
  5444                           
  5445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5446  000D7C  EF3B  F007         	goto	l4444
  5447  000D80                     l4436:
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5451  000D80  C090  F02E         	movff	efgtoa@h,___fldiv@b
  5452  000D84  C091  F02F         	movff	efgtoa@h+1,___fldiv@b+1
  5453  000D88  C092  F030         	movff	efgtoa@h+2,___fldiv@b+2
  5454  000D8C  C093  F031         	movff	efgtoa@h+3,___fldiv@b+3
  5455  000D90  C0A2  F032         	movff	efgtoa@u,___fldiv@a
  5456  000D94  C0A3  F033         	movff	efgtoa@u+1,___fldiv@a+1
  5457  000D98  C0A4  F034         	movff	efgtoa@u+2,___fldiv@a+2
  5458  000D9C  C0A5  F035         	movff	efgtoa@u+3,___fldiv@a+3
  5459  000DA0  EC9E  F013         	call	___fldiv	;wreg free
  5460  000DA4  C02E  F047         	movff	?___fldiv,floorf@x
  5461  000DA8  C02F  F048         	movff	?___fldiv+1,floorf@x+1
  5462  000DAC  C030  F049         	movff	?___fldiv+2,floorf@x+2
  5463  000DB0  C031  F04A         	movff	?___fldiv+3,floorf@x+3
  5464  000DB4  EC50  F018         	call	_floorf	;wreg free
  5465  000DB8  C047  F094         	movff	?_floorf,efgtoa@l
  5466  000DBC  C048  F095         	movff	?_floorf+1,efgtoa@l+1
  5467  000DC0  C049  F096         	movff	?_floorf+2,efgtoa@l+2
  5468  000DC4  C04A  F097         	movff	?_floorf+3,efgtoa@l+3
  5469                           
  5470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5471  000DC8  C094  F057         	movff	efgtoa@l,___fltol@f1
  5472  000DCC  C095  F058         	movff	efgtoa@l+1,___fltol@f1+1
  5473  000DD0  C096  F059         	movff	efgtoa@l+2,___fltol@f1+2
  5474  000DD4  C097  F05A         	movff	efgtoa@l+3,___fltol@f1+3
  5475  000DD8  ECA7  F01B         	call	___fltol	;wreg free
  5476  000DDC  C057  F086         	movff	?___fltol,efgtoa@d
  5477  000DE0  C058  F087         	movff	?___fltol+1,efgtoa@d+1
  5478  000DE4                     
  5479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5480  000DE4  C090  F057         	movff	efgtoa@h,___flsub@b
  5481  000DE8  C091  F058         	movff	efgtoa@h+1,___flsub@b+1
  5482  000DEC  C092  F059         	movff	efgtoa@h+2,___flsub@b+2
  5483  000DF0  C093  F05A         	movff	efgtoa@h+3,___flsub@b+3
  5484  000DF4  C0A2  F019         	movff	efgtoa@u,___flmul@a
  5485  000DF8  C0A3  F01A         	movff	efgtoa@u+1,___flmul@a+1
  5486  000DFC  C0A4  F01B         	movff	efgtoa@u+2,___flmul@a+2
  5487  000E00  C0A5  F01C         	movff	efgtoa@u+3,___flmul@a+3
  5488  000E04  C094  F015         	movff	efgtoa@l,___flmul@b
  5489  000E08  C095  F016         	movff	efgtoa@l+1,___flmul@b+1
  5490  000E0C  C096  F017         	movff	efgtoa@l+2,___flmul@b+2
  5491  000E10  C097  F018         	movff	efgtoa@l+3,___flmul@b+3
  5492  000E14  ECB8  F00F         	call	___flmul	;wreg free
  5493  000E18  C015  F05B         	movff	?___flmul,___flsub@a
  5494  000E1C  C016  F05C         	movff	?___flmul+1,___flsub@a+1
  5495  000E20  C017  F05D         	movff	?___flmul+2,___flsub@a+2
  5496  000E24  C018  F05E         	movff	?___flmul+3,___flsub@a+3
  5497  000E28  ECAB  F022         	call	___flsub	;wreg free
  5498  000E2C  C057  F090         	movff	?___flsub,efgtoa@h
  5499  000E30  C058  F091         	movff	?___flsub+1,efgtoa@h+1
  5500  000E34  C059  F092         	movff	?___flsub+2,efgtoa@h+2
  5501  000E38  C05A  F093         	movff	?___flsub+3,efgtoa@h+3
  5502  000E3C                     
  5503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5504  000E3C  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  5505  000E40  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  5506  000E44  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  5507  000E48  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  5508  000E4C  0E00               	movlw	0
  5509  000E4E  6E32               	movwf	___fldiv@a^0,c
  5510  000E50  0E00               	movlw	0
  5511  000E52  6E33               	movwf	(___fldiv@a+1)^0,c
  5512  000E54  0E20               	movlw	32
  5513  000E56  6E34               	movwf	(___fldiv@a+2)^0,c
  5514  000E58  0E41               	movlw	65
  5515  000E5A  6E35               	movwf	(___fldiv@a+3)^0,c
  5516  000E5C  EC9E  F013         	call	___fldiv	;wreg free
  5517  000E60  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  5518  000E64  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  5519  000E68  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  5520  000E6C  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  5521  000E70                     
  5522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5523  000E70  0100               	movlb	0	; () banked
  5524  000E72  4B98               	infsnz	efgtoa@i& (0+255),f,b
  5525  000E74  2B99               	incf	(efgtoa@i+1)& (0+255),f,b
  5526  000E76                     l4444:
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5530  000E76  5180               	movf	efgtoa@m& (0+255),w,b
  5531  000E78  5D98               	subwf	efgtoa@i& (0+255),w,b
  5532  000E7A  5199               	movf	(efgtoa@i+1)& (0+255),w,b
  5533  000E7C  0A80               	xorlw	128
  5534  000E7E  6F69               	movwf	??_efgtoa& (0+255),b
  5535  000E80  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  5536  000E82  0A80               	xorlw	128
  5537  000E84  5969               	subwfb	??_efgtoa& (0+255),w,b
  5538  000E86  A0D8               	btfss	status,0,c
  5539  000E88  EF48  F007         	goto	u4931
  5540  000E8C  EF4A  F007         	goto	u4930
  5541  000E90                     u4931:
  5542  000E90  EFC0  F006         	goto	l4436
  5543  000E94                     u4930:
  5544  000E94                     
  5545                           ; BSR set to: 0
  5546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5547  000E94  C0A2  F015         	movff	efgtoa@u,___flmul@b
  5548  000E98  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  5549  000E9C  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  5550  000EA0  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  5551  000EA4  0E00               	movlw	0
  5552  000EA6  6E19               	movwf	___flmul@a^0,c
  5553  000EA8  0E00               	movlw	0
  5554  000EAA  6E1A               	movwf	(___flmul@a+1)^0,c
  5555  000EAC  0EA0               	movlw	160
  5556  000EAE  6E1B               	movwf	(___flmul@a+2)^0,c
  5557  000EB0  0E40               	movlw	64
  5558  000EB2  6E1C               	movwf	(___flmul@a+3)^0,c
  5559  000EB4  ECB8  F00F         	call	___flmul	;wreg free
  5560  000EB8  C015  F094         	movff	?___flmul,efgtoa@l
  5561  000EBC  C016  F095         	movff	?___flmul+1,efgtoa@l+1
  5562  000EC0  C017  F096         	movff	?___flmul+2,efgtoa@l+2
  5563  000EC4  C018  F097         	movff	?___flmul+3,efgtoa@l+3
  5564  000EC8                     
  5565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5566  000EC8  C090  F02E         	movff	efgtoa@h,___flge@ff1
  5567  000ECC  C091  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  5568  000ED0  C092  F030         	movff	efgtoa@h+2,___flge@ff1+2
  5569  000ED4  C093  F031         	movff	efgtoa@h+3,___flge@ff1+3
  5570  000ED8  C094  F032         	movff	efgtoa@l,___flge@ff2
  5571  000EDC  C095  F033         	movff	efgtoa@l+1,___flge@ff2+1
  5572  000EE0  C096  F034         	movff	efgtoa@l+2,___flge@ff2+2
  5573  000EE4  C097  F035         	movff	efgtoa@l+3,___flge@ff2+3
  5574  000EE8  EC2B  F01C         	call	___flge	;wreg free
  5575  000EEC  B0D8               	btfsc	status,0,c
  5576  000EEE  EF7B  F007         	goto	u4941
  5577  000EF2  EF7D  F007         	goto	u4940
  5578  000EF6                     u4941:
  5579  000EF6  EF88  F007         	goto	l4452
  5580  000EFA                     u4940:
  5581  000EFA                     
  5582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5583  000EFA  0E00               	movlw	0
  5584  000EFC  0100               	movlb	0	; () banked
  5585  000EFE  6F94               	movwf	efgtoa@l& (0+255),b
  5586  000F00  0E00               	movlw	0
  5587  000F02  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  5588  000F04  0E00               	movlw	0
  5589  000F06  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  5590  000F08  0E00               	movlw	0
  5591  000F0A  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  5592                           
  5593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5594  000F0C  EFB1  F007         	goto	l4458
  5595  000F10                     l4452:
  5596                           
  5597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5598  000F10  C090  F001         	movff	efgtoa@h,___fleq@ff1
  5599  000F14  C091  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5600  000F18  C092  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5601  000F1C  C093  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5602  000F20  C094  F005         	movff	efgtoa@l,___fleq@ff2
  5603  000F24  C095  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5604  000F28  C096  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5605  000F2C  C097  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5606  000F30  ECFA  F01F         	call	___fleq	;wreg free
  5607  000F34  A0D8               	btfss	status,0,c
  5608  000F36  EF9F  F007         	goto	u4951
  5609  000F3A  EFA1  F007         	goto	u4950
  5610  000F3E                     u4951:
  5611  000F3E  EFB1  F007         	goto	l4458
  5612  000F42                     u4950:
  5613  000F42  0100               	movlb	0	; () banked
  5614  000F44  B186               	btfsc	efgtoa@d& (0+255),0,b
  5615  000F46  EFA7  F007         	goto	u4961
  5616  000F4A  EFA9  F007         	goto	u4960
  5617  000F4E                     u4961:
  5618  000F4E  EFB1  F007         	goto	l4458
  5619  000F52                     u4960:
  5620  000F52                     
  5621                           ; BSR set to: 0
  5622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5623  000F52  0E00               	movlw	0
  5624  000F54  6F94               	movwf	efgtoa@l& (0+255),b
  5625  000F56  0E00               	movlw	0
  5626  000F58  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  5627  000F5A  0E00               	movlw	0
  5628  000F5C  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  5629  000F5E  0E00               	movlw	0
  5630  000F60  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  5631  000F62                     l4458:
  5632                           
  5633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5634  000F62  C09A  F047         	movff	efgtoa@g,___fladd@b
  5635  000F66  C09B  F048         	movff	efgtoa@g+1,___fladd@b+1
  5636  000F6A  C09C  F049         	movff	efgtoa@g+2,___fladd@b+2
  5637  000F6E  C09D  F04A         	movff	efgtoa@g+3,___fladd@b+3
  5638  000F72  C094  F04B         	movff	efgtoa@l,___fladd@a
  5639  000F76  C095  F04C         	movff	efgtoa@l+1,___fladd@a+1
  5640  000F7A  C096  F04D         	movff	efgtoa@l+2,___fladd@a+2
  5641  000F7E  C097  F04E         	movff	efgtoa@l+3,___fladd@a+3
  5642  000F82  EC58  F00D         	call	___fladd	;wreg free
  5643  000F86  C047  F090         	movff	?___fladd,efgtoa@h
  5644  000F8A  C048  F091         	movff	?___fladd+1,efgtoa@h+1
  5645  000F8E  C049  F092         	movff	?___fladd+2,efgtoa@h+2
  5646  000F92  C04A  F093         	movff	?___fladd+3,efgtoa@h+3
  5647  000F96                     
  5648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5649  000F96  C090  F02E         	movff	efgtoa@h,___flge@ff1
  5650  000F9A  C091  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  5651  000F9E  C092  F030         	movff	efgtoa@h+2,___flge@ff1+2
  5652  000FA2  C093  F031         	movff	efgtoa@h+3,___flge@ff1+3
  5653  000FA6  0E00               	movlw	0
  5654  000FA8  6E19               	movwf	___flmul@a^0,c
  5655  000FAA  0E00               	movlw	0
  5656  000FAC  6E1A               	movwf	(___flmul@a+1)^0,c
  5657  000FAE  0E20               	movlw	32
  5658  000FB0  6E1B               	movwf	(___flmul@a+2)^0,c
  5659  000FB2  0E41               	movlw	65
  5660  000FB4  6E1C               	movwf	(___flmul@a+3)^0,c
  5661  000FB6  C082  F015         	movff	efgtoa@ou,___flmul@b
  5662  000FBA  C083  F016         	movff	efgtoa@ou+1,___flmul@b+1
  5663  000FBE  C084  F017         	movff	efgtoa@ou+2,___flmul@b+2
  5664  000FC2  C085  F018         	movff	efgtoa@ou+3,___flmul@b+3
  5665  000FC6  ECB8  F00F         	call	___flmul	;wreg free
  5666  000FCA  C015  F032         	movff	?___flmul,___flge@ff2
  5667  000FCE  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  5668  000FD2  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  5669  000FD6  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  5670  000FDA  EC2B  F01C         	call	___flge	;wreg free
  5671  000FDE  A0D8               	btfss	status,0,c
  5672  000FE0  EFF4  F007         	goto	u4971
  5673  000FE4  EFF6  F007         	goto	u4970
  5674  000FE8                     u4971:
  5675  000FE8  EF1F  F008         	goto	l4470
  5676  000FEC                     u4970:
  5677  000FEC                     
  5678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5679  000FEC  0100               	movlb	0	; () banked
  5680  000FEE  4B9E               	infsnz	efgtoa@e& (0+255),f,b
  5681  000FF0  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  5682  000FF2                     
  5683                           ; BSR set to: 0
  5684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5685  000FF2  C082  F015         	movff	efgtoa@ou,___flmul@b
  5686  000FF6  C083  F016         	movff	efgtoa@ou+1,___flmul@b+1
  5687  000FFA  C084  F017         	movff	efgtoa@ou+2,___flmul@b+2
  5688  000FFE  C085  F018         	movff	efgtoa@ou+3,___flmul@b+3
  5689  001002  0E00               	movlw	0
  5690  001004  6E19               	movwf	___flmul@a^0,c
  5691  001006  0E00               	movlw	0
  5692  001008  6E1A               	movwf	(___flmul@a+1)^0,c
  5693  00100A  0E20               	movlw	32
  5694  00100C  6E1B               	movwf	(___flmul@a+2)^0,c
  5695  00100E  0E41               	movlw	65
  5696  001010  6E1C               	movwf	(___flmul@a+3)^0,c
  5697  001012  ECB8  F00F         	call	___flmul	;wreg free
  5698  001016  C015  F082         	movff	?___flmul,efgtoa@ou
  5699  00101A  C016  F083         	movff	?___flmul+1,efgtoa@ou+1
  5700  00101E  C017  F084         	movff	?___flmul+2,efgtoa@ou+2
  5701  001022  C018  F085         	movff	?___flmul+3,efgtoa@ou+3
  5702  001026                     
  5703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5704  001026  0E66               	movlw	102
  5705  001028  0100               	movlb	0	; () banked
  5706  00102A  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5707  00102C  A4D8               	btfss	status,2,c
  5708  00102E  EF1B  F008         	goto	u4981
  5709  001032  EF1D  F008         	goto	u4980
  5710  001036                     u4981:
  5711  001036  EF1F  F008         	goto	l4470
  5712  00103A                     u4980:
  5713  00103A                     
  5714                           ; BSR set to: 0
  5715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5716  00103A  4B80               	infsnz	efgtoa@m& (0+255),f,b
  5717  00103C  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  5718  00103E                     l4470:
  5719                           
  5720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5721  00103E  C082  F0A2         	movff	efgtoa@ou,efgtoa@u
  5722  001042  C083  F0A3         	movff	efgtoa@ou+1,efgtoa@u+1
  5723  001046  C084  F0A4         	movff	efgtoa@ou+2,efgtoa@u+2
  5724  00104A  C085  F0A5         	movff	efgtoa@ou+3,efgtoa@u+3
  5725  00104E                     
  5726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5727  00104E  0E65               	movlw	101
  5728  001050  0100               	movlb	0	; () banked
  5729  001052  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5730  001054  B4D8               	btfsc	status,2,c
  5731  001056  EF2F  F008         	goto	u4991
  5732  00105A  EF31  F008         	goto	u4990
  5733  00105E                     u4991:
  5734  00105E  EF37  F008         	goto	l4476
  5735  001062                     u4990:
  5736  001062                     
  5737                           ; BSR set to: 0
  5738  001062  C09E  F07E         	movff	efgtoa@e,efgtoa@ne
  5739  001066  C09F  F07F         	movff	efgtoa@e+1,efgtoa@ne+1
  5740  00106A  EF3B  F008         	goto	l1170
  5741  00106E                     l4476:
  5742                           
  5743                           ; BSR set to: 0
  5744  00106E  0E00               	movlw	0
  5745  001070  6F7F               	movwf	(efgtoa@ne+1)& (0+255),b
  5746  001072  0E00               	movlw	0
  5747  001074  6F7E               	movwf	efgtoa@ne& (0+255),b
  5748  001076                     l1170:
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5752  001076  0E00               	movlw	0
  5753  001078  6F7D               	movwf	(efgtoa@pp+1)& (0+255),b
  5754  00107A  0E00               	movlw	0
  5755  00107C  6F7C               	movwf	efgtoa@pp& (0+255),b
  5756                           
  5757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5758  00107E  0E00               	movlw	0
  5759  001080  6F7B               	movwf	(efgtoa@t+1)& (0+255),b
  5760  001082  0E00               	movlw	0
  5761  001084  6F7A               	movwf	efgtoa@t& (0+255),b
  5762                           
  5763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5764  001086  0E00               	movlw	0
  5765  001088  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  5766  00108A  0E00               	movlw	0
  5767  00108C  6F98               	movwf	efgtoa@i& (0+255),b
  5768                           
  5769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5770  00108E  EF36  F009         	goto	l4526
  5771  001092                     l4478:
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5775  001092  C090  F02E         	movff	efgtoa@h,___fldiv@b
  5776  001096  C091  F02F         	movff	efgtoa@h+1,___fldiv@b+1
  5777  00109A  C092  F030         	movff	efgtoa@h+2,___fldiv@b+2
  5778  00109E  C093  F031         	movff	efgtoa@h+3,___fldiv@b+3
  5779  0010A2  C0A2  F032         	movff	efgtoa@u,___fldiv@a
  5780  0010A6  C0A3  F033         	movff	efgtoa@u+1,___fldiv@a+1
  5781  0010AA  C0A4  F034         	movff	efgtoa@u+2,___fldiv@a+2
  5782  0010AE  C0A5  F035         	movff	efgtoa@u+3,___fldiv@a+3
  5783  0010B2  EC9E  F013         	call	___fldiv	;wreg free
  5784  0010B6  C02E  F047         	movff	?___fldiv,floorf@x
  5785  0010BA  C02F  F048         	movff	?___fldiv+1,floorf@x+1
  5786  0010BE  C030  F049         	movff	?___fldiv+2,floorf@x+2
  5787  0010C2  C031  F04A         	movff	?___fldiv+3,floorf@x+3
  5788  0010C6  EC50  F018         	call	_floorf	;wreg free
  5789  0010CA  C047  F094         	movff	?_floorf,efgtoa@l
  5790  0010CE  C048  F095         	movff	?_floorf+1,efgtoa@l+1
  5791  0010D2  C049  F096         	movff	?_floorf+2,efgtoa@l+2
  5792  0010D6  C04A  F097         	movff	?_floorf+3,efgtoa@l+3
  5793                           
  5794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5795  0010DA  C094  F057         	movff	efgtoa@l,___fltol@f1
  5796  0010DE  C095  F058         	movff	efgtoa@l+1,___fltol@f1+1
  5797  0010E2  C096  F059         	movff	efgtoa@l+2,___fltol@f1+2
  5798  0010E6  C097  F05A         	movff	efgtoa@l+3,___fltol@f1+3
  5799  0010EA  ECA7  F01B         	call	___fltol	;wreg free
  5800  0010EE  C057  F086         	movff	?___fltol,efgtoa@d
  5801  0010F2  C058  F087         	movff	?___fltol+1,efgtoa@d+1
  5802  0010F6                     
  5803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5804  0010F6  0100               	movlb	0	; () banked
  5805  0010F8  B9FE               	btfsc	_flags& (0+255),4,b
  5806  0010FA  EF81  F008         	goto	u5001
  5807  0010FE  EF83  F008         	goto	u5000
  5808  001102                     u5001:
  5809  001102  EFA0  F008         	goto	l4490
  5810  001106                     u5000:
  5811  001106                     
  5812                           ; BSR set to: 0
  5813  001106  5186               	movf	efgtoa@d& (0+255),w,b
  5814  001108  1187               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5815  00110A  A4D8               	btfss	status,2,c
  5816  00110C  EF8A  F008         	goto	u5011
  5817  001110  EF8C  F008         	goto	u5010
  5818  001114                     u5011:
  5819  001114  EFA0  F008         	goto	l4490
  5820  001118                     u5010:
  5821  001118                     
  5822                           ; BSR set to: 0
  5823  001118  0E67               	movlw	103
  5824  00111A  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5825  00111C  A4D8               	btfss	status,2,c
  5826  00111E  EF93  F008         	goto	u5021
  5827  001122  EF95  F008         	goto	u5020
  5828  001126                     u5021:
  5829  001126  EFA0  F008         	goto	l4490
  5830  00112A                     u5020:
  5831  00112A                     
  5832                           ; BSR set to: 0
  5833  00112A  BF7F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5834  00112C  EF9C  F008         	goto	u5030
  5835  001130  EF9A  F008         	goto	u5031
  5836  001134                     u5031:
  5837  001134  EFA0  F008         	goto	l4490
  5838  001138                     u5030:
  5839  001138                     
  5840                           ; BSR set to: 0
  5841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5842  001138  4B7A               	infsnz	efgtoa@t& (0+255),f,b
  5843  00113A  2B7B               	incf	(efgtoa@t+1)& (0+255),f,b
  5844                           
  5845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5846  00113C  EFEA  F008         	goto	l4518
  5847  001140                     l4490:
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5851  001140  517C               	movf	efgtoa@pp& (0+255),w,b
  5852  001142  117D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5853  001144  A4D8               	btfss	status,2,c
  5854  001146  EFA7  F008         	goto	u5041
  5855  00114A  EFA9  F008         	goto	u5040
  5856  00114E                     u5041:
  5857  00114E  EFD3  F008         	goto	l4510
  5858  001152                     u5040:
  5859  001152                     
  5860                           ; BSR set to: 0
  5861  001152  BF7F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5862  001154  EFB0  F008         	goto	u5050
  5863  001158  EFAE  F008         	goto	u5051
  5864  00115C                     u5051:
  5865  00115C  EFD3  F008         	goto	l4510
  5866  001160                     u5050:
  5867  001160                     
  5868                           ; BSR set to: 0
  5869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5870  001160  0E12               	movlw	low _dbuf
  5871  001162  25A0               	addwf	efgtoa@n& (0+255),w,b
  5872  001164  6ED9               	movwf	fsr2l,c
  5873  001166  0E01               	movlw	high _dbuf
  5874  001168  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5875  00116A  6EDA               	movwf	fsr2h,c
  5876  00116C  0E2E               	movlw	46
  5877  00116E  6EDF               	movwf	indf2,c
  5878  001170                     
  5879                           ; BSR set to: 0
  5880  001170  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  5881  001172  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  5882  001174                     
  5883                           ; BSR set to: 0
  5884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5885  001174  078C               	decf	efgtoa@w& (0+255),f,b
  5886  001176  A0D8               	btfss	status,0,c
  5887  001178  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  5888  00117A                     
  5889                           ; BSR set to: 0
  5890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5891  00117A  0E00               	movlw	0
  5892  00117C  6F7D               	movwf	(efgtoa@pp+1)& (0+255),b
  5893  00117E  0E01               	movlw	1
  5894  001180  6F7C               	movwf	efgtoa@pp& (0+255),b
  5895  001182  EFD3  F008         	goto	l4510
  5896  001186                     l4502:
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5900  001186  0E12               	movlw	low _dbuf
  5901  001188  25A0               	addwf	efgtoa@n& (0+255),w,b
  5902  00118A  6ED9               	movwf	fsr2l,c
  5903  00118C  0E01               	movlw	high _dbuf
  5904  00118E  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5905  001190  6EDA               	movwf	fsr2h,c
  5906  001192  0E30               	movlw	48
  5907  001194  6EDF               	movwf	indf2,c
  5908  001196                     
  5909                           ; BSR set to: 0
  5910  001196  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  5911  001198  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  5912  00119A                     
  5913                           ; BSR set to: 0
  5914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5915  00119A  078C               	decf	efgtoa@w& (0+255),f,b
  5916  00119C  A0D8               	btfss	status,0,c
  5917  00119E  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  5918  0011A0                     
  5919                           ; BSR set to: 0
  5920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5921  0011A0  077A               	decf	efgtoa@t& (0+255),f,b
  5922  0011A2  A0D8               	btfss	status,0,c
  5923  0011A4  077B               	decf	(efgtoa@t+1)& (0+255),f,b
  5924  0011A6                     l4510:
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5928  0011A6  517A               	movf	efgtoa@t& (0+255),w,b
  5929  0011A8  117B               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5930  0011AA  A4D8               	btfss	status,2,c
  5931  0011AC  EFDA  F008         	goto	u5061
  5932  0011B0  EFDC  F008         	goto	u5060
  5933  0011B4                     u5061:
  5934  0011B4  EFC3  F008         	goto	l4502
  5935  0011B8                     u5060:
  5936  0011B8                     
  5937                           ; BSR set to: 0
  5938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5939  0011B8  0E12               	movlw	low _dbuf
  5940  0011BA  25A0               	addwf	efgtoa@n& (0+255),w,b
  5941  0011BC  6ED9               	movwf	fsr2l,c
  5942  0011BE  0E01               	movlw	high _dbuf
  5943  0011C0  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5944  0011C2  6EDA               	movwf	fsr2h,c
  5945  0011C4  5186               	movf	efgtoa@d& (0+255),w,b
  5946  0011C6  0F30               	addlw	48
  5947  0011C8  6EDF               	movwf	indf2,c
  5948  0011CA                     
  5949                           ; BSR set to: 0
  5950  0011CA  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  5951  0011CC  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  5952  0011CE                     
  5953                           ; BSR set to: 0
  5954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5955  0011CE  078C               	decf	efgtoa@w& (0+255),f,b
  5956  0011D0  A0D8               	btfss	status,0,c
  5957  0011D2  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  5958  0011D4                     l4518:
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5962  0011D4  C090  F057         	movff	efgtoa@h,___flsub@b
  5963  0011D8  C091  F058         	movff	efgtoa@h+1,___flsub@b+1
  5964  0011DC  C092  F059         	movff	efgtoa@h+2,___flsub@b+2
  5965  0011E0  C093  F05A         	movff	efgtoa@h+3,___flsub@b+3
  5966  0011E4  C0A2  F019         	movff	efgtoa@u,___flmul@a
  5967  0011E8  C0A3  F01A         	movff	efgtoa@u+1,___flmul@a+1
  5968  0011EC  C0A4  F01B         	movff	efgtoa@u+2,___flmul@a+2
  5969  0011F0  C0A5  F01C         	movff	efgtoa@u+3,___flmul@a+3
  5970  0011F4  C094  F015         	movff	efgtoa@l,___flmul@b
  5971  0011F8  C095  F016         	movff	efgtoa@l+1,___flmul@b+1
  5972  0011FC  C096  F017         	movff	efgtoa@l+2,___flmul@b+2
  5973  001200  C097  F018         	movff	efgtoa@l+3,___flmul@b+3
  5974  001204  ECB8  F00F         	call	___flmul	;wreg free
  5975  001208  C015  F05B         	movff	?___flmul,___flsub@a
  5976  00120C  C016  F05C         	movff	?___flmul+1,___flsub@a+1
  5977  001210  C017  F05D         	movff	?___flmul+2,___flsub@a+2
  5978  001214  C018  F05E         	movff	?___flmul+3,___flsub@a+3
  5979  001218  ECAB  F022         	call	___flsub	;wreg free
  5980  00121C  C057  F090         	movff	?___flsub,efgtoa@h
  5981  001220  C058  F091         	movff	?___flsub+1,efgtoa@h+1
  5982  001224  C059  F092         	movff	?___flsub+2,efgtoa@h+2
  5983  001228  C05A  F093         	movff	?___flsub+3,efgtoa@h+3
  5984  00122C                     
  5985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5986  00122C  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  5987  001230  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  5988  001234  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  5989  001238  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  5990  00123C  0E00               	movlw	0
  5991  00123E  6E32               	movwf	___fldiv@a^0,c
  5992  001240  0E00               	movlw	0
  5993  001242  6E33               	movwf	(___fldiv@a+1)^0,c
  5994  001244  0E20               	movlw	32
  5995  001246  6E34               	movwf	(___fldiv@a+2)^0,c
  5996  001248  0E41               	movlw	65
  5997  00124A  6E35               	movwf	(___fldiv@a+3)^0,c
  5998  00124C  EC9E  F013         	call	___fldiv	;wreg free
  5999  001250  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  6000  001254  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  6001  001258  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  6002  00125C  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  6003  001260                     
  6004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  6005  001260  0100               	movlb	0	; () banked
  6006  001262  077E               	decf	efgtoa@ne& (0+255),f,b
  6007  001264  A0D8               	btfss	status,0,c
  6008  001266  077F               	decf	(efgtoa@ne+1)& (0+255),f,b
  6009  001268                     
  6010                           ; BSR set to: 0
  6011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  6012  001268  4B98               	infsnz	efgtoa@i& (0+255),f,b
  6013  00126A  2B99               	incf	(efgtoa@i+1)& (0+255),f,b
  6014  00126C                     l4526:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6018  00126C  5180               	movf	efgtoa@m& (0+255),w,b
  6019  00126E  5D98               	subwf	efgtoa@i& (0+255),w,b
  6020  001270  5199               	movf	(efgtoa@i+1)& (0+255),w,b
  6021  001272  0A80               	xorlw	128
  6022  001274  6F69               	movwf	??_efgtoa& (0+255),b
  6023  001276  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  6024  001278  0A80               	xorlw	128
  6025  00127A  5969               	subwfb	??_efgtoa& (0+255),w,b
  6026  00127C  B0D8               	btfsc	status,0,c
  6027  00127E  EF43  F009         	goto	u5071
  6028  001282  EF45  F009         	goto	u5070
  6029  001286                     u5071:
  6030  001286  EF53  F009         	goto	l4530
  6031  00128A                     u5070:
  6032  00128A                     
  6033                           ; BSR set to: 0
  6034  00128A  BFA1               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6035  00128C  EF51  F009         	goto	u5081
  6036  001290  51A1               	movf	(efgtoa@n+1)& (0+255),w,b
  6037  001292  E109               	bnz	u5080
  6038  001294  0E4B               	movlw	75
  6039  001296  5DA0               	subwf	efgtoa@n& (0+255),w,b
  6040  001298  A0D8               	btfss	status,0,c
  6041  00129A  EF51  F009         	goto	u5081
  6042  00129E  EF53  F009         	goto	u5080
  6043  0012A2                     u5081:
  6044  0012A2  EF49  F008         	goto	l4478
  6045  0012A6                     u5080:
  6046  0012A6                     l4530:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6050  0012A6  517C               	movf	efgtoa@pp& (0+255),w,b
  6051  0012A8  117D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6052  0012AA  A4D8               	btfss	status,2,c
  6053  0012AC  EF5A  F009         	goto	u5091
  6054  0012B0  EF5C  F009         	goto	u5090
  6055  0012B4                     u5091:
  6056  0012B4  EF6D  F009         	goto	l4538
  6057  0012B8                     u5090:
  6058  0012B8                     
  6059                           ; BSR set to: 0
  6060  0012B8  A9FE               	btfss	_flags& (0+255),4,b
  6061  0012BA  EF61  F009         	goto	u5101
  6062  0012BE  EF63  F009         	goto	u5100
  6063  0012C2                     u5101:
  6064  0012C2  EF6D  F009         	goto	l4538
  6065  0012C6                     u5100:
  6066  0012C6                     
  6067                           ; BSR set to: 0
  6068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6069  0012C6  0E12               	movlw	low _dbuf
  6070  0012C8  25A0               	addwf	efgtoa@n& (0+255),w,b
  6071  0012CA  6ED9               	movwf	fsr2l,c
  6072  0012CC  0E01               	movlw	high _dbuf
  6073  0012CE  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6074  0012D0  6EDA               	movwf	fsr2h,c
  6075  0012D2  0E2E               	movlw	46
  6076  0012D4  6EDF               	movwf	indf2,c
  6077  0012D6                     
  6078                           ; BSR set to: 0
  6079  0012D6  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  6080  0012D8  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  6081  0012DA                     l4538:
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6085  0012DA  0E12               	movlw	low _dbuf
  6086  0012DC  25A0               	addwf	efgtoa@n& (0+255),w,b
  6087  0012DE  6ED9               	movwf	fsr2l,c
  6088  0012E0  0E01               	movlw	high _dbuf
  6089  0012E2  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6090  0012E4  6EDA               	movwf	fsr2h,c
  6091  0012E6  0E00               	movlw	0
  6092  0012E8  6EDF               	movwf	indf2,c
  6093  0012EA                     
  6094                           ; BSR set to: 0
  6095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6096  0012EA  0E65               	movlw	101
  6097  0012EC  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  6098  0012EE  A4D8               	btfss	status,2,c
  6099  0012F0  EF7C  F009         	goto	u5111
  6100  0012F4  EF7E  F009         	goto	u5110
  6101  0012F8                     u5111:
  6102  0012F8  EFD8  F004         	goto	l4340
  6103  0012FC                     u5110:
  6104  0012FC                     
  6105                           ; BSR set to: 0
  6106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6107  0012FC  0E00               	movlw	0
  6108  0012FE  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  6109  001300  0E4F               	movlw	79
  6110  001302  6F98               	movwf	efgtoa@i& (0+255),b
  6111  001304                     
  6112                           ; BSR set to: 0
  6113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6114  001304  0E12               	movlw	low _dbuf
  6115  001306  2598               	addwf	efgtoa@i& (0+255),w,b
  6116  001308  6ED9               	movwf	fsr2l,c
  6117  00130A  0E01               	movlw	high _dbuf
  6118  00130C  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6119  00130E  6EDA               	movwf	fsr2h,c
  6120  001310  0E00               	movlw	0
  6121  001312  6EDF               	movwf	indf2,c
  6122  001314                     
  6123                           ; BSR set to: 0
  6124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6125  001314  0E00               	movlw	0
  6126  001316  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  6127  001318  0E00               	movlw	0
  6128  00131A  6F88               	movwf	efgtoa@sign& (0+255),b
  6129  00131C                     
  6130                           ; BSR set to: 0
  6131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6132  00131C  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6133  00131E  EF95  F009         	goto	u5120
  6134  001322  EF93  F009         	goto	u5121
  6135  001326                     u5121:
  6136  001326  EF9D  F009         	goto	l4554
  6137  00132A                     u5120:
  6138  00132A                     
  6139                           ; BSR set to: 0
  6140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6141  00132A  0E00               	movlw	0
  6142  00132C  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  6143  00132E  0E01               	movlw	1
  6144  001330  6F88               	movwf	efgtoa@sign& (0+255),b
  6145  001332                     
  6146                           ; BSR set to: 0
  6147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6148  001332  6D9E               	negf	efgtoa@e& (0+255),b
  6149  001334  1F9F               	comf	(efgtoa@e+1)& (0+255),f,b
  6150  001336  B0D8               	btfsc	status,0,c
  6151  001338  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  6152  00133A                     l4554:
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6156  00133A  0E00               	movlw	0
  6157  00133C  6F8B               	movwf	(efgtoa@p+1)& (0+255),b
  6158  00133E  0E02               	movlw	2
  6159  001340  6F8A               	movwf	efgtoa@p& (0+255),b
  6160                           
  6161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6162  001342  EFCE  F009         	goto	l4566
  6163  001346                     l4556:
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6167  001346  0798               	decf	efgtoa@i& (0+255),f,b
  6168  001348  A0D8               	btfss	status,0,c
  6169  00134A  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  6170  00134C                     
  6171                           ; BSR set to: 0
  6172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6173  00134C  0E12               	movlw	low _dbuf
  6174  00134E  2598               	addwf	efgtoa@i& (0+255),w,b
  6175  001350  6ED9               	movwf	fsr2l,c
  6176  001352  0E01               	movlw	high _dbuf
  6177  001354  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6178  001356  6EDA               	movwf	fsr2h,c
  6179  001358  C09E  F001         	movff	efgtoa@e,___awmod@dividend
  6180  00135C  C09F  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6181  001360  0E00               	movlw	0
  6182  001362  6E04               	movwf	(___awmod@divisor+1)^0,c
  6183  001364  0E0A               	movlw	10
  6184  001366  6E03               	movwf	___awmod@divisor^0,c
  6185  001368  ECA2  F01F         	call	___awmod	;wreg free
  6186  00136C  5001               	movf	?___awmod^0,w,c
  6187  00136E  0F30               	addlw	48
  6188  001370  6EDF               	movwf	indf2,c
  6189  001372                     
  6190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6191  001372  C09E  F001         	movff	efgtoa@e,___awdiv@dividend
  6192  001376  C09F  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  6193  00137A  0E00               	movlw	0
  6194  00137C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6195  00137E  0E0A               	movlw	10
  6196  001380  6E03               	movwf	___awdiv@divisor^0,c
  6197  001382  ECDE  F01E         	call	___awdiv	;wreg free
  6198  001386  C001  F09E         	movff	?___awdiv,efgtoa@e
  6199  00138A  C002  F09F         	movff	?___awdiv+1,efgtoa@e+1
  6200  00138E                     
  6201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6202  00138E  0100               	movlb	0	; () banked
  6203  001390  078A               	decf	efgtoa@p& (0+255),f,b
  6204  001392  A0D8               	btfss	status,0,c
  6205  001394  078B               	decf	(efgtoa@p+1)& (0+255),f,b
  6206  001396                     
  6207                           ; BSR set to: 0
  6208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6209  001396  078C               	decf	efgtoa@w& (0+255),f,b
  6210  001398  A0D8               	btfss	status,0,c
  6211  00139A  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6212  00139C                     l4566:
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6216  00139C  519E               	movf	efgtoa@e& (0+255),w,b
  6217  00139E  119F               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6218  0013A0  A4D8               	btfss	status,2,c
  6219  0013A2  EFD5  F009         	goto	u5131
  6220  0013A6  EFD7  F009         	goto	u5130
  6221  0013AA                     u5131:
  6222  0013AA  EFA3  F009         	goto	l4556
  6223  0013AE                     u5130:
  6224  0013AE                     
  6225                           ; BSR set to: 0
  6226  0013AE  BF8B               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6227  0013B0  EFE4  F009         	goto	u5140
  6228  0013B4  518B               	movf	(efgtoa@p+1)& (0+255),w,b
  6229  0013B6  E106               	bnz	u5141
  6230  0013B8  058A               	decf	efgtoa@p& (0+255),w,b
  6231  0013BA  B0D8               	btfsc	status,0,c
  6232  0013BC  EFE2  F009         	goto	u5141
  6233  0013C0  EFE4  F009         	goto	u5140
  6234  0013C4                     u5141:
  6235  0013C4  EFA3  F009         	goto	l4556
  6236  0013C8                     u5140:
  6237  0013C8                     
  6238                           ; BSR set to: 0
  6239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6240  0013C8  0798               	decf	efgtoa@i& (0+255),f,b
  6241  0013CA  A0D8               	btfss	status,0,c
  6242  0013CC  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  6243  0013CE                     
  6244                           ; BSR set to: 0
  6245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6246  0013CE  5188               	movf	efgtoa@sign& (0+255),w,b
  6247  0013D0  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6248  0013D2  A4D8               	btfss	status,2,c
  6249  0013D4  EFEE  F009         	goto	u5151
  6250  0013D8  EFF0  F009         	goto	u5150
  6251  0013DC                     u5151:
  6252  0013DC  EFF6  F009         	goto	l4576
  6253  0013E0                     u5150:
  6254  0013E0                     
  6255                           ; BSR set to: 0
  6256  0013E0  0E00               	movlw	0
  6257  0013E2  6F75               	movwf	(_efgtoa$1404+1)& (0+255),b
  6258  0013E4  0E2B               	movlw	43
  6259  0013E6  6F74               	movwf	_efgtoa$1404& (0+255),b
  6260  0013E8  EFFA  F009         	goto	l4578
  6261  0013EC                     l4576:
  6262                           
  6263                           ; BSR set to: 0
  6264  0013EC  0E00               	movlw	0
  6265  0013EE  6F75               	movwf	(_efgtoa$1404+1)& (0+255),b
  6266  0013F0  0E2D               	movlw	45
  6267  0013F2  6F74               	movwf	_efgtoa$1404& (0+255),b
  6268  0013F4                     l4578:
  6269                           
  6270                           ; BSR set to: 0
  6271  0013F4  0E12               	movlw	low _dbuf
  6272  0013F6  2598               	addwf	efgtoa@i& (0+255),w,b
  6273  0013F8  6ED9               	movwf	fsr2l,c
  6274  0013FA  0E01               	movlw	high _dbuf
  6275  0013FC  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6276  0013FE  6EDA               	movwf	fsr2h,c
  6277  001400  C074  FFDF         	movff	_efgtoa$1404,indf2
  6278  001404                     
  6279                           ; BSR set to: 0
  6280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6281  001404  078C               	decf	efgtoa@w& (0+255),f,b
  6282  001406  A0D8               	btfss	status,0,c
  6283  001408  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6284  00140A                     
  6285                           ; BSR set to: 0
  6286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6287  00140A  0798               	decf	efgtoa@i& (0+255),f,b
  6288  00140C  A0D8               	btfss	status,0,c
  6289  00140E  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  6290  001410                     
  6291                           ; BSR set to: 0
  6292  001410  0EBF               	movlw	191
  6293  001412  6F69               	movwf	??_efgtoa& (0+255),b
  6294  001414  0EFF               	movlw	255
  6295  001416  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  6296  001418  5168               	movf	efgtoa@c& (0+255),w,b
  6297  00141A  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  6298  00141C  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  6299  00141E  5169               	movf	??_efgtoa& (0+255),w,b
  6300  001420  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  6301  001422  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  6302  001424  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6303  001426  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  6304  001428  E10A               	bnz	u5160
  6305  00142A  0E1A               	movlw	26
  6306  00142C  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  6307  00142E  A0D8               	btfss	status,0,c
  6308  001430  EF1C  F00A         	goto	u5161
  6309  001434  EF1F  F00A         	goto	u5160
  6310  001438                     u5161:
  6311  001438  0E01               	movlw	1
  6312  00143A  EF20  F00A         	goto	u5170
  6313  00143E                     u5160:
  6314  00143E  0E00               	movlw	0
  6315  001440                     u5170:
  6316  001440  6F78               	movwf	_efgtoa$1406& (0+255),b
  6317  001442  6B79               	clrf	(_efgtoa$1406+1)& (0+255),b
  6318  001444                     
  6319                           ; BSR set to: 0
  6320  001444  5178               	movf	_efgtoa$1406& (0+255),w,b
  6321  001446  1179               	iorwf	(_efgtoa$1406+1)& (0+255),w,b
  6322  001448  A4D8               	btfss	status,2,c
  6323  00144A  EF29  F00A         	goto	u5181
  6324  00144E  EF2B  F00A         	goto	u5180
  6325  001452                     u5181:
  6326  001452  EF31  F00A         	goto	l4592
  6327  001456                     u5180:
  6328  001456                     
  6329                           ; BSR set to: 0
  6330  001456  0E00               	movlw	0
  6331  001458  6F77               	movwf	(_efgtoa$1405+1)& (0+255),b
  6332  00145A  0E65               	movlw	101
  6333  00145C  6F76               	movwf	_efgtoa$1405& (0+255),b
  6334  00145E  EF35  F00A         	goto	l4594
  6335  001462                     l4592:
  6336                           
  6337                           ; BSR set to: 0
  6338  001462  0E00               	movlw	0
  6339  001464  6F77               	movwf	(_efgtoa$1405+1)& (0+255),b
  6340  001466  0E45               	movlw	69
  6341  001468  6F76               	movwf	_efgtoa$1405& (0+255),b
  6342  00146A                     l4594:
  6343                           
  6344                           ; BSR set to: 0
  6345  00146A  0E12               	movlw	low _dbuf
  6346  00146C  2598               	addwf	efgtoa@i& (0+255),w,b
  6347  00146E  6ED9               	movwf	fsr2l,c
  6348  001470  0E01               	movlw	high _dbuf
  6349  001472  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6350  001474  6EDA               	movwf	fsr2h,c
  6351  001476  C076  FFDF         	movff	_efgtoa$1405,indf2
  6352  00147A                     
  6353                           ; BSR set to: 0
  6354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6355  00147A  078C               	decf	efgtoa@w& (0+255),f,b
  6356  00147C  A0D8               	btfss	status,0,c
  6357  00147E  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6358  001480                     
  6359                           ; BSR set to: 0
  6360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6361  001480  0E12               	movlw	low _dbuf
  6362  001482  25A0               	addwf	efgtoa@n& (0+255),w,b
  6363  001484  6E01               	movwf	strcpy@dest^0,c
  6364  001486  0E01               	movlw	high _dbuf
  6365  001488  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6366  00148A  6E02               	movwf	(strcpy@dest+1)^0,c
  6367  00148C  0E12               	movlw	low _dbuf
  6368  00148E  2598               	addwf	efgtoa@i& (0+255),w,b
  6369  001490  6E03               	movwf	strcpy@src^0,c
  6370  001492  0E01               	movlw	high _dbuf
  6371  001494  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6372  001496  6E04               	movwf	(strcpy@src+1)^0,c
  6373  001498  EC41  F021         	call	_strcpy	;wreg free
  6374  00149C  EFD8  F004         	goto	l4340
  6375  0014A0                     l1124:
  6376  0014A0  0012               	return		;funcret
  6377  0014A2                     __end_of_efgtoa:
  6378                           	callstack 0
  6379                           
  6380 ;; *************** function _tolower *****************
  6381 ;; Defined at:
  6382 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  c               2    6[COMRAM] int 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;		None
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  2    6[COMRAM] int 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6396 ;;      Params:         2       0       0       0       0       0       0       0       0
  6397 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6398 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6399 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6400 ;;Total ram usage:        8 bytes
  6401 ;; Hardware stack levels used: 1
  6402 ;; Hardware stack levels required when called: 1
  6403 ;; This function calls:
  6404 ;;		_isupper
  6405 ;; This function is called by:
  6406 ;;		_efgtoa
  6407 ;;		_vfpfcnvrt
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text14
  6412  004166                     __ptext14:
  6413                           	callstack 0
  6414  004166                     _tolower:
  6415                           	callstack 26
  6416  004166  0EBF               	movlw	191
  6417  004168  6E09               	movwf	??_tolower^0,c
  6418  00416A  0EFF               	movlw	255
  6419  00416C  6E0A               	movwf	(??_tolower+1)^0,c
  6420  00416E  C007  F00B         	movff	tolower@c,??_tolower+2
  6421  004172  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6422  004176  5009               	movf	??_tolower^0,w,c
  6423  004178  260B               	addwf	(??_tolower+2)^0,f,c
  6424  00417A  500A               	movf	(??_tolower+1)^0,w,c
  6425  00417C  220C               	addwfc	(??_tolower+3)^0,f,c
  6426  00417E  500C               	movf	(??_tolower+3)^0,w,c
  6427  004180  E10A               	bnz	u4400
  6428  004182  0E1A               	movlw	26
  6429  004184  5C0B               	subwf	(??_tolower+2)^0,w,c
  6430  004186  A0D8               	btfss	status,0,c
  6431  004188  EFC8  F020         	goto	u4401
  6432  00418C  EFCB  F020         	goto	u4400
  6433  004190                     u4401:
  6434  004190  0E01               	movlw	1
  6435  004192  EFCC  F020         	goto	u4410
  6436  004196                     u4400:
  6437  004196  0E00               	movlw	0
  6438  004198                     u4410:
  6439  004198  6E0D               	movwf	_tolower$1574^0,c
  6440  00419A  6A0E               	clrf	(_tolower$1574+1)^0,c
  6441  00419C  500D               	movf	_tolower$1574^0,w,c
  6442  00419E  100E               	iorwf	(_tolower$1574+1)^0,w,c
  6443  0041A0  B4D8               	btfsc	status,2,c
  6444  0041A2  EFD5  F020         	goto	u4421
  6445  0041A6  EFD7  F020         	goto	u4420
  6446  0041AA                     u4421:
  6447  0041AA  EFDE  F020         	goto	l1405
  6448  0041AE                     u4420:
  6449  0041AE  0E20               	movlw	32
  6450  0041B0  1007               	iorwf	tolower@c^0,w,c
  6451  0041B2  6E07               	movwf	?_tolower^0,c
  6452  0041B4  5008               	movf	(tolower@c+1)^0,w,c
  6453  0041B6  6E08               	movwf	(?_tolower+1)^0,c
  6454  0041B8  EFE2  F020         	goto	l1410
  6455  0041BC                     l1405:
  6456  0041BC  C007  F007         	movff	tolower@c,?_tolower
  6457  0041C0  C008  F008         	movff	tolower@c+1,?_tolower+1
  6458  0041C4                     l1410:
  6459  0041C4  0012               	return		;funcret
  6460  0041C6                     __end_of_tolower:
  6461                           	callstack 0
  6462                           
  6463 ;; *************** function _isupper *****************
  6464 ;; Defined at:
  6465 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  c               2    0[COMRAM] int 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  2    0[COMRAM] int 
  6472 ;; Registers used:
  6473 ;;		wreg, status,2, status,0
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6479 ;;      Params:         2       0       0       0       0       0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6481 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6482 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6483 ;;Total ram usage:        6 bytes
  6484 ;; Hardware stack levels used: 1
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_efgtoa
  6489 ;;		_xtoa
  6490 ;;		_vfpfcnvrt
  6491 ;;		_tolower
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text15
  6496  004714                     __ptext15:
  6497                           	callstack 0
  6498  004714                     _isupper:
  6499                           	callstack 26
  6500  004714  0EBF               	movlw	191
  6501  004716  6E03               	movwf	??_isupper^0,c
  6502  004718  0EFF               	movlw	255
  6503  00471A  6E04               	movwf	(??_isupper+1)^0,c
  6504  00471C  C001  F005         	movff	isupper@c,??_isupper+2
  6505  004720  C002  F006         	movff	isupper@c+1,??_isupper+3
  6506  004724  5003               	movf	??_isupper^0,w,c
  6507  004726  2605               	addwf	(??_isupper+2)^0,f,c
  6508  004728  5004               	movf	(??_isupper+1)^0,w,c
  6509  00472A  2206               	addwfc	(??_isupper+3)^0,f,c
  6510  00472C  5006               	movf	(??_isupper+3)^0,w,c
  6511  00472E  E10A               	bnz	u3530
  6512  004730  0E1A               	movlw	26
  6513  004732  5C05               	subwf	(??_isupper+2)^0,w,c
  6514  004734  A0D8               	btfss	status,0,c
  6515  004736  EF9F  F023         	goto	u3531
  6516  00473A  EFA2  F023         	goto	u3530
  6517  00473E                     u3531:
  6518  00473E  0E01               	movlw	1
  6519  004740  EFA3  F023         	goto	u3540
  6520  004744                     u3530:
  6521  004744  0E00               	movlw	0
  6522  004746                     u3540:
  6523  004746  6E01               	movwf	?_isupper^0,c
  6524  004748  6A02               	clrf	(?_isupper+1)^0,c
  6525  00474A  0012               	return		;funcret
  6526  00474C                     __end_of_isupper:
  6527                           	callstack 0
  6528                           
  6529 ;; *************** function _strcpy *****************
  6530 ;; Defined at:
  6531 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6534 ;;		 -> dbuf(80), 
  6535 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6536 ;;		 -> STR_27(4), STR_26(4), STR_23(4), STR_22(4), 
  6537 ;;		 -> dbuf(80), 
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  d               2    8[COMRAM] PTR unsigned char 
  6540 ;;		 -> dbuf(80), 
  6541 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6542 ;;		 -> STR_27(4), STR_26(4), STR_23(4), STR_22(4), 
  6543 ;;		 -> dbuf(80), 
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  2    0[COMRAM] PTR unsigned char 
  6546 ;; Registers used:
  6547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6553 ;;      Params:         4       0       0       0       0       0       0       0       0
  6554 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6555 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6556 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6557 ;;Total ram usage:       10 bytes
  6558 ;; Hardware stack levels used: 1
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_efgtoa
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text16
  6567  004282                     __ptext16:
  6568                           	callstack 0
  6569  004282                     _strcpy:
  6570                           	callstack 26
  6571  004282  C003  F007         	movff	strcpy@src,strcpy@s
  6572  004286  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6573  00428A  C001  F009         	movff	strcpy@dest,strcpy@d
  6574  00428E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6575  004292                     l4208:
  6576  004292  5007               	movf	strcpy@s^0,w,c
  6577  004294  6E05               	movwf	??_strcpy^0,c
  6578  004296  5008               	movf	(strcpy@s+1)^0,w,c
  6579  004298  6E06               	movwf	(??_strcpy+1)^0,c
  6580  00429A  4A07               	infsnz	strcpy@s^0,f,c
  6581  00429C  2A08               	incf	(strcpy@s+1)^0,f,c
  6582  00429E  C005  FFF6         	movff	??_strcpy,tblptrl
  6583  0042A2  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6584  0042A6  6AF8               	clrf	tblptru,c
  6585  0042A8  C009  FFD9         	movff	strcpy@d,fsr2l
  6586  0042AC  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6587  0042B0  4A09               	infsnz	strcpy@d^0,f,c
  6588  0042B2  2A0A               	incf	(strcpy@d+1)^0,f,c
  6589  0042B4  0E07               	movlw	(high __ramtop+-1)
  6590  0042B6  64F7               	cpfsgt	tblptrh,c
  6591  0042B8  D003               	bra	u4387
  6592  0042BA  0008               	tblrd		*
  6593  0042BC  50F5               	movf	tablat,w,c
  6594  0042BE  D005               	bra	u4380
  6595  0042C0                     u4387:
  6596  0042C0  CFF6 FFE1          	movff	tblptrl,fsr1l
  6597  0042C4  CFF7 FFE2          	movff	tblptrh,fsr1h
  6598  0042C8  50E7               	movf	indf1,w,c
  6599  0042CA                     u4380:
  6600  0042CA  6EDF               	movwf	indf2,c
  6601  0042CC  50DF               	movf	indf2,w,c
  6602  0042CE  A4D8               	btfss	status,2,c
  6603  0042D0  EF6C  F021         	goto	u4391
  6604  0042D4  EF6E  F021         	goto	u4390
  6605  0042D8                     u4391:
  6606  0042D8  EF49  F021         	goto	l4208
  6607  0042DC                     u4390:
  6608  0042DC  0012               	return		;funcret
  6609  0042DE                     __end_of_strcpy:
  6610                           	callstack 0
  6611                           
  6612 ;; *************** function _pad *****************
  6613 ;; Defined at:
  6614 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6617 ;;		 -> sprintf@f(6), 
  6618 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6619 ;;		 -> dbuf(80), 
  6620 ;;  p               2   20[COMRAM] int 
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;  w               2   25[COMRAM] int 
  6623 ;;  i               2   23[COMRAM] int 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  2   16[COMRAM] int 
  6626 ;; Registers used:
  6627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6633 ;;      Params:         6       0       0       0       0       0       0       0       0
  6634 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6635 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6636 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6637 ;;Total ram usage:       11 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 3
  6640 ;; This function calls:
  6641 ;;		_fputc
  6642 ;;		_fputs
  6643 ;;		_strlen
  6644 ;; This function is called by:
  6645 ;;		_efgtoa
  6646 ;;		_xtoa
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           	psect	text17
  6651  003CF6                     __ptext17:
  6652                           	callstack 0
  6653  003CF6                     _pad:
  6654                           	callstack 23
  6655  003CF6                     
  6656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6657  003CF6  0100               	movlb	0	; () banked
  6658  003CF8  A1FE               	btfss	_flags& (0+255),0,b
  6659  003CFA  EF81  F01E         	goto	u4271
  6660  003CFE  EF83  F01E         	goto	u4270
  6661  003D02                     u4271:
  6662  003D02  EF8D  F01E         	goto	l4166
  6663  003D06                     u4270:
  6664  003D06                     
  6665                           ; BSR set to: 0
  6666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6667  003D06  C013  F00A         	movff	pad@buf,fputs@s
  6668  003D0A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6669  003D0E  C011  F00C         	movff	pad@fp,fputs@fp
  6670  003D12  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6671  003D16  ECF1  F022         	call	_fputs	;wreg free
  6672  003D1A                     l4166:
  6673                           
  6674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6675  003D1A  BE16               	btfsc	(pad@p+1)^0,7,c
  6676  003D1C  EF92  F01E         	goto	u4281
  6677  003D20  EF94  F01E         	goto	u4280
  6678  003D24                     u4281:
  6679  003D24  EF9A  F01E         	goto	l4170
  6680  003D28                     u4280:
  6681  003D28  C015  F01A         	movff	pad@p,pad@w
  6682  003D2C  C016  F01B         	movff	pad@p+1,pad@w+1
  6683  003D30  EF9E  F01E         	goto	l1101
  6684  003D34                     l4170:
  6685  003D34  0E00               	movlw	0
  6686  003D36  6E1B               	movwf	(pad@w+1)^0,c
  6687  003D38  0E00               	movlw	0
  6688  003D3A  6E1A               	movwf	pad@w^0,c
  6689  003D3C                     l1101:
  6690                           
  6691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6692  003D3C  0E00               	movlw	0
  6693  003D3E  6E19               	movwf	(pad@i+1)^0,c
  6694  003D40  0E00               	movlw	0
  6695  003D42  6E18               	movwf	pad@i^0,c
  6696                           
  6697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6698  003D44  EFB0  F01E         	goto	l4176
  6699  003D48                     l4172:
  6700                           
  6701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6702  003D48  0E00               	movlw	0
  6703  003D4A  6E02               	movwf	(fputc@c+1)^0,c
  6704  003D4C  0E20               	movlw	32
  6705  003D4E  6E01               	movwf	fputc@c^0,c
  6706  003D50  C011  F003         	movff	pad@fp,fputc@fp
  6707  003D54  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6708  003D58  EC16  F01E         	call	_fputc	;wreg free
  6709  003D5C                     
  6710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6711  003D5C  4A18               	infsnz	pad@i^0,f,c
  6712  003D5E  2A19               	incf	(pad@i+1)^0,f,c
  6713  003D60                     l4176:
  6714                           
  6715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6716  003D60  501A               	movf	pad@w^0,w,c
  6717  003D62  5C18               	subwf	pad@i^0,w,c
  6718  003D64  5019               	movf	(pad@i+1)^0,w,c
  6719  003D66  0A80               	xorlw	128
  6720  003D68  6E17               	movwf	??_pad^0,c
  6721  003D6A  501B               	movf	(pad@w+1)^0,w,c
  6722  003D6C  0A80               	xorlw	128
  6723  003D6E  5817               	subwfb	??_pad^0,w,c
  6724  003D70  A0D8               	btfss	status,0,c
  6725  003D72  EFBD  F01E         	goto	u4291
  6726  003D76  EFBF  F01E         	goto	u4290
  6727  003D7A                     u4291:
  6728  003D7A  EFA4  F01E         	goto	l4172
  6729  003D7E                     u4290:
  6730  003D7E                     
  6731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6732  003D7E  0100               	movlb	0	; () banked
  6733  003D80  B1FE               	btfsc	_flags& (0+255),0,b
  6734  003D82  EFC5  F01E         	goto	u4301
  6735  003D86  EFC7  F01E         	goto	u4300
  6736  003D8A                     u4301:
  6737  003D8A  EFD1  F01E         	goto	l4180
  6738  003D8E                     u4300:
  6739  003D8E                     
  6740                           ; BSR set to: 0
  6741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6742  003D8E  C013  F00A         	movff	pad@buf,fputs@s
  6743  003D92  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6744  003D96  C011  F00C         	movff	pad@fp,fputs@fp
  6745  003D9A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6746  003D9E  ECF1  F022         	call	_fputs	;wreg free
  6747  003DA2                     l4180:
  6748                           
  6749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6750  003DA2  C013  F001         	movff	pad@buf,strlen@s
  6751  003DA6  C014  F002         	movff	pad@buf+1,strlen@s+1
  6752  003DAA  ECFA  F023         	call	_strlen	;wreg free
  6753  003DAE  501A               	movf	pad@w^0,w,c
  6754  003DB0  2401               	addwf	?_strlen^0,w,c
  6755  003DB2  6E11               	movwf	?_pad^0,c
  6756  003DB4  501B               	movf	(pad@w+1)^0,w,c
  6757  003DB6  2002               	addwfc	(?_strlen+1)^0,w,c
  6758  003DB8  6E12               	movwf	(?_pad+1)^0,c
  6759  003DBA  0012               	return		;funcret
  6760  003DBC                     __end_of_pad:
  6761                           	callstack 0
  6762                           
  6763 ;; *************** function _strlen *****************
  6764 ;; Defined at:
  6765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6768 ;;		 -> dbuf(80), 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6771 ;;		 -> dbuf(80), 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2    0[COMRAM] unsigned int 
  6774 ;; Registers used:
  6775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6781 ;;      Params:         2       0       0       0       0       0       0       0       0
  6782 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6784 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6785 ;;Total ram usage:        4 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; This function calls:
  6788 ;;		Nothing
  6789 ;; This function is called by:
  6790 ;;		_pad
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text18
  6795  0047F4                     __ptext18:
  6796                           	callstack 0
  6797  0047F4                     _strlen:
  6798                           	callstack 25
  6799  0047F4  C001  F003         	movff	strlen@s,strlen@a
  6800  0047F8  C002  F004         	movff	strlen@s+1,strlen@a+1
  6801  0047FC  EF02  F024         	goto	l3698
  6802  004800                     l3696:
  6803  004800  4A01               	infsnz	strlen@s^0,f,c
  6804  004802  2A02               	incf	(strlen@s+1)^0,f,c
  6805  004804                     l3698:
  6806  004804  C001  FFD9         	movff	strlen@s,fsr2l
  6807  004808  C002  FFDA         	movff	strlen@s+1,fsr2h
  6808  00480C  50DF               	movf	indf2,w,c
  6809  00480E  A4D8               	btfss	status,2,c
  6810  004810  EF0C  F024         	goto	u3521
  6811  004814  EF0E  F024         	goto	u3520
  6812  004818                     u3521:
  6813  004818  EF00  F024         	goto	l3696
  6814  00481C                     u3520:
  6815  00481C  5003               	movf	strlen@a^0,w,c
  6816  00481E  5C01               	subwf	strlen@s^0,w,c
  6817  004820  6E01               	movwf	?_strlen^0,c
  6818  004822  5004               	movf	(strlen@a+1)^0,w,c
  6819  004824  5802               	subwfb	(strlen@s+1)^0,w,c
  6820  004826  6E02               	movwf	(?_strlen+1)^0,c
  6821  004828  0012               	return		;funcret
  6822  00482A                     __end_of_strlen:
  6823                           	callstack 0
  6824                           
  6825 ;; *************** function _fputs *****************
  6826 ;; Defined at:
  6827 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6830 ;;		 -> dbuf(80), 
  6831 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6832 ;;		 -> sprintf@f(6), 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  i               2   14[COMRAM] int 
  6835 ;;  c               1   13[COMRAM] unsigned char 
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  2    9[COMRAM] int 
  6838 ;; Registers used:
  6839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6845 ;;      Params:         4       0       0       0       0       0       0       0       0
  6846 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6848 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6849 ;;Total ram usage:        7 bytes
  6850 ;; Hardware stack levels used: 1
  6851 ;; Hardware stack levels required when called: 2
  6852 ;; This function calls:
  6853 ;;		_fputc
  6854 ;; This function is called by:
  6855 ;;		_pad
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           	psect	text19
  6860  0045E2                     __ptext19:
  6861                           	callstack 0
  6862  0045E2                     _fputs:
  6863                           	callstack 23
  6864  0045E2  0E00               	movlw	0
  6865  0045E4  6E10               	movwf	(fputs@i+1)^0,c
  6866  0045E6  0E00               	movlw	0
  6867  0045E8  6E0F               	movwf	fputs@i^0,c
  6868  0045EA  EF02  F023         	goto	l3692
  6869  0045EE                     l3688:
  6870  0045EE  C00E  F001         	movff	fputs@c,fputc@c
  6871  0045F2  6A02               	clrf	(fputc@c+1)^0,c
  6872  0045F4  C00C  F003         	movff	fputs@fp,fputc@fp
  6873  0045F8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6874  0045FC  EC16  F01E         	call	_fputc	;wreg free
  6875  004600  4A0F               	infsnz	fputs@i^0,f,c
  6876  004602  2A10               	incf	(fputs@i+1)^0,f,c
  6877  004604                     l3692:
  6878  004604  500F               	movf	fputs@i^0,w,c
  6879  004606  240A               	addwf	fputs@s^0,w,c
  6880  004608  6ED9               	movwf	fsr2l,c
  6881  00460A  5010               	movf	(fputs@i+1)^0,w,c
  6882  00460C  200B               	addwfc	(fputs@s+1)^0,w,c
  6883  00460E  6EDA               	movwf	fsr2h,c
  6884  004610  50DF               	movf	indf2,w,c
  6885  004612  6E0E               	movwf	fputs@c^0,c
  6886  004614  500E               	movf	fputs@c^0,w,c
  6887  004616  A4D8               	btfss	status,2,c
  6888  004618  EF10  F023         	goto	u3511
  6889  00461C  EF12  F023         	goto	u3510
  6890  004620                     u3511:
  6891  004620  EFF7  F022         	goto	l3688
  6892  004624                     u3510:
  6893  004624  0012               	return		;funcret
  6894  004626                     __end_of_fputs:
  6895                           	callstack 0
  6896                           
  6897 ;; *************** function _fputc *****************
  6898 ;; Defined at:
  6899 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  c               2    0[COMRAM] int 
  6902 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6903 ;;		 -> sprintf@f(6), 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;		None
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  2    0[COMRAM] int 
  6908 ;; Registers used:
  6909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6915 ;;      Params:         4       0       0       0       0       0       0       0       0
  6916 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6917 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6918 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6919 ;;Total ram usage:        9 bytes
  6920 ;; Hardware stack levels used: 1
  6921 ;; Hardware stack levels required when called: 1
  6922 ;; This function calls:
  6923 ;;		_putch
  6924 ;; This function is called by:
  6925 ;;		_pad
  6926 ;;		_vfpfcnvrt
  6927 ;;		_fputs
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text20
  6932  003C2C                     __ptext20:
  6933                           	callstack 0
  6934  003C2C                     _fputc:
  6935                           	callstack 23
  6936  003C2C  5003               	movf	fputc@fp^0,w,c
  6937  003C2E  1004               	iorwf	(fputc@fp+1)^0,w,c
  6938  003C30  B4D8               	btfsc	status,2,c
  6939  003C32  EF1D  F01E         	goto	u3081
  6940  003C36  EF1F  F01E         	goto	u3080
  6941  003C3A                     u3081:
  6942  003C3A  EF28  F01E         	goto	l3474
  6943  003C3E                     u3080:
  6944  003C3E  5003               	movf	fputc@fp^0,w,c
  6945  003C40  1004               	iorwf	(fputc@fp+1)^0,w,c
  6946  003C42  A4D8               	btfss	status,2,c
  6947  003C44  EF26  F01E         	goto	u3091
  6948  003C48  EF28  F01E         	goto	u3090
  6949  003C4C                     u3091:
  6950  003C4C  EF2D  F01E         	goto	l3476
  6951  003C50                     u3090:
  6952  003C50                     l3474:
  6953  003C50  5001               	movf	fputc@c^0,w,c
  6954  003C52  ECD6  F024         	call	_putch
  6955  003C56  EF7A  F01E         	goto	l1368
  6956  003C5A                     l3476:
  6957  003C5A  EE20 F004          	lfsr	2,4
  6958  003C5E  5003               	movf	fputc@fp^0,w,c
  6959  003C60  26D9               	addwf	fsr2l,f,c
  6960  003C62  5004               	movf	(fputc@fp+1)^0,w,c
  6961  003C64  22DA               	addwfc	fsr2h,f,c
  6962  003C66  50DE               	movf	postinc2,w,c
  6963  003C68  10DE               	iorwf	postinc2,w,c
  6964  003C6A  B4D8               	btfsc	status,2,c
  6965  003C6C  EF3A  F01E         	goto	u3101
  6966  003C70  EF3C  F01E         	goto	u3100
  6967  003C74                     u3101:
  6968  003C74  EF57  F01E         	goto	l3480
  6969  003C78                     u3100:
  6970  003C78  EE20 F004          	lfsr	2,4
  6971  003C7C  5003               	movf	fputc@fp^0,w,c
  6972  003C7E  26D9               	addwf	fsr2l,f,c
  6973  003C80  5004               	movf	(fputc@fp+1)^0,w,c
  6974  003C82  22DA               	addwfc	fsr2h,f,c
  6975  003C84  EE10 F002          	lfsr	1,2
  6976  003C88  5003               	movf	fputc@fp^0,w,c
  6977  003C8A  26E1               	addwf	fsr1l,f,c
  6978  003C8C  5004               	movf	(fputc@fp+1)^0,w,c
  6979  003C8E  22E2               	addwfc	fsr1h,f,c
  6980  003C90  50DE               	movf	postinc2,w,c
  6981  003C92  5CE6               	subwf	postinc1,w,c
  6982  003C94  50E6               	movf	postinc1,w,c
  6983  003C96  0A80               	xorlw	128
  6984  003C98  6E09               	movwf	(??_fputc+4)^0,c
  6985  003C9A  50DE               	movf	postinc2,w,c
  6986  003C9C  0A80               	xorlw	128
  6987  003C9E  5809               	subwfb	(??_fputc+4)^0,w,c
  6988  003CA0  B0D8               	btfsc	status,0,c
  6989  003CA2  EF55  F01E         	goto	u3111
  6990  003CA6  EF57  F01E         	goto	u3110
  6991  003CAA                     u3111:
  6992  003CAA  EF7A  F01E         	goto	l1368
  6993  003CAE                     u3110:
  6994  003CAE                     l3480:
  6995  003CAE  EE20 F002          	lfsr	2,2
  6996  003CB2  5003               	movf	fputc@fp^0,w,c
  6997  003CB4  26D9               	addwf	fsr2l,f,c
  6998  003CB6  5004               	movf	(fputc@fp+1)^0,w,c
  6999  003CB8  22DA               	addwfc	fsr2h,f,c
  7000  003CBA  CFDE F005          	movff	postinc2,??_fputc
  7001  003CBE  CFDD F006          	movff	postdec2,??_fputc+1
  7002  003CC2  C003  FFD9         	movff	fputc@fp,fsr2l
  7003  003CC6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7004  003CCA  CFDE F007          	movff	postinc2,??_fputc+2
  7005  003CCE  CFDD F008          	movff	postdec2,??_fputc+3
  7006  003CD2  5005               	movf	??_fputc^0,w,c
  7007  003CD4  2407               	addwf	(??_fputc+2)^0,w,c
  7008  003CD6  6ED9               	movwf	fsr2l,c
  7009  003CD8  5006               	movf	(??_fputc+1)^0,w,c
  7010  003CDA  2008               	addwfc	(??_fputc+3)^0,w,c
  7011  003CDC  6EDA               	movwf	fsr2h,c
  7012  003CDE  C001  FFDF         	movff	fputc@c,indf2
  7013  003CE2  EE20 F002          	lfsr	2,2
  7014  003CE6  5003               	movf	fputc@fp^0,w,c
  7015  003CE8  26D9               	addwf	fsr2l,f,c
  7016  003CEA  5004               	movf	(fputc@fp+1)^0,w,c
  7017  003CEC  22DA               	addwfc	fsr2h,f,c
  7018  003CEE  2ADE               	incf	postinc2,f,c
  7019  003CF0  0E00               	movlw	0
  7020  003CF2  22DD               	addwfc	postdec2,f,c
  7021  003CF4                     l1368:
  7022  003CF4  0012               	return		;funcret
  7023  003CF6                     __end_of_fputc:
  7024                           	callstack 0
  7025                           
  7026 ;; *************** function _putch *****************
  7027 ;; Defined at:
  7028 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  c               1    wreg     unsigned char 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;  c               1    0[COMRAM] unsigned char 
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      void 
  7035 ;; Registers used:
  7036 ;;		wreg
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7042 ;;      Params:         0       0       0       0       0       0       0       0       0
  7043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7046 ;;Total ram usage:        0 bytes
  7047 ;; Hardware stack levels used: 1
  7048 ;; This function calls:
  7049 ;;		Nothing
  7050 ;; This function is called by:
  7051 ;;		_fputc
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text21
  7056  0049AC                     __ptext21:
  7057                           	callstack 0
  7058  0049AC                     _putch:
  7059                           	callstack 23
  7060  0049AC  0012               	return		;funcret
  7061  0049AE                     __end_of_putch:
  7062                           	callstack 0
  7063                           
  7064 ;; *************** function _floorf *****************
  7065 ;; Defined at:
  7066 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  x               4   70[COMRAM] float 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;  u               4   86[COMRAM] struct .
  7071 ;;  m               4   80[COMRAM] unsigned long 
  7072 ;;  e               2   84[COMRAM] int 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  4   70[COMRAM] float 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7082 ;;      Params:         4       0       0       0       0       0       0       0       0
  7083 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7084 ;;      Temps:          6       0       0       0       0       0       0       0       0
  7085 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7086 ;;Total ram usage:       20 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; This function calls:
  7089 ;;		Nothing
  7090 ;; This function is called by:
  7091 ;;		_efgtoa
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text22
  7096  0030A0                     __ptext22:
  7097                           	callstack 0
  7098  0030A0                     _floorf:
  7099                           	callstack 26
  7100  0030A0  C0E4  F057         	movff	floorf@F527,floorf@u
  7101  0030A4  C0E5  F058         	movff	floorf@F527+1,floorf@u+1
  7102  0030A8  C0E6  F059         	movff	floorf@F527+2,floorf@u+2
  7103  0030AC  C0E7  F05A         	movff	floorf@F527+3,floorf@u+3
  7104  0030B0  C047  F057         	movff	floorf@x,floorf@u
  7105  0030B4  C048  F058         	movff	floorf@x+1,floorf@u+1
  7106  0030B8  C049  F059         	movff	floorf@x+2,floorf@u+2
  7107  0030BC  C04A  F05A         	movff	floorf@x+3,floorf@u+3
  7108  0030C0  0E81               	movlw	129
  7109  0030C2  6E4B               	movwf	??_floorf^0,c
  7110  0030C4  0EFF               	movlw	255
  7111  0030C6  6E4C               	movwf	(??_floorf+1)^0,c
  7112  0030C8  C057  F04D         	movff	floorf@u,??_floorf+2
  7113  0030CC  C058  F04E         	movff	floorf@u+1,??_floorf+3
  7114  0030D0  C059  F04F         	movff	floorf@u+2,??_floorf+4
  7115  0030D4  C05A  F050         	movff	floorf@u+3,??_floorf+5
  7116  0030D8  0E18               	movlw	24
  7117  0030DA  EF74  F018         	goto	u4430
  7118  0030DE                     u4435:
  7119  0030DE  90D8               	bcf	status,0,c
  7120  0030E0  3250               	rrcf	(??_floorf+5)^0,f,c
  7121  0030E2  324F               	rrcf	(??_floorf+4)^0,f,c
  7122  0030E4  324E               	rrcf	(??_floorf+3)^0,f,c
  7123  0030E6  324D               	rrcf	(??_floorf+2)^0,f,c
  7124  0030E8                     u4430:
  7125  0030E8  2EE8               	decfsz	wreg,f,c
  7126  0030EA  EF6F  F018         	goto	u4435
  7127  0030EE  504D               	movf	(??_floorf+2)^0,w,c
  7128  0030F0  244B               	addwf	??_floorf^0,w,c
  7129  0030F2  6E55               	movwf	floorf@e^0,c
  7130  0030F4  0E00               	movlw	0
  7131  0030F6  204C               	addwfc	(??_floorf+1)^0,w,c
  7132  0030F8  6E56               	movwf	(floorf@e+1)^0,c
  7133  0030FA  BE56               	btfsc	(floorf@e+1)^0,7,c
  7134  0030FC  EF89  F018         	goto	u4441
  7135  003100  5056               	movf	(floorf@e+1)^0,w,c
  7136  003102  E109               	bnz	u4440
  7137  003104  0E17               	movlw	23
  7138  003106  5C55               	subwf	floorf@e^0,w,c
  7139  003108  A0D8               	btfss	status,0,c
  7140  00310A  EF89  F018         	goto	u4441
  7141  00310E  EF8B  F018         	goto	u4440
  7142  003112                     u4441:
  7143  003112  EF95  F018         	goto	l4226
  7144  003116                     u4440:
  7145  003116                     l4224:
  7146  003116  C047  F047         	movff	floorf@x,?_floorf
  7147  00311A  C048  F048         	movff	floorf@x+1,?_floorf+1
  7148  00311E  C049  F049         	movff	floorf@x+2,?_floorf+2
  7149  003122  C04A  F04A         	movff	floorf@x+3,?_floorf+3
  7150  003126  EF58  F019         	goto	l1323
  7151  00312A                     l4226:
  7152  00312A  BE56               	btfsc	(floorf@e+1)^0,7,c
  7153  00312C  EF9A  F018         	goto	u4451
  7154  003130  EF9C  F018         	goto	u4450
  7155  003134                     u4451:
  7156  003134  EF0C  F019         	goto	l4236
  7157  003138                     u4450:
  7158  003138  C055  F04B         	movff	floorf@e,??_floorf
  7159  00313C  0EFF               	movlw	255
  7160  00313E  6E4C               	movwf	(??_floorf+1)^0,c
  7161  003140  0EFF               	movlw	255
  7162  003142  6E4D               	movwf	(??_floorf+2)^0,c
  7163  003144  0E7F               	movlw	127
  7164  003146  6E4E               	movwf	(??_floorf+3)^0,c
  7165  003148  0E00               	movlw	0
  7166  00314A  6E4F               	movwf	(??_floorf+4)^0,c
  7167  00314C                     u4465:
  7168  00314C  664B               	tstfsz	??_floorf^0,c
  7169  00314E  EFAB  F018         	goto	u4466
  7170  003152  EFB3  F018         	goto	u4467
  7171  003156                     u4466:
  7172  003156  344F               	rlcf	(??_floorf+4)^0,w,c
  7173  003158  324F               	rrcf	(??_floorf+4)^0,f,c
  7174  00315A  324E               	rrcf	(??_floorf+3)^0,f,c
  7175  00315C  324D               	rrcf	(??_floorf+2)^0,f,c
  7176  00315E  324C               	rrcf	(??_floorf+1)^0,f,c
  7177  003160  2E4B               	decfsz	??_floorf^0,f,c
  7178  003162  EFA6  F018         	goto	u4465
  7179  003166                     u4467:
  7180  003166  C04C  F051         	movff	??_floorf+1,floorf@m
  7181  00316A  C04D  F052         	movff	??_floorf+2,floorf@m+1
  7182  00316E  C04E  F053         	movff	??_floorf+3,floorf@m+2
  7183  003172  C04F  F054         	movff	??_floorf+4,floorf@m+3
  7184  003176  5051               	movf	floorf@m^0,w,c
  7185  003178  1457               	andwf	floorf@u^0,w,c
  7186  00317A  6E4B               	movwf	??_floorf^0,c
  7187  00317C  5052               	movf	(floorf@m+1)^0,w,c
  7188  00317E  1458               	andwf	(floorf@u+1)^0,w,c
  7189  003180  6E4C               	movwf	(??_floorf+1)^0,c
  7190  003182  5053               	movf	(floorf@m+2)^0,w,c
  7191  003184  1459               	andwf	(floorf@u+2)^0,w,c
  7192  003186  6E4D               	movwf	(??_floorf+2)^0,c
  7193  003188  5054               	movf	(floorf@m+3)^0,w,c
  7194  00318A  145A               	andwf	(floorf@u+3)^0,w,c
  7195  00318C  6E4E               	movwf	(??_floorf+3)^0,c
  7196  00318E  504B               	movf	??_floorf^0,w,c
  7197  003190  104C               	iorwf	(??_floorf+1)^0,w,c
  7198  003192  104D               	iorwf	(??_floorf+2)^0,w,c
  7199  003194  104E               	iorwf	(??_floorf+3)^0,w,c
  7200  003196  A4D8               	btfss	status,2,c
  7201  003198  EFD0  F018         	goto	u4471
  7202  00319C  EFD2  F018         	goto	u4470
  7203  0031A0                     u4471:
  7204  0031A0  EFD4  F018         	goto	l4232
  7205  0031A4                     u4470:
  7206  0031A4  EF8B  F018         	goto	l4224
  7207  0031A8                     l4232:
  7208  0031A8  C057  F04B         	movff	floorf@u,??_floorf
  7209  0031AC  C058  F04C         	movff	floorf@u+1,??_floorf+1
  7210  0031B0  C059  F04D         	movff	floorf@u+2,??_floorf+2
  7211  0031B4  C05A  F04E         	movff	floorf@u+3,??_floorf+3
  7212  0031B8  0E20               	movlw	32
  7213  0031BA  EFE4  F018         	goto	u4480
  7214  0031BE                     u4485:
  7215  0031BE  90D8               	bcf	status,0,c
  7216  0031C0  324E               	rrcf	(??_floorf+3)^0,f,c
  7217  0031C2  324D               	rrcf	(??_floorf+2)^0,f,c
  7218  0031C4  324C               	rrcf	(??_floorf+1)^0,f,c
  7219  0031C6  324B               	rrcf	??_floorf^0,f,c
  7220  0031C8                     u4480:
  7221  0031C8  2EE8               	decfsz	wreg,f,c
  7222  0031CA  EFDF  F018         	goto	u4485
  7223  0031CE  504B               	movf	??_floorf^0,w,c
  7224  0031D0  104C               	iorwf	(??_floorf+1)^0,w,c
  7225  0031D2  104D               	iorwf	(??_floorf+2)^0,w,c
  7226  0031D4  104E               	iorwf	(??_floorf+3)^0,w,c
  7227  0031D6  B4D8               	btfsc	status,2,c
  7228  0031D8  EFF0  F018         	goto	u4491
  7229  0031DC  EFF2  F018         	goto	u4490
  7230  0031E0                     u4491:
  7231  0031E0  EFFA  F018         	goto	l1326
  7232  0031E4                     u4490:
  7233  0031E4  5051               	movf	floorf@m^0,w,c
  7234  0031E6  2657               	addwf	floorf@u^0,f,c
  7235  0031E8  5052               	movf	(floorf@m+1)^0,w,c
  7236  0031EA  2258               	addwfc	(floorf@u+1)^0,f,c
  7237  0031EC  5053               	movf	(floorf@m+2)^0,w,c
  7238  0031EE  2259               	addwfc	(floorf@u+2)^0,f,c
  7239  0031F0  5054               	movf	(floorf@m+3)^0,w,c
  7240  0031F2  225A               	addwfc	(floorf@u+3)^0,f,c
  7241  0031F4                     l1326:
  7242  0031F4  1C51               	comf	floorf@m^0,w,c
  7243  0031F6  6E4B               	movwf	??_floorf^0,c
  7244  0031F8  1C52               	comf	(floorf@m+1)^0,w,c
  7245  0031FA  6E4C               	movwf	(??_floorf+1)^0,c
  7246  0031FC  1C53               	comf	(floorf@m+2)^0,w,c
  7247  0031FE  6E4D               	movwf	(??_floorf+2)^0,c
  7248  003200  1C54               	comf	(floorf@m+3)^0,w,c
  7249  003202  6E4E               	movwf	(??_floorf+3)^0,c
  7250  003204  504B               	movf	??_floorf^0,w,c
  7251  003206  1657               	andwf	floorf@u^0,f,c
  7252  003208  504C               	movf	(??_floorf+1)^0,w,c
  7253  00320A  1658               	andwf	(floorf@u+1)^0,f,c
  7254  00320C  504D               	movf	(??_floorf+2)^0,w,c
  7255  00320E  1659               	andwf	(floorf@u+2)^0,f,c
  7256  003210  504E               	movf	(??_floorf+3)^0,w,c
  7257  003212  165A               	andwf	(floorf@u+3)^0,f,c
  7258  003214  EF50  F019         	goto	l4244
  7259  003218                     l4236:
  7260  003218  C057  F04B         	movff	floorf@u,??_floorf
  7261  00321C  C058  F04C         	movff	floorf@u+1,??_floorf+1
  7262  003220  C059  F04D         	movff	floorf@u+2,??_floorf+2
  7263  003224  C05A  F04E         	movff	floorf@u+3,??_floorf+3
  7264  003228  0E20               	movlw	32
  7265  00322A  EF1C  F019         	goto	u4500
  7266  00322E                     u4505:
  7267  00322E  90D8               	bcf	status,0,c
  7268  003230  324E               	rrcf	(??_floorf+3)^0,f,c
  7269  003232  324D               	rrcf	(??_floorf+2)^0,f,c
  7270  003234  324C               	rrcf	(??_floorf+1)^0,f,c
  7271  003236  324B               	rrcf	??_floorf^0,f,c
  7272  003238                     u4500:
  7273  003238  2EE8               	decfsz	wreg,f,c
  7274  00323A  EF17  F019         	goto	u4505
  7275  00323E  504B               	movf	??_floorf^0,w,c
  7276  003240  104C               	iorwf	(??_floorf+1)^0,w,c
  7277  003242  104D               	iorwf	(??_floorf+2)^0,w,c
  7278  003244  104E               	iorwf	(??_floorf+3)^0,w,c
  7279  003246  A4D8               	btfss	status,2,c
  7280  003248  EF28  F019         	goto	u4511
  7281  00324C  EF2A  F019         	goto	u4510
  7282  003250                     u4511:
  7283  003250  EF34  F019         	goto	l4240
  7284  003254                     u4510:
  7285  003254  0E00               	movlw	0
  7286  003256  6E57               	movwf	floorf@u^0,c
  7287  003258  0E00               	movlw	0
  7288  00325A  6E58               	movwf	(floorf@u+1)^0,c
  7289  00325C  0E00               	movlw	0
  7290  00325E  6E59               	movwf	(floorf@u+2)^0,c
  7291  003260  0E00               	movlw	0
  7292  003262  6E5A               	movwf	(floorf@u+3)^0,c
  7293  003264  EF50  F019         	goto	l4244
  7294  003268                     l4240:
  7295  003268  90D8               	bcf	status,0,c
  7296  00326A  3457               	rlcf	floorf@u^0,w,c
  7297  00326C  6E4B               	movwf	??_floorf^0,c
  7298  00326E  3458               	rlcf	(floorf@u+1)^0,w,c
  7299  003270  6E4C               	movwf	(??_floorf+1)^0,c
  7300  003272  3459               	rlcf	(floorf@u+2)^0,w,c
  7301  003274  6E4D               	movwf	(??_floorf+2)^0,c
  7302  003276  345A               	rlcf	(floorf@u+3)^0,w,c
  7303  003278  6E4E               	movwf	(??_floorf+3)^0,c
  7304  00327A  504B               	movf	??_floorf^0,w,c
  7305  00327C  104C               	iorwf	(??_floorf+1)^0,w,c
  7306  00327E  104D               	iorwf	(??_floorf+2)^0,w,c
  7307  003280  104E               	iorwf	(??_floorf+3)^0,w,c
  7308  003282  B4D8               	btfsc	status,2,c
  7309  003284  EF46  F019         	goto	u4521
  7310  003288  EF48  F019         	goto	u4520
  7311  00328C                     u4521:
  7312  00328C  EF50  F019         	goto	l4244
  7313  003290                     u4520:
  7314  003290  0E00               	movlw	0
  7315  003292  6E57               	movwf	floorf@u^0,c
  7316  003294  0E00               	movlw	0
  7317  003296  6E58               	movwf	(floorf@u+1)^0,c
  7318  003298  0E80               	movlw	128
  7319  00329A  6E59               	movwf	(floorf@u+2)^0,c
  7320  00329C  0EBF               	movlw	191
  7321  00329E  6E5A               	movwf	(floorf@u+3)^0,c
  7322  0032A0                     l4244:
  7323  0032A0  C057  F047         	movff	floorf@u,?_floorf
  7324  0032A4  C058  F048         	movff	floorf@u+1,?_floorf+1
  7325  0032A8  C059  F049         	movff	floorf@u+2,?_floorf+2
  7326  0032AC  C05A  F04A         	movff	floorf@u+3,?_floorf+3
  7327  0032B0                     l1323:
  7328  0032B0  0012               	return		;funcret
  7329  0032B2                     __end_of_floorf:
  7330                           	callstack 0
  7331                           
  7332 ;; *************** function ___fpclassifyf *****************
  7333 ;; Defined at:
  7334 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  x               4    0[COMRAM] float 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  u               4   10[COMRAM] struct .
  7339 ;;  e               2    8[COMRAM] int 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  2    0[COMRAM] int 
  7342 ;; Registers used:
  7343 ;;		wreg, status,2, status,0
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7349 ;;      Params:         4       0       0       0       0       0       0       0       0
  7350 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7351 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7352 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7353 ;;Total ram usage:       14 bytes
  7354 ;; Hardware stack levels used: 1
  7355 ;; This function calls:
  7356 ;;		Nothing
  7357 ;; This function is called by:
  7358 ;;		_efgtoa
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text23
  7363  003A58                     __ptext23:
  7364                           	callstack 0
  7365  003A58                     ___fpclassifyf:
  7366                           	callstack 26
  7367  003A58  C0E8  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7368  003A5C  C0E9  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7369  003A60  C0EA  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7370  003A64  C0EB  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7371  003A68  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7372  003A6C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7373  003A70  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7374  003A74  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7375  003A78  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7376  003A7C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7377  003A80  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7378  003A84  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7379  003A88  0E18               	movlw	24
  7380  003A8A  EF4C  F01D         	goto	u4310
  7381  003A8E                     u4315:
  7382  003A8E  90D8               	bcf	status,0,c
  7383  003A90  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7384  003A92  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7385  003A94  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7386  003A96  3205               	rrcf	??___fpclassifyf^0,f,c
  7387  003A98                     u4310:
  7388  003A98  2EE8               	decfsz	wreg,f,c
  7389  003A9A  EF47  F01D         	goto	u4315
  7390  003A9E  5005               	movf	??___fpclassifyf^0,w,c
  7391  003AA0  6E09               	movwf	___fpclassifyf@e^0,c
  7392  003AA2  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7393  003AA4  5009               	movf	___fpclassifyf@e^0,w,c
  7394  003AA6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7395  003AA8  A4D8               	btfss	status,2,c
  7396  003AAA  EF59  F01D         	goto	u4321
  7397  003AAE  EF5B  F01D         	goto	u4320
  7398  003AB2                     u4321:
  7399  003AB2  EF7B  F01D         	goto	l4196
  7400  003AB6                     u4320:
  7401  003AB6  90D8               	bcf	status,0,c
  7402  003AB8  340B               	rlcf	___fpclassifyf@u^0,w,c
  7403  003ABA  6E05               	movwf	??___fpclassifyf^0,c
  7404  003ABC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7405  003ABE  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7406  003AC0  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7407  003AC2  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7408  003AC4  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7409  003AC6  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7410  003AC8  5005               	movf	??___fpclassifyf^0,w,c
  7411  003ACA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7412  003ACC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7413  003ACE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7414  003AD0  A4D8               	btfss	status,2,c
  7415  003AD2  EF6D  F01D         	goto	u4331
  7416  003AD6  EF6F  F01D         	goto	u4330
  7417  003ADA                     u4331:
  7418  003ADA  EF75  F01D         	goto	l4192
  7419  003ADE                     u4330:
  7420  003ADE  0E00               	movlw	0
  7421  003AE0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7422  003AE2  0E02               	movlw	2
  7423  003AE4  6E01               	movwf	?___fpclassifyf^0,c
  7424  003AE6  EFAA  F01D         	goto	l1285
  7425  003AEA                     l4192:
  7426  003AEA  0E00               	movlw	0
  7427  003AEC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7428  003AEE  0E03               	movlw	3
  7429  003AF0  6E01               	movwf	?___fpclassifyf^0,c
  7430  003AF2  EFAA  F01D         	goto	l1285
  7431  003AF6                     l4196:
  7432  003AF6  2809               	incf	___fpclassifyf@e^0,w,c
  7433  003AF8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7434  003AFA  A4D8               	btfss	status,2,c
  7435  003AFC  EF82  F01D         	goto	u4341
  7436  003B00  EF84  F01D         	goto	u4340
  7437  003B04                     u4341:
  7438  003B04  EFA6  F01D         	goto	l4202
  7439  003B08                     u4340:
  7440  003B08  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7441  003B0C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7442  003B10  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7443  003B14  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7444  003B18  0E09               	movlw	9
  7445  003B1A                     u4355:
  7446  003B1A  90D8               	bcf	status,0,c
  7447  003B1C  3605               	rlcf	??___fpclassifyf^0,f,c
  7448  003B1E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7449  003B20  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7450  003B22  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7451  003B24  2EE8               	decfsz	wreg,f,c
  7452  003B26  EF8D  F01D         	goto	u4355
  7453  003B2A  5005               	movf	??___fpclassifyf^0,w,c
  7454  003B2C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7455  003B2E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7456  003B30  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7457  003B32  B4D8               	btfsc	status,2,c
  7458  003B34  EF9E  F01D         	goto	u4361
  7459  003B38  EFA1  F01D         	goto	u4360
  7460  003B3C                     u4361:
  7461  003B3C  0E01               	movlw	1
  7462  003B3E  EFA2  F01D         	goto	u4370
  7463  003B42                     u4360:
  7464  003B42  0E00               	movlw	0
  7465  003B44                     u4370:
  7466  003B44  6E01               	movwf	?___fpclassifyf^0,c
  7467  003B46  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7468  003B48  EFAA  F01D         	goto	l1285
  7469  003B4C                     l4202:
  7470  003B4C  0E00               	movlw	0
  7471  003B4E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7472  003B50  0E04               	movlw	4
  7473  003B52  6E01               	movwf	?___fpclassifyf^0,c
  7474  003B54                     l1285:
  7475  003B54  0012               	return		;funcret
  7476  003B56                     __end_of___fpclassifyf:
  7477                           	callstack 0
  7478                           
  7479 ;; *************** function ___fltol *****************
  7480 ;; Defined at:
  7481 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;  f1              4   86[COMRAM] int 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  exp1            1    1[BANK0 ] unsigned char 
  7486 ;;  sign1           1    0[BANK0 ] unsigned char 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  4   86[COMRAM] long 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2, status,0
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7496 ;;      Params:         4       0       0       0       0       0       0       0       0
  7497 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7498 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7499 ;;      Totals:         8       2       0       0       0       0       0       0       0
  7500 ;;Total ram usage:       10 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; This function calls:
  7503 ;;		Nothing
  7504 ;; This function is called by:
  7505 ;;		_ReadADC
  7506 ;;		_efgtoa
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text24
  7511  00374E                     __ptext24:
  7512                           	callstack 0
  7513  00374E                     ___fltol:
  7514                           	callstack 26
  7515  00374E  3459               	rlcf	(___fltol@f1+2)^0,w,c
  7516  003750  345A               	rlcf	(___fltol@f1+3)^0,w,c
  7517  003752  0100               	movlb	0	; () banked
  7518  003754  6F61               	movwf	___fltol@exp1& (0+255),b
  7519  003756  5161               	movf	___fltol@exp1& (0+255),w,b
  7520  003758  A4D8               	btfss	status,2,c
  7521  00375A  EFB1  F01B         	goto	u4201
  7522  00375E  EFB3  F01B         	goto	u4200
  7523  003762                     u4201:
  7524  003762  EFBD  F01B         	goto	l4124
  7525  003766                     u4200:
  7526  003766                     l4120:
  7527                           
  7528                           ; BSR set to: 0
  7529  003766  0E00               	movlw	0
  7530  003768  6E57               	movwf	?___fltol^0,c
  7531  00376A  0E00               	movlw	0
  7532  00376C  6E58               	movwf	(?___fltol+1)^0,c
  7533  00376E  0E00               	movlw	0
  7534  003770  6E59               	movwf	(?___fltol+2)^0,c
  7535  003772  0E00               	movlw	0
  7536  003774  6E5A               	movwf	(?___fltol+3)^0,c
  7537  003776  EF2A  F01C         	goto	l675
  7538  00377A                     l4124:
  7539                           
  7540                           ; BSR set to: 0
  7541  00377A  C057  F05B         	movff	___fltol@f1,??___fltol
  7542  00377E  C058  F05C         	movff	___fltol@f1+1,??___fltol+1
  7543  003782  C059  F05D         	movff	___fltol@f1+2,??___fltol+2
  7544  003786  C05A  F05E         	movff	___fltol@f1+3,??___fltol+3
  7545  00378A  0E20               	movlw	32
  7546  00378C  EFCD  F01B         	goto	u4210
  7547  003790                     u4215:
  7548  003790  90D8               	bcf	status,0,c
  7549  003792  325E               	rrcf	(??___fltol+3)^0,f,c
  7550  003794  325D               	rrcf	(??___fltol+2)^0,f,c
  7551  003796  325C               	rrcf	(??___fltol+1)^0,f,c
  7552  003798  325B               	rrcf	??___fltol^0,f,c
  7553  00379A                     u4210:
  7554  00379A  2EE8               	decfsz	wreg,f,c
  7555  00379C  EFC8  F01B         	goto	u4215
  7556  0037A0  505B               	movf	??___fltol^0,w,c
  7557  0037A2  6F60               	movwf	___fltol@sign1& (0+255),b
  7558  0037A4                     
  7559                           ; BSR set to: 0
  7560  0037A4  8E59               	bsf	(___fltol@f1+2)^0,7,c
  7561  0037A6                     
  7562                           ; BSR set to: 0
  7563  0037A6  0EFF               	movlw	255
  7564  0037A8  1657               	andwf	___fltol@f1^0,f,c
  7565  0037AA  0EFF               	movlw	255
  7566  0037AC  1658               	andwf	(___fltol@f1+1)^0,f,c
  7567  0037AE  0EFF               	movlw	255
  7568  0037B0  1659               	andwf	(___fltol@f1+2)^0,f,c
  7569  0037B2  0E00               	movlw	0
  7570  0037B4  165A               	andwf	(___fltol@f1+3)^0,f,c
  7571  0037B6                     
  7572                           ; BSR set to: 0
  7573  0037B6  0E96               	movlw	150
  7574  0037B8  5F61               	subwf	___fltol@exp1& (0+255),f,b
  7575  0037BA                     
  7576                           ; BSR set to: 0
  7577  0037BA  BF61               	btfsc	___fltol@exp1& (0+255),7,b
  7578  0037BC  EFE4  F01B         	goto	u4220
  7579  0037C0  EFE2  F01B         	goto	u4221
  7580  0037C4                     u4221:
  7581  0037C4  EFFA  F01B         	goto	l4144
  7582  0037C8                     u4220:
  7583  0037C8                     
  7584                           ; BSR set to: 0
  7585  0037C8  5161               	movf	___fltol@exp1& (0+255),w,b
  7586  0037CA  0A80               	xorlw	128
  7587  0037CC  0F97               	addlw	151
  7588  0037CE  B0D8               	btfsc	status,0,c
  7589  0037D0  EFEC  F01B         	goto	u4231
  7590  0037D4  EFEE  F01B         	goto	u4230
  7591  0037D8                     u4231:
  7592  0037D8  EFF0  F01B         	goto	l4140
  7593  0037DC                     u4230:
  7594  0037DC  EFB3  F01B         	goto	l4120
  7595  0037E0                     l4140:
  7596                           
  7597                           ; BSR set to: 0
  7598  0037E0  90D8               	bcf	status,0,c
  7599  0037E2  325A               	rrcf	(___fltol@f1+3)^0,f,c
  7600  0037E4  3259               	rrcf	(___fltol@f1+2)^0,f,c
  7601  0037E6  3258               	rrcf	(___fltol@f1+1)^0,f,c
  7602  0037E8  3257               	rrcf	___fltol@f1^0,f,c
  7603  0037EA                     
  7604                           ; BSR set to: 0
  7605  0037EA  3F61               	incfsz	___fltol@exp1& (0+255),f,b
  7606  0037EC  EFF0  F01B         	goto	l4140
  7607  0037F0  EF12  F01C         	goto	l4154
  7608  0037F4                     l4144:
  7609                           
  7610                           ; BSR set to: 0
  7611  0037F4  0E1F               	movlw	31
  7612  0037F6  6561               	cpfsgt	___fltol@exp1& (0+255),b
  7613  0037F8  EF00  F01C         	goto	u4241
  7614  0037FC  EF02  F01C         	goto	u4240
  7615  003800                     u4241:
  7616  003800  EF0A  F01C         	goto	l4152
  7617  003804                     u4240:
  7618  003804  EFB3  F01B         	goto	l4120
  7619  003808                     l4150:
  7620                           
  7621                           ; BSR set to: 0
  7622  003808  90D8               	bcf	status,0,c
  7623  00380A  3657               	rlcf	___fltol@f1^0,f,c
  7624  00380C  3658               	rlcf	(___fltol@f1+1)^0,f,c
  7625  00380E  3659               	rlcf	(___fltol@f1+2)^0,f,c
  7626  003810  365A               	rlcf	(___fltol@f1+3)^0,f,c
  7627  003812  0761               	decf	___fltol@exp1& (0+255),f,b
  7628  003814                     l4152:
  7629                           
  7630                           ; BSR set to: 0
  7631  003814  5161               	movf	___fltol@exp1& (0+255),w,b
  7632  003816  A4D8               	btfss	status,2,c
  7633  003818  EF10  F01C         	goto	u4251
  7634  00381C  EF12  F01C         	goto	u4250
  7635  003820                     u4251:
  7636  003820  EF04  F01C         	goto	l4150
  7637  003824                     u4250:
  7638  003824                     l4154:
  7639                           
  7640                           ; BSR set to: 0
  7641  003824  5160               	movf	___fltol@sign1& (0+255),w,b
  7642  003826  B4D8               	btfsc	status,2,c
  7643  003828  EF18  F01C         	goto	u4261
  7644  00382C  EF1A  F01C         	goto	u4260
  7645  003830                     u4261:
  7646  003830  EF22  F01C         	goto	l4158
  7647  003834                     u4260:
  7648  003834                     
  7649                           ; BSR set to: 0
  7650  003834  1E5A               	comf	(___fltol@f1+3)^0,f,c
  7651  003836  1E59               	comf	(___fltol@f1+2)^0,f,c
  7652  003838  1E58               	comf	(___fltol@f1+1)^0,f,c
  7653  00383A  6C57               	negf	___fltol@f1^0,c
  7654  00383C  0E00               	movlw	0
  7655  00383E  2258               	addwfc	(___fltol@f1+1)^0,f,c
  7656  003840  2259               	addwfc	(___fltol@f1+2)^0,f,c
  7657  003842  225A               	addwfc	(___fltol@f1+3)^0,f,c
  7658  003844                     l4158:
  7659                           
  7660                           ; BSR set to: 0
  7661  003844  C057  F057         	movff	___fltol@f1,?___fltol
  7662  003848  C058  F058         	movff	___fltol@f1+1,?___fltol+1
  7663  00384C  C059  F059         	movff	___fltol@f1+2,?___fltol+2
  7664  003850  C05A  F05A         	movff	___fltol@f1+3,?___fltol+3
  7665  003854                     l675:
  7666                           
  7667                           ; BSR set to: 0
  7668  003854  0012               	return		;funcret
  7669  003856                     __end_of___fltol:
  7670                           	callstack 0
  7671                           
  7672 ;; *************** function ___flsub *****************
  7673 ;; Defined at:
  7674 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;  b               4   86[COMRAM] long 
  7677 ;;  a               4   90[COMRAM] long 
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  4   86[COMRAM] long 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2, status,0, cstack
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7689 ;;      Params:         8       0       0       0       0       0       0       0       0
  7690 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7692 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:        8 bytes
  7694 ;; Hardware stack levels used: 1
  7695 ;; Hardware stack levels required when called: 1
  7696 ;; This function calls:
  7697 ;;		___fladd
  7698 ;; This function is called by:
  7699 ;;		_efgtoa
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text25
  7704  004556                     __ptext25:
  7705                           	callstack 0
  7706  004556                     ___flsub:
  7707                           	callstack 25
  7708  004556  0E00               	movlw	0
  7709  004558  1A5B               	xorwf	___flsub@a^0,f,c
  7710  00455A  0E00               	movlw	0
  7711  00455C  1A5C               	xorwf	(___flsub@a+1)^0,f,c
  7712  00455E  0E00               	movlw	0
  7713  004560  1A5D               	xorwf	(___flsub@a+2)^0,f,c
  7714  004562  0E80               	movlw	128
  7715  004564  1A5E               	xorwf	(___flsub@a+3)^0,f,c
  7716  004566  C057  F047         	movff	___flsub@b,___fladd@b
  7717  00456A  C058  F048         	movff	___flsub@b+1,___fladd@b+1
  7718  00456E  C059  F049         	movff	___flsub@b+2,___fladd@b+2
  7719  004572  C05A  F04A         	movff	___flsub@b+3,___fladd@b+3
  7720  004576  C05B  F04B         	movff	___flsub@a,___fladd@a
  7721  00457A  C05C  F04C         	movff	___flsub@a+1,___fladd@a+1
  7722  00457E  C05D  F04D         	movff	___flsub@a+2,___fladd@a+2
  7723  004582  C05E  F04E         	movff	___flsub@a+3,___fladd@a+3
  7724  004586  EC58  F00D         	call	___fladd	;wreg free
  7725  00458A  C047  F057         	movff	?___fladd,?___flsub
  7726  00458E  C048  F058         	movff	?___fladd+1,?___flsub+1
  7727  004592  C049  F059         	movff	?___fladd+2,?___flsub+2
  7728  004596  C04A  F05A         	movff	?___fladd+3,?___flsub+3
  7729  00459A  0012               	return		;funcret
  7730  00459C                     __end_of___flsub:
  7731                           	callstack 0
  7732                           
  7733 ;; *************** function ___fladd *****************
  7734 ;; Defined at:
  7735 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  b               4   70[COMRAM] long 
  7738 ;;  a               4   74[COMRAM] long 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  grs             1   85[COMRAM] unsigned char 
  7741 ;;  bexp            1   84[COMRAM] unsigned char 
  7742 ;;  aexp            1   83[COMRAM] unsigned char 
  7743 ;;  signs           1   82[COMRAM] unsigned char 
  7744 ;; Return value:  Size  Location     Type
  7745 ;;                  4   70[COMRAM] unsigned char 
  7746 ;; Registers used:
  7747 ;;		wreg, status,2, status,0
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7753 ;;      Params:         8       0       0       0       0       0       0       0       0
  7754 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7755 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7756 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7757 ;;Total ram usage:       16 bytes
  7758 ;; Hardware stack levels used: 1
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_ReadADC
  7763 ;;		___flsub
  7764 ;;		_efgtoa
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text26
  7769  001AB0                     __ptext26:
  7770                           	callstack 0
  7771  001AB0                     ___fladd:
  7772                           	callstack 25
  7773  001AB0  504A               	movf	(___fladd@b+3)^0,w,c
  7774  001AB2  0B80               	andlw	128
  7775  001AB4  6E53               	movwf	___fladd@signs^0,c
  7776  001AB6  504A               	movf	(___fladd@b+3)^0,w,c
  7777  001AB8  244A               	addwf	(___fladd@b+3)^0,w,c
  7778  001ABA  6E55               	movwf	___fladd@bexp^0,c
  7779  001ABC  AE49               	btfss	(___fladd@b+2)^0,7,c
  7780  001ABE  EF63  F00D         	goto	u3121
  7781  001AC2  EF65  F00D         	goto	u3120
  7782  001AC6                     u3121:
  7783  001AC6  EF66  F00D         	goto	l3490
  7784  001ACA                     u3120:
  7785  001ACA  8055               	bsf	___fladd@bexp^0,0,c
  7786  001ACC                     l3490:
  7787  001ACC  5055               	movf	___fladd@bexp^0,w,c
  7788  001ACE  B4D8               	btfsc	status,2,c
  7789  001AD0  EF6C  F00D         	goto	u3131
  7790  001AD4  EF6E  F00D         	goto	u3130
  7791  001AD8                     u3131:
  7792  001AD8  EF83  F00D         	goto	l3500
  7793  001ADC                     u3130:
  7794  001ADC  2855               	incf	___fladd@bexp^0,w,c
  7795  001ADE  A4D8               	btfss	status,2,c
  7796  001AE0  EF74  F00D         	goto	u3141
  7797  001AE4  EF76  F00D         	goto	u3140
  7798  001AE8                     u3141:
  7799  001AE8  EF7E  F00D         	goto	l3496
  7800  001AEC                     u3140:
  7801  001AEC  0E00               	movlw	0
  7802  001AEE  6E47               	movwf	___fladd@b^0,c
  7803  001AF0  0E00               	movlw	0
  7804  001AF2  6E48               	movwf	(___fladd@b+1)^0,c
  7805  001AF4  0E00               	movlw	0
  7806  001AF6  6E49               	movwf	(___fladd@b+2)^0,c
  7807  001AF8  0E00               	movlw	0
  7808  001AFA  6E4A               	movwf	(___fladd@b+3)^0,c
  7809  001AFC                     l3496:
  7810  001AFC  8E49               	bsf	(___fladd@b+2)^0,7,c
  7811  001AFE  0E00               	movlw	0
  7812  001B00  6E4A               	movwf	(___fladd@b+3)^0,c
  7813  001B02  EF8B  F00D         	goto	l3502
  7814  001B06                     l3500:
  7815  001B06  0E00               	movlw	0
  7816  001B08  6E47               	movwf	___fladd@b^0,c
  7817  001B0A  0E00               	movlw	0
  7818  001B0C  6E48               	movwf	(___fladd@b+1)^0,c
  7819  001B0E  0E00               	movlw	0
  7820  001B10  6E49               	movwf	(___fladd@b+2)^0,c
  7821  001B12  0E00               	movlw	0
  7822  001B14  6E4A               	movwf	(___fladd@b+3)^0,c
  7823  001B16                     l3502:
  7824  001B16  504E               	movf	(___fladd@a+3)^0,w,c
  7825  001B18  0B80               	andlw	128
  7826  001B1A  6E54               	movwf	___fladd@aexp^0,c
  7827  001B1C  5053               	movf	___fladd@signs^0,w,c
  7828  001B1E  1854               	xorwf	___fladd@aexp^0,w,c
  7829  001B20  B4D8               	btfsc	status,2,c
  7830  001B22  EF95  F00D         	goto	u3151
  7831  001B26  EF97  F00D         	goto	u3150
  7832  001B2A                     u3151:
  7833  001B2A  EF98  F00D         	goto	l3508
  7834  001B2E                     u3150:
  7835  001B2E  8C53               	bsf	___fladd@signs^0,6,c
  7836  001B30                     l3508:
  7837  001B30  504E               	movf	(___fladd@a+3)^0,w,c
  7838  001B32  244E               	addwf	(___fladd@a+3)^0,w,c
  7839  001B34  6E54               	movwf	___fladd@aexp^0,c
  7840  001B36  AE4D               	btfss	(___fladd@a+2)^0,7,c
  7841  001B38  EFA0  F00D         	goto	u3161
  7842  001B3C  EFA2  F00D         	goto	u3160
  7843  001B40                     u3161:
  7844  001B40  EFA3  F00D         	goto	l3514
  7845  001B44                     u3160:
  7846  001B44  8054               	bsf	___fladd@aexp^0,0,c
  7847  001B46                     l3514:
  7848  001B46  5054               	movf	___fladd@aexp^0,w,c
  7849  001B48  B4D8               	btfsc	status,2,c
  7850  001B4A  EFA9  F00D         	goto	u3171
  7851  001B4E  EFAB  F00D         	goto	u3170
  7852  001B52                     u3171:
  7853  001B52  EFC0  F00D         	goto	l3524
  7854  001B56                     u3170:
  7855  001B56  2854               	incf	___fladd@aexp^0,w,c
  7856  001B58  A4D8               	btfss	status,2,c
  7857  001B5A  EFB1  F00D         	goto	u3181
  7858  001B5E  EFB3  F00D         	goto	u3180
  7859  001B62                     u3181:
  7860  001B62  EFBB  F00D         	goto	l3520
  7861  001B66                     u3180:
  7862  001B66  0E00               	movlw	0
  7863  001B68  6E4B               	movwf	___fladd@a^0,c
  7864  001B6A  0E00               	movlw	0
  7865  001B6C  6E4C               	movwf	(___fladd@a+1)^0,c
  7866  001B6E  0E00               	movlw	0
  7867  001B70  6E4D               	movwf	(___fladd@a+2)^0,c
  7868  001B72  0E00               	movlw	0
  7869  001B74  6E4E               	movwf	(___fladd@a+3)^0,c
  7870  001B76                     l3520:
  7871  001B76  8E4D               	bsf	(___fladd@a+2)^0,7,c
  7872  001B78  0E00               	movlw	0
  7873  001B7A  6E4E               	movwf	(___fladd@a+3)^0,c
  7874  001B7C  EFC8  F00D         	goto	l3526
  7875  001B80                     l3524:
  7876  001B80  0E00               	movlw	0
  7877  001B82  6E4B               	movwf	___fladd@a^0,c
  7878  001B84  0E00               	movlw	0
  7879  001B86  6E4C               	movwf	(___fladd@a+1)^0,c
  7880  001B88  0E00               	movlw	0
  7881  001B8A  6E4D               	movwf	(___fladd@a+2)^0,c
  7882  001B8C  0E00               	movlw	0
  7883  001B8E  6E4E               	movwf	(___fladd@a+3)^0,c
  7884  001B90                     l3526:
  7885  001B90  5055               	movf	___fladd@bexp^0,w,c
  7886  001B92  5C54               	subwf	___fladd@aexp^0,w,c
  7887  001B94  B0D8               	btfsc	status,0,c
  7888  001B96  EFCF  F00D         	goto	u3191
  7889  001B9A  EFD1  F00D         	goto	u3190
  7890  001B9E                     u3191:
  7891  001B9E  EFF8  F00D         	goto	l3562
  7892  001BA2                     u3190:
  7893  001BA2  AC53               	btfss	___fladd@signs^0,6,c
  7894  001BA4  EFD6  F00D         	goto	u3201
  7895  001BA8  EFD8  F00D         	goto	u3200
  7896  001BAC                     u3201:
  7897  001BAC  EFDA  F00D         	goto	l3532
  7898  001BB0                     u3200:
  7899  001BB0  0E80               	movlw	128
  7900  001BB2  1A53               	xorwf	___fladd@signs^0,f,c
  7901  001BB4                     l3532:
  7902  001BB4  C055  F056         	movff	___fladd@bexp,___fladd@grs
  7903  001BB8  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  7904  001BBC  C056  F054         	movff	___fladd@grs,___fladd@aexp
  7905  001BC0  C047  F056         	movff	___fladd@b,___fladd@grs
  7906  001BC4  C04B  F047         	movff	___fladd@a,___fladd@b
  7907  001BC8  C056  F04B         	movff	___fladd@grs,___fladd@a
  7908  001BCC  C048  F056         	movff	___fladd@b+1,___fladd@grs
  7909  001BD0  C04C  F048         	movff	___fladd@a+1,___fladd@b+1
  7910  001BD4  C056  F04C         	movff	___fladd@grs,___fladd@a+1
  7911  001BD8  C049  F056         	movff	___fladd@b+2,___fladd@grs
  7912  001BDC  C04D  F049         	movff	___fladd@a+2,___fladd@b+2
  7913  001BE0  C056  F04D         	movff	___fladd@grs,___fladd@a+2
  7914  001BE4  C04A  F056         	movff	___fladd@b+3,___fladd@grs
  7915  001BE8  C04E  F04A         	movff	___fladd@a+3,___fladd@b+3
  7916  001BEC  C056  F04E         	movff	___fladd@grs,___fladd@a+3
  7917  001BF0                     l3562:
  7918  001BF0  0E00               	movlw	0
  7919  001BF2  6E56               	movwf	___fladd@grs^0,c
  7920  001BF4  5055               	movf	___fladd@bexp^0,w,c
  7921  001BF6  C054  F04F         	movff	___fladd@aexp,??___fladd
  7922  001BFA  6A50               	clrf	(??___fladd+1)^0,c
  7923  001BFC  5E4F               	subwf	??___fladd^0,f,c
  7924  001BFE  0E00               	movlw	0
  7925  001C00  5A50               	subwfb	(??___fladd+1)^0,f,c
  7926  001C02  BE50               	btfsc	(??___fladd+1)^0,7,c
  7927  001C04  EF0D  F00E         	goto	u3211
  7928  001C08  5050               	movf	(??___fladd+1)^0,w,c
  7929  001C0A  E109               	bnz	u3210
  7930  001C0C  0E1A               	movlw	26
  7931  001C0E  5C4F               	subwf	??___fladd^0,w,c
  7932  001C10  A0D8               	btfss	status,0,c
  7933  001C12  EF0D  F00E         	goto	u3211
  7934  001C16  EF0F  F00E         	goto	u3210
  7935  001C1A                     u3211:
  7936  001C1A  EF46  F00E         	goto	l907
  7937  001C1E                     u3210:
  7938  001C1E  5047               	movf	___fladd@b^0,w,c
  7939  001C20  1048               	iorwf	(___fladd@b+1)^0,w,c
  7940  001C22  1049               	iorwf	(___fladd@b+2)^0,w,c
  7941  001C24  104A               	iorwf	(___fladd@b+3)^0,w,c
  7942  001C26  A4D8               	btfss	status,2,c
  7943  001C28  EF18  F00E         	goto	u3221
  7944  001C2C  EF1B  F00E         	goto	u3220
  7945  001C30                     u3221:
  7946  001C30  0E01               	movlw	1
  7947  001C32  EF1C  F00E         	goto	u3230
  7948  001C36                     u3220:
  7949  001C36  0E00               	movlw	0
  7950  001C38                     u3230:
  7951  001C38  6E56               	movwf	___fladd@grs^0,c
  7952  001C3A  0E00               	movlw	0
  7953  001C3C  6E47               	movwf	___fladd@b^0,c
  7954  001C3E  0E00               	movlw	0
  7955  001C40  6E48               	movwf	(___fladd@b+1)^0,c
  7956  001C42  0E00               	movlw	0
  7957  001C44  6E49               	movwf	(___fladd@b+2)^0,c
  7958  001C46  0E00               	movlw	0
  7959  001C48  6E4A               	movwf	(___fladd@b+3)^0,c
  7960  001C4A  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  7961  001C4E  EF4F  F00E         	goto	l906
  7962  001C52                     l908:
  7963  001C52  A056               	btfss	___fladd@grs^0,0,c
  7964  001C54  EF2E  F00E         	goto	u3241
  7965  001C58  EF30  F00E         	goto	u3240
  7966  001C5C                     u3241:
  7967  001C5C  EF36  F00E         	goto	l3574
  7968  001C60                     u3240:
  7969  001C60  90D8               	bcf	status,0,c
  7970  001C62  3056               	rrcf	___fladd@grs^0,w,c
  7971  001C64  0901               	iorlw	1
  7972  001C66  6E56               	movwf	___fladd@grs^0,c
  7973  001C68  EF38  F00E         	goto	l3576
  7974  001C6C                     l3574:
  7975  001C6C  90D8               	bcf	status,0,c
  7976  001C6E  3256               	rrcf	___fladd@grs^0,f,c
  7977  001C70                     l3576:
  7978  001C70  A047               	btfss	___fladd@b^0,0,c
  7979  001C72  EF3D  F00E         	goto	u3251
  7980  001C76  EF3F  F00E         	goto	u3250
  7981  001C7A                     u3251:
  7982  001C7A  EF40  F00E         	goto	l3580
  7983  001C7E                     u3250:
  7984  001C7E  8E56               	bsf	___fladd@grs^0,7,c
  7985  001C80                     l3580:
  7986  001C80  344A               	rlcf	(___fladd@b+3)^0,w,c
  7987  001C82  324A               	rrcf	(___fladd@b+3)^0,f,c
  7988  001C84  3249               	rrcf	(___fladd@b+2)^0,f,c
  7989  001C86  3248               	rrcf	(___fladd@b+1)^0,f,c
  7990  001C88  3247               	rrcf	___fladd@b^0,f,c
  7991  001C8A  2A55               	incf	___fladd@bexp^0,f,c
  7992  001C8C                     l907:
  7993  001C8C  5054               	movf	___fladd@aexp^0,w,c
  7994  001C8E  5C55               	subwf	___fladd@bexp^0,w,c
  7995  001C90  A0D8               	btfss	status,0,c
  7996  001C92  EF4D  F00E         	goto	u3261
  7997  001C96  EF4F  F00E         	goto	u3260
  7998  001C9A                     u3261:
  7999  001C9A  EF29  F00E         	goto	l908
  8000  001C9E                     u3260:
  8001  001C9E                     l906:
  8002  001C9E  BC53               	btfsc	___fladd@signs^0,6,c
  8003  001CA0  EF54  F00E         	goto	u3271
  8004  001CA4  EF56  F00E         	goto	u3270
  8005  001CA8                     u3271:
  8006  001CA8  EF96  F00E         	goto	l3608
  8007  001CAC                     u3270:
  8008  001CAC  5055               	movf	___fladd@bexp^0,w,c
  8009  001CAE  A4D8               	btfss	status,2,c
  8010  001CB0  EF5C  F00E         	goto	u3281
  8011  001CB4  EF5E  F00E         	goto	u3280
  8012  001CB8                     u3281:
  8013  001CB8  EF68  F00E         	goto	l3590
  8014  001CBC                     u3280:
  8015  001CBC  0E00               	movlw	0
  8016  001CBE  6E47               	movwf	?___fladd^0,c
  8017  001CC0  0E00               	movlw	0
  8018  001CC2  6E48               	movwf	(?___fladd+1)^0,c
  8019  001CC4  0E00               	movlw	0
  8020  001CC6  6E49               	movwf	(?___fladd+2)^0,c
  8021  001CC8  0E00               	movlw	0
  8022  001CCA  6E4A               	movwf	(?___fladd+3)^0,c
  8023  001CCC  EFB7  F00F         	goto	l915
  8024  001CD0                     l3590:
  8025  001CD0  504B               	movf	___fladd@a^0,w,c
  8026  001CD2  2647               	addwf	___fladd@b^0,f,c
  8027  001CD4  504C               	movf	(___fladd@a+1)^0,w,c
  8028  001CD6  2248               	addwfc	(___fladd@b+1)^0,f,c
  8029  001CD8  504D               	movf	(___fladd@a+2)^0,w,c
  8030  001CDA  2249               	addwfc	(___fladd@b+2)^0,f,c
  8031  001CDC  504E               	movf	(___fladd@a+3)^0,w,c
  8032  001CDE  224A               	addwfc	(___fladd@b+3)^0,f,c
  8033  001CE0  A04A               	btfss	(___fladd@b+3)^0,0,c
  8034  001CE2  EF75  F00E         	goto	u3291
  8035  001CE6  EF77  F00E         	goto	u3290
  8036  001CEA                     u3291:
  8037  001CEA  EF23  F00F         	goto	l3644
  8038  001CEE                     u3290:
  8039  001CEE  A056               	btfss	___fladd@grs^0,0,c
  8040  001CF0  EF7C  F00E         	goto	u3301
  8041  001CF4  EF7E  F00E         	goto	u3300
  8042  001CF8                     u3301:
  8043  001CF8  EF84  F00E         	goto	l3598
  8044  001CFC                     u3300:
  8045  001CFC  90D8               	bcf	status,0,c
  8046  001CFE  3056               	rrcf	___fladd@grs^0,w,c
  8047  001D00  0901               	iorlw	1
  8048  001D02  6E56               	movwf	___fladd@grs^0,c
  8049  001D04  EF86  F00E         	goto	l3600
  8050  001D08                     l3598:
  8051  001D08  90D8               	bcf	status,0,c
  8052  001D0A  3256               	rrcf	___fladd@grs^0,f,c
  8053  001D0C                     l3600:
  8054  001D0C  A047               	btfss	___fladd@b^0,0,c
  8055  001D0E  EF8B  F00E         	goto	u3311
  8056  001D12  EF8D  F00E         	goto	u3310
  8057  001D16                     u3311:
  8058  001D16  EF8E  F00E         	goto	l3604
  8059  001D1A                     u3310:
  8060  001D1A  8E56               	bsf	___fladd@grs^0,7,c
  8061  001D1C                     l3604:
  8062  001D1C  344A               	rlcf	(___fladd@b+3)^0,w,c
  8063  001D1E  324A               	rrcf	(___fladd@b+3)^0,f,c
  8064  001D20  3249               	rrcf	(___fladd@b+2)^0,f,c
  8065  001D22  3248               	rrcf	(___fladd@b+1)^0,f,c
  8066  001D24  3247               	rrcf	___fladd@b^0,f,c
  8067  001D26  2A55               	incf	___fladd@bexp^0,f,c
  8068  001D28  EF23  F00F         	goto	l3644
  8069  001D2C                     l3608:
  8070  001D2C  504B               	movf	___fladd@a^0,w,c
  8071  001D2E  5C47               	subwf	___fladd@b^0,w,c
  8072  001D30  504C               	movf	(___fladd@a+1)^0,w,c
  8073  001D32  5848               	subwfb	(___fladd@b+1)^0,w,c
  8074  001D34  504D               	movf	(___fladd@a+2)^0,w,c
  8075  001D36  5849               	subwfb	(___fladd@b+2)^0,w,c
  8076  001D38  504A               	movf	(___fladd@b+3)^0,w,c
  8077  001D3A  0A80               	xorlw	128
  8078  001D3C  6E4F               	movwf	??___fladd^0,c
  8079  001D3E  504E               	movf	(___fladd@a+3)^0,w,c
  8080  001D40  0A80               	xorlw	128
  8081  001D42  584F               	subwfb	??___fladd^0,w,c
  8082  001D44  B0D8               	btfsc	status,0,c
  8083  001D46  EFA7  F00E         	goto	u3321
  8084  001D4A  EFA9  F00E         	goto	u3320
  8085  001D4E                     u3321:
  8086  001D4E  EFD4  F00E         	goto	l3618
  8087  001D52                     u3320:
  8088  001D52  5047               	movf	___fladd@b^0,w,c
  8089  001D54  5C4B               	subwf	___fladd@a^0,w,c
  8090  001D56  6E4F               	movwf	??___fladd^0,c
  8091  001D58  5048               	movf	(___fladd@b+1)^0,w,c
  8092  001D5A  584C               	subwfb	(___fladd@a+1)^0,w,c
  8093  001D5C  6E50               	movwf	(??___fladd+1)^0,c
  8094  001D5E  5049               	movf	(___fladd@b+2)^0,w,c
  8095  001D60  584D               	subwfb	(___fladd@a+2)^0,w,c
  8096  001D62  6E51               	movwf	(??___fladd+2)^0,c
  8097  001D64  504A               	movf	(___fladd@b+3)^0,w,c
  8098  001D66  584E               	subwfb	(___fladd@a+3)^0,w,c
  8099  001D68  6E52               	movwf	(??___fladd+3)^0,c
  8100  001D6A  0EFF               	movlw	255
  8101  001D6C  244F               	addwf	??___fladd^0,w,c
  8102  001D6E  6E47               	movwf	___fladd@b^0,c
  8103  001D70  0EFF               	movlw	255
  8104  001D72  2050               	addwfc	(??___fladd+1)^0,w,c
  8105  001D74  6E48               	movwf	(___fladd@b+1)^0,c
  8106  001D76  0EFF               	movlw	255
  8107  001D78  2051               	addwfc	(??___fladd+2)^0,w,c
  8108  001D7A  6E49               	movwf	(___fladd@b+2)^0,c
  8109  001D7C  0EFF               	movlw	255
  8110  001D7E  2052               	addwfc	(??___fladd+3)^0,w,c
  8111  001D80  6E4A               	movwf	(___fladd@b+3)^0,c
  8112  001D82  0E80               	movlw	128
  8113  001D84  1A53               	xorwf	___fladd@signs^0,f,c
  8114  001D86  6C56               	negf	___fladd@grs^0,c
  8115  001D88  5056               	movf	___fladd@grs^0,w,c
  8116  001D8A  A4D8               	btfss	status,2,c
  8117  001D8C  EFCA  F00E         	goto	u3331
  8118  001D90  EFCC  F00E         	goto	u3330
  8119  001D94                     u3331:
  8120  001D94  EFDC  F00E         	goto	l923
  8121  001D98                     u3330:
  8122  001D98  0E01               	movlw	1
  8123  001D9A  2647               	addwf	___fladd@b^0,f,c
  8124  001D9C  0E00               	movlw	0
  8125  001D9E  2248               	addwfc	(___fladd@b+1)^0,f,c
  8126  001DA0  2249               	addwfc	(___fladd@b+2)^0,f,c
  8127  001DA2  224A               	addwfc	(___fladd@b+3)^0,f,c
  8128  001DA4  EFDC  F00E         	goto	l923
  8129  001DA8                     l3618:
  8130  001DA8  504B               	movf	___fladd@a^0,w,c
  8131  001DAA  5E47               	subwf	___fladd@b^0,f,c
  8132  001DAC  504C               	movf	(___fladd@a+1)^0,w,c
  8133  001DAE  5A48               	subwfb	(___fladd@b+1)^0,f,c
  8134  001DB0  504D               	movf	(___fladd@a+2)^0,w,c
  8135  001DB2  5A49               	subwfb	(___fladd@b+2)^0,f,c
  8136  001DB4  504E               	movf	(___fladd@a+3)^0,w,c
  8137  001DB6  5A4A               	subwfb	(___fladd@b+3)^0,f,c
  8138  001DB8                     l923:
  8139  001DB8  5047               	movf	___fladd@b^0,w,c
  8140  001DBA  1048               	iorwf	(___fladd@b+1)^0,w,c
  8141  001DBC  1049               	iorwf	(___fladd@b+2)^0,w,c
  8142  001DBE  104A               	iorwf	(___fladd@b+3)^0,w,c
  8143  001DC0  A4D8               	btfss	status,2,c
  8144  001DC2  EFE5  F00E         	goto	u3341
  8145  001DC6  EFE7  F00E         	goto	u3340
  8146  001DCA                     u3341:
  8147  001DCA  EF1C  F00F         	goto	l3642
  8148  001DCE                     u3340:
  8149  001DCE  5056               	movf	___fladd@grs^0,w,c
  8150  001DD0  A4D8               	btfss	status,2,c
  8151  001DD2  EFED  F00E         	goto	u3351
  8152  001DD6  EFEF  F00E         	goto	u3350
  8153  001DDA                     u3351:
  8154  001DDA  EF1C  F00F         	goto	l3642
  8155  001DDE                     u3350:
  8156  001DDE  0E00               	movlw	0
  8157  001DE0  6E47               	movwf	?___fladd^0,c
  8158  001DE2  0E00               	movlw	0
  8159  001DE4  6E48               	movwf	(?___fladd+1)^0,c
  8160  001DE6  0E00               	movlw	0
  8161  001DE8  6E49               	movwf	(?___fladd+2)^0,c
  8162  001DEA  0E00               	movlw	0
  8163  001DEC  6E4A               	movwf	(?___fladd+3)^0,c
  8164  001DEE  EFB7  F00F         	goto	l915
  8165  001DF2                     l3626:
  8166  001DF2  90D8               	bcf	status,0,c
  8167  001DF4  3647               	rlcf	___fladd@b^0,f,c
  8168  001DF6  3648               	rlcf	(___fladd@b+1)^0,f,c
  8169  001DF8  3649               	rlcf	(___fladd@b+2)^0,f,c
  8170  001DFA  364A               	rlcf	(___fladd@b+3)^0,f,c
  8171  001DFC  AE56               	btfss	___fladd@grs^0,7,c
  8172  001DFE  EF03  F00F         	goto	u3361
  8173  001E02  EF05  F00F         	goto	u3360
  8174  001E06                     u3361:
  8175  001E06  EF06  F00F         	goto	l3632
  8176  001E0A                     u3360:
  8177  001E0A  8047               	bsf	___fladd@b^0,0,c
  8178  001E0C                     l3632:
  8179  001E0C  A056               	btfss	___fladd@grs^0,0,c
  8180  001E0E  EF0B  F00F         	goto	u3371
  8181  001E12  EF0D  F00F         	goto	u3370
  8182  001E16                     u3371:
  8183  001E16  EF11  F00F         	goto	l3636
  8184  001E1A                     u3370:
  8185  001E1A  80D8               	bsf	status,0,c
  8186  001E1C  3656               	rlcf	___fladd@grs^0,f,c
  8187  001E1E  EF13  F00F         	goto	l3638
  8188  001E22                     l3636:
  8189  001E22  90D8               	bcf	status,0,c
  8190  001E24  3656               	rlcf	___fladd@grs^0,f,c
  8191  001E26                     l3638:
  8192  001E26  5055               	movf	___fladd@bexp^0,w,c
  8193  001E28  B4D8               	btfsc	status,2,c
  8194  001E2A  EF19  F00F         	goto	u3381
  8195  001E2E  EF1B  F00F         	goto	u3380
  8196  001E32                     u3381:
  8197  001E32  EF1C  F00F         	goto	l3642
  8198  001E36                     u3380:
  8199  001E36  0655               	decf	___fladd@bexp^0,f,c
  8200  001E38                     l3642:
  8201  001E38  AE49               	btfss	(___fladd@b+2)^0,7,c
  8202  001E3A  EF21  F00F         	goto	u3391
  8203  001E3E  EF23  F00F         	goto	u3390
  8204  001E42                     u3391:
  8205  001E42  EFF9  F00E         	goto	l3626
  8206  001E46                     u3390:
  8207  001E46                     l3644:
  8208  001E46  0E00               	movlw	0
  8209  001E48  6E54               	movwf	___fladd@aexp^0,c
  8210  001E4A  AE56               	btfss	___fladd@grs^0,7,c
  8211  001E4C  EF2A  F00F         	goto	u3401
  8212  001E50  EF2C  F00F         	goto	u3400
  8213  001E54                     u3401:
  8214  001E54  EF44  F00F         	goto	l932
  8215  001E58                     u3400:
  8216  001E58  C056  F04F         	movff	___fladd@grs,??___fladd
  8217  001E5C  0E7F               	movlw	127
  8218  001E5E  164F               	andwf	??___fladd^0,f,c
  8219  001E60  B4D8               	btfsc	status,2,c
  8220  001E62  EF35  F00F         	goto	u3411
  8221  001E66  EF37  F00F         	goto	u3410
  8222  001E6A                     u3411:
  8223  001E6A  EF3B  F00F         	goto	l933
  8224  001E6E                     u3410:
  8225  001E6E                     l3650:
  8226  001E6E  0E01               	movlw	1
  8227  001E70  6E54               	movwf	___fladd@aexp^0,c
  8228  001E72  EF44  F00F         	goto	l932
  8229  001E76                     l933:
  8230  001E76  A047               	btfss	___fladd@b^0,0,c
  8231  001E78  EF40  F00F         	goto	u3421
  8232  001E7C  EF42  F00F         	goto	u3420
  8233  001E80                     u3421:
  8234  001E80  EF44  F00F         	goto	l932
  8235  001E84                     u3420:
  8236  001E84  EF37  F00F         	goto	l3650
  8237  001E88                     l932:
  8238  001E88  5054               	movf	___fladd@aexp^0,w,c
  8239  001E8A  B4D8               	btfsc	status,2,c
  8240  001E8C  EF4A  F00F         	goto	u3431
  8241  001E90  EF4C  F00F         	goto	u3430
  8242  001E94                     u3431:
  8243  001E94  EF77  F00F         	goto	l3662
  8244  001E98                     u3430:
  8245  001E98  0E01               	movlw	1
  8246  001E9A  2647               	addwf	___fladd@b^0,f,c
  8247  001E9C  0E00               	movlw	0
  8248  001E9E  2248               	addwfc	(___fladd@b+1)^0,f,c
  8249  001EA0  2249               	addwfc	(___fladd@b+2)^0,f,c
  8250  001EA2  224A               	addwfc	(___fladd@b+3)^0,f,c
  8251  001EA4  A04A               	btfss	(___fladd@b+3)^0,0,c
  8252  001EA6  EF57  F00F         	goto	u3441
  8253  001EAA  EF59  F00F         	goto	u3440
  8254  001EAE                     u3441:
  8255  001EAE  EF77  F00F         	goto	l3662
  8256  001EB2                     u3440:
  8257  001EB2  C047  F04F         	movff	___fladd@b,??___fladd
  8258  001EB6  C048  F050         	movff	___fladd@b+1,??___fladd+1
  8259  001EBA  C049  F051         	movff	___fladd@b+2,??___fladd+2
  8260  001EBE  C04A  F052         	movff	___fladd@b+3,??___fladd+3
  8261  001EC2  3452               	rlcf	(??___fladd+3)^0,w,c
  8262  001EC4  3252               	rrcf	(??___fladd+3)^0,f,c
  8263  001EC6  3251               	rrcf	(??___fladd+2)^0,f,c
  8264  001EC8  3250               	rrcf	(??___fladd+1)^0,f,c
  8265  001ECA  324F               	rrcf	??___fladd^0,f,c
  8266  001ECC  C04F  F047         	movff	??___fladd,___fladd@b
  8267  001ED0  C050  F048         	movff	??___fladd+1,___fladd@b+1
  8268  001ED4  C051  F049         	movff	??___fladd+2,___fladd@b+2
  8269  001ED8  C052  F04A         	movff	??___fladd+3,___fladd@b+3
  8270  001EDC  2855               	incf	___fladd@bexp^0,w,c
  8271  001EDE  B4D8               	btfsc	status,2,c
  8272  001EE0  EF74  F00F         	goto	u3451
  8273  001EE4  EF76  F00F         	goto	u3450
  8274  001EE8                     u3451:
  8275  001EE8  EF77  F00F         	goto	l3662
  8276  001EEC                     u3450:
  8277  001EEC  2A55               	incf	___fladd@bexp^0,f,c
  8278  001EEE                     l3662:
  8279  001EEE  2855               	incf	___fladd@bexp^0,w,c
  8280  001EF0  B4D8               	btfsc	status,2,c
  8281  001EF2  EF7D  F00F         	goto	u3461
  8282  001EF6  EF7F  F00F         	goto	u3460
  8283  001EFA                     u3461:
  8284  001EFA  EF87  F00F         	goto	l3666
  8285  001EFE                     u3460:
  8286  001EFE  5055               	movf	___fladd@bexp^0,w,c
  8287  001F00  A4D8               	btfss	status,2,c
  8288  001F02  EF85  F00F         	goto	u3471
  8289  001F06  EF87  F00F         	goto	u3470
  8290  001F0A                     u3471:
  8291  001F0A  EF99  F00F         	goto	l3670
  8292  001F0E                     u3470:
  8293  001F0E                     l3666:
  8294  001F0E  0E00               	movlw	0
  8295  001F10  6E47               	movwf	___fladd@b^0,c
  8296  001F12  0E00               	movlw	0
  8297  001F14  6E48               	movwf	(___fladd@b+1)^0,c
  8298  001F16  0E00               	movlw	0
  8299  001F18  6E49               	movwf	(___fladd@b+2)^0,c
  8300  001F1A  0E00               	movlw	0
  8301  001F1C  6E4A               	movwf	(___fladd@b+3)^0,c
  8302  001F1E  5055               	movf	___fladd@bexp^0,w,c
  8303  001F20  A4D8               	btfss	status,2,c
  8304  001F22  EF95  F00F         	goto	u3481
  8305  001F26  EF97  F00F         	goto	u3480
  8306  001F2A                     u3481:
  8307  001F2A  EF99  F00F         	goto	l3670
  8308  001F2E                     u3480:
  8309  001F2E  0E00               	movlw	0
  8310  001F30  6E53               	movwf	___fladd@signs^0,c
  8311  001F32                     l3670:
  8312  001F32  A055               	btfss	___fladd@bexp^0,0,c
  8313  001F34  EF9E  F00F         	goto	u3491
  8314  001F38  EFA0  F00F         	goto	u3490
  8315  001F3C                     u3491:
  8316  001F3C  EFA3  F00F         	goto	l3674
  8317  001F40                     u3490:
  8318  001F40  8E49               	bsf	(___fladd@b+2)^0,7,c
  8319  001F42  EFA4  F00F         	goto	l3676
  8320  001F46                     l3674:
  8321  001F46  9E49               	bcf	(___fladd@b+2)^0,7,c
  8322  001F48                     l3676:
  8323  001F48  90D8               	bcf	status,0,c
  8324  001F4A  3055               	rrcf	___fladd@bexp^0,w,c
  8325  001F4C  6E4A               	movwf	(___fladd@b+3)^0,c
  8326  001F4E  AE53               	btfss	___fladd@signs^0,7,c
  8327  001F50  EFAC  F00F         	goto	u3501
  8328  001F54  EFAE  F00F         	goto	u3500
  8329  001F58                     u3501:
  8330  001F58  EFAF  F00F         	goto	l3682
  8331  001F5C                     u3500:
  8332  001F5C  8E4A               	bsf	(___fladd@b+3)^0,7,c
  8333  001F5E                     l3682:
  8334  001F5E  C047  F047         	movff	___fladd@b,?___fladd
  8335  001F62  C048  F048         	movff	___fladd@b+1,?___fladd+1
  8336  001F66  C049  F049         	movff	___fladd@b+2,?___fladd+2
  8337  001F6A  C04A  F04A         	movff	___fladd@b+3,?___fladd+3
  8338  001F6E                     l915:
  8339  001F6E  0012               	return		;funcret
  8340  001F70                     __end_of___fladd:
  8341                           	callstack 0
  8342                           
  8343 ;; *************** function ___flneg *****************
  8344 ;; Defined at:
  8345 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  f1              4    0[COMRAM] unsigned char 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  4    0[COMRAM] unsigned char 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8359 ;;      Params:         4       0       0       0       0       0       0       0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8362 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8363 ;;Total ram usage:        4 bytes
  8364 ;; Hardware stack levels used: 1
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_efgtoa
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text27
  8373  00474C                     __ptext27:
  8374                           	callstack 0
  8375  00474C                     ___flneg:
  8376                           	callstack 26
  8377  00474C  5001               	movf	___flneg@f1^0,w,c
  8378  00474E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8379  004750  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8380  004752  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8381  004754  B4D8               	btfsc	status,2,c
  8382  004756  EFAF  F023         	goto	u4191
  8383  00475A  EFB1  F023         	goto	u4190
  8384  00475E                     u4191:
  8385  00475E  EFB9  F023         	goto	l4114
  8386  004762                     u4190:
  8387  004762  0E00               	movlw	0
  8388  004764  1A01               	xorwf	___flneg@f1^0,f,c
  8389  004766  0E00               	movlw	0
  8390  004768  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8391  00476A  0E00               	movlw	0
  8392  00476C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8393  00476E  0E80               	movlw	128
  8394  004770  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8395  004772                     l4114:
  8396  004772  C001  F001         	movff	___flneg@f1,?___flneg
  8397  004776  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8398  00477A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8399  00477E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8400  004782  0012               	return		;funcret
  8401  004784                     __end_of___flneg:
  8402                           	callstack 0
  8403                           
  8404 ;; *************** function ___flmul *****************
  8405 ;; Defined at:
  8406 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;  b               4   20[COMRAM] unsigned char 
  8409 ;;  a               4   24[COMRAM] unsigned char 
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;  prod            4   39[COMRAM] struct .
  8412 ;;  grs             4   33[COMRAM] unsigned long 
  8413 ;;  temp            2   43[COMRAM] struct .
  8414 ;;  bexp            1   38[COMRAM] unsigned char 
  8415 ;;  aexp            1   37[COMRAM] unsigned char 
  8416 ;;  sign            1   32[COMRAM] unsigned char 
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  4   20[COMRAM] unsigned char 
  8419 ;; Registers used:
  8420 ;;		wreg, status,2, status,0, prodl, prodh
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8426 ;;      Params:         8       0       0       0       0       0       0       0       0
  8427 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8428 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8429 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8430 ;;Total ram usage:       25 bytes
  8431 ;; Hardware stack levels used: 1
  8432 ;; This function calls:
  8433 ;;		Nothing
  8434 ;; This function is called by:
  8435 ;;		_ReadADC
  8436 ;;		_efgtoa
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           	psect	text28
  8441  001F70                     __ptext28:
  8442                           	callstack 0
  8443  001F70                     ___flmul:
  8444                           	callstack 26
  8445  001F70  5018               	movf	(___flmul@b+3)^0,w,c
  8446  001F72  0B80               	andlw	128
  8447  001F74  6E21               	movwf	___flmul@sign^0,c
  8448  001F76  5018               	movf	(___flmul@b+3)^0,w,c
  8449  001F78  2418               	addwf	(___flmul@b+3)^0,w,c
  8450  001F7A  6E27               	movwf	___flmul@bexp^0,c
  8451  001F7C  AE17               	btfss	(___flmul@b+2)^0,7,c
  8452  001F7E  EFC3  F00F         	goto	u3801
  8453  001F82  EFC5  F00F         	goto	u3800
  8454  001F86                     u3801:
  8455  001F86  EFC6  F00F         	goto	l3862
  8456  001F8A                     u3800:
  8457  001F8A  8027               	bsf	___flmul@bexp^0,0,c
  8458  001F8C                     l3862:
  8459  001F8C  5027               	movf	___flmul@bexp^0,w,c
  8460  001F8E  B4D8               	btfsc	status,2,c
  8461  001F90  EFCC  F00F         	goto	u3811
  8462  001F94  EFCE  F00F         	goto	u3810
  8463  001F98                     u3811:
  8464  001F98  EFE1  F00F         	goto	l3870
  8465  001F9C                     u3810:
  8466  001F9C  2827               	incf	___flmul@bexp^0,w,c
  8467  001F9E  A4D8               	btfss	status,2,c
  8468  001FA0  EFD4  F00F         	goto	u3821
  8469  001FA4  EFD6  F00F         	goto	u3820
  8470  001FA8                     u3821:
  8471  001FA8  EFDE  F00F         	goto	l3868
  8472  001FAC                     u3820:
  8473  001FAC  0E00               	movlw	0
  8474  001FAE  6E15               	movwf	___flmul@b^0,c
  8475  001FB0  0E00               	movlw	0
  8476  001FB2  6E16               	movwf	(___flmul@b+1)^0,c
  8477  001FB4  0E00               	movlw	0
  8478  001FB6  6E17               	movwf	(___flmul@b+2)^0,c
  8479  001FB8  0E00               	movlw	0
  8480  001FBA  6E18               	movwf	(___flmul@b+3)^0,c
  8481  001FBC                     l3868:
  8482  001FBC  8E17               	bsf	(___flmul@b+2)^0,7,c
  8483  001FBE  EFE9  F00F         	goto	l3872
  8484  001FC2                     l3870:
  8485  001FC2  0E00               	movlw	0
  8486  001FC4  6E15               	movwf	___flmul@b^0,c
  8487  001FC6  0E00               	movlw	0
  8488  001FC8  6E16               	movwf	(___flmul@b+1)^0,c
  8489  001FCA  0E00               	movlw	0
  8490  001FCC  6E17               	movwf	(___flmul@b+2)^0,c
  8491  001FCE  0E00               	movlw	0
  8492  001FD0  6E18               	movwf	(___flmul@b+3)^0,c
  8493  001FD2                     l3872:
  8494  001FD2  501C               	movf	(___flmul@a+3)^0,w,c
  8495  001FD4  0B80               	andlw	128
  8496  001FD6  1A21               	xorwf	___flmul@sign^0,f,c
  8497  001FD8  501C               	movf	(___flmul@a+3)^0,w,c
  8498  001FDA  241C               	addwf	(___flmul@a+3)^0,w,c
  8499  001FDC  6E26               	movwf	___flmul@aexp^0,c
  8500  001FDE  AE1B               	btfss	(___flmul@a+2)^0,7,c
  8501  001FE0  EFF4  F00F         	goto	u3831
  8502  001FE4  EFF6  F00F         	goto	u3830
  8503  001FE8                     u3831:
  8504  001FE8  EFF7  F00F         	goto	l3880
  8505  001FEC                     u3830:
  8506  001FEC  8026               	bsf	___flmul@aexp^0,0,c
  8507  001FEE                     l3880:
  8508  001FEE  5026               	movf	___flmul@aexp^0,w,c
  8509  001FF0  B4D8               	btfsc	status,2,c
  8510  001FF2  EFFD  F00F         	goto	u3841
  8511  001FF6  EFFF  F00F         	goto	u3840
  8512  001FFA                     u3841:
  8513  001FFA  EF12  F010         	goto	l3888
  8514  001FFE                     u3840:
  8515  001FFE  2826               	incf	___flmul@aexp^0,w,c
  8516  002000  A4D8               	btfss	status,2,c
  8517  002002  EF05  F010         	goto	u3851
  8518  002006  EF07  F010         	goto	u3850
  8519  00200A                     u3851:
  8520  00200A  EF0F  F010         	goto	l3886
  8521  00200E                     u3850:
  8522  00200E  0E00               	movlw	0
  8523  002010  6E19               	movwf	___flmul@a^0,c
  8524  002012  0E00               	movlw	0
  8525  002014  6E1A               	movwf	(___flmul@a+1)^0,c
  8526  002016  0E00               	movlw	0
  8527  002018  6E1B               	movwf	(___flmul@a+2)^0,c
  8528  00201A  0E00               	movlw	0
  8529  00201C  6E1C               	movwf	(___flmul@a+3)^0,c
  8530  00201E                     l3886:
  8531  00201E  8E1B               	bsf	(___flmul@a+2)^0,7,c
  8532  002020  EF1A  F010         	goto	l992
  8533  002024                     l3888:
  8534  002024  0E00               	movlw	0
  8535  002026  6E19               	movwf	___flmul@a^0,c
  8536  002028  0E00               	movlw	0
  8537  00202A  6E1A               	movwf	(___flmul@a+1)^0,c
  8538  00202C  0E00               	movlw	0
  8539  00202E  6E1B               	movwf	(___flmul@a+2)^0,c
  8540  002030  0E00               	movlw	0
  8541  002032  6E1C               	movwf	(___flmul@a+3)^0,c
  8542  002034                     l992:
  8543  002034  5026               	movf	___flmul@aexp^0,w,c
  8544  002036  B4D8               	btfsc	status,2,c
  8545  002038  EF20  F010         	goto	u3861
  8546  00203C  EF22  F010         	goto	u3860
  8547  002040                     u3861:
  8548  002040  EF2A  F010         	goto	l3892
  8549  002044                     u3860:
  8550  002044  5027               	movf	___flmul@bexp^0,w,c
  8551  002046  A4D8               	btfss	status,2,c
  8552  002048  EF28  F010         	goto	u3871
  8553  00204C  EF2A  F010         	goto	u3870
  8554  002050                     u3871:
  8555  002050  EF34  F010         	goto	l3896
  8556  002054                     u3870:
  8557  002054                     l3892:
  8558  002054  0E00               	movlw	0
  8559  002056  6E15               	movwf	?___flmul^0,c
  8560  002058  0E00               	movlw	0
  8561  00205A  6E16               	movwf	(?___flmul+1)^0,c
  8562  00205C  0E00               	movlw	0
  8563  00205E  6E17               	movwf	(?___flmul+2)^0,c
  8564  002060  0E00               	movlw	0
  8565  002062  6E18               	movwf	(?___flmul+3)^0,c
  8566  002064  EFCC  F011         	goto	l996
  8567  002068                     l3896:
  8568  002068  501B               	movf	(___flmul@a+2)^0,w,c
  8569  00206A  0215               	mulwf	___flmul@b^0,c
  8570  00206C  CFF3 F02C          	movff	prodl,___flmul@temp
  8571  002070  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8572  002074  502C               	movf	___flmul@temp^0,w,c
  8573  002076  6E22               	movwf	___flmul@grs^0,c
  8574  002078  6A23               	clrf	(___flmul@grs+1)^0,c
  8575  00207A  6A24               	clrf	(___flmul@grs+2)^0,c
  8576  00207C  6A25               	clrf	(___flmul@grs+3)^0,c
  8577  00207E  502D               	movf	(___flmul@temp+1)^0,w,c
  8578  002080  6E28               	movwf	___flmul@prod^0,c
  8579  002082  6A29               	clrf	(___flmul@prod+1)^0,c
  8580  002084  6A2A               	clrf	(___flmul@prod+2)^0,c
  8581  002086  6A2B               	clrf	(___flmul@prod+3)^0,c
  8582  002088  501A               	movf	(___flmul@a+1)^0,w,c
  8583  00208A  0216               	mulwf	(___flmul@b+1)^0,c
  8584  00208C  CFF3 F02C          	movff	prodl,___flmul@temp
  8585  002090  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8586  002094  502C               	movf	___flmul@temp^0,w,c
  8587  002096  2622               	addwf	___flmul@grs^0,f,c
  8588  002098  0E00               	movlw	0
  8589  00209A  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8590  00209C  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8591  00209E  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8592  0020A0  502D               	movf	(___flmul@temp+1)^0,w,c
  8593  0020A2  2628               	addwf	___flmul@prod^0,f,c
  8594  0020A4  0E00               	movlw	0
  8595  0020A6  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8596  0020A8  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8597  0020AA  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8598  0020AC  5019               	movf	___flmul@a^0,w,c
  8599  0020AE  0217               	mulwf	(___flmul@b+2)^0,c
  8600  0020B0  CFF3 F02C          	movff	prodl,___flmul@temp
  8601  0020B4  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8602  0020B8  502C               	movf	___flmul@temp^0,w,c
  8603  0020BA  2622               	addwf	___flmul@grs^0,f,c
  8604  0020BC  0E00               	movlw	0
  8605  0020BE  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8606  0020C0  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8607  0020C2  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8608  0020C4  502D               	movf	(___flmul@temp+1)^0,w,c
  8609  0020C6  2628               	addwf	___flmul@prod^0,f,c
  8610  0020C8  0E00               	movlw	0
  8611  0020CA  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8612  0020CC  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8613  0020CE  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8614  0020D0  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8615  0020D4  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8616  0020D8  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8617  0020DC  6A22               	clrf	___flmul@grs^0,c
  8618  0020DE  5019               	movf	___flmul@a^0,w,c
  8619  0020E0  0216               	mulwf	(___flmul@b+1)^0,c
  8620  0020E2  CFF3 F02C          	movff	prodl,___flmul@temp
  8621  0020E6  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8622  0020EA  502C               	movf	___flmul@temp^0,w,c
  8623  0020EC  2622               	addwf	___flmul@grs^0,f,c
  8624  0020EE  502D               	movf	(___flmul@temp+1)^0,w,c
  8625  0020F0  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8626  0020F2  0E00               	movlw	0
  8627  0020F4  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8628  0020F6  0E00               	movlw	0
  8629  0020F8  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8630  0020FA  501A               	movf	(___flmul@a+1)^0,w,c
  8631  0020FC  0215               	mulwf	___flmul@b^0,c
  8632  0020FE  CFF3 F02C          	movff	prodl,___flmul@temp
  8633  002102  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8634  002106  502C               	movf	___flmul@temp^0,w,c
  8635  002108  2622               	addwf	___flmul@grs^0,f,c
  8636  00210A  502D               	movf	(___flmul@temp+1)^0,w,c
  8637  00210C  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8638  00210E  0E00               	movlw	0
  8639  002110  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8640  002112  0E00               	movlw	0
  8641  002114  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8642  002116  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8643  00211A  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8644  00211E  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8645  002122  6A22               	clrf	___flmul@grs^0,c
  8646  002124  5019               	movf	___flmul@a^0,w,c
  8647  002126  0215               	mulwf	___flmul@b^0,c
  8648  002128  CFF3 F02C          	movff	prodl,___flmul@temp
  8649  00212C  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8650  002130  502C               	movf	___flmul@temp^0,w,c
  8651  002132  2622               	addwf	___flmul@grs^0,f,c
  8652  002134  502D               	movf	(___flmul@temp+1)^0,w,c
  8653  002136  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8654  002138  0E00               	movlw	0
  8655  00213A  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8656  00213C  0E00               	movlw	0
  8657  00213E  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8658  002140  501B               	movf	(___flmul@a+2)^0,w,c
  8659  002142  0216               	mulwf	(___flmul@b+1)^0,c
  8660  002144  CFF3 F02C          	movff	prodl,___flmul@temp
  8661  002148  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8662  00214C  502C               	movf	___flmul@temp^0,w,c
  8663  00214E  2628               	addwf	___flmul@prod^0,f,c
  8664  002150  502D               	movf	(___flmul@temp+1)^0,w,c
  8665  002152  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8666  002154  0E00               	movlw	0
  8667  002156  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8668  002158  0E00               	movlw	0
  8669  00215A  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8670  00215C  501A               	movf	(___flmul@a+1)^0,w,c
  8671  00215E  0217               	mulwf	(___flmul@b+2)^0,c
  8672  002160  CFF3 F02C          	movff	prodl,___flmul@temp
  8673  002164  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8674  002168  502C               	movf	___flmul@temp^0,w,c
  8675  00216A  2628               	addwf	___flmul@prod^0,f,c
  8676  00216C  502D               	movf	(___flmul@temp+1)^0,w,c
  8677  00216E  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8678  002170  0E00               	movlw	0
  8679  002172  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8680  002174  0E00               	movlw	0
  8681  002176  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8682  002178  501B               	movf	(___flmul@a+2)^0,w,c
  8683  00217A  0217               	mulwf	(___flmul@b+2)^0,c
  8684  00217C  CFF3 F02C          	movff	prodl,___flmul@temp
  8685  002180  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8686  002184  502C               	movf	___flmul@temp^0,w,c
  8687  002186  6E1D               	movwf	??___flmul^0,c
  8688  002188  502D               	movf	(___flmul@temp+1)^0,w,c
  8689  00218A  6E1E               	movwf	(??___flmul+1)^0,c
  8690  00218C  6A1F               	clrf	(??___flmul+2)^0,c
  8691  00218E  6A20               	clrf	(??___flmul+3)^0,c
  8692  002190  C01F  F020         	movff	??___flmul+2,??___flmul+3
  8693  002194  C01E  F01F         	movff	??___flmul+1,??___flmul+2
  8694  002198  C01D  F01E         	movff	??___flmul,??___flmul+1
  8695  00219C  6A1D               	clrf	??___flmul^0,c
  8696  00219E  501D               	movf	??___flmul^0,w,c
  8697  0021A0  2628               	addwf	___flmul@prod^0,f,c
  8698  0021A2  501E               	movf	(??___flmul+1)^0,w,c
  8699  0021A4  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8700  0021A6  501F               	movf	(??___flmul+2)^0,w,c
  8701  0021A8  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8702  0021AA  5020               	movf	(??___flmul+3)^0,w,c
  8703  0021AC  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8704  0021AE  C022  F01D         	movff	___flmul@grs,??___flmul
  8705  0021B2  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
  8706  0021B6  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
  8707  0021BA  C025  F020         	movff	___flmul@grs+3,??___flmul+3
  8708  0021BE  0E19               	movlw	25
  8709  0021C0  EFE7  F010         	goto	u3880
  8710  0021C4                     u3885:
  8711  0021C4  90D8               	bcf	status,0,c
  8712  0021C6  3220               	rrcf	(??___flmul+3)^0,f,c
  8713  0021C8  321F               	rrcf	(??___flmul+2)^0,f,c
  8714  0021CA  321E               	rrcf	(??___flmul+1)^0,f,c
  8715  0021CC  321D               	rrcf	??___flmul^0,f,c
  8716  0021CE                     u3880:
  8717  0021CE  2EE8               	decfsz	wreg,f,c
  8718  0021D0  EFE2  F010         	goto	u3885
  8719  0021D4  501D               	movf	??___flmul^0,w,c
  8720  0021D6  2628               	addwf	___flmul@prod^0,f,c
  8721  0021D8  501E               	movf	(??___flmul+1)^0,w,c
  8722  0021DA  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8723  0021DC  501F               	movf	(??___flmul+2)^0,w,c
  8724  0021DE  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8725  0021E0  5020               	movf	(??___flmul+3)^0,w,c
  8726  0021E2  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8727  0021E4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8728  0021E8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8729  0021EC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8730  0021F0  6A22               	clrf	___flmul@grs^0,c
  8731  0021F2  5026               	movf	___flmul@aexp^0,w,c
  8732  0021F4  C027  F01D         	movff	___flmul@bexp,??___flmul
  8733  0021F8  6A1E               	clrf	(??___flmul+1)^0,c
  8734  0021FA  261D               	addwf	??___flmul^0,f,c
  8735  0021FC  0E00               	movlw	0
  8736  0021FE  221E               	addwfc	(??___flmul+1)^0,f,c
  8737  002200  0E82               	movlw	130
  8738  002202  241D               	addwf	??___flmul^0,w,c
  8739  002204  6E2C               	movwf	___flmul@temp^0,c
  8740  002206  0EFF               	movlw	255
  8741  002208  201E               	addwfc	(??___flmul+1)^0,w,c
  8742  00220A  6E2D               	movwf	(___flmul@temp+1)^0,c
  8743  00220C  EF1D  F011         	goto	l3944
  8744  002210                     l3938:
  8745  002210  90D8               	bcf	status,0,c
  8746  002212  3628               	rlcf	___flmul@prod^0,f,c
  8747  002214  3629               	rlcf	(___flmul@prod+1)^0,f,c
  8748  002216  362A               	rlcf	(___flmul@prod+2)^0,f,c
  8749  002218  362B               	rlcf	(___flmul@prod+3)^0,f,c
  8750  00221A  AE25               	btfss	(___flmul@grs+3)^0,7,c
  8751  00221C  EF12  F011         	goto	u3891
  8752  002220  EF14  F011         	goto	u3890
  8753  002224                     u3891:
  8754  002224  EF15  F011         	goto	l999
  8755  002228                     u3890:
  8756  002228  8028               	bsf	___flmul@prod^0,0,c
  8757  00222A                     l999:
  8758  00222A  90D8               	bcf	status,0,c
  8759  00222C  3622               	rlcf	___flmul@grs^0,f,c
  8760  00222E  3623               	rlcf	(___flmul@grs+1)^0,f,c
  8761  002230  3624               	rlcf	(___flmul@grs+2)^0,f,c
  8762  002232  3625               	rlcf	(___flmul@grs+3)^0,f,c
  8763  002234  062C               	decf	___flmul@temp^0,f,c
  8764  002236  A0D8               	btfss	status,0,c
  8765  002238  062D               	decf	(___flmul@temp+1)^0,f,c
  8766  00223A                     l3944:
  8767  00223A  AE2A               	btfss	(___flmul@prod+2)^0,7,c
  8768  00223C  EF22  F011         	goto	u3901
  8769  002240  EF24  F011         	goto	u3900
  8770  002244                     u3901:
  8771  002244  EF08  F011         	goto	l3938
  8772  002248                     u3900:
  8773  002248  0E00               	movlw	0
  8774  00224A  6E26               	movwf	___flmul@aexp^0,c
  8775  00224C  AE25               	btfss	(___flmul@grs+3)^0,7,c
  8776  00224E  EF2B  F011         	goto	u3911
  8777  002252  EF2D  F011         	goto	u3910
  8778  002256                     u3911:
  8779  002256  EF51  F011         	goto	l1001
  8780  00225A                     u3910:
  8781  00225A  0EFF               	movlw	255
  8782  00225C  1422               	andwf	___flmul@grs^0,w,c
  8783  00225E  6E1D               	movwf	??___flmul^0,c
  8784  002260  0EFF               	movlw	255
  8785  002262  1423               	andwf	(___flmul@grs+1)^0,w,c
  8786  002264  6E1E               	movwf	(??___flmul+1)^0,c
  8787  002266  0EFF               	movlw	255
  8788  002268  1424               	andwf	(___flmul@grs+2)^0,w,c
  8789  00226A  6E1F               	movwf	(??___flmul+2)^0,c
  8790  00226C  0E7F               	movlw	127
  8791  00226E  1425               	andwf	(___flmul@grs+3)^0,w,c
  8792  002270  6E20               	movwf	(??___flmul+3)^0,c
  8793  002272  501D               	movf	??___flmul^0,w,c
  8794  002274  101E               	iorwf	(??___flmul+1)^0,w,c
  8795  002276  101F               	iorwf	(??___flmul+2)^0,w,c
  8796  002278  1020               	iorwf	(??___flmul+3)^0,w,c
  8797  00227A  B4D8               	btfsc	status,2,c
  8798  00227C  EF42  F011         	goto	u3921
  8799  002280  EF44  F011         	goto	u3920
  8800  002284                     u3921:
  8801  002284  EF48  F011         	goto	l1002
  8802  002288                     u3920:
  8803  002288                     l3952:
  8804  002288  0E01               	movlw	1
  8805  00228A  6E26               	movwf	___flmul@aexp^0,c
  8806  00228C  EF51  F011         	goto	l1001
  8807  002290                     l1002:
  8808  002290  A028               	btfss	___flmul@prod^0,0,c
  8809  002292  EF4D  F011         	goto	u3931
  8810  002296  EF4F  F011         	goto	u3930
  8811  00229A                     u3931:
  8812  00229A  EF51  F011         	goto	l1001
  8813  00229E                     u3930:
  8814  00229E  EF44  F011         	goto	l3952
  8815  0022A2                     l1001:
  8816  0022A2  5026               	movf	___flmul@aexp^0,w,c
  8817  0022A4  B4D8               	btfsc	status,2,c
  8818  0022A6  EF57  F011         	goto	u3941
  8819  0022AA  EF59  F011         	goto	u3940
  8820  0022AE                     u3941:
  8821  0022AE  EF7D  F011         	goto	l3964
  8822  0022B2                     u3940:
  8823  0022B2  0E01               	movlw	1
  8824  0022B4  2628               	addwf	___flmul@prod^0,f,c
  8825  0022B6  0E00               	movlw	0
  8826  0022B8  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8827  0022BA  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8828  0022BC  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8829  0022BE  A02B               	btfss	(___flmul@prod+3)^0,0,c
  8830  0022C0  EF64  F011         	goto	u3951
  8831  0022C4  EF66  F011         	goto	u3950
  8832  0022C8                     u3951:
  8833  0022C8  EF7D  F011         	goto	l3964
  8834  0022CC                     u3950:
  8835  0022CC  C028  F01D         	movff	___flmul@prod,??___flmul
  8836  0022D0  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
  8837  0022D4  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
  8838  0022D8  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
  8839  0022DC  3420               	rlcf	(??___flmul+3)^0,w,c
  8840  0022DE  3220               	rrcf	(??___flmul+3)^0,f,c
  8841  0022E0  321F               	rrcf	(??___flmul+2)^0,f,c
  8842  0022E2  321E               	rrcf	(??___flmul+1)^0,f,c
  8843  0022E4  321D               	rrcf	??___flmul^0,f,c
  8844  0022E6  C01D  F028         	movff	??___flmul,___flmul@prod
  8845  0022EA  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
  8846  0022EE  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
  8847  0022F2  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
  8848  0022F6  4A2C               	infsnz	___flmul@temp^0,f,c
  8849  0022F8  2A2D               	incf	(___flmul@temp+1)^0,f,c
  8850  0022FA                     l3964:
  8851  0022FA  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  8852  0022FC  EF88  F011         	goto	u3961
  8853  002300  502D               	movf	(___flmul@temp+1)^0,w,c
  8854  002302  E108               	bnz	u3960
  8855  002304  282C               	incf	___flmul@temp^0,w,c
  8856  002306  A0D8               	btfss	status,0,c
  8857  002308  EF88  F011         	goto	u3961
  8858  00230C  EF8A  F011         	goto	u3960
  8859  002310                     u3961:
  8860  002310  EF94  F011         	goto	l3968
  8861  002314                     u3960:
  8862  002314  0E00               	movlw	0
  8863  002316  6E28               	movwf	___flmul@prod^0,c
  8864  002318  0E00               	movlw	0
  8865  00231A  6E29               	movwf	(___flmul@prod+1)^0,c
  8866  00231C  0E80               	movlw	128
  8867  00231E  6E2A               	movwf	(___flmul@prod+2)^0,c
  8868  002320  0E7F               	movlw	127
  8869  002322  6E2B               	movwf	(___flmul@prod+3)^0,c
  8870  002324  EFC2  F011         	goto	l3980
  8871  002328                     l3968:
  8872  002328  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  8873  00232A  EFA1  F011         	goto	u3970
  8874  00232E  502D               	movf	(___flmul@temp+1)^0,w,c
  8875  002330  E106               	bnz	u3971
  8876  002332  042C               	decf	___flmul@temp^0,w,c
  8877  002334  B0D8               	btfsc	status,0,c
  8878  002336  EF9F  F011         	goto	u3971
  8879  00233A  EFA1  F011         	goto	u3970
  8880  00233E                     u3971:
  8881  00233E  EFAD  F011         	goto	l1009
  8882  002342                     u3970:
  8883  002342  0E00               	movlw	0
  8884  002344  6E28               	movwf	___flmul@prod^0,c
  8885  002346  0E00               	movlw	0
  8886  002348  6E29               	movwf	(___flmul@prod+1)^0,c
  8887  00234A  0E00               	movlw	0
  8888  00234C  6E2A               	movwf	(___flmul@prod+2)^0,c
  8889  00234E  0E00               	movlw	0
  8890  002350  6E2B               	movwf	(___flmul@prod+3)^0,c
  8891  002352  0E00               	movlw	0
  8892  002354  6E21               	movwf	___flmul@sign^0,c
  8893  002356  EFC2  F011         	goto	l3980
  8894  00235A                     l1009:
  8895  00235A  C02C  F027         	movff	___flmul@temp,___flmul@bexp
  8896  00235E  0EFF               	movlw	255
  8897  002360  1628               	andwf	___flmul@prod^0,f,c
  8898  002362  0EFF               	movlw	255
  8899  002364  1629               	andwf	(___flmul@prod+1)^0,f,c
  8900  002366  0E7F               	movlw	127
  8901  002368  162A               	andwf	(___flmul@prod+2)^0,f,c
  8902  00236A  0E00               	movlw	0
  8903  00236C  162B               	andwf	(___flmul@prod+3)^0,f,c
  8904  00236E  A027               	btfss	___flmul@bexp^0,0,c
  8905  002370  EFBC  F011         	goto	u3981
  8906  002374  EFBE  F011         	goto	u3980
  8907  002378                     u3981:
  8908  002378  EFBF  F011         	goto	l3978
  8909  00237C                     u3980:
  8910  00237C  8E2A               	bsf	(___flmul@prod+2)^0,7,c
  8911  00237E                     l3978:
  8912  00237E  90D8               	bcf	status,0,c
  8913  002380  3027               	rrcf	___flmul@bexp^0,w,c
  8914  002382  6E2B               	movwf	(___flmul@prod+3)^0,c
  8915  002384                     l3980:
  8916  002384  5021               	movf	___flmul@sign^0,w,c
  8917  002386  122B               	iorwf	(___flmul@prod+3)^0,f,c
  8918  002388  C028  F015         	movff	___flmul@prod,?___flmul
  8919  00238C  C029  F016         	movff	___flmul@prod+1,?___flmul+1
  8920  002390  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
  8921  002394  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
  8922  002398                     l996:
  8923  002398  0012               	return		;funcret
  8924  00239A                     __end_of___flmul:
  8925                           	callstack 0
  8926                           
  8927 ;; *************** function ___flge *****************
  8928 ;; Defined at:
  8929 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;  ff1             4   45[COMRAM] unsigned char 
  8932 ;;  ff2             4   49[COMRAM] unsigned char 
  8933 ;; Auto vars:     Size  Location     Type
  8934 ;;		None
  8935 ;; Return value:  Size  Location     Type
  8936 ;;		None               void
  8937 ;; Registers used:
  8938 ;;		wreg, status,2, status,0
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8944 ;;      Params:         8       0       0       0       0       0       0       0       0
  8945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8946 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8947 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8948 ;;Total ram usage:       12 bytes
  8949 ;; Hardware stack levels used: 1
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		_main
  8954 ;;		_efgtoa
  8955 ;; This function uses a non-reentrant model
  8956 ;;
  8957                           
  8958                           	psect	text29
  8959  003856                     __ptext29:
  8960                           	callstack 0
  8961  003856                     ___flge:
  8962                           	callstack 26
  8963  003856  0E00               	movlw	0
  8964  003858  142E               	andwf	___flge@ff1^0,w,c
  8965  00385A  6E36               	movwf	??___flge^0,c
  8966  00385C  0E00               	movlw	0
  8967  00385E  142F               	andwf	(___flge@ff1+1)^0,w,c
  8968  003860  6E37               	movwf	(??___flge+1)^0,c
  8969  003862  0E80               	movlw	128
  8970  003864  1430               	andwf	(___flge@ff1+2)^0,w,c
  8971  003866  6E38               	movwf	(??___flge+2)^0,c
  8972  003868  0E7F               	movlw	127
  8973  00386A  1431               	andwf	(___flge@ff1+3)^0,w,c
  8974  00386C  6E39               	movwf	(??___flge+3)^0,c
  8975  00386E  5036               	movf	??___flge^0,w,c
  8976  003870  1037               	iorwf	(??___flge+1)^0,w,c
  8977  003872  1038               	iorwf	(??___flge+2)^0,w,c
  8978  003874  1039               	iorwf	(??___flge+3)^0,w,c
  8979  003876  A4D8               	btfss	status,2,c
  8980  003878  EF40  F01C         	goto	u4141
  8981  00387C  EF42  F01C         	goto	u4140
  8982  003880                     u4141:
  8983  003880  EF4A  F01C         	goto	l4092
  8984  003884                     u4140:
  8985  003884  0E00               	movlw	0
  8986  003886  6E2E               	movwf	___flge@ff1^0,c
  8987  003888  0E00               	movlw	0
  8988  00388A  6E2F               	movwf	(___flge@ff1+1)^0,c
  8989  00388C  0E00               	movlw	0
  8990  00388E  6E30               	movwf	(___flge@ff1+2)^0,c
  8991  003890  0E00               	movlw	0
  8992  003892  6E31               	movwf	(___flge@ff1+3)^0,c
  8993  003894                     l4092:
  8994  003894  0E00               	movlw	0
  8995  003896  1432               	andwf	___flge@ff2^0,w,c
  8996  003898  6E36               	movwf	??___flge^0,c
  8997  00389A  0E00               	movlw	0
  8998  00389C  1433               	andwf	(___flge@ff2+1)^0,w,c
  8999  00389E  6E37               	movwf	(??___flge+1)^0,c
  9000  0038A0  0E80               	movlw	128
  9001  0038A2  1434               	andwf	(___flge@ff2+2)^0,w,c
  9002  0038A4  6E38               	movwf	(??___flge+2)^0,c
  9003  0038A6  0E7F               	movlw	127
  9004  0038A8  1435               	andwf	(___flge@ff2+3)^0,w,c
  9005  0038AA  6E39               	movwf	(??___flge+3)^0,c
  9006  0038AC  5036               	movf	??___flge^0,w,c
  9007  0038AE  1037               	iorwf	(??___flge+1)^0,w,c
  9008  0038B0  1038               	iorwf	(??___flge+2)^0,w,c
  9009  0038B2  1039               	iorwf	(??___flge+3)^0,w,c
  9010  0038B4  A4D8               	btfss	status,2,c
  9011  0038B6  EF5F  F01C         	goto	u4151
  9012  0038BA  EF61  F01C         	goto	u4150
  9013  0038BE                     u4151:
  9014  0038BE  EF69  F01C         	goto	l4096
  9015  0038C2                     u4150:
  9016  0038C2  0E00               	movlw	0
  9017  0038C4  6E32               	movwf	___flge@ff2^0,c
  9018  0038C6  0E00               	movlw	0
  9019  0038C8  6E33               	movwf	(___flge@ff2+1)^0,c
  9020  0038CA  0E00               	movlw	0
  9021  0038CC  6E34               	movwf	(___flge@ff2+2)^0,c
  9022  0038CE  0E00               	movlw	0
  9023  0038D0  6E35               	movwf	(___flge@ff2+3)^0,c
  9024  0038D2                     l4096:
  9025  0038D2  AE31               	btfss	(___flge@ff1+3)^0,7,c
  9026  0038D4  EF6E  F01C         	goto	u4161
  9027  0038D8  EF70  F01C         	goto	u4160
  9028  0038DC                     u4161:
  9029  0038DC  EF79  F01C         	goto	l4100
  9030  0038E0                     u4160:
  9031  0038E0  6C2E               	negf	___flge@ff1^0,c
  9032  0038E2  1E2F               	comf	(___flge@ff1+1)^0,f,c
  9033  0038E4  B0D8               	btfsc	status,0,c
  9034  0038E6  2A2F               	incf	(___flge@ff1+1)^0,f,c
  9035  0038E8  1E30               	comf	(___flge@ff1+2)^0,f,c
  9036  0038EA  B0D8               	btfsc	status,0,c
  9037  0038EC  2A30               	incf	(___flge@ff1+2)^0,f,c
  9038  0038EE  0E80               	movlw	128
  9039  0038F0  5631               	subfwb	(___flge@ff1+3)^0,f,c
  9040  0038F2                     l4100:
  9041  0038F2  AE35               	btfss	(___flge@ff2+3)^0,7,c
  9042  0038F4  EF7E  F01C         	goto	u4171
  9043  0038F8  EF80  F01C         	goto	u4170
  9044  0038FC                     u4171:
  9045  0038FC  EF89  F01C         	goto	l643
  9046  003900                     u4170:
  9047  003900  6C32               	negf	___flge@ff2^0,c
  9048  003902  1E33               	comf	(___flge@ff2+1)^0,f,c
  9049  003904  B0D8               	btfsc	status,0,c
  9050  003906  2A33               	incf	(___flge@ff2+1)^0,f,c
  9051  003908  1E34               	comf	(___flge@ff2+2)^0,f,c
  9052  00390A  B0D8               	btfsc	status,0,c
  9053  00390C  2A34               	incf	(___flge@ff2+2)^0,f,c
  9054  00390E  0E80               	movlw	128
  9055  003910  5635               	subfwb	(___flge@ff2+3)^0,f,c
  9056  003912                     l643:
  9057  003912  0E00               	movlw	0
  9058  003914  1A2E               	xorwf	___flge@ff1^0,f,c
  9059  003916  0E00               	movlw	0
  9060  003918  1A2F               	xorwf	(___flge@ff1+1)^0,f,c
  9061  00391A  0E00               	movlw	0
  9062  00391C  1A30               	xorwf	(___flge@ff1+2)^0,f,c
  9063  00391E  0E80               	movlw	128
  9064  003920  1A31               	xorwf	(___flge@ff1+3)^0,f,c
  9065  003922  0E00               	movlw	0
  9066  003924  1A32               	xorwf	___flge@ff2^0,f,c
  9067  003926  0E00               	movlw	0
  9068  003928  1A33               	xorwf	(___flge@ff2+1)^0,f,c
  9069  00392A  0E00               	movlw	0
  9070  00392C  1A34               	xorwf	(___flge@ff2+2)^0,f,c
  9071  00392E  0E80               	movlw	128
  9072  003930  1A35               	xorwf	(___flge@ff2+3)^0,f,c
  9073  003932  5032               	movf	___flge@ff2^0,w,c
  9074  003934  5C2E               	subwf	___flge@ff1^0,w,c
  9075  003936  5033               	movf	(___flge@ff2+1)^0,w,c
  9076  003938  582F               	subwfb	(___flge@ff1+1)^0,w,c
  9077  00393A  5034               	movf	(___flge@ff2+2)^0,w,c
  9078  00393C  5830               	subwfb	(___flge@ff1+2)^0,w,c
  9079  00393E  5035               	movf	(___flge@ff2+3)^0,w,c
  9080  003940  5831               	subwfb	(___flge@ff1+3)^0,w,c
  9081  003942  B0D8               	btfsc	status,0,c
  9082  003944  EFA6  F01C         	goto	u4181
  9083  003948  EFA8  F01C         	goto	u4180
  9084  00394C                     u4181:
  9085  00394C  EFAB  F01C         	goto	l4106
  9086  003950                     u4180:
  9087  003950  90D8               	bcf	status,0,c
  9088  003952  EFAC  F01C         	goto	l648
  9089  003956                     l4106:
  9090  003956  80D8               	bsf	status,0,c
  9091  003958                     l648:
  9092  003958  0012               	return		;funcret
  9093  00395A                     __end_of___flge:
  9094                           	callstack 0
  9095                           
  9096 ;; *************** function ___fleq *****************
  9097 ;; Defined at:
  9098 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  9099 ;; Parameters:    Size  Location     Type
  9100 ;;  ff1             4    0[COMRAM] unsigned char 
  9101 ;;  ff2             4    4[COMRAM] unsigned char 
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;		None
  9104 ;; Return value:  Size  Location     Type
  9105 ;;		None               void
  9106 ;; Registers used:
  9107 ;;		wreg, status,2, status,0
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9113 ;;      Params:         8       0       0       0       0       0       0       0       0
  9114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9115 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9116 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9117 ;;Total ram usage:       12 bytes
  9118 ;; Hardware stack levels used: 1
  9119 ;; This function calls:
  9120 ;;		Nothing
  9121 ;; This function is called by:
  9122 ;;		_efgtoa
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           	psect	text30
  9127  003FF4                     __ptext30:
  9128                           	callstack 0
  9129  003FF4                     ___fleq:
  9130                           	callstack 26
  9131  003FF4  0E00               	movlw	0
  9132  003FF6  1401               	andwf	___fleq@ff1^0,w,c
  9133  003FF8  6E09               	movwf	??___fleq^0,c
  9134  003FFA  0E00               	movlw	0
  9135  003FFC  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9136  003FFE  6E0A               	movwf	(??___fleq+1)^0,c
  9137  004000  0E80               	movlw	128
  9138  004002  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9139  004004  6E0B               	movwf	(??___fleq+2)^0,c
  9140  004006  0E7F               	movlw	127
  9141  004008  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9142  00400A  6E0C               	movwf	(??___fleq+3)^0,c
  9143  00400C  5009               	movf	??___fleq^0,w,c
  9144  00400E  100A               	iorwf	(??___fleq+1)^0,w,c
  9145  004010  100B               	iorwf	(??___fleq+2)^0,w,c
  9146  004012  100C               	iorwf	(??___fleq+3)^0,w,c
  9147  004014  A4D8               	btfss	status,2,c
  9148  004016  EF0F  F020         	goto	u4111
  9149  00401A  EF11  F020         	goto	u4110
  9150  00401E                     u4111:
  9151  00401E  EF19  F020         	goto	l4076
  9152  004022                     u4110:
  9153  004022  0E00               	movlw	0
  9154  004024  6E01               	movwf	___fleq@ff1^0,c
  9155  004026  0E00               	movlw	0
  9156  004028  6E02               	movwf	(___fleq@ff1+1)^0,c
  9157  00402A  0E00               	movlw	0
  9158  00402C  6E03               	movwf	(___fleq@ff1+2)^0,c
  9159  00402E  0E00               	movlw	0
  9160  004030  6E04               	movwf	(___fleq@ff1+3)^0,c
  9161  004032                     l4076:
  9162  004032  0E00               	movlw	0
  9163  004034  1405               	andwf	___fleq@ff2^0,w,c
  9164  004036  6E09               	movwf	??___fleq^0,c
  9165  004038  0E00               	movlw	0
  9166  00403A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9167  00403C  6E0A               	movwf	(??___fleq+1)^0,c
  9168  00403E  0E80               	movlw	128
  9169  004040  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9170  004042  6E0B               	movwf	(??___fleq+2)^0,c
  9171  004044  0E7F               	movlw	127
  9172  004046  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9173  004048  6E0C               	movwf	(??___fleq+3)^0,c
  9174  00404A  5009               	movf	??___fleq^0,w,c
  9175  00404C  100A               	iorwf	(??___fleq+1)^0,w,c
  9176  00404E  100B               	iorwf	(??___fleq+2)^0,w,c
  9177  004050  100C               	iorwf	(??___fleq+3)^0,w,c
  9178  004052  A4D8               	btfss	status,2,c
  9179  004054  EF2E  F020         	goto	u4121
  9180  004058  EF30  F020         	goto	u4120
  9181  00405C                     u4121:
  9182  00405C  EF38  F020         	goto	l4080
  9183  004060                     u4120:
  9184  004060  0E00               	movlw	0
  9185  004062  6E05               	movwf	___fleq@ff2^0,c
  9186  004064  0E00               	movlw	0
  9187  004066  6E06               	movwf	(___fleq@ff2+1)^0,c
  9188  004068  0E00               	movlw	0
  9189  00406A  6E07               	movwf	(___fleq@ff2+2)^0,c
  9190  00406C  0E00               	movlw	0
  9191  00406E  6E08               	movwf	(___fleq@ff2+3)^0,c
  9192  004070                     l4080:
  9193  004070  5005               	movf	___fleq@ff2^0,w,c
  9194  004072  1801               	xorwf	___fleq@ff1^0,w,c
  9195  004074  E10F               	bnz	u4130
  9196  004076  5006               	movf	(___fleq@ff2+1)^0,w,c
  9197  004078  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9198  00407A  E10C               	bnz	u4130
  9199  00407C  5007               	movf	(___fleq@ff2+2)^0,w,c
  9200  00407E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9201  004080  E109               	bnz	u4130
  9202  004082  5008               	movf	(___fleq@ff2+3)^0,w,c
  9203  004084  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9204  004086  B4D8               	btfsc	status,2,c
  9205  004088  EF48  F020         	goto	u4131
  9206  00408C  EF4A  F020         	goto	u4130
  9207  004090                     u4131:
  9208  004090  EF4D  F020         	goto	l4084
  9209  004094                     u4130:
  9210  004094  90D8               	bcf	status,0,c
  9211  004096  EF4E  F020         	goto	l637
  9212  00409A                     l4084:
  9213  00409A  80D8               	bsf	status,0,c
  9214  00409C                     l637:
  9215  00409C  0012               	return		;funcret
  9216  00409E                     __end_of___fleq:
  9217                           	callstack 0
  9218                           
  9219 ;; *************** function ___fldiv *****************
  9220 ;; Defined at:
  9221 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  b               4   45[COMRAM] unsigned char 
  9224 ;;  a               4   49[COMRAM] unsigned char 
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;  grs             4   64[COMRAM] unsigned long 
  9227 ;;  rem             4   57[COMRAM] unsigned long 
  9228 ;;  new_exp         2   62[COMRAM] short 
  9229 ;;  aexp            1   69[COMRAM] unsigned char 
  9230 ;;  bexp            1   68[COMRAM] unsigned char 
  9231 ;;  sign            1   61[COMRAM] unsigned char 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  4   45[COMRAM] unsigned char 
  9234 ;; Registers used:
  9235 ;;		wreg, status,2, status,0
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9241 ;;      Params:         8       0       0       0       0       0       0       0       0
  9242 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9243 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9244 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9245 ;;Total ram usage:       25 bytes
  9246 ;; Hardware stack levels used: 1
  9247 ;; This function calls:
  9248 ;;		Nothing
  9249 ;; This function is called by:
  9250 ;;		_ReadADC
  9251 ;;		_efgtoa
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text31
  9256  00273C                     __ptext31:
  9257                           	callstack 0
  9258  00273C                     ___fldiv:
  9259                           	callstack 26
  9260  00273C  5031               	movf	(___fldiv@b+3)^0,w,c
  9261  00273E  0B80               	andlw	128
  9262  002740  6E3E               	movwf	___fldiv@sign^0,c
  9263  002742  5031               	movf	(___fldiv@b+3)^0,w,c
  9264  002744  2431               	addwf	(___fldiv@b+3)^0,w,c
  9265  002746  6E45               	movwf	___fldiv@bexp^0,c
  9266  002748  AE30               	btfss	(___fldiv@b+2)^0,7,c
  9267  00274A  EFA9  F013         	goto	u3571
  9268  00274E  EFAB  F013         	goto	u3570
  9269  002752                     u3571:
  9270  002752  EFAC  F013         	goto	l3724
  9271  002756                     u3570:
  9272  002756  8045               	bsf	___fldiv@bexp^0,0,c
  9273  002758                     l3724:
  9274  002758  5045               	movf	___fldiv@bexp^0,w,c
  9275  00275A  B4D8               	btfsc	status,2,c
  9276  00275C  EFB2  F013         	goto	u3581
  9277  002760  EFB4  F013         	goto	u3580
  9278  002764                     u3581:
  9279  002764  EFC9  F013         	goto	l3734
  9280  002768                     u3580:
  9281  002768  2845               	incf	___fldiv@bexp^0,w,c
  9282  00276A  A4D8               	btfss	status,2,c
  9283  00276C  EFBA  F013         	goto	u3591
  9284  002770  EFBC  F013         	goto	u3590
  9285  002774                     u3591:
  9286  002774  EFC4  F013         	goto	l3730
  9287  002778                     u3590:
  9288  002778  0E00               	movlw	0
  9289  00277A  6E2E               	movwf	___fldiv@b^0,c
  9290  00277C  0E00               	movlw	0
  9291  00277E  6E2F               	movwf	(___fldiv@b+1)^0,c
  9292  002780  0E00               	movlw	0
  9293  002782  6E30               	movwf	(___fldiv@b+2)^0,c
  9294  002784  0E00               	movlw	0
  9295  002786  6E31               	movwf	(___fldiv@b+3)^0,c
  9296  002788                     l3730:
  9297  002788  8E30               	bsf	(___fldiv@b+2)^0,7,c
  9298  00278A  0E00               	movlw	0
  9299  00278C  6E31               	movwf	(___fldiv@b+3)^0,c
  9300  00278E  EFD1  F013         	goto	l3736
  9301  002792                     l3734:
  9302  002792  0E00               	movlw	0
  9303  002794  6E2E               	movwf	___fldiv@b^0,c
  9304  002796  0E00               	movlw	0
  9305  002798  6E2F               	movwf	(___fldiv@b+1)^0,c
  9306  00279A  0E00               	movlw	0
  9307  00279C  6E30               	movwf	(___fldiv@b+2)^0,c
  9308  00279E  0E00               	movlw	0
  9309  0027A0  6E31               	movwf	(___fldiv@b+3)^0,c
  9310  0027A2                     l3736:
  9311  0027A2  5035               	movf	(___fldiv@a+3)^0,w,c
  9312  0027A4  0B80               	andlw	128
  9313  0027A6  1A3E               	xorwf	___fldiv@sign^0,f,c
  9314  0027A8  5035               	movf	(___fldiv@a+3)^0,w,c
  9315  0027AA  2435               	addwf	(___fldiv@a+3)^0,w,c
  9316  0027AC  6E46               	movwf	___fldiv@aexp^0,c
  9317  0027AE  AE34               	btfss	(___fldiv@a+2)^0,7,c
  9318  0027B0  EFDC  F013         	goto	u3601
  9319  0027B4  EFDE  F013         	goto	u3600
  9320  0027B8                     u3601:
  9321  0027B8  EFDF  F013         	goto	l3744
  9322  0027BC                     u3600:
  9323  0027BC  8046               	bsf	___fldiv@aexp^0,0,c
  9324  0027BE                     l3744:
  9325  0027BE  5046               	movf	___fldiv@aexp^0,w,c
  9326  0027C0  B4D8               	btfsc	status,2,c
  9327  0027C2  EFE5  F013         	goto	u3611
  9328  0027C6  EFE7  F013         	goto	u3610
  9329  0027CA                     u3611:
  9330  0027CA  EFFC  F013         	goto	l3754
  9331  0027CE                     u3610:
  9332  0027CE  2846               	incf	___fldiv@aexp^0,w,c
  9333  0027D0  A4D8               	btfss	status,2,c
  9334  0027D2  EFED  F013         	goto	u3621
  9335  0027D6  EFEF  F013         	goto	u3620
  9336  0027DA                     u3621:
  9337  0027DA  EFF7  F013         	goto	l3750
  9338  0027DE                     u3620:
  9339  0027DE  0E00               	movlw	0
  9340  0027E0  6E32               	movwf	___fldiv@a^0,c
  9341  0027E2  0E00               	movlw	0
  9342  0027E4  6E33               	movwf	(___fldiv@a+1)^0,c
  9343  0027E6  0E00               	movlw	0
  9344  0027E8  6E34               	movwf	(___fldiv@a+2)^0,c
  9345  0027EA  0E00               	movlw	0
  9346  0027EC  6E35               	movwf	(___fldiv@a+3)^0,c
  9347  0027EE                     l3750:
  9348  0027EE  8E34               	bsf	(___fldiv@a+2)^0,7,c
  9349  0027F0  0E00               	movlw	0
  9350  0027F2  6E35               	movwf	(___fldiv@a+3)^0,c
  9351  0027F4  EF04  F014         	goto	l3756
  9352  0027F8                     l3754:
  9353  0027F8  0E00               	movlw	0
  9354  0027FA  6E32               	movwf	___fldiv@a^0,c
  9355  0027FC  0E00               	movlw	0
  9356  0027FE  6E33               	movwf	(___fldiv@a+1)^0,c
  9357  002800  0E00               	movlw	0
  9358  002802  6E34               	movwf	(___fldiv@a+2)^0,c
  9359  002804  0E00               	movlw	0
  9360  002806  6E35               	movwf	(___fldiv@a+3)^0,c
  9361  002808                     l3756:
  9362  002808  5032               	movf	___fldiv@a^0,w,c
  9363  00280A  1033               	iorwf	(___fldiv@a+1)^0,w,c
  9364  00280C  1034               	iorwf	(___fldiv@a+2)^0,w,c
  9365  00280E  1035               	iorwf	(___fldiv@a+3)^0,w,c
  9366  002810  A4D8               	btfss	status,2,c
  9367  002812  EF0D  F014         	goto	u3631
  9368  002816  EF0F  F014         	goto	u3630
  9369  00281A                     u3631:
  9370  00281A  EF27  F014         	goto	l3768
  9371  00281E                     u3630:
  9372  00281E  0E00               	movlw	0
  9373  002820  6E2E               	movwf	___fldiv@b^0,c
  9374  002822  0E00               	movlw	0
  9375  002824  6E2F               	movwf	(___fldiv@b+1)^0,c
  9376  002826  0E00               	movlw	0
  9377  002828  6E30               	movwf	(___fldiv@b+2)^0,c
  9378  00282A  0E00               	movlw	0
  9379  00282C  6E31               	movwf	(___fldiv@b+3)^0,c
  9380  00282E  0E80               	movlw	128
  9381  002830  1230               	iorwf	(___fldiv@b+2)^0,f,c
  9382  002832  0E7F               	movlw	127
  9383  002834  1231               	iorwf	(___fldiv@b+3)^0,f,c
  9384  002836                     l3762:
  9385  002836  503E               	movf	___fldiv@sign^0,w,c
  9386  002838  1231               	iorwf	(___fldiv@b+3)^0,f,c
  9387  00283A  C02E  F02E         	movff	___fldiv@b,?___fldiv
  9388  00283E  C02F  F02F         	movff	___fldiv@b+1,?___fldiv+1
  9389  002842  C030  F030         	movff	___fldiv@b+2,?___fldiv+2
  9390  002846  C031  F031         	movff	___fldiv@b+3,?___fldiv+3
  9391  00284A  EF6A  F015         	goto	l960
  9392  00284E                     l3768:
  9393  00284E  5045               	movf	___fldiv@bexp^0,w,c
  9394  002850  A4D8               	btfss	status,2,c
  9395  002852  EF2D  F014         	goto	u3641
  9396  002856  EF2F  F014         	goto	u3640
  9397  00285A                     u3641:
  9398  00285A  EF39  F014         	goto	l3776
  9399  00285E                     u3640:
  9400  00285E  0E00               	movlw	0
  9401  002860  6E2E               	movwf	?___fldiv^0,c
  9402  002862  0E00               	movlw	0
  9403  002864  6E2F               	movwf	(?___fldiv+1)^0,c
  9404  002866  0E00               	movlw	0
  9405  002868  6E30               	movwf	(?___fldiv+2)^0,c
  9406  00286A  0E00               	movlw	0
  9407  00286C  6E31               	movwf	(?___fldiv+3)^0,c
  9408  00286E  EF6A  F015         	goto	l960
  9409  002872                     l3776:
  9410  002872  5046               	movf	___fldiv@aexp^0,w,c
  9411  002874  C045  F036         	movff	___fldiv@bexp,??___fldiv
  9412  002878  6A37               	clrf	(??___fldiv+1)^0,c
  9413  00287A  5E36               	subwf	??___fldiv^0,f,c
  9414  00287C  0E00               	movlw	0
  9415  00287E  5A37               	subwfb	(??___fldiv+1)^0,f,c
  9416  002880  0E7F               	movlw	127
  9417  002882  2436               	addwf	??___fldiv^0,w,c
  9418  002884  6E3F               	movwf	___fldiv@new_exp^0,c
  9419  002886  0E00               	movlw	0
  9420  002888  2037               	addwfc	(??___fldiv+1)^0,w,c
  9421  00288A  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  9422  00288C  C02E  F03A         	movff	___fldiv@b,___fldiv@rem
  9423  002890  C02F  F03B         	movff	___fldiv@b+1,___fldiv@rem+1
  9424  002894  C030  F03C         	movff	___fldiv@b+2,___fldiv@rem+2
  9425  002898  C031  F03D         	movff	___fldiv@b+3,___fldiv@rem+3
  9426  00289C  0E00               	movlw	0
  9427  00289E  6E2E               	movwf	___fldiv@b^0,c
  9428  0028A0  0E00               	movlw	0
  9429  0028A2  6E2F               	movwf	(___fldiv@b+1)^0,c
  9430  0028A4  0E00               	movlw	0
  9431  0028A6  6E30               	movwf	(___fldiv@b+2)^0,c
  9432  0028A8  0E00               	movlw	0
  9433  0028AA  6E31               	movwf	(___fldiv@b+3)^0,c
  9434  0028AC  0E00               	movlw	0
  9435  0028AE  6E41               	movwf	___fldiv@grs^0,c
  9436  0028B0  0E00               	movlw	0
  9437  0028B2  6E42               	movwf	(___fldiv@grs+1)^0,c
  9438  0028B4  0E00               	movlw	0
  9439  0028B6  6E43               	movwf	(___fldiv@grs+2)^0,c
  9440  0028B8  0E00               	movlw	0
  9441  0028BA  6E44               	movwf	(___fldiv@grs+3)^0,c
  9442  0028BC  0E00               	movlw	0
  9443  0028BE  6E46               	movwf	___fldiv@aexp^0,c
  9444  0028C0  EF9A  F014         	goto	l962
  9445  0028C4                     l3786:
  9446  0028C4  5046               	movf	___fldiv@aexp^0,w,c
  9447  0028C6  B4D8               	btfsc	status,2,c
  9448  0028C8  EF68  F014         	goto	u3651
  9449  0028CC  EF6A  F014         	goto	u3650
  9450  0028D0                     u3651:
  9451  0028D0  EF81  F014         	goto	l3794
  9452  0028D4                     u3650:
  9453  0028D4  90D8               	bcf	status,0,c
  9454  0028D6  363A               	rlcf	___fldiv@rem^0,f,c
  9455  0028D8  363B               	rlcf	(___fldiv@rem+1)^0,f,c
  9456  0028DA  363C               	rlcf	(___fldiv@rem+2)^0,f,c
  9457  0028DC  363D               	rlcf	(___fldiv@rem+3)^0,f,c
  9458  0028DE  90D8               	bcf	status,0,c
  9459  0028E0  362E               	rlcf	___fldiv@b^0,f,c
  9460  0028E2  362F               	rlcf	(___fldiv@b+1)^0,f,c
  9461  0028E4  3630               	rlcf	(___fldiv@b+2)^0,f,c
  9462  0028E6  3631               	rlcf	(___fldiv@b+3)^0,f,c
  9463  0028E8  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  9464  0028EA  EF79  F014         	goto	u3661
  9465  0028EE  EF7B  F014         	goto	u3660
  9466  0028F2                     u3661:
  9467  0028F2  EF7C  F014         	goto	l965
  9468  0028F6                     u3660:
  9469  0028F6  802E               	bsf	___fldiv@b^0,0,c
  9470  0028F8                     l965:
  9471  0028F8  90D8               	bcf	status,0,c
  9472  0028FA  3641               	rlcf	___fldiv@grs^0,f,c
  9473  0028FC  3642               	rlcf	(___fldiv@grs+1)^0,f,c
  9474  0028FE  3643               	rlcf	(___fldiv@grs+2)^0,f,c
  9475  002900  3644               	rlcf	(___fldiv@grs+3)^0,f,c
  9476  002902                     l3794:
  9477  002902  5032               	movf	___fldiv@a^0,w,c
  9478  002904  5C3A               	subwf	___fldiv@rem^0,w,c
  9479  002906  5033               	movf	(___fldiv@a+1)^0,w,c
  9480  002908  583B               	subwfb	(___fldiv@rem+1)^0,w,c
  9481  00290A  5034               	movf	(___fldiv@a+2)^0,w,c
  9482  00290C  583C               	subwfb	(___fldiv@rem+2)^0,w,c
  9483  00290E  5035               	movf	(___fldiv@a+3)^0,w,c
  9484  002910  583D               	subwfb	(___fldiv@rem+3)^0,w,c
  9485  002912  A0D8               	btfss	status,0,c
  9486  002914  EF8E  F014         	goto	u3671
  9487  002918  EF90  F014         	goto	u3670
  9488  00291C                     u3671:
  9489  00291C  EF99  F014         	goto	l3800
  9490  002920                     u3670:
  9491  002920  8C44               	bsf	(___fldiv@grs+3)^0,6,c
  9492  002922  5032               	movf	___fldiv@a^0,w,c
  9493  002924  5E3A               	subwf	___fldiv@rem^0,f,c
  9494  002926  5033               	movf	(___fldiv@a+1)^0,w,c
  9495  002928  5A3B               	subwfb	(___fldiv@rem+1)^0,f,c
  9496  00292A  5034               	movf	(___fldiv@a+2)^0,w,c
  9497  00292C  5A3C               	subwfb	(___fldiv@rem+2)^0,f,c
  9498  00292E  5035               	movf	(___fldiv@a+3)^0,w,c
  9499  002930  5A3D               	subwfb	(___fldiv@rem+3)^0,f,c
  9500  002932                     l3800:
  9501  002932  2A46               	incf	___fldiv@aexp^0,f,c
  9502  002934                     l962:
  9503  002934  0E19               	movlw	25
  9504  002936  6446               	cpfsgt	___fldiv@aexp^0,c
  9505  002938  EFA0  F014         	goto	u3681
  9506  00293C  EFA2  F014         	goto	u3680
  9507  002940                     u3681:
  9508  002940  EF62  F014         	goto	l3786
  9509  002944                     u3680:
  9510  002944  503A               	movf	___fldiv@rem^0,w,c
  9511  002946  103B               	iorwf	(___fldiv@rem+1)^0,w,c
  9512  002948  103C               	iorwf	(___fldiv@rem+2)^0,w,c
  9513  00294A  103D               	iorwf	(___fldiv@rem+3)^0,w,c
  9514  00294C  B4D8               	btfsc	status,2,c
  9515  00294E  EFAB  F014         	goto	u3691
  9516  002952  EFAD  F014         	goto	u3690
  9517  002956                     u3691:
  9518  002956  EFC5  F014         	goto	l3812
  9519  00295A                     u3690:
  9520  00295A  8041               	bsf	___fldiv@grs^0,0,c
  9521  00295C  EFC5  F014         	goto	l3812
  9522  002960                     l3806:
  9523  002960  90D8               	bcf	status,0,c
  9524  002962  362E               	rlcf	___fldiv@b^0,f,c
  9525  002964  362F               	rlcf	(___fldiv@b+1)^0,f,c
  9526  002966  3630               	rlcf	(___fldiv@b+2)^0,f,c
  9527  002968  3631               	rlcf	(___fldiv@b+3)^0,f,c
  9528  00296A  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  9529  00296C  EFBA  F014         	goto	u3701
  9530  002970  EFBC  F014         	goto	u3700
  9531  002974                     u3701:
  9532  002974  EFBD  F014         	goto	l971
  9533  002978                     u3700:
  9534  002978  802E               	bsf	___fldiv@b^0,0,c
  9535  00297A                     l971:
  9536  00297A  90D8               	bcf	status,0,c
  9537  00297C  3641               	rlcf	___fldiv@grs^0,f,c
  9538  00297E  3642               	rlcf	(___fldiv@grs+1)^0,f,c
  9539  002980  3643               	rlcf	(___fldiv@grs+2)^0,f,c
  9540  002982  3644               	rlcf	(___fldiv@grs+3)^0,f,c
  9541  002984  063F               	decf	___fldiv@new_exp^0,f,c
  9542  002986  A0D8               	btfss	status,0,c
  9543  002988  0640               	decf	(___fldiv@new_exp+1)^0,f,c
  9544  00298A                     l3812:
  9545  00298A  AE30               	btfss	(___fldiv@b+2)^0,7,c
  9546  00298C  EFCA  F014         	goto	u3711
  9547  002990  EFCC  F014         	goto	u3710
  9548  002994                     u3711:
  9549  002994  EFB0  F014         	goto	l3806
  9550  002998                     u3710:
  9551  002998  0E00               	movlw	0
  9552  00299A  6E46               	movwf	___fldiv@aexp^0,c
  9553  00299C  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  9554  00299E  EFD3  F014         	goto	u3721
  9555  0029A2  EFD5  F014         	goto	u3720
  9556  0029A6                     u3721:
  9557  0029A6  EFF9  F014         	goto	l973
  9558  0029AA                     u3720:
  9559  0029AA  0EFF               	movlw	255
  9560  0029AC  1441               	andwf	___fldiv@grs^0,w,c
  9561  0029AE  6E36               	movwf	??___fldiv^0,c
  9562  0029B0  0EFF               	movlw	255
  9563  0029B2  1442               	andwf	(___fldiv@grs+1)^0,w,c
  9564  0029B4  6E37               	movwf	(??___fldiv+1)^0,c
  9565  0029B6  0EFF               	movlw	255
  9566  0029B8  1443               	andwf	(___fldiv@grs+2)^0,w,c
  9567  0029BA  6E38               	movwf	(??___fldiv+2)^0,c
  9568  0029BC  0E7F               	movlw	127
  9569  0029BE  1444               	andwf	(___fldiv@grs+3)^0,w,c
  9570  0029C0  6E39               	movwf	(??___fldiv+3)^0,c
  9571  0029C2  5036               	movf	??___fldiv^0,w,c
  9572  0029C4  1037               	iorwf	(??___fldiv+1)^0,w,c
  9573  0029C6  1038               	iorwf	(??___fldiv+2)^0,w,c
  9574  0029C8  1039               	iorwf	(??___fldiv+3)^0,w,c
  9575  0029CA  B4D8               	btfsc	status,2,c
  9576  0029CC  EFEA  F014         	goto	u3731
  9577  0029D0  EFEC  F014         	goto	u3730
  9578  0029D4                     u3731:
  9579  0029D4  EFF0  F014         	goto	l974
  9580  0029D8                     u3730:
  9581  0029D8                     l3820:
  9582  0029D8  0E01               	movlw	1
  9583  0029DA  6E46               	movwf	___fldiv@aexp^0,c
  9584  0029DC  EFF9  F014         	goto	l973
  9585  0029E0                     l974:
  9586  0029E0  A02E               	btfss	___fldiv@b^0,0,c
  9587  0029E2  EFF5  F014         	goto	u3741
  9588  0029E6  EFF7  F014         	goto	u3740
  9589  0029EA                     u3741:
  9590  0029EA  EFF9  F014         	goto	l973
  9591  0029EE                     u3740:
  9592  0029EE  EFEC  F014         	goto	l3820
  9593  0029F2                     l973:
  9594  0029F2  5046               	movf	___fldiv@aexp^0,w,c
  9595  0029F4  B4D8               	btfsc	status,2,c
  9596  0029F6  EFFF  F014         	goto	u3751
  9597  0029FA  EF01  F015         	goto	u3750
  9598  0029FE                     u3751:
  9599  0029FE  EF25  F015         	goto	l3832
  9600  002A02                     u3750:
  9601  002A02  0E01               	movlw	1
  9602  002A04  262E               	addwf	___fldiv@b^0,f,c
  9603  002A06  0E00               	movlw	0
  9604  002A08  222F               	addwfc	(___fldiv@b+1)^0,f,c
  9605  002A0A  2230               	addwfc	(___fldiv@b+2)^0,f,c
  9606  002A0C  2231               	addwfc	(___fldiv@b+3)^0,f,c
  9607  002A0E  A031               	btfss	(___fldiv@b+3)^0,0,c
  9608  002A10  EF0C  F015         	goto	u3761
  9609  002A14  EF0E  F015         	goto	u3760
  9610  002A18                     u3761:
  9611  002A18  EF25  F015         	goto	l3832
  9612  002A1C                     u3760:
  9613  002A1C  C02E  F036         	movff	___fldiv@b,??___fldiv
  9614  002A20  C02F  F037         	movff	___fldiv@b+1,??___fldiv+1
  9615  002A24  C030  F038         	movff	___fldiv@b+2,??___fldiv+2
  9616  002A28  C031  F039         	movff	___fldiv@b+3,??___fldiv+3
  9617  002A2C  3439               	rlcf	(??___fldiv+3)^0,w,c
  9618  002A2E  3239               	rrcf	(??___fldiv+3)^0,f,c
  9619  002A30  3238               	rrcf	(??___fldiv+2)^0,f,c
  9620  002A32  3237               	rrcf	(??___fldiv+1)^0,f,c
  9621  002A34  3236               	rrcf	??___fldiv^0,f,c
  9622  002A36  C036  F02E         	movff	??___fldiv,___fldiv@b
  9623  002A3A  C037  F02F         	movff	??___fldiv+1,___fldiv@b+1
  9624  002A3E  C038  F030         	movff	??___fldiv+2,___fldiv@b+2
  9625  002A42  C039  F031         	movff	??___fldiv+3,___fldiv@b+3
  9626  002A46  4A3F               	infsnz	___fldiv@new_exp^0,f,c
  9627  002A48  2A40               	incf	(___fldiv@new_exp+1)^0,f,c
  9628  002A4A                     l3832:
  9629  002A4A  BE40               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9630  002A4C  EF30  F015         	goto	u3771
  9631  002A50  5040               	movf	(___fldiv@new_exp+1)^0,w,c
  9632  002A52  E108               	bnz	u3770
  9633  002A54  283F               	incf	___fldiv@new_exp^0,w,c
  9634  002A56  A0D8               	btfss	status,0,c
  9635  002A58  EF30  F015         	goto	u3771
  9636  002A5C  EF32  F015         	goto	u3770
  9637  002A60                     u3771:
  9638  002A60  EF3D  F015         	goto	l3836
  9639  002A64                     u3770:
  9640  002A64  0E00               	movlw	0
  9641  002A66  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  9642  002A68  683F               	setf	___fldiv@new_exp^0,c
  9643  002A6A  0E00               	movlw	0
  9644  002A6C  6E2E               	movwf	___fldiv@b^0,c
  9645  002A6E  0E00               	movlw	0
  9646  002A70  6E2F               	movwf	(___fldiv@b+1)^0,c
  9647  002A72  0E00               	movlw	0
  9648  002A74  6E30               	movwf	(___fldiv@b+2)^0,c
  9649  002A76  0E00               	movlw	0
  9650  002A78  6E31               	movwf	(___fldiv@b+3)^0,c
  9651  002A7A                     l3836:
  9652  002A7A  BE40               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9653  002A7C  EF4A  F015         	goto	u3780
  9654  002A80  5040               	movf	(___fldiv@new_exp+1)^0,w,c
  9655  002A82  E106               	bnz	u3781
  9656  002A84  043F               	decf	___fldiv@new_exp^0,w,c
  9657  002A86  B0D8               	btfsc	status,0,c
  9658  002A88  EF48  F015         	goto	u3781
  9659  002A8C  EF4A  F015         	goto	u3780
  9660  002A90                     u3781:
  9661  002A90  EF58  F015         	goto	l3840
  9662  002A94                     u3780:
  9663  002A94  0E00               	movlw	0
  9664  002A96  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  9665  002A98  0E00               	movlw	0
  9666  002A9A  6E3F               	movwf	___fldiv@new_exp^0,c
  9667  002A9C  0E00               	movlw	0
  9668  002A9E  6E2E               	movwf	___fldiv@b^0,c
  9669  002AA0  0E00               	movlw	0
  9670  002AA2  6E2F               	movwf	(___fldiv@b+1)^0,c
  9671  002AA4  0E00               	movlw	0
  9672  002AA6  6E30               	movwf	(___fldiv@b+2)^0,c
  9673  002AA8  0E00               	movlw	0
  9674  002AAA  6E31               	movwf	(___fldiv@b+3)^0,c
  9675  002AAC  0E00               	movlw	0
  9676  002AAE  6E3E               	movwf	___fldiv@sign^0,c
  9677  002AB0                     l3840:
  9678  002AB0  C03F  F045         	movff	___fldiv@new_exp,___fldiv@bexp
  9679  002AB4  A045               	btfss	___fldiv@bexp^0,0,c
  9680  002AB6  EF5F  F015         	goto	u3791
  9681  002ABA  EF61  F015         	goto	u3790
  9682  002ABE                     u3791:
  9683  002ABE  EF64  F015         	goto	l3846
  9684  002AC2                     u3790:
  9685  002AC2  8E30               	bsf	(___fldiv@b+2)^0,7,c
  9686  002AC4  EF65  F015         	goto	l3848
  9687  002AC8                     l3846:
  9688  002AC8  9E30               	bcf	(___fldiv@b+2)^0,7,c
  9689  002ACA                     l3848:
  9690  002ACA  90D8               	bcf	status,0,c
  9691  002ACC  3045               	rrcf	___fldiv@bexp^0,w,c
  9692  002ACE  6E31               	movwf	(___fldiv@b+3)^0,c
  9693  002AD0  EF1B  F014         	goto	l3762
  9694  002AD4                     l960:
  9695  002AD4  0012               	return		;funcret
  9696  002AD6                     __end_of___fldiv:
  9697                           	callstack 0
  9698                           
  9699 ;; *************** function ___awmod *****************
  9700 ;; Defined at:
  9701 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  dividend        2    0[COMRAM] int 
  9704 ;;  divisor         2    2[COMRAM] int 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;  sign            1    5[COMRAM] unsigned char 
  9707 ;;  counter         1    4[COMRAM] unsigned char 
  9708 ;; Return value:  Size  Location     Type
  9709 ;;                  2    0[COMRAM] int 
  9710 ;; Registers used:
  9711 ;;		wreg, status,2, status,0
  9712 ;; Tracked objects:
  9713 ;;		On entry : 0/0
  9714 ;;		On exit  : 0/0
  9715 ;;		Unchanged: 0/0
  9716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9717 ;;      Params:         4       0       0       0       0       0       0       0       0
  9718 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9720 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9721 ;;Total ram usage:        6 bytes
  9722 ;; Hardware stack levels used: 1
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_efgtoa
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text32
  9731  003F44                     __ptext32:
  9732                           	callstack 0
  9733  003F44                     ___awmod:
  9734                           	callstack 26
  9735  003F44  0E00               	movlw	0
  9736  003F46  6E06               	movwf	___awmod@sign^0,c
  9737  003F48  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9738  003F4A  EFAB  F01F         	goto	u4050
  9739  003F4E  EFA9  F01F         	goto	u4051
  9740  003F52                     u4051:
  9741  003F52  EFB1  F01F         	goto	l4044
  9742  003F56                     u4050:
  9743  003F56  6C01               	negf	___awmod@dividend^0,c
  9744  003F58  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9745  003F5A  B0D8               	btfsc	status,0,c
  9746  003F5C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9747  003F5E  0E01               	movlw	1
  9748  003F60  6E06               	movwf	___awmod@sign^0,c
  9749  003F62                     l4044:
  9750  003F62  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9751  003F64  EFB8  F01F         	goto	u4060
  9752  003F68  EFB6  F01F         	goto	u4061
  9753  003F6C                     u4061:
  9754  003F6C  EFBC  F01F         	goto	l4048
  9755  003F70                     u4060:
  9756  003F70  6C03               	negf	___awmod@divisor^0,c
  9757  003F72  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9758  003F74  B0D8               	btfsc	status,0,c
  9759  003F76  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9760  003F78                     l4048:
  9761  003F78  5003               	movf	___awmod@divisor^0,w,c
  9762  003F7A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9763  003F7C  B4D8               	btfsc	status,2,c
  9764  003F7E  EFC3  F01F         	goto	u4071
  9765  003F82  EFC5  F01F         	goto	u4070
  9766  003F86                     u4071:
  9767  003F86  EFE9  F01F         	goto	l4064
  9768  003F8A                     u4070:
  9769  003F8A  0E01               	movlw	1
  9770  003F8C  6E05               	movwf	___awmod@counter^0,c
  9771  003F8E  EFCD  F01F         	goto	l4054
  9772  003F92                     l4052:
  9773  003F92  90D8               	bcf	status,0,c
  9774  003F94  3603               	rlcf	___awmod@divisor^0,f,c
  9775  003F96  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9776  003F98  2A05               	incf	___awmod@counter^0,f,c
  9777  003F9A                     l4054:
  9778  003F9A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9779  003F9C  EFD2  F01F         	goto	u4081
  9780  003FA0  EFD4  F01F         	goto	u4080
  9781  003FA4                     u4081:
  9782  003FA4  EFC9  F01F         	goto	l4052
  9783  003FA8                     u4080:
  9784  003FA8                     l4056:
  9785  003FA8  5003               	movf	___awmod@divisor^0,w,c
  9786  003FAA  5C01               	subwf	___awmod@dividend^0,w,c
  9787  003FAC  5004               	movf	(___awmod@divisor+1)^0,w,c
  9788  003FAE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9789  003FB0  A0D8               	btfss	status,0,c
  9790  003FB2  EFDD  F01F         	goto	u4091
  9791  003FB6  EFDF  F01F         	goto	u4090
  9792  003FBA                     u4091:
  9793  003FBA  EFE3  F01F         	goto	l4060
  9794  003FBE                     u4090:
  9795  003FBE  5003               	movf	___awmod@divisor^0,w,c
  9796  003FC0  5E01               	subwf	___awmod@dividend^0,f,c
  9797  003FC2  5004               	movf	(___awmod@divisor+1)^0,w,c
  9798  003FC4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9799  003FC6                     l4060:
  9800  003FC6  90D8               	bcf	status,0,c
  9801  003FC8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9802  003FCA  3203               	rrcf	___awmod@divisor^0,f,c
  9803  003FCC  2E05               	decfsz	___awmod@counter^0,f,c
  9804  003FCE  EFD4  F01F         	goto	l4056
  9805  003FD2                     l4064:
  9806  003FD2  5006               	movf	___awmod@sign^0,w,c
  9807  003FD4  B4D8               	btfsc	status,2,c
  9808  003FD6  EFEF  F01F         	goto	u4101
  9809  003FDA  EFF1  F01F         	goto	u4100
  9810  003FDE                     u4101:
  9811  003FDE  EFF5  F01F         	goto	l4068
  9812  003FE2                     u4100:
  9813  003FE2  6C01               	negf	___awmod@dividend^0,c
  9814  003FE4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9815  003FE6  B0D8               	btfsc	status,0,c
  9816  003FE8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9817  003FEA                     l4068:
  9818  003FEA  C001  F001         	movff	___awmod@dividend,?___awmod
  9819  003FEE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9820  003FF2  0012               	return		;funcret
  9821  003FF4                     __end_of___awmod:
  9822                           	callstack 0
  9823                           
  9824 ;; *************** function ___awdiv *****************
  9825 ;; Defined at:
  9826 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  dividend        2    0[COMRAM] int 
  9829 ;;  divisor         2    2[COMRAM] int 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;  quotient        2    6[COMRAM] int 
  9832 ;;  sign            1    5[COMRAM] unsigned char 
  9833 ;;  counter         1    4[COMRAM] unsigned char 
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  2    0[COMRAM] int 
  9836 ;; Registers used:
  9837 ;;		wreg, status,2, status,0
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9843 ;;      Params:         4       0       0       0       0       0       0       0       0
  9844 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9846 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9847 ;;Total ram usage:        8 bytes
  9848 ;; Hardware stack levels used: 1
  9849 ;; This function calls:
  9850 ;;		Nothing
  9851 ;; This function is called by:
  9852 ;;		_efgtoa
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           	psect	text33
  9857  003DBC                     __ptext33:
  9858                           	callstack 0
  9859  003DBC                     ___awdiv:
  9860                           	callstack 26
  9861  003DBC  0E00               	movlw	0
  9862  003DBE  6E06               	movwf	___awdiv@sign^0,c
  9863  003DC0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9864  003DC2  EFE7  F01E         	goto	u3990
  9865  003DC6  EFE5  F01E         	goto	u3991
  9866  003DCA                     u3991:
  9867  003DCA  EFED  F01E         	goto	l4000
  9868  003DCE                     u3990:
  9869  003DCE  6C03               	negf	___awdiv@divisor^0,c
  9870  003DD0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9871  003DD2  B0D8               	btfsc	status,0,c
  9872  003DD4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9873  003DD6  0E01               	movlw	1
  9874  003DD8  6E06               	movwf	___awdiv@sign^0,c
  9875  003DDA                     l4000:
  9876  003DDA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9877  003DDC  EFF4  F01E         	goto	u4000
  9878  003DE0  EFF2  F01E         	goto	u4001
  9879  003DE4                     u4001:
  9880  003DE4  EFFA  F01E         	goto	l4006
  9881  003DE8                     u4000:
  9882  003DE8  6C01               	negf	___awdiv@dividend^0,c
  9883  003DEA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9884  003DEC  B0D8               	btfsc	status,0,c
  9885  003DEE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9886  003DF0  0E01               	movlw	1
  9887  003DF2  1A06               	xorwf	___awdiv@sign^0,f,c
  9888  003DF4                     l4006:
  9889  003DF4  0E00               	movlw	0
  9890  003DF6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9891  003DF8  0E00               	movlw	0
  9892  003DFA  6E07               	movwf	___awdiv@quotient^0,c
  9893  003DFC  5003               	movf	___awdiv@divisor^0,w,c
  9894  003DFE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9895  003E00  B4D8               	btfsc	status,2,c
  9896  003E02  EF05  F01F         	goto	u4011
  9897  003E06  EF07  F01F         	goto	u4010
  9898  003E0A                     u4011:
  9899  003E0A  EF2F  F01F         	goto	l4028
  9900  003E0E                     u4010:
  9901  003E0E  0E01               	movlw	1
  9902  003E10  6E05               	movwf	___awdiv@counter^0,c
  9903  003E12  EF0F  F01F         	goto	l4014
  9904  003E16                     l4012:
  9905  003E16  90D8               	bcf	status,0,c
  9906  003E18  3603               	rlcf	___awdiv@divisor^0,f,c
  9907  003E1A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9908  003E1C  2A05               	incf	___awdiv@counter^0,f,c
  9909  003E1E                     l4014:
  9910  003E1E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9911  003E20  EF14  F01F         	goto	u4021
  9912  003E24  EF16  F01F         	goto	u4020
  9913  003E28                     u4021:
  9914  003E28  EF0B  F01F         	goto	l4012
  9915  003E2C                     u4020:
  9916  003E2C                     l4016:
  9917  003E2C  90D8               	bcf	status,0,c
  9918  003E2E  3607               	rlcf	___awdiv@quotient^0,f,c
  9919  003E30  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9920  003E32  5003               	movf	___awdiv@divisor^0,w,c
  9921  003E34  5C01               	subwf	___awdiv@dividend^0,w,c
  9922  003E36  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9923  003E38  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9924  003E3A  A0D8               	btfss	status,0,c
  9925  003E3C  EF22  F01F         	goto	u4031
  9926  003E40  EF24  F01F         	goto	u4030
  9927  003E44                     u4031:
  9928  003E44  EF29  F01F         	goto	l4024
  9929  003E48                     u4030:
  9930  003E48  5003               	movf	___awdiv@divisor^0,w,c
  9931  003E4A  5E01               	subwf	___awdiv@dividend^0,f,c
  9932  003E4C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9933  003E4E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9934  003E50  8007               	bsf	___awdiv@quotient^0,0,c
  9935  003E52                     l4024:
  9936  003E52  90D8               	bcf	status,0,c
  9937  003E54  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9938  003E56  3203               	rrcf	___awdiv@divisor^0,f,c
  9939  003E58  2E05               	decfsz	___awdiv@counter^0,f,c
  9940  003E5A  EF16  F01F         	goto	l4016
  9941  003E5E                     l4028:
  9942  003E5E  5006               	movf	___awdiv@sign^0,w,c
  9943  003E60  B4D8               	btfsc	status,2,c
  9944  003E62  EF35  F01F         	goto	u4041
  9945  003E66  EF37  F01F         	goto	u4040
  9946  003E6A                     u4041:
  9947  003E6A  EF3B  F01F         	goto	l4032
  9948  003E6E                     u4040:
  9949  003E6E  6C07               	negf	___awdiv@quotient^0,c
  9950  003E70  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9951  003E72  B0D8               	btfsc	status,0,c
  9952  003E74  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9953  003E76                     l4032:
  9954  003E76  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9955  003E7A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9956  003E7E  0012               	return		;funcret
  9957  003E80                     __end_of___awdiv:
  9958                           	callstack 0
  9959                           
  9960 ;; *************** function _atoi *****************
  9961 ;; Defined at:
  9962 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9965 ;;		 -> STR_14(4), STR_13(4), STR_12(4), STR_11(4), 
  9966 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  9967 ;;		 -> STR_6(4), STR_3(7), STR_2(7), STR_1(7), 
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;  n               2   20[COMRAM] int 
  9970 ;;  neg             2   13[COMRAM] int 
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  2    7[COMRAM] int 
  9973 ;; Registers used:
  9974 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9975 ;; Tracked objects:
  9976 ;;		On entry : 0/0
  9977 ;;		On exit  : 0/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9980 ;;      Params:         2       0       0       0       0       0       0       0       0
  9981 ;;      Locals:         9       0       0       0       0       0       0       0       0
  9982 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9983 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9984 ;;Total ram usage:       15 bytes
  9985 ;; Hardware stack levels used: 1
  9986 ;; Hardware stack levels required when called: 1
  9987 ;; This function calls:
  9988 ;;		___wmul
  9989 ;;		_isdigit
  9990 ;;		_isspace
  9991 ;; This function is called by:
  9992 ;;		_vfpfcnvrt
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996                           	psect	text34
  9997  003466                     __ptext34:
  9998                           	callstack 0
  9999  003466                     _atoi:
 10000                           	callstack 26
 10001  003466  0E00               	movlw	0
 10002  003468  6E16               	movwf	(atoi@n+1)^0,c
 10003  00346A  0E00               	movlw	0
 10004  00346C  6E15               	movwf	atoi@n^0,c
 10005  00346E  0E00               	movlw	0
 10006  003470  6E0F               	movwf	(atoi@neg+1)^0,c
 10007  003472  0E00               	movlw	0
 10008  003474  6E0E               	movwf	atoi@neg^0,c
 10009  003476  EF3F  F01A         	goto	l4674
 10010  00347A                     l4672:
 10011  00347A  4A08               	infsnz	atoi@s^0,f,c
 10012  00347C  2A09               	incf	(atoi@s+1)^0,f,c
 10013  00347E                     l4674:
 10014  00347E  0E01               	movlw	1
 10015  003480  6E14               	movwf	_atoi$1471^0,c
 10016  003482  C008  FFF6         	movff	atoi@s,tblptrl
 10017  003486  C009  FFF7         	movff	atoi@s+1,tblptrh
 10018  00348A                     	if	0	;tblptru may be non-zero
 10019  00348A                     	endif
 10020  00348A                     	if	0	;tblptru may be non-zero
 10021  00348A                     	endif
 10022  00348A  0008               	tblrd		*
 10023  00348C  50F5               	movf	tablat,w,c
 10024  00348E  0A20               	xorlw	32
 10025  003490  B4D8               	btfsc	status,2,c
 10026  003492  EF4D  F01A         	goto	u5361
 10027  003496  EF4F  F01A         	goto	u5360
 10028  00349A                     u5361:
 10029  00349A  EF6C  F01A         	goto	l4682
 10030  00349E                     u5360:
 10031  00349E  0EF7               	movlw	247
 10032  0034A0  6E0A               	movwf	??_atoi^0,c
 10033  0034A2  0EFF               	movlw	255
 10034  0034A4  6E0B               	movwf	(??_atoi+1)^0,c
 10035  0034A6  C008  FFF6         	movff	atoi@s,tblptrl
 10036  0034AA  C009  FFF7         	movff	atoi@s+1,tblptrh
 10037  0034AE                     	if	0	;tblptru may be non-zero
 10038  0034AE                     	endif
 10039  0034AE                     	if	0	;tblptru may be non-zero
 10040  0034AE                     	endif
 10041  0034AE  0008               	tblrd		*
 10042  0034B0  50F5               	movf	tablat,w,c
 10043  0034B2  6E0C               	movwf	(??_atoi+2)^0,c
 10044  0034B4  6A0D               	clrf	(??_atoi+3)^0,c
 10045  0034B6  500A               	movf	??_atoi^0,w,c
 10046  0034B8  260C               	addwf	(??_atoi+2)^0,f,c
 10047  0034BA  500B               	movf	(??_atoi+1)^0,w,c
 10048  0034BC  220D               	addwfc	(??_atoi+3)^0,f,c
 10049  0034BE  500D               	movf	(??_atoi+3)^0,w,c
 10050  0034C0  E109               	bnz	u5370
 10051  0034C2  0E05               	movlw	5
 10052  0034C4  5C0C               	subwf	(??_atoi+2)^0,w,c
 10053  0034C6  A0D8               	btfss	status,0,c
 10054  0034C8  EF68  F01A         	goto	u5371
 10055  0034CC  EF6A  F01A         	goto	u5370
 10056  0034D0                     u5371:
 10057  0034D0  EF6C  F01A         	goto	l4682
 10058  0034D4                     u5370:
 10059  0034D4  0E00               	movlw	0
 10060  0034D6  6E14               	movwf	_atoi$1471^0,c
 10061  0034D8                     l4682:
 10062  0034D8  C014  F010         	movff	_atoi$1471,_atoi$1470
 10063  0034DC  6A11               	clrf	(_atoi$1470+1)^0,c
 10064  0034DE  5010               	movf	_atoi$1470^0,w,c
 10065  0034E0  1011               	iorwf	(_atoi$1470+1)^0,w,c
 10066  0034E2  A4D8               	btfss	status,2,c
 10067  0034E4  EF76  F01A         	goto	u5381
 10068  0034E8  EF78  F01A         	goto	u5380
 10069  0034EC                     u5381:
 10070  0034EC  EF3D  F01A         	goto	l4672
 10071  0034F0                     u5380:
 10072  0034F0  EF82  F01A         	goto	l4692
 10073  0034F4                     l4688:
 10074  0034F4  0E00               	movlw	0
 10075  0034F6  6E0F               	movwf	(atoi@neg+1)^0,c
 10076  0034F8  0E01               	movlw	1
 10077  0034FA  6E0E               	movwf	atoi@neg^0,c
 10078  0034FC                     l4690:
 10079  0034FC  4A08               	infsnz	atoi@s^0,f,c
 10080  0034FE  2A09               	incf	(atoi@s+1)^0,f,c
 10081  003500  EFB7  F01A         	goto	l4698
 10082  003504                     l4692:
 10083  003504  C008  FFF6         	movff	atoi@s,tblptrl
 10084  003508  C009  FFF7         	movff	atoi@s+1,tblptrh
 10085  00350C                     	if	0	;tblptru may be non-zero
 10086  00350C                     	endif
 10087  00350C                     	if	0	;tblptru may be non-zero
 10088  00350C                     	endif
 10089  00350C  0008               	tblrd		*
 10090  00350E  50F5               	movf	tablat,w,c
 10091  003510  6E0A               	movwf	??_atoi^0,c
 10092  003512  6A0B               	clrf	(??_atoi+1)^0,c
 10093                           
 10094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10095                           ; Switch size 1, requested type "simple"
 10096                           ; Number of cases is 1, Range of values is 0 to 0
 10097                           ; switch strategies available:
 10098                           ; Name         Instructions Cycles
 10099                           ; simple_byte            4     3 (average)
 10100                           ;	Chosen strategy is simple_byte
 10101  003514  500B               	movf	(??_atoi+1)^0,w,c
 10102  003516  0A00               	xorlw	0	; case 0
 10103  003518  B4D8               	btfsc	status,2,c
 10104  00351A  EF91  F01A         	goto	l5474
 10105  00351E  EFB7  F01A         	goto	l4698
 10106  003522                     l5474:
 10107                           
 10108                           ; Switch size 1, requested type "simple"
 10109                           ; Number of cases is 2, Range of values is 43 to 45
 10110                           ; switch strategies available:
 10111                           ; Name         Instructions Cycles
 10112                           ; simple_byte            7     4 (average)
 10113                           ;	Chosen strategy is simple_byte
 10114  003522  500A               	movf	??_atoi^0,w,c
 10115  003524  0A2B               	xorlw	43	; case 43
 10116  003526  B4D8               	btfsc	status,2,c
 10117  003528  EF7E  F01A         	goto	l4690
 10118  00352C  0A06               	xorlw	6	; case 45
 10119  00352E  B4D8               	btfsc	status,2,c
 10120  003530  EF7A  F01A         	goto	l4688
 10121  003534  EFB7  F01A         	goto	l4698
 10122  003538                     l4694:
 10123  003538  C015  F001         	movff	atoi@n,___wmul@multiplier
 10124  00353C  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10125  003540  0E00               	movlw	0
 10126  003542  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10127  003544  0E0A               	movlw	10
 10128  003546  6E03               	movwf	___wmul@multiplicand^0,c
 10129  003548  EC74  F024         	call	___wmul	;wreg free
 10130  00354C  C008  FFF6         	movff	atoi@s,tblptrl
 10131  003550  C009  FFF7         	movff	atoi@s+1,tblptrh
 10132  003554                     	if	0	;tblptru may be non-zero
 10133  003554                     	endif
 10134  003554                     	if	0	;tblptru may be non-zero
 10135  003554                     	endif
 10136  003554  0008               	tblrd		*
 10137  003556  50F5               	movf	tablat,w,c
 10138  003558  5E01               	subwf	?___wmul^0,f,c
 10139  00355A  0E00               	movlw	0
 10140  00355C  5A02               	subwfb	(?___wmul+1)^0,f,c
 10141  00355E  0E30               	movlw	48
 10142  003560  2401               	addwf	?___wmul^0,w,c
 10143  003562  6E15               	movwf	atoi@n^0,c
 10144  003564  0E00               	movlw	0
 10145  003566  2002               	addwfc	(?___wmul+1)^0,w,c
 10146  003568  6E16               	movwf	(atoi@n+1)^0,c
 10147  00356A  EF7E  F01A         	goto	l4690
 10148  00356E                     l4698:
 10149  00356E  0ED0               	movlw	208
 10150  003570  6E0A               	movwf	??_atoi^0,c
 10151  003572  0EFF               	movlw	255
 10152  003574  6E0B               	movwf	(??_atoi+1)^0,c
 10153  003576  C008  FFF6         	movff	atoi@s,tblptrl
 10154  00357A  C009  FFF7         	movff	atoi@s+1,tblptrh
 10155  00357E                     	if	0	;tblptru may be non-zero
 10156  00357E                     	endif
 10157  00357E                     	if	0	;tblptru may be non-zero
 10158  00357E                     	endif
 10159  00357E  0008               	tblrd		*
 10160  003580  50F5               	movf	tablat,w,c
 10161  003582  6E0C               	movwf	(??_atoi+2)^0,c
 10162  003584  6A0D               	clrf	(??_atoi+3)^0,c
 10163  003586  500A               	movf	??_atoi^0,w,c
 10164  003588  260C               	addwf	(??_atoi+2)^0,f,c
 10165  00358A  500B               	movf	(??_atoi+1)^0,w,c
 10166  00358C  220D               	addwfc	(??_atoi+3)^0,f,c
 10167  00358E  500D               	movf	(??_atoi+3)^0,w,c
 10168  003590  E10A               	bnz	u5390
 10169  003592  0E0A               	movlw	10
 10170  003594  5C0C               	subwf	(??_atoi+2)^0,w,c
 10171  003596  A0D8               	btfss	status,0,c
 10172  003598  EFD0  F01A         	goto	u5391
 10173  00359C  EFD3  F01A         	goto	u5390
 10174  0035A0                     u5391:
 10175  0035A0  0E01               	movlw	1
 10176  0035A2  EFD4  F01A         	goto	u5400
 10177  0035A6                     u5390:
 10178  0035A6  0E00               	movlw	0
 10179  0035A8                     u5400:
 10180  0035A8  6E12               	movwf	_atoi$1472^0,c
 10181  0035AA  6A13               	clrf	(_atoi$1472+1)^0,c
 10182  0035AC  5012               	movf	_atoi$1472^0,w,c
 10183  0035AE  1013               	iorwf	(_atoi$1472+1)^0,w,c
 10184  0035B0  A4D8               	btfss	status,2,c
 10185  0035B2  EFDD  F01A         	goto	u5411
 10186  0035B6  EFDF  F01A         	goto	u5410
 10187  0035BA                     u5411:
 10188  0035BA  EF9C  F01A         	goto	l4694
 10189  0035BE                     u5410:
 10190  0035BE  500E               	movf	atoi@neg^0,w,c
 10191  0035C0  100F               	iorwf	(atoi@neg+1)^0,w,c
 10192  0035C2  A4D8               	btfss	status,2,c
 10193  0035C4  EFE6  F01A         	goto	u5421
 10194  0035C8  EFE8  F01A         	goto	u5420
 10195  0035CC                     u5421:
 10196  0035CC  EFF6  F01A         	goto	l1314
 10197  0035D0                     u5420:
 10198  0035D0  C015  F00A         	movff	atoi@n,??_atoi
 10199  0035D4  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10200  0035D8  1E0A               	comf	??_atoi^0,f,c
 10201  0035DA  1E0B               	comf	(??_atoi+1)^0,f,c
 10202  0035DC  4A0A               	infsnz	??_atoi^0,f,c
 10203  0035DE  2A0B               	incf	(??_atoi+1)^0,f,c
 10204  0035E0  C00A  F008         	movff	??_atoi,?_atoi
 10205  0035E4  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10206  0035E8  EFFA  F01A         	goto	l1317
 10207  0035EC                     l1314:
 10208  0035EC  C015  F008         	movff	atoi@n,?_atoi
 10209  0035F0  C016  F009         	movff	atoi@n+1,?_atoi+1
 10210  0035F4                     l1317:
 10211  0035F4  0012               	return		;funcret
 10212  0035F6                     __end_of_atoi:
 10213                           	callstack 0
 10214                           
 10215 ;; *************** function _isspace *****************
 10216 ;; Defined at:
 10217 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  c               2    0[COMRAM] int 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;		None
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  2    0[COMRAM] int 
 10224 ;; Registers used:
 10225 ;;		wreg, status,2, status,0
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10231 ;;      Params:         2       0       0       0       0       0       0       0       0
 10232 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10233 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10234 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10235 ;;Total ram usage:        7 bytes
 10236 ;; Hardware stack levels used: 1
 10237 ;; This function calls:
 10238 ;;		Nothing
 10239 ;; This function is called by:
 10240 ;;		_atoi
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           	psect	text35
 10245  00438A                     __ptext35:
 10246                           	callstack 0
 10247  00438A                     _isspace:
 10248                           	callstack 26
 10249  00438A  0E01               	movlw	1
 10250  00438C  6E07               	movwf	_isspace$1510^0,c
 10251  00438E  0E20               	movlw	32
 10252  004390  1801               	xorwf	isspace@c^0,w,c
 10253  004392  1002               	iorwf	(isspace@c+1)^0,w,c
 10254  004394  B4D8               	btfsc	status,2,c
 10255  004396  EFCF  F021         	goto	u4601
 10256  00439A  EFD1  F021         	goto	u4600
 10257  00439E                     u4601:
 10258  00439E  EFEA  F021         	goto	l4274
 10259  0043A2                     u4600:
 10260  0043A2  0EF7               	movlw	247
 10261  0043A4  6E03               	movwf	??_isspace^0,c
 10262  0043A6  0EFF               	movlw	255
 10263  0043A8  6E04               	movwf	(??_isspace+1)^0,c
 10264  0043AA  C001  F005         	movff	isspace@c,??_isspace+2
 10265  0043AE  C002  F006         	movff	isspace@c+1,??_isspace+3
 10266  0043B2  5003               	movf	??_isspace^0,w,c
 10267  0043B4  2605               	addwf	(??_isspace+2)^0,f,c
 10268  0043B6  5004               	movf	(??_isspace+1)^0,w,c
 10269  0043B8  2206               	addwfc	(??_isspace+3)^0,f,c
 10270  0043BA  5006               	movf	(??_isspace+3)^0,w,c
 10271  0043BC  E109               	bnz	u4610
 10272  0043BE  0E05               	movlw	5
 10273  0043C0  5C05               	subwf	(??_isspace+2)^0,w,c
 10274  0043C2  A0D8               	btfss	status,0,c
 10275  0043C4  EFE6  F021         	goto	u4611
 10276  0043C8  EFE8  F021         	goto	u4610
 10277  0043CC                     u4611:
 10278  0043CC  EFEA  F021         	goto	l4274
 10279  0043D0                     u4610:
 10280  0043D0  0E00               	movlw	0
 10281  0043D2  6E07               	movwf	_isspace$1510^0,c
 10282  0043D4                     l4274:
 10283  0043D4  C007  F001         	movff	_isspace$1510,?_isspace
 10284  0043D8  6A02               	clrf	(?_isspace+1)^0,c
 10285  0043DA  0012               	return		;funcret
 10286  0043DC                     __end_of_isspace:
 10287                           	callstack 0
 10288                           
 10289 ;; *************** function _isdigit *****************
 10290 ;; Defined at:
 10291 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  c               2    0[COMRAM] int 
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;		None
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  2    0[COMRAM] int 
 10298 ;; Registers used:
 10299 ;;		wreg, status,2, status,0
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10305 ;;      Params:         2       0       0       0       0       0       0       0       0
 10306 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10307 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10308 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10309 ;;Total ram usage:        6 bytes
 10310 ;; Hardware stack levels used: 1
 10311 ;; This function calls:
 10312 ;;		Nothing
 10313 ;; This function is called by:
 10314 ;;		_vfpfcnvrt
 10315 ;;		_atoi
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           	psect	text36
 10320  004784                     __ptext36:
 10321                           	callstack 0
 10322  004784                     _isdigit:
 10323                           	callstack 27
 10324  004784  0ED0               	movlw	208
 10325  004786  6E03               	movwf	??_isdigit^0,c
 10326  004788  0EFF               	movlw	255
 10327  00478A  6E04               	movwf	(??_isdigit+1)^0,c
 10328  00478C  C001  F005         	movff	isdigit@c,??_isdigit+2
 10329  004790  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10330  004794  5003               	movf	??_isdigit^0,w,c
 10331  004796  2605               	addwf	(??_isdigit+2)^0,f,c
 10332  004798  5004               	movf	(??_isdigit+1)^0,w,c
 10333  00479A  2206               	addwfc	(??_isdigit+3)^0,f,c
 10334  00479C  5006               	movf	(??_isdigit+3)^0,w,c
 10335  00479E  E10A               	bnz	u4580
 10336  0047A0  0E0A               	movlw	10
 10337  0047A2  5C05               	subwf	(??_isdigit+2)^0,w,c
 10338  0047A4  A0D8               	btfss	status,0,c
 10339  0047A6  EFD7  F023         	goto	u4581
 10340  0047AA  EFDA  F023         	goto	u4580
 10341  0047AE                     u4581:
 10342  0047AE  0E01               	movlw	1
 10343  0047B0  EFDB  F023         	goto	u4590
 10344  0047B4                     u4580:
 10345  0047B4  0E00               	movlw	0
 10346  0047B6                     u4590:
 10347  0047B6  6E01               	movwf	?_isdigit^0,c
 10348  0047B8  6A02               	clrf	(?_isdigit+1)^0,c
 10349  0047BA  0012               	return		;funcret
 10350  0047BC                     __end_of_isdigit:
 10351                           	callstack 0
 10352                           
 10353 ;; *************** function ___wmul *****************
 10354 ;; Defined at:
 10355 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  multiplier      2    0[COMRAM] unsigned int 
 10358 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;  product         2    4[COMRAM] unsigned int 
 10361 ;; Return value:  Size  Location     Type
 10362 ;;                  2    0[COMRAM] unsigned int 
 10363 ;; Registers used:
 10364 ;;		wreg, status,2, status,0, prodl, prodh
 10365 ;; Tracked objects:
 10366 ;;		On entry : 0/0
 10367 ;;		On exit  : 0/0
 10368 ;;		Unchanged: 0/0
 10369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10370 ;;      Params:         4       0       0       0       0       0       0       0       0
 10371 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10372 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10373 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10374 ;;Total ram usage:        6 bytes
 10375 ;; Hardware stack levels used: 1
 10376 ;; This function calls:
 10377 ;;		Nothing
 10378 ;; This function is called by:
 10379 ;;		_atoi
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           	psect	text37
 10384  0048E8                     __ptext37:
 10385                           	callstack 0
 10386  0048E8                     ___wmul:
 10387                           	callstack 26
 10388  0048E8  5001               	movf	___wmul@multiplier^0,w,c
 10389  0048EA  0203               	mulwf	___wmul@multiplicand^0,c
 10390  0048EC  CFF3 F005          	movff	prodl,___wmul@product
 10391  0048F0  CFF4 F006          	movff	prodh,___wmul@product+1
 10392  0048F4  5001               	movf	___wmul@multiplier^0,w,c
 10393  0048F6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10394  0048F8  50F3               	movf	243,w,c
 10395  0048FA  2606               	addwf	(___wmul@product+1)^0,f,c
 10396  0048FC  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10397  0048FE  0203               	mulwf	___wmul@multiplicand^0,c
 10398  004900  50F3               	movf	243,w,c
 10399  004902  2606               	addwf	(___wmul@product+1)^0,f,c
 10400  004904  C005  F001         	movff	___wmul@product,?___wmul
 10401  004908  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10402  00490C  0012               	return		;funcret
 10403  00490E                     __end_of___wmul:
 10404                           	callstack 0
 10405                           
 10406 ;; *************** function _RTC_Read_Clock *****************
 10407 ;; Defined at:
 10408 ;;		line 34 in file "reloj.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;  read_clock_a    1    wreg     unsigned char 
 10411 ;; Auto vars:     Size  Location     Type
 10412 ;;  read_clock_a    1    3[COMRAM] unsigned char 
 10413 ;; Return value:  Size  Location     Type
 10414 ;;                  1    wreg      void 
 10415 ;; Registers used:
 10416 ;;		wreg, status,2, status,0, cstack
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10422 ;;      Params:         0       0       0       0       0       0       0       0       0
 10423 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10424 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10425 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10426 ;;Total ram usage:        2 bytes
 10427 ;; Hardware stack levels used: 1
 10428 ;; Hardware stack levels required when called: 3
 10429 ;; This function calls:
 10430 ;;		_I2C_Read
 10431 ;;		_I2C_Repeated_Start
 10432 ;;		_I2C_Start
 10433 ;;		_I2C_Write
 10434 ;; This function is called by:
 10435 ;;		_RTC_Calendario
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text38
 10440  00459C                     __ptext38:
 10441                           	callstack 0
 10442  00459C                     _RTC_Read_Clock:
 10443                           	callstack 26
 10444                           
 10445                           ;incstack = 0
 10446                           ;RTC_Read_Clock@read_clock_address stored from wreg
 10447  00459C  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
 10448  00459E                     
 10449                           ;reloj.c: 34: void RTC_Read_Clock(char read_clock_address);reloj.c: 35: {;reloj.c: 36:  
      +                             I2C_Start(0xD0);
 10450  00459E  0ED0               	movlw	208
 10451  0045A0  EC46  F024         	call	_I2C_Start
 10452                           
 10453                           ;reloj.c: 37:     I2C_Write(read_clock_address);
 10454  0045A4  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
 10455  0045A6  EC87  F024         	call	_I2C_Write
 10456                           
 10457                           ;reloj.c: 38:     I2C_Repeated_Start(0xD1);
 10458  0045AA  0ED1               	movlw	209
 10459  0045AC  EC5D  F024         	call	_I2C_Repeated_Start
 10460  0045B0                     
 10461                           ;reloj.c: 39:     sec = I2C_Read(0);
 10462  0045B0  0E00               	movlw	0
 10463  0045B2  EC51  F023         	call	_I2C_Read
 10464  0045B6  6E03               	movwf	??_RTC_Read_Clock^0,c
 10465  0045B8  5003               	movf	??_RTC_Read_Clock^0,w,c
 10466  0045BA  0101               	movlb	1	; () banked
 10467  0045BC  6F10               	movwf	_sec& (0+255),b
 10468  0045BE  6B11               	clrf	(_sec+1)& (0+255),b
 10469  0045C0                     
 10470                           ; BSR set to: 1
 10471                           ;reloj.c: 40:     min = I2C_Read(0);
 10472  0045C0  0E00               	movlw	0
 10473  0045C2  EC51  F023         	call	_I2C_Read
 10474  0045C6  6E03               	movwf	??_RTC_Read_Clock^0,c
 10475  0045C8  5003               	movf	??_RTC_Read_Clock^0,w,c
 10476  0045CA  0101               	movlb	1	; () banked
 10477  0045CC  6F0E               	movwf	_min& (0+255),b
 10478  0045CE  6B0F               	clrf	(_min+1)& (0+255),b
 10479  0045D0                     
 10480                           ; BSR set to: 1
 10481                           ;reloj.c: 41:     hour= I2C_Read(1);
 10482  0045D0  0E01               	movlw	1
 10483  0045D2  EC51  F023         	call	_I2C_Read
 10484  0045D6  6E03               	movwf	??_RTC_Read_Clock^0,c
 10485  0045D8  5003               	movf	??_RTC_Read_Clock^0,w,c
 10486  0045DA  0101               	movlb	1	; () banked
 10487  0045DC  6F0C               	movwf	_hour& (0+255),b
 10488  0045DE  6B0D               	clrf	(_hour+1)& (0+255),b
 10489  0045E0                     
 10490                           ; BSR set to: 1
 10491  0045E0  0012               	return		;funcret
 10492  0045E2                     __end_of_RTC_Read_Clock:
 10493                           	callstack 0
 10494                           
 10495 ;; *************** function _RTC_Read_Calendar *****************
 10496 ;; Defined at:
 10497 ;;		line 57 in file "reloj.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;  read_calenda    1    wreg     unsigned char 
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;  read_calenda    1    3[COMRAM] unsigned char 
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  1    wreg      void 
 10504 ;; Registers used:
 10505 ;;		wreg, status,2, status,0, cstack
 10506 ;; Tracked objects:
 10507 ;;		On entry : 0/0
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10511 ;;      Params:         0       0       0       0       0       0       0       0       0
 10512 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10513 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10514 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10515 ;;Total ram usage:        2 bytes
 10516 ;; Hardware stack levels used: 1
 10517 ;; Hardware stack levels required when called: 3
 10518 ;; This function calls:
 10519 ;;		_I2C_Read
 10520 ;;		_I2C_Repeated_Start
 10521 ;;		_I2C_Start
 10522 ;;		_I2C_Stop
 10523 ;;		_I2C_Write
 10524 ;; This function is called by:
 10525 ;;		_RTC_Calendario
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text39
 10530  0042DE                     __ptext39:
 10531                           	callstack 0
 10532  0042DE                     _RTC_Read_Calendar:
 10533                           	callstack 26
 10534                           
 10535                           ; BSR set to: 1
 10536                           ;incstack = 0
 10537                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
 10538  0042DE  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
 10539  0042E0                     
 10540                           ;reloj.c: 57: void RTC_Read_Calendar(char read_calendar_address);reloj.c: 58: {;reloj.c:
      +                           59:     I2C_Start(0xD0);
 10541  0042E0  0ED0               	movlw	208
 10542  0042E2  EC46  F024         	call	_I2C_Start
 10543                           
 10544                           ;reloj.c: 60:     I2C_Write(read_calendar_address);
 10545  0042E6  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
 10546  0042E8  EC87  F024         	call	_I2C_Write
 10547                           
 10548                           ;reloj.c: 61:     I2C_Repeated_Start(0xD1);
 10549  0042EC  0ED1               	movlw	209
 10550  0042EE  EC5D  F024         	call	_I2C_Repeated_Start
 10551  0042F2                     
 10552                           ;reloj.c: 62:     Day = I2C_Read(0);
 10553  0042F2  0E00               	movlw	0
 10554  0042F4  EC51  F023         	call	_I2C_Read
 10555  0042F8  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10556  0042FA  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10557  0042FC  0101               	movlb	1	; () banked
 10558  0042FE  6F0A               	movwf	_Day& (0+255),b
 10559  004300  6B0B               	clrf	(_Day+1)& (0+255),b
 10560  004302                     
 10561                           ; BSR set to: 1
 10562                           ;reloj.c: 63:     Date = I2C_Read(0);
 10563  004302  0E00               	movlw	0
 10564  004304  EC51  F023         	call	_I2C_Read
 10565  004308  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10566  00430A  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10567  00430C  0101               	movlb	1	; () banked
 10568  00430E  6F08               	movwf	_Date& (0+255),b
 10569  004310  6B09               	clrf	(_Date+1)& (0+255),b
 10570  004312                     
 10571                           ; BSR set to: 1
 10572                           ;reloj.c: 64:     Month = I2C_Read(0);
 10573  004312  0E00               	movlw	0
 10574  004314  EC51  F023         	call	_I2C_Read
 10575  004318  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10576  00431A  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10577  00431C  0101               	movlb	1	; () banked
 10578  00431E  6F06               	movwf	_Month& (0+255),b
 10579  004320  6B07               	clrf	(_Month+1)& (0+255),b
 10580  004322                     
 10581                           ; BSR set to: 1
 10582                           ;reloj.c: 65:     Year = I2C_Read(1);
 10583  004322  0E01               	movlw	1
 10584  004324  EC51  F023         	call	_I2C_Read
 10585  004328  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10586  00432A  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10587  00432C  0101               	movlb	1	; () banked
 10588  00432E  6F04               	movwf	_Year& (0+255),b
 10589  004330  6B05               	clrf	(_Year+1)& (0+255),b
 10590  004332                     
 10591                           ; BSR set to: 1
 10592                           ;reloj.c: 66:     I2C_Stop();
 10593  004332  ECA5  F024         	call	_I2C_Stop	;wreg free
 10594  004336  0012               	return		;funcret
 10595  004338                     __end_of_RTC_Read_Calendar:
 10596                           	callstack 0
 10597                           
 10598 ;; *************** function _I2C_Stop *****************
 10599 ;; Defined at:
 10600 ;;		line 186 in file "Reloj_ar.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;		None
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;		None
 10605 ;; Return value:  Size  Location     Type
 10606 ;;                  1    wreg      unsigned char 
 10607 ;; Registers used:
 10608 ;;		wreg
 10609 ;; Tracked objects:
 10610 ;;		On entry : 0/0
 10611 ;;		On exit  : 0/0
 10612 ;;		Unchanged: 0/0
 10613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10614 ;;      Params:         0       0       0       0       0       0       0       0       0
 10615 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10616 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10617 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10618 ;;Total ram usage:        0 bytes
 10619 ;; Hardware stack levels used: 1
 10620 ;; This function calls:
 10621 ;;		Nothing
 10622 ;; This function is called by:
 10623 ;;		_RTC_Read_Calendar
 10624 ;;		_RTC_Calendario
 10625 ;;		_I2C_Start_Wait
 10626 ;; This function uses a non-reentrant model
 10627 ;;
 10628                           
 10629                           	psect	text40
 10630  00494A                     __ptext40:
 10631                           	callstack 0
 10632  00494A                     _I2C_Stop:
 10633                           	callstack 28
 10634  00494A                     
 10635                           ;Reloj_ar.c: 188:     PEN = 1;
 10636  00494A  84C5               	bsf	4037,2,c	;volatile
 10637  00494C                     l354:
 10638  00494C  B4C5               	btfsc	4037,2,c	;volatile
 10639  00494E  EFAB  F024         	goto	u5791
 10640  004952  EFAD  F024         	goto	u5790
 10641  004956                     u5791:
 10642  004956  EFA6  F024         	goto	l354
 10643  00495A                     u5790:
 10644  00495A                     
 10645                           ;Reloj_ar.c: 190:     if(!SSPSTATbits.P);
 10646  00495A  50C7               	movf	199,w,c	;volatile
 10647  00495C  0012               	return		;funcret
 10648  00495E                     __end_of_I2C_Stop:
 10649                           	callstack 0
 10650                           
 10651 ;; *************** function _I2C_Start *****************
 10652 ;; Defined at:
 10653 ;;		line 134 in file "Reloj_ar.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;  slave_write_    1    wreg     unsigned char 
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;  slave_write_    1    1[COMRAM] unsigned char 
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      unsigned char 
 10660 ;; Registers used:
 10661 ;;		wreg, status,2, cstack
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10667 ;;      Params:         0       0       0       0       0       0       0       0       0
 10668 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10669 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10670 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10671 ;;Total ram usage:        1 bytes
 10672 ;; Hardware stack levels used: 1
 10673 ;; Hardware stack levels required when called: 2
 10674 ;; This function calls:
 10675 ;;		_I2C_Write
 10676 ;; This function is called by:
 10677 ;;		_RTC_Read_Clock
 10678 ;;		_RTC_Read_Calendar
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           	psect	text41
 10683  00488C                     __ptext41:
 10684                           	callstack 0
 10685  00488C                     _I2C_Start:
 10686                           	callstack 26
 10687                           
 10688                           ;incstack = 0
 10689                           ;I2C_Start@slave_write_address stored from wreg
 10690  00488C  6E02               	movwf	I2C_Start@slave_write_address^0,c
 10691  00488E                     
 10692                           ;Reloj_ar.c: 134: char I2C_Start(char slave_write_address);Reloj_ar.c: 135: {;Reloj_ar.c
      +                          : 136:     SSPCON2bits.SEN=1;
 10693  00488E  80C5               	bsf	197,0,c	;volatile
 10694  004890                     l338:
 10695  004890  B0C5               	btfsc	197,0,c	;volatile
 10696  004892  EF4D  F024         	goto	u5731
 10697  004896  EF4F  F024         	goto	u5730
 10698  00489A                     u5731:
 10699  00489A  EF48  F024         	goto	l338
 10700  00489E                     u5730:
 10701  00489E                     
 10702                           ;Reloj_ar.c: 138:  SSPIF=0;
 10703  00489E  969E               	bcf	3998,3,c	;volatile
 10704                           
 10705                           ;Reloj_ar.c: 139:     if(!SSPSTATbits.S)
 10706  0048A0  B6C7               	btfsc	199,3,c	;volatile
 10707  0048A2  EF55  F024         	goto	u5741
 10708  0048A6  EF57  F024         	goto	u5740
 10709  0048AA                     u5741:
 10710  0048AA  EF59  F024         	goto	l4952
 10711  0048AE                     u5740:
 10712  0048AE  EF5C  F024         	goto	l342
 10713  0048B2                     l4952:
 10714                           
 10715                           ;Reloj_ar.c: 141:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Sta
      +                          rt is never used
 10716  0048B2  5002               	movf	I2C_Start@slave_write_address^0,w,c
 10717  0048B4  EC87  F024         	call	_I2C_Write
 10718  0048B8                     l342:
 10719  0048B8  0012               	return		;funcret
 10720  0048BA                     __end_of_I2C_Start:
 10721                           	callstack 0
 10722                           
 10723 ;; *************** function _I2C_Repeated_Start *****************
 10724 ;; Defined at:
 10725 ;;		line 159 in file "Reloj_ar.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;  slave_read_a    1    wreg     unsigned char 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;  slave_read_a    1    1[COMRAM] unsigned char 
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  1    wreg      unsigned char 
 10732 ;; Registers used:
 10733 ;;		wreg, status,2, cstack
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10739 ;;      Params:         0       0       0       0       0       0       0       0       0
 10740 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10741 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10742 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10743 ;;Total ram usage:        1 bytes
 10744 ;; Hardware stack levels used: 1
 10745 ;; Hardware stack levels required when called: 2
 10746 ;; This function calls:
 10747 ;;		_I2C_Write
 10748 ;; This function is called by:
 10749 ;;		_RTC_Read_Clock
 10750 ;;		_RTC_Read_Calendar
 10751 ;; This function uses a non-reentrant model
 10752 ;;
 10753                           
 10754                           	psect	text42
 10755  0048BA                     __ptext42:
 10756                           	callstack 0
 10757  0048BA                     _I2C_Repeated_Start:
 10758                           	callstack 26
 10759                           
 10760                           ;incstack = 0
 10761                           ;I2C_Repeated_Start@slave_read_address stored from wreg
 10762  0048BA  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
 10763  0048BC                     
 10764                           ;Reloj_ar.c: 159: char I2C_Repeated_Start(char slave_read_address);Reloj_ar.c: 160: {;Re
      +                          loj_ar.c: 161:     RSEN = 1;
 10765  0048BC  82C5               	bsf	4037,1,c	;volatile
 10766  0048BE                     l345:
 10767  0048BE  B2C5               	btfsc	4037,1,c	;volatile
 10768  0048C0  EF64  F024         	goto	u5751
 10769  0048C4  EF66  F024         	goto	u5750
 10770  0048C8                     u5751:
 10771  0048C8  EF5F  F024         	goto	l345
 10772  0048CC                     u5750:
 10773  0048CC                     
 10774                           ;Reloj_ar.c: 163:     SSPIF = 0;
 10775  0048CC  969E               	bcf	3998,3,c	;volatile
 10776                           
 10777                           ;Reloj_ar.c: 164:  if(!SSPSTATbits.S)
 10778  0048CE  B6C7               	btfsc	199,3,c	;volatile
 10779  0048D0  EF6C  F024         	goto	u5761
 10780  0048D4  EF6E  F024         	goto	u5760
 10781  0048D8                     u5761:
 10782  0048D8  EF70  F024         	goto	l4960
 10783  0048DC                     u5760:
 10784  0048DC  EF73  F024         	goto	l349
 10785  0048E0                     l4960:
 10786                           
 10787                           ;Reloj_ar.c: 166:     I2C_Write(slave_read_address);
 10788  0048E0  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
 10789  0048E2  EC87  F024         	call	_I2C_Write
 10790  0048E6                     l349:
 10791  0048E6  0012               	return		;funcret
 10792  0048E8                     __end_of_I2C_Repeated_Start:
 10793                           	callstack 0
 10794                           
 10795 ;; *************** function _I2C_Write *****************
 10796 ;; Defined at:
 10797 ;;		line 208 in file "Reloj_ar.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;  data            1    wreg     unsigned char 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  data            1    0[COMRAM] unsigned char 
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  1    wreg      unsigned char 
 10804 ;; Registers used:
 10805 ;;		wreg, cstack
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10811 ;;      Params:         0       0       0       0       0       0       0       0       0
 10812 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10813 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10814 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10815 ;;Total ram usage:        1 bytes
 10816 ;; Hardware stack levels used: 1
 10817 ;; Hardware stack levels required when called: 1
 10818 ;; This function calls:
 10819 ;;		_I2C_Ready
 10820 ;; This function is called by:
 10821 ;;		_RTC_Read_Clock
 10822 ;;		_RTC_Read_Calendar
 10823 ;;		_I2C_Start
 10824 ;;		_I2C_Repeated_Start
 10825 ;;		_I2C_Start_Wait
 10826 ;; This function uses a non-reentrant model
 10827 ;;
 10828                           
 10829                           	psect	text43
 10830  00490E                     __ptext43:
 10831                           	callstack 0
 10832  00490E                     _I2C_Write:
 10833                           	callstack 27
 10834                           
 10835                           ;incstack = 0
 10836                           ;I2C_Write@data stored from wreg
 10837  00490E  6E01               	movwf	I2C_Write@data^0,c
 10838  004910                     
 10839                           ;Reloj_ar.c: 208: char I2C_Write(unsigned char data);Reloj_ar.c: 209: {;Reloj_ar.c: 210:
      +                                 SSPBUF = data;
 10840  004910  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
 10841  004914                     
 10842                           ;Reloj_ar.c: 211:       I2C_Ready();
 10843  004914  ECCD  F024         	call	_I2C_Ready	;wreg free
 10844  004918                     
 10845                           ;Reloj_ar.c: 212:       if (ACKSTAT)
 10846  004918  ACC5               	btfss	4037,6,c	;volatile
 10847  00491A  EF91  F024         	goto	u5481
 10848  00491E  EF93  F024         	goto	u5480
 10849  004922                     u5481:
 10850  004922  EF96  F024         	goto	l4764
 10851  004926                     u5480:
 10852  004926                     
 10853                           ;Reloj_ar.c: 213:         return 1;
 10854  004926  0E01               	movlw	1
 10855  004928  EF97  F024         	goto	l362
 10856  00492C                     l4764:
 10857                           
 10858                           ;Reloj_ar.c: 215:         return 2;
 10859  00492C  0E02               	movlw	2
 10860  00492E                     l362:
 10861  00492E  0012               	return		;funcret
 10862  004930                     __end_of_I2C_Write:
 10863                           	callstack 0
 10864                           
 10865 ;; *************** function _I2C_Read *****************
 10866 ;; Defined at:
 10867 ;;		line 27 in file "Reloj_ar.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;  flag            1    wreg     unsigned char 
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;  flag            1    0[COMRAM] unsigned char 
 10872 ;;  buffer          1    1[COMRAM] unsigned char 
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      unsigned char 
 10875 ;; Registers used:
 10876 ;;		wreg, status,2, cstack
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0
 10883 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10885 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10886 ;;Total ram usage:        2 bytes
 10887 ;; Hardware stack levels used: 1
 10888 ;; Hardware stack levels required when called: 1
 10889 ;; This function calls:
 10890 ;;		_I2C_Ack
 10891 ;;		_I2C_Nack
 10892 ;;		_I2C_Ready
 10893 ;; This function is called by:
 10894 ;;		_RTC_Read_Clock
 10895 ;;		_RTC_Read_Calendar
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           	psect	text44
 10900  0046A2                     __ptext44:
 10901                           	callstack 0
 10902  0046A2                     _I2C_Read:
 10903                           	callstack 27
 10904                           
 10905                           ;incstack = 0
 10906                           ;I2C_Read@flag stored from wreg
 10907  0046A2  6E01               	movwf	I2C_Read@flag^0,c
 10908  0046A4                     
 10909                           ;Reloj_ar.c: 27: char I2C_Read(char flag);Reloj_ar.c: 29: {;Reloj_ar.c: 30:         char
      +                           buffer;;Reloj_ar.c: 31:         RCEN = 1;
 10910  0046A4  86C5               	bsf	4037,3,c	;volatile
 10911  0046A6                     l310:
 10912  0046A6  A0C7               	btfss	199,0,c	;volatile
 10913  0046A8  EF58  F023         	goto	u5771
 10914  0046AC  EF5A  F023         	goto	u5770
 10915  0046B0                     u5771:
 10916  0046B0  EF53  F023         	goto	l310
 10917  0046B4                     u5770:
 10918  0046B4                     
 10919                           ;Reloj_ar.c: 34:         buffer = SSPBUF;
 10920  0046B4  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
 10921  0046B8                     
 10922                           ;Reloj_ar.c: 36:         if(flag==0)
 10923  0046B8  5001               	movf	I2C_Read@flag^0,w,c
 10924  0046BA  A4D8               	btfss	status,2,c
 10925  0046BC  EF62  F023         	goto	u5781
 10926  0046C0  EF64  F023         	goto	u5780
 10927  0046C4                     u5781:
 10928  0046C4  EF68  F023         	goto	l4974
 10929  0046C8                     u5780:
 10930  0046C8                     
 10931                           ;Reloj_ar.c: 37:             I2C_Ack();
 10932  0046C8  ECB9  F024         	call	_I2C_Ack	;wreg free
 10933  0046CC  EF6A  F023         	goto	l314
 10934  0046D0                     l4974:
 10935                           
 10936                           ;Reloj_ar.c: 39:             I2C_Nack();
 10937  0046D0  ECAF  F024         	call	_I2C_Nack	;wreg free
 10938  0046D4                     l314:
 10939                           
 10940                           ;Reloj_ar.c: 40:         I2C_Ready();
 10941  0046D4  ECCD  F024         	call	_I2C_Ready	;wreg free
 10942  0046D8                     
 10943                           ;Reloj_ar.c: 41:         return(buffer);
 10944  0046D8  5002               	movf	I2C_Read@buffer^0,w,c
 10945  0046DA  0012               	return		;funcret
 10946  0046DC                     __end_of_I2C_Read:
 10947                           	callstack 0
 10948                           
 10949 ;; *************** function _I2C_Ready *****************
 10950 ;; Defined at:
 10951 ;;		line 83 in file "Reloj_ar.c"
 10952 ;; Parameters:    Size  Location     Type
 10953 ;;		None
 10954 ;; Auto vars:     Size  Location     Type
 10955 ;;		None
 10956 ;; Return value:  Size  Location     Type
 10957 ;;                  1    wreg      void 
 10958 ;; Registers used:
 10959 ;;		None
 10960 ;; Tracked objects:
 10961 ;;		On entry : 0/0
 10962 ;;		On exit  : 0/0
 10963 ;;		Unchanged: 0/0
 10964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10965 ;;      Params:         0       0       0       0       0       0       0       0       0
 10966 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10967 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10968 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10969 ;;Total ram usage:        0 bytes
 10970 ;; Hardware stack levels used: 1
 10971 ;; This function calls:
 10972 ;;		Nothing
 10973 ;; This function is called by:
 10974 ;;		_I2C_Read
 10975 ;;		_I2C_Write
 10976 ;; This function uses a non-reentrant model
 10977 ;;
 10978                           
 10979                           	psect	text45
 10980  00499A                     __ptext45:
 10981                           	callstack 0
 10982  00499A                     _I2C_Ready:
 10983                           	callstack 27
 10984  00499A                     l321:
 10985  00499A  A69E               	btfss	3998,3,c	;volatile
 10986  00499C  EFD2  F024         	goto	u4641
 10987  0049A0  EFD4  F024         	goto	u4640
 10988  0049A4                     u4641:
 10989  0049A4  EFCD  F024         	goto	l321
 10990  0049A8                     u4640:
 10991  0049A8                     
 10992                           ;Reloj_ar.c: 86:     SSPIF=0;
 10993  0049A8  969E               	bcf	3998,3,c	;volatile
 10994  0049AA  0012               	return		;funcret
 10995  0049AC                     __end_of_I2C_Ready:
 10996                           	callstack 0
 10997                           
 10998 ;; *************** function _I2C_Nack *****************
 10999 ;; Defined at:
 11000 ;;		line 250 in file "Reloj_ar.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;		None
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      void 
 11007 ;; Registers used:
 11008 ;;		None
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11014 ;;      Params:         0       0       0       0       0       0       0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11017 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11018 ;;Total ram usage:        0 bytes
 11019 ;; Hardware stack levels used: 1
 11020 ;; This function calls:
 11021 ;;		Nothing
 11022 ;; This function is called by:
 11023 ;;		_I2C_Read
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           	psect	text46
 11028  00495E                     __ptext46:
 11029                           	callstack 0
 11030  00495E                     _I2C_Nack:
 11031                           	callstack 27
 11032  00495E                     
 11033                           ;Reloj_ar.c: 252:     ACKDT=1;
 11034  00495E  8AC5               	bsf	4037,5,c	;volatile
 11035                           
 11036                           ;Reloj_ar.c: 253:  ACKEN=1;
 11037  004960  88C5               	bsf	4037,4,c	;volatile
 11038  004962                     l372:
 11039  004962  B8C5               	btfsc	4037,4,c	;volatile
 11040  004964  EFB6  F024         	goto	u5501
 11041  004968  EFB8  F024         	goto	u5500
 11042  00496C                     u5501:
 11043  00496C  EFB1  F024         	goto	l372
 11044  004970                     u5500:
 11045  004970  0012               	return		;funcret
 11046  004972                     __end_of_I2C_Nack:
 11047                           	callstack 0
 11048                           
 11049 ;; *************** function _I2C_Ack *****************
 11050 ;; Defined at:
 11051 ;;		line 230 in file "Reloj_ar.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;		None
 11054 ;; Auto vars:     Size  Location     Type
 11055 ;;		None
 11056 ;; Return value:  Size  Location     Type
 11057 ;;                  1    wreg      void 
 11058 ;; Registers used:
 11059 ;;		None
 11060 ;; Tracked objects:
 11061 ;;		On entry : 0/0
 11062 ;;		On exit  : 0/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11065 ;;      Params:         0       0       0       0       0       0       0       0       0
 11066 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11067 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11068 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11069 ;;Total ram usage:        0 bytes
 11070 ;; Hardware stack levels used: 1
 11071 ;; This function calls:
 11072 ;;		Nothing
 11073 ;; This function is called by:
 11074 ;;		_I2C_Read
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077                           
 11078                           	psect	text47
 11079  004972                     __ptext47:
 11080                           	callstack 0
 11081  004972                     _I2C_Ack:
 11082                           	callstack 27
 11083  004972                     
 11084                           ;Reloj_ar.c: 232:     ACKDT=0;
 11085  004972  9AC5               	bcf	4037,5,c	;volatile
 11086                           
 11087                           ;Reloj_ar.c: 233:  ACKEN=1;
 11088  004974  88C5               	bsf	4037,4,c	;volatile
 11089  004976                     l366:
 11090  004976  B8C5               	btfsc	4037,4,c	;volatile
 11091  004978  EFC0  F024         	goto	u5491
 11092  00497C  EFC2  F024         	goto	u5490
 11093  004980                     u5491:
 11094  004980  EFBB  F024         	goto	l366
 11095  004984                     u5490:
 11096  004984  0012               	return		;funcret
 11097  004986                     __end_of_I2C_Ack:
 11098                           	callstack 0
 11099                           
 11100 ;; *************** function _LCD_String_xy *****************
 11101 ;; Defined at:
 11102 ;;		line 61 in file "LCD_caracter.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  row             1    wreg     unsigned char 
 11105 ;;  pos             1   10[COMRAM] unsigned char 
 11106 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 11107 ;;		 -> RTC_Calendario@date(10), RTC_Calendario@hours(10), STR_5(3), STR_4(3), 
 11108 ;;		 -> Stemp(20), 
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;  row             1   13[COMRAM] unsigned char 
 11111 ;;  location        1   14[COMRAM] unsigned char 
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  1    wreg      void 
 11114 ;; Registers used:
 11115 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11121 ;;      Params:         3       0       0       0       0       0       0       0       0
 11122 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11123 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11124 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11125 ;;Total ram usage:        5 bytes
 11126 ;; Hardware stack levels used: 1
 11127 ;; Hardware stack levels required when called: 3
 11128 ;; This function calls:
 11129 ;;		_LCD_Command
 11130 ;;		_LCD_String
 11131 ;; This function is called by:
 11132 ;;		_main
 11133 ;;		_RTC_Calendario
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           	psect	text48
 11138  004626                     __ptext48:
 11139                           	callstack 0
 11140  004626                     _LCD_String_xy:
 11141                           	callstack 26
 11142                           
 11143                           ;incstack = 0
 11144                           ;LCD_String_xy@row stored from wreg
 11145  004626  6E0E               	movwf	LCD_String_xy@row^0,c
 11146  004628                     
 11147                           ;LCD_caracter.c: 64:     if(row<=1)
 11148  004628  0E02               	movlw	2
 11149  00462A  600E               	cpfslt	LCD_String_xy@row^0,c
 11150  00462C  EF1A  F023         	goto	u5811
 11151  004630  EF1C  F023         	goto	u5810
 11152  004634                     u5811:
 11153  004634  EF25  F023         	goto	l5034
 11154  004638                     u5810:
 11155  004638                     
 11156                           ;LCD_caracter.c: 65:     {;LCD_caracter.c: 66:         location=(0x80) | ((pos) & 0x0f);
 11157  004638  500B               	movf	LCD_String_xy@pos^0,w,c
 11158  00463A  0B0F               	andlw	15
 11159  00463C  0980               	iorlw	128
 11160  00463E  6E0F               	movwf	LCD_String_xy@location^0,c
 11161  004640                     
 11162                           ;LCD_caracter.c: 67:         LCD_Command(location);
 11163  004640  500F               	movf	LCD_String_xy@location^0,w,c
 11164  004642  EC16  F022         	call	_LCD_Command
 11165                           
 11166                           ;LCD_caracter.c: 68:     }
 11167  004646  EF2C  F023         	goto	l5038
 11168  00464A                     l5034:
 11169                           
 11170                           ;LCD_caracter.c: 70:     {;LCD_caracter.c: 71:         location=(0xC0) | ((pos) & 0x0f);
 11171  00464A  500B               	movf	LCD_String_xy@pos^0,w,c
 11172  00464C  0B0F               	andlw	15
 11173  00464E  09C0               	iorlw	192
 11174  004650  6E0F               	movwf	LCD_String_xy@location^0,c
 11175  004652                     
 11176                           ;LCD_caracter.c: 72:         LCD_Command(location);
 11177  004652  500F               	movf	LCD_String_xy@location^0,w,c
 11178  004654  EC16  F022         	call	_LCD_Command
 11179  004658                     l5038:
 11180                           
 11181                           ;LCD_caracter.c: 76:     LCD_String(msg);
 11182  004658  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 11183  00465C  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 11184  004660  EC12  F021         	call	_LCD_String	;wreg free
 11185  004664  0012               	return		;funcret
 11186  004666                     __end_of_LCD_String_xy:
 11187                           	callstack 0
 11188                           
 11189 ;; *************** function _LCD_String *****************
 11190 ;; Defined at:
 11191 ;;		line 52 in file "LCD_caracter.c"
 11192 ;; Parameters:    Size  Location     Type
 11193 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 11194 ;;		 -> STR_21(4), STR_20(4), STR_19(4), STR_18(4), 
 11195 ;;		 -> STR_17(4), STR_16(4), STR_15(4), RTC_Calendario@year(10), 
 11196 ;;		 -> RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), RTC_Calendario@mins(10), 
 11197 ;;		 -> RTC_Calendario@secs(10), STR_5(3), STR_4(3), Stemp(20), 
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;		None
 11200 ;; Return value:  Size  Location     Type
 11201 ;;                  1    wreg      void 
 11202 ;; Registers used:
 11203 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11204 ;; Tracked objects:
 11205 ;;		On entry : 0/0
 11206 ;;		On exit  : 0/0
 11207 ;;		Unchanged: 0/0
 11208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11209 ;;      Params:         2       0       0       0       0       0       0       0       0
 11210 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11211 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11212 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11213 ;;Total ram usage:        2 bytes
 11214 ;; Hardware stack levels used: 1
 11215 ;; Hardware stack levels required when called: 2
 11216 ;; This function calls:
 11217 ;;		_LCD_Char
 11218 ;; This function is called by:
 11219 ;;		_LCD_String_xy
 11220 ;;		_RTC_Calendario
 11221 ;; This function uses a non-reentrant model
 11222 ;;
 11223                           
 11224                           	psect	text49
 11225  004224                     __ptext49:
 11226                           	callstack 0
 11227  004224                     _LCD_String:
 11228                           	callstack 26
 11229  004224                     
 11230                           ;LCD_caracter.c: 52: void LCD_String(const char *msg);LCD_caracter.c: 53: {;LCD_caracter
      +                          .c: 54:  while((*msg)!=0)
 11231  004224  EF28  F021         	goto	l4940
 11232  004228                     l4936:
 11233                           
 11234                           ;LCD_caracter.c: 55:  {;LCD_caracter.c: 56:    LCD_Char(*msg);
 11235  004228  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11236  00422C  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11237  004230  6AF8               	clrf	tblptru,c
 11238  004232  0E07               	movlw	(high __ramtop+-1)
 11239  004234  64F7               	cpfsgt	tblptrh,c
 11240  004236  D003               	bra	u5697
 11241  004238  0008               	tblrd		*
 11242  00423A  50F5               	movf	tablat,w,c
 11243  00423C  D005               	bra	u5690
 11244  00423E                     u5697:
 11245  00423E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11246  004242  CFF7 FFE2          	movff	tblptrh,fsr1h
 11247  004246  50E7               	movf	indf1,w,c
 11248  004248                     u5690:
 11249  004248  EC3C  F022         	call	_LCD_Char
 11250  00424C                     
 11251                           ;LCD_caracter.c: 57:    msg++;
 11252  00424C  4A09               	infsnz	LCD_String@msg^0,f,c
 11253  00424E  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 11254  004250                     l4940:
 11255                           
 11256                           ;LCD_caracter.c: 54:  while((*msg)!=0)
 11257  004250  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11258  004254  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11259  004258  6AF8               	clrf	tblptru,c
 11260  00425A  0E07               	movlw	(high __ramtop+-1)
 11261  00425C  64F7               	cpfsgt	tblptrh,c
 11262  00425E  D003               	bra	u5707
 11263  004260  0008               	tblrd		*
 11264  004262  50F5               	movf	tablat,w,c
 11265  004264  D005               	bra	u5700
 11266  004266                     u5707:
 11267  004266  CFF6 FFE1          	movff	tblptrl,fsr1l
 11268  00426A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11269  00426E  50E7               	movf	indf1,w,c
 11270  004270                     u5700:
 11271  004270  0900               	iorlw	0
 11272  004272  A4D8               	btfss	status,2,c
 11273  004274  EF3E  F021         	goto	u5711
 11274  004278  EF40  F021         	goto	u5710
 11275  00427C                     u5711:
 11276  00427C  EF14  F021         	goto	l4936
 11277  004280                     u5710:
 11278  004280  0012               	return		;funcret
 11279  004282                     __end_of_LCD_String:
 11280                           	callstack 0
 11281                           
 11282 ;; *************** function _LCD_Init *****************
 11283 ;; Defined at:
 11284 ;;		line 9 in file "LCD_caracter.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;		None
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;		None
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      void 
 11291 ;; Registers used:
 11292 ;;		wreg, status,2, status,0, cstack
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11298 ;;      Params:         0       0       0       0       0       0       0       0       0
 11299 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11300 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11301 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11302 ;;Total ram usage:        0 bytes
 11303 ;; Hardware stack levels used: 1
 11304 ;; Hardware stack levels required when called: 2
 11305 ;; This function calls:
 11306 ;;		_LCD_Command
 11307 ;;		_LCD_MSdelay
 11308 ;; This function is called by:
 11309 ;;		_main
 11310 ;;		_RTC_Calendario
 11311 ;; This function uses a non-reentrant model
 11312 ;;
 11313                           
 11314                           	psect	text50
 11315  00485C                     __ptext50:
 11316                           	callstack 0
 11317  00485C                     _LCD_Init:
 11318                           	callstack 27
 11319  00485C                     
 11320                           ;LCD_caracter.c: 11:     TRISD = 0;
 11321  00485C  0E00               	movlw	0
 11322  00485E  6E95               	movwf	149,c	;volatile
 11323  004860                     
 11324                           ;LCD_caracter.c: 12:     LCD_MSdelay(15);
 11325  004860  0E00               	movlw	0
 11326  004862  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 11327  004864  0E0F               	movlw	15
 11328  004866  6E01               	movwf	LCD_MSdelay@val^0,c
 11329  004868  EC62  F022         	call	_LCD_MSdelay	;wreg free
 11330  00486C                     
 11331                           ;LCD_caracter.c: 13:     LCD_Command(0x02);
 11332  00486C  0E02               	movlw	2
 11333  00486E  EC16  F022         	call	_LCD_Command
 11334  004872                     
 11335                           ;LCD_caracter.c: 15:     LCD_Command(0x28);
 11336  004872  0E28               	movlw	40
 11337  004874  EC16  F022         	call	_LCD_Command
 11338  004878                     
 11339                           ;LCD_caracter.c: 17:  LCD_Command(0x01);
 11340  004878  0E01               	movlw	1
 11341  00487A  EC16  F022         	call	_LCD_Command
 11342  00487E                     
 11343                           ;LCD_caracter.c: 18:     LCD_Command(0x0c);
 11344  00487E  0E0C               	movlw	12
 11345  004880  EC16  F022         	call	_LCD_Command
 11346  004884                     
 11347                           ;LCD_caracter.c: 19:  LCD_Command(0x06);
 11348  004884  0E06               	movlw	6
 11349  004886  EC16  F022         	call	_LCD_Command
 11350  00488A  0012               	return		;funcret
 11351  00488C                     __end_of_LCD_Init:
 11352                           	callstack 0
 11353                           
 11354 ;; *************** function _LCD_Clear *****************
 11355 ;; Defined at:
 11356 ;;		line 79 in file "LCD_caracter.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;		None
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;		None
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1    wreg      void 
 11363 ;; Registers used:
 11364 ;;		wreg, status,2, status,0, cstack
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11370 ;;      Params:         0       0       0       0       0       0       0       0       0
 11371 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11372 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11373 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11374 ;;Total ram usage:        0 bytes
 11375 ;; Hardware stack levels used: 1
 11376 ;; Hardware stack levels required when called: 2
 11377 ;; This function calls:
 11378 ;;		_LCD_Command
 11379 ;;		_LCD_MSdelay
 11380 ;; This function is called by:
 11381 ;;		_main
 11382 ;;		_RTC_Calendario
 11383 ;; This function uses a non-reentrant model
 11384 ;;
 11385                           
 11386                           	psect	text51
 11387  004986                     __ptext51:
 11388                           	callstack 0
 11389  004986                     _LCD_Clear:
 11390                           	callstack 27
 11391  004986                     
 11392                           ;LCD_caracter.c: 81:     LCD_Command(0x01);
 11393  004986  0E01               	movlw	1
 11394  004988  EC16  F022         	call	_LCD_Command
 11395                           
 11396                           ;LCD_caracter.c: 82:     LCD_MSdelay(3);
 11397  00498C  0E00               	movlw	0
 11398  00498E  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 11399  004990  0E03               	movlw	3
 11400  004992  6E01               	movwf	LCD_MSdelay@val^0,c
 11401  004994  EC62  F022         	call	_LCD_MSdelay	;wreg free
 11402  004998  0012               	return		;funcret
 11403  00499A                     __end_of_LCD_Clear:
 11404                           	callstack 0
 11405                           
 11406 ;; *************** function _I2C_Init *****************
 11407 ;; Defined at:
 11408 ;;		line 57 in file "Reloj_ar.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;		None
 11411 ;; Auto vars:     Size  Location     Type
 11412 ;;		None
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  1    wreg      void 
 11415 ;; Registers used:
 11416 ;;		wreg, status,2
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11422 ;;      Params:         0       0       0       0       0       0       0       0       0
 11423 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11424 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11425 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11426 ;;Total ram usage:        0 bytes
 11427 ;; Hardware stack levels used: 1
 11428 ;; This function calls:
 11429 ;;		Nothing
 11430 ;; This function is called by:
 11431 ;;		_main
 11432 ;;		_RTC_Calendario
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text52
 11437  004930                     __ptext52:
 11438                           	callstack 0
 11439  004930                     _I2C_Init:
 11440                           	callstack 29
 11441  004930                     
 11442                           ;Reloj_ar.c: 59:     TRISB0=1;
 11443  004930  8093               	bsf	3987,0,c	;volatile
 11444                           
 11445                           ;Reloj_ar.c: 60:  TRISB1=1;
 11446  004932  8293               	bsf	3987,1,c	;volatile
 11447  004934                     
 11448                           ;Reloj_ar.c: 61:  SSPSTAT=80;
 11449  004934  0E50               	movlw	80
 11450  004936  6EC7               	movwf	199,c	;volatile
 11451                           
 11452                           ;Reloj_ar.c: 62:     SSPCON1=0x28;
 11453  004938  0E28               	movlw	40
 11454  00493A  6EC6               	movwf	198,c	;volatile
 11455                           
 11456                           ;Reloj_ar.c: 64:  SSPCON2=0;
 11457  00493C  0E00               	movlw	0
 11458  00493E  6EC5               	movwf	197,c	;volatile
 11459                           
 11460                           ;Reloj_ar.c: 65:     SSPADD=((8000000/(4*100000))-1);
 11461  004940  0E13               	movlw	19
 11462  004942  6EC8               	movwf	200,c	;volatile
 11463  004944                     
 11464                           ;Reloj_ar.c: 66:     SSPIE=1;
 11465  004944  869D               	bsf	3997,3,c	;volatile
 11466  004946                     
 11467                           ;Reloj_ar.c: 67:     SSPIF=0;
 11468  004946  969E               	bcf	3998,3,c	;volatile
 11469  004948  0012               	return		;funcret
 11470  00494A                     __end_of_I2C_Init:
 11471                           	callstack 0
 11472                           
 11473 ;; *************** function _PlayCancion *****************
 11474 ;; Defined at:
 11475 ;;		line 96 in file "Melodia.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;		None
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;		None
 11480 ;; Return value:  Size  Location     Type
 11481 ;;                  1    wreg      void 
 11482 ;; Registers used:
 11483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11484 ;; Tracked objects:
 11485 ;;		On entry : 0/0
 11486 ;;		On exit  : 0/0
 11487 ;;		Unchanged: 0/0
 11488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11489 ;;      Params:         0       0       0       0       0       0       0       0       0
 11490 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11491 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11492 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11493 ;;Total ram usage:        2 bytes
 11494 ;; Hardware stack levels used: 1
 11495 ;; Hardware stack levels required when called: 2
 11496 ;; This function calls:
 11497 ;;		_play
 11498 ;; This function is called by:
 11499 ;;		_main
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           	psect	text53
 11504  0035F6                     __ptext53:
 11505                           	callstack 0
 11506  0035F6                     _PlayCancion:
 11507                           	callstack 28
 11508  0035F6                     
 11509                           ;Melodia.c: 99:         play (4 ,4,150);
 11510  0035F6  0E00               	movlw	0
 11511  0035F8  6E07               	movwf	(play@nota+1)^0,c
 11512  0035FA  0E04               	movlw	4
 11513  0035FC  6E06               	movwf	play@nota^0,c
 11514  0035FE  0E00               	movlw	0
 11515  003600  6E09               	movwf	(play@octava+1)^0,c
 11516  003602  0E04               	movlw	4
 11517  003604  6E08               	movwf	play@octava^0,c
 11518  003606  0E00               	movlw	0
 11519  003608  6E0B               	movwf	(play@duracion+1)^0,c
 11520  00360A  0E96               	movlw	150
 11521  00360C  6E0A               	movwf	play@duracion^0,c
 11522  00360E  EC40  F01F         	call	_play	;wreg free
 11523  003612                     
 11524                           ;Melodia.c: 100:         _delay((unsigned long)((50)*(8000000/4000.0)));
 11525  003612  0E82               	movlw	130
 11526  003614  6E13               	movwf	??_PlayCancion^0,c
 11527  003616  0EDE               	movlw	222
 11528  003618                     u6157:
 11529  003618  2EE8               	decfsz	wreg,f,c
 11530  00361A  D7FE               	bra	u6157
 11531  00361C  2E13               	decfsz	??_PlayCancion^0,f,c
 11532  00361E  D7FC               	bra	u6157
 11533  003620                     
 11534                           ;Melodia.c: 101:         play (4 ,4,150);
 11535  003620  0E00               	movlw	0
 11536  003622  6E07               	movwf	(play@nota+1)^0,c
 11537  003624  0E04               	movlw	4
 11538  003626  6E06               	movwf	play@nota^0,c
 11539  003628  0E00               	movlw	0
 11540  00362A  6E09               	movwf	(play@octava+1)^0,c
 11541  00362C  0E04               	movlw	4
 11542  00362E  6E08               	movwf	play@octava^0,c
 11543  003630  0E00               	movlw	0
 11544  003632  6E0B               	movwf	(play@duracion+1)^0,c
 11545  003634  0E96               	movlw	150
 11546  003636  6E0A               	movwf	play@duracion^0,c
 11547  003638  EC40  F01F         	call	_play	;wreg free
 11548                           
 11549                           ;Melodia.c: 102:         _delay((unsigned long)((150)*(8000000/4000.0)));
 11550  00363C  0E02               	movlw	2
 11551  00363E  6E14               	movwf	(??_PlayCancion+1)^0,c
 11552  003640  0E86               	movlw	134
 11553  003642  6E13               	movwf	??_PlayCancion^0,c
 11554  003644  0E99               	movlw	153
 11555  003646                     u6167:
 11556  003646  2EE8               	decfsz	wreg,f,c
 11557  003648  D7FE               	bra	u6167
 11558  00364A  2E13               	decfsz	??_PlayCancion^0,f,c
 11559  00364C  D7FC               	bra	u6167
 11560  00364E  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 11561  003650  D7FA               	bra	u6167
 11562  003652  F000               	nop	
 11563  003654                     
 11564                           ;Melodia.c: 103:         play (4 ,4,150);
 11565  003654  0E00               	movlw	0
 11566  003656  6E07               	movwf	(play@nota+1)^0,c
 11567  003658  0E04               	movlw	4
 11568  00365A  6E06               	movwf	play@nota^0,c
 11569  00365C  0E00               	movlw	0
 11570  00365E  6E09               	movwf	(play@octava+1)^0,c
 11571  003660  0E04               	movlw	4
 11572  003662  6E08               	movwf	play@octava^0,c
 11573  003664  0E00               	movlw	0
 11574  003666  6E0B               	movwf	(play@duracion+1)^0,c
 11575  003668  0E96               	movlw	150
 11576  00366A  6E0A               	movwf	play@duracion^0,c
 11577  00366C  EC40  F01F         	call	_play	;wreg free
 11578  003670                     
 11579                           ;Melodia.c: 104:         _delay((unsigned long)((200)*(8000000/4000.0)));
 11580  003670  0E03               	movlw	3
 11581  003672  6E14               	movwf	(??_PlayCancion+1)^0,c
 11582  003674  0E08               	movlw	8
 11583  003676  6E13               	movwf	??_PlayCancion^0,c
 11584  003678  0E77               	movlw	119
 11585  00367A                     u6177:
 11586  00367A  2EE8               	decfsz	wreg,f,c
 11587  00367C  D7FE               	bra	u6177
 11588  00367E  2E13               	decfsz	??_PlayCancion^0,f,c
 11589  003680  D7FC               	bra	u6177
 11590  003682  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 11591  003684  D7FA               	bra	u6177
 11592  003686  F000               	nop	
 11593                           
 11594                           ;Melodia.c: 106:         play (0 ,4,125);
 11595  003688  0E00               	movlw	0
 11596  00368A  6E07               	movwf	(play@nota+1)^0,c
 11597  00368C  0E00               	movlw	0
 11598  00368E  6E06               	movwf	play@nota^0,c
 11599  003690  0E00               	movlw	0
 11600  003692  6E09               	movwf	(play@octava+1)^0,c
 11601  003694  0E04               	movlw	4
 11602  003696  6E08               	movwf	play@octava^0,c
 11603  003698  0E00               	movlw	0
 11604  00369A  6E0B               	movwf	(play@duracion+1)^0,c
 11605  00369C  0E7D               	movlw	125
 11606  00369E  6E0A               	movwf	play@duracion^0,c
 11607  0036A0  EC40  F01F         	call	_play	;wreg free
 11608  0036A4                     
 11609                           ;Melodia.c: 107:         _delay((unsigned long)((50)*(8000000/4000.0)));
 11610  0036A4  0E82               	movlw	130
 11611  0036A6  6E13               	movwf	??_PlayCancion^0,c
 11612  0036A8  0EDE               	movlw	222
 11613  0036AA                     u6187:
 11614  0036AA  2EE8               	decfsz	wreg,f,c
 11615  0036AC  D7FE               	bra	u6187
 11616  0036AE  2E13               	decfsz	??_PlayCancion^0,f,c
 11617  0036B0  D7FC               	bra	u6187
 11618  0036B2                     
 11619                           ;Melodia.c: 108:         play (4 ,4,125);
 11620  0036B2  0E00               	movlw	0
 11621  0036B4  6E07               	movwf	(play@nota+1)^0,c
 11622  0036B6  0E04               	movlw	4
 11623  0036B8  6E06               	movwf	play@nota^0,c
 11624  0036BA  0E00               	movlw	0
 11625  0036BC  6E09               	movwf	(play@octava+1)^0,c
 11626  0036BE  0E04               	movlw	4
 11627  0036C0  6E08               	movwf	play@octava^0,c
 11628  0036C2  0E00               	movlw	0
 11629  0036C4  6E0B               	movwf	(play@duracion+1)^0,c
 11630  0036C6  0E7D               	movlw	125
 11631  0036C8  6E0A               	movwf	play@duracion^0,c
 11632  0036CA  EC40  F01F         	call	_play	;wreg free
 11633                           
 11634                           ;Melodia.c: 109:         _delay((unsigned long)((150)*(8000000/4000.0)));
 11635  0036CE  0E02               	movlw	2
 11636  0036D0  6E14               	movwf	(??_PlayCancion+1)^0,c
 11637  0036D2  0E86               	movlw	134
 11638  0036D4  6E13               	movwf	??_PlayCancion^0,c
 11639  0036D6  0E99               	movlw	153
 11640  0036D8                     u6197:
 11641  0036D8  2EE8               	decfsz	wreg,f,c
 11642  0036DA  D7FE               	bra	u6197
 11643  0036DC  2E13               	decfsz	??_PlayCancion^0,f,c
 11644  0036DE  D7FC               	bra	u6197
 11645  0036E0  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 11646  0036E2  D7FA               	bra	u6197
 11647  0036E4  F000               	nop	
 11648  0036E6                     
 11649                           ;Melodia.c: 110:         play (7 ,4,200);
 11650  0036E6  0E00               	movlw	0
 11651  0036E8  6E07               	movwf	(play@nota+1)^0,c
 11652  0036EA  0E07               	movlw	7
 11653  0036EC  6E06               	movwf	play@nota^0,c
 11654  0036EE  0E00               	movlw	0
 11655  0036F0  6E09               	movwf	(play@octava+1)^0,c
 11656  0036F2  0E04               	movlw	4
 11657  0036F4  6E08               	movwf	play@octava^0,c
 11658  0036F6  0E00               	movlw	0
 11659  0036F8  6E0B               	movwf	(play@duracion+1)^0,c
 11660  0036FA  0EC8               	movlw	200
 11661  0036FC  6E0A               	movwf	play@duracion^0,c
 11662  0036FE  EC40  F01F         	call	_play	;wreg free
 11663  003702                     
 11664                           ;Melodia.c: 111:         _delay((unsigned long)((400)*(8000000/4000.0)));
 11665  003702  0E05               	movlw	5
 11666  003704  6E14               	movwf	(??_PlayCancion+1)^0,c
 11667  003706  0E0F               	movlw	15
 11668  003708  6E13               	movwf	??_PlayCancion^0,c
 11669  00370A  0EF1               	movlw	241
 11670  00370C                     u6207:
 11671  00370C  2EE8               	decfsz	wreg,f,c
 11672  00370E  D7FE               	bra	u6207
 11673  003710  2E13               	decfsz	??_PlayCancion^0,f,c
 11674  003712  D7FC               	bra	u6207
 11675  003714  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 11676  003716  D7FA               	bra	u6207
 11677  003718  F000               	nop	
 11678                           
 11679                           ;Melodia.c: 112:         play (7 ,3,350);
 11680  00371A  0E00               	movlw	0
 11681  00371C  6E07               	movwf	(play@nota+1)^0,c
 11682  00371E  0E07               	movlw	7
 11683  003720  6E06               	movwf	play@nota^0,c
 11684  003722  0E00               	movlw	0
 11685  003724  6E09               	movwf	(play@octava+1)^0,c
 11686  003726  0E03               	movlw	3
 11687  003728  6E08               	movwf	play@octava^0,c
 11688  00372A  0E01               	movlw	1
 11689  00372C  6E0B               	movwf	(play@duracion+1)^0,c
 11690  00372E  0E5E               	movlw	94
 11691  003730  6E0A               	movwf	play@duracion^0,c
 11692  003732  EC40  F01F         	call	_play	;wreg free
 11693  003736                     
 11694                           ;Melodia.c: 113:         _delay((unsigned long)((300)*(8000000/4000.0)));
 11695  003736  0E04               	movlw	4
 11696  003738  6E14               	movwf	(??_PlayCancion+1)^0,c
 11697  00373A  0E0C               	movlw	12
 11698  00373C  6E13               	movwf	??_PlayCancion^0,c
 11699  00373E  0E34               	movlw	52
 11700  003740                     u6217:
 11701  003740  2EE8               	decfsz	wreg,f,c
 11702  003742  D7FE               	bra	u6217
 11703  003744  2E13               	decfsz	??_PlayCancion^0,f,c
 11704  003746  D7FC               	bra	u6217
 11705  003748  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 11706  00374A  D7FA               	bra	u6217
 11707  00374C  0012               	return		;funcret
 11708  00374E                     __end_of_PlayCancion:
 11709                           	callstack 0
 11710                           
 11711 ;; *************** function _play *****************
 11712 ;; Defined at:
 11713 ;;		line 61 in file "Melodia.c"
 11714 ;; Parameters:    Size  Location     Type
 11715 ;;  nota            2    5[COMRAM] int 
 11716 ;;  octava          2    7[COMRAM] int 
 11717 ;;  duracion        2    9[COMRAM] int 
 11718 ;; Auto vars:     Size  Location     Type
 11719 ;;  fn              2   16[COMRAM] int 
 11720 ;;  CiclosL         2   14[COMRAM] int 
 11721 ;;  mS_Transcurr    2   12[COMRAM] int 
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  1    wreg      void 
 11724 ;; Registers used:
 11725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11726 ;; Tracked objects:
 11727 ;;		On entry : 0/0
 11728 ;;		On exit  : 0/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11731 ;;      Params:         6       0       0       0       0       0       0       0       0
 11732 ;;      Locals:         6       0       0       0       0       0       0       0       0
 11733 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11734 ;;      Totals:        13       0       0       0       0       0       0       0       0
 11735 ;;Total ram usage:       13 bytes
 11736 ;; Hardware stack levels used: 1
 11737 ;; Hardware stack levels required when called: 1
 11738 ;; This function calls:
 11739 ;;		_delay_us
 11740 ;; This function is called by:
 11741 ;;		_PlayCancion
 11742 ;; This function uses a non-reentrant model
 11743 ;;
 11744                           
 11745                           	psect	text54
 11746  003E80                     __ptext54:
 11747                           	callstack 0
 11748  003E80                     _play:
 11749                           	callstack 28
 11750  003E80                     
 11751                           ;Melodia.c: 62:      int fn;;Melodia.c: 63:      int mS_Transcurridos=0;
 11752  003E80  0E00               	movlw	0
 11753  003E82  6E0E               	movwf	(play@mS_Transcurridos+1)^0,c
 11754  003E84  0E00               	movlw	0
 11755  003E86  6E0D               	movwf	play@mS_Transcurridos^0,c
 11756                           
 11757                           ;Melodia.c: 64:      int CiclosL=0;
 11758  003E88  0E00               	movlw	0
 11759  003E8A  6E10               	movwf	(play@CiclosL+1)^0,c
 11760  003E8C  0E00               	movlw	0
 11761  003E8E  6E0F               	movwf	play@CiclosL^0,c
 11762  003E90                     
 11763                           ;Melodia.c: 66:      fn=FreqNota[nota];
 11764  003E90  90D8               	bcf	status,0,c
 11765  003E92  3406               	rlcf	play@nota^0,w,c
 11766  003E94  6ED9               	movwf	fsr2l,c
 11767  003E96  3407               	rlcf	(play@nota+1)^0,w,c
 11768  003E98  6EDA               	movwf	fsr2h,c
 11769  003E9A  0EBA               	movlw	low _FreqNota
 11770  003E9C  26D9               	addwf	fsr2l,f,c
 11771  003E9E  0E01               	movlw	high _FreqNota
 11772  003EA0  22DA               	addwfc	fsr2h,f,c
 11773  003EA2  CFDE F011          	movff	postinc2,play@fn
 11774  003EA6  CFDD F012          	movff	postdec2,play@fn+1
 11775  003EAA                     
 11776                           ;Melodia.c: 68:      fn>>=(octava);
 11777  003EAA  2808               	incf	play@octava^0,w,c
 11778  003EAC  6E0C               	movwf	??_play^0,c
 11779  003EAE  EF5C  F01F         	goto	u5820
 11780  003EB2                     u5825:
 11781  003EB2  3412               	rlcf	(play@fn+1)^0,w,c
 11782  003EB4  3212               	rrcf	(play@fn+1)^0,f,c
 11783  003EB6  3211               	rrcf	play@fn^0,f,c
 11784  003EB8                     u5820:
 11785  003EB8  2E0C               	decfsz	??_play^0,f,c
 11786  003EBA  EF59  F01F         	goto	u5825
 11787  003EBE                     l5046:
 11788                           
 11789                           ;Melodia.c: 73:         TRISCbits . TRISC1 = 0;
 11790  003EBE  9294               	bcf	148,1,c	;volatile
 11791  003EC0                     
 11792                           ;Melodia.c: 74:         LATCbits . LATC1 = 1 ;
 11793  003EC0  828B               	bsf	139,1,c	;volatile
 11794  003EC2                     
 11795                           ;Melodia.c: 75:         delay_us(fn);;
 11796  003EC2  C011  F001         	movff	play@fn,delay_us@nota
 11797  003EC6  C012  F002         	movff	play@fn+1,delay_us@nota+1
 11798  003ECA  EC15  F024         	call	_delay_us	;wreg free
 11799  003ECE                     
 11800                           ;Melodia.c: 76:         CiclosL+=(fn);
 11801  003ECE  5011               	movf	play@fn^0,w,c
 11802  003ED0  260F               	addwf	play@CiclosL^0,f,c
 11803  003ED2  5012               	movf	(play@fn+1)^0,w,c
 11804  003ED4  2210               	addwfc	(play@CiclosL+1)^0,f,c
 11805  003ED6                     
 11806                           ;Melodia.c: 78:         LATCbits . LATC1 = 0 ;
 11807  003ED6  928B               	bcf	139,1,c	;volatile
 11808  003ED8                     
 11809                           ;Melodia.c: 79:          delay_us(fn);
 11810  003ED8  C011  F001         	movff	play@fn,delay_us@nota
 11811  003EDC  C012  F002         	movff	play@fn+1,delay_us@nota+1
 11812  003EE0  EC15  F024         	call	_delay_us	;wreg free
 11813  003EE4                     
 11814                           ;Melodia.c: 80:         CiclosL+=(fn);
 11815  003EE4  5011               	movf	play@fn^0,w,c
 11816  003EE6  260F               	addwf	play@CiclosL^0,f,c
 11817  003EE8  5012               	movf	(play@fn+1)^0,w,c
 11818  003EEA  2210               	addwfc	(play@CiclosL+1)^0,f,c
 11819  003EEC                     l5060:
 11820                           
 11821                           ;Melodia.c: 81:         CiclosL+=25;
 11822  003EEC  0E19               	movlw	25
 11823  003EEE  260F               	addwf	play@CiclosL^0,f,c
 11824  003EF0  0E00               	movlw	0
 11825  003EF2  2210               	addwfc	(play@CiclosL+1)^0,f,c
 11826                           
 11827                           ;Melodia.c: 83:         while(CiclosL>999){
 11828  003EF4  EF84  F01F         	goto	l5068
 11829  003EF8                     l5062:
 11830                           
 11831                           ;Melodia.c: 85:            CiclosL-=1000;
 11832  003EF8  0E18               	movlw	24
 11833  003EFA  260F               	addwf	play@CiclosL^0,f,c
 11834  003EFC  0EFC               	movlw	252
 11835  003EFE  2210               	addwfc	(play@CiclosL+1)^0,f,c
 11836  003F00                     
 11837                           ;Melodia.c: 86:            mS_Transcurridos++;
 11838  003F00  4A0D               	infsnz	play@mS_Transcurridos^0,f,c
 11839  003F02  2A0E               	incf	(play@mS_Transcurridos+1)^0,f,c
 11840  003F04  EF76  F01F         	goto	l5060
 11841  003F08                     l5068:
 11842                           
 11843                           ;Melodia.c: 83:         while(CiclosL>999){
 11844  003F08  BE10               	btfsc	(play@CiclosL+1)^0,7,c
 11845  003F0A  EF92  F01F         	goto	u5830
 11846  003F0E  0EE8               	movlw	232
 11847  003F10  5C0F               	subwf	play@CiclosL^0,w,c
 11848  003F12  0E03               	movlw	3
 11849  003F14  5810               	subwfb	(play@CiclosL+1)^0,w,c
 11850  003F16  B0D8               	btfsc	status,0,c
 11851  003F18  EF90  F01F         	goto	u5831
 11852  003F1C  EF92  F01F         	goto	u5830
 11853  003F20                     u5831:
 11854  003F20  EF7C  F01F         	goto	l5062
 11855  003F24                     u5830:
 11856  003F24                     
 11857                           ;Melodia.c: 89:      }while (duracion>mS_Transcurridos);
 11858  003F24  500A               	movf	play@duracion^0,w,c
 11859  003F26  5C0D               	subwf	play@mS_Transcurridos^0,w,c
 11860  003F28  500E               	movf	(play@mS_Transcurridos+1)^0,w,c
 11861  003F2A  0A80               	xorlw	128
 11862  003F2C  6E0C               	movwf	??_play^0,c
 11863  003F2E  500B               	movf	(play@duracion+1)^0,w,c
 11864  003F30  0A80               	xorlw	128
 11865  003F32  580C               	subwfb	??_play^0,w,c
 11866  003F34  A0D8               	btfss	status,0,c
 11867  003F36  EF9F  F01F         	goto	u5841
 11868  003F3A  EFA1  F01F         	goto	u5840
 11869  003F3E                     u5841:
 11870  003F3E  EF5F  F01F         	goto	l5046
 11871  003F42                     u5840:
 11872  003F42  0012               	return		;funcret
 11873  003F44                     __end_of_play:
 11874                           	callstack 0
 11875                           
 11876 ;; *************** function _delay_us *****************
 11877 ;; Defined at:
 11878 ;;		line 54 in file "Melodia.c"
 11879 ;; Parameters:    Size  Location     Type
 11880 ;;  nota            2    0[COMRAM] int 
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;  i               2    3[COMRAM] int 
 11883 ;; Return value:  Size  Location     Type
 11884 ;;                  1    wreg      void 
 11885 ;; Registers used:
 11886 ;;		wreg, status,2, status,0
 11887 ;; Tracked objects:
 11888 ;;		On entry : 0/0
 11889 ;;		On exit  : 0/0
 11890 ;;		Unchanged: 0/0
 11891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11892 ;;      Params:         2       0       0       0       0       0       0       0       0
 11893 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11894 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11895 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11896 ;;Total ram usage:        5 bytes
 11897 ;; Hardware stack levels used: 1
 11898 ;; This function calls:
 11899 ;;		Nothing
 11900 ;; This function is called by:
 11901 ;;		_play
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           	psect	text55
 11906  00482A                     __ptext55:
 11907                           	callstack 0
 11908  00482A                     _delay_us:
 11909                           	callstack 28
 11910  00482A                     
 11911                           ;Melodia.c: 55:     for(int i=0; i<=nota;i++ ){
 11912  00482A  0E00               	movlw	0
 11913  00482C  6E05               	movwf	(delay_us@i+1)^0,c
 11914  00482E  0E00               	movlw	0
 11915  004830  6E04               	movwf	delay_us@i^0,c
 11916  004832  EF1E  F024         	goto	l4946
 11917  004836                     l182:
 11918                           
 11919                           ;Melodia.c: 56:         _delay((unsigned long)((1)*(8000000/4000000.0)));
 11920  004836  D000               	nop2		;2 cycle nop
 11921  004838                     
 11922                           ;Melodia.c: 57:     }
 11923  004838  4A04               	infsnz	delay_us@i^0,f,c
 11924  00483A  2A05               	incf	(delay_us@i+1)^0,f,c
 11925  00483C                     l4946:
 11926  00483C  5004               	movf	delay_us@i^0,w,c
 11927  00483E  5C01               	subwf	delay_us@nota^0,w,c
 11928  004840  5002               	movf	(delay_us@nota+1)^0,w,c
 11929  004842  0A80               	xorlw	128
 11930  004844  6E03               	movwf	??_delay_us^0,c
 11931  004846  5005               	movf	(delay_us@i+1)^0,w,c
 11932  004848  0A80               	xorlw	128
 11933  00484A  5803               	subwfb	??_delay_us^0,w,c
 11934  00484C  B0D8               	btfsc	status,0,c
 11935  00484E  EF2B  F024         	goto	u5721
 11936  004852  EF2D  F024         	goto	u5720
 11937  004856                     u5721:
 11938  004856  EF1B  F024         	goto	l182
 11939  00485A                     u5720:
 11940  00485A  0012               	return		;funcret
 11941  00485C                     __end_of_delay_us:
 11942                           	callstack 0
 11943                           
 11944 ;; *************** function _LCD_Custom_Char *****************
 11945 ;; Defined at:
 11946 ;;		line 85 in file "LCD_caracter.c"
 11947 ;; Parameters:    Size  Location     Type
 11948 ;;  loc             1    wreg     unsigned char 
 11949 ;;  msg             2    8[COMRAM] PTR unsigned char 
 11950 ;;		 -> character1(8), character3(8), character2(8), 
 11951 ;; Auto vars:     Size  Location     Type
 11952 ;;  loc             1   10[COMRAM] unsigned char 
 11953 ;;  i               1   11[COMRAM] unsigned char 
 11954 ;; Return value:  Size  Location     Type
 11955 ;;                  1    wreg      void 
 11956 ;; Registers used:
 11957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11958 ;; Tracked objects:
 11959 ;;		On entry : 0/0
 11960 ;;		On exit  : 0/0
 11961 ;;		Unchanged: 0/0
 11962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11963 ;;      Params:         2       0       0       0       0       0       0       0       0
 11964 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11965 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11966 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11967 ;;Total ram usage:        4 bytes
 11968 ;; Hardware stack levels used: 1
 11969 ;; Hardware stack levels required when called: 2
 11970 ;; This function calls:
 11971 ;;		_LCD_Char
 11972 ;;		_LCD_Command
 11973 ;; This function is called by:
 11974 ;;		_main
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           	psect	text56
 11979  00450E                     __ptext56:
 11980                           	callstack 0
 11981  00450E                     _LCD_Custom_Char:
 11982                           	callstack 28
 11983                           
 11984                           ;incstack = 0
 11985                           ;LCD_Custom_Char@loc stored from wreg
 11986  00450E  6E0B               	movwf	LCD_Custom_Char@loc^0,c
 11987  004510                     
 11988                           ;LCD_caracter.c: 85: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_c
      +                          aracter.c: 86: {;LCD_caracter.c: 87:     unsigned char i;;LCD_caracter.c: 88:     if (lo
      +                          c< 8 )
 11989  004510  0E08               	movlw	8
 11990  004512  600B               	cpfslt	LCD_Custom_Char@loc^0,c
 11991  004514  EF8E  F022         	goto	u6001
 11992  004518  EF90  F022         	goto	u6000
 11993  00451C                     u6001:
 11994  00451C  EFAA  F022         	goto	l108
 11995  004520                     u6000:
 11996  004520                     
 11997                           ;LCD_caracter.c: 89:     {;LCD_caracter.c: 90:      LCD_Command ( 0x40 +(loc* 8 ));
 11998  004520  500B               	movf	LCD_Custom_Char@loc^0,w,c
 11999  004522  0D08               	mullw	8
 12000  004524  50F3               	movf	243,w,c
 12001  004526  0F40               	addlw	64
 12002  004528  EC16  F022         	call	_LCD_Command
 12003  00452C                     
 12004                           ;LCD_caracter.c: 91:        for (i= 0 ;i< 8 ;i++)
 12005  00452C  0E00               	movlw	0
 12006  00452E  6E0C               	movwf	LCD_Custom_Char@i^0,c
 12007  004530                     l5300:
 12008                           
 12009                           ;LCD_caracter.c: 92:            LCD_Char (msg[i]);
 12010  004530  500C               	movf	LCD_Custom_Char@i^0,w,c
 12011  004532  2409               	addwf	LCD_Custom_Char@msg^0,w,c
 12012  004534  6ED9               	movwf	fsr2l,c
 12013  004536  0E00               	movlw	0
 12014  004538  200A               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
 12015  00453A  6EDA               	movwf	fsr2h,c
 12016  00453C  50DF               	movf	indf2,w,c
 12017  00453E  EC3C  F022         	call	_LCD_Char
 12018  004542  2A0C               	incf	LCD_Custom_Char@i^0,f,c
 12019  004544  0E07               	movlw	7
 12020  004546  640C               	cpfsgt	LCD_Custom_Char@i^0,c
 12021  004548  EFA8  F022         	goto	u6011
 12022  00454C  EFAA  F022         	goto	u6010
 12023  004550                     u6011:
 12024  004550  EF98  F022         	goto	l5300
 12025  004554                     u6010:
 12026  004554                     l108:
 12027  004554  0012               	return		;funcret
 12028  004556                     __end_of_LCD_Custom_Char:
 12029                           	callstack 0
 12030                           
 12031 ;; *************** function _LCD_Command *****************
 12032 ;; Defined at:
 12033 ;;		line 22 in file "LCD_caracter.c"
 12034 ;; Parameters:    Size  Location     Type
 12035 ;;  cmd             1    wreg     unsigned char 
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;  cmd             1    7[COMRAM] unsigned char 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      void 
 12040 ;; Registers used:
 12041 ;;		wreg, status,2, status,0, cstack
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12047 ;;      Params:         0       0       0       0       0       0       0       0       0
 12048 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12049 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12050 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12051 ;;Total ram usage:        2 bytes
 12052 ;; Hardware stack levels used: 1
 12053 ;; Hardware stack levels required when called: 1
 12054 ;; This function calls:
 12055 ;;		_LCD_MSdelay
 12056 ;; This function is called by:
 12057 ;;		_main
 12058 ;;		_LCD_Init
 12059 ;;		_LCD_String_xy
 12060 ;;		_LCD_Clear
 12061 ;;		_LCD_Custom_Char
 12062 ;; This function uses a non-reentrant model
 12063 ;;
 12064                           
 12065                           	psect	text57
 12066  00442C                     __ptext57:
 12067                           	callstack 0
 12068  00442C                     _LCD_Command:
 12069                           	callstack 27
 12070                           
 12071                           ;incstack = 0
 12072                           ;LCD_Command@cmd stored from wreg
 12073  00442C  6E08               	movwf	LCD_Command@cmd^0,c
 12074  00442E                     
 12075                           ;LCD_caracter.c: 22: void LCD_Command(unsigned char cmd );LCD_caracter.c: 23: {;LCD_cara
      +                          cter.c: 24:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 12076  00442E  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 12077  004432  0EF0               	movlw	240
 12078  004434  1607               	andwf	??_LCD_Command^0,f,c
 12079  004436  508C               	movf	140,w,c	;volatile
 12080  004438  0B0F               	andlw	15
 12081  00443A  1007               	iorwf	??_LCD_Command^0,w,c
 12082  00443C  6E8C               	movwf	140,c	;volatile
 12083  00443E                     
 12084                           ;LCD_caracter.c: 25:  LATD0 = 0;
 12085  00443E  908C               	bcf	3980,0,c	;volatile
 12086  004440                     
 12087                           ;LCD_caracter.c: 26:  LATD1 = 1;
 12088  004440  828C               	bsf	3980,1,c	;volatile
 12089  004442                     
 12090                           ;LCD_caracter.c: 27:  __nop();
 12091  004442  F000               	nop	
 12092  004444                     
 12093                           ;LCD_caracter.c: 28:  LATD1 = 0;
 12094  004444  928C               	bcf	3980,1,c	;volatile
 12095  004446                     
 12096                           ;LCD_caracter.c: 29:  LCD_MSdelay(1);
 12097  004446  0E00               	movlw	0
 12098  004448  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12099  00444A  0E01               	movlw	1
 12100  00444C  6E01               	movwf	LCD_MSdelay@val^0,c
 12101  00444E  EC62  F022         	call	_LCD_MSdelay	;wreg free
 12102  004452                     
 12103                           ;LCD_caracter.c: 30:     LATD = (LATD & 0x0f) | (cmd<<4);
 12104  004452  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 12105  004456  3A07               	swapf	??_LCD_Command^0,f,c
 12106  004458  0EF0               	movlw	240
 12107  00445A  1607               	andwf	??_LCD_Command^0,f,c
 12108  00445C  508C               	movf	140,w,c	;volatile
 12109  00445E  0B0F               	andlw	15
 12110  004460  1007               	iorwf	??_LCD_Command^0,w,c
 12111  004462  6E8C               	movwf	140,c	;volatile
 12112  004464                     
 12113                           ;LCD_caracter.c: 31:  LATD1 = 1;
 12114  004464  828C               	bsf	3980,1,c	;volatile
 12115  004466                     
 12116                           ;LCD_caracter.c: 32:  __nop();
 12117  004466  F000               	nop	
 12118  004468                     
 12119                           ;LCD_caracter.c: 33:  LATD1 = 0;
 12120  004468  928C               	bcf	3980,1,c	;volatile
 12121                           
 12122                           ;LCD_caracter.c: 34:  LCD_MSdelay(3);
 12123  00446A  0E00               	movlw	0
 12124  00446C  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12125  00446E  0E03               	movlw	3
 12126  004470  6E01               	movwf	LCD_MSdelay@val^0,c
 12127  004472  EC62  F022         	call	_LCD_MSdelay	;wreg free
 12128  004476  0012               	return		;funcret
 12129  004478                     __end_of_LCD_Command:
 12130                           	callstack 0
 12131                           
 12132 ;; *************** function _LCD_Char *****************
 12133 ;; Defined at:
 12134 ;;		line 38 in file "LCD_caracter.c"
 12135 ;; Parameters:    Size  Location     Type
 12136 ;;  dat             1    wreg     unsigned char 
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;  dat             1    7[COMRAM] unsigned char 
 12139 ;; Return value:  Size  Location     Type
 12140 ;;                  1    wreg      void 
 12141 ;; Registers used:
 12142 ;;		wreg, status,2, status,0, cstack
 12143 ;; Tracked objects:
 12144 ;;		On entry : 0/0
 12145 ;;		On exit  : 0/0
 12146 ;;		Unchanged: 0/0
 12147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12148 ;;      Params:         0       0       0       0       0       0       0       0       0
 12149 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12150 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12151 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12152 ;;Total ram usage:        2 bytes
 12153 ;; Hardware stack levels used: 1
 12154 ;; Hardware stack levels required when called: 1
 12155 ;; This function calls:
 12156 ;;		_LCD_MSdelay
 12157 ;; This function is called by:
 12158 ;;		_main
 12159 ;;		_LCD_String
 12160 ;;		_LCD_Custom_Char
 12161 ;; This function uses a non-reentrant model
 12162 ;;
 12163                           
 12164                           	psect	text58
 12165  004478                     __ptext58:
 12166                           	callstack 0
 12167  004478                     _LCD_Char:
 12168                           	callstack 26
 12169                           
 12170                           ;incstack = 0
 12171                           ;LCD_Char@dat stored from wreg
 12172  004478  6E08               	movwf	LCD_Char@dat^0,c
 12173  00447A                     
 12174                           ;LCD_caracter.c: 38: void LCD_Char(unsigned char dat);LCD_caracter.c: 39: {;LCD_caracter
      +                          .c: 40:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 12175  00447A  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12176  00447E  0EF0               	movlw	240
 12177  004480  1607               	andwf	??_LCD_Char^0,f,c
 12178  004482  508C               	movf	140,w,c	;volatile
 12179  004484  0B0F               	andlw	15
 12180  004486  1007               	iorwf	??_LCD_Char^0,w,c
 12181  004488  6E8C               	movwf	140,c	;volatile
 12182  00448A                     
 12183                           ;LCD_caracter.c: 41:  LATD0 = 1;
 12184  00448A  808C               	bsf	3980,0,c	;volatile
 12185  00448C                     
 12186                           ;LCD_caracter.c: 42:  LATD1 = 1;
 12187  00448C  828C               	bsf	3980,1,c	;volatile
 12188  00448E                     
 12189                           ;LCD_caracter.c: 43:  __nop();
 12190  00448E  F000               	nop	
 12191  004490                     
 12192                           ;LCD_caracter.c: 44:  LATD1 = 0;
 12193  004490  928C               	bcf	3980,1,c	;volatile
 12194  004492                     
 12195                           ;LCD_caracter.c: 45:  LCD_MSdelay(1);
 12196  004492  0E00               	movlw	0
 12197  004494  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12198  004496  0E01               	movlw	1
 12199  004498  6E01               	movwf	LCD_MSdelay@val^0,c
 12200  00449A  EC62  F022         	call	_LCD_MSdelay	;wreg free
 12201  00449E                     
 12202                           ;LCD_caracter.c: 46:     LATD = (LATD & 0x0f) | (dat<<4);
 12203  00449E  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12204  0044A2  3A07               	swapf	??_LCD_Char^0,f,c
 12205  0044A4  0EF0               	movlw	240
 12206  0044A6  1607               	andwf	??_LCD_Char^0,f,c
 12207  0044A8  508C               	movf	140,w,c	;volatile
 12208  0044AA  0B0F               	andlw	15
 12209  0044AC  1007               	iorwf	??_LCD_Char^0,w,c
 12210  0044AE  6E8C               	movwf	140,c	;volatile
 12211  0044B0                     
 12212                           ;LCD_caracter.c: 47:  LATD1 = 1;
 12213  0044B0  828C               	bsf	3980,1,c	;volatile
 12214  0044B2                     
 12215                           ;LCD_caracter.c: 48:  __nop();
 12216  0044B2  F000               	nop	
 12217  0044B4                     
 12218                           ;LCD_caracter.c: 49:  LATD1 = 0;
 12219  0044B4  928C               	bcf	3980,1,c	;volatile
 12220                           
 12221                           ;LCD_caracter.c: 50:  LCD_MSdelay(3);
 12222  0044B6  0E00               	movlw	0
 12223  0044B8  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12224  0044BA  0E03               	movlw	3
 12225  0044BC  6E01               	movwf	LCD_MSdelay@val^0,c
 12226  0044BE  EC62  F022         	call	_LCD_MSdelay	;wreg free
 12227  0044C2  0012               	return		;funcret
 12228  0044C4                     __end_of_LCD_Char:
 12229                           	callstack 0
 12230                           
 12231 ;; *************** function _LCD_MSdelay *****************
 12232 ;; Defined at:
 12233 ;;		line 97 in file "LCD_caracter.c"
 12234 ;; Parameters:    Size  Location     Type
 12235 ;;  val             2    0[COMRAM] unsigned int 
 12236 ;; Auto vars:     Size  Location     Type
 12237 ;;  j               2    4[COMRAM] unsigned int 
 12238 ;;  i               2    2[COMRAM] unsigned int 
 12239 ;; Return value:  Size  Location     Type
 12240 ;;                  1    wreg      void 
 12241 ;; Registers used:
 12242 ;;		wreg, status,2, status,0
 12243 ;; Tracked objects:
 12244 ;;		On entry : 0/0
 12245 ;;		On exit  : 0/0
 12246 ;;		Unchanged: 0/0
 12247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12248 ;;      Params:         2       0       0       0       0       0       0       0       0
 12249 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12250 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12251 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12252 ;;Total ram usage:        6 bytes
 12253 ;; Hardware stack levels used: 1
 12254 ;; This function calls:
 12255 ;;		Nothing
 12256 ;; This function is called by:
 12257 ;;		_main
 12258 ;;		_LCD_Init
 12259 ;;		_LCD_Command
 12260 ;;		_LCD_Char
 12261 ;;		_LCD_Clear
 12262 ;;		_RTC_Calendario
 12263 ;; This function uses a non-reentrant model
 12264 ;;
 12265                           
 12266                           	psect	text59
 12267  0044C4                     __ptext59:
 12268                           	callstack 0
 12269  0044C4                     _LCD_MSdelay:
 12270                           	callstack 26
 12271  0044C4                     
 12272                           ;LCD_caracter.c: 97: void LCD_MSdelay(unsigned int val);LCD_caracter.c: 98: {;LCD_caract
      +                          er.c: 99:  unsigned int i,j;;LCD_caracter.c: 100:  for(i=0;i<val;i++)
 12273  0044C4  0E00               	movlw	0
 12274  0044C6  6E04               	movwf	(LCD_MSdelay@i+1)^0,c
 12275  0044C8  0E00               	movlw	0
 12276  0044CA  6E03               	movwf	LCD_MSdelay@i^0,c
 12277  0044CC  EF7B  F022         	goto	l4292
 12278  0044D0                     l4280:
 12279                           
 12280                           ;LCD_caracter.c: 101:      for(j=0;j<165;j++);
 12281  0044D0  0E00               	movlw	0
 12282  0044D2  6E06               	movwf	(LCD_MSdelay@j+1)^0,c
 12283  0044D4  0E00               	movlw	0
 12284  0044D6  6E05               	movwf	LCD_MSdelay@j^0,c
 12285  0044D8                     l4286:
 12286  0044D8  4A05               	infsnz	LCD_MSdelay@j^0,f,c
 12287  0044DA  2A06               	incf	(LCD_MSdelay@j+1)^0,f,c
 12288  0044DC  5006               	movf	(LCD_MSdelay@j+1)^0,w,c
 12289  0044DE  E109               	bnz	u4620
 12290  0044E0  0EA5               	movlw	165
 12291  0044E2  5C05               	subwf	LCD_MSdelay@j^0,w,c
 12292  0044E4  A0D8               	btfss	status,0,c
 12293  0044E6  EF77  F022         	goto	u4621
 12294  0044EA  EF79  F022         	goto	u4620
 12295  0044EE                     u4621:
 12296  0044EE  EF6C  F022         	goto	l4286
 12297  0044F2                     u4620:
 12298  0044F2  4A03               	infsnz	LCD_MSdelay@i^0,f,c
 12299  0044F4  2A04               	incf	(LCD_MSdelay@i+1)^0,f,c
 12300  0044F6                     l4292:
 12301  0044F6  5001               	movf	LCD_MSdelay@val^0,w,c
 12302  0044F8  5C03               	subwf	LCD_MSdelay@i^0,w,c
 12303  0044FA  5002               	movf	(LCD_MSdelay@val+1)^0,w,c
 12304  0044FC  5804               	subwfb	(LCD_MSdelay@i+1)^0,w,c
 12305  0044FE  A0D8               	btfss	status,0,c
 12306  004500  EF84  F022         	goto	u4631
 12307  004504  EF86  F022         	goto	u4630
 12308  004508                     u4631:
 12309  004508  EF68  F022         	goto	l4280
 12310  00450C                     u4630:
 12311  00450C  0012               	return		;funcret
 12312  00450E                     __end_of_LCD_MSdelay:
 12313                           	callstack 0
 12314                           
 12315                           	psect	rparam
 12316  0000                     
 12317                           	psect	idloc
 12318                           
 12319                           ;Config register IDLOC0 @ 0x200000
 12320                           ;	unspecified, using default values
 12321  200000                     	org	2097152
 12322  200000  FF                 	db	255
 12323                           
 12324                           ;Config register IDLOC1 @ 0x200001
 12325                           ;	unspecified, using default values
 12326  200001                     	org	2097153
 12327  200001  FF                 	db	255
 12328                           
 12329                           ;Config register IDLOC2 @ 0x200002
 12330                           ;	unspecified, using default values
 12331  200002                     	org	2097154
 12332  200002  FF                 	db	255
 12333                           
 12334                           ;Config register IDLOC3 @ 0x200003
 12335                           ;	unspecified, using default values
 12336  200003                     	org	2097155
 12337  200003  FF                 	db	255
 12338                           
 12339                           ;Config register IDLOC4 @ 0x200004
 12340                           ;	unspecified, using default values
 12341  200004                     	org	2097156
 12342  200004  FF                 	db	255
 12343                           
 12344                           ;Config register IDLOC5 @ 0x200005
 12345                           ;	unspecified, using default values
 12346  200005                     	org	2097157
 12347  200005  FF                 	db	255
 12348                           
 12349                           ;Config register IDLOC6 @ 0x200006
 12350                           ;	unspecified, using default values
 12351  200006                     	org	2097158
 12352  200006  FF                 	db	255
 12353                           
 12354                           ;Config register IDLOC7 @ 0x200007
 12355                           ;	unspecified, using default values
 12356  200007                     	org	2097159
 12357  200007  FF                 	db	255
 12358                           
 12359                           	psect	config
 12360                           
 12361                           ;Config register CONFIG1L @ 0x300000
 12362                           ;	PLL Prescaler Selection bits
 12363                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12364                           ;	System Clock Postscaler Selection bits
 12365                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12366                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12367                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12368  300000                     	org	3145728
 12369  300000  00                 	db	0
 12370                           
 12371                           ;Config register CONFIG1H @ 0x300001
 12372                           ;	Oscillator Selection bits
 12373                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12374                           ;	Fail-Safe Clock Monitor Enable bit
 12375                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12376                           ;	Internal/External Oscillator Switchover bit
 12377                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12378  300001                     	org	3145729
 12379  300001  09                 	db	9
 12380                           
 12381                           ;Config register CONFIG2L @ 0x300002
 12382                           ;	Power-up Timer Enable bit
 12383                           ;	PWRT = ON, PWRT enabled
 12384                           ;	Brown-out Reset Enable bits
 12385                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12386                           ;	Brown-out Reset Voltage bits
 12387                           ;	BORV = 3, Minimum setting 2.05V
 12388                           ;	USB Voltage Regulator Enable bit
 12389                           ;	VREGEN = OFF, USB voltage regulator disabled
 12390  300002                     	org	3145730
 12391  300002  18                 	db	24
 12392                           
 12393                           ;Config register CONFIG2H @ 0x300003
 12394                           ;	Watchdog Timer Enable bit
 12395                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12396                           ;	Watchdog Timer Postscale Select bits
 12397                           ;	WDTPS = 32768, 1:32768
 12398  300003                     	org	3145731
 12399  300003  1E                 	db	30
 12400                           
 12401                           ; Padding undefined space
 12402  300004                     	org	3145732
 12403  300004  FF                 	db	255
 12404                           
 12405                           ;Config register CONFIG3H @ 0x300005
 12406                           ;	CCP2 MUX bit
 12407                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12408                           ;	PORTB A/D Enable bit
 12409                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12410                           ;	Low-Power Timer 1 Oscillator Enable bit
 12411                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12412                           ;	MCLR Pin Enable bit
 12413                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12414  300005                     	org	3145733
 12415  300005  81                 	db	129
 12416                           
 12417                           ;Config register CONFIG4L @ 0x300006
 12418                           ;	Stack Full/Underflow Reset Enable bit
 12419                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12420                           ;	Single-Supply ICSP Enable bit
 12421                           ;	LVP = OFF, Single-Supply ICSP disabled
 12422                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12423                           ;	ICPRT = OFF, ICPORT disabled
 12424                           ;	Extended Instruction Set Enable bit
 12425                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12426                           ;	Background Debugger Enable bit
 12427                           ;	DEBUG = 0x1, unprogrammed default
 12428  300006                     	org	3145734
 12429  300006  80                 	db	128
 12430                           
 12431                           ; Padding undefined space
 12432  300007                     	org	3145735
 12433  300007  FF                 	db	255
 12434                           
 12435                           ;Config register CONFIG5L @ 0x300008
 12436                           ;	Code Protection bit
 12437                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12438                           ;	Code Protection bit
 12439                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12440                           ;	Code Protection bit
 12441                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12442                           ;	Code Protection bit
 12443                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12444  300008                     	org	3145736
 12445  300008  0F                 	db	15
 12446                           
 12447                           ;Config register CONFIG5H @ 0x300009
 12448                           ;	Boot Block Code Protection bit
 12449                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12450                           ;	Data EEPROM Code Protection bit
 12451                           ;	CPD = OFF, Data EEPROM is not code-protected
 12452  300009                     	org	3145737
 12453  300009  C0                 	db	192
 12454                           
 12455                           ;Config register CONFIG6L @ 0x30000A
 12456                           ;	Write Protection bit
 12457                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12458                           ;	Write Protection bit
 12459                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12460                           ;	Write Protection bit
 12461                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12462                           ;	Write Protection bit
 12463                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12464  30000A                     	org	3145738
 12465  30000A  0F                 	db	15
 12466                           
 12467                           ;Config register CONFIG6H @ 0x30000B
 12468                           ;	Configuration Register Write Protection bit
 12469                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12470                           ;	Boot Block Write Protection bit
 12471                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12472                           ;	Data EEPROM Write Protection bit
 12473                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12474  30000B                     	org	3145739
 12475  30000B  E0                 	db	224
 12476                           
 12477                           ;Config register CONFIG7L @ 0x30000C
 12478                           ;	Table Read Protection bit
 12479                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12480                           ;	Table Read Protection bit
 12481                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12482                           ;	Table Read Protection bit
 12483                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12484                           ;	Table Read Protection bit
 12485                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12486  30000C                     	org	3145740
 12487  30000C  0F                 	db	15
 12488                           
 12489                           ;Config register CONFIG7H @ 0x30000D
 12490                           ;	Boot Block Table Read Protection bit
 12491                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12492  30000D                     	org	3145741
 12493  30000D  40                 	db	64
 12494                           tosu	equ	0xFFF
 12495                           tosh	equ	0xFFE
 12496                           tosl	equ	0xFFD
 12497                           stkptr	equ	0xFFC
 12498                           pclatu	equ	0xFFB
 12499                           pclath	equ	0xFFA
 12500                           pcl	equ	0xFF9
 12501                           tblptru	equ	0xFF8
 12502                           tblptrh	equ	0xFF7
 12503                           tblptrl	equ	0xFF6
 12504                           tablat	equ	0xFF5
 12505                           prodh	equ	0xFF4
 12506                           prodl	equ	0xFF3
 12507                           indf0	equ	0xFEF
 12508                           postinc0	equ	0xFEE
 12509                           postdec0	equ	0xFED
 12510                           preinc0	equ	0xFEC
 12511                           plusw0	equ	0xFEB
 12512                           fsr0h	equ	0xFEA
 12513                           fsr0l	equ	0xFE9
 12514                           wreg	equ	0xFE8
 12515                           indf1	equ	0xFE7
 12516                           postinc1	equ	0xFE6
 12517                           postdec1	equ	0xFE5
 12518                           preinc1	equ	0xFE4
 12519                           plusw1	equ	0xFE3
 12520                           fsr1h	equ	0xFE2
 12521                           fsr1l	equ	0xFE1
 12522                           bsr	equ	0xFE0
 12523                           indf2	equ	0xFDF
 12524                           postinc2	equ	0xFDE
 12525                           postdec2	equ	0xFDD
 12526                           preinc2	equ	0xFDC
 12527                           plusw2	equ	0xFDB
 12528                           fsr2h	equ	0xFDA
 12529                           fsr2l	equ	0xFD9
 12530                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    0
    Data        55
    BSS         167
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    132     160
    BANK1           256     68     241
    BANK2           256      0      20
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_3(CODE[7]), STR_2(CODE[7]), STR_1(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1259_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character3(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> Stemp(BANK1[20]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), RTC_Calendario@year(BANK1[10]), 
		 -> RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), 
		 -> RTC_Calendario@secs(BANK1[10]), STR_5(CODE[3]), STR_4(CODE[3]), Stemp(BANK1[20]), 


Critical Paths under _main in COMRAM

    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___flsub
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _PlayCancion->_play
    _play->_delay_us
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_LCD_MSdelay
    _LCD_Char->_LCD_MSdelay

Critical Paths under _main in BANK0

    _main->_RTC_Calendario
    _ReadADC->___fltol
    _RTC_Calendario->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol

Critical Paths under _main in BANK1

    _main->_RTC_Calendario

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  112693
                                            128 BANK0      4     4      0
                           _I2C_Init
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                    _LCD_Custom_Char
                           _LCD_Init
                        _LCD_MSdelay
                      _LCD_String_xy
                        _PlayCancion
                     _RTC_Calendario
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ReadLUZ                                              6     4      2      46
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              6     4      2    8609
                                              2 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              6 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendario                                      71    71      0   49148
                                            126 BANK0      2     2      0
                                              0 BANK1     68    68      0
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                         _LCD_String
                      _LCD_String_xy
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   38295
                                            110 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   36264
                                            102 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   35876
                                             70 BANK0     32    26      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5327
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   24672
                                              2 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             70 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             86 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             86 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             70 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    2310
                                             45 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             45 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    4100
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    1929
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1596
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1596
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PlayCancion                                          2     2      0    2002
                                             18 COMRAM     2     2      0
                               _play
 ---------------------------------------------------------------------------------
 (2) _play                                                13     7      6    2002
                                              5 COMRAM    13     7      6
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_us                                             5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Custom_Char                                      4     2      2    2002
                                              8 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     820
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0     820
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (5) _LCD_MSdelay                                          6     4      2     776
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _LCD_Char
     _LCD_MSdelay
   _LCD_Clear
     _LCD_Command
       _LCD_MSdelay
     _LCD_MSdelay
   _LCD_Command
   _LCD_Custom_Char
     _LCD_Char
     _LCD_Command
   _LCD_Init
     _LCD_Command
     _LCD_MSdelay
   _LCD_MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _PlayCancion
     _play
       _delay_us
   _RTC_Calendario
     _I2C_Init
     _I2C_Stop
     _LCD_Clear
     _LCD_Init
     _LCD_MSdelay
     _LCD_String
     _LCD_String_xy
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ReadLUZ (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _ReadADC
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _ReadLUZ
   ___flge
   ___xxtofl
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      14       9        7.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     44      F1       7       94.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     84      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     204      20        0.0%
DATA                 0      0     204       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 04 10:47:52 2021

                          ?_LCD_MSdelay 0001                            ___fldiv@aexp 0046  
                          ___fldiv@bexp 0045                                       _i 005F  
                    __size_of_I2C_Ready 0012                            ___fldiv@sign 003E  
                    __size_of_I2C_Start 002E                            ?_LCD_Command 0001  
                           _SSPSTATbits 000FC7                      __size_of_I2C_Write 0022  
                                    l82 488A                                      l59 2724  
                                    l85 4476                                      l94 4280  
                                    l88 44C2                                      l99 4664  
                          ___awdiv@sign 0006                     ___wmul@multiplicand 0003  
                           ?_LCD_String 0009                         _LCD_Custom_Char 450E  
RTC_Read_Calendar@read_calendar_address 0004                                     l102 4998  
                                   l116 450C                                     l108 4554  
                                   l140 3992                                     l310 46A6  
                                   l142 39A0                                     l143 3A56  
                                   l312 46B4                                     l321 499A  
                                   l241 4336                                     l314 46D4  
                                   l323 49A8                                     l315 46DA  
                                   l324 49AA                                     l340 489E  
                                   l253 2DC4                                     l165 40DA  
                                   l182 4836                                     l318 4948  
                                   l342 48B8                                     l238 45E0  
                                   l167 40E8                                     l184 485A  
                                   l192 3F42                                     l168 4102  
                                   l345 48BE                                     l362 492E  
                                   l338 4890                                     l354 494C  
                                   l195 374C                                     l347 48CC  
                                   l372 4962                                     l356 495A  
                                   l349 48E6                                     l366 4976  
                                   l358 495C                                     l622 3FF2  
                                   l375 4970                                     l369 4984  
                                   l609 3E7E                                     l378 490C  
                                   l643 3912                                     l652 4782  
                                   l637 409C                                     l648 3958  
                                   l906 1C9E                                     l923 1DB8  
                                   l915 1F6E                                     l907 1C8C  
                                   l675 3854                                     l932 1E88  
                                   l908 1C52                                     l933 1E76  
                                   l960 2AD4                                     l962 2934  
                                   l971 297A                                     l948 459A  
                                   l973 29F2                                     l965 28F8  
                                   l974 29E0                                     l992 2034  
                                   l996 2398                                     l999 222A  
                                   _PEN 007E2A                                     _Day 010A  
                       __end_of_I2C_Ack 4986                                     _pad 3CF6  
                                   _min 010E                                     _sec 0110  
                                   _luz 00F0                            ___awmod@sign 0006  
                                   wreg 000FE8                            ___flmul@aexp 0026  
                          ___flmul@bexp 0027                            ___flmul@sign 0021  
                          ___flmul@temp 002C                            ___flmul@prod 0028  
                           LCD_Char@dat 0008                            ___fltol@exp1 0061  
                                  l1001 22A2                                    l1002 2290  
                                  l1101 3D3C                                    l1104 3D7E  
                                  l1040 33A0                                    l1009 235A  
                                  l1033 3308                                    l1106 3DBA  
                                  l1124 14A0                                    l1204 2DFE  
                                  l1036 3464                                    l1213 2E9C  
                                  l1142 0C36                                    l1206 2E06  
                                  l1047 33FC                                    l1056 4388  
                                  l1314 35EC                                    l1410 41C4  
                                  l1170 1076                                    l1323 32B0  
                                  l1227 303A                                    l1243 1594  
                                  l1317 35F4                                    l1405 41BC  
                                  l1333 46A0                                    l1229 309E  
                                  l1326 31F4                                    l1423 4222  
                                  l4000 3DDA                                    l1353 474A  
                                  l1265 190E                                    l4010 3E0E  
                                  l4002 3DE8                                    l1418 421A  
                                  l1258 1AAE                                    l1274 415C  
                                  l1339 47BA                                    l1347 43DA  
                                  l1275 4164                                    l4020 3E48  
                                  l4012 3E16                                    l4004 3DF0  
                                  l4100 38F2                                    l1285 3B54  
                                  l1429 4712                                    l4030 3E6E  
                                  l4022 3E50                                    l4014 3E1E  
                                  l4006 3DF4                                    l4102 3900  
                                  l4110 474C                                    l1391 4828  
                                  l5000 4860                                    l4032 3E76  
                                  l4024 3E52                                    l4016 3E2C  
                                  l4008 3DFC                                    l4040 3F56  
                                  l4104 3950                                    l4112 4762  
                                  l4120 3766                                    l1368 3CF4  
                                  l1376 4624                                    l1385 42DC  
                                  l5010 4884                                    l5002 486C  
                                  l4026 3E58                                    l4018 3E32  
                                  l4050 3F8A                                    l4042 3F5E  
                                  l4106 3956                                    l4114 4772  
                                  l4130 37B6                                    l4202 3B4C  
                                  l4210 4166                                    l1379 49AC  
                                  l1395 3C2A                                    l5012 4986  
                                  l5004 4872                                    l4028 3E5E  
                                  l4060 3FC6                                    l4052 3F92  
                                  l4044 3F62                                    l4036 3F44  
                                  l3500 1B06                                    l4140 37E0  
                                  l4132 37BA                                    l4124 377A  
                                  l4220 30A0                                    l4300 0864  
                                  l5020 435A                                    l5100 332E  
                                  l5006 4878                                    l5030 4638  
                                  l4062 3FCC                                    l4054 3F9A  
                                  l4046 3F70                                    l4038 3F48  
                                  l3510 1B36                                    l3502 1B16  
                                  l4150 3808                                    l4142 37EA  
                                  l4134 37C8                                    l4126 37A4  
                                  l4118 374E                                    l4222 30C0  
                                  l4206 4282                                    l4214 419C  
                                  l4310 08B0                                    l4302 0872  
                                  l5022 4376                                    l5014 4338  
                                  l5110 3388                                    l5040 3E80  
                                  l5008 487E                                    l5032 4640  
                                  l4056 3FA8                                    l4064 3FD2  
                                  l4048 3F78                                    l4080 4070  
                                  l4072 3FF4                                    l3600 1D0C  
                                  l3520 1B76                                    l3512 1B44  
                                  l3504 1B1C                                    l4152 3814  
                                  l4144 37F4                                    l4128 37A6  
                                  l4240 3268                                    l4232 31A8  
                                  l4224 3116                                    l4208 4292  
                                  l4216 41AE                                    l4400 0C54  
                                  l4320 08F6                                    l4312 08C2  
                                  l4304 087A                                    l5016 434A  
                                  l5200 2B7E                                    l5120 33EC  
                                  l5112 338A                                    l5104 3342  
                                  l5050 3EC2                                    l5042 3E90  
                                  l5034 464A                                    l5026 4628  
                                  l4066 3FE2                                    l4058 3FBE  
                                  l4082 4094                                    l4074 4022  
                                  l4090 3884                                    l3610 1D52  
                                  l3602 1D1A                                    l3530 1BB0  
                                  l3522 1B78                                    l3514 1B46  
                                  l3506 1B2E                                    l4154 3824  
                                  l4242 3290                                    l4234 31E4  
                                  l4226 312A                                    l4170 3D34  
                                  l4162 3CF6                                    l4402 0C66  
                                  l4410 0CC4                                    l4322 08FA  
                                  l4314 08D0                                    l4306 089E  
                                  l5018 4352                                    l5202 2B9C  
                                  l5210 2BE8                                    l5130 3444  
                                  l5122 340A                                    l5114 3396  
                                  l5106 334A                                    l5300 4530  
                                  l5060 3EEC                                    l5052 3ECE  
                                  l5044 3EAA                                    l5036 4652  
                                  l5028 4628                                    l4068 3FEA  
                                  l4084 409A                                    l4076 4032  
                                  l4092 3894                                    l3620 1DCE  
                                  l3612 1D86                                    l3604 1D1C  
                                  l3540 1BC4                                    l3532 1BB4  
                                  l3516 1B56                                    l3524 1B80  
                                  l3508 1B30                                    l4156 3834  
                                  l4244 32A0                                    l4228 3138  
                                  l4236 3218                                    l3700 481C  
                                  l4180 3DA2                                    l4172 3D48  
                                  l4164 3D06                                    l4500 117A  
                                  l4420 0D02                                    l4412 0CCC  
                                  l4404 0C82                                    l4340 09B0  
                                  l4332 0960                                    l4324 08FE  
                                  l4316 08E2                                    l4308 08A8  
                                  l4252 41C6                                    l5212 2BF0  
                                  l5204 2BBA                                    l5132 3452  
                                  l5124 340C                                    l5116 33D2  
                                  l5108 3356                                    l5140 395E  
                                  l5302 4542                                    l5070 3F24  
                                  l5062 3EF8                                    l5054 3ED6  
                                  l5046 3EBE                                    l5310 3620  
                                  l5038 4658                                    l4262 4784  
                                  l4270 43A2                                    l4078 4060  
                                  l4094 38C2                                    l3630 1E0A  
                                  l3622 1DDE                                    l3614 1D88  
                                  l3606 1D26                                    l3550 1BD8  
                                  l3542 1BC8                                    l3534 1BB8  
                                  l3526 1B90                                    l3518 1B66  
                                  l4158 3844                                    l4190 3ADE  
                                  l4238 3254                                    l3470 3C2C  
                                  l4174 3D5C                                    l4166 3D1A  
                                  l4502 1186                                    l4510 11A6  
                                  l4422 0D14                                    l4430 0D54  
                                  l4414 0CDE                                    l4406 0CB8  
                                  l4350 0A34                                    l4334 0972  
                                  l4318 08EE                                    l4326 0904  
                                  l5230 2C88                                    l5214 2C0E  
                                  l5206 2BCC                                    l5134 3454  
                                  l5126 3410                                    l5118 33DE  
                                  l5150 39B4                                    l5142 398C  
                                  l4280 44D0                                    l5304 4544  
                                  l5064 3F00                                    l5056 3ED8  
                                  l5048 3EC0                                    l5320 36E6  
                                  l5312 3654                                    l5080 42E0  
                                  l5072 459E                                    l3712 48E8  
                                  l4272 43D0                                    l3800 2932  
                                  l3720 2748                                    l4096 38D2  
                                  l4088 3856                                    l3640 1E36  
                                  l3632 1E0C                                    l3616 1D98  
                                  l3608 1D2C                                    l3560 1BEC  
                                  l3552 1BDC                                    l3544 1BCC  
                                  l3536 1BBC                                    l3528 1BA2  
                                  l4192 3AEA                                    l4184 3A58  
                                  l3480 3CAE                                    l3472 3C3E  
                                  l4176 3D60                                    l4168 3D28  
                                  l3704 4714                                    l4520 122C  
                                  l4512 11B8                                    l4504 1196  
                                  l4440 0E3C                                    l4432 0D5C  
                                  l4424 0D22                                    l4416 0CF0  
                                  l4408 0CC0                                    l4352 0A46  
                                  l4336 098E                                    l4328 092A  
                                  l4344 09D8                                    l4248 4666  
                                  l4256 41FC                                    l5240 2CF2  
                                  l5232 2CA6                                    l5216 2C2C  
                                  l5224 2C60                                    l5208 2BD8  
                                  l5128 3434                                    l5152 3A4E  
                                  l5144 398E                                    l5160 40D4  
                                  l4290 44F2                                    l5058 3EE4  
                                  l5322 3702                                    l5314 3670  
                                  l5306 35F6                                    l5090 4332  
                                  l5082 42F2                                    l5074 45B0  
                                  l3714 4904                                    l4274 43D4  
                                  l4266 438A                                    l3810 2978  
                                  l3802 2944                                    l3730 2788  
                                  l3722 2756                                    l4098 38E0  
                                  l3650 1E6E                                    l3634 1E1A  
                                  l3626 1DF2                                    l3642 1E38  
                                  l3618 1DA8                                    l3570 1C4A  
                                  l3554 1BE0                                    l3546 1BD0  
                                  l3538 1BC0                                    l3562 1BF0  
                                  l3490 1ACC                                    l4186 3A78  
                                  l3474 3C50                                    l4178 3D8E  
                                  l4530 12A6                                    l4522 1260  
                                  l4514 11CA                                    l4506 119A  
                                  l4450 0EFA                                    l4442 0E70  
                                  l4434 0D6C                                    l4426 0D3A  
                                  l4418 0CFE                                    l4370 0B02  
                                  l4354 0A62                                    l4346 09FE  
                                  l4362 0A7E                                    l4338 09A6  
                                  l4258 420E                                    l4610 2DF2  
                                  l5234 2CC4                                    l5226 2C66  
                                  l5218 2C4A                                    l5146 3990  
                                  l5138 395A                                    l5162 40D6  
                                  l5330 23A2                                    l4292 44F6  
                                  l5068 3F08                                    l5324 3736  
                                  l5316 36A4                                    l5308 3612  
                                  l5084 4302                                    l5076 45C0  
                                  l4268 438E                                    l3820 29D8  
                                  l3804 295A                                    l3812 298A  
                                  l3740 27AE                                    l3732 278A  
                                  l3724 2758                                    l3900 207E  
                                  l3660 1EEC                                    l3636 1E22  
                                  l3628 1DFC                                    l3644 1E46  
                                  l3580 1C80                                    l3572 1C60  
                                  l3564 1BF4                                    l3556 1BE4  
                                  l3548 1BD4                                    l3492 1ADC  
                                  l3484 1AB0                                    l4188 3AB6  
                                  l4196 3AF6                                    l3476 3C5A  
                                  l4540 12EA                                    l4532 12B8  
                                  l4524 1268                                    l4516 11CE  
                                  l4508 11A0                                    l4460 0F96  
                                  l4452 0F10                                    l4436 0D80  
                                  l4444 0E76                                    l4428 0D4C  
                                  l4372 0B08                                    l4380 0BD0  
                                  l4364 0A98                                    l3708 46DC  
                                  l4620 2E56                                    l4612 2E1C  
                                  l4604 2DC6                                    l5252 2D12  
                                  l5236 2CD6                                    l5228 2C6A  
                                  l5180 2AF6                                    l5172 2AD6  
                                  l5092 32B4                                    l5148 39A8  
                                  l5164 40D8                                    l5156 409E  
                                  l5340 23E6                                    l5332 23A6  
                                  l4286 44D8                                    l4278 44C4  
                                  l5318 36B2                                    l4294 499A  
                                  l5086 4312                                    l5078 45D0  
                                  l4702 35AC                                    l3830 2A46  
                                  l3814 2998                                    l3806 2960  
                                  l3750 27EE                                    l3742 27BC  
                                  l3726 2768                                    l3734 2792  
                                  l3718 273C                                    l3910 20D0  
                                  l3902 2094                                    l3670 1F32  
                                  l3654 1E98                                    l3662 1EEE  
                                  l3646 1E4A                                    l3638 1E26  
                                  l3590 1CD0                                    l3582 1C8A  
                                  l3574 1C6C                                    l3566 1C1E  
                                  l3558 1BE8                                    l3494 1AEC  
                                  l3486 1ABC                                    l4198 3B08  
                                  l3478 3C78                                    l4550 132A  
                                  l4542 12FC                                    l4534 12C6  
                                  l4518 11D4                                    l4526 126C  
                                  l4462 0FEC                                    l4470 103E  
                                  l4454 0F42                                    l4446 0E94  
                                  l4438 0DE4                                    l4390 0C10  
                                  l4382 0BE0                                    l4374 0B62  
                                  l4622 2E5C                                    l4614 2E24  
                                  l4606 2DD6                                    l5270 2D42  
                                  l5246 2D02                                    l5238 2CE2  
                                  l5190 2B20                                    l5182 2AFA  
                                  l5174 2ADC                                    l5094 32C4  
                                  l5166 40EE                                    l5158 40A2  
                                  l5350 2480                                    l5342 240C  
                                  l5334 23AA                                    ?_pad 0011  
                                  l4288 44DC                                    l5088 4322  
                                  l4704 35BE                                    l3840 2AB0  
                                  l3824 2A02                                    l3832 2A4A  
                                  l3816 299C                                    l3808 296A  
                                  l3760 282E                                    l3752 27F0  
                                  l3744 27BE                                    l3736 27A2  
                                  l3728 2778                                    l3920 2116  
                                  l3912 20DE                                    l3904 20A0  
                                  l3680 1F5C                                    l3672 1F40  
                                  l3664 1EFE                                    l3656 1EA4  
                                  l3648 1E58                                    l3592 1CE0  
                                  l3584 1CAC                                    l3576 1C70  
                                  l3568 1C3A                                    l3496 1AFC  
                                  l3488 1ACA                                    l4560 1372  
                                  l4552 1332                                    l4544 1304  
                                  l4536 12D6                                    l4528 128A  
                                  l4480 10F6                                    l4472 104E  
                                  l4464 0FF2                                    l4456 0F52  
                                  l4448 0EC8                                    l4392 0C2A  
                                  l4384 0BE4                                    l4376 0B96  
                                  l4368 0ACE                                    l4296 084A  
                                  l4720 3B9A                                    l4712 3B56  
                                  l4640 2F2E                                    l4632 2ED0  
                                  l4624 2E64                                    l4616 2E44  
                                  l4608 2DD8                                    l5264 2D32  
                                  l5192 2B2E                                    l5184 2AFE  
                                  l5176 2AEE                                    l5096 32D2  
                                  l5168 40FA                                    l5360 250A  
                                  l5352 24B2                                    l5344 2410  
                                  l5336 23AE                                    l5328 239A  
                                  l5290 4510                                    l4706 35D0  
                                  l3842 2AB4                                    l3834 2A64  
                                  l3826 2A0E                                    l3818 29AA  
                                  l3770 285E                                    l3762 2836  
                                  l3746 27CE                                    l3754 27F8  
                                  l3738 27A8                                    l3930 2184  
                                  l3922 2130                                    l3914 20EA  
                                  l3906 20B8                                    l3682 1F5E  
                                  l3674 1F46                                    l3666 1F0E  
                                  l3658 1EB2                                    l3594 1CEE  
                                  l3586 1CBC                                    l3578 1C7E  
                                  l3498 1AFE                                    l3690 4600  
                                  l4570 13C8                                    l4562 138E  
                                  l4554 133A                                    l4546 1314  
                                  l4538 12DA                                    l4482 1106  
                                  l4490 1140                                    l4474 1062  
                                  l4466 1026                                    l4458 0F62  
                                  l4386 0BF6                                    l4394 0C42  
                                  l4378 0B9E                                    l4298 0854  
                                  l4722 3BB2                                    l4714 3B80  
                                  l4634 2EE2                                    l4642 2F42  
                                  l4626 2E80                                    l4650 2FBC  
                                  l4618 2E4C                                    l4810 15A2  
                                  l4802 1522                                    l5258 2D22  
                                  l5194 2B44                                    l5186 2B0A  
                                  l5178 2AF2                                    l5098 3318  
                                  l5370 25DA                                    l5354 24B8  
                                  l5362 2512                                    l5346 241C  
                                  l5338 23C0                                    l4740 4490  
                                  l4732 447A                                    l5292 4520  
                                  l3844 2AC2                                    l3836 2A7A  
                                  l3828 2A1C                                    l3780 289C  
                                  l3772 285E                                    l3764 283A  
                                  l3756 2808                                    l3748 27DE  
                                  l3940 221A                                    l3932 21AE  
                                  l3924 2140                                    l3916 20FA  
                                  l3908 20C4                                    l3860 1F8A  
                                  l3676 1F48                                    l3668 1F2E  
                                  l3596 1CFC                                    l3692 4604  
                                  l4580 1404                                    l4572 13CE  
                                  l4564 1396                                    l4556 1346  
                                  l4548 131C                                    l4492 1152  
                                  l4484 1118                                    l4476 106E  
                                  l4468 103A                                    l4388 0C08  
                                  l4724 3BCE                                    l4660 304A  
                                  l4652 2FD8                                    l4644 2F52  
                                  l4628 2E90                                    l4820 1602  
                                  l4812 15A4                                    l4900 1A78  
                                  l5276 2D52                                    l5284 2D62  
                                  l5196 2B56                                    l5188 2B10  
                                  l5380 2668                                    l5372 25E0  
                                  l5364 2544                                    l5356 24DE  
                                  l5348 244E                                    l4750 44B4  
                                  l4742 4492                                    l4734 448A  
                                  l5294 452C                                    l4670 3466  
                                  l3846 2AC8                                    l3838 2A94  
                                  l3790 28E8                                    l3782 28AC  
                                  l3758 281E                                    l3950 225A  
                                  l3942 2228                                    l3934 21E4  
                                  l3926 215C                                    l3918 2106  
                                  l3870 1FC2                                    l3862 1F8C  
                                  l3678 1F4E                                    l3598 1D08  
                                  l3686 45E2                                    l3694 47F4  
                                  l4590 1456                                    l4582 140A  
                                  l4574 13E0                                    l4558 134C  
                                  l4566 139C                                    l4494 1160  
                                  l4486 112A                                    l4478 1092  
                                  l4726 3BE0                                    l4718 3B8C  
                                  l4662 3050                                    l4654 2FF6  
                                  l4646 2F58                                    l4638 2F1C  
                                  l4902 1A9C                                    l4830 16B2  
                                  l4822 163C                                    l4814 15C8  
                                  l4806 152E                                    l5470 2D86  
                                  l5198 2B60                                    l5390 270A  
                                  l5382 269A                                    l5374 2606  
                                  l5366 2576                                    l5358 24F0  
                                  l4744 449E                                    l4736 448C  
                                  l4920 4442                                    l4752 4910  
                                  l4680 34D4                                    l4672 347A  
                                  l3848 2ACA                                    l3792 28F6  
                                  l3784 28BC                                    l3776 2872  
                                  l3768 284E                                    l3960 22CC  
                                  l3952 2288                                    l3944 223A  
                                  l3936 21F2                                    l3928 2168  
                                  l3880 1FEE                                    l3872 1FD2  
                                  l3864 1F9C                                    l3856 1F70  
                                  l3688 45EE                                    l3696 4800  
                                  l4592 1462                                    l4584 1410  
                                  l4576 13EC                                    l4568 13AE  
                                  l4496 1170                                    l4488 1138  
                                  l4728 3C08                                    l4664 3060  
                                  l4656 3010                                    l4648 2F5E  
                                  l4840 1738                                    l4824 165C  
                                  l4816 15D0                                    l4832 16C4  
                                  l5472 1554                                    l4808 1582  
                                  l5384 26CC                                    l5376 2618  
                                  l5368 25A8                                    l4746 44B0  
                                  l4738 448E                                    l4930 4466  
                                  l4922 4444                                    l4914 442E  
                                  l4770 495E                                    l4754 4914  
                                  l5474 3522                                    l4690 34FC  
                                  l4682 34D8                                    l4674 347E  
                                  l3794 2902                                    l3786 28C4  
                                  l3778 288C                                    l3970 2342  
                                  l3962 22F6                                    l3946 2248  
                                  l3938 2210                                    l3890 2044  
                                  l3882 1FFE                                    l3874 1FD8  
                                  l3866 1FAC                                    l3858 1F7C  
                                  l3698 4804                                    l4594 146A  
                                  l4578 13F4                                    l4498 1174  
                                  l4666 3076                                    l4658 302A  
                                  l4850 17D0                                    l4842 176A  
                                  l4834 16E6                                    l4826 166A  
                                  l4818 15DE                                    l5386 26D2  
                                  l5378 2636                                    l4748 44B2  
                                  l4932 4468                                    l4924 4446  
                                  l4916 443E                                    l4940 4250  
                                  l4764 492C                                    l4756 4918  
                                  l4692 3504                                    l4676 3482  
                                  l3796 2920                                    l3788 28D4  
                                  l3972 235E                                    l3980 2384  
                                  l3956 22B2                                    l3964 22FA  
                                  l3948 224C                                    l3892 2054  
                                  l3884 200E                                    l3876 1FDE  
                                  l3868 1FBC                                    l4596 147A  
                                  l4588 1444                                    l4860 1898  
                                  l4844 177C                                    l4836 16F6  
                                  l4780 14EA                                    l4772 14A2  
                                  l5388 26F8                                    l4926 4452  
                                  l4918 4440                                    l4942 482A  
                                  l4934 4224                                    l4758 4926  
                                  l4694 3538                                    l4686 34DE  
                                  l4678 349E                                    l3798 2922  
                                  l3982 2388                                    l3974 236E  
                                  l3966 2314                                    l3958 22BE  
                                  l3886 201E                                    l3878 1FEC  
                                  l4598 1480                                    l4862 18AA  
                                  l4870 1922                                    l4846 1792  
                                  l4854 17FC                                    l4838 1728  
                                  l4790 1510                                    l4782 14F6  
                                  l4774 14C6                                    l4928 4464  
                                  l4944 4838                                    l4936 4228  
                                  l4768 4972                                    l4960 48E0  
                                  l4952 48B2                                    l4688 34F4  
                                  l3992 3DBC                                    l3976 237C  
                                  l3968 2328                                    l3896 2068  
                                  l3888 2024                                    l4880 19CC  
                                  l4872 1946                                    l4864 18DE  
                                  l4856 182A                                    l4848 17A0  
                                  l4784 14F8                                    l4776 14D4  
                                  l4946 483C                                    l4938 424C  
                                  l4970 46B8                                    l4962 48E6  
                                  l4698 356E                                    l3994 3DC0  
                                  l3978 237E                                    l3898 2074  
                                  l3986 4556                                    l4890 1A4E  
                                  l4874 196A                                    l4794 1516  
                                  l4786 150A                                    l4778 14E6  
                                  l4972 46C8                                    l4956 48BC  
                                  l4948 488E                                    l4980 494A  
                                  l3996 3DCE                                    l3988 4566  
                                  l4876 1980                                    l4884 1A08  
                                  l4990 4930                                    l4974 46D0  
                                  l3998 3DD6                                    l4886 1A2C  
                                  l4894 1A5C                                    l4878 198E  
                                  l4798 151C                                    l4982 4104  
                                  l4992 4934                                    l4976 46D8  
                                  l4968 46A4                                    l4896 1A6A  
                                  l4888 1A3A                                    l4984 410C  
                                  l4994 4944                                    l4986 411A  
                                  l4996 4946                                    l4988 4140  
                                  l4998 485C                                    STR_1 0801  
                                  STR_2 0801                                    STR_3 0801  
                                  STR_4 0846                                    STR_5 0843  
                                  STR_6 0818                                    STR_7 0820  
                                  STR_8 0820                                    STR_9 0818  
                                  u3100 3C78                                    u3101 3C74  
                                  u3110 3CAE                                    u3111 3CAA  
                                  u4000 3DE8                                    u3200 1BB0  
                                  u3120 1ACA                                    _LATD 000F8C  
                                  u4001 3DE4                                    u3201 1BAC  
                                  u3121 1AC6                                    u4010 3E0E  
                                  u3210 1C1E                                    u3130 1ADC  
                                  u4011 3E0A                                    u3211 1C1A  
                                  u3131 1AD8                                    u4020 3E2C  
                                  u4100 3FE2                                    u3300 1CFC  
                                  u3220 1C36                                    u3140 1AEC  
                                  u4021 3E28                                    u4101 3FDE  
                                  u3301 1CF8                                    u3221 1C30  
                                  u3141 1AE8                                    u4030 3E48  
                                  u4110 4022                                    u3310 1D1A  
                                  u3230 1C38                                    u3150 1B2E  
                                  u4031 3E44                                    u4111 401E  
                                  u3311 1D16                                    u3151 1B2A  
                                  u4040 3E6E                                    u4120 4060  
                                  u3400 1E58                                    u3320 1D52  
                                  u3240 1C60                                    u3160 1B44  
                                  u4200 3766                                    u3080 3C3E  
                                  u5000 1106                                    u4041 3E6A  
                                  u4121 405C                                    u3401 1E54  
                                  u3321 1D4E                                    u3241 1C5C  
                                  u3161 1B40                                    u4201 3762  
                                  u3081 3C3A                                    u5001 1102  
                                  u4050 3F56                                    u4130 4094  
                                  u3410 1E6E                                    u3330 1D98  
                                  u3250 1C7E                                    u3170 1B56  
                                  u4210 379A                                    u3090 3C50  
                                  u5010 1118                                    u4051 3F52  
                                  u4131 4090                                    u3411 1E6A  
                                  u3331 1D94                                    u3251 1C7A  
                                  u3171 1B52                                    u3091 3C4C  
                                  u5011 1114                                    u4060 3F70  
                                  u4140 3884                                    u3500 1F5C  
                                  u3420 1E84                                    u3340 1DCE  
                                  u3260 1C9E                                    u3180 1B66  
                                  u4220 37C8                                    u4300 3D8E  
                                  u5100 12C6                                    u5020 112A  
                                  u4061 3F6C                                    u4141 3880  
                                  u3501 1F58                                    u3421 1E80  
                                  u3341 1DCA                                    u3261 1C9A  
                                  u3181 1B62                                    u4221 37C4  
                                  u4301 3D8A                                    u5101 12C2  
                                  u5021 1126                                    u4070 3F8A  
                                  u4150 38C2                                    u3430 1E98  
                                  u3350 1DDE                                    u3270 1CAC  
                                  u3190 1BA2                                    u4230 37DC  
                                  u4310 3A98                                    u3510 4624  
                                  u5110 12FC                                    u5030 1138  
                                  u4071 3F86                                    u4151 38BE  
                                  u3431 1E94                                    u3351 1DDA  
                                  u3271 1CA8                                    u3191 1B9E  
                                  u4231 37D8                                    u4215 3790  
                                  u3511 4620                                    u5111 12F8  
                                  u5031 1134                                    u6000 4520  
                                  u4080 3FA8                                    u3600 27BC  
                                  u4160 38E0                                    u3440 1EB2  
                                  u3360 1E0A                                    u3280 1CBC  
                                  u4240 3804                                    u4320 3AB6  
                                  u3520 481C                                    u4400 4196  
                                  u5120 132A                                    u5040 1152  
                                  u5200 2DF2                                    u6001 451C  
                                  u4081 3FA4                                    u3601 27B8  
                                  u4161 38DC                                    u3441 1EAE  
                                  u3361 1E06                                    u3281 1CB8  
                                  u4241 3800                                    u4321 3AB2  
                                  u3521 4818                                    u4401 4190  
                                  u5121 1326                                    u5041 114E  
                                  u5201 2DEE                                    u6010 4554  
                                  u4090 3FBE                                    u3610 27CE  
                                  u4170 3900                                    u3450 1EEC  
                                  u3370 1E1A                                    u3290 1CEE  
                                  u4250 3824                                    u4330 3ADE  
                                  u3530 4744                                    u4410 4198  
                                  u5130 13AE                                    u5050 1160  
                                  u5210 2E1C                                    u6011 4550  
                                  u4091 3FBA                                    u3611 27CA  
                                  u4171 38FC                                    u3451 1EE8  
                                  u3371 1E16                                    u3291 1CEA  
                                  u4251 3820                                    u4331 3ADA  
                                  u4315 3A8E                                    u3531 473E  
                                  u5131 13AA                                    u5051 115C  
                                  u5211 2E18                                    u3700 2978  
                                  u3620 27DE                                    u4180 3950  
                                  u3460 1EFE                                    u3380 1E36  
                                  u4260 3834                                    u4340 3B08  
                                  u4500 3238                                    u3540 4746  
                                  u4420 41AE                                    u5140 13C8  
                                  u5060 11B8                                    u5300 2FD8  
                                  u5220 2E80                                    u6100 269A  
                                  u6020 244E                                    u3701 2974  
                                  u3621 27DA                                    u4181 394C  
                                  u3461 1EFA                                    u3381 1E32  
                                  u4261 3830                                    u4341 3B04  
                                  u4421 41AA                                    u5141 13C4  
                                  u5061 11B4                                    u5301 2FD4  
                                  u5221 2E7C                                    u6101 2696  
                                  u6021 244A                                    u3710 2998  
                                  u3630 281E                                    u4190 4762  
                                  u3470 1F0E                                    u3390 1E46  
                                  u4510 3254                                    u4430 30E8  
                                  u4270 3D06                                    u5150 13E0  
                                  u5070 128A                                    u3550 470C  
                                  u5310 2FF6                                    u5230 2ECA  
                                  u6110 26CC                                    u6030 2480  
                                  u3711 2994                                    u3631 281A  
                                  u4191 475E                                    u3471 1F0A  
                                  u3391 1E42                                    u4511 3250  
                                  u4271 3D02                                    u5151 13DC  
                                  u5071 1286                                    u3551 4706  
                                  u5311 2FF2                                    u5231 2EC4  
                                  u6111 26C8                                    u6031 247C  
                                  u4600 43A2                                    u5400 35A8  
                                  u3720 29AA                                    u3640 285E  
                                  u3800 1F8A                                    u3480 1F2E  
                                  u4360 3B42                                    u4520 3290  
                                  u4440 3116                                    u4280 3D28  
                                  u5160 143E                                    u5080 12A6  
                                  u3560 470E                                    u5320 3010  
                                  u5240 2ECC                                    u6040 24B2  
                                  u4601 439E                                    u3721 29A6  
                                  u3641 285A                                    u3801 1F86  
                                  u3481 1F2A                                    u4361 3B3C  
                                  u4521 328C                                    u4505 322E  
                                  u4441 3112                                    u4281 3D24  
                                  u5161 1438                                    u5081 12A2  
                                  u5321 300C                                    u6041 24AE  
                                  u4610 43D0                                    u5410 35BE  
                                  u3730 29D8                                    u3650 28D4  
                                  u3570 2756                                    u3810 1F9C  
                                  u3490 1F40                                    u4370 3B44  
                                  u4450 3138                                    u4290 3D7E  
                                  u5170 1440                                    u5090 12B8  
                                  u4530 469A                                    u5330 302A  
                                  u5250 2EE2                                    u6050 2544  
                                  u4611 43CC                                    u5411 35BA  
                                  u3731 29D4                                    u3651 28D0  
                                  u3571 2752                                    u3811 1F98  
                                  u3491 1F3C                                    u4355 3B1A  
                                  u4451 3134                                    u4435 30DE  
                                  u4291 3D7A                                    u5091 12B4  
                                  u4531 4694                                    u5331 3026  
                                  u5251 2EDE                                    u6051 2540  
                                  u4620 44F2                                    u5500 4970  
                                  u5420 35D0                                    u3740 29EE  
                                  u3660 28F6                                    u3580 2768  
                                  u3900 2248                                    u3820 1FAC  
                                  u4380 42CA                                    u5180 1456  
                                  u4700 095A                                    u4540 469C  
                                  u5340 303A                                    u5260 2F16  
                                  u6060 2576                                    u4621 44EE  
                                  u5501 496C                                    u5421 35CC  
                                  u3741 29EA                                    u3661 28F2  
                                  u3581 2764                                    u3901 2244  
                                  u3821 1FA8                                    u5181 1452  
                                  u4701 0954                                    u5341 3036  
                                  u5261 2F10                                    u6061 2572  
                                  u4630 450C                                    u3750 2A02  
                                  u3670 2920                                    u3590 2778  
                                  u3910 225A                                    u3830 1FEC  
                                  u4470 31A4                                    u4390 42DC  
                                  u4710 095C                                    u5430 3B80  
                                  u4550 41F6                                    u5350 304A  
                                  u5270 2F18                                    u5190 2DD6  
                                  u5510 14C6                                    u6070 25A8  
                                  u4631 4508                                    u6207 370C  
                                  u3751 29FE                                    u3671 291C  
                                  u3591 2774                                    u3911 2256  
                                  u3831 1FE8                                    u4471 31A0  
                                  u4391 42D8                                    u5431 3B7C  
                                  u4551 41F0                                    u5351 3046  
                                  u5191 2DD2                                    u5511 14C2  
                                  u6071 25A4                                    u4640 49A8  
                                  u5360 349E                                    u3760 2A1C  
                                  u3680 2944                                    u3920 2288  
                                  u3840 1FFE                                    u4480 31C8  
                                  u4800 0BF6                                    u4720 0972  
                                  u5440 3BB2                                    u4560 41F8  
                                  u5280 2F2E                                    u5600 1738  
                                  u5520 1594                                    u6080 25DA  
                                  u6217 3740                                    u4641 49A4  
                                  u5361 349A                                    u3761 2A18  
                                  u3681 2940                                    u3921 2284  
                                  u3841 1FFA                                    u4465 314C  
                                  u4801 0BF2                                    u4721 096E  
                                  u5441 3BAE                                    u5281 2F2A  
                                  u5601 1734                                    u5521 1590  
                                  u6081 25D6                                    u5370 34D4  
                                  u3770 2A64                                    u3690 295A  
                                  u3930 229E                                    u3850 200E  
                                  u4490 31E4                                    u4466 3156  
                                  u4810 0C08                                    u4730 09FE  
                                  u4650 0872                                    u5450 3BCE  
                                  u4570 420E                                    u5290 2F96  
                                  u5610 177C                                    u5530 15A2  
                                  u6090 2668                                    u5371 34D0  
                                  u3771 2A60                                    u3691 2956  
                                  u3931 229A                                    u3851 200A  
                                  u4491 31E0                                    u4467 3166  
                                  u4387 42C0                                    u4811 0C04  
                                  u4731 09FA                                    u4651 086E  
                                  u5451 3BCA                                    u4571 420A  
                                  u5611 1778                                    u5531 159E  
                                  u6091 2664                                    u5700 4270  
                                  u4580 47B4                                    u5380 34F0  
                                  u3780 2A94                                    u3940 22B2  
                                  u3860 2044                                    u4900 0D14  
                                  u4820 0C2A                                    u4740 0A2E  
                                  u4660 08C2                                    u5460 3BE0  
                                  u5620 182A                                    u5540 15C8  
                                  _RCEN 007E2B                                    u6157 3618  
                                  u4581 47AE                                    u5381 34EC  
                                  u3781 2A90                                    u3941 22AE  
                                  u3861 2040                                    u4485 31BE  
                                  u4901 0D10                                    u4821 0C26  
                                  u4741 0A28                                    u4661 08BE  
                                  u5461 3BDC                                    u5621 1826  
                                  u5541 15C4                                    u5710 4280  
                                  u4590 47B6                                    u5390 35A6  
                                  u3790 2AC2                                    u3950 22CC  
                                  u3870 2054                                    u4910 0D22  
                                  u4830 0C50                                    u4750 0A30  
                                  u4670 08D0                                    u5470 3C08  
                                  u5630 1892                                    u5550 1602  
                                  u6167 3646                                    u5711 427C  
                                  u5391 35A0                                    u3791 2ABE  
                                  u3951 22C8                                    u3871 2050  
                                  u4911 0D1E                                    u4831 0C4C  
                                  u4671 08CC                                    u5471 3C04  
                                  u5295 2F84                                    u5631 188C  
                                  u5551 15FE                                    u5720 485A  
                                  u5480 4926                                    u3960 2314  
                                  u3880 21CE                                    u4920 0D4C  
                                  u4840 0C66                                    u4760 0A46  
                                  u4680 08E2                                    u5640 1894  
                                  u5560 16AC                                    u5800 415C  
                                  u5721 4856                                    u6177 367A  
                                  u5481 4922                                    u3961 2310  
                                  u4921 0D48                                    u4841 0C62  
                                  u4761 0A42                                    u4681 08DE  
                                  u5561 16A6                                    u5801 4158  
                                  u5810 4638                                    u5490 4984  
                                  u5730 489E                                    u3970 2342  
                                  u3890 2228                                    u4930 0E94  
                                  u4850 0C82                                    u4770 0ACA  
                                  u4690 092A                                    u5650 18AA  
                                  u5570 16AE                                    u6187 36AA  
                                  u5707 4266                                    u5811 4634  
                                  u5491 4980                                    u5731 489A  
                                  u3971 233E                                    u3891 2224  
                                  u4931 0E90                                    u4851 0C7E  
                                  u4771 0AC6                                    u4691 0926  
                                  u5651 18A6                                    u5820 3EB8  
                                  u5740 48AE                                    u3980 237C  
                                  u4940 0EFA                                    u4860 0CB8  
                                  u4780 0B5E                                    u5660 1946  
                                  u5580 16C4                                    u5900 33EC  
                                  u6197 36D8                                    u5741 48AA  
                                  u3981 2378                                    u3885 21C4  
                                  u4941 0EF6                                    u4861 0CB4  
                                  u4781 0B5A                                    u5661 1942  
                                  u5581 16C0                                    u5901 33E8  
                                  u5830 3F24                                    u5750 48CC  
                                  u3990 3DCE                                    u4950 0F42  
                                  u4870 0CDE                                    u4790 0BD0  
                                  u5670 196A                                    u5590 16F6  
                                  u5910 33FC                                    u5831 3F20  
                                  u5751 48C8                                    u3991 3DCA  
                                  u4951 0F3E                                    u4871 0CDA  
                                  u4791 0BCC                                    u5671 1966  
                                  u5591 16F2                                    u5911 33F8  
                                  u5840 3F42                                    u5760 48DC  
                                  u4960 0F52                                    u4880 0CF0  
                                  u5680 1A2C                                    u5920 340A  
                                  u5841 3F3E                                    u5825 3EB2  
                                  u5761 48D8                                    u4961 0F4E  
                                  u4881 0CEC                                    u5681 1A28  
                                  u5921 3406                                    u5690 4248  
                                  u5770 46B4                                    u4970 0FEC  
                                  u4890 0CFE                                    u5930 3444  
                                  u5850 32C4                                    u5771 46B0  
                                  u4971 0FE8                                    u4891 0CFA  
                                  u5931 3440                                    u5851 32C0  
                                  u5780 46C8                                    u4980 103A  
                                  u5940 3452                                    u5860 32D2  
                                  u5781 46C4                                    u4981 1036  
                                  u5941 344E                                    u5861 32CE  
                                  u5790 495A                                    u4990 1062  
                                  u5870 332E                                    u5950 39A0  
                                  u5791 4956                                    u4991 105E  
                                  u5871 332A                                    u5951 399C  
                                  u5880 3384                                    u5960 40E8  
                                  u5697 423E                                    u5881 3380  
                                  u5961 40E4                                    u5890 33CE  
                                  u5971 2AE6                                    u5891 33CA  
                                  u5980 2B20                                    u5981 2B1C  
                                  u5990 2B2E                                    u5991 2B2A  
                                  _RSEN 007E29                                    _Date 0108  
                                  _Year 0104                                    _Sluz 0200  
                                  _dbuf 0112                                    _atoi 3466  
                                  _main 239A                         ?_RTC_Read_Clock 0001  
                                  _hour 010C                        __end_of_I2C_Nack 4972  
                    __size_of_LCD_Clear 0014                                    _play 3E80  
                                  _prec 00FC                        __end_of_I2C_Init 494A  
                                  _temp 00EC                        __end_of_I2C_Read 46DC  
                                  _nout 00F8                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  _xtoa 2DC6                        __end_of_I2C_Stop 495E  
                         ___fpclassifyf 3A58                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0000  
                       ___fldiv@new_exp 003F                           _LCD_String_xy 4626  
                          _tolower$1574 000D                            ___param_bank 000000  
                       __end_of_ReadADC 3A58                         __end_of_ReadLUZ 4104  
      RTC_Read_Clock@read_clock_address 0004                                   ??_pad 0017  
                      __end_of_LCD_Char 44C4                        __end_of_LCD_Init 488C  
                         ReadADC@result 0066                            LCD_MSdelay@i 0003  
                          LCD_MSdelay@j 0005                           ___fltol@sign1 0060  
                                 ?_atoi 0008                         __end_of___fladd 1F70  
                                 ?_main 0001                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                         __end_of___fldiv 2AD6  
                       __end_of___awdiv 3E80                         __end_of___flneg 4784  
                                 ?_play 0006                                   STR_10 0820  
                                 STR_11 0820                                   STR_20 082C  
                                 STR_12 081C                                   STR_13 081C  
                                 STR_21 0838                                   STR_14 0818  
                                 STR_30 0840                                   STR_22 0808  
                                 STR_15 0834                                   STR_23 0810  
                                 STR_32 0840                                   STR_16 0830  
                                 STR_17 0828                                   STR_18 0824  
                                 STR_26 080C                                   STR_19 083C  
                                 STR_27 0814                         __end_of___awmod 3FF4  
                       __end_of___flmul 239A                         __end_of___flsub 459C  
                       __end_of___fltol 3856                         ___awdiv@divisor 0003  
                                 ?_xtoa 001C                                   _LATD0 007C60  
                                 _LATD1 007C61                                   _LATE0 007C68  
                                 _LATE1 007C69                                   _LATE2 007C6A  
                       ___awdiv@counter 0005                            vfpfcnvrt@fmt 00A8  
                          vfpfcnvrt@llu 00B0                                   _TRISA 000F92  
                                 _TRISD 000F95                                   _SSPIE 007CEB  
                                 _TRISE 000F96                                   _SSPIF 007CF3  
                                 _Month 0106                                   _Stemp 0162  
                                 _flags 00FE                                   _fputc 3C2C  
                       __end_of_isalpha 46A2                                   _fputs 45E2  
                       __end_of_isdigit 47BC                       __end_of_I2C_Ready 49AC  
                                 atoi@n 0015                                   pad@fp 0011  
                                 atoi@s 0008                                   _width 00FA  
                                 _putch 49AC                         __end_of_islower 4714  
                       __end_of_isspace 43DC                       __end_of_I2C_Start 48BA  
                     __end_of_I2C_Write 4930                         __end_of_isupper 474C  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                   __size_of_LCD_String 005E                         __end_of_sprintf 438A  
                        ?___fpclassifyf 0001                         __end_of_tolower 41C6  
                                 xtoa@c 0041                                   xtoa@d 001E  
                                 xtoa@i 003F                                   xtoa@n 0037  
                                 xtoa@p 0033                                   xtoa@w 0035  
                                 xtoa@x 0026                         __end_of_strncmp 3C2C  
                       __end_of_toupper 4224                           ??_PlayCancion 0013  
                        ?_LCD_String_xy 000B                            _toupper$1589 000D  
               __end_of_LCD_Custom_Char 4556                         __initialization 43DC  
                          __end_of_atoi 35F6                            __end_of_main 273C  
                          __end_of_play 3F44                            __end_of_xtoa 30A0  
                             ??_I2C_Ack 0001                                  ??_atoi 000A  
                                ??_main 005F                                  ??_play 000C  
                                ??_xtoa 0027                       __end_of_LCD_Clear 499A  
                         __activetblptr 000002                                  ?_fputc 0001  
                                ?_fputs 000A                                  _ADRESH 000FC4  
                                _ADRESL 000FC3                        ___awdiv@dividend 0001  
                                ?_putch 0001                        LCD_String_xy@msg 000C  
                      LCD_String_xy@pos 000B                        LCD_String_xy@row 000E  
                                _OSCCON 000FD3                           vfpfcnvrt@done 00B8  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                      __end_of___xxtofl 3466                               ??_ReadADC 0064  
                             ??_ReadLUZ 0003                        __end_of_delay_us 485C  
                      ??_RTC_Calendario 00DE                            vfprintf@cfmt 00CC  
                                ___flge 3856                                  ___fleq 3FF4  
                             ??___fladd 004F                                  ___wmul 48E8  
                             ??___fldiv 0036                               ??___awdiv 0005  
                             ??___flneg 0005                               ??___awmod 0005  
                             ??___flmul 001D                               ??___flsub 005F  
                             ??___fltol 005B                                  _efgtoa 084A  
                   __end_of_PlayCancion 374E                                  _floorf 30A0  
                  __size_of_LCD_MSdelay 004A                                  clear_0 4402  
                                clear_1 440E                                  clear_2 441A  
                      ___awdiv@quotient 0007                         ___awmod@divisor 0003  
                                isa$std 000001                                  _tempar 00F4  
                       ___awmod@counter 0005                      _I2C_Repeated_Start 48BA  
                                pad@buf 0013                    __size_of_LCD_Command 004C  
                                _strcpy 4282                                  _strlen 47F4  
                                fputc@c 0001                                  fputs@c 000E  
                      LCD_Custom_Char@i 000C                                  fputs@i 000F  
                             ?_I2C_Nack 0001                                  fputs@s 000A  
                             ??_isalpha 0003                               ??_isdigit 0003  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                                play@fn 0011                               ?_I2C_Stop 0001  
                       ___fpclassifyf@e 0009                         ___fpclassifyf@u 000B  
                       ___fpclassifyf@x 0001                               ??_islower 0003  
                          __mediumconst 0000                               ??_isspace 0003  
                                tblptrh 000FF7                               ??_isupper 0003  
                                tblptrl 000FF6                                  tblptru 000FF8  
                   ?_I2C_Repeated_Start 0001                                  putch@c 0001  
                      __end_of_vfprintf 4166                               ??_sprintf 005F  
                             ??_tolower 0009                                  xtoa@fp 001C  
                             ??_strncmp 0007                               ??_toupper 0009  
                            ___flge@ff1 002E                              ___flge@ff2 0032  
                       ??___fpclassifyf 0005                            ___xxtofl@arg 0011  
                          ___xxtofl@exp 0010                            ___xxtofl@val 0007  
                            ___fleq@ff1 0001                              ___fleq@ff2 0005  
                             ?_LCD_Char 0001                              __accesstop 0060  
               __end_of__initialization 4422                               ?_LCD_Init 0001  
                       ??_LCD_String_xy 000E                              ___flneg@f1 0001  
                         ___rparam_used 000001                              ___fltol@f1 0057  
                  ??_I2C_Repeated_Start 0002                        ?_LCD_Custom_Char 0009  
                        __pcstackCOMRAM 0001                             play@CiclosL 000F  
                          __pidataBANK1 47BC                           __end_of_fputc 3CF6  
                         __end_of_fputs 4626                           __end_of_putch 49AE  
                          ??_LCD_String 000B                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                           ReadLUZ@result 0005  
                      ??_RTC_Read_Clock 0003                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00E4                              __pbssBANK1 0100  
                            __pbssBANK2 0200                              ??_LCD_Char 0007  
                            _character1 01E9                              _character2 01E1  
                            _character3 01D9                              ??_LCD_Init 0009  
                    __end_of_LCD_String 4282                             _PlayCancion 35F6  
                          I2C_Read@flag 0001                                 ?___flge 002E  
                               ?___fleq 0001                          I2C_Read@buffer 0002  
                               ?___wmul 0001                          LCD_MSdelay@val 0001  
                               ?_efgtoa 0062                                 ?_floorf 0047  
                               _I2C_Ack 4972                                 _ACKSTAT 007E2E  
                               ?_strcpy 0001                                 ?_strlen 0001  
                             ?___xxtofl 0007                               ?_delay_us 0001  
                    __size_of_vfpfcnvrt 060E                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                             _I2C_Ready 499A                                 _ReadADC 395A  
                             _I2C_Start 488C                                 _ReadLUZ 409E  
                             _I2C_Write 490E                           LCD_String@msg 0009  
                               __Hparam 0000                                 __Lparam 0000  
                       __size_of___flge 0104                         __size_of___fleq 00AA  
                               ___fladd 1AB0                       _RTC_Read_Calendar 42DE  
                               ___fldiv 273C                                 ___awdiv 3DBC  
                               ___flneg 474C                                 ___awmod 3F44  
                               ___flmul 1F70                                 ___flsub 4556  
                               ___fltol 374E                         __size_of___wmul 0026  
                             ?_vfprintf 00C6                            __psmallconst 0800  
                       __size_of_efgtoa 0C58                      ?_RTC_Read_Calendar 0001  
                       __size_of_floorf 0212                                 __pcinit 43DC  
                               __ramtop 0800                                 __ptext0 239A  
                               __ptext1 409E                                 __ptext2 395A  
                               __ptext3 32B2                                 __ptext4 2AD6  
                               __ptext5 4338                                 __ptext6 4104  
                               __ptext7 14A2                                 __ptext8 2DC6  
                               __ptext9 41C6                         __size_of_strcpy 005C  
                       __size_of_strlen 0036                            __size_of_pad 00C6  
                               _isalpha 4666                                 _isdigit 4784  
                            ??___xxtofl 000B                        ___awmod@dividend 0001  
                   ??_RTC_Read_Calendar 0003                                 _islower 46DC  
                               _isspace 438A                              ??_delay_us 0003  
                               _isupper 4714                                 efgtoa@c 0068  
                               efgtoa@d 0086                                 efgtoa@e 009E  
                               efgtoa@f 0064                                 efgtoa@g 009A  
                               efgtoa@h 0090                                 efgtoa@i 0098  
                               efgtoa@l 0094                                 efgtoa@m 0080  
                               efgtoa@n 00A0                                 efgtoa@p 008A  
                               efgtoa@t 007A                                 efgtoa@u 00A2  
                               efgtoa@w 008C                               _LCD_Clear 4986  
                               atoi@neg 000E                                 _sprintf 4338  
                               _tolower 4166                                 _strncmp 3B56  
                               _toupper 41C6                    end_of_initialization 4422  
                               floorf@e 0055                                 floorf@m 0051  
                               floorf@u 0057                                 floorf@x 0047  
                               fputc@fp 0003                          LCD_Command@cmd 0008  
                         __Lmediumconst 0000                                 fputs@fp 000C  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 4338  
                     __end_of_vfpfcnvrt 1AB0                              efgtoa@mode 008F  
                            efgtoa@sign 0088                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005F                                 strcpy@d 0009  
                               strlen@a 0003                                 strcpy@s 0007  
                               strlen@s 0001                             ___fladd@grs 0056  
                         ___xxtofl@sign 000F                               _TRISCbits 000F94  
                            ?_LCD_Clear 0001                       __size_of_I2C_Nack 0014  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 003A  
                           ___fldiv@grs 0041                             ___fldiv@rem 003A  
                     __size_of_I2C_Stop 0014                             ___flmul@grs 0022  
                     __size_of_LCD_Char 004C                       __size_of_LCD_Init 0030  
                         ??_LCD_MSdelay 0003                           ??_LCD_Command 0007  
                        __end_of___flge 395A                          __end_of___fleq 409E  
                           vfpfcnvrt@ap 00AA                             vfpfcnvrt@ct 00C2  
                           vfpfcnvrt@fp 00A6                          __end_of___wmul 490E  
                        __end_of_efgtoa 14A2                          __end_of_floorf 32B2  
                            floorf@F527 00E4                          __end_of_strcpy 42DE  
                        __end_of_strlen 482A                     start_initialization 43DC  
                           __end_of_pad 3DBC    I2C_Repeated_Start@slave_read_address 0002  
                 __end_of___fpclassifyf 3B56                             ??_I2C_Ready 0001  
                           ??_I2C_Start 0002                             ??_I2C_Write 0001  
                 __end_of_LCD_String_xy 4666                            ?_PlayCancion 0001  
            __size_of_RTC_Read_Calendar 005A                             vfprintf@fmt 00C8  
           __size_of_I2C_Repeated_Start 002E                                ??___flge 0036  
                              ??___fleq 0009                                ??___wmul 0005  
                              ??_efgtoa 0069                             __pdataBANK1 01BA  
                              ??_floorf 004B                                ?_I2C_Ack 0001  
                   __end_of_LCD_MSdelay 450E                                ??_strcpy 0005  
                              ??_strlen 0003                __size_of_LCD_Custom_Char 0048  
                             ___fladd@a 004B                               ___fladd@b 0047  
                          play@duracion 000A                               ___fldiv@a 0032  
                             ___fldiv@b 002E                 __size_of_RTC_Calendario 02F0  
                   __end_of_LCD_Command 4478                               ___flmul@a 0019  
                             ___flmul@b 0015                             __pbssCOMRAM 005F  
                             ___flsub@a 005B                               ___flsub@b 0057  
                         __pcstackBANK0 0060                           __pcstackBANK1 0176  
                           ??_LCD_Clear 0009                       __size_of___xxtofl 01B4  
                     __size_of_delay_us 0032                                ?_ReadADC 0062  
                             _atoi$1470 0010                               _atoi$1471 0014  
                             _atoi$1472 0012                                ?_ReadLUZ 0001  
                            play@octava 0008                             _efgtoa$1400 0072  
                           _efgtoa$1404 0074                             _efgtoa$1405 0076  
                           _efgtoa$1406 0078                             _efgtoa$1394 006E  
                           _efgtoa$1395 0070                               _main$1813 00E0  
                              ?___fladd 0047                                ?___fldiv 002E  
                              ?___awdiv 0001                                ?___flneg 0001  
                              ?___awmod 0001                                ?___flmul 0015  
                              ?___flsub 0057                                ?___fltol 0057  
                     __size_of_vfprintf 0062                             __smallconst 0800  
                              _I2C_Nack 495E                                ?_isalpha 0001  
                              ?_isdigit 0001                                _I2C_Init 4930  
                              _I2C_Read 46A2                                _I2C_Stop 494A  
                              ?_islower 0001                                ?_isspace 0001  
                              ?_isupper 0001                   LCD_String_xy@location 000F  
                              ?_sprintf 00CE                                ?_tolower 0007  
                        __size_of_fputc 00CA                          __size_of_fputs 0044  
                              ?_strncmp 0001                                ?_toupper 0007  
                        __size_of_putch 0002                                _LCD_Char 4478  
                              _LCD_Init 485C                    play@mS_Transcurridos 000D  
                        ___wmul@product 0005                                _LATCbits 000F8B  
                             delay_us@i 0004                 __size_of_RTC_Read_Clock 0046  
                           _LCD_MSdelay 44C4                             _LCD_Command 442C  
                             _vfpfcnvrt 14A2                               _xtoa$1416 002F  
                             _xtoa$1417 0031                        __size_of_I2C_Ack 0014  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                       ___wmul@multiplier 0001  
                          _isspace$1510 0007                       ??_LCD_Custom_Char 000B  
                            vfpfcnvrt@c 00C5                              vfpfcnvrt@f 00BE  
                             copy_data0 43F0                                _FreqNota 01BA  
          I2C_Start@slave_write_address 0002                            delay_us@nota 0001  
                      __size_of_ReadADC 00FE                        __size_of_ReadLUZ 0066  
                              __Hrparam 0000                              vfprintf@ap 00CA  
                              __Lrparam 0000                              vfprintf@fp 00C6  
                  __size_of_PlayCancion 0158                           I2C_Write@data 0001  
                      __size_of___fladd 04C0                        __size_of___fldiv 039A  
                      __size_of___awdiv 00C4                        __size_of___flneg 0038  
                      __size_of___awmod 00B0                        __size_of___flmul 042A  
                      __size_of___flsub 0046                        __size_of___fltol 0108  
                            ?_vfpfcnvrt 00A6                      ___fpclassifyf@F465 00E8  
                        _RTC_Calendario 2AD6                              sprintf@fmt 00D0  
                              ___xxtofl 32B2                        __size_of_isalpha 003C  
                      __size_of_isdigit 0038                                _delay_us 482A  
                      __size_of_islower 0038                        __size_of_isspace 0052  
                              __ptext10 46DC                                __ptext11 4666  
                              __ptext20 3C2C                                __ptext12 3B56  
                              __ptext21 49AC                                __ptext13 084A  
                              __ptext30 3FF4                                __ptext22 30A0  
                              __ptext14 4166                                __ptext31 273C  
                              __ptext23 3A58                                __ptext15 4714  
                              __ptext40 494A                                __ptext32 3F44  
                              __ptext24 374E                                __ptext16 4282  
                              __ptext41 488C                                __ptext33 3DBC  
                              __ptext25 4556                                __ptext17 3CF6  
                              __ptext50 485C                                __ptext42 48BA  
                              __ptext34 3466                                __ptext26 1AB0  
                              __ptext18 47F4                                __ptext51 4986  
                              __ptext43 490E                                __ptext35 438A  
                              __ptext27 474C                                __ptext19 45E2  
                              __ptext52 4930                                __ptext44 46A2  
                              __ptext36 4784                                __ptext28 1F70  
                              __ptext53 35F6                                __ptext45 499A  
                              __ptext37 48E8                                __ptext29 3856  
                              __ptext54 3E80                                __ptext46 495E  
                              __ptext38 459C                                __ptext55 482A  
                              __ptext47 4972                                __ptext39 42DE  
                              __ptext56 450E                                __ptext48 4626  
                              __ptext57 442C                                __ptext49 4224  
                              __ptext58 4478                                __ptext59 44C4  
                      __size_of_isupper 0038                        __size_of_sprintf 0052  
                      __size_of_tolower 0060                              strcpy@dest 0001  
                      __size_of_strncmp 00D6                        __size_of_toupper 005E  
                         __size_of_atoi 0190                           __size_of_main 03A2  
                         __size_of_play 00C4                           __size_of_xtoa 02DA  
                              efgtoa@fp 0062                                efgtoa@ne 007E  
                              efgtoa@pp 007C                                efgtoa@ou 0082  
                              isa$xinst 000000                                _vfprintf 4104  
                __end_of_RTC_Calendario 2DC6                              _LCD_String 4224  
                        _vfpfcnvrt$1431 00BA                          _vfpfcnvrt$1435 00BC  
                              isalpha@c 0001                                isdigit@c 0001  
                    LCD_Custom_Char@loc 000B                      LCD_Custom_Char@msg 0009  
                             sprintf@ap 00D6                                play@nota 0006  
                              islower@c 0001                                isspace@c 0001  
                             strcpy@src 0003              __end_of_I2C_Repeated_Start 48E8  
                              isupper@c 0001                          _RTC_Read_Clock 459C  
                             strncmp@_l 0001                               strncmp@_r 0003  
                            _OSCCONbits 000FD3                             efgtoa@nmode 008E  
                   RTC_Calendario@F3531 01D2                             ??_vfpfcnvrt 00AC  
                       ?_RTC_Calendario 0001                     RTC_Calendario@AM_PM 01B9  
                           _temperatura 0100                                sprintf@f 00D8  
                              tolower@c 0007                                sprintf@s 00CE  
                __size_of___fpclassifyf 00FE                                strncmp@l 0008  
                              strncmp@n 0005                                strncmp@r 000A  
                              toupper@c 0007                  __size_of_LCD_String_xy 0040  
                   RTC_Calendario@hours 01AF                     RTC_Calendario@month 0187  
                           _SSPCON2bits 000FC5                           ___fladd@signs 0053  
                    RTC_Calendario@date 017D                      RTC_Calendario@days 0176  
                    RTC_Calendario@mins 01A5                      RTC_Calendario@secs 019B  
                    RTC_Calendario@year 0191                            ___fladd@aexp 0054  
                          ___fladd@bexp 0055                  __end_of_RTC_Read_Clock 45E2  
