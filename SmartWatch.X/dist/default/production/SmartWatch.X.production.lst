

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Oct 01 18:09:34 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84  0000                     
    85                           ; Version 2.20
    86                           ; Generated 12/02/2020 GMT
    87                           ; 
    88                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4550 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataBANK1
   121  0047B0                     __pidataBANK1:
   122                           	callstack 0
   123                           
   124                           ;initializer for RTC_Calendario@F3531
   125  0047B0  53                 	db	83
   126  0047B1  4D                 	db	77
   127  0047B2  54                 	db	84
   128  0047B3  57                 	db	87
   129  0047B4  74                 	db	116
   130  0047B5  46                 	db	70
   131  0047B6  73                 	db	115
   132                           
   133                           ;initializer for _character3
   134  0047B7  00                 	db	0
   135  0047B8  00                 	db	0
   136  0047B9  0E                 	db	14
   137  0047BA  1F                 	db	31
   138  0047BB  0E                 	db	14
   139  0047BC  00                 	db	0
   140  0047BD  00                 	db	0
   141  0047BE  00                 	db	0
   142                           
   143                           ;initializer for _character2
   144  0047BF  15                 	db	21
   145  0047C0  0E                 	db	14
   146  0047C1  11                 	db	17
   147  0047C2  11                 	db	17
   148  0047C3  0E                 	db	14
   149  0047C4  15                 	db	21
   150  0047C5  00                 	db	0
   151  0047C6  00                 	db	0
   152                           
   153                           ;initializer for _character1
   154  0047C7  0E                 	db	14
   155  0047C8  1F                 	db	31
   156  0047C9  1F                 	db	31
   157  0047CA  0E                 	db	14
   158  0047CB  00                 	db	0
   159  0047CC  0A                 	db	10
   160  0047CD  0A                 	db	10
   161  0047CE  00                 	db	0
   162  0000                     _SSPCON2bits	set	4037
   163  0000                     _SSPADD	set	4040
   164  0000                     _SSPCON2	set	4037
   165  0000                     _SSPCON1	set	4038
   166  0000                     _SSPSTAT	set	4039
   167  0000                     _SSPBUF	set	4041
   168  0000                     _SSPSTATbits	set	4039
   169  0000                     _PIE1bits	set	3997
   170  0000                     _PIR1bits	set	3998
   171  0000                     _TMR1L	set	4046
   172  0000                     _TMR1H	set	4047
   173  0000                     _T1CONbits	set	4045
   174  0000                     _LATCbits	set	3979
   175  0000                     _TRISCbits	set	3988
   176  0000                     _INTCONbits	set	4082
   177  0000                     _ADRESL	set	4035
   178  0000                     _ADRESH	set	4036
   179  0000                     _ADCON2bits	set	4032
   180  0000                     _ADCON0bits	set	4034
   181  0000                     _ADCON1bits	set	4033
   182  0000                     _OSCCONbits	set	4051
   183  0000                     _TRISA	set	3986
   184  0000                     _LATD	set	3980
   185  0000                     _TRISD	set	3989
   186  0000                     _TRISE	set	3990
   187  0000                     _OSCCON	set	4051
   188  0000                     _ACKEN	set	32300
   189  0000                     _ACKDT	set	32301
   190  0000                     _PEN	set	32298
   191  0000                     _RSEN	set	32297
   192  0000                     _ACKSTAT	set	32302
   193  0000                     _SSPIF	set	31987
   194  0000                     _SSPIE	set	31979
   195  0000                     _TRISB1	set	31897
   196  0000                     _TRISB0	set	31896
   197  0000                     _RCEN	set	32299
   198  0000                     _LATD1	set	31841
   199  0000                     _LATD0	set	31840
   200  0000                     _LATE2	set	31850
   201  0000                     _LATE1	set	31849
   202  0000                     _LATE0	set	31848
   203                           
   204                           	psect	smallconst
   205  000800                     __psmallconst:
   206                           	callstack 0
   207  000800  00                 	db	0
   208  000801                     STR_1:
   209  000801  20                 	db	32
   210  000802  42                 	db	66	;'B'
   211  000803  75                 	db	117	;'u'
   212  000804  65                 	db	101	;'e'
   213  000805  6E                 	db	110	;'n'
   214  000806  6F                 	db	111	;'o'
   215  000807  73                 	db	115	;'s'
   216  000808  20                 	db	32
   217  000809  44                 	db	68	;'D'
   218  00080A  69                 	db	105	;'i'
   219  00080B  61                 	db	97	;'a'
   220  00080C  73                 	db	115	;'s'
   221  00080D  20                 	db	32
   222  00080E  00                 	db	0
   223  00080F                     STR_2:
   224  00080F  25                 	db	37
   225  000810  30                 	db	48	;'0'
   226  000811  2E                 	db	46
   227  000812  30                 	db	48	;'0'
   228  000813  66                 	db	102	;'f'
   229  000814  43                 	db	67	;'C'
   230  000815  00                 	db	0
   231  000816                     STR_23:
   232  000816  49                 	db	73	;'I'
   233  000817  4E                 	db	78	;'N'
   234  000818  46                 	db	70	;'F'
   235  000819  00                 	db	0
   236  00081A                     STR_27:
   237  00081A  4E                 	db	78	;'N'
   238  00081B  41                 	db	65	;'A'
   239  00081C  4E                 	db	78	;'N'
   240  00081D  00                 	db	0
   241  00081E                     STR_24:
   242  00081E  69                 	db	105	;'i'
   243  00081F  6E                 	db	110	;'n'
   244  000820  66                 	db	102	;'f'
   245  000821  00                 	db	0
   246  000822                     STR_28:
   247  000822  6E                 	db	110	;'n'
   248  000823  61                 	db	97	;'a'
   249  000824  6E                 	db	110	;'n'
   250  000825  00                 	db	0
   251  000826                     STR_7:
   252  000826  25                 	db	37
   253  000827  78                 	db	120	;'x'
   254  000828  20                 	db	32
   255  000829  00                 	db	0
   256  00082A                     STR_13:
   257  00082A  25                 	db	37
   258  00082B  78                 	db	120	;'x'
   259  00082C  2D                 	db	45
   260  00082D  00                 	db	0
   261  00082E                     STR_8:
   262  00082E  25                 	db	37
   263  00082F  78                 	db	120	;'x'
   264  000830  3A                 	db	58	;':'
   265  000831  00                 	db	0
   266  000832                     STR_19:
   267  000832  57                 	db	87	;'W'
   268  000833  65                 	db	101	;'e'
   269  000834  64                 	db	100	;'d'
   270  000835  00                 	db	0
   271  000836                     STR_18:
   272  000836  54                 	db	84	;'T'
   273  000837  75                 	db	117	;'u'
   274  000838  65                 	db	101	;'e'
   275  000839  00                 	db	0
   276  00083A                     STR_21:
   277  00083A  46                 	db	70	;'F'
   278  00083B  72                 	db	114	;'r'
   279  00083C  69                 	db	105	;'i'
   280  00083D  00                 	db	0
   281  00083E                     STR_17:
   282  00083E  4D                 	db	77	;'M'
   283  00083F  6F                 	db	111	;'o'
   284  000840  6E                 	db	110	;'n'
   285  000841  00                 	db	0
   286  000842                     STR_16:
   287  000842  53                 	db	83	;'S'
   288  000843  75                 	db	117	;'u'
   289  000844  6E                 	db	110	;'n'
   290  000845  00                 	db	0
   291  000846                     STR_22:
   292  000846  53                 	db	83	;'S'
   293  000847  61                 	db	97	;'a'
   294  000848  74                 	db	116	;'t'
   295  000849  00                 	db	0
   296  00084A                     STR_20:
   297  00084A  54                 	db	84	;'T'
   298  00084B  68                 	db	104	;'h'
   299  00084C  75                 	db	117	;'u'
   300  00084D  00                 	db	0
   301  00084E                     STR_31:
   302  00084E  6C                 	db	108	;'l'
   303  00084F  66                 	db	102	;'f'
   304  000850  00                 	db	0
   305  000851                     STR_6:
   306  000851  41                 	db	65	;'A'
   307  000852  4D                 	db	77	;'M'
   308  000853  00                 	db	0
   309  000854                     STR_5:
   310  000854  50                 	db	80	;'P'
   311  000855  4D                 	db	77	;'M'
   312  000856  00                 	db	0
   313  000857  00                 	db	0	; dummy byte at the end
   314  0000                     
   315                           ; #config settings
   316                           
   317                           	psect	cinit
   318  0043AE                     __pcinit:
   319                           	callstack 0
   320  0043AE                     start_initialization:
   321                           	callstack 0
   322  0043AE                     __initialization:
   323                           	callstack 0
   324                           
   325                           ; Initialize objects allocated to BANK1 (31 bytes)
   326                           ; load TBLPTR registers with __pidataBANK1
   327  0043AE  0EB0               	movlw	low __pidataBANK1
   328  0043B0  6EF6               	movwf	tblptrl,c
   329  0043B2  0E47               	movlw	high __pidataBANK1
   330  0043B4  6EF7               	movwf	tblptrh,c
   331  0043B6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   332  0043B8  6EF8               	movwf	tblptru,c
   333  0043BA  EE01  F0DB         	lfsr	0,__pdataBANK1
   334  0043BE  EE10 F01F          	lfsr	1,31
   335  0043C2                     copy_data0:
   336  0043C2  0009               	tblrd		*+
   337  0043C4  CFF5 FFEE          	movff	tablat,postinc0
   338  0043C8  50E5               	movf	postdec1,w,c
   339  0043CA  50E1               	movf	fsr1l,w,c
   340  0043CC  E1FA               	bnz	copy_data0
   341                           
   342                           ; Clear objects allocated to BANK1 (150 bytes)
   343  0043CE  EE01  F000         	lfsr	0,__pbssBANK1
   344  0043D2  0E96               	movlw	150
   345  0043D4                     clear_0:
   346  0043D4  6AEE               	clrf	postinc0,c
   347  0043D6  06E8               	decf	wreg,f,c
   348  0043D8  E1FD               	bnz	clear_0
   349                           
   350                           ; Clear objects allocated to BANK0 (18 bytes)
   351  0043DA  EE00  F0EB         	lfsr	0,__pbssBANK0
   352  0043DE  0E12               	movlw	18
   353  0043E0                     clear_1:
   354  0043E0  6AEE               	clrf	postinc0,c
   355  0043E2  06E8               	decf	wreg,f,c
   356  0043E4  E1FD               	bnz	clear_1
   357                           
   358                           ; Clear objects allocated to COMRAM (1 bytes)
   359  0043E6  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   360  0043E8                     end_of_initialization:
   361                           	callstack 0
   362  0043E8                     __end_of__initialization:
   363                           	callstack 0
   364  0043E8  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   365  0043EA  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   366  0043EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   367  0043EE  6EF8               	movwf	tblptru,c
   368  0043F0  0100               	movlb	0
   369  0043F2  EFD4  F011         	goto	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMRAM
   372  00005C                     __pbssCOMRAM:
   373                           	callstack 0
   374  00005C                     _var3beep:
   375                           	callstack 0
   376  00005C                     	ds	1
   377                           
   378                           	psect	bssBANK0
   379  0000EB                     __pbssBANK0:
   380                           	callstack 0
   381  0000EB                     _luz:
   382                           	callstack 0
   383  0000EB                     	ds	4
   384  0000EF                     _tempar:
   385                           	callstack 0
   386  0000EF                     	ds	4
   387  0000F3                     _nout:
   388                           	callstack 0
   389  0000F3                     	ds	2
   390  0000F5                     _width:
   391                           	callstack 0
   392  0000F5                     	ds	2
   393  0000F7                     _prec:
   394                           	callstack 0
   395  0000F7                     	ds	2
   396  0000F9                     _flags:
   397                           	callstack 0
   398  0000F9                     	ds	2
   399  0000FB                     _var3seg:
   400                           	callstack 0
   401  0000FB                     	ds	1
   402  0000FC                     _i:
   403                           	callstack 0
   404  0000FC                     	ds	1
   405                           
   406                           	psect	bssBANK1
   407  000100                     __pbssBANK1:
   408                           	callstack 0
   409  000100                     _Sluz:
   410                           	callstack 0
   411  000100                     	ds	20
   412  000114                     floorf@F527:
   413                           	callstack 0
   414  000114                     	ds	4
   415  000118                     ___fpclassifyf@F465:
   416                           	callstack 0
   417  000118                     	ds	4
   418  00011C                     _temperatura:
   419                           	callstack 0
   420  00011C                     	ds	4
   421  000120                     _temp:
   422                           	callstack 0
   423  000120                     	ds	4
   424  000124                     _Year:
   425                           	callstack 0
   426  000124                     	ds	2
   427  000126                     _Month:
   428                           	callstack 0
   429  000126                     	ds	2
   430  000128                     _Date:
   431                           	callstack 0
   432  000128                     	ds	2
   433  00012A                     _Day:
   434                           	callstack 0
   435  00012A                     	ds	2
   436  00012C                     _hour:
   437                           	callstack 0
   438  00012C                     	ds	2
   439  00012E                     _min:
   440                           	callstack 0
   441  00012E                     	ds	2
   442  000130                     _sec:
   443                           	callstack 0
   444  000130                     	ds	2
   445  000132                     _dbuf:
   446                           	callstack 0
   447  000132                     	ds	80
   448  000182                     _Stemp:
   449                           	callstack 0
   450  000182                     	ds	20
   451                           
   452                           	psect	dataBANK1
   453  0001DB                     __pdataBANK1:
   454                           	callstack 0
   455  0001DB                     RTC_Calendario@F3531:
   456                           	callstack 0
   457  0001DB                     	ds	7
   458  0001E2                     _character3:
   459                           	callstack 0
   460  0001E2                     	ds	8
   461  0001EA                     _character2:
   462                           	callstack 0
   463  0001EA                     	ds	8
   464  0001F2                     _character1:
   465                           	callstack 0
   466  0001F2                     	ds	8
   467                           
   468                           	psect	cstackBANK1
   469  000196                     __pcstackBANK1:
   470                           	callstack 0
   471  000196                     RTC_Calendario@days:
   472                           	callstack 0
   473                           
   474                           ; 7 bytes @ 0x0
   475  000196                     	ds	7
   476  00019D                     RTC_Calendario@date:
   477                           	callstack 0
   478                           
   479                           ; 10 bytes @ 0x7
   480  00019D                     	ds	10
   481  0001A7                     RTC_Calendario@month:
   482                           	callstack 0
   483                           
   484                           ; 10 bytes @ 0x11
   485  0001A7                     	ds	10
   486  0001B1                     RTC_Calendario@year:
   487                           	callstack 0
   488                           
   489                           ; 10 bytes @ 0x1B
   490  0001B1                     	ds	10
   491  0001BB                     RTC_Calendario@secs:
   492                           	callstack 0
   493                           
   494                           ; 10 bytes @ 0x25
   495  0001BB                     	ds	10
   496  0001C5                     RTC_Calendario@mins:
   497                           	callstack 0
   498                           
   499                           ; 10 bytes @ 0x2F
   500  0001C5                     	ds	10
   501  0001CF                     RTC_Calendario@hours:
   502                           	callstack 0
   503                           
   504                           ; 10 bytes @ 0x39
   505  0001CF                     	ds	10
   506  0001D9                     RTC_Calendario@Clock_type:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x43
   510  0001D9                     	ds	1
   511  0001DA                     RTC_Calendario@AM_PM:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x44
   515  0001DA                     	ds	1
   516                           
   517                           	psect	cstackBANK0
   518  000060                     __pcstackBANK0:
   519                           	callstack 0
   520  000060                     ??___fltol:
   521  000060                     ?___flsub:
   522                           	callstack 0
   523  000060                     ___flsub@b:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x0
   527  000060                     	ds	4
   528  000064                     ___fltol@sign1:
   529                           	callstack 0
   530  000064                     ___flsub@a:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x4
   534  000064                     	ds	1
   535  000065                     ___fltol@exp1:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x5
   539  000065                     	ds	1
   540  000066                     ?_ReadADC:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x6
   544  000066                     	ds	2
   545  000068                     ??_ReadADC:
   546  000068                     ?_efgtoa:
   547                           	callstack 0
   548  000068                     efgtoa@fp:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x8
   552  000068                     	ds	2
   553  00006A                     ReadADC@result:
   554                           	callstack 0
   555  00006A                     efgtoa@f:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0xA
   559  00006A                     	ds	4
   560  00006E                     efgtoa@c:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0xE
   564  00006E                     	ds	1
   565  00006F                     ??_efgtoa:
   566                           
   567                           ; 1 bytes @ 0xF
   568  00006F                     	ds	5
   569  000074                     _efgtoa$1656:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x14
   573  000074                     	ds	2
   574  000076                     _efgtoa$1657:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x16
   578  000076                     	ds	2
   579  000078                     _efgtoa$1662:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x18
   583  000078                     	ds	2
   584  00007A                     _efgtoa$1666:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x1A
   588  00007A                     	ds	2
   589  00007C                     _efgtoa$1667:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x1C
   593  00007C                     	ds	2
   594  00007E                     _efgtoa$1668:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x1E
   598  00007E                     	ds	2
   599  000080                     efgtoa@t:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x20
   603  000080                     	ds	2
   604  000082                     efgtoa@pp:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x22
   608  000082                     	ds	2
   609  000084                     efgtoa@ne:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x24
   613  000084                     	ds	2
   614  000086                     efgtoa@m:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x26
   618  000086                     	ds	2
   619  000088                     efgtoa@ou:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x28
   623  000088                     	ds	4
   624  00008C                     efgtoa@d:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x2C
   628  00008C                     	ds	2
   629  00008E                     efgtoa@sign:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2E
   633  00008E                     	ds	2
   634  000090                     efgtoa@p:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x30
   638  000090                     	ds	2
   639  000092                     efgtoa@w:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x32
   643  000092                     	ds	2
   644  000094                     efgtoa@nmode:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x34
   648  000094                     	ds	1
   649  000095                     efgtoa@mode:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x35
   653  000095                     	ds	1
   654  000096                     efgtoa@h:
   655                           	callstack 0
   656                           
   657                           ; 4 bytes @ 0x36
   658  000096                     	ds	4
   659  00009A                     efgtoa@l:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x3A
   663  00009A                     	ds	4
   664  00009E                     efgtoa@i:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x3E
   668  00009E                     	ds	2
   669  0000A0                     efgtoa@g:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0x40
   673  0000A0                     	ds	4
   674  0000A4                     efgtoa@e:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x44
   678  0000A4                     	ds	2
   679  0000A6                     efgtoa@n:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x46
   683  0000A6                     	ds	2
   684  0000A8                     efgtoa@u:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x48
   688  0000A8                     	ds	4
   689  0000AC                     ?_vfpfcnvrt:
   690                           	callstack 0
   691  0000AC                     vfpfcnvrt@fp:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x4C
   695  0000AC                     	ds	2
   696  0000AE                     vfpfcnvrt@fmt:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x4E
   700  0000AE                     	ds	2
   701  0000B0                     vfpfcnvrt@ap:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x50
   705  0000B0                     	ds	2
   706  0000B2                     ??_vfpfcnvrt:
   707                           
   708                           ; 1 bytes @ 0x52
   709  0000B2                     	ds	4
   710  0000B6                     vfpfcnvrt@llu:
   711                           	callstack 0
   712                           
   713                           ; 8 bytes @ 0x56
   714  0000B6                     	ds	8
   715  0000BE                     vfpfcnvrt@done:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x5E
   719  0000BE                     	ds	2
   720  0000C0                     _vfpfcnvrt$1693:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x60
   724  0000C0                     	ds	2
   725  0000C2                     _vfpfcnvrt$1697:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x62
   729  0000C2                     	ds	2
   730  0000C4                     vfpfcnvrt@ct:
   731                           	callstack 0
   732                           
   733                           ; 3 bytes @ 0x64
   734  0000C4                     	ds	3
   735  0000C7                     vfpfcnvrt@f:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x67
   739  0000C7                     	ds	4
   740  0000CB                     vfpfcnvrt@c:
   741                           	callstack 0
   742                           
   743                           ; 1 bytes @ 0x6B
   744  0000CB                     	ds	1
   745  0000CC                     ?_vfprintf:
   746                           	callstack 0
   747  0000CC                     vfprintf@fp:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x6C
   751  0000CC                     	ds	2
   752  0000CE                     vfprintf@fmt:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x6E
   756  0000CE                     	ds	2
   757  0000D0                     vfprintf@ap:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x70
   761  0000D0                     	ds	2
   762  0000D2                     vfprintf@cfmt:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x72
   766  0000D2                     	ds	2
   767  0000D4                     ?_sprintf:
   768                           	callstack 0
   769  0000D4                     sprintf@s:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x74
   773  0000D4                     	ds	2
   774  0000D6                     sprintf@fmt:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x76
   778  0000D6                     	ds	6
   779  0000DC                     sprintf@ap:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x7C
   783  0000DC                     	ds	2
   784  0000DE                     sprintf@f:
   785                           	callstack 0
   786                           
   787                           ; 6 bytes @ 0x7E
   788  0000DE                     	ds	6
   789  0000E4                     ??_RTC_Calendario:
   790                           
   791                           ; 1 bytes @ 0x84
   792  0000E4                     	ds	3
   793  0000E7                     _main$2074:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x87
   797  0000E7                     	ds	4
   798                           
   799                           	psect	cstackCOMRAM
   800  000001                     __pcstackCOMRAM:
   801                           	callstack 0
   802  000001                     ??_ISR:
   803  000001                     
   804                           ; 1 bytes @ 0x0
   805  000001                     	ds	1
   806  000002                     ?_ReadLUZ:
   807                           	callstack 0
   808  000002                     ?_strlen:
   809                           	callstack 0
   810  000002                     ?___fpclassifyf:
   811                           	callstack 0
   812  000002                     ?_isupper:
   813                           	callstack 0
   814  000002                     ?_isalpha:
   815                           	callstack 0
   816  000002                     ?_isdigit:
   817                           	callstack 0
   818  000002                     ?_strncmp:
   819                           	callstack 0
   820  000002                     ?_isspace:
   821                           	callstack 0
   822  000002                     ?_islower:
   823                           	callstack 0
   824  000002                     ?___wmul:
   825                           	callstack 0
   826  000002                     ?___awdiv:
   827                           	callstack 0
   828  000002                     ?___awmod:
   829                           	callstack 0
   830  000002                     ?___flneg:
   831                           	callstack 0
   832  000002                     I2C_Read@flag:
   833                           	callstack 0
   834  000002                     I2C_Write@data:
   835                           	callstack 0
   836  000002                     MSdelay@val:
   837                           	callstack 0
   838  000002                     ___wmul@multiplier:
   839                           	callstack 0
   840  000002                     ___awdiv@dividend:
   841                           	callstack 0
   842  000002                     ___awmod@dividend:
   843                           	callstack 0
   844  000002                     isalpha@c:
   845                           	callstack 0
   846  000002                     isdigit@c:
   847                           	callstack 0
   848  000002                     isspace@c:
   849                           	callstack 0
   850  000002                     isupper@c:
   851                           	callstack 0
   852  000002                     fputc@c:
   853                           	callstack 0
   854  000002                     strcpy@dest:
   855                           	callstack 0
   856  000002                     strlen@s:
   857                           	callstack 0
   858  000002                     strncmp@_l:
   859                           	callstack 0
   860  000002                     islower@c:
   861                           	callstack 0
   862  000002                     ___fleq@ff1:
   863                           	callstack 0
   864  000002                     ___flneg@f1:
   865                           	callstack 0
   866  000002                     ___fpclassifyf@x:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x1
   870  000002                     	ds	1
   871  000003                     I2C_Read@buffer:
   872                           	callstack 0
   873  000003                     I2C_Start@slave_write_address:
   874                           	callstack 0
   875  000003                     I2C_Repeated_Start@slave_read_address:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x2
   879  000003                     	ds	1
   880  000004                     ??_ReadLUZ:
   881  000004                     ??_isupper:
   882  000004                     ??_isalpha:
   883  000004                     ??_isdigit:
   884  000004                     ??_isspace:
   885  000004                     ??_islower:
   886  000004                     ??_RTC_Read_Clock:
   887  000004                     ??_RTC_Read_Calendar:
   888  000004                     MSdelay@i:
   889                           	callstack 0
   890  000004                     ___wmul@multiplicand:
   891                           	callstack 0
   892  000004                     ___awdiv@divisor:
   893                           	callstack 0
   894  000004                     ___awmod@divisor:
   895                           	callstack 0
   896  000004                     fputc@fp:
   897                           	callstack 0
   898  000004                     strcpy@src:
   899                           	callstack 0
   900  000004                     strlen@a:
   901                           	callstack 0
   902  000004                     strncmp@_r:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x3
   906  000004                     	ds	1
   907  000005                     RTC_Read_Clock@read_clock_address:
   908                           	callstack 0
   909  000005                     RTC_Read_Calendar@read_calendar_address:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x4
   913  000005                     	ds	1
   914  000006                     ??_fputc:
   915  000006                     ??___fpclassifyf:
   916  000006                     ??_strcpy:
   917  000006                     ___awdiv@counter:
   918                           	callstack 0
   919  000006                     ___awmod@counter:
   920                           	callstack 0
   921  000006                     MSdelay@j:
   922                           	callstack 0
   923  000006                     ReadLUZ@result:
   924                           	callstack 0
   925  000006                     ___wmul@product:
   926                           	callstack 0
   927  000006                     strncmp@n:
   928                           	callstack 0
   929  000006                     ___fleq@ff2:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x5
   933  000006                     	ds	1
   934  000007                     ___awdiv@sign:
   935                           	callstack 0
   936  000007                     ___awmod@sign:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x6
   940  000007                     	ds	1
   941  000008                     ??_LCD_Command:
   942  000008                     ??_LCD_Char:
   943  000008                     ??_strncmp:
   944  000008                     ?_tolower:
   945                           	callstack 0
   946  000008                     ?_toupper:
   947                           	callstack 0
   948  000008                     ?___xxtofl:
   949                           	callstack 0
   950  000008                     _isspace$1772:
   951                           	callstack 0
   952  000008                     ___awdiv@quotient:
   953                           	callstack 0
   954  000008                     strcpy@s:
   955                           	callstack 0
   956  000008                     tolower@c:
   957                           	callstack 0
   958  000008                     toupper@c:
   959                           	callstack 0
   960  000008                     ___xxtofl@val:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x7
   964  000008                     	ds	1
   965  000009                     ?_atoi:
   966                           	callstack 0
   967  000009                     LCD_Command@cmd:
   968                           	callstack 0
   969  000009                     LCD_Char@dat:
   970                           	callstack 0
   971  000009                     atoi@s:
   972                           	callstack 0
   973  000009                     strncmp@l:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x8
   977  000009                     	ds	1
   978  00000A                     ??_tolower:
   979  00000A                     ??_toupper:
   980  00000A                     ??___fleq:
   981  00000A                     LCD_String@msg:
   982                           	callstack 0
   983  00000A                     LCD_Custom_Char@msg:
   984                           	callstack 0
   985  00000A                     ___fpclassifyf@e:
   986                           	callstack 0
   987  00000A                     strcpy@d:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x9
   991  00000A                     	ds	1
   992  00000B                     ??_atoi:
   993  00000B                     fputs@s:
   994                           	callstack 0
   995  00000B                     strncmp@r:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0xA
   999  00000B                     	ds	1
  1000  00000C                     ??___xxtofl:
  1001  00000C                     LCD_String_xy@pos:
  1002                           	callstack 0
  1003  00000C                     LCD_Custom_Char@loc:
  1004                           	callstack 0
  1005  00000C                     ___fpclassifyf@u:
  1006                           	callstack 0
  1007                           
  1008                           ; 4 bytes @ 0xB
  1009  00000C                     	ds	1
  1010  00000D                     LCD_Custom_Char@i:
  1011                           	callstack 0
  1012  00000D                     LCD_String_xy@msg:
  1013                           	callstack 0
  1014  00000D                     fputs@fp:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0xC
  1018  00000D                     	ds	1
  1019  00000E                     _tolower$1836:
  1020                           	callstack 0
  1021  00000E                     _toupper$1851:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0xD
  1025  00000E                     	ds	1
  1026  00000F                     LCD_String_xy@row:
  1027                           	callstack 0
  1028  00000F                     fputs@c:
  1029                           	callstack 0
  1030  00000F                     atoi@neg:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0xE
  1034  00000F                     	ds	1
  1035  000010                     LCD_String_xy@location:
  1036                           	callstack 0
  1037  000010                     ___xxtofl@sign:
  1038                           	callstack 0
  1039  000010                     fputs@i:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0xF
  1043  000010                     	ds	1
  1044  000011                     ___xxtofl@exp:
  1045                           	callstack 0
  1046  000011                     _atoi$1732:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x10
  1050  000011                     	ds	1
  1051  000012                     ?_pad:
  1052                           	callstack 0
  1053  000012                     pad@fp:
  1054                           	callstack 0
  1055  000012                     ___xxtofl@arg:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x11
  1059  000012                     	ds	1
  1060  000013                     _atoi$1734:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x12
  1064  000013                     	ds	1
  1065  000014                     pad@buf:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x13
  1069  000014                     	ds	1
  1070  000015                     _atoi$1733:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x14
  1074  000015                     	ds	1
  1075  000016                     ?___flmul:
  1076                           	callstack 0
  1077  000016                     pad@p:
  1078                           	callstack 0
  1079  000016                     atoi@n:
  1080                           	callstack 0
  1081  000016                     ___flmul@b:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x15
  1085  000016                     	ds	2
  1086  000018                     ??_pad:
  1087                           
  1088                           ; 1 bytes @ 0x17
  1089  000018                     	ds	1
  1090  000019                     pad@i:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x18
  1094  000019                     	ds	1
  1095  00001A                     ___flmul@a:
  1096                           	callstack 0
  1097                           
  1098                           ; 4 bytes @ 0x19
  1099  00001A                     	ds	1
  1100  00001B                     pad@w:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x1A
  1104  00001B                     	ds	2
  1105  00001D                     ?_xtoa:
  1106                           	callstack 0
  1107  00001D                     xtoa@fp:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x1C
  1111  00001D                     	ds	1
  1112  00001E                     ??___flmul:
  1113                           
  1114                           ; 1 bytes @ 0x1D
  1115  00001E                     	ds	1
  1116  00001F                     xtoa@d:
  1117                           	callstack 0
  1118                           
  1119                           ; 8 bytes @ 0x1E
  1120  00001F                     	ds	3
  1121  000022                     ___flmul@sign:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x21
  1125  000022                     	ds	1
  1126  000023                     ___flmul@grs:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x22
  1130  000023                     	ds	4
  1131  000027                     ___flmul@aexp:
  1132                           	callstack 0
  1133  000027                     xtoa@x:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x26
  1137  000027                     	ds	1
  1138  000028                     ??_xtoa:
  1139  000028                     ___flmul@bexp:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x27
  1143  000028                     	ds	1
  1144  000029                     ___flmul@prod:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x28
  1148  000029                     	ds	4
  1149  00002D                     ___flmul@temp:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x2C
  1153  00002D                     	ds	2
  1154  00002F                     ?___fldiv:
  1155                           	callstack 0
  1156  00002F                     ___flge@ff1:
  1157                           	callstack 0
  1158  00002F                     ___fldiv@b:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x2E
  1162  00002F                     	ds	1
  1163  000030                     _xtoa$1678:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x2F
  1167  000030                     	ds	2
  1168  000032                     _xtoa$1679:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x31
  1172  000032                     	ds	1
  1173  000033                     ___flge@ff2:
  1174                           	callstack 0
  1175  000033                     ___fldiv@a:
  1176                           	callstack 0
  1177                           
  1178                           ; 4 bytes @ 0x32
  1179  000033                     	ds	1
  1180  000034                     xtoa@p:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x33
  1184  000034                     	ds	2
  1185  000036                     xtoa@w:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x35
  1189  000036                     	ds	1
  1190  000037                     ??___fldiv:
  1191  000037                     ??___flge:
  1192                           
  1193                           ; 1 bytes @ 0x36
  1194  000037                     	ds	1
  1195  000038                     xtoa@n:
  1196                           	callstack 0
  1197                           
  1198                           ; 8 bytes @ 0x37
  1199  000038                     	ds	3
  1200  00003B                     ___fldiv@rem:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x3A
  1204  00003B                     	ds	4
  1205  00003F                     ___fldiv@sign:
  1206                           	callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x3E
  1209  00003F                     	ds	1
  1210  000040                     ___fldiv@new_exp:
  1211                           	callstack 0
  1212  000040                     xtoa@i:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x3F
  1216  000040                     	ds	2
  1217  000042                     xtoa@c:
  1218                           	callstack 0
  1219  000042                     ___fldiv@grs:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x41
  1223  000042                     	ds	4
  1224  000046                     ___fldiv@bexp:
  1225                           	callstack 0
  1226                           
  1227                           ; 1 bytes @ 0x45
  1228  000046                     	ds	1
  1229  000047                     ___fldiv@aexp:
  1230                           	callstack 0
  1231                           
  1232                           ; 1 bytes @ 0x46
  1233  000047                     	ds	1
  1234  000048                     ?___fladd:
  1235                           	callstack 0
  1236  000048                     ?_floorf:
  1237                           	callstack 0
  1238  000048                     ___fladd@b:
  1239                           	callstack 0
  1240  000048                     floorf@x:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x47
  1244  000048                     	ds	4
  1245  00004C                     ??_floorf:
  1246  00004C                     ___fladd@a:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x4B
  1250  00004C                     	ds	4
  1251  000050                     ??___fladd:
  1252                           
  1253                           ; 1 bytes @ 0x4F
  1254  000050                     	ds	2
  1255  000052                     floorf@m:
  1256                           	callstack 0
  1257                           
  1258                           ; 4 bytes @ 0x51
  1259  000052                     	ds	2
  1260  000054                     ___fladd@signs:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x53
  1264  000054                     	ds	1
  1265  000055                     ___fladd@aexp:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x54
  1269  000055                     	ds	1
  1270  000056                     ___fladd@bexp:
  1271                           	callstack 0
  1272  000056                     floorf@e:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x55
  1276  000056                     	ds	1
  1277  000057                     ___fladd@grs:
  1278                           	callstack 0
  1279                           
  1280                           ; 1 bytes @ 0x56
  1281  000057                     	ds	1
  1282  000058                     ?___fltol:
  1283                           	callstack 0
  1284  000058                     ___fltol@f1:
  1285                           	callstack 0
  1286  000058                     floorf@u:
  1287                           	callstack 0
  1288                           
  1289                           ; 4 bytes @ 0x57
  1290  000058                     	ds	4
  1291  00005C                     
  1292                           ; 1 bytes @ 0x5B
  1293 ;;
  1294 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1295 ;;
  1296 ;; *************** function _main *****************
  1297 ;; Defined at:
  1298 ;;		line 40 in file "smart_main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0
  1313 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1315 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1316 ;;Total ram usage:        4 bytes
  1317 ;; Hardware stack levels required when called: 11
  1318 ;; This function calls:
  1319 ;;		_I2C_Init
  1320 ;;		_LCD_Char
  1321 ;;		_LCD_Clear
  1322 ;;		_LCD_Command
  1323 ;;		_LCD_Custom_Char
  1324 ;;		_LCD_Init
  1325 ;;		_LCD_String_xy
  1326 ;;		_MSdelay
  1327 ;;		_PlayCancion
  1328 ;;		_RTC_Calendario
  1329 ;;		_ReadADC
  1330 ;;		_ReadLUZ
  1331 ;;		___flge
  1332 ;;		___xxtofl
  1333 ;;		_sprintf
  1334 ;; This function is called by:
  1335 ;;		Startup code after reset
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text0
  1340  0023A8                     __ptext0:
  1341                           	callstack 0
  1342  0023A8                     _main:
  1343                           	callstack 20
  1344  0023A8                     
  1345                           ;smart_main.c: 41:     OSCCON = 0x72;
  1346  0023A8  0E72               	movlw	114
  1347  0023AA  6ED3               	movwf	211,c	;volatile
  1348                           
  1349                           ;smart_main.c: 42:     TRISE = 0x00;
  1350  0023AC  0E00               	movlw	0
  1351  0023AE  6E96               	movwf	150,c	;volatile
  1352  0023B0                     
  1353                           ;smart_main.c: 45:     I2C_Init();
  1354  0023B0  ECE8  F023         	call	_I2C_Init	;wreg free
  1355  0023B4                     
  1356                           ;smart_main.c: 46:     LCD_Init();
  1357  0023B4  EC6E  F023         	call	_LCD_Init	;wreg free
  1358  0023B8                     
  1359                           ;smart_main.c: 47:     LCD_String_xy(1, 0, " Buenos Dias ");
  1360  0023B8  0E00               	movlw	0
  1361  0023BA  6E0C               	movwf	LCD_String_xy@pos^0,c
  1362  0023BC  0E01               	movlw	low STR_1
  1363  0023BE  6E0D               	movwf	LCD_String_xy@msg^0,c
  1364  0023C0  0E08               	movlw	high STR_1
  1365  0023C2  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  1366  0023C4  0E01               	movlw	1
  1367  0023C6  EC88  F022         	call	_LCD_String_xy
  1368  0023CA                     
  1369                           ;smart_main.c: 48:     LCD_Clear();
  1370  0023CA  EC13  F024         	call	_LCD_Clear	;wreg free
  1371  0023CE                     l6149:
  1372                           
  1373                           ;smart_main.c: 51:         tempar = ReadADC();
  1374  0023CE  EC42  F01C         	call	_ReadADC	;wreg free
  1375  0023D2  0100               	movlb	0	; () banked
  1376  0023D4  C066  F0E7         	movff	?_ReadADC,_main$2074
  1377  0023D8  C067  F0E8         	movff	?_ReadADC+1,_main$2074+1
  1378  0023DC  6BE9               	clrf	(_main$2074+2)& (0+255),b
  1379  0023DE  6BEA               	clrf	(_main$2074+3)& (0+255),b
  1380  0023E0                     
  1381                           ; BSR set to: 0
  1382                           ;smart_main.c: 51:         tempar = ReadADC();
  1383  0023E0  C0E7  F008         	movff	_main$2074,___xxtofl@val
  1384  0023E4  C0E8  F009         	movff	_main$2074+1,___xxtofl@val+1
  1385  0023E8  C0E9  F00A         	movff	_main$2074+2,___xxtofl@val+2
  1386  0023EC  C0EA  F00B         	movff	_main$2074+3,___xxtofl@val+3
  1387  0023F0  0E00               	movlw	0
  1388  0023F2  EC9A  F019         	call	___xxtofl
  1389  0023F6  C008  F0EF         	movff	?___xxtofl,_tempar
  1390  0023FA  C009  F0F0         	movff	?___xxtofl+1,_tempar+1
  1391  0023FE  C00A  F0F1         	movff	?___xxtofl+2,_tempar+2
  1392  002402  C00B  F0F2         	movff	?___xxtofl+3,_tempar+3
  1393  002406                     
  1394                           ;smart_main.c: 52:         luz = ReadLUZ();
  1395  002406  ECC7  F01F         	call	_ReadLUZ	;wreg free
  1396  00240A  C002  F008         	movff	?_ReadLUZ,___xxtofl@val
  1397  00240E  C003  F009         	movff	?_ReadLUZ+1,___xxtofl@val+1
  1398  002412  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1399  002414  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1400  002416  0E00               	movlw	0
  1401  002418  EC9A  F019         	call	___xxtofl
  1402  00241C  C008  F0EB         	movff	?___xxtofl,_luz
  1403  002420  C009  F0EC         	movff	?___xxtofl+1,_luz+1
  1404  002424  C00A  F0ED         	movff	?___xxtofl+2,_luz+2
  1405  002428  C00B  F0EE         	movff	?___xxtofl+3,_luz+3
  1406  00242C                     
  1407                           ;smart_main.c: 53:         RTC_Calendario();
  1408  00242C  EC77  F015         	call	_RTC_Calendario	;wreg free
  1409  002430                     
  1410                           ;smart_main.c: 54:         MSdelay(10);
  1411  002430  0E00               	movlw	0
  1412  002432  6E03               	movwf	(MSdelay@val+1)^0,c
  1413  002434  0E0A               	movlw	10
  1414  002436  6E02               	movwf	MSdelay@val^0,c
  1415  002438  ECB2  F021         	call	_MSdelay	;wreg free
  1416  00243C                     
  1417                           ;smart_main.c: 56:         if (tempar > 15 && (luz > 0 && luz < 400)) {
  1418  00243C  0E00               	movlw	0
  1419  00243E  6E2F               	movwf	___flge@ff1^0,c
  1420  002440  0E00               	movlw	0
  1421  002442  6E30               	movwf	(___flge@ff1+1)^0,c
  1422  002444  0E70               	movlw	112
  1423  002446  6E31               	movwf	(___flge@ff1+2)^0,c
  1424  002448  0E41               	movlw	65
  1425  00244A  6E32               	movwf	(___flge@ff1+3)^0,c
  1426  00244C  C0EF  F033         	movff	_tempar,___flge@ff2
  1427  002450  C0F0  F034         	movff	_tempar+1,___flge@ff2+1
  1428  002454  C0F1  F035         	movff	_tempar+2,___flge@ff2+2
  1429  002458  C0F2  F036         	movff	_tempar+3,___flge@ff2+3
  1430  00245C  ECC0  F01B         	call	___flge	;wreg free
  1431  002460  B0D8               	btfsc	status,0,c
  1432  002462  EF35  F012         	goto	u7071
  1433  002466  EF37  F012         	goto	u7070
  1434  00246A                     u7071:
  1435  00246A  EF97  F012         	goto	l6175
  1436  00246E                     u7070:
  1437  00246E  0E00               	movlw	0
  1438  002470  6E2F               	movwf	___flge@ff1^0,c
  1439  002472  0E00               	movlw	0
  1440  002474  6E30               	movwf	(___flge@ff1+1)^0,c
  1441  002476  0E00               	movlw	0
  1442  002478  6E31               	movwf	(___flge@ff1+2)^0,c
  1443  00247A  0E00               	movlw	0
  1444  00247C  6E32               	movwf	(___flge@ff1+3)^0,c
  1445  00247E  C0EB  F033         	movff	_luz,___flge@ff2
  1446  002482  C0EC  F034         	movff	_luz+1,___flge@ff2+1
  1447  002486  C0ED  F035         	movff	_luz+2,___flge@ff2+2
  1448  00248A  C0EE  F036         	movff	_luz+3,___flge@ff2+3
  1449  00248E  ECC0  F01B         	call	___flge	;wreg free
  1450  002492  B0D8               	btfsc	status,0,c
  1451  002494  EF4E  F012         	goto	u7081
  1452  002498  EF50  F012         	goto	u7080
  1453  00249C                     u7081:
  1454  00249C  EF97  F012         	goto	l6175
  1455  0024A0                     u7080:
  1456  0024A0  C0EB  F02F         	movff	_luz,___flge@ff1
  1457  0024A4  C0EC  F030         	movff	_luz+1,___flge@ff1+1
  1458  0024A8  C0ED  F031         	movff	_luz+2,___flge@ff1+2
  1459  0024AC  C0EE  F032         	movff	_luz+3,___flge@ff1+3
  1460  0024B0  0E00               	movlw	0
  1461  0024B2  6E33               	movwf	___flge@ff2^0,c
  1462  0024B4  0E00               	movlw	0
  1463  0024B6  6E34               	movwf	(___flge@ff2+1)^0,c
  1464  0024B8  0EC8               	movlw	200
  1465  0024BA  6E35               	movwf	(___flge@ff2+2)^0,c
  1466  0024BC  0E43               	movlw	67
  1467  0024BE  6E36               	movwf	(___flge@ff2+3)^0,c
  1468  0024C0  ECC0  F01B         	call	___flge	;wreg free
  1469  0024C4  B0D8               	btfsc	status,0,c
  1470  0024C6  EF67  F012         	goto	u7091
  1471  0024CA  EF69  F012         	goto	u7090
  1472  0024CE                     u7091:
  1473  0024CE  EF97  F012         	goto	l6175
  1474  0024D2                     u7090:
  1475  0024D2                     
  1476                           ;smart_main.c: 57:             LATE0 = 0;
  1477  0024D2  908D               	bcf	3981,0,c	;volatile
  1478                           
  1479                           ;smart_main.c: 58:             LATE1 = 0;
  1480  0024D4  928D               	bcf	3981,1,c	;volatile
  1481                           
  1482                           ;smart_main.c: 59:             LATE2 = 0;
  1483  0024D6  948D               	bcf	3981,2,c	;volatile
  1484  0024D8                     
  1485                           ;smart_main.c: 60:             sprintf(Stemp, "%0.0fC", tempar);
  1486  0024D8  0E82               	movlw	low _Stemp
  1487  0024DA  0100               	movlb	0	; () banked
  1488  0024DC  6FD4               	movwf	sprintf@s& (0+255),b
  1489  0024DE  0E01               	movlw	high _Stemp
  1490  0024E0  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  1491  0024E2  0E0F               	movlw	low STR_2
  1492  0024E4  6FD6               	movwf	sprintf@fmt& (0+255),b
  1493  0024E6  0E08               	movlw	high STR_2
  1494  0024E8  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  1495  0024EA  C0EF  F0D8         	movff	_tempar,?_sprintf+4
  1496  0024EE  C0F0  F0D9         	movff	_tempar+1,?_sprintf+5
  1497  0024F2  C0F1  F0DA         	movff	_tempar+2,?_sprintf+6
  1498  0024F6  C0F2  F0DB         	movff	_tempar+3,?_sprintf+7
  1499  0024FA  EC14  F021         	call	_sprintf	;wreg free
  1500  0024FE                     
  1501                           ;smart_main.c: 61:             LCD_String_xy(1, 0, Stemp);
  1502  0024FE  0E00               	movlw	0
  1503  002500  6E0C               	movwf	LCD_String_xy@pos^0,c
  1504  002502  0E82               	movlw	low _Stemp
  1505  002504  6E0D               	movwf	LCD_String_xy@msg^0,c
  1506  002506  0E01               	movlw	high _Stemp
  1507  002508  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  1508  00250A  0E01               	movlw	1
  1509  00250C  EC88  F022         	call	_LCD_String_xy
  1510  002510                     
  1511                           ;smart_main.c: 62:             LCD_Custom_Char(0, character2);
  1512  002510  0EEA               	movlw	low _character2
  1513  002512  6E0A               	movwf	LCD_Custom_Char@msg^0,c
  1514  002514  0E01               	movlw	high _character2
  1515  002516  6E0B               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1516  002518  0E00               	movlw	0
  1517  00251A  EC1F  F022         	call	_LCD_Custom_Char
  1518                           
  1519                           ;smart_main.c: 63:             LCD_Command(0xc0);
  1520  00251E  0EC0               	movlw	192
  1521  002520  EC66  F021         	call	_LCD_Command
  1522                           
  1523                           ;smart_main.c: 64:             LCD_Char(0);
  1524  002524  0E00               	movlw	0
  1525  002526  EC8C  F021         	call	_LCD_Char
  1526  00252A                     
  1527                           ;smart_main.c: 65:             PlayCancion();
  1528  00252A  EC30  F024         	call	_PlayCancion	;wreg free
  1529  00252E                     l6175:
  1530                           
  1531                           ;smart_main.c: 67:         if ((tempar >= 12 && tempar <= 15)&&(luz > 400 && luz < 700))
      +                           {
  1532  00252E  C0EF  F02F         	movff	_tempar,___flge@ff1
  1533  002532  C0F0  F030         	movff	_tempar+1,___flge@ff1+1
  1534  002536  C0F1  F031         	movff	_tempar+2,___flge@ff1+2
  1535  00253A  C0F2  F032         	movff	_tempar+3,___flge@ff1+3
  1536  00253E  0E00               	movlw	0
  1537  002540  6E33               	movwf	___flge@ff2^0,c
  1538  002542  0E00               	movlw	0
  1539  002544  6E34               	movwf	(___flge@ff2+1)^0,c
  1540  002546  0E40               	movlw	64
  1541  002548  6E35               	movwf	(___flge@ff2+2)^0,c
  1542  00254A  0E41               	movlw	65
  1543  00254C  6E36               	movwf	(___flge@ff2+3)^0,c
  1544  00254E  ECC0  F01B         	call	___flge	;wreg free
  1545  002552  A0D8               	btfss	status,0,c
  1546  002554  EFAE  F012         	goto	u7101
  1547  002558  EFB0  F012         	goto	u7100
  1548  00255C                     u7101:
  1549  00255C  EF27  F013         	goto	l59
  1550  002560                     u7100:
  1551  002560  0E00               	movlw	0
  1552  002562  6E2F               	movwf	___flge@ff1^0,c
  1553  002564  0E00               	movlw	0
  1554  002566  6E30               	movwf	(___flge@ff1+1)^0,c
  1555  002568  0E70               	movlw	112
  1556  00256A  6E31               	movwf	(___flge@ff1+2)^0,c
  1557  00256C  0E41               	movlw	65
  1558  00256E  6E32               	movwf	(___flge@ff1+3)^0,c
  1559  002570  C0EF  F033         	movff	_tempar,___flge@ff2
  1560  002574  C0F0  F034         	movff	_tempar+1,___flge@ff2+1
  1561  002578  C0F1  F035         	movff	_tempar+2,___flge@ff2+2
  1562  00257C  C0F2  F036         	movff	_tempar+3,___flge@ff2+3
  1563  002580  ECC0  F01B         	call	___flge	;wreg free
  1564  002584  A0D8               	btfss	status,0,c
  1565  002586  EFC7  F012         	goto	u7111
  1566  00258A  EFC9  F012         	goto	u7110
  1567  00258E                     u7111:
  1568  00258E  EF27  F013         	goto	l59
  1569  002592                     u7110:
  1570  002592  0E00               	movlw	0
  1571  002594  6E2F               	movwf	___flge@ff1^0,c
  1572  002596  0E00               	movlw	0
  1573  002598  6E30               	movwf	(___flge@ff1+1)^0,c
  1574  00259A  0EC8               	movlw	200
  1575  00259C  6E31               	movwf	(___flge@ff1+2)^0,c
  1576  00259E  0E43               	movlw	67
  1577  0025A0  6E32               	movwf	(___flge@ff1+3)^0,c
  1578  0025A2  C0EB  F033         	movff	_luz,___flge@ff2
  1579  0025A6  C0EC  F034         	movff	_luz+1,___flge@ff2+1
  1580  0025AA  C0ED  F035         	movff	_luz+2,___flge@ff2+2
  1581  0025AE  C0EE  F036         	movff	_luz+3,___flge@ff2+3
  1582  0025B2  ECC0  F01B         	call	___flge	;wreg free
  1583  0025B6  B0D8               	btfsc	status,0,c
  1584  0025B8  EFE0  F012         	goto	u7121
  1585  0025BC  EFE2  F012         	goto	u7120
  1586  0025C0                     u7121:
  1587  0025C0  EF27  F013         	goto	l59
  1588  0025C4                     u7120:
  1589  0025C4  C0EB  F02F         	movff	_luz,___flge@ff1
  1590  0025C8  C0EC  F030         	movff	_luz+1,___flge@ff1+1
  1591  0025CC  C0ED  F031         	movff	_luz+2,___flge@ff1+2
  1592  0025D0  C0EE  F032         	movff	_luz+3,___flge@ff1+3
  1593  0025D4  0E00               	movlw	0
  1594  0025D6  6E33               	movwf	___flge@ff2^0,c
  1595  0025D8  0E00               	movlw	0
  1596  0025DA  6E34               	movwf	(___flge@ff2+1)^0,c
  1597  0025DC  0E2F               	movlw	47
  1598  0025DE  6E35               	movwf	(___flge@ff2+2)^0,c
  1599  0025E0  0E44               	movlw	68
  1600  0025E2  6E36               	movwf	(___flge@ff2+3)^0,c
  1601  0025E4  ECC0  F01B         	call	___flge	;wreg free
  1602  0025E8  B0D8               	btfsc	status,0,c
  1603  0025EA  EFF9  F012         	goto	u7131
  1604  0025EE  EFFB  F012         	goto	u7130
  1605  0025F2                     u7131:
  1606  0025F2  EF27  F013         	goto	l59
  1607  0025F6                     u7130:
  1608  0025F6                     
  1609                           ;smart_main.c: 68:             LATE0 = 1;
  1610  0025F6  808D               	bsf	3981,0,c	;volatile
  1611                           
  1612                           ;smart_main.c: 69:             LATE1 = 1;
  1613  0025F8  828D               	bsf	3981,1,c	;volatile
  1614                           
  1615                           ;smart_main.c: 70:             LATE2 = 0;
  1616  0025FA  948D               	bcf	3981,2,c	;volatile
  1617  0025FC                     
  1618                           ;smart_main.c: 71:             sprintf(Stemp, "%0.0fC", tempar);
  1619  0025FC  0E82               	movlw	low _Stemp
  1620  0025FE  0100               	movlb	0	; () banked
  1621  002600  6FD4               	movwf	sprintf@s& (0+255),b
  1622  002602  0E01               	movlw	high _Stemp
  1623  002604  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  1624  002606  0E0F               	movlw	low STR_2
  1625  002608  6FD6               	movwf	sprintf@fmt& (0+255),b
  1626  00260A  0E08               	movlw	high STR_2
  1627  00260C  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  1628  00260E  C0EF  F0D8         	movff	_tempar,?_sprintf+4
  1629  002612  C0F0  F0D9         	movff	_tempar+1,?_sprintf+5
  1630  002616  C0F1  F0DA         	movff	_tempar+2,?_sprintf+6
  1631  00261A  C0F2  F0DB         	movff	_tempar+3,?_sprintf+7
  1632  00261E  EC14  F021         	call	_sprintf	;wreg free
  1633  002622                     
  1634                           ;smart_main.c: 72:             LCD_String_xy(1, 0, Stemp);
  1635  002622  0E00               	movlw	0
  1636  002624  6E0C               	movwf	LCD_String_xy@pos^0,c
  1637  002626  0E82               	movlw	low _Stemp
  1638  002628  6E0D               	movwf	LCD_String_xy@msg^0,c
  1639  00262A  0E01               	movlw	high _Stemp
  1640  00262C  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  1641  00262E  0E01               	movlw	1
  1642  002630  EC88  F022         	call	_LCD_String_xy
  1643  002634                     
  1644                           ;smart_main.c: 73:             LCD_Custom_Char(0, character3);
  1645  002634  0EE2               	movlw	low _character3
  1646  002636  6E0A               	movwf	LCD_Custom_Char@msg^0,c
  1647  002638  0E01               	movlw	high _character3
  1648  00263A  6E0B               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1649  00263C  0E00               	movlw	0
  1650  00263E  EC1F  F022         	call	_LCD_Custom_Char
  1651                           
  1652                           ;smart_main.c: 74:             LCD_Command(0xc0);
  1653  002642  0EC0               	movlw	192
  1654  002644  EC66  F021         	call	_LCD_Command
  1655                           
  1656                           ;smart_main.c: 75:             LCD_Char(0);
  1657  002648  0E00               	movlw	0
  1658  00264A  EC8C  F021         	call	_LCD_Char
  1659  00264E                     l59:
  1660                           
  1661                           ;smart_main.c: 78:         if (tempar < 12 && (luz > 700 && luz < 1500)) {
  1662  00264E  C0EF  F02F         	movff	_tempar,___flge@ff1
  1663  002652  C0F0  F030         	movff	_tempar+1,___flge@ff1+1
  1664  002656  C0F1  F031         	movff	_tempar+2,___flge@ff1+2
  1665  00265A  C0F2  F032         	movff	_tempar+3,___flge@ff1+3
  1666  00265E  0E00               	movlw	0
  1667  002660  6E33               	movwf	___flge@ff2^0,c
  1668  002662  0E00               	movlw	0
  1669  002664  6E34               	movwf	(___flge@ff2+1)^0,c
  1670  002666  0E40               	movlw	64
  1671  002668  6E35               	movwf	(___flge@ff2+2)^0,c
  1672  00266A  0E41               	movlw	65
  1673  00266C  6E36               	movwf	(___flge@ff2+3)^0,c
  1674  00266E  ECC0  F01B         	call	___flge	;wreg free
  1675  002672  B0D8               	btfsc	status,0,c
  1676  002674  EF3E  F013         	goto	u7141
  1677  002678  EF40  F013         	goto	u7140
  1678  00267C                     u7141:
  1679  00267C  EF9E  F013         	goto	l60
  1680  002680                     u7140:
  1681  002680  0E00               	movlw	0
  1682  002682  6E2F               	movwf	___flge@ff1^0,c
  1683  002684  0E00               	movlw	0
  1684  002686  6E30               	movwf	(___flge@ff1+1)^0,c
  1685  002688  0E2F               	movlw	47
  1686  00268A  6E31               	movwf	(___flge@ff1+2)^0,c
  1687  00268C  0E44               	movlw	68
  1688  00268E  6E32               	movwf	(___flge@ff1+3)^0,c
  1689  002690  C0EB  F033         	movff	_luz,___flge@ff2
  1690  002694  C0EC  F034         	movff	_luz+1,___flge@ff2+1
  1691  002698  C0ED  F035         	movff	_luz+2,___flge@ff2+2
  1692  00269C  C0EE  F036         	movff	_luz+3,___flge@ff2+3
  1693  0026A0  ECC0  F01B         	call	___flge	;wreg free
  1694  0026A4  B0D8               	btfsc	status,0,c
  1695  0026A6  EF57  F013         	goto	u7151
  1696  0026AA  EF59  F013         	goto	u7150
  1697  0026AE                     u7151:
  1698  0026AE  EF9E  F013         	goto	l60
  1699  0026B2                     u7150:
  1700  0026B2  C0EB  F02F         	movff	_luz,___flge@ff1
  1701  0026B6  C0EC  F030         	movff	_luz+1,___flge@ff1+1
  1702  0026BA  C0ED  F031         	movff	_luz+2,___flge@ff1+2
  1703  0026BE  C0EE  F032         	movff	_luz+3,___flge@ff1+3
  1704  0026C2  0E00               	movlw	0
  1705  0026C4  6E33               	movwf	___flge@ff2^0,c
  1706  0026C6  0E80               	movlw	128
  1707  0026C8  6E34               	movwf	(___flge@ff2+1)^0,c
  1708  0026CA  0EBB               	movlw	187
  1709  0026CC  6E35               	movwf	(___flge@ff2+2)^0,c
  1710  0026CE  0E44               	movlw	68
  1711  0026D0  6E36               	movwf	(___flge@ff2+3)^0,c
  1712  0026D2  ECC0  F01B         	call	___flge	;wreg free
  1713  0026D6  B0D8               	btfsc	status,0,c
  1714  0026D8  EF70  F013         	goto	u7161
  1715  0026DC  EF72  F013         	goto	u7160
  1716  0026E0                     u7161:
  1717  0026E0  EF9E  F013         	goto	l60
  1718  0026E4                     u7160:
  1719  0026E4                     
  1720                           ;smart_main.c: 79:             LATE0 = 1;
  1721  0026E4  808D               	bsf	3981,0,c	;volatile
  1722                           
  1723                           ;smart_main.c: 80:             LATE1 = 1;
  1724  0026E6  828D               	bsf	3981,1,c	;volatile
  1725                           
  1726                           ;smart_main.c: 81:             LATE2 = 1;
  1727  0026E8  848D               	bsf	3981,2,c	;volatile
  1728  0026EA                     
  1729                           ;smart_main.c: 82:             sprintf(Stemp, "%0.0fC", tempar);
  1730  0026EA  0E82               	movlw	low _Stemp
  1731  0026EC  0100               	movlb	0	; () banked
  1732  0026EE  6FD4               	movwf	sprintf@s& (0+255),b
  1733  0026F0  0E01               	movlw	high _Stemp
  1734  0026F2  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  1735  0026F4  0E0F               	movlw	low STR_2
  1736  0026F6  6FD6               	movwf	sprintf@fmt& (0+255),b
  1737  0026F8  0E08               	movlw	high STR_2
  1738  0026FA  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  1739  0026FC  C0EF  F0D8         	movff	_tempar,?_sprintf+4
  1740  002700  C0F0  F0D9         	movff	_tempar+1,?_sprintf+5
  1741  002704  C0F1  F0DA         	movff	_tempar+2,?_sprintf+6
  1742  002708  C0F2  F0DB         	movff	_tempar+3,?_sprintf+7
  1743  00270C  EC14  F021         	call	_sprintf	;wreg free
  1744  002710                     
  1745                           ;smart_main.c: 83:             LCD_String_xy(1, 0, Stemp);
  1746  002710  0E00               	movlw	0
  1747  002712  6E0C               	movwf	LCD_String_xy@pos^0,c
  1748  002714  0E82               	movlw	low _Stemp
  1749  002716  6E0D               	movwf	LCD_String_xy@msg^0,c
  1750  002718  0E01               	movlw	high _Stemp
  1751  00271A  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  1752  00271C  0E01               	movlw	1
  1753  00271E  EC88  F022         	call	_LCD_String_xy
  1754  002722                     
  1755                           ;smart_main.c: 84:             LCD_Custom_Char(0, character1);
  1756  002722  0EF2               	movlw	low _character1
  1757  002724  6E0A               	movwf	LCD_Custom_Char@msg^0,c
  1758  002726  0E01               	movlw	high _character1
  1759  002728  6E0B               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1760  00272A  0E00               	movlw	0
  1761  00272C  EC1F  F022         	call	_LCD_Custom_Char
  1762                           
  1763                           ;smart_main.c: 85:             LCD_Command(0xc0);
  1764  002730  0EC0               	movlw	192
  1765  002732  EC66  F021         	call	_LCD_Command
  1766                           
  1767                           ;smart_main.c: 86:             LCD_Char(0);
  1768  002736  0E00               	movlw	0
  1769  002738  EC8C  F021         	call	_LCD_Char
  1770  00273C                     l60:
  1771                           
  1772                           ;smart_main.c: 90:         MSdelay(3000);
  1773  00273C  0E0B               	movlw	11
  1774  00273E  6E03               	movwf	(MSdelay@val+1)^0,c
  1775  002740  0EB8               	movlw	184
  1776  002742  6E02               	movwf	MSdelay@val^0,c
  1777  002744  ECB2  F021         	call	_MSdelay	;wreg free
  1778                           
  1779                           ;smart_main.c: 91:         LCD_Clear();
  1780  002748  EC13  F024         	call	_LCD_Clear	;wreg free
  1781  00274C  EFE7  F011         	goto	l6149
  1782  002750  EF07  F000         	goto	start
  1783  002754                     __end_of_main:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _ReadLUZ *****************
  1787 ;; Defined at:
  1788 ;;		line 12 in file "Sensor_luz.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  result          2    5[COMRAM] unsigned short 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2    1[COMRAM] unsigned short 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1802 ;;      Params:         2       0       0       0       0       0       0       0       0
  1803 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1804 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1805 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1806 ;;Total ram usage:        6 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 2
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text1
  1817  003F8E                     __ptext1:
  1818                           	callstack 0
  1819  003F8E                     _ReadLUZ:
  1820                           	callstack 28
  1821  003F8E                     
  1822                           ;Sensor_luz.c: 14:     uint16_t result;;Sensor_luz.c: 16:     TRISD = 0x00;
  1823  003F8E  0E00               	movlw	0
  1824  003F90  6E95               	movwf	149,c	;volatile
  1825  003F92                     
  1826                           ;Sensor_luz.c: 17:     TRISA = 0xFF;
  1827  003F92  6892               	setf	146,c	;volatile
  1828                           
  1829                           ;Sensor_luz.c: 19:     OSCCONbits.IRCF = 0b111;
  1830  003F94  0E70               	movlw	112
  1831  003F96  12D3               	iorwf	211,f,c	;volatile
  1832                           
  1833                           ;Sensor_luz.c: 20:     OSCCONbits.SCS = 0b10;
  1834  003F98  50D3               	movf	211,w,c	;volatile
  1835  003F9A  0BFC               	andlw	-4
  1836  003F9C  0902               	iorlw	2
  1837  003F9E  6ED3               	movwf	211,c	;volatile
  1838                           
  1839                           ;Sensor_luz.c: 23:     ADCON1bits.PCFG = 0b1101;
  1840  003FA0  50C1               	movf	193,w,c	;volatile
  1841  003FA2  0BF0               	andlw	-16
  1842  003FA4  090D               	iorlw	13
  1843  003FA6  6EC1               	movwf	193,c	;volatile
  1844                           
  1845                           ;Sensor_luz.c: 24:     ADCON1bits.VCFG = 0b00;
  1846  003FA8  0ECF               	movlw	-49
  1847  003FAA  16C1               	andwf	193,f,c	;volatile
  1848                           
  1849                           ;Sensor_luz.c: 25:     ADCON0bits.CHS = 0b0001;
  1850  003FAC  50C2               	movf	194,w,c	;volatile
  1851  003FAE  0BC3               	andlw	-61
  1852  003FB0  0904               	iorlw	4
  1853  003FB2  6EC2               	movwf	194,c	;volatile
  1854                           
  1855                           ;Sensor_luz.c: 26:     ADCON2bits.ACQT = 0b010;
  1856  003FB4  50C0               	movf	192,w,c	;volatile
  1857  003FB6  0BC7               	andlw	-57
  1858  003FB8  0910               	iorlw	16
  1859  003FBA  6EC0               	movwf	192,c	;volatile
  1860                           
  1861                           ;Sensor_luz.c: 27:     ADCON2bits.ADCS = 0b001;
  1862  003FBC  50C0               	movf	192,w,c	;volatile
  1863  003FBE  0BF8               	andlw	-8
  1864  003FC0  0901               	iorlw	1
  1865  003FC2  6EC0               	movwf	192,c	;volatile
  1866  003FC4                     
  1867                           ;Sensor_luz.c: 28:     ADCON2bits.ADFM = 1;
  1868  003FC4  8EC0               	bsf	192,7,c	;volatile
  1869  003FC6                     
  1870                           ;Sensor_luz.c: 29:     ADCON0bits.ADON = 1;
  1871  003FC6  80C2               	bsf	194,0,c	;volatile
  1872  003FC8                     
  1873                           ;Sensor_luz.c: 44:         ADCON0bits.GO_DONE = 1;
  1874  003FC8  82C2               	bsf	194,1,c	;volatile
  1875  003FCA                     l169:
  1876  003FCA  B2C2               	btfsc	194,1,c	;volatile
  1877  003FCC  EFEA  F01F         	goto	u5951
  1878  003FD0  EFEC  F01F         	goto	u5950
  1879  003FD4                     u5951:
  1880  003FD4  EFE5  F01F         	goto	l169
  1881  003FD8                     u5950:
  1882  003FD8                     
  1883                           ;Sensor_luz.c: 46:         result = ADRESH;
  1884  003FD8  CFC4 F006          	movff	4036,ReadLUZ@result	;volatile
  1885  003FDC  6A07               	clrf	(ReadLUZ@result+1)^0,c
  1886  003FDE                     
  1887                           ;Sensor_luz.c: 47:         result = (result << 8) + ADRESL;
  1888  003FDE  5006               	movf	ReadLUZ@result^0,w,c
  1889  003FE0  6E04               	movwf	??_ReadLUZ^0,c
  1890  003FE2  50C3               	movf	195,w,c	;volatile
  1891  003FE4  6E06               	movwf	ReadLUZ@result^0,c
  1892  003FE6  C004  F007         	movff	??_ReadLUZ,ReadLUZ@result+1
  1893  003FEA                     
  1894                           ;Sensor_luz.c: 49:         return result;
  1895  003FEA  C006  F002         	movff	ReadLUZ@result,?_ReadLUZ
  1896  003FEE  C007  F003         	movff	ReadLUZ@result+1,?_ReadLUZ+1
  1897  003FF2  0012               	return		;funcret
  1898  003FF4                     __end_of_ReadLUZ:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _ReadADC *****************
  1902 ;; Defined at:
  1903 ;;		line 13 in file "Temperatura.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  result          2   10[BANK0 ] unsigned short 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  2    6[BANK0 ] unsigned short 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1917 ;;      Params:         0       2       0       0       0       0       0       0       0
  1918 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1919 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1920 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1921 ;;Total ram usage:        6 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 3
  1924 ;; This function calls:
  1925 ;;		___fladd
  1926 ;;		___fldiv
  1927 ;;		___flmul
  1928 ;;		___fltol
  1929 ;;		___xxtofl
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text2
  1936  003884                     __ptext2:
  1937                           	callstack 0
  1938  003884                     _ReadADC:
  1939                           	callstack 27
  1940  003884                     
  1941                           ;Temperatura.c: 15:     uint16_t result;;Temperatura.c: 17:     TRISD = 0x00;
  1942  003884  0E00               	movlw	0
  1943  003886  6E95               	movwf	149,c	;volatile
  1944  003888                     
  1945                           ;Temperatura.c: 18:     TRISA = 0xFF;
  1946  003888  6892               	setf	146,c	;volatile
  1947                           
  1948                           ;Temperatura.c: 20:     OSCCONbits.IRCF = 0b111;
  1949  00388A  0E70               	movlw	112
  1950  00388C  12D3               	iorwf	211,f,c	;volatile
  1951                           
  1952                           ;Temperatura.c: 21:     OSCCONbits.SCS = 0b10;
  1953  00388E  50D3               	movf	211,w,c	;volatile
  1954  003890  0BFC               	andlw	-4
  1955  003892  0902               	iorlw	2
  1956  003894  6ED3               	movwf	211,c	;volatile
  1957                           
  1958                           ;Temperatura.c: 24:     ADCON1bits.PCFG = 0b1110;
  1959  003896  50C1               	movf	193,w,c	;volatile
  1960  003898  0BF0               	andlw	-16
  1961  00389A  090E               	iorlw	14
  1962  00389C  6EC1               	movwf	193,c	;volatile
  1963                           
  1964                           ;Temperatura.c: 25:     ADCON1bits.VCFG = 0b00;
  1965  00389E  0ECF               	movlw	-49
  1966  0038A0  16C1               	andwf	193,f,c	;volatile
  1967                           
  1968                           ;Temperatura.c: 26:     ADCON0bits.CHS = 0b0000;
  1969  0038A2  0EC3               	movlw	-61
  1970  0038A4  16C2               	andwf	194,f,c	;volatile
  1971                           
  1972                           ;Temperatura.c: 27:     ADCON2bits.ACQT = 0b010;
  1973  0038A6  50C0               	movf	192,w,c	;volatile
  1974  0038A8  0BC7               	andlw	-57
  1975  0038AA  0910               	iorlw	16
  1976  0038AC  6EC0               	movwf	192,c	;volatile
  1977                           
  1978                           ;Temperatura.c: 28:     ADCON2bits.ADCS = 0b001;
  1979  0038AE  50C0               	movf	192,w,c	;volatile
  1980  0038B0  0BF8               	andlw	-8
  1981  0038B2  0901               	iorlw	1
  1982  0038B4  6EC0               	movwf	192,c	;volatile
  1983  0038B6                     
  1984                           ;Temperatura.c: 29:     ADCON2bits.ADFM = 1;
  1985  0038B6  8EC0               	bsf	192,7,c	;volatile
  1986  0038B8                     
  1987                           ;Temperatura.c: 30:     ADCON0bits.ADON = 1;
  1988  0038B8  80C2               	bsf	194,0,c	;volatile
  1989  0038BA                     
  1990                           ;Temperatura.c: 45:         ADCON0bits.GO_DONE = 1;
  1991  0038BA  82C2               	bsf	194,1,c	;volatile
  1992  0038BC                     l144:
  1993  0038BC  B2C2               	btfsc	194,1,c	;volatile
  1994  0038BE  EF63  F01C         	goto	u7011
  1995  0038C2  EF65  F01C         	goto	u7010
  1996  0038C6                     u7011:
  1997  0038C6  EF5E  F01C         	goto	l144
  1998  0038CA                     u7010:
  1999  0038CA                     
  2000                           ;Temperatura.c: 47:         result = ADRESH;
  2001  0038CA  CFC4 F06A          	movff	4036,ReadADC@result	;volatile
  2002  0038CE  0100               	movlb	0	; () banked
  2003  0038D0  6B6B               	clrf	(ReadADC@result+1)& (0+255),b
  2004  0038D2                     
  2005                           ; BSR set to: 0
  2006                           ;Temperatura.c: 48:         result = (result << 8) + ADRESL;
  2007  0038D2  516A               	movf	ReadADC@result& (0+255),w,b
  2008  0038D4  6F68               	movwf	??_ReadADC& (0+255),b
  2009  0038D6  50C3               	movf	195,w,c	;volatile
  2010  0038D8  6F6A               	movwf	ReadADC@result& (0+255),b
  2011  0038DA  C068  F06B         	movff	??_ReadADC,ReadADC@result+1
  2012  0038DE                     
  2013                           ; BSR set to: 0
  2014                           ;Temperatura.c: 49:         result = ((result*500.0)/1023.0)-49.5;
  2015  0038DE  0E00               	movlw	0
  2016  0038E0  6E4C               	movwf	___fladd@a^0,c
  2017  0038E2  0E00               	movlw	0
  2018  0038E4  6E4D               	movwf	(___fladd@a+1)^0,c
  2019  0038E6  0E46               	movlw	70
  2020  0038E8  6E4E               	movwf	(___fladd@a+2)^0,c
  2021  0038EA  0EC2               	movlw	194
  2022  0038EC  6E4F               	movwf	(___fladd@a+3)^0,c
  2023  0038EE  0E00               	movlw	0
  2024  0038F0  6E33               	movwf	___fldiv@a^0,c
  2025  0038F2  0EC0               	movlw	192
  2026  0038F4  6E34               	movwf	(___fldiv@a+1)^0,c
  2027  0038F6  0E7F               	movlw	127
  2028  0038F8  6E35               	movwf	(___fldiv@a+2)^0,c
  2029  0038FA  0E44               	movlw	68
  2030  0038FC  6E36               	movwf	(___fldiv@a+3)^0,c
  2031  0038FE  0E00               	movlw	0
  2032  003900  6E1A               	movwf	___flmul@a^0,c
  2033  003902  0E00               	movlw	0
  2034  003904  6E1B               	movwf	(___flmul@a+1)^0,c
  2035  003906  0EFA               	movlw	250
  2036  003908  6E1C               	movwf	(___flmul@a+2)^0,c
  2037  00390A  0E43               	movlw	67
  2038  00390C  6E1D               	movwf	(___flmul@a+3)^0,c
  2039  00390E  C06A  F008         	movff	ReadADC@result,___xxtofl@val
  2040  003912  C06B  F009         	movff	ReadADC@result+1,___xxtofl@val+1
  2041  003916  6A0A               	clrf	(___xxtofl@val+2)^0,c
  2042  003918  6A0B               	clrf	(___xxtofl@val+3)^0,c
  2043  00391A  0E00               	movlw	0
  2044  00391C  EC9A  F019         	call	___xxtofl
  2045  003920  C008  F016         	movff	?___xxtofl,___flmul@b
  2046  003924  C009  F017         	movff	?___xxtofl+1,___flmul@b+1
  2047  003928  C00A  F018         	movff	?___xxtofl+2,___flmul@b+2
  2048  00392C  C00B  F019         	movff	?___xxtofl+3,___flmul@b+3
  2049  003930  ECBF  F00F         	call	___flmul	;wreg free
  2050  003934  C016  F02F         	movff	?___flmul,___fldiv@b
  2051  003938  C017  F030         	movff	?___flmul+1,___fldiv@b+1
  2052  00393C  C018  F031         	movff	?___flmul+2,___fldiv@b+2
  2053  003940  C019  F032         	movff	?___flmul+3,___fldiv@b+3
  2054  003944  ECAA  F013         	call	___fldiv	;wreg free
  2055  003948  C02F  F048         	movff	?___fldiv,___fladd@b
  2056  00394C  C030  F049         	movff	?___fldiv+1,___fladd@b+1
  2057  003950  C031  F04A         	movff	?___fldiv+2,___fladd@b+2
  2058  003954  C032  F04B         	movff	?___fldiv+3,___fladd@b+3
  2059  003958  EC5F  F00D         	call	___fladd	;wreg free
  2060  00395C  C048  F058         	movff	?___fladd,___fltol@f1
  2061  003960  C049  F059         	movff	?___fladd+1,___fltol@f1+1
  2062  003964  C04A  F05A         	movff	?___fladd+2,___fltol@f1+2
  2063  003968  C04B  F05B         	movff	?___fladd+3,___fltol@f1+3
  2064  00396C  EC3C  F01B         	call	___fltol	;wreg free
  2065  003970  C058  F06A         	movff	?___fltol,ReadADC@result
  2066  003974  C059  F06B         	movff	?___fltol+1,ReadADC@result+1
  2067  003978                     
  2068                           ;Temperatura.c: 51:         return result;
  2069  003978  C06A  F066         	movff	ReadADC@result,?_ReadADC
  2070  00397C  C06B  F067         	movff	ReadADC@result+1,?_ReadADC+1
  2071  003980  0012               	return		;funcret
  2072  003982                     __end_of_ReadADC:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function ___xxtofl *****************
  2076 ;; Defined at:
  2077 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  sign            1    wreg     unsigned char 
  2080 ;;  val             4    7[COMRAM] long 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  sign            1   15[COMRAM] unsigned char 
  2083 ;;  arg             4   17[COMRAM] unsigned long 
  2084 ;;  exp             1   16[COMRAM] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  4    7[COMRAM] unsigned char 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2094 ;;      Params:         4       0       0       0       0       0       0       0       0
  2095 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2096 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2097 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2098 ;;Total ram usage:       14 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; Hardware stack levels required when called: 2
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;;		_ReadADC
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text3
  2110  003334                     __ptext3:
  2111                           	callstack 0
  2112  003334                     ___xxtofl:
  2113                           	callstack 28
  2114                           
  2115                           ;incstack = 0
  2116                           ;___xxtofl@sign stored from wreg
  2117  003334  6E10               	movwf	___xxtofl@sign^0,c
  2118  003336  5010               	movf	___xxtofl@sign^0,w,c
  2119  003338  B4D8               	btfsc	status,2,c
  2120  00333A  EFA1  F019         	goto	u5841
  2121  00333E  EFA3  F019         	goto	u5840
  2122  003342                     u5841:
  2123  003342  EFC5  F019         	goto	l1068
  2124  003346                     u5840:
  2125  003346  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  2126  003348  EFAA  F019         	goto	u5850
  2127  00334C  EFA8  F019         	goto	u5851
  2128  003350                     u5851:
  2129  003350  EFC5  F019         	goto	l1068
  2130  003354                     u5850:
  2131  003354  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  2132  003358  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  2133  00335C  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  2134  003360  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  2135  003364  1E0C               	comf	??___xxtofl^0,f,c
  2136  003366  1E0D               	comf	(??___xxtofl+1)^0,f,c
  2137  003368  1E0E               	comf	(??___xxtofl+2)^0,f,c
  2138  00336A  1E0F               	comf	(??___xxtofl+3)^0,f,c
  2139  00336C  2A0C               	incf	??___xxtofl^0,f,c
  2140  00336E  0E00               	movlw	0
  2141  003370  220D               	addwfc	(??___xxtofl+1)^0,f,c
  2142  003372  220E               	addwfc	(??___xxtofl+2)^0,f,c
  2143  003374  220F               	addwfc	(??___xxtofl+3)^0,f,c
  2144  003376  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  2145  00337A  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  2146  00337E  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  2147  003382  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  2148  003386  EFCD  F019         	goto	l5109
  2149  00338A                     l1068:
  2150  00338A  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  2151  00338E  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2152  003392  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2153  003396  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2154  00339A                     l5109:
  2155  00339A  5008               	movf	___xxtofl@val^0,w,c
  2156  00339C  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  2157  00339E  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  2158  0033A0  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  2159  0033A2  A4D8               	btfss	status,2,c
  2160  0033A4  EFD6  F019         	goto	u5861
  2161  0033A8  EFD8  F019         	goto	u5860
  2162  0033AC                     u5861:
  2163  0033AC  EFE2  F019         	goto	l5115
  2164  0033B0                     u5860:
  2165  0033B0  0E00               	movlw	0
  2166  0033B2  6E08               	movwf	?___xxtofl^0,c
  2167  0033B4  0E00               	movlw	0
  2168  0033B6  6E09               	movwf	(?___xxtofl+1)^0,c
  2169  0033B8  0E00               	movlw	0
  2170  0033BA  6E0A               	movwf	(?___xxtofl+2)^0,c
  2171  0033BC  0E00               	movlw	0
  2172  0033BE  6E0B               	movwf	(?___xxtofl+3)^0,c
  2173  0033C0  EF73  F01A         	goto	l1071
  2174  0033C4                     l5115:
  2175  0033C4  0E96               	movlw	150
  2176  0033C6  6E11               	movwf	___xxtofl@exp^0,c
  2177  0033C8  EFEC  F019         	goto	l5119
  2178  0033CC                     l5117:
  2179  0033CC  2A11               	incf	___xxtofl@exp^0,f,c
  2180  0033CE  90D8               	bcf	status,0,c
  2181  0033D0  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2182  0033D2  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2183  0033D4  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2184  0033D6  3212               	rrcf	___xxtofl@arg^0,f,c
  2185  0033D8                     l5119:
  2186  0033D8  0E00               	movlw	0
  2187  0033DA  1412               	andwf	___xxtofl@arg^0,w,c
  2188  0033DC  6E0C               	movwf	??___xxtofl^0,c
  2189  0033DE  0E00               	movlw	0
  2190  0033E0  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2191  0033E2  6E0D               	movwf	(??___xxtofl+1)^0,c
  2192  0033E4  0E00               	movlw	0
  2193  0033E6  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2194  0033E8  6E0E               	movwf	(??___xxtofl+2)^0,c
  2195  0033EA  0EFE               	movlw	254
  2196  0033EC  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2197  0033EE  6E0F               	movwf	(??___xxtofl+3)^0,c
  2198  0033F0  500C               	movf	??___xxtofl^0,w,c
  2199  0033F2  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2200  0033F4  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2201  0033F6  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2202  0033F8  A4D8               	btfss	status,2,c
  2203  0033FA  EF01  F01A         	goto	u5871
  2204  0033FE  EF03  F01A         	goto	u5870
  2205  003402                     u5871:
  2206  003402  EFE6  F019         	goto	l5117
  2207  003406                     u5870:
  2208  003406  EF11  F01A         	goto	l1075
  2209  00340A                     l5121:
  2210  00340A  2A11               	incf	___xxtofl@exp^0,f,c
  2211  00340C  0E01               	movlw	1
  2212  00340E  2612               	addwf	___xxtofl@arg^0,f,c
  2213  003410  0E00               	movlw	0
  2214  003412  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  2215  003414  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  2216  003416  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  2217  003418  90D8               	bcf	status,0,c
  2218  00341A  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2219  00341C  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2220  00341E  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2221  003420  3212               	rrcf	___xxtofl@arg^0,f,c
  2222  003422                     l1075:
  2223  003422  0E00               	movlw	0
  2224  003424  1412               	andwf	___xxtofl@arg^0,w,c
  2225  003426  6E0C               	movwf	??___xxtofl^0,c
  2226  003428  0E00               	movlw	0
  2227  00342A  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2228  00342C  6E0D               	movwf	(??___xxtofl+1)^0,c
  2229  00342E  0E00               	movlw	0
  2230  003430  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2231  003432  6E0E               	movwf	(??___xxtofl+2)^0,c
  2232  003434  0EFF               	movlw	255
  2233  003436  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2234  003438  6E0F               	movwf	(??___xxtofl+3)^0,c
  2235  00343A  500C               	movf	??___xxtofl^0,w,c
  2236  00343C  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2237  00343E  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2238  003440  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2239  003442  A4D8               	btfss	status,2,c
  2240  003444  EF26  F01A         	goto	u5881
  2241  003448  EF28  F01A         	goto	u5880
  2242  00344C                     u5881:
  2243  00344C  EF05  F01A         	goto	l5121
  2244  003450                     u5880:
  2245  003450  EF30  F01A         	goto	l5129
  2246  003454                     l5127:
  2247  003454  0611               	decf	___xxtofl@exp^0,f,c
  2248  003456  90D8               	bcf	status,0,c
  2249  003458  3612               	rlcf	___xxtofl@arg^0,f,c
  2250  00345A  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  2251  00345C  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  2252  00345E  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  2253  003460                     l5129:
  2254  003460  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  2255  003462  EF35  F01A         	goto	u5891
  2256  003466  EF37  F01A         	goto	u5890
  2257  00346A                     u5891:
  2258  00346A  EF3F  F01A         	goto	l1082
  2259  00346E                     u5890:
  2260  00346E  0E02               	movlw	2
  2261  003470  6011               	cpfslt	___xxtofl@exp^0,c
  2262  003472  EF3D  F01A         	goto	u5901
  2263  003476  EF3F  F01A         	goto	u5900
  2264  00347A                     u5901:
  2265  00347A  EF2A  F01A         	goto	l5127
  2266  00347E                     u5900:
  2267  00347E                     l1082:
  2268  00347E  B011               	btfsc	___xxtofl@exp^0,0,c
  2269  003480  EF44  F01A         	goto	u5911
  2270  003484  EF46  F01A         	goto	u5910
  2271  003488                     u5911:
  2272  003488  EF47  F01A         	goto	l5135
  2273  00348C                     u5910:
  2274  00348C  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  2275  00348E                     l5135:
  2276  00348E  90D8               	bcf	status,0,c
  2277  003490  3211               	rrcf	___xxtofl@exp^0,f,c
  2278  003492  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  2279  003496  6A0D               	clrf	(??___xxtofl+1)^0,c
  2280  003498  6A0E               	clrf	(??___xxtofl+2)^0,c
  2281  00349A  6A0F               	clrf	(??___xxtofl+3)^0,c
  2282  00349C  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  2283  0034A0  6A0E               	clrf	(??___xxtofl+2)^0,c
  2284  0034A2  6A0D               	clrf	(??___xxtofl+1)^0,c
  2285  0034A4  6A0C               	clrf	??___xxtofl^0,c
  2286  0034A6  500C               	movf	??___xxtofl^0,w,c
  2287  0034A8  1212               	iorwf	___xxtofl@arg^0,f,c
  2288  0034AA  500D               	movf	(??___xxtofl+1)^0,w,c
  2289  0034AC  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  2290  0034AE  500E               	movf	(??___xxtofl+2)^0,w,c
  2291  0034B0  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  2292  0034B2  500F               	movf	(??___xxtofl+3)^0,w,c
  2293  0034B4  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  2294  0034B6  5010               	movf	___xxtofl@sign^0,w,c
  2295  0034B8  B4D8               	btfsc	status,2,c
  2296  0034BA  EF61  F01A         	goto	u5921
  2297  0034BE  EF63  F01A         	goto	u5920
  2298  0034C2                     u5921:
  2299  0034C2  EF6B  F01A         	goto	l5145
  2300  0034C6                     u5920:
  2301  0034C6  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  2302  0034C8  EF6A  F01A         	goto	u5930
  2303  0034CC  EF68  F01A         	goto	u5931
  2304  0034D0                     u5931:
  2305  0034D0  EF6B  F01A         	goto	l5145
  2306  0034D4                     u5930:
  2307  0034D4  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  2308  0034D6                     l5145:
  2309  0034D6  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  2310  0034DA  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  2311  0034DE  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  2312  0034E2  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  2313  0034E6                     l1071:
  2314  0034E6  0012               	return		;funcret
  2315  0034E8                     __end_of___xxtofl:
  2316                           	callstack 0
  2317                           
  2318 ;; *************** function _RTC_Calendario *****************
  2319 ;; Defined at:
  2320 ;;		line 85 in file "reloj.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  hours          10   57[BANK1 ] unsigned char [10]
  2325 ;;  mins           10   47[BANK1 ] unsigned char [10]
  2326 ;;  secs           10   37[BANK1 ] unsigned char [10]
  2327 ;;  year           10   27[BANK1 ] unsigned char [10]
  2328 ;;  month          10   17[BANK1 ] unsigned char [10]
  2329 ;;  date           10    7[BANK1 ] unsigned char [10]
  2330 ;;  days            7    0[BANK1 ] unsigned char [7]
  2331 ;;  AM_PM           1   68[BANK1 ] unsigned char 
  2332 ;;  Clock_type      1   67[BANK1 ] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0
  2343 ;;      Locals:         0       0      69       0       0       0       0       0       0
  2344 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2345 ;;      Totals:         0       3      69       0       0       0       0       0       0
  2346 ;;Total ram usage:       72 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 10
  2349 ;; This function calls:
  2350 ;;		_I2C_Init
  2351 ;;		_I2C_Stop
  2352 ;;		_LCD_Clear
  2353 ;;		_LCD_Init
  2354 ;;		_LCD_String
  2355 ;;		_LCD_String_xy
  2356 ;;		_MSdelay
  2357 ;;		_RTC_Read_Calendar
  2358 ;;		_RTC_Read_Clock
  2359 ;;		_sprintf
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text4
  2366  002AEE                     __ptext4:
  2367                           	callstack 0
  2368  002AEE                     _RTC_Calendario:
  2369                           	callstack 20
  2370  002AEE                     
  2371                           ;reloj.c: 88:     char secs[10],mins[10],hours[10];;reloj.c: 89:     char date[10],month
      +                          [10],year[10];;reloj.c: 90:     char Clock_type = 0x06;
  2372  002AEE  0E06               	movlw	6
  2373  002AF0  0101               	movlb	1	; () banked
  2374  002AF2  6FD9               	movwf	RTC_Calendario@Clock_type& (0+255),b
  2375                           
  2376                           ;reloj.c: 91:     char AM_PM = 0x05;
  2377  002AF4  0E05               	movlw	5
  2378  002AF6  6FDA               	movwf	RTC_Calendario@AM_PM& (0+255),b
  2379  002AF8                     
  2380                           ; BSR set to: 1
  2381                           ;reloj.c: 92:     char days[7] = {'S','M','T','W','t','F','s'};
  2382  002AF8  EE21  F0DB         	lfsr	2,RTC_Calendario@F3531
  2383  002AFC  EE11  F096         	lfsr	1,RTC_Calendario@days
  2384  002B00  0E06               	movlw	6
  2385  002B02                     u7021:
  2386  002B02  CFDB FFE3          	movff	plusw2,plusw1
  2387  002B06  06E8               	decf	wreg,f,c
  2388  002B08  E2FC               	bc	u7021
  2389  002B0A                     
  2390                           ; BSR set to: 1
  2391                           ;reloj.c: 93:     OSCCON=0x72;
  2392  002B0A  0E72               	movlw	114
  2393  002B0C  6ED3               	movwf	211,c	;volatile
  2394  002B0E                     
  2395                           ; BSR set to: 1
  2396                           ;reloj.c: 95:     I2C_Init();
  2397  002B0E  ECE8  F023         	call	_I2C_Init	;wreg free
  2398  002B12                     
  2399                           ;reloj.c: 96:     LCD_Init();
  2400  002B12  EC6E  F023         	call	_LCD_Init	;wreg free
  2401  002B16                     
  2402                           ;reloj.c: 97:     LCD_Clear();
  2403  002B16  EC13  F024         	call	_LCD_Clear	;wreg free
  2404  002B1A                     
  2405                           ;reloj.c: 98:     MSdelay(10);
  2406  002B1A  0E00               	movlw	0
  2407  002B1C  6E03               	movwf	(MSdelay@val+1)^0,c
  2408  002B1E  0E0A               	movlw	10
  2409  002B20  6E02               	movwf	MSdelay@val^0,c
  2410  002B22  ECB2  F021         	call	_MSdelay	;wreg free
  2411  002B26                     l6035:
  2412                           
  2413                           ;reloj.c: 100:     {;reloj.c: 101:         RTC_Read_Clock(0);
  2414  002B26  0E00               	movlw	0
  2415  002B28  EC43  F022         	call	_RTC_Read_Clock
  2416  002B2C                     
  2417                           ;reloj.c: 102:         if(hour & (1<<Clock_type)){
  2418  002B2C  C1D9  F0E4         	movff	RTC_Calendario@Clock_type,??_RTC_Calendario
  2419  002B30  0E01               	movlw	1
  2420  002B32  0100               	movlb	0	; () banked
  2421  002B34  6FE5               	movwf	(??_RTC_Calendario+1)& (0+255),b
  2422  002B36  0E00               	movlw	0
  2423  002B38  6FE6               	movwf	(??_RTC_Calendario+2)& (0+255),b
  2424  002B3A  2BE4               	incf	??_RTC_Calendario& (0+255),f,b
  2425  002B3C  EFA3  F015         	goto	u7034
  2426  002B40                     u7035:
  2427  002B40  90D8               	bcf	status,0,c
  2428  002B42  37E5               	rlcf	(??_RTC_Calendario+1)& (0+255),f,b
  2429  002B44  37E6               	rlcf	(??_RTC_Calendario+2)& (0+255),f,b
  2430  002B46                     u7034:
  2431  002B46  2FE4               	decfsz	??_RTC_Calendario& (0+255),f,b
  2432  002B48  EFA0  F015         	goto	u7035
  2433  002B4C  0101               	movlb	1	; () banked
  2434  002B4E  512C               	movf	_hour& (0+255),w,b
  2435  002B50  0100               	movlb	0	; () banked
  2436  002B52  17E5               	andwf	(??_RTC_Calendario+1)& (0+255),f,b
  2437  002B54  0101               	movlb	1	; () banked
  2438  002B56  512D               	movf	(_hour+1)& (0+255),w,b
  2439  002B58  0100               	movlb	0	; () banked
  2440  002B5A  17E6               	andwf	(??_RTC_Calendario+2)& (0+255),f,b
  2441  002B5C  51E5               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2442  002B5E  11E6               	iorwf	(??_RTC_Calendario+2)& (0+255),w,b
  2443  002B60  B4D8               	btfsc	status,2,c
  2444  002B62  EFB5  F015         	goto	u7041
  2445  002B66  EFB7  F015         	goto	u7040
  2446  002B6A                     u7041:
  2447  002B6A  EF34  F016         	goto	l6059
  2448  002B6E                     u7040:
  2449  002B6E                     
  2450                           ; BSR set to: 0
  2451                           ;reloj.c: 104:             if(hour & (1<<AM_PM)){
  2452  002B6E  C1DA  F0E4         	movff	RTC_Calendario@AM_PM,??_RTC_Calendario
  2453  002B72  0E01               	movlw	1
  2454  002B74  6FE5               	movwf	(??_RTC_Calendario+1)& (0+255),b
  2455  002B76  0E00               	movlw	0
  2456  002B78  6FE6               	movwf	(??_RTC_Calendario+2)& (0+255),b
  2457  002B7A  2BE4               	incf	??_RTC_Calendario& (0+255),f,b
  2458  002B7C  EFC3  F015         	goto	u7054
  2459  002B80                     u7055:
  2460  002B80  90D8               	bcf	status,0,c
  2461  002B82  37E5               	rlcf	(??_RTC_Calendario+1)& (0+255),f,b
  2462  002B84  37E6               	rlcf	(??_RTC_Calendario+2)& (0+255),f,b
  2463  002B86                     u7054:
  2464  002B86  2FE4               	decfsz	??_RTC_Calendario& (0+255),f,b
  2465  002B88  EFC0  F015         	goto	u7055
  2466  002B8C  0101               	movlb	1	; () banked
  2467  002B8E  512C               	movf	_hour& (0+255),w,b
  2468  002B90  0100               	movlb	0	; () banked
  2469  002B92  17E5               	andwf	(??_RTC_Calendario+1)& (0+255),f,b
  2470  002B94  0101               	movlb	1	; () banked
  2471  002B96  512D               	movf	(_hour+1)& (0+255),w,b
  2472  002B98  0100               	movlb	0	; () banked
  2473  002B9A  17E6               	andwf	(??_RTC_Calendario+2)& (0+255),f,b
  2474  002B9C  51E5               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2475  002B9E  11E6               	iorwf	(??_RTC_Calendario+2)& (0+255),w,b
  2476  002BA0  B4D8               	btfsc	status,2,c
  2477  002BA2  EFD5  F015         	goto	u7061
  2478  002BA6  EFD7  F015         	goto	u7060
  2479  002BAA                     u7061:
  2480  002BAA  EFE2  F015         	goto	l6043
  2481  002BAE                     u7060:
  2482  002BAE                     
  2483                           ; BSR set to: 0
  2484                           ;reloj.c: 105:                 LCD_String_xy(1,14,"PM");
  2485  002BAE  0E0E               	movlw	14
  2486  002BB0  6E0C               	movwf	LCD_String_xy@pos^0,c
  2487  002BB2  0E54               	movlw	low STR_5
  2488  002BB4  6E0D               	movwf	LCD_String_xy@msg^0,c
  2489  002BB6  0E08               	movlw	high STR_5
  2490  002BB8  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  2491  002BBA  0E01               	movlw	1
  2492  002BBC  EC88  F022         	call	_LCD_String_xy
  2493                           
  2494                           ;reloj.c: 106:             }
  2495  002BC0  EFEB  F015         	goto	l6045
  2496  002BC4                     l6043:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;reloj.c: 108:                 LCD_String_xy(1,14,"AM");
  2500  002BC4  0E0E               	movlw	14
  2501  002BC6  6E0C               	movwf	LCD_String_xy@pos^0,c
  2502  002BC8  0E51               	movlw	low STR_6
  2503  002BCA  6E0D               	movwf	LCD_String_xy@msg^0,c
  2504  002BCC  0E08               	movlw	high STR_6
  2505  002BCE  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  2506  002BD0  0E01               	movlw	1
  2507  002BD2  EC88  F022         	call	_LCD_String_xy
  2508  002BD6                     l6045:
  2509                           
  2510                           ;reloj.c: 111:             hour = hour & (0x1f);
  2511  002BD6  0E1F               	movlw	31
  2512  002BD8  0101               	movlb	1	; () banked
  2513  002BDA  152C               	andwf	_hour& (0+255),w,b
  2514  002BDC  6F2C               	movwf	_hour& (0+255),b
  2515  002BDE  6B2D               	clrf	(_hour+1)& (0+255),b
  2516  002BE0                     
  2517                           ; BSR set to: 1
  2518                           ;reloj.c: 112:             sprintf(secs,"%x ",sec);
  2519  002BE0  0EBB               	movlw	low RTC_Calendario@secs
  2520  002BE2  0100               	movlb	0	; () banked
  2521  002BE4  6FD4               	movwf	sprintf@s& (0+255),b
  2522  002BE6  0E01               	movlw	high RTC_Calendario@secs
  2523  002BE8  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  2524  002BEA  0E26               	movlw	low STR_7
  2525  002BEC  6FD6               	movwf	sprintf@fmt& (0+255),b
  2526  002BEE  0E08               	movlw	high STR_7
  2527  002BF0  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  2528  002BF2  C130  F0D8         	movff	_sec,?_sprintf+4
  2529  002BF6  C131  F0D9         	movff	_sec+1,?_sprintf+5
  2530  002BFA  EC14  F021         	call	_sprintf	;wreg free
  2531  002BFE                     
  2532                           ;reloj.c: 113:             sprintf(mins,"%x:",min);
  2533  002BFE  0EC5               	movlw	low RTC_Calendario@mins
  2534  002C00  0100               	movlb	0	; () banked
  2535  002C02  6FD4               	movwf	sprintf@s& (0+255),b
  2536  002C04  0E01               	movlw	high RTC_Calendario@mins
  2537  002C06  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  2538  002C08  0E2E               	movlw	low STR_8
  2539  002C0A  6FD6               	movwf	sprintf@fmt& (0+255),b
  2540  002C0C  0E08               	movlw	high STR_8
  2541  002C0E  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  2542  002C10  C12E  F0D8         	movff	_min,?_sprintf+4
  2543  002C14  C12F  F0D9         	movff	_min+1,?_sprintf+5
  2544  002C18  EC14  F021         	call	_sprintf	;wreg free
  2545  002C1C                     
  2546                           ;reloj.c: 114:             sprintf(hours,"%x:",hour);
  2547  002C1C  0ECF               	movlw	low RTC_Calendario@hours
  2548  002C1E  0100               	movlb	0	; () banked
  2549  002C20  6FD4               	movwf	sprintf@s& (0+255),b
  2550  002C22  0E01               	movlw	high RTC_Calendario@hours
  2551  002C24  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  2552  002C26  0E2E               	movlw	low STR_8
  2553  002C28  6FD6               	movwf	sprintf@fmt& (0+255),b
  2554  002C2A  0E08               	movlw	high STR_8
  2555  002C2C  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  2556  002C2E  C12C  F0D8         	movff	_hour,?_sprintf+4
  2557  002C32  C12D  F0D9         	movff	_hour+1,?_sprintf+5
  2558  002C36  EC14  F021         	call	_sprintf	;wreg free
  2559  002C3A                     
  2560                           ;reloj.c: 115:             LCD_String_xy(0,4,hours);
  2561  002C3A  0E04               	movlw	4
  2562  002C3C  6E0C               	movwf	LCD_String_xy@pos^0,c
  2563  002C3E  0ECF               	movlw	low RTC_Calendario@hours
  2564  002C40  6E0D               	movwf	LCD_String_xy@msg^0,c
  2565  002C42  0E01               	movlw	high RTC_Calendario@hours
  2566  002C44  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  2567  002C46  0E00               	movlw	0
  2568  002C48  EC88  F022         	call	_LCD_String_xy
  2569  002C4C                     l6055:
  2570                           
  2571                           ;reloj.c: 116:             LCD_String(mins);
  2572  002C4C  0EC5               	movlw	low RTC_Calendario@mins
  2573  002C4E  6E0A               	movwf	LCD_String@msg^0,c
  2574  002C50  0E01               	movlw	high RTC_Calendario@mins
  2575  002C52  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2576  002C54  EC8A  F020         	call	_LCD_String	;wreg free
  2577  002C58                     
  2578                           ;reloj.c: 117:             LCD_String(secs);
  2579  002C58  0EBB               	movlw	low RTC_Calendario@secs
  2580  002C5A  6E0A               	movwf	LCD_String@msg^0,c
  2581  002C5C  0E01               	movlw	high RTC_Calendario@secs
  2582  002C5E  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2583  002C60  EC8A  F020         	call	_LCD_String	;wreg free
  2584                           
  2585                           ;reloj.c: 118:         }
  2586  002C64  EF71  F016         	goto	l6073
  2587  002C68                     l6059:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;reloj.c: 121:             hour = hour & (0x3f);
  2591  002C68  0E3F               	movlw	63
  2592  002C6A  0101               	movlb	1	; () banked
  2593  002C6C  152C               	andwf	_hour& (0+255),w,b
  2594  002C6E  6F2C               	movwf	_hour& (0+255),b
  2595  002C70  6B2D               	clrf	(_hour+1)& (0+255),b
  2596  002C72                     
  2597                           ; BSR set to: 1
  2598                           ;reloj.c: 122:             sprintf(secs,"%x ",sec);
  2599  002C72  0EBB               	movlw	low RTC_Calendario@secs
  2600  002C74  0100               	movlb	0	; () banked
  2601  002C76  6FD4               	movwf	sprintf@s& (0+255),b
  2602  002C78  0E01               	movlw	high RTC_Calendario@secs
  2603  002C7A  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  2604  002C7C  0E26               	movlw	low STR_7
  2605  002C7E  6FD6               	movwf	sprintf@fmt& (0+255),b
  2606  002C80  0E08               	movlw	high STR_7
  2607  002C82  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  2608  002C84  C130  F0D8         	movff	_sec,?_sprintf+4
  2609  002C88  C131  F0D9         	movff	_sec+1,?_sprintf+5
  2610  002C8C  EC14  F021         	call	_sprintf	;wreg free
  2611  002C90                     
  2612                           ;reloj.c: 123:             sprintf(mins,"%x:",min);
  2613  002C90  0EC5               	movlw	low RTC_Calendario@mins
  2614  002C92  0100               	movlb	0	; () banked
  2615  002C94  6FD4               	movwf	sprintf@s& (0+255),b
  2616  002C96  0E01               	movlw	high RTC_Calendario@mins
  2617  002C98  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  2618  002C9A  0E2E               	movlw	low STR_8
  2619  002C9C  6FD6               	movwf	sprintf@fmt& (0+255),b
  2620  002C9E  0E08               	movlw	high STR_8
  2621  002CA0  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  2622  002CA2  C12E  F0D8         	movff	_min,?_sprintf+4
  2623  002CA6  C12F  F0D9         	movff	_min+1,?_sprintf+5
  2624  002CAA  EC14  F021         	call	_sprintf	;wreg free
  2625  002CAE                     
  2626                           ;reloj.c: 124:             sprintf(hours,"%x:",hour);
  2627  002CAE  0ECF               	movlw	low RTC_Calendario@hours
  2628  002CB0  0100               	movlb	0	; () banked
  2629  002CB2  6FD4               	movwf	sprintf@s& (0+255),b
  2630  002CB4  0E01               	movlw	high RTC_Calendario@hours
  2631  002CB6  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  2632  002CB8  0E2E               	movlw	low STR_8
  2633  002CBA  6FD6               	movwf	sprintf@fmt& (0+255),b
  2634  002CBC  0E08               	movlw	high STR_8
  2635  002CBE  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  2636  002CC0  C12C  F0D8         	movff	_hour,?_sprintf+4
  2637  002CC4  C12D  F0D9         	movff	_hour+1,?_sprintf+5
  2638  002CC8  EC14  F021         	call	_sprintf	;wreg free
  2639  002CCC                     
  2640                           ;reloj.c: 125:             LCD_String_xy(0,4,hours);
  2641  002CCC  0E04               	movlw	4
  2642  002CCE  6E0C               	movwf	LCD_String_xy@pos^0,c
  2643  002CD0  0ECF               	movlw	low RTC_Calendario@hours
  2644  002CD2  6E0D               	movwf	LCD_String_xy@msg^0,c
  2645  002CD4  0E01               	movlw	high RTC_Calendario@hours
  2646  002CD6  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  2647  002CD8  0E00               	movlw	0
  2648  002CDA  EC88  F022         	call	_LCD_String_xy
  2649  002CDE  EF26  F016         	goto	l6055
  2650  002CE2                     l6073:
  2651                           
  2652                           ;reloj.c: 130:         RTC_Read_Calendar(3);
  2653  002CE2  0E03               	movlw	3
  2654  002CE4  ECE7  F020         	call	_RTC_Read_Calendar
  2655  002CE8                     
  2656                           ;reloj.c: 131:         I2C_Stop();
  2657  002CE8  ECF5  F023         	call	_I2C_Stop	;wreg free
  2658  002CEC                     
  2659                           ;reloj.c: 132:         sprintf(date,"%x-",Date);
  2660  002CEC  0E9D               	movlw	low RTC_Calendario@date
  2661  002CEE  0100               	movlb	0	; () banked
  2662  002CF0  6FD4               	movwf	sprintf@s& (0+255),b
  2663  002CF2  0E01               	movlw	high RTC_Calendario@date
  2664  002CF4  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  2665  002CF6  0E2A               	movlw	low STR_13
  2666  002CF8  6FD6               	movwf	sprintf@fmt& (0+255),b
  2667  002CFA  0E08               	movlw	high STR_13
  2668  002CFC  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  2669  002CFE  C128  F0D8         	movff	_Date,?_sprintf+4
  2670  002D02  C129  F0D9         	movff	_Date+1,?_sprintf+5
  2671  002D06  EC14  F021         	call	_sprintf	;wreg free
  2672  002D0A                     
  2673                           ;reloj.c: 133:         sprintf(month,"%x-",Month);
  2674  002D0A  0EA7               	movlw	low RTC_Calendario@month
  2675  002D0C  0100               	movlb	0	; () banked
  2676  002D0E  6FD4               	movwf	sprintf@s& (0+255),b
  2677  002D10  0E01               	movlw	high RTC_Calendario@month
  2678  002D12  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  2679  002D14  0E2A               	movlw	low STR_13
  2680  002D16  6FD6               	movwf	sprintf@fmt& (0+255),b
  2681  002D18  0E08               	movlw	high STR_13
  2682  002D1A  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  2683  002D1C  C126  F0D8         	movff	_Month,?_sprintf+4
  2684  002D20  C127  F0D9         	movff	_Month+1,?_sprintf+5
  2685  002D24  EC14  F021         	call	_sprintf	;wreg free
  2686  002D28                     
  2687                           ;reloj.c: 134:         sprintf(year,"%x ",Year);
  2688  002D28  0EB1               	movlw	low RTC_Calendario@year
  2689  002D2A  0100               	movlb	0	; () banked
  2690  002D2C  6FD4               	movwf	sprintf@s& (0+255),b
  2691  002D2E  0E01               	movlw	high RTC_Calendario@year
  2692  002D30  6FD5               	movwf	(sprintf@s+1)& (0+255),b
  2693  002D32  0E26               	movlw	low STR_7
  2694  002D34  6FD6               	movwf	sprintf@fmt& (0+255),b
  2695  002D36  0E08               	movlw	high STR_7
  2696  002D38  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
  2697  002D3A  C124  F0D8         	movff	_Year,?_sprintf+4
  2698  002D3E  C125  F0D9         	movff	_Year+1,?_sprintf+5
  2699  002D42  EC14  F021         	call	_sprintf	;wreg free
  2700  002D46                     
  2701                           ;reloj.c: 135:         LCD_String_xy(2,2,date);
  2702  002D46  0E02               	movlw	2
  2703  002D48  6E0C               	movwf	LCD_String_xy@pos^0,c
  2704  002D4A  0E9D               	movlw	low RTC_Calendario@date
  2705  002D4C  6E0D               	movwf	LCD_String_xy@msg^0,c
  2706  002D4E  0E01               	movlw	high RTC_Calendario@date
  2707  002D50  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  2708  002D52  0E02               	movlw	2
  2709  002D54  EC88  F022         	call	_LCD_String_xy
  2710  002D58                     
  2711                           ;reloj.c: 136:         LCD_String(month);
  2712  002D58  0EA7               	movlw	low RTC_Calendario@month
  2713  002D5A  6E0A               	movwf	LCD_String@msg^0,c
  2714  002D5C  0E01               	movlw	high RTC_Calendario@month
  2715  002D5E  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2716  002D60  EC8A  F020         	call	_LCD_String	;wreg free
  2717  002D64                     
  2718                           ;reloj.c: 137:         LCD_String(year);
  2719  002D64  0EB1               	movlw	low RTC_Calendario@year
  2720  002D66  6E0A               	movwf	LCD_String@msg^0,c
  2721  002D68  0E01               	movlw	high RTC_Calendario@year
  2722  002D6A  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2723  002D6C  EC8A  F020         	call	_LCD_String	;wreg free
  2724                           
  2725                           ;reloj.c: 140:         switch(days[Day])
  2726  002D70  EFF2  F016         	goto	l6133
  2727  002D74                     l6089:
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;reloj.c: 143:                         LCD_String("Sun");
  2731  002D74  0E42               	movlw	low STR_16
  2732  002D76  6E0A               	movwf	LCD_String@msg^0,c
  2733  002D78  0E08               	movlw	high STR_16
  2734  002D7A  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2735  002D7C  EC8A  F020         	call	_LCD_String	;wreg free
  2736  002D80  EF23  F017         	goto	l288
  2737  002D84                     l6095:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;reloj.c: 147:                         LCD_String("Mon");
  2741  002D84  0E3E               	movlw	low STR_17
  2742  002D86  6E0A               	movwf	LCD_String@msg^0,c
  2743  002D88  0E08               	movlw	high STR_17
  2744  002D8A  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2745  002D8C  EC8A  F020         	call	_LCD_String	;wreg free
  2746  002D90  EF23  F017         	goto	l288
  2747  002D94                     l6101:
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;reloj.c: 151:                         LCD_String("Tue");
  2751  002D94  0E36               	movlw	low STR_18
  2752  002D96  6E0A               	movwf	LCD_String@msg^0,c
  2753  002D98  0E08               	movlw	high STR_18
  2754  002D9A  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2755  002D9C  EC8A  F020         	call	_LCD_String	;wreg free
  2756  002DA0  EF23  F017         	goto	l288
  2757  002DA4                     l6107:
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;reloj.c: 155:                         LCD_String("Wed");
  2761  002DA4  0E32               	movlw	low STR_19
  2762  002DA6  6E0A               	movwf	LCD_String@msg^0,c
  2763  002DA8  0E08               	movlw	high STR_19
  2764  002DAA  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2765  002DAC  EC8A  F020         	call	_LCD_String	;wreg free
  2766  002DB0  EF23  F017         	goto	l288
  2767  002DB4                     l6113:
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;reloj.c: 159:                         LCD_String("Thu");
  2771  002DB4  0E4A               	movlw	low STR_20
  2772  002DB6  6E0A               	movwf	LCD_String@msg^0,c
  2773  002DB8  0E08               	movlw	high STR_20
  2774  002DBA  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2775  002DBC  EC8A  F020         	call	_LCD_String	;wreg free
  2776  002DC0  EF23  F017         	goto	l288
  2777  002DC4                     l6119:
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;reloj.c: 163:                         LCD_String("Fri");
  2781  002DC4  0E3A               	movlw	low STR_21
  2782  002DC6  6E0A               	movwf	LCD_String@msg^0,c
  2783  002DC8  0E08               	movlw	high STR_21
  2784  002DCA  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2785  002DCC  EC8A  F020         	call	_LCD_String	;wreg free
  2786  002DD0  EF23  F017         	goto	l288
  2787  002DD4                     l6125:
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;reloj.c: 167:                         LCD_String("Sat");
  2791  002DD4  0E46               	movlw	low STR_22
  2792  002DD6  6E0A               	movwf	LCD_String@msg^0,c
  2793  002DD8  0E08               	movlw	high STR_22
  2794  002DDA  6E0B               	movwf	(LCD_String@msg+1)^0,c
  2795  002DDC  EC8A  F020         	call	_LCD_String	;wreg free
  2796  002DE0  EF23  F017         	goto	l288
  2797  002DE4                     l6133:
  2798  002DE4  0E96               	movlw	low RTC_Calendario@days
  2799  002DE6  0101               	movlb	1	; () banked
  2800  002DE8  252A               	addwf	_Day& (0+255),w,b
  2801  002DEA  6ED9               	movwf	fsr2l,c
  2802  002DEC  0E01               	movlw	high RTC_Calendario@days
  2803  002DEE  212B               	addwfc	(_Day+1)& (0+255),w,b
  2804  002DF0  6EDA               	movwf	fsr2h,c
  2805  002DF2  50DF               	movf	indf2,w,c
  2806  002DF4  0100               	movlb	0	; () banked
  2807  002DF6  6FE4               	movwf	??_RTC_Calendario& (0+255),b
  2808  002DF8  6BE5               	clrf	(??_RTC_Calendario+1)& (0+255),b
  2809                           
  2810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2811                           ; Switch size 1, requested type "simple"
  2812                           ; Number of cases is 1, Range of values is 0 to 0
  2813                           ; switch strategies available:
  2814                           ; Name         Instructions Cycles
  2815                           ; simple_byte            4     3 (average)
  2816                           ;	Chosen strategy is simple_byte
  2817  002DFA  51E5               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2818  002DFC  0A00               	xorlw	0	; case 0
  2819  002DFE  B4D8               	btfsc	status,2,c
  2820  002E00  EF04  F017         	goto	l6273
  2821  002E04  EF93  F015         	goto	l6035
  2822  002E08                     l6273:
  2823                           
  2824                           ; BSR set to: 0
  2825                           ; Switch size 1, requested type "simple"
  2826                           ; Number of cases is 7, Range of values is 70 to 116
  2827                           ; switch strategies available:
  2828                           ; Name         Instructions Cycles
  2829                           ; simple_byte           22    12 (average)
  2830                           ;	Chosen strategy is simple_byte
  2831  002E08  51E4               	movf	??_RTC_Calendario& (0+255),w,b
  2832  002E0A  0A46               	xorlw	70	; case 70
  2833  002E0C  B4D8               	btfsc	status,2,c
  2834  002E0E  EFE2  F016         	goto	l6119
  2835  002E12  0A0B               	xorlw	11	; case 77
  2836  002E14  B4D8               	btfsc	status,2,c
  2837  002E16  EFC2  F016         	goto	l6095
  2838  002E1A  0A1E               	xorlw	30	; case 83
  2839  002E1C  B4D8               	btfsc	status,2,c
  2840  002E1E  EFBA  F016         	goto	l6089
  2841  002E22  0A07               	xorlw	7	; case 84
  2842  002E24  B4D8               	btfsc	status,2,c
  2843  002E26  EFCA  F016         	goto	l6101
  2844  002E2A  0A03               	xorlw	3	; case 87
  2845  002E2C  B4D8               	btfsc	status,2,c
  2846  002E2E  EFD2  F016         	goto	l6107
  2847  002E32  0A24               	xorlw	36	; case 115
  2848  002E34  B4D8               	btfsc	status,2,c
  2849  002E36  EFEA  F016         	goto	l6125
  2850  002E3A  0A07               	xorlw	7	; case 116
  2851  002E3C  B4D8               	btfsc	status,2,c
  2852  002E3E  EFDA  F016         	goto	l6113
  2853  002E42  EF93  F015         	goto	l6035
  2854  002E46                     l288:
  2855  002E46  0012               	return		;funcret
  2856  002E48                     __end_of_RTC_Calendario:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _sprintf *****************
  2860 ;; Defined at:
  2861 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  s               2  116[BANK0 ] PTR unsigned char 
  2864 ;;		 -> RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), 
  2865 ;;		 -> RTC_Calendario@mins(10), RTC_Calendario@secs(10), Stemp(20), 
  2866 ;;  fmt             2  118[BANK0 ] PTR const unsigned char 
  2867 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
  2868 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  2869 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  f               6  126[BANK0 ] struct _IO_FILE
  2872 ;;  ap              2  124[BANK0 ] PTR void [1]
  2873 ;;		 -> ?_sprintf(2), 
  2874 ;;  ret             2    0        int 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2  116[BANK0 ] int 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2884 ;;      Params:         0       8       0       0       0       0       0       0       0
  2885 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2887 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2888 ;;Total ram usage:       16 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 9
  2891 ;; This function calls:
  2892 ;;		_vfprintf
  2893 ;; This function is called by:
  2894 ;;		_main
  2895 ;;		_RTC_Calendario
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text5
  2900  004228                     __ptext5:
  2901                           	callstack 0
  2902  004228                     _sprintf:
  2903                           	callstack 21
  2904  004228  0ED8               	movlw	low (?_sprintf+4)
  2905  00422A  0100               	movlb	0	; () banked
  2906  00422C  6FDC               	movwf	sprintf@ap& (0+255),b
  2907  00422E  0E00               	movlw	high (?_sprintf+4)
  2908  004230  6FDD               	movwf	(sprintf@ap+1)& (0+255),b
  2909  004232  C0D4  F0DE         	movff	sprintf@s,sprintf@f
  2910  004236  C0D5  F0DF         	movff	sprintf@s+1,sprintf@f+1
  2911  00423A                     
  2912                           ; BSR set to: 0
  2913  00423A  0E00               	movlw	0
  2914  00423C  6FE1               	movwf	(sprintf@f+3)& (0+255),b
  2915  00423E  0E00               	movlw	0
  2916  004240  6FE0               	movwf	(sprintf@f+2)& (0+255),b
  2917  004242                     
  2918                           ; BSR set to: 0
  2919  004242  0E00               	movlw	0
  2920  004244  6FE3               	movwf	(sprintf@f+5)& (0+255),b
  2921  004246  0E00               	movlw	0
  2922  004248  6FE2               	movwf	(sprintf@f+4)& (0+255),b
  2923  00424A                     
  2924                           ; BSR set to: 0
  2925  00424A  0EDE               	movlw	low sprintf@f
  2926  00424C  6FCC               	movwf	vfprintf@fp& (0+255),b
  2927  00424E  0E00               	movlw	high sprintf@f
  2928  004250  6FCD               	movwf	(vfprintf@fp+1)& (0+255),b
  2929  004252  C0D6  F0CE         	movff	sprintf@fmt,vfprintf@fmt
  2930  004256  C0D7  F0CF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2931  00425A  0EDC               	movlw	low sprintf@ap
  2932  00425C  6FD0               	movwf	vfprintf@ap& (0+255),b
  2933  00425E  0E00               	movlw	high sprintf@ap
  2934  004260  6FD1               	movwf	(vfprintf@ap+1)& (0+255),b
  2935  004262  ECFA  F01F         	call	_vfprintf	;wreg free
  2936  004266  0100               	movlb	0	; () banked
  2937  004268  51E0               	movf	(sprintf@f+2)& (0+255),w,b
  2938  00426A  25D4               	addwf	sprintf@s& (0+255),w,b
  2939  00426C  6ED9               	movwf	fsr2l,c
  2940  00426E  51E1               	movf	(sprintf@f+3)& (0+255),w,b
  2941  004270  21D5               	addwfc	(sprintf@s+1)& (0+255),w,b
  2942  004272  6EDA               	movwf	fsr2h,c
  2943  004274  0E00               	movlw	0
  2944  004276  6EDF               	movwf	indf2,c
  2945  004278                     
  2946                           ; BSR set to: 0
  2947  004278  0012               	return		;funcret
  2948  00427A                     __end_of_sprintf:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _vfprintf *****************
  2952 ;; Defined at:
  2953 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  fp              2  108[BANK0 ] PTR struct _IO_FILE
  2956 ;;		 -> sprintf@f(6), 
  2957 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  2958 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
  2959 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  2960 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
  2961 ;;  ap              2  112[BANK0 ] PTR PTR void 
  2962 ;;		 -> sprintf@ap(2), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  cfmt            2  114[BANK0 ] PTR unsigned char 
  2965 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
  2966 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  2967 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  2  108[BANK0 ] int 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2977 ;;      Params:         0       6       0       0       0       0       0       0       0
  2978 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2979 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2980 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2981 ;;Total ram usage:        8 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 8
  2984 ;; This function calls:
  2985 ;;		_vfpfcnvrt
  2986 ;; This function is called by:
  2987 ;;		_sprintf
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text6
  2992  003FF4                     __ptext6:
  2993                           	callstack 0
  2994  003FF4                     _vfprintf:
  2995                           	callstack 21
  2996  003FF4                     
  2997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2998  003FF4  C0CE  F0D2         	movff	vfprintf@fmt,vfprintf@cfmt
  2999  003FF8  C0CF  F0D3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3000  003FFC                     
  3001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3002  003FFC  0E00               	movlw	0
  3003  003FFE  0100               	movlb	0	; () banked
  3004  004000  6FF4               	movwf	(_nout+1)& (0+255),b
  3005  004002  0E00               	movlw	0
  3006  004004  6FF3               	movwf	_nout& (0+255),b
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3009  004006  EF18  F020         	goto	l5989
  3010  00400A                     l5987:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3014  00400A  C0CC  F0AC         	movff	vfprintf@fp,vfpfcnvrt@fp
  3015  00400E  C0CD  F0AD         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3016  004012  0ED2               	movlw	low vfprintf@cfmt
  3017  004014  6FAE               	movwf	vfpfcnvrt@fmt& (0+255),b
  3018  004016  0E00               	movlw	high vfprintf@cfmt
  3019  004018  6FAF               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3020  00401A  C0D0  F0B0         	movff	vfprintf@ap,vfpfcnvrt@ap
  3021  00401E  C0D1  F0B1         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3022  004022  EC58  F00A         	call	_vfpfcnvrt	;wreg free
  3023  004026  0100               	movlb	0	; () banked
  3024  004028  51AC               	movf	?_vfpfcnvrt& (0+255),w,b
  3025  00402A  27F3               	addwf	_nout& (0+255),f,b
  3026  00402C  51AD               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3027  00402E  23F4               	addwfc	(_nout+1)& (0+255),f,b
  3028  004030                     l5989:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3032  004030  C0D2  FFF6         	movff	vfprintf@cfmt,tblptrl
  3033  004034  C0D3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3034  004038                     	if	0	;tblptru may be non-zero
  3035  004038                     	endif
  3036  004038                     	if	0	;tblptru may be non-zero
  3037  004038                     	endif
  3038  004038  0008               	tblrd		*
  3039  00403A  50F5               	movf	tablat,w,c
  3040  00403C  0900               	iorlw	0
  3041  00403E  A4D8               	btfss	status,2,c
  3042  004040  EF24  F020         	goto	u7001
  3043  004044  EF26  F020         	goto	u7000
  3044  004048                     u7001:
  3045  004048  EF05  F020         	goto	l5987
  3046  00404C                     u7000:
  3047  00404C                     
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3050  00404C  C0F3  F0CC         	movff	_nout,?_vfprintf
  3051  004050  C0F4  F0CD         	movff	_nout+1,?_vfprintf+1
  3052  004054                     
  3053                           ; BSR set to: 0
  3054  004054  0012               	return		;funcret
  3055  004056                     __end_of_vfprintf:
  3056                           	callstack 0
  3057                           
  3058 ;; *************** function _vfpfcnvrt *****************
  3059 ;; Defined at:
  3060 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  fp              2   76[BANK0 ] PTR struct _IO_FILE
  3063 ;;		 -> sprintf@f(6), 
  3064 ;;  fmt             2   78[BANK0 ] PTR PTR unsigned char 
  3065 ;;		 -> vfprintf@cfmt(2), 
  3066 ;;  ap              2   80[BANK0 ] PTR PTR void 
  3067 ;;		 -> sprintf@ap(2), 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  llu             8   86[BANK0 ] unsigned long long 
  3070 ;;  ll              8    0        long long 
  3071 ;;  f               4  103[BANK0 ] long long 
  3072 ;;  ct              3  100[BANK0 ] unsigned char [3]
  3073 ;;  vp              3    0        PTR void 
  3074 ;;  cp              3    0        PTR unsigned char 
  3075 ;;  done            2   94[BANK0 ] int 
  3076 ;;  i               2    0        int 
  3077 ;;  c               1  107[BANK0 ] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  2   76[BANK0 ] int 
  3080 ;; Registers used:
  3081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3087 ;;      Params:         0       6       0       0       0       0       0       0       0
  3088 ;;      Locals:         0      22       0       0       0       0       0       0       0
  3089 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3090 ;;      Totals:         0      32       0       0       0       0       0       0       0
  3091 ;;Total ram usage:       32 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 7
  3094 ;; This function calls:
  3095 ;;		_atoi
  3096 ;;		_efgtoa
  3097 ;;		_fputc
  3098 ;;		_isdigit
  3099 ;;		_isupper
  3100 ;;		_strncmp
  3101 ;;		_tolower
  3102 ;;		_xtoa
  3103 ;; This function is called by:
  3104 ;;		_vfprintf
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text7
  3109  0014B0                     __ptext7:
  3110                           	callstack 0
  3111  0014B0                     _vfpfcnvrt:
  3112                           	callstack 21
  3113  0014B0                     
  3114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3115  0014B0  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3116  0014B4  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3117  0014B8  CFDE FFF6          	movff	postinc2,tblptrl
  3118  0014BC  CFDD FFF7          	movff	postdec2,tblptrh
  3119  0014C0                     	if	0	;tblptru may be non-zero
  3120  0014C0                     	endif
  3121  0014C0                     	if	0	;tblptru may be non-zero
  3122  0014C0                     	endif
  3123  0014C0  0008               	tblrd		*
  3124  0014C2  50F5               	movf	tablat,w,c
  3125  0014C4  0A25               	xorlw	37
  3126  0014C6  A4D8               	btfss	status,2,c
  3127  0014C8  EF68  F00A         	goto	u6821
  3128  0014CC  EF6A  F00A         	goto	u6820
  3129  0014D0                     u6821:
  3130  0014D0  EF43  F00D         	goto	l5969
  3131  0014D4                     u6820:
  3132  0014D4                     
  3133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3134  0014D4  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3135  0014D8  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3136  0014DC  2ADE               	incf	postinc2,f,c
  3137  0014DE  0E00               	movlw	0
  3138  0014E0  22DD               	addwfc	postdec2,f,c
  3139  0014E2                     
  3140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3141  0014E2  0E00               	movlw	0
  3142  0014E4  0100               	movlb	0	; () banked
  3143  0014E6  6FF6               	movwf	(_width+1)& (0+255),b
  3144  0014E8  0E00               	movlw	0
  3145  0014EA  6FF5               	movwf	_width& (0+255),b
  3146  0014EC  C0F5  F0F9         	movff	_width,_flags
  3147  0014F0  C0F6  F0FA         	movff	_width+1,_flags+1
  3148  0014F4                     
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3151  0014F4  69F7               	setf	_prec& (0+255),b
  3152  0014F6  69F8               	setf	(_prec+1)& (0+255),b
  3153  0014F8                     
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  3156  0014F8  0E00               	movlw	0
  3157  0014FA  6FBF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3158  0014FC  0E00               	movlw	0
  3159  0014FE  6FBE               	movwf	vfpfcnvrt@done& (0+255),b
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3162  001500  EFC8  F00A         	goto	l5877
  3163  001504                     l5851:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  3167  001504  81F9               	bsf	_flags& (0+255),0,b
  3168  001506                     l5853:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  3172  001506  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3173  00150A  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3174  00150E  2ADE               	incf	postinc2,f,c
  3175  001510  0E00               	movlw	0
  3176  001512  22DD               	addwfc	postdec2,f,c
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  3179  001514  EFC8  F00A         	goto	l5877
  3180  001518                     l5855:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  3184  001518  83F9               	bsf	_flags& (0+255),1,b
  3185  00151A  EF83  F00A         	goto	l5853
  3186  00151E                     l5859:
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  3190  00151E  85F9               	bsf	_flags& (0+255),2,b
  3191  001520  EF83  F00A         	goto	l5853
  3192  001524                     l5863:
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  3196  001524  87F9               	bsf	_flags& (0+255),3,b
  3197  001526  EF83  F00A         	goto	l5853
  3198  00152A                     l5867:
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  3202  00152A  89F9               	bsf	_flags& (0+255),4,b
  3203  00152C  EF83  F00A         	goto	l5853
  3204  001530                     l5871:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  3208  001530  0E00               	movlw	0
  3209  001532  6FBF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3210  001534  0E01               	movlw	1
  3211  001536  6FBE               	movwf	vfpfcnvrt@done& (0+255),b
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  3214  001538  EFC8  F00A         	goto	l5877
  3215  00153C                     l5875:
  3216                           
  3217                           ; BSR set to: 0
  3218  00153C  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3219  001540  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3220  001544  CFDE FFF6          	movff	postinc2,tblptrl
  3221  001548  CFDD FFF7          	movff	postdec2,tblptrh
  3222  00154C                     	if	0	;tblptru may be non-zero
  3223  00154C                     	endif
  3224  00154C                     	if	0	;tblptru may be non-zero
  3225  00154C                     	endif
  3226  00154C  0008               	tblrd		*
  3227  00154E  50F5               	movf	tablat,w,c
  3228  001550  6FB2               	movwf	??_vfpfcnvrt& (0+255),b
  3229  001552  6BB3               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3230                           
  3231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3232                           ; Switch size 1, requested type "simple"
  3233                           ; Number of cases is 1, Range of values is 0 to 0
  3234                           ; switch strategies available:
  3235                           ; Name         Instructions Cycles
  3236                           ; simple_byte            4     3 (average)
  3237                           ;	Chosen strategy is simple_byte
  3238  001554  51B3               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3239  001556  0A00               	xorlw	0	; case 0
  3240  001558  B4D8               	btfsc	status,2,c
  3241  00155A  EFB1  F00A         	goto	l6275
  3242  00155E  EF98  F00A         	goto	l5871
  3243  001562                     l6275:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ; Switch size 1, requested type "simple"
  3247                           ; Number of cases is 5, Range of values is 32 to 48
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; simple_byte           16     9 (average)
  3251                           ;	Chosen strategy is simple_byte
  3252  001562  51B2               	movf	??_vfpfcnvrt& (0+255),w,b
  3253  001564  0A20               	xorlw	32	; case 32
  3254  001566  B4D8               	btfsc	status,2,c
  3255  001568  EF92  F00A         	goto	l5863
  3256  00156C  0A03               	xorlw	3	; case 35
  3257  00156E  B4D8               	btfsc	status,2,c
  3258  001570  EF95  F00A         	goto	l5867
  3259  001574  0A08               	xorlw	8	; case 43
  3260  001576  B4D8               	btfsc	status,2,c
  3261  001578  EF8F  F00A         	goto	l5859
  3262  00157C  0A06               	xorlw	6	; case 45
  3263  00157E  B4D8               	btfsc	status,2,c
  3264  001580  EF82  F00A         	goto	l5851
  3265  001584  0A1D               	xorlw	29	; case 48
  3266  001586  B4D8               	btfsc	status,2,c
  3267  001588  EF8C  F00A         	goto	l5855
  3268  00158C  EF98  F00A         	goto	l5871
  3269  001590                     l5877:
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3273  001590  51BE               	movf	vfpfcnvrt@done& (0+255),w,b
  3274  001592  11BF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3275  001594  B4D8               	btfsc	status,2,c
  3276  001596  EFCF  F00A         	goto	u6831
  3277  00159A  EFD1  F00A         	goto	u6830
  3278  00159E                     u6831:
  3279  00159E  EF9E  F00A         	goto	l5875
  3280  0015A2                     u6830:
  3281  0015A2                     
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  3284  0015A2  A1F9               	btfss	_flags& (0+255),0,b
  3285  0015A4  EFD6  F00A         	goto	u6841
  3286  0015A8  EFD8  F00A         	goto	u6840
  3287  0015AC                     u6841:
  3288  0015AC  EFD9  F00A         	goto	l5881
  3289  0015B0                     u6840:
  3290  0015B0                     
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  3293  0015B0  93F9               	bcf	_flags& (0+255),1,b
  3294  0015B2                     l5881:
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3298  0015B2  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3299  0015B6  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3300  0015BA  CFDE FFF6          	movff	postinc2,tblptrl
  3301  0015BE  CFDD FFF7          	movff	postdec2,tblptrh
  3302  0015C2                     	if	0	;tblptru may be non-zero
  3303  0015C2                     	endif
  3304  0015C2                     	if	0	;tblptru may be non-zero
  3305  0015C2                     	endif
  3306  0015C2  0008               	tblrd		*
  3307  0015C4  50F5               	movf	tablat,w,c
  3308  0015C6  0A2E               	xorlw	46
  3309  0015C8  A4D8               	btfss	status,2,c
  3310  0015CA  EFE9  F00A         	goto	u6851
  3311  0015CE  EFEB  F00A         	goto	u6850
  3312  0015D2                     u6851:
  3313  0015D2  EF69  F00B         	goto	l5901
  3314  0015D6                     u6850:
  3315  0015D6                     
  3316                           ; BSR set to: 0
  3317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3318  0015D6  0E00               	movlw	0
  3319  0015D8  6FF8               	movwf	(_prec+1)& (0+255),b
  3320  0015DA  0E00               	movlw	0
  3321  0015DC  6FF7               	movwf	_prec& (0+255),b
  3322  0015DE                     
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3325  0015DE  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3326  0015E2  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3327  0015E6  2ADE               	incf	postinc2,f,c
  3328  0015E8  0E00               	movlw	0
  3329  0015EA  22DD               	addwfc	postdec2,f,c
  3330  0015EC                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3333  0015EC  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3334  0015F0  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3335  0015F4  CFDE FFF6          	movff	postinc2,tblptrl
  3336  0015F8  CFDD FFF7          	movff	postdec2,tblptrh
  3337  0015FC                     	if	0	;tblptru may be non-zero
  3338  0015FC                     	endif
  3339  0015FC                     	if	0	;tblptru may be non-zero
  3340  0015FC                     	endif
  3341  0015FC  0008               	tblrd		*
  3342  0015FE  50F5               	movf	tablat,w,c
  3343  001600  0A2A               	xorlw	42
  3344  001602  A4D8               	btfss	status,2,c
  3345  001604  EF06  F00B         	goto	u6861
  3346  001608  EF08  F00B         	goto	u6860
  3347  00160C                     u6861:
  3348  00160C  EF25  F00B         	goto	l5891
  3349  001610                     u6860:
  3350  001610                     
  3351                           ; BSR set to: 0
  3352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3353  001610  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3354  001614  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3355  001618  2ADE               	incf	postinc2,f,c
  3356  00161A  0E00               	movlw	0
  3357  00161C  22DD               	addwfc	postdec2,f,c
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3360  00161E  C0B0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3361  001622  C0B1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3362  001626  CFDF F0B2          	movff	indf2,??_vfpfcnvrt
  3363  00162A  0E02               	movlw	2
  3364  00162C  26DE               	addwf	postinc2,f,c
  3365  00162E  CFDF F0B3          	movff	indf2,??_vfpfcnvrt+1
  3366  001632  0E00               	movlw	0
  3367  001634  22DD               	addwfc	postdec2,f,c
  3368  001636  C0B2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3369  00163A  C0B3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3370  00163E  CFDE F0F7          	movff	postinc2,_prec
  3371  001642  CFDD F0F8          	movff	postdec2,_prec+1
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3374  001646  EF69  F00B         	goto	l5901
  3375  00164A                     l5891:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3379  00164A  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3380  00164E  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3381  001652  CFDE F009          	movff	postinc2,atoi@s
  3382  001656  CFDD F00A          	movff	postdec2,atoi@s+1
  3383  00165A  EC74  F01A         	call	_atoi	;wreg free
  3384  00165E  C009  F0F7         	movff	?_atoi,_prec
  3385  001662  C00A  F0F8         	movff	?_atoi+1,_prec+1
  3386                           
  3387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3388  001666  EF3C  F00B         	goto	l5895
  3389  00166A                     l5893:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3393  00166A  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3394  00166E  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3395  001672  2ADE               	incf	postinc2,f,c
  3396  001674  0E00               	movlw	0
  3397  001676  22DD               	addwfc	postdec2,f,c
  3398  001678                     l5895:
  3399  001678  0ED0               	movlw	208
  3400  00167A  0100               	movlb	0	; () banked
  3401  00167C  6FB2               	movwf	??_vfpfcnvrt& (0+255),b
  3402  00167E  0EFF               	movlw	255
  3403  001680  6FB3               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3404  001682  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3405  001686  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3406  00168A  CFDE FFF6          	movff	postinc2,tblptrl
  3407  00168E  CFDD FFF7          	movff	postdec2,tblptrh
  3408  001692                     	if	0	;tblptru may be non-zero
  3409  001692                     	endif
  3410  001692                     	if	0	;tblptru may be non-zero
  3411  001692                     	endif
  3412  001692  0008               	tblrd		*
  3413  001694  50F5               	movf	tablat,w,c
  3414  001696  6FB4               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3415  001698  6BB5               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3416  00169A  51B2               	movf	??_vfpfcnvrt& (0+255),w,b
  3417  00169C  27B4               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3418  00169E  51B3               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3419  0016A0  23B5               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3420  0016A2  51B5               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3421  0016A4  E10A               	bnz	u6870
  3422  0016A6  0E0A               	movlw	10
  3423  0016A8  5DB4               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3424  0016AA  A0D8               	btfss	status,0,c
  3425  0016AC  EF5A  F00B         	goto	u6871
  3426  0016B0  EF5D  F00B         	goto	u6870
  3427  0016B4                     u6871:
  3428  0016B4  0E01               	movlw	1
  3429  0016B6  EF5E  F00B         	goto	u6880
  3430  0016BA                     u6870:
  3431  0016BA  0E00               	movlw	0
  3432  0016BC                     u6880:
  3433  0016BC  6FC0               	movwf	_vfpfcnvrt$1693& (0+255),b
  3434  0016BE  6BC1               	clrf	(_vfpfcnvrt$1693+1)& (0+255),b
  3435  0016C0                     
  3436                           ; BSR set to: 0
  3437  0016C0  51C0               	movf	_vfpfcnvrt$1693& (0+255),w,b
  3438  0016C2  11C1               	iorwf	(_vfpfcnvrt$1693+1)& (0+255),w,b
  3439  0016C4  A4D8               	btfss	status,2,c
  3440  0016C6  EF67  F00B         	goto	u6891
  3441  0016CA  EF69  F00B         	goto	u6890
  3442  0016CE                     u6891:
  3443  0016CE  EF35  F00B         	goto	l5893
  3444  0016D2                     u6890:
  3445  0016D2                     l5901:
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3449  0016D2  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3450  0016D6  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3451  0016DA  CFDE FFF6          	movff	postinc2,tblptrl
  3452  0016DE  CFDD FFF7          	movff	postdec2,tblptrh
  3453  0016E2                     	if	0	;tblptru may be non-zero
  3454  0016E2                     	endif
  3455  0016E2                     	if	0	;tblptru may be non-zero
  3456  0016E2                     	endif
  3457  0016E2  0008               	tblrd		*
  3458  0016E4  50F5               	movf	tablat,w,c
  3459  0016E6  6E08               	movwf	tolower@c^0,c
  3460  0016E8  6A09               	clrf	(tolower@c+1)^0,c
  3461  0016EA  EC2B  F020         	call	_tolower	;wreg free
  3462  0016EE  5008               	movf	?_tolower^0,w,c
  3463  0016F0  0100               	movlb	0	; () banked
  3464  0016F2  6FC4               	movwf	vfpfcnvrt@ct& (0+255),b
  3465  0016F4                     
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3468  0016F4  51C4               	movf	vfpfcnvrt@ct& (0+255),w,b
  3469  0016F6  B4D8               	btfsc	status,2,c
  3470  0016F8  EF80  F00B         	goto	u6901
  3471  0016FC  EF82  F00B         	goto	u6900
  3472  001700                     u6901:
  3473  001700  EFBC  F00B         	goto	l5911
  3474  001704                     u6900:
  3475  001704                     
  3476                           ; BSR set to: 0
  3477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3478  001704  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3479  001708  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3480  00170C  CFDE F0B2          	movff	postinc2,??_vfpfcnvrt
  3481  001710  CFDD F0B3          	movff	postdec2,??_vfpfcnvrt+1
  3482  001714  0E01               	movlw	1
  3483  001716  27B2               	addwf	??_vfpfcnvrt& (0+255),f,b
  3484  001718  0E00               	movlw	0
  3485  00171A  23B3               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3486  00171C  C0B2  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3487  001720  C0B3  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3488  001724                     	if	0	;tblptru may be non-zero
  3489  001724                     	endif
  3490  001724                     	if	0	;tblptru may be non-zero
  3491  001724                     	endif
  3492  001724  0008               	tblrd		*
  3493  001726  50F5               	movf	tablat,w,c
  3494  001728  6E08               	movwf	tolower@c^0,c
  3495  00172A  6A09               	clrf	(tolower@c+1)^0,c
  3496  00172C  EC2B  F020         	call	_tolower	;wreg free
  3497  001730  5008               	movf	?_tolower^0,w,c
  3498  001732  0100               	movlb	0	; () banked
  3499  001734  6FC5               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3500  001736                     
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3503  001736  51C5               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3504  001738  B4D8               	btfsc	status,2,c
  3505  00173A  EFA1  F00B         	goto	u6911
  3506  00173E  EFA3  F00B         	goto	u6910
  3507  001742                     u6911:
  3508  001742  EFBC  F00B         	goto	l5911
  3509  001746                     u6910:
  3510  001746                     
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3513  001746  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3514  00174A  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3515  00174E  CFDE F0B2          	movff	postinc2,??_vfpfcnvrt
  3516  001752  CFDD F0B3          	movff	postdec2,??_vfpfcnvrt+1
  3517  001756  0E02               	movlw	2
  3518  001758  27B2               	addwf	??_vfpfcnvrt& (0+255),f,b
  3519  00175A  0E00               	movlw	0
  3520  00175C  23B3               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3521  00175E  C0B2  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3522  001762  C0B3  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3523  001766                     	if	0	;tblptru may be non-zero
  3524  001766                     	endif
  3525  001766                     	if	0	;tblptru may be non-zero
  3526  001766                     	endif
  3527  001766  0008               	tblrd		*
  3528  001768  50F5               	movf	tablat,w,c
  3529  00176A  6E08               	movwf	tolower@c^0,c
  3530  00176C  6A09               	clrf	(tolower@c+1)^0,c
  3531  00176E  EC2B  F020         	call	_tolower	;wreg free
  3532  001772  5008               	movf	?_tolower^0,w,c
  3533  001774  0100               	movlb	0	; () banked
  3534  001776  6FC6               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3535  001778                     l5911:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3539  001778  0E66               	movlw	102
  3540  00177A  19C4               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3541  00177C  A4D8               	btfss	status,2,c
  3542  00177E  EFC3  F00B         	goto	u6921
  3543  001782  EFC5  F00B         	goto	u6920
  3544  001786                     u6921:
  3545  001786  EF05  F00C         	goto	l5923
  3546  00178A                     u6920:
  3547  00178A                     
  3548                           ; BSR set to: 0
  3549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3550  00178A  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3551  00178E  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3552  001792  CFDE FFF6          	movff	postinc2,tblptrl
  3553  001796  CFDD FFF7          	movff	postdec2,tblptrh
  3554  00179A                     	if	0	;tblptru may be non-zero
  3555  00179A                     	endif
  3556  00179A                     	if	0	;tblptru may be non-zero
  3557  00179A                     	endif
  3558  00179A  0008               	tblrd		*
  3559  00179C  CFF5 F0CB          	movff	tablat,vfpfcnvrt@c
  3560  0017A0                     
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3563  0017A0  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3564  0017A4  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3565  0017A8  2ADE               	incf	postinc2,f,c
  3566  0017AA  0E00               	movlw	0
  3567  0017AC  22DD               	addwfc	postdec2,f,c
  3568  0017AE                     
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3571  0017AE  C0B0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3572  0017B2  C0B1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3573  0017B6  CFDF F0B2          	movff	indf2,??_vfpfcnvrt
  3574  0017BA  0E04               	movlw	4
  3575  0017BC  26DE               	addwf	postinc2,f,c
  3576  0017BE  CFDF F0B3          	movff	indf2,??_vfpfcnvrt+1
  3577  0017C2  0E00               	movlw	0
  3578  0017C4  22DD               	addwfc	postdec2,f,c
  3579  0017C6  C0B2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3580  0017CA  C0B3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3581  0017CE  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f
  3582  0017D2  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+1
  3583  0017D6  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+2
  3584  0017DA  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+3
  3585  0017DE                     l5919:
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3589  0017DE  C0AC  F068         	movff	vfpfcnvrt@fp,efgtoa@fp
  3590  0017E2  C0AD  F069         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3591  0017E6  C0C7  F06A         	movff	vfpfcnvrt@f,efgtoa@f
  3592  0017EA  C0C8  F06B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3593  0017EE  C0C9  F06C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3594  0017F2  C0CA  F06D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3595  0017F6  C0CB  F06E         	movff	vfpfcnvrt@c,efgtoa@c
  3596  0017FA  EC2C  F004         	call	_efgtoa	;wreg free
  3597  0017FE  C068  F0AC         	movff	?_efgtoa,?_vfpfcnvrt
  3598  001802  C069  F0AD         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3599  001806  EF5E  F00D         	goto	l1293
  3600  00180A                     l5923:
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3604  00180A  0EC4               	movlw	low vfpfcnvrt@ct
  3605  00180C  6E02               	movwf	strncmp@_l^0,c
  3606  00180E  0E00               	movlw	high vfpfcnvrt@ct
  3607  001810  6E03               	movwf	(strncmp@_l+1)^0,c
  3608  001812  0E4E               	movlw	low STR_31
  3609  001814  6E04               	movwf	strncmp@_r^0,c
  3610  001816  0E08               	movlw	high STR_31
  3611  001818  6E05               	movwf	(strncmp@_r+1)^0,c
  3612  00181A  0E00               	movlw	0
  3613  00181C  6E07               	movwf	(strncmp@n+1)^0,c
  3614  00181E  0E02               	movlw	2
  3615  001820  6E06               	movwf	strncmp@n^0,c
  3616  001822  EC40  F01D         	call	_strncmp	;wreg free
  3617  001826  5002               	movf	?_strncmp^0,w,c
  3618  001828  1003               	iorwf	(?_strncmp+1)^0,w,c
  3619  00182A  A4D8               	btfss	status,2,c
  3620  00182C  EF1A  F00C         	goto	u6931
  3621  001830  EF1C  F00C         	goto	u6930
  3622  001834                     u6931:
  3623  001834  EF98  F00C         	goto	l5939
  3624  001838                     u6930:
  3625  001838                     
  3626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3627  001838  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3628  00183C  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3629  001840  CFDE F0B2          	movff	postinc2,??_vfpfcnvrt
  3630  001844  CFDD F0B3          	movff	postdec2,??_vfpfcnvrt+1
  3631  001848  0E01               	movlw	1
  3632  00184A  0100               	movlb	0	; () banked
  3633  00184C  27B2               	addwf	??_vfpfcnvrt& (0+255),f,b
  3634  00184E  0E00               	movlw	0
  3635  001850  23B3               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3636  001852  C0B2  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3637  001856  C0B3  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3638  00185A                     	if	0	;tblptru may be non-zero
  3639  00185A                     	endif
  3640  00185A                     	if	0	;tblptru may be non-zero
  3641  00185A                     	endif
  3642  00185A  0008               	tblrd		*
  3643  00185C  CFF5 F0CB          	movff	tablat,vfpfcnvrt@c
  3644  001860  0EBF               	movlw	191
  3645  001862  6FB2               	movwf	??_vfpfcnvrt& (0+255),b
  3646  001864  0EFF               	movlw	255
  3647  001866  6FB3               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3648  001868  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3649  00186C  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3650  001870  CFDE FFF6          	movff	postinc2,tblptrl
  3651  001874  CFDD FFF7          	movff	postdec2,tblptrh
  3652  001878                     	if	0	;tblptru may be non-zero
  3653  001878                     	endif
  3654  001878                     	if	0	;tblptru may be non-zero
  3655  001878                     	endif
  3656  001878  0008               	tblrd		*
  3657  00187A  50F5               	movf	tablat,w,c
  3658  00187C  6FB4               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3659  00187E  6BB5               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3660  001880  51B2               	movf	??_vfpfcnvrt& (0+255),w,b
  3661  001882  27B4               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3662  001884  51B3               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3663  001886  23B5               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3664  001888  51B5               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3665  00188A  E10A               	bnz	u6940
  3666  00188C  0E1A               	movlw	26
  3667  00188E  5DB4               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3668  001890  A0D8               	btfss	status,0,c
  3669  001892  EF4D  F00C         	goto	u6941
  3670  001896  EF50  F00C         	goto	u6940
  3671  00189A                     u6941:
  3672  00189A  0E01               	movlw	1
  3673  00189C  EF51  F00C         	goto	u6950
  3674  0018A0                     u6940:
  3675  0018A0  0E00               	movlw	0
  3676  0018A2                     u6950:
  3677  0018A2  6FC2               	movwf	_vfpfcnvrt$1697& (0+255),b
  3678  0018A4  6BC3               	clrf	(_vfpfcnvrt$1697+1)& (0+255),b
  3679  0018A6                     
  3680                           ; BSR set to: 0
  3681  0018A6  51C2               	movf	_vfpfcnvrt$1697& (0+255),w,b
  3682  0018A8  11C3               	iorwf	(_vfpfcnvrt$1697+1)& (0+255),w,b
  3683  0018AA  B4D8               	btfsc	status,2,c
  3684  0018AC  EF5A  F00C         	goto	u6961
  3685  0018B0  EF5C  F00C         	goto	u6960
  3686  0018B4                     u6961:
  3687  0018B4  EF76  F00C         	goto	l5933
  3688  0018B8                     u6960:
  3689  0018B8                     
  3690                           ; BSR set to: 0
  3691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3692  0018B8  C0B0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3693  0018BC  C0B1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3694  0018C0  CFDF F0B2          	movff	indf2,??_vfpfcnvrt
  3695  0018C4  0E04               	movlw	4
  3696  0018C6  26DE               	addwf	postinc2,f,c
  3697  0018C8  CFDF F0B3          	movff	indf2,??_vfpfcnvrt+1
  3698  0018CC  0E00               	movlw	0
  3699  0018CE  22DD               	addwfc	postdec2,f,c
  3700  0018D0  C0B2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3701  0018D4  C0B3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3702  0018D8  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f
  3703  0018DC  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+1
  3704  0018E0  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+2
  3705  0018E4  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+3
  3706                           
  3707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3708  0018E8  EF8E  F00C         	goto	l1300
  3709  0018EC                     l5933:
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3713  0018EC  C0B0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3714  0018F0  C0B1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3715  0018F4  CFDF F0B2          	movff	indf2,??_vfpfcnvrt
  3716  0018F8  0E04               	movlw	4
  3717  0018FA  26DE               	addwf	postinc2,f,c
  3718  0018FC  CFDF F0B3          	movff	indf2,??_vfpfcnvrt+1
  3719  001900  0E00               	movlw	0
  3720  001902  22DD               	addwfc	postdec2,f,c
  3721  001904  C0B2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3722  001908  C0B3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3723  00190C  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f
  3724  001910  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+1
  3725  001914  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+2
  3726  001918  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+3
  3727  00191C                     l1300:
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3731  00191C  0E02               	movlw	2
  3732  00191E  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3733  001922  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3734  001926  26DE               	addwf	postinc2,f,c
  3735  001928  0E00               	movlw	0
  3736  00192A  22DD               	addwfc	postdec2,f,c
  3737  00192C  EFEF  F00B         	goto	l5919
  3738  001930                     l5939:
  3739                           
  3740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3741  001930  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3742  001934  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3743  001938  CFDE FFF6          	movff	postinc2,tblptrl
  3744  00193C  CFDD FFF7          	movff	postdec2,tblptrh
  3745  001940                     	if	0	;tblptru may be non-zero
  3746  001940                     	endif
  3747  001940                     	if	0	;tblptru may be non-zero
  3748  001940                     	endif
  3749  001940  0008               	tblrd		*
  3750  001942  50F5               	movf	tablat,w,c
  3751  001944  0A78               	xorlw	120
  3752  001946  B4D8               	btfsc	status,2,c
  3753  001948  EFA8  F00C         	goto	u6971
  3754  00194C  EFAA  F00C         	goto	u6970
  3755  001950                     u6971:
  3756  001950  EFBC  F00C         	goto	l5943
  3757  001954                     u6970:
  3758  001954  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3759  001958  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3760  00195C  CFDE FFF6          	movff	postinc2,tblptrl
  3761  001960  CFDD FFF7          	movff	postdec2,tblptrh
  3762  001964                     	if	0	;tblptru may be non-zero
  3763  001964                     	endif
  3764  001964                     	if	0	;tblptru may be non-zero
  3765  001964                     	endif
  3766  001964  0008               	tblrd		*
  3767  001966  50F5               	movf	tablat,w,c
  3768  001968  0A58               	xorlw	88
  3769  00196A  A4D8               	btfss	status,2,c
  3770  00196C  EFBA  F00C         	goto	u6981
  3771  001970  EFBC  F00C         	goto	u6980
  3772  001974                     u6981:
  3773  001974  EF0B  F00D         	goto	l5953
  3774  001978                     u6980:
  3775  001978                     l5943:
  3776                           
  3777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3778  001978  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3779  00197C  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3780  001980  CFDE FFF6          	movff	postinc2,tblptrl
  3781  001984  CFDD FFF7          	movff	postdec2,tblptrh
  3782  001988                     	if	0	;tblptru may be non-zero
  3783  001988                     	endif
  3784  001988                     	if	0	;tblptru may be non-zero
  3785  001988                     	endif
  3786  001988  0008               	tblrd		*
  3787  00198A  CFF5 F0CB          	movff	tablat,vfpfcnvrt@c
  3788  00198E                     
  3789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3790  00198E  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3791  001992  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3792  001996  2ADE               	incf	postinc2,f,c
  3793  001998  0E00               	movlw	0
  3794  00199A  22DD               	addwfc	postdec2,f,c
  3795  00199C                     
  3796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3797  00199C  C0B0  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3798  0019A0  C0B1  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3799  0019A4  CFDF F0B2          	movff	indf2,??_vfpfcnvrt
  3800  0019A8  0E02               	movlw	2
  3801  0019AA  26DE               	addwf	postinc2,f,c
  3802  0019AC  CFDF F0B3          	movff	indf2,??_vfpfcnvrt+1
  3803  0019B0  0E00               	movlw	0
  3804  0019B2  22DD               	addwfc	postdec2,f,c
  3805  0019B4  C0B2  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3806  0019B8  C0B3  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3807  0019BC  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt+2
  3808  0019C0  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+3
  3809  0019C4  C0B4  F0B6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3810  0019C8  C0B5  F0B7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3811  0019CC  0100               	movlb	0	; () banked
  3812  0019CE  6BB8               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3813  0019D0  6BB9               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3814  0019D2  6BBA               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3815  0019D4  6BBB               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3816  0019D6  6BBC               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3817  0019D8  6BBD               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3818  0019DA                     
  3819                           ; BSR set to: 0
  3820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  3821  0019DA  C0AC  F01D         	movff	vfpfcnvrt@fp,xtoa@fp
  3822  0019DE  C0AD  F01E         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3823  0019E2  C0B6  F01F         	movff	vfpfcnvrt@llu,xtoa@d
  3824  0019E6  C0B7  F020         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3825  0019EA  C0B8  F021         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3826  0019EE  C0B9  F022         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3827  0019F2  C0BA  F023         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3828  0019F6  C0BB  F024         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3829  0019FA  C0BC  F025         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3830  0019FE  C0BD  F026         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3831  001A02  C0CB  F027         	movff	vfpfcnvrt@c,xtoa@x
  3832  001A06  EC24  F017         	call	_xtoa	;wreg free
  3833  001A0A  C01D  F0AC         	movff	?_xtoa,?_vfpfcnvrt
  3834  001A0E  C01E  F0AD         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3835  001A12  EF5E  F00D         	goto	l1293
  3836  001A16                     l5953:
  3837                           
  3838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3839  001A16  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3840  001A1A  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3841  001A1E  CFDE FFF6          	movff	postinc2,tblptrl
  3842  001A22  CFDD FFF7          	movff	postdec2,tblptrh
  3843  001A26                     	if	0	;tblptru may be non-zero
  3844  001A26                     	endif
  3845  001A26                     	if	0	;tblptru may be non-zero
  3846  001A26                     	endif
  3847  001A26  0008               	tblrd		*
  3848  001A28  50F5               	movf	tablat,w,c
  3849  001A2A  0A25               	xorlw	37
  3850  001A2C  A4D8               	btfss	status,2,c
  3851  001A2E  EF1B  F00D         	goto	u6991
  3852  001A32  EF1D  F00D         	goto	u6990
  3853  001A36                     u6991:
  3854  001A36  EF35  F00D         	goto	l5963
  3855  001A3A                     u6990:
  3856  001A3A                     
  3857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3858  001A3A  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3859  001A3E  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3860  001A42  2ADE               	incf	postinc2,f,c
  3861  001A44  0E00               	movlw	0
  3862  001A46  22DD               	addwfc	postdec2,f,c
  3863  001A48                     
  3864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3865  001A48  0E00               	movlw	0
  3866  001A4A  6E03               	movwf	(fputc@c+1)^0,c
  3867  001A4C  0E25               	movlw	37
  3868  001A4E  6E02               	movwf	fputc@c^0,c
  3869  001A50  C0AC  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3870  001A54  C0AD  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3871  001A58  ECAB  F01D         	call	_fputc	;wreg free
  3872  001A5C                     l5959:
  3873                           
  3874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3875  001A5C  0E00               	movlw	0
  3876  001A5E  0100               	movlb	0	; () banked
  3877  001A60  6FAD               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3878  001A62  0E01               	movlw	1
  3879  001A64  6FAC               	movwf	?_vfpfcnvrt& (0+255),b
  3880  001A66  EF5E  F00D         	goto	l1293
  3881  001A6A                     l5963:
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3884  001A6A  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3885  001A6E  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3886  001A72  2ADE               	incf	postinc2,f,c
  3887  001A74  0E00               	movlw	0
  3888  001A76  22DD               	addwfc	postdec2,f,c
  3889  001A78                     
  3890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3891  001A78  0E00               	movlw	0
  3892  001A7A  0100               	movlb	0	; () banked
  3893  001A7C  6FAD               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3894  001A7E  0E00               	movlw	0
  3895  001A80  6FAC               	movwf	?_vfpfcnvrt& (0+255),b
  3896  001A82  EF5E  F00D         	goto	l1293
  3897  001A86                     l5969:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3900  001A86  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3901  001A8A  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3902  001A8E  CFDE FFF6          	movff	postinc2,tblptrl
  3903  001A92  CFDD FFF7          	movff	postdec2,tblptrh
  3904  001A96                     	if	0	;tblptru may be non-zero
  3905  001A96                     	endif
  3906  001A96                     	if	0	;tblptru may be non-zero
  3907  001A96                     	endif
  3908  001A96  0008               	tblrd		*
  3909  001A98  50F5               	movf	tablat,w,c
  3910  001A9A  6E02               	movwf	fputc@c^0,c
  3911  001A9C  6A03               	clrf	(fputc@c+1)^0,c
  3912  001A9E  C0AC  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3913  001AA2  C0AD  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3914  001AA6  ECAB  F01D         	call	_fputc	;wreg free
  3915  001AAA                     
  3916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3917  001AAA  C0AE  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3918  001AAE  C0AF  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3919  001AB2  2ADE               	incf	postinc2,f,c
  3920  001AB4  0E00               	movlw	0
  3921  001AB6  22DD               	addwfc	postdec2,f,c
  3922  001AB8  EF2E  F00D         	goto	l5959
  3923  001ABC                     l1293:
  3924  001ABC  0012               	return		;funcret
  3925  001ABE                     __end_of_vfpfcnvrt:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _xtoa *****************
  3929 ;; Defined at:
  3930 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  3933 ;;		 -> sprintf@f(6), 
  3934 ;;  d               8   30[COMRAM] unsigned long long 
  3935 ;;  x               1   38[COMRAM] unsigned char 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  n               8   55[COMRAM] unsigned long long 
  3938 ;;  c               2   65[COMRAM] int 
  3939 ;;  i               2   63[COMRAM] int 
  3940 ;;  w               2   53[COMRAM] int 
  3941 ;;  p               2   51[COMRAM] int 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  2   28[COMRAM] int 
  3944 ;; Registers used:
  3945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3951 ;;      Params:        11       0       0       0       0       0       0       0       0
  3952 ;;      Locals:        20       0       0       0       0       0       0       0       0
  3953 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3954 ;;      Totals:        39       0       0       0       0       0       0       0       0
  3955 ;;Total ram usage:       39 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 6
  3958 ;; This function calls:
  3959 ;;		_isalpha
  3960 ;;		_isupper
  3961 ;;		_pad
  3962 ;;		_toupper
  3963 ;; This function is called by:
  3964 ;;		_vfpfcnvrt
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text8
  3969  002E48                     __ptext8:
  3970                           	callstack 0
  3971  002E48                     _xtoa:
  3972                           	callstack 21
  3973  002E48                     
  3974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3975  002E48  0100               	movlb	0	; () banked
  3976  002E4A  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  3977  002E4C  EF2A  F017         	goto	u5221
  3978  002E50  EF2C  F017         	goto	u5220
  3979  002E54                     u5221:
  3980  002E54  EF2D  F017         	goto	l4635
  3981  002E58                     u5220:
  3982  002E58                     
  3983                           ; BSR set to: 0
  3984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3985  002E58  93F9               	bcf	_flags& (0+255),1,b
  3986  002E5A                     l4635:
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3990  002E5A  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  3991  002E5C  EF3A  F017         	goto	u5230
  3992  002E60  51F8               	movf	(_prec+1)& (0+255),w,b
  3993  002E62  E106               	bnz	u5231
  3994  002E64  05F7               	decf	_prec& (0+255),w,b
  3995  002E66  B0D8               	btfsc	status,0,c
  3996  002E68  EF38  F017         	goto	u5231
  3997  002E6C  EF3A  F017         	goto	u5230
  3998  002E70                     u5231:
  3999  002E70  EF40  F017         	goto	l1239
  4000  002E74                     u5230:
  4001  002E74                     
  4002                           ; BSR set to: 0
  4003  002E74  0E00               	movlw	0
  4004  002E76  6E35               	movwf	(xtoa@p+1)^0,c
  4005  002E78  0E01               	movlw	1
  4006  002E7A  6E34               	movwf	xtoa@p^0,c
  4007  002E7C  EF44  F017         	goto	l1241
  4008  002E80                     l1239:
  4009                           
  4010                           ; BSR set to: 0
  4011  002E80  C0F7  F034         	movff	_prec,xtoa@p
  4012  002E84  C0F8  F035         	movff	_prec+1,xtoa@p+1
  4013  002E88                     l1241:
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  4017  002E88  C0F5  F036         	movff	_width,xtoa@w
  4018  002E8C  C0F6  F037         	movff	_width+1,xtoa@w+1
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4021  002E90  A9F9               	btfss	_flags& (0+255),4,b
  4022  002E92  EF4D  F017         	goto	u5241
  4023  002E96  EF4F  F017         	goto	u5240
  4024  002E9A                     u5241:
  4025  002E9A  EF53  F017         	goto	l4641
  4026  002E9E                     u5240:
  4027  002E9E                     
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  4030  002E9E  0EFE               	movlw	254
  4031  002EA0  2636               	addwf	xtoa@w^0,f,c
  4032  002EA2  0EFF               	movlw	255
  4033  002EA4  2237               	addwfc	(xtoa@w+1)^0,f,c
  4034  002EA6                     l4641:
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  4038  002EA6  C01F  F038         	movff	xtoa@d,xtoa@n
  4039  002EAA  C020  F039         	movff	xtoa@d+1,xtoa@n+1
  4040  002EAE  C021  F03A         	movff	xtoa@d+2,xtoa@n+2
  4041  002EB2  C022  F03B         	movff	xtoa@d+3,xtoa@n+3
  4042  002EB6  C023  F03C         	movff	xtoa@d+4,xtoa@n+4
  4043  002EBA  C024  F03D         	movff	xtoa@d+5,xtoa@n+5
  4044  002EBE  C025  F03E         	movff	xtoa@d+6,xtoa@n+6
  4045  002EC2  C026  F03F         	movff	xtoa@d+7,xtoa@n+7
  4046  002EC6                     
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  4049  002EC6  0E00               	movlw	0
  4050  002EC8  6E41               	movwf	(xtoa@i+1)^0,c
  4051  002ECA  0E4F               	movlw	79
  4052  002ECC  6E40               	movwf	xtoa@i^0,c
  4053  002ECE                     
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  4056  002ECE  0E00               	movlw	0
  4057  002ED0  0101               	movlb	1	; () banked
  4058  002ED2  6F81               	movwf	(_dbuf+79)& (0+255),b
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4061  002ED4  EF1F  F018         	goto	l4677
  4062  002ED8                     l4647:
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  4065  002ED8  0640               	decf	xtoa@i^0,f,c
  4066  002EDA  A0D8               	btfss	status,0,c
  4067  002EDC  0641               	decf	(xtoa@i+1)^0,f,c
  4068  002EDE                     
  4069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  4070  002EDE  0E0F               	movlw	15
  4071  002EE0  1438               	andwf	xtoa@n^0,w,c
  4072  002EE2  6E42               	movwf	xtoa@c^0,c
  4073  002EE4  6A43               	clrf	(xtoa@c+1)^0,c
  4074  002EE6                     
  4075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4076  002EE6  BE43               	btfsc	(xtoa@c+1)^0,7,c
  4077  002EE8  EF7F  F017         	goto	u5251
  4078  002EEC  5043               	movf	(xtoa@c+1)^0,w,c
  4079  002EEE  E109               	bnz	u5250
  4080  002EF0  0E0A               	movlw	10
  4081  002EF2  5C42               	subwf	xtoa@c^0,w,c
  4082  002EF4  A0D8               	btfss	status,0,c
  4083  002EF6  EF7F  F017         	goto	u5251
  4084  002EFA  EF81  F017         	goto	u5250
  4085  002EFE                     u5251:
  4086  002EFE  EF89  F017         	goto	l4655
  4087  002F02                     u5250:
  4088  002F02  0E57               	movlw	87
  4089  002F04  2442               	addwf	xtoa@c^0,w,c
  4090  002F06  6E42               	movwf	xtoa@c^0,c
  4091  002F08  0E00               	movlw	0
  4092  002F0A  2043               	addwfc	(xtoa@c+1)^0,w,c
  4093  002F0C  6E43               	movwf	(xtoa@c+1)^0,c
  4094  002F0E  EF8F  F017         	goto	l1248
  4095  002F12                     l4655:
  4096  002F12  0E30               	movlw	48
  4097  002F14  2442               	addwf	xtoa@c^0,w,c
  4098  002F16  6E42               	movwf	xtoa@c^0,c
  4099  002F18  0E00               	movlw	0
  4100  002F1A  2043               	addwfc	(xtoa@c+1)^0,w,c
  4101  002F1C  6E43               	movwf	(xtoa@c+1)^0,c
  4102  002F1E                     l1248:
  4103  002F1E  0EBF               	movlw	191
  4104  002F20  6E28               	movwf	??_xtoa^0,c
  4105  002F22  0EFF               	movlw	255
  4106  002F24  6E29               	movwf	(??_xtoa+1)^0,c
  4107  002F26  5027               	movf	xtoa@x^0,w,c
  4108  002F28  6E2A               	movwf	(??_xtoa+2)^0,c
  4109  002F2A  6A2B               	clrf	(??_xtoa+3)^0,c
  4110  002F2C  5028               	movf	??_xtoa^0,w,c
  4111  002F2E  262A               	addwf	(??_xtoa+2)^0,f,c
  4112  002F30  5029               	movf	(??_xtoa+1)^0,w,c
  4113  002F32  222B               	addwfc	(??_xtoa+3)^0,f,c
  4114  002F34  502B               	movf	(??_xtoa+3)^0,w,c
  4115  002F36  E10A               	bnz	u5260
  4116  002F38  0E1A               	movlw	26
  4117  002F3A  5C2A               	subwf	(??_xtoa+2)^0,w,c
  4118  002F3C  A0D8               	btfss	status,0,c
  4119  002F3E  EFA3  F017         	goto	u5261
  4120  002F42  EFA6  F017         	goto	u5260
  4121  002F46                     u5261:
  4122  002F46  0E01               	movlw	1
  4123  002F48  EFA7  F017         	goto	u5270
  4124  002F4C                     u5260:
  4125  002F4C  0E00               	movlw	0
  4126  002F4E                     u5270:
  4127  002F4E  6E30               	movwf	_xtoa$1678^0,c
  4128  002F50  6A31               	clrf	(_xtoa$1678+1)^0,c
  4129  002F52  5030               	movf	_xtoa$1678^0,w,c
  4130  002F54  1031               	iorwf	(_xtoa$1678+1)^0,w,c
  4131  002F56  B4D8               	btfsc	status,2,c
  4132  002F58  EFB0  F017         	goto	u5281
  4133  002F5C  EFB2  F017         	goto	u5280
  4134  002F60                     u5281:
  4135  002F60  EFE2  F017         	goto	l4669
  4136  002F64                     u5280:
  4137  002F64  0E9F               	movlw	159
  4138  002F66  6E28               	movwf	??_xtoa^0,c
  4139  002F68  0EFF               	movlw	255
  4140  002F6A  6E29               	movwf	(??_xtoa+1)^0,c
  4141  002F6C  0E20               	movlw	32
  4142  002F6E  1042               	iorwf	xtoa@c^0,w,c
  4143  002F70  6E2A               	movwf	(??_xtoa+2)^0,c
  4144  002F72  0E00               	movlw	0
  4145  002F74  1043               	iorwf	(xtoa@c+1)^0,w,c
  4146  002F76  6E2B               	movwf	(??_xtoa+3)^0,c
  4147  002F78  5028               	movf	??_xtoa^0,w,c
  4148  002F7A  262A               	addwf	(??_xtoa+2)^0,f,c
  4149  002F7C  5029               	movf	(??_xtoa+1)^0,w,c
  4150  002F7E  222B               	addwfc	(??_xtoa+3)^0,f,c
  4151  002F80  502B               	movf	(??_xtoa+3)^0,w,c
  4152  002F82  E10A               	bnz	u5290
  4153  002F84  0E1A               	movlw	26
  4154  002F86  5C2A               	subwf	(??_xtoa+2)^0,w,c
  4155  002F88  A0D8               	btfss	status,0,c
  4156  002F8A  EFC9  F017         	goto	u5291
  4157  002F8E  EFCC  F017         	goto	u5290
  4158  002F92                     u5291:
  4159  002F92  0E01               	movlw	1
  4160  002F94  EFCD  F017         	goto	u5300
  4161  002F98                     u5290:
  4162  002F98  0E00               	movlw	0
  4163  002F9A                     u5300:
  4164  002F9A  6E32               	movwf	_xtoa$1679^0,c
  4165  002F9C  6A33               	clrf	(_xtoa$1679+1)^0,c
  4166  002F9E  5032               	movf	_xtoa$1679^0,w,c
  4167  002FA0  1033               	iorwf	(_xtoa$1679+1)^0,w,c
  4168  002FA2  B4D8               	btfsc	status,2,c
  4169  002FA4  EFD6  F017         	goto	u5311
  4170  002FA8  EFD8  F017         	goto	u5310
  4171  002FAC                     u5311:
  4172  002FAC  EFE2  F017         	goto	l4669
  4173  002FB0                     u5310:
  4174  002FB0                     
  4175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4176  002FB0  C042  F008         	movff	xtoa@c,toupper@c
  4177  002FB4  C043  F009         	movff	xtoa@c+1,toupper@c+1
  4178  002FB8  EC5B  F020         	call	_toupper	;wreg free
  4179  002FBC  C008  F042         	movff	?_toupper,xtoa@c
  4180  002FC0  C009  F043         	movff	?_toupper+1,xtoa@c+1
  4181  002FC4                     l4669:
  4182                           
  4183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4184  002FC4  0E32               	movlw	low _dbuf
  4185  002FC6  2440               	addwf	xtoa@i^0,w,c
  4186  002FC8  6ED9               	movwf	fsr2l,c
  4187  002FCA  0E01               	movlw	high _dbuf
  4188  002FCC  2041               	addwfc	(xtoa@i+1)^0,w,c
  4189  002FCE  6EDA               	movwf	fsr2h,c
  4190  002FD0  C042  FFDF         	movff	xtoa@c,indf2
  4191  002FD4                     
  4192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  4193  002FD4  0634               	decf	xtoa@p^0,f,c
  4194  002FD6  A0D8               	btfss	status,0,c
  4195  002FD8  0635               	decf	(xtoa@p+1)^0,f,c
  4196  002FDA                     
  4197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  4198  002FDA  0636               	decf	xtoa@w^0,f,c
  4199  002FDC  A0D8               	btfss	status,0,c
  4200  002FDE  0637               	decf	(xtoa@w+1)^0,f,c
  4201  002FE0                     
  4202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4203  002FE0  C038  F028         	movff	xtoa@n,??_xtoa
  4204  002FE4  C039  F029         	movff	xtoa@n+1,??_xtoa+1
  4205  002FE8  C03A  F02A         	movff	xtoa@n+2,??_xtoa+2
  4206  002FEC  C03B  F02B         	movff	xtoa@n+3,??_xtoa+3
  4207  002FF0  C03C  F02C         	movff	xtoa@n+4,??_xtoa+4
  4208  002FF4  C03D  F02D         	movff	xtoa@n+5,??_xtoa+5
  4209  002FF8  C03E  F02E         	movff	xtoa@n+6,??_xtoa+6
  4210  002FFC  C03F  F02F         	movff	xtoa@n+7,??_xtoa+7
  4211  003000  0E05               	movlw	5
  4212  003002  EF0C  F018         	goto	u5320
  4213  003006                     u5325:
  4214  003006  90D8               	bcf	status,0,c
  4215  003008  322F               	rrcf	(??_xtoa+7)^0,f,c
  4216  00300A  322E               	rrcf	(??_xtoa+6)^0,f,c
  4217  00300C  322D               	rrcf	(??_xtoa+5)^0,f,c
  4218  00300E  322C               	rrcf	(??_xtoa+4)^0,f,c
  4219  003010  322B               	rrcf	(??_xtoa+3)^0,f,c
  4220  003012  322A               	rrcf	(??_xtoa+2)^0,f,c
  4221  003014  3229               	rrcf	(??_xtoa+1)^0,f,c
  4222  003016  3228               	rrcf	??_xtoa^0,f,c
  4223  003018                     u5320:
  4224  003018  2EE8               	decfsz	wreg,f,c
  4225  00301A  EF03  F018         	goto	u5325
  4226  00301E  C028  F038         	movff	??_xtoa,xtoa@n
  4227  003022  C029  F039         	movff	??_xtoa+1,xtoa@n+1
  4228  003026  C02A  F03A         	movff	??_xtoa+2,xtoa@n+2
  4229  00302A  C02B  F03B         	movff	??_xtoa+3,xtoa@n+3
  4230  00302E  C02C  F03C         	movff	??_xtoa+4,xtoa@n+4
  4231  003032  C02D  F03D         	movff	??_xtoa+5,xtoa@n+5
  4232  003036  C02E  F03E         	movff	??_xtoa+6,xtoa@n+6
  4233  00303A  C02F  F03F         	movff	??_xtoa+7,xtoa@n+7
  4234  00303E                     l4677:
  4235                           
  4236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4237  00303E  BE41               	btfsc	(xtoa@i+1)^0,7,c
  4238  003040  EF2B  F018         	goto	u5331
  4239  003044  5041               	movf	(xtoa@i+1)^0,w,c
  4240  003046  E109               	bnz	u5330
  4241  003048  0E02               	movlw	2
  4242  00304A  5C40               	subwf	xtoa@i^0,w,c
  4243  00304C  A0D8               	btfss	status,0,c
  4244  00304E  EF2B  F018         	goto	u5331
  4245  003052  EF2D  F018         	goto	u5330
  4246  003056                     u5331:
  4247  003056  EF5E  F018         	goto	l1262
  4248  00305A                     u5330:
  4249  00305A  5038               	movf	xtoa@n^0,w,c
  4250  00305C  1039               	iorwf	(xtoa@n+1)^0,w,c
  4251  00305E  103A               	iorwf	(xtoa@n+2)^0,w,c
  4252  003060  103B               	iorwf	(xtoa@n+3)^0,w,c
  4253  003062  103C               	iorwf	(xtoa@n+4)^0,w,c
  4254  003064  103D               	iorwf	(xtoa@n+5)^0,w,c
  4255  003066  103E               	iorwf	(xtoa@n+6)^0,w,c
  4256  003068  103F               	iorwf	(xtoa@n+7)^0,w,c
  4257  00306A  A4D8               	btfss	status,2,c
  4258  00306C  EF3A  F018         	goto	u5341
  4259  003070  EF3C  F018         	goto	u5340
  4260  003074                     u5341:
  4261  003074  EF6C  F017         	goto	l4647
  4262  003078                     u5340:
  4263  003078  BE35               	btfsc	(xtoa@p+1)^0,7,c
  4264  00307A  EF49  F018         	goto	u5350
  4265  00307E  5035               	movf	(xtoa@p+1)^0,w,c
  4266  003080  E106               	bnz	u5351
  4267  003082  0434               	decf	xtoa@p^0,w,c
  4268  003084  B0D8               	btfsc	status,0,c
  4269  003086  EF47  F018         	goto	u5351
  4270  00308A  EF49  F018         	goto	u5350
  4271  00308E                     u5351:
  4272  00308E  EF6C  F017         	goto	l4647
  4273  003092                     u5350:
  4274  003092  BE37               	btfsc	(xtoa@w+1)^0,7,c
  4275  003094  EF54  F018         	goto	u5361
  4276  003098  5037               	movf	(xtoa@w+1)^0,w,c
  4277  00309A  E108               	bnz	u5360
  4278  00309C  0436               	decf	xtoa@w^0,w,c
  4279  00309E  A0D8               	btfss	status,0,c
  4280  0030A0  EF54  F018         	goto	u5361
  4281  0030A4  EF56  F018         	goto	u5360
  4282  0030A8                     u5361:
  4283  0030A8  EF5E  F018         	goto	l1262
  4284  0030AC                     u5360:
  4285  0030AC  0100               	movlb	0	; () banked
  4286  0030AE  B3F9               	btfsc	_flags& (0+255),1,b
  4287  0030B0  EF5C  F018         	goto	u5371
  4288  0030B4  EF5E  F018         	goto	u5370
  4289  0030B8                     u5371:
  4290  0030B8  EF6C  F017         	goto	l4647
  4291  0030BC                     u5370:
  4292  0030BC                     l1262:
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4295  0030BC  0100               	movlb	0	; () banked
  4296  0030BE  A9F9               	btfss	_flags& (0+255),4,b
  4297  0030C0  EF64  F018         	goto	u5381
  4298  0030C4  EF66  F018         	goto	u5380
  4299  0030C8                     u5381:
  4300  0030C8  EF7C  F018         	goto	l4693
  4301  0030CC                     u5380:
  4302  0030CC                     
  4303                           ; BSR set to: 0
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  4305  0030CC  0640               	decf	xtoa@i^0,f,c
  4306  0030CE  A0D8               	btfss	status,0,c
  4307  0030D0  0641               	decf	(xtoa@i+1)^0,f,c
  4308  0030D2                     
  4309                           ; BSR set to: 0
  4310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4311  0030D2  0E32               	movlw	low _dbuf
  4312  0030D4  2440               	addwf	xtoa@i^0,w,c
  4313  0030D6  6ED9               	movwf	fsr2l,c
  4314  0030D8  0E01               	movlw	high _dbuf
  4315  0030DA  2041               	addwfc	(xtoa@i+1)^0,w,c
  4316  0030DC  6EDA               	movwf	fsr2h,c
  4317  0030DE  C027  FFDF         	movff	xtoa@x,indf2
  4318  0030E2                     
  4319                           ; BSR set to: 0
  4320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  4321  0030E2  0640               	decf	xtoa@i^0,f,c
  4322  0030E4  A0D8               	btfss	status,0,c
  4323  0030E6  0641               	decf	(xtoa@i+1)^0,f,c
  4324                           
  4325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  4326  0030E8  0E32               	movlw	low _dbuf
  4327  0030EA  2440               	addwf	xtoa@i^0,w,c
  4328  0030EC  6ED9               	movwf	fsr2l,c
  4329  0030EE  0E01               	movlw	high _dbuf
  4330  0030F0  2041               	addwfc	(xtoa@i+1)^0,w,c
  4331  0030F2  6EDA               	movwf	fsr2h,c
  4332  0030F4  0E30               	movlw	48
  4333  0030F6  6EDF               	movwf	indf2,c
  4334  0030F8                     l4693:
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  4338  0030F8  C01D  F012         	movff	xtoa@fp,pad@fp
  4339  0030FC  C01E  F013         	movff	xtoa@fp+1,pad@fp+1
  4340  003100  0E32               	movlw	low _dbuf
  4341  003102  2440               	addwf	xtoa@i^0,w,c
  4342  003104  6E14               	movwf	pad@buf^0,c
  4343  003106  0E01               	movlw	high _dbuf
  4344  003108  2041               	addwfc	(xtoa@i+1)^0,w,c
  4345  00310A  6E15               	movwf	(pad@buf+1)^0,c
  4346  00310C  C036  F016         	movff	xtoa@w,pad@p
  4347  003110  C037  F017         	movff	xtoa@w+1,pad@p+1
  4348  003114  EC10  F01E         	call	_pad	;wreg free
  4349  003118  C012  F01D         	movff	?_pad,?_xtoa
  4350  00311C  C013  F01E         	movff	?_pad+1,?_xtoa+1
  4351  003120  0012               	return		;funcret
  4352  003122                     __end_of_xtoa:
  4353                           	callstack 0
  4354                           
  4355 ;; *************** function _toupper *****************
  4356 ;; Defined at:
  4357 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  c               2    7[COMRAM] int 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  2    7[COMRAM] int 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4371 ;;      Params:         2       0       0       0       0       0       0       0       0
  4372 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4373 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4374 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4375 ;;Total ram usage:        8 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; Hardware stack levels required when called: 3
  4378 ;; This function calls:
  4379 ;;		_islower
  4380 ;; This function is called by:
  4381 ;;		_xtoa
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text9
  4386  0040B6                     __ptext9:
  4387                           	callstack 0
  4388  0040B6                     _toupper:
  4389                           	callstack 23
  4390  0040B6  0E9F               	movlw	159
  4391  0040B8  6E0A               	movwf	??_toupper^0,c
  4392  0040BA  0EFF               	movlw	255
  4393  0040BC  6E0B               	movwf	(??_toupper+1)^0,c
  4394  0040BE  C008  F00C         	movff	toupper@c,??_toupper+2
  4395  0040C2  C009  F00D         	movff	toupper@c+1,??_toupper+3
  4396  0040C6  500A               	movf	??_toupper^0,w,c
  4397  0040C8  260C               	addwf	(??_toupper+2)^0,f,c
  4398  0040CA  500B               	movf	(??_toupper+1)^0,w,c
  4399  0040CC  220D               	addwfc	(??_toupper+3)^0,f,c
  4400  0040CE  500D               	movf	(??_toupper+3)^0,w,c
  4401  0040D0  E10A               	bnz	u4580
  4402  0040D2  0E1A               	movlw	26
  4403  0040D4  5C0C               	subwf	(??_toupper+2)^0,w,c
  4404  0040D6  A0D8               	btfss	status,0,c
  4405  0040D8  EF70  F020         	goto	u4581
  4406  0040DC  EF73  F020         	goto	u4580
  4407  0040E0                     u4581:
  4408  0040E0  0E01               	movlw	1
  4409  0040E2  EF74  F020         	goto	u4590
  4410  0040E6                     u4580:
  4411  0040E6  0E00               	movlw	0
  4412  0040E8                     u4590:
  4413  0040E8  6E0E               	movwf	_toupper$1851^0,c
  4414  0040EA  6A0F               	clrf	(_toupper$1851+1)^0,c
  4415  0040EC  500E               	movf	_toupper$1851^0,w,c
  4416  0040EE  100F               	iorwf	(_toupper$1851+1)^0,w,c
  4417  0040F0  B4D8               	btfsc	status,2,c
  4418  0040F2  EF7D  F020         	goto	u4601
  4419  0040F6  EF7F  F020         	goto	u4600
  4420  0040FA                     u4601:
  4421  0040FA  EF85  F020         	goto	l1453
  4422  0040FE                     u4600:
  4423  0040FE  0E5F               	movlw	95
  4424  004100  1408               	andwf	toupper@c^0,w,c
  4425  004102  6E08               	movwf	?_toupper^0,c
  4426  004104  6A09               	clrf	(?_toupper+1)^0,c
  4427  004106  EF89  F020         	goto	l1458
  4428  00410A                     l1453:
  4429  00410A  C008  F008         	movff	toupper@c,?_toupper
  4430  00410E  C009  F009         	movff	toupper@c+1,?_toupper+1
  4431  004112                     l1458:
  4432  004112  0012               	return		;funcret
  4433  004114                     __end_of_toupper:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function _islower *****************
  4437 ;; Defined at:
  4438 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  c               2    1[COMRAM] int 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  2    1[COMRAM] int 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4452 ;;      Params:         2       0       0       0       0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4454 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4455 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4456 ;;Total ram usage:        6 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 2
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_toupper
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text10
  4467  0045C6                     __ptext10:
  4468                           	callstack 0
  4469  0045C6                     _islower:
  4470                           	callstack 23
  4471  0045C6  0E9F               	movlw	159
  4472  0045C8  6E04               	movwf	??_islower^0,c
  4473  0045CA  0EFF               	movlw	255
  4474  0045CC  6E05               	movwf	(??_islower+1)^0,c
  4475  0045CE  C002  F006         	movff	islower@c,??_islower+2
  4476  0045D2  C003  F007         	movff	islower@c+1,??_islower+3
  4477  0045D6  5004               	movf	??_islower^0,w,c
  4478  0045D8  2606               	addwf	(??_islower+2)^0,f,c
  4479  0045DA  5005               	movf	(??_islower+1)^0,w,c
  4480  0045DC  2207               	addwfc	(??_islower+3)^0,f,c
  4481  0045DE  5007               	movf	(??_islower+3)^0,w,c
  4482  0045E0  E10A               	bnz	u3580
  4483  0045E2  0E1A               	movlw	26
  4484  0045E4  5C06               	subwf	(??_islower+2)^0,w,c
  4485  0045E6  A0D8               	btfss	status,0,c
  4486  0045E8  EFF8  F022         	goto	u3581
  4487  0045EC  EFFB  F022         	goto	u3580
  4488  0045F0                     u3581:
  4489  0045F0  0E01               	movlw	1
  4490  0045F2  EFFC  F022         	goto	u3590
  4491  0045F6                     u3580:
  4492  0045F6  0E00               	movlw	0
  4493  0045F8                     u3590:
  4494  0045F8  6E02               	movwf	?_islower^0,c
  4495  0045FA  6A03               	clrf	(?_islower+1)^0,c
  4496  0045FC  0012               	return		;funcret
  4497  0045FE                     __end_of_islower:
  4498                           	callstack 0
  4499                           
  4500 ;; *************** function _isalpha *****************
  4501 ;; Defined at:
  4502 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  c               2    1[COMRAM] int 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;		None
  4507 ;; Return value:  Size  Location     Type
  4508 ;;                  2    1[COMRAM] int 
  4509 ;; Registers used:
  4510 ;;		wreg, status,2, status,0
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4516 ;;      Params:         2       0       0       0       0       0       0       0       0
  4517 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4518 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4519 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4520 ;;Total ram usage:        6 bytes
  4521 ;; Hardware stack levels used: 1
  4522 ;; Hardware stack levels required when called: 2
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		_xtoa
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text11
  4531  004550                     __ptext11:
  4532                           	callstack 0
  4533  004550                     _isalpha:
  4534                           	callstack 24
  4535  004550  0E9F               	movlw	159
  4536  004552  6E04               	movwf	??_isalpha^0,c
  4537  004554  0EFF               	movlw	255
  4538  004556  6E05               	movwf	(??_isalpha+1)^0,c
  4539  004558  0E20               	movlw	32
  4540  00455A  1002               	iorwf	isalpha@c^0,w,c
  4541  00455C  6E06               	movwf	(??_isalpha+2)^0,c
  4542  00455E  0E00               	movlw	0
  4543  004560  1003               	iorwf	(isalpha@c+1)^0,w,c
  4544  004562  6E07               	movwf	(??_isalpha+3)^0,c
  4545  004564  5004               	movf	??_isalpha^0,w,c
  4546  004566  2606               	addwf	(??_isalpha+2)^0,f,c
  4547  004568  5005               	movf	(??_isalpha+1)^0,w,c
  4548  00456A  2207               	addwfc	(??_isalpha+3)^0,f,c
  4549  00456C  5007               	movf	(??_isalpha+3)^0,w,c
  4550  00456E  E10A               	bnz	u4560
  4551  004570  0E1A               	movlw	26
  4552  004572  5C06               	subwf	(??_isalpha+2)^0,w,c
  4553  004574  A0D8               	btfss	status,0,c
  4554  004576  EFBF  F022         	goto	u4561
  4555  00457A  EFC2  F022         	goto	u4560
  4556  00457E                     u4561:
  4557  00457E  0E01               	movlw	1
  4558  004580  EFC3  F022         	goto	u4570
  4559  004584                     u4560:
  4560  004584  0E00               	movlw	0
  4561  004586                     u4570:
  4562  004586  6E02               	movwf	?_isalpha^0,c
  4563  004588  6A03               	clrf	(?_isalpha+1)^0,c
  4564  00458A  0012               	return		;funcret
  4565  00458C                     __end_of_isalpha:
  4566                           	callstack 0
  4567                           
  4568 ;; *************** function _strncmp *****************
  4569 ;; Defined at:
  4570 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  _l              2    1[COMRAM] PTR const unsigned char 
  4573 ;;		 -> vfpfcnvrt@ct(3), 
  4574 ;;  _r              2    3[COMRAM] PTR const unsigned char 
  4575 ;;		 -> STR_33(3), 
  4576 ;;  n               2    5[COMRAM] unsigned int 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  r               2   10[COMRAM] PTR const unsigned char 
  4579 ;;		 -> STR_33(3), 
  4580 ;;  l               2    8[COMRAM] PTR const unsigned char 
  4581 ;;		 -> vfpfcnvrt@ct(3), 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  2    1[COMRAM] int 
  4584 ;; Registers used:
  4585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4591 ;;      Params:         6       0       0       0       0       0       0       0       0
  4592 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4593 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4594 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4595 ;;Total ram usage:       11 bytes
  4596 ;; Hardware stack levels used: 1
  4597 ;; Hardware stack levels required when called: 2
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_vfpfcnvrt
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text12
  4606  003A80                     __ptext12:
  4607                           	callstack 0
  4608  003A80                     _strncmp:
  4609                           	callstack 25
  4610  003A80  C002  F009         	movff	strncmp@_l,strncmp@l
  4611  003A84  C003  F00A         	movff	strncmp@_l+1,strncmp@l+1
  4612  003A88  C004  F00B         	movff	strncmp@_r,strncmp@r
  4613  003A8C  C005  F00C         	movff	strncmp@_r+1,strncmp@r+1
  4614  003A90  0606               	decf	strncmp@n^0,f,c
  4615  003A92  A0D8               	btfss	status,0,c
  4616  003A94  0607               	decf	(strncmp@n+1)^0,f,c
  4617  003A96  2806               	incf	strncmp@n^0,w,c
  4618  003A98  E106               	bnz	u5461
  4619  003A9A  2807               	incf	(strncmp@n+1)^0,w,c
  4620  003A9C  A4D8               	btfss	status,2,c
  4621  003A9E  EF53  F01D         	goto	u5461
  4622  003AA2  EF55  F01D         	goto	u5460
  4623  003AA6                     u5461:
  4624  003AA6  EF62  F01D         	goto	l4747
  4625  003AAA                     u5460:
  4626  003AAA  0E00               	movlw	0
  4627  003AAC  6E03               	movwf	(?_strncmp+1)^0,c
  4628  003AAE  0E00               	movlw	0
  4629  003AB0  6E02               	movwf	?_strncmp^0,c
  4630  003AB2  EFAA  F01D         	goto	l1430
  4631  003AB6                     l4745:
  4632  003AB6  4A09               	infsnz	strncmp@l^0,f,c
  4633  003AB8  2A0A               	incf	(strncmp@l+1)^0,f,c
  4634  003ABA  4A0B               	infsnz	strncmp@r^0,f,c
  4635  003ABC  2A0C               	incf	(strncmp@r+1)^0,f,c
  4636  003ABE  0606               	decf	strncmp@n^0,f,c
  4637  003AC0  A0D8               	btfss	status,0,c
  4638  003AC2  0607               	decf	(strncmp@n+1)^0,f,c
  4639  003AC4                     l4747:
  4640  003AC4  C009  FFD9         	movff	strncmp@l,fsr2l
  4641  003AC8  C00A  FFDA         	movff	strncmp@l+1,fsr2h
  4642  003ACC  50DF               	movf	indf2,w,c
  4643  003ACE  B4D8               	btfsc	status,2,c
  4644  003AD0  EF6C  F01D         	goto	u5471
  4645  003AD4  EF6E  F01D         	goto	u5470
  4646  003AD8                     u5471:
  4647  003AD8  EF99  F01D         	goto	l4755
  4648  003ADC                     u5470:
  4649  003ADC  C00B  FFF6         	movff	strncmp@r,tblptrl
  4650  003AE0  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  4651  003AE4                     	if	0	;tblptru may be non-zero
  4652  003AE4                     	endif
  4653  003AE4                     	if	0	;tblptru may be non-zero
  4654  003AE4                     	endif
  4655  003AE4  0008               	tblrd		*
  4656  003AE6  50F5               	movf	tablat,w,c
  4657  003AE8  0900               	iorlw	0
  4658  003AEA  B4D8               	btfsc	status,2,c
  4659  003AEC  EF7A  F01D         	goto	u5481
  4660  003AF0  EF7C  F01D         	goto	u5480
  4661  003AF4                     u5481:
  4662  003AF4  EF99  F01D         	goto	l4755
  4663  003AF8                     u5480:
  4664  003AF8  5006               	movf	strncmp@n^0,w,c
  4665  003AFA  1007               	iorwf	(strncmp@n+1)^0,w,c
  4666  003AFC  B4D8               	btfsc	status,2,c
  4667  003AFE  EF83  F01D         	goto	u5491
  4668  003B02  EF85  F01D         	goto	u5490
  4669  003B06                     u5491:
  4670  003B06  EF99  F01D         	goto	l4755
  4671  003B0A                     u5490:
  4672  003B0A  C009  FFD9         	movff	strncmp@l,fsr2l
  4673  003B0E  C00A  FFDA         	movff	strncmp@l+1,fsr2h
  4674  003B12  50DF               	movf	indf2,w,c
  4675  003B14  6E08               	movwf	??_strncmp^0,c
  4676  003B16  C00B  FFF6         	movff	strncmp@r,tblptrl
  4677  003B1A  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  4678  003B1E                     	if	0	;tblptru may be non-zero
  4679  003B1E                     	endif
  4680  003B1E                     	if	0	;tblptru may be non-zero
  4681  003B1E                     	endif
  4682  003B1E  0008               	tblrd		*
  4683  003B20  50F5               	movf	tablat,w,c
  4684  003B22  1808               	xorwf	??_strncmp^0,w,c
  4685  003B24  B4D8               	btfsc	status,2,c
  4686  003B26  EF97  F01D         	goto	u5501
  4687  003B2A  EF99  F01D         	goto	u5500
  4688  003B2E                     u5501:
  4689  003B2E  EF5B  F01D         	goto	l4745
  4690  003B32                     u5500:
  4691  003B32                     l4755:
  4692  003B32  C009  FFD9         	movff	strncmp@l,fsr2l
  4693  003B36  C00A  FFDA         	movff	strncmp@l+1,fsr2h
  4694  003B3A  50DF               	movf	indf2,w,c
  4695  003B3C  6E08               	movwf	??_strncmp^0,c
  4696  003B3E  C00B  FFF6         	movff	strncmp@r,tblptrl
  4697  003B42  C00C  FFF7         	movff	strncmp@r+1,tblptrh
  4698  003B46                     	if	0	;tblptru may be non-zero
  4699  003B46                     	endif
  4700  003B46                     	if	0	;tblptru may be non-zero
  4701  003B46                     	endif
  4702  003B46  0008               	tblrd		*
  4703  003B48  50F5               	movf	tablat,w,c
  4704  003B4A  5C08               	subwf	??_strncmp^0,w,c
  4705  003B4C  6E02               	movwf	?_strncmp^0,c
  4706  003B4E  6A03               	clrf	(?_strncmp+1)^0,c
  4707  003B50  A0D8               	btfss	status,0,c
  4708  003B52  0603               	decf	(?_strncmp+1)^0,f,c
  4709  003B54                     l1430:
  4710  003B54  0012               	return		;funcret
  4711  003B56                     __end_of_strncmp:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function _efgtoa *****************
  4715 ;; Defined at:
  4716 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  4719 ;;		 -> sprintf@f(6), 
  4720 ;;  f               4   10[BANK0 ] PTR struct _IO_FILE
  4721 ;;  c               1   14[BANK0 ] unsigned char 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  u               4   72[BANK0 ] unsigned char 
  4724 ;;  g               4   64[BANK0 ] unsigned char 
  4725 ;;  l               4   58[BANK0 ] unsigned char 
  4726 ;;  h               4   54[BANK0 ] unsigned char 
  4727 ;;  ou              4   40[BANK0 ] unsigned char 
  4728 ;;  n               2   70[BANK0 ] int 
  4729 ;;  e               2   68[BANK0 ] int 
  4730 ;;  i               2   62[BANK0 ] int 
  4731 ;;  w               2   50[BANK0 ] int 
  4732 ;;  p               2   48[BANK0 ] int 
  4733 ;;  sign            2   46[BANK0 ] int 
  4734 ;;  d               2   44[BANK0 ] int 
  4735 ;;  m               2   38[BANK0 ] int 
  4736 ;;  ne              2   36[BANK0 ] int 
  4737 ;;  pp              2   34[BANK0 ] int 
  4738 ;;  t               2   32[BANK0 ] int 
  4739 ;;  mode            1   53[BANK0 ] unsigned char 
  4740 ;;  nmode           1   52[BANK0 ] unsigned char 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  2    8[BANK0 ] int 
  4743 ;; Registers used:
  4744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4750 ;;      Params:         0       7       0       0       0       0       0       0       0
  4751 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4752 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4753 ;;      Totals:         0      68       0       0       0       0       0       0       0
  4754 ;;Total ram usage:       68 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; Hardware stack levels required when called: 6
  4757 ;; This function calls:
  4758 ;;		___awdiv
  4759 ;;		___awmod
  4760 ;;		___fladd
  4761 ;;		___fldiv
  4762 ;;		___fleq
  4763 ;;		___flge
  4764 ;;		___flmul
  4765 ;;		___flneg
  4766 ;;		___flsub
  4767 ;;		___fltol
  4768 ;;		___fpclassifyf
  4769 ;;		_floorf
  4770 ;;		_isupper
  4771 ;;		_pad
  4772 ;;		_strcpy
  4773 ;;		_tolower
  4774 ;; This function is called by:
  4775 ;;		_vfpfcnvrt
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text13
  4780  000858                     __ptext13:
  4781                           	callstack 0
  4782  000858                     _efgtoa:
  4783                           	callstack 21
  4784  000858                     
  4785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4786  000858  0E00               	movlw	0
  4787  00085A  0100               	movlb	0	; () banked
  4788  00085C  6F8F               	movwf	(efgtoa@sign+1)& (0+255),b
  4789  00085E  0E00               	movlw	0
  4790  000860  6F8E               	movwf	efgtoa@sign& (0+255),b
  4791  000862                     
  4792                           ; BSR set to: 0
  4793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4794  000862  C06A  F0A0         	movff	efgtoa@f,efgtoa@g
  4795  000866  C06B  F0A1         	movff	efgtoa@f+1,efgtoa@g+1
  4796  00086A  C06C  F0A2         	movff	efgtoa@f+2,efgtoa@g+2
  4797  00086E  C06D  F0A3         	movff	efgtoa@f+3,efgtoa@g+3
  4798  000872                     
  4799                           ; BSR set to: 0
  4800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4801  000872  BFA3               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4802  000874  EF40  F004         	goto	u6280
  4803  000878  EF3E  F004         	goto	u6281
  4804  00087C                     u6281:
  4805  00087C  EF56  F004         	goto	l5543
  4806  000880                     u6280:
  4807  000880                     
  4808                           ; BSR set to: 0
  4809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4810  000880  0E00               	movlw	0
  4811  000882  6F8F               	movwf	(efgtoa@sign+1)& (0+255),b
  4812  000884  0E01               	movlw	1
  4813  000886  6F8E               	movwf	efgtoa@sign& (0+255),b
  4814  000888                     
  4815                           ; BSR set to: 0
  4816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4817  000888  C0A0  F002         	movff	efgtoa@g,___flneg@f1
  4818  00088C  C0A1  F003         	movff	efgtoa@g+1,___flneg@f1+1
  4819  000890  C0A2  F004         	movff	efgtoa@g+2,___flneg@f1+2
  4820  000894  C0A3  F005         	movff	efgtoa@g+3,___flneg@f1+3
  4821  000898  EC1B  F023         	call	___flneg	;wreg free
  4822  00089C  C002  F0A0         	movff	?___flneg,efgtoa@g
  4823  0008A0  C003  F0A1         	movff	?___flneg+1,efgtoa@g+1
  4824  0008A4  C004  F0A2         	movff	?___flneg+2,efgtoa@g+2
  4825  0008A8  C005  F0A3         	movff	?___flneg+3,efgtoa@g+3
  4826  0008AC                     l5543:
  4827                           
  4828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4829  0008AC  0E00               	movlw	0
  4830  0008AE  0100               	movlb	0	; () banked
  4831  0008B0  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  4832  0008B2  0E00               	movlw	0
  4833  0008B4  6FA6               	movwf	efgtoa@n& (0+255),b
  4834  0008B6                     
  4835                           ; BSR set to: 0
  4836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4837  0008B6  C0F5  F092         	movff	_width,efgtoa@w
  4838  0008BA  C0F6  F093         	movff	_width+1,efgtoa@w+1
  4839  0008BE                     
  4840                           ; BSR set to: 0
  4841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4842  0008BE  518E               	movf	efgtoa@sign& (0+255),w,b
  4843  0008C0  118F               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4844  0008C2  A4D8               	btfss	status,2,c
  4845  0008C4  EF66  F004         	goto	u6291
  4846  0008C8  EF68  F004         	goto	u6290
  4847  0008CC                     u6291:
  4848  0008CC  EF6F  F004         	goto	l5551
  4849  0008D0                     u6290:
  4850  0008D0                     
  4851                           ; BSR set to: 0
  4852  0008D0  A5F9               	btfss	_flags& (0+255),2,b
  4853  0008D2  EF6D  F004         	goto	u6301
  4854  0008D6  EF6F  F004         	goto	u6300
  4855  0008DA                     u6301:
  4856  0008DA  EF89  F004         	goto	l5563
  4857  0008DE                     u6300:
  4858  0008DE                     l5551:
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4862  0008DE  518E               	movf	efgtoa@sign& (0+255),w,b
  4863  0008E0  118F               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4864  0008E2  A4D8               	btfss	status,2,c
  4865  0008E4  EF76  F004         	goto	u6311
  4866  0008E8  EF78  F004         	goto	u6310
  4867  0008EC                     u6311:
  4868  0008EC  EF7E  F004         	goto	l5555
  4869  0008F0                     u6310:
  4870  0008F0                     
  4871                           ; BSR set to: 0
  4872  0008F0  0E00               	movlw	0
  4873  0008F2  6F75               	movwf	(_efgtoa$1656+1)& (0+255),b
  4874  0008F4  0E2B               	movlw	43
  4875  0008F6  6F74               	movwf	_efgtoa$1656& (0+255),b
  4876  0008F8  EF82  F004         	goto	l5557
  4877  0008FC                     l5555:
  4878                           
  4879                           ; BSR set to: 0
  4880  0008FC  0E00               	movlw	0
  4881  0008FE  6F75               	movwf	(_efgtoa$1656+1)& (0+255),b
  4882  000900  0E2D               	movlw	45
  4883  000902  6F74               	movwf	_efgtoa$1656& (0+255),b
  4884  000904                     l5557:
  4885                           
  4886                           ; BSR set to: 0
  4887  000904  C074  F132         	movff	_efgtoa$1656,_dbuf
  4888  000908                     
  4889                           ; BSR set to: 0
  4890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4891  000908  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  4892  00090A  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  4893  00090C                     
  4894                           ; BSR set to: 0
  4895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4896  00090C  0792               	decf	efgtoa@w& (0+255),f,b
  4897  00090E  A0D8               	btfss	status,0,c
  4898  000910  0793               	decf	(efgtoa@w+1)& (0+255),f,b
  4899  000912                     l5563:
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4903  000912  C0A0  F002         	movff	efgtoa@g,___fpclassifyf@x
  4904  000916  C0A1  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4905  00091A  C0A2  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4906  00091E  C0A3  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4907  000922  ECC1  F01C         	call	___fpclassifyf	;wreg free
  4908  000926  0402               	decf	?___fpclassifyf^0,w,c
  4909  000928  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  4910  00092A  A4D8               	btfss	status,2,c
  4911  00092C  EF9A  F004         	goto	u6321
  4912  000930  EF9C  F004         	goto	u6320
  4913  000934                     u6321:
  4914  000934  EFF3  F004         	goto	l5581
  4915  000938                     u6320:
  4916  000938  0EBF               	movlw	191
  4917  00093A  0100               	movlb	0	; () banked
  4918  00093C  6F6F               	movwf	??_efgtoa& (0+255),b
  4919  00093E  0EFF               	movlw	255
  4920  000940  6F70               	movwf	(??_efgtoa+1)& (0+255),b
  4921  000942  516E               	movf	efgtoa@c& (0+255),w,b
  4922  000944  6F71               	movwf	(??_efgtoa+2)& (0+255),b
  4923  000946  6B72               	clrf	(??_efgtoa+3)& (0+255),b
  4924  000948  516F               	movf	??_efgtoa& (0+255),w,b
  4925  00094A  2771               	addwf	(??_efgtoa+2)& (0+255),f,b
  4926  00094C  5170               	movf	(??_efgtoa+1)& (0+255),w,b
  4927  00094E  2372               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4928  000950  5172               	movf	(??_efgtoa+3)& (0+255),w,b
  4929  000952  E10A               	bnz	u6330
  4930  000954  0E1A               	movlw	26
  4931  000956  5D71               	subwf	(??_efgtoa+2)& (0+255),w,b
  4932  000958  A0D8               	btfss	status,0,c
  4933  00095A  EFB1  F004         	goto	u6331
  4934  00095E  EFB4  F004         	goto	u6330
  4935  000962                     u6331:
  4936  000962  0E01               	movlw	1
  4937  000964  EFB5  F004         	goto	u6340
  4938  000968                     u6330:
  4939  000968  0E00               	movlw	0
  4940  00096A                     u6340:
  4941  00096A  6F76               	movwf	_efgtoa$1657& (0+255),b
  4942  00096C  6B77               	clrf	(_efgtoa$1657+1)& (0+255),b
  4943  00096E                     
  4944                           ; BSR set to: 0
  4945  00096E  5176               	movf	_efgtoa$1657& (0+255),w,b
  4946  000970  1177               	iorwf	(_efgtoa$1657+1)& (0+255),w,b
  4947  000972  B4D8               	btfsc	status,2,c
  4948  000974  EFBE  F004         	goto	u6351
  4949  000978  EFC0  F004         	goto	u6350
  4950  00097C                     u6351:
  4951  00097C  EFCE  F004         	goto	l5573
  4952  000980                     u6350:
  4953  000980                     
  4954                           ; BSR set to: 0
  4955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4956  000980  0E32               	movlw	low _dbuf
  4957  000982  25A6               	addwf	efgtoa@n& (0+255),w,b
  4958  000984  6E02               	movwf	strcpy@dest^0,c
  4959  000986  0E01               	movlw	high _dbuf
  4960  000988  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4961  00098A  6E03               	movwf	(strcpy@dest+1)^0,c
  4962  00098C  0E16               	movlw	low STR_23
  4963  00098E  6E04               	movwf	strcpy@src^0,c
  4964  000990  0E08               	movlw	high STR_23
  4965  000992  6E05               	movwf	(strcpy@src+1)^0,c
  4966  000994  ECB9  F020         	call	_strcpy	;wreg free
  4967                           
  4968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4969  000998  EFDA  F004         	goto	l5575
  4970  00099C                     l5573:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4974  00099C  0E32               	movlw	low _dbuf
  4975  00099E  25A6               	addwf	efgtoa@n& (0+255),w,b
  4976  0009A0  6E02               	movwf	strcpy@dest^0,c
  4977  0009A2  0E01               	movlw	high _dbuf
  4978  0009A4  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4979  0009A6  6E03               	movwf	(strcpy@dest+1)^0,c
  4980  0009A8  0E1E               	movlw	low STR_24
  4981  0009AA  6E04               	movwf	strcpy@src^0,c
  4982  0009AC  0E08               	movlw	high STR_24
  4983  0009AE  6E05               	movwf	(strcpy@src+1)^0,c
  4984  0009B0  ECB9  F020         	call	_strcpy	;wreg free
  4985  0009B4                     l5575:
  4986                           
  4987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4988  0009B4  0100               	movlb	0	; () banked
  4989  0009B6  0EFD               	movlw	253
  4990  0009B8  2792               	addwf	efgtoa@w& (0+255),f,b
  4991  0009BA  0EFF               	movlw	255
  4992  0009BC  2393               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4993  0009BE                     l5577:
  4994                           
  4995                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4996  0009BE  C068  F012         	movff	efgtoa@fp,pad@fp
  4997  0009C2  C069  F013         	movff	efgtoa@fp+1,pad@fp+1
  4998  0009C6  0E32               	movlw	low _dbuf
  4999  0009C8  6E14               	movwf	pad@buf^0,c
  5000  0009CA  0E01               	movlw	high _dbuf
  5001  0009CC  6E15               	movwf	(pad@buf+1)^0,c
  5002  0009CE  C092  F016         	movff	efgtoa@w,pad@p
  5003  0009D2  C093  F017         	movff	efgtoa@w+1,pad@p+1
  5004  0009D6  EC10  F01E         	call	_pad	;wreg free
  5005  0009DA  C012  F068         	movff	?_pad,?_efgtoa
  5006  0009DE  C013  F069         	movff	?_pad+1,?_efgtoa+1
  5007  0009E2  EF57  F00A         	goto	l1159
  5008  0009E6                     l5581:
  5009                           
  5010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5011  0009E6  C0A0  F002         	movff	efgtoa@g,___fpclassifyf@x
  5012  0009EA  C0A1  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5013  0009EE  C0A2  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5014  0009F2  C0A3  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5015  0009F6  ECC1  F01C         	call	___fpclassifyf	;wreg free
  5016  0009FA  5002               	movf	?___fpclassifyf^0,w,c
  5017  0009FC  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  5018  0009FE  A4D8               	btfss	status,2,c
  5019  000A00  EF04  F005         	goto	u6361
  5020  000A04  EF06  F005         	goto	u6360
  5021  000A08                     u6361:
  5022  000A08  EF46  F005         	goto	l5599
  5023  000A0C                     u6360:
  5024  000A0C  0EBF               	movlw	191
  5025  000A0E  0100               	movlb	0	; () banked
  5026  000A10  6F6F               	movwf	??_efgtoa& (0+255),b
  5027  000A12  0EFF               	movlw	255
  5028  000A14  6F70               	movwf	(??_efgtoa+1)& (0+255),b
  5029  000A16  516E               	movf	efgtoa@c& (0+255),w,b
  5030  000A18  6F71               	movwf	(??_efgtoa+2)& (0+255),b
  5031  000A1A  6B72               	clrf	(??_efgtoa+3)& (0+255),b
  5032  000A1C  516F               	movf	??_efgtoa& (0+255),w,b
  5033  000A1E  2771               	addwf	(??_efgtoa+2)& (0+255),f,b
  5034  000A20  5170               	movf	(??_efgtoa+1)& (0+255),w,b
  5035  000A22  2372               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5036  000A24  5172               	movf	(??_efgtoa+3)& (0+255),w,b
  5037  000A26  E10A               	bnz	u6370
  5038  000A28  0E1A               	movlw	26
  5039  000A2A  5D71               	subwf	(??_efgtoa+2)& (0+255),w,b
  5040  000A2C  A0D8               	btfss	status,0,c
  5041  000A2E  EF1B  F005         	goto	u6371
  5042  000A32  EF1E  F005         	goto	u6370
  5043  000A36                     u6371:
  5044  000A36  0E01               	movlw	1
  5045  000A38  EF1F  F005         	goto	u6380
  5046  000A3C                     u6370:
  5047  000A3C  0E00               	movlw	0
  5048  000A3E                     u6380:
  5049  000A3E  6F78               	movwf	_efgtoa$1662& (0+255),b
  5050  000A40  6B79               	clrf	(_efgtoa$1662+1)& (0+255),b
  5051  000A42                     
  5052                           ; BSR set to: 0
  5053  000A42  5178               	movf	_efgtoa$1662& (0+255),w,b
  5054  000A44  1179               	iorwf	(_efgtoa$1662+1)& (0+255),w,b
  5055  000A46  B4D8               	btfsc	status,2,c
  5056  000A48  EF28  F005         	goto	u6391
  5057  000A4C  EF2A  F005         	goto	u6390
  5058  000A50                     u6391:
  5059  000A50  EF38  F005         	goto	l5591
  5060  000A54                     u6390:
  5061  000A54                     
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  5064  000A54  0E32               	movlw	low _dbuf
  5065  000A56  25A6               	addwf	efgtoa@n& (0+255),w,b
  5066  000A58  6E02               	movwf	strcpy@dest^0,c
  5067  000A5A  0E01               	movlw	high _dbuf
  5068  000A5C  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5069  000A5E  6E03               	movwf	(strcpy@dest+1)^0,c
  5070  000A60  0E1A               	movlw	low STR_27
  5071  000A62  6E04               	movwf	strcpy@src^0,c
  5072  000A64  0E08               	movlw	high STR_27
  5073  000A66  6E05               	movwf	(strcpy@src+1)^0,c
  5074  000A68  ECB9  F020         	call	_strcpy	;wreg free
  5075                           
  5076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  5077  000A6C  EFDA  F004         	goto	l5575
  5078  000A70                     l5591:
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  5082  000A70  0E32               	movlw	low _dbuf
  5083  000A72  25A6               	addwf	efgtoa@n& (0+255),w,b
  5084  000A74  6E02               	movwf	strcpy@dest^0,c
  5085  000A76  0E01               	movlw	high _dbuf
  5086  000A78  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5087  000A7A  6E03               	movwf	(strcpy@dest+1)^0,c
  5088  000A7C  0E22               	movlw	low STR_28
  5089  000A7E  6E04               	movwf	strcpy@src^0,c
  5090  000A80  0E08               	movlw	high STR_28
  5091  000A82  6E05               	movwf	(strcpy@src+1)^0,c
  5092  000A84  ECB9  F020         	call	_strcpy	;wreg free
  5093  000A88  EFDA  F004         	goto	l5575
  5094  000A8C                     l5599:
  5095                           
  5096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5097  000A8C  0E00               	movlw	0
  5098  000A8E  0100               	movlb	0	; () banked
  5099  000A90  6FA8               	movwf	efgtoa@u& (0+255),b
  5100  000A92  0E00               	movlw	0
  5101  000A94  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  5102  000A96  0E80               	movlw	128
  5103  000A98  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  5104  000A9A  0E3F               	movlw	63
  5105  000A9C  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  5106                           
  5107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5108  000A9E  0E00               	movlw	0
  5109  000AA0  6FA5               	movwf	(efgtoa@e+1)& (0+255),b
  5110  000AA2  0E00               	movlw	0
  5111  000AA4  6FA4               	movwf	efgtoa@e& (0+255),b
  5112  000AA6                     
  5113                           ; BSR set to: 0
  5114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5115  000AA6  C0A0  F002         	movff	efgtoa@g,___fleq@ff1
  5116  000AAA  C0A1  F003         	movff	efgtoa@g+1,___fleq@ff1+1
  5117  000AAE  C0A2  F004         	movff	efgtoa@g+2,___fleq@ff1+2
  5118  000AB2  C0A3  F005         	movff	efgtoa@g+3,___fleq@ff1+3
  5119  000AB6  0E00               	movlw	0
  5120  000AB8  6E06               	movwf	___fleq@ff2^0,c
  5121  000ABA  0E00               	movlw	0
  5122  000ABC  6E07               	movwf	(___fleq@ff2+1)^0,c
  5123  000ABE  0E00               	movlw	0
  5124  000AC0  6E08               	movwf	(___fleq@ff2+2)^0,c
  5125  000AC2  0E00               	movlw	0
  5126  000AC4  6E09               	movwf	(___fleq@ff2+3)^0,c
  5127  000AC6  EC2D  F01F         	call	___fleq	;wreg free
  5128  000ACA  B0D8               	btfsc	status,0,c
  5129  000ACC  EF6A  F005         	goto	u6401
  5130  000AD0  EF6C  F005         	goto	u6400
  5131  000AD4                     u6401:
  5132  000AD4  EFEF  F005         	goto	l5617
  5133  000AD8                     u6400:
  5134  000AD8  EF8B  F005         	goto	l5609
  5135  000ADC                     l5605:
  5136                           
  5137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5138  000ADC  C0A8  F016         	movff	efgtoa@u,___flmul@b
  5139  000AE0  C0A9  F017         	movff	efgtoa@u+1,___flmul@b+1
  5140  000AE4  C0AA  F018         	movff	efgtoa@u+2,___flmul@b+2
  5141  000AE8  C0AB  F019         	movff	efgtoa@u+3,___flmul@b+3
  5142  000AEC  0E00               	movlw	0
  5143  000AEE  6E1A               	movwf	___flmul@a^0,c
  5144  000AF0  0E00               	movlw	0
  5145  000AF2  6E1B               	movwf	(___flmul@a+1)^0,c
  5146  000AF4  0E20               	movlw	32
  5147  000AF6  6E1C               	movwf	(___flmul@a+2)^0,c
  5148  000AF8  0E41               	movlw	65
  5149  000AFA  6E1D               	movwf	(___flmul@a+3)^0,c
  5150  000AFC  ECBF  F00F         	call	___flmul	;wreg free
  5151  000B00  C016  F0A8         	movff	?___flmul,efgtoa@u
  5152  000B04  C017  F0A9         	movff	?___flmul+1,efgtoa@u+1
  5153  000B08  C018  F0AA         	movff	?___flmul+2,efgtoa@u+2
  5154  000B0C  C019  F0AB         	movff	?___flmul+3,efgtoa@u+3
  5155  000B10                     
  5156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5157  000B10  0100               	movlb	0	; () banked
  5158  000B12  4BA4               	infsnz	efgtoa@e& (0+255),f,b
  5159  000B14  2BA5               	incf	(efgtoa@e+1)& (0+255),f,b
  5160  000B16                     l5609:
  5161                           
  5162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5163  000B16  C0A0  F02F         	movff	efgtoa@g,___flge@ff1
  5164  000B1A  C0A1  F030         	movff	efgtoa@g+1,___flge@ff1+1
  5165  000B1E  C0A2  F031         	movff	efgtoa@g+2,___flge@ff1+2
  5166  000B22  C0A3  F032         	movff	efgtoa@g+3,___flge@ff1+3
  5167  000B26  0E00               	movlw	0
  5168  000B28  6E1A               	movwf	___flmul@a^0,c
  5169  000B2A  0E00               	movlw	0
  5170  000B2C  6E1B               	movwf	(___flmul@a+1)^0,c
  5171  000B2E  0E20               	movlw	32
  5172  000B30  6E1C               	movwf	(___flmul@a+2)^0,c
  5173  000B32  0E41               	movlw	65
  5174  000B34  6E1D               	movwf	(___flmul@a+3)^0,c
  5175  000B36  C0A8  F016         	movff	efgtoa@u,___flmul@b
  5176  000B3A  C0A9  F017         	movff	efgtoa@u+1,___flmul@b+1
  5177  000B3E  C0AA  F018         	movff	efgtoa@u+2,___flmul@b+2
  5178  000B42  C0AB  F019         	movff	efgtoa@u+3,___flmul@b+3
  5179  000B46  ECBF  F00F         	call	___flmul	;wreg free
  5180  000B4A  C016  F033         	movff	?___flmul,___flge@ff2
  5181  000B4E  C017  F034         	movff	?___flmul+1,___flge@ff2+1
  5182  000B52  C018  F035         	movff	?___flmul+2,___flge@ff2+2
  5183  000B56  C019  F036         	movff	?___flmul+3,___flge@ff2+3
  5184  000B5A  ECC0  F01B         	call	___flge	;wreg free
  5185  000B5E  B0D8               	btfsc	status,0,c
  5186  000B60  EFB4  F005         	goto	u6411
  5187  000B64  EFB6  F005         	goto	u6410
  5188  000B68                     u6411:
  5189  000B68  EF6E  F005         	goto	l5605
  5190  000B6C                     u6410:
  5191  000B6C  EFD6  F005         	goto	l5615
  5192  000B70                     l5611:
  5193                           
  5194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5195  000B70  C0A8  F02F         	movff	efgtoa@u,___fldiv@b
  5196  000B74  C0A9  F030         	movff	efgtoa@u+1,___fldiv@b+1
  5197  000B78  C0AA  F031         	movff	efgtoa@u+2,___fldiv@b+2
  5198  000B7C  C0AB  F032         	movff	efgtoa@u+3,___fldiv@b+3
  5199  000B80  0E00               	movlw	0
  5200  000B82  6E33               	movwf	___fldiv@a^0,c
  5201  000B84  0E00               	movlw	0
  5202  000B86  6E34               	movwf	(___fldiv@a+1)^0,c
  5203  000B88  0E20               	movlw	32
  5204  000B8A  6E35               	movwf	(___fldiv@a+2)^0,c
  5205  000B8C  0E41               	movlw	65
  5206  000B8E  6E36               	movwf	(___fldiv@a+3)^0,c
  5207  000B90  ECAA  F013         	call	___fldiv	;wreg free
  5208  000B94  C02F  F0A8         	movff	?___fldiv,efgtoa@u
  5209  000B98  C030  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  5210  000B9C  C031  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  5211  000BA0  C032  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  5212  000BA4                     
  5213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5214  000BA4  0100               	movlb	0	; () banked
  5215  000BA6  07A4               	decf	efgtoa@e& (0+255),f,b
  5216  000BA8  A0D8               	btfss	status,0,c
  5217  000BAA  07A5               	decf	(efgtoa@e+1)& (0+255),f,b
  5218  000BAC                     l5615:
  5219                           
  5220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5221  000BAC  C0A0  F02F         	movff	efgtoa@g,___flge@ff1
  5222  000BB0  C0A1  F030         	movff	efgtoa@g+1,___flge@ff1+1
  5223  000BB4  C0A2  F031         	movff	efgtoa@g+2,___flge@ff1+2
  5224  000BB8  C0A3  F032         	movff	efgtoa@g+3,___flge@ff1+3
  5225  000BBC  C0A8  F033         	movff	efgtoa@u,___flge@ff2
  5226  000BC0  C0A9  F034         	movff	efgtoa@u+1,___flge@ff2+1
  5227  000BC4  C0AA  F035         	movff	efgtoa@u+2,___flge@ff2+2
  5228  000BC8  C0AB  F036         	movff	efgtoa@u+3,___flge@ff2+3
  5229  000BCC  ECC0  F01B         	call	___flge	;wreg free
  5230  000BD0  A0D8               	btfss	status,0,c
  5231  000BD2  EFED  F005         	goto	u6421
  5232  000BD6  EFEF  F005         	goto	u6420
  5233  000BDA                     u6421:
  5234  000BDA  EFB8  F005         	goto	l5611
  5235  000BDE                     u6420:
  5236  000BDE                     l5617:
  5237                           
  5238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5239  000BDE  C06E  F008         	movff	efgtoa@c,tolower@c
  5240  000BE2  6A09               	clrf	(tolower@c+1)^0,c
  5241  000BE4  EC2B  F020         	call	_tolower	;wreg free
  5242  000BE8  5008               	movf	?_tolower^0,w,c
  5243  000BEA  0100               	movlb	0	; () banked
  5244  000BEC  6F95               	movwf	efgtoa@mode& (0+255),b
  5245  000BEE                     
  5246                           ; BSR set to: 0
  5247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5248  000BEE  C095  F094         	movff	efgtoa@mode,efgtoa@nmode
  5249  000BF2                     
  5250                           ; BSR set to: 0
  5251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5252  000BF2  0E67               	movlw	103
  5253  000BF4  1995               	xorwf	efgtoa@mode& (0+255),w,b
  5254  000BF6  A4D8               	btfss	status,2,c
  5255  000BF8  EF00  F006         	goto	u6431
  5256  000BFC  EF02  F006         	goto	u6430
  5257  000C00                     u6431:
  5258  000C00  EF28  F006         	goto	l5631
  5259  000C04                     u6430:
  5260  000C04                     
  5261                           ; BSR set to: 0
  5262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5263  000C04  51F7               	movf	_prec& (0+255),w,b
  5264  000C06  11F8               	iorwf	(_prec+1)& (0+255),w,b
  5265  000C08  A4D8               	btfss	status,2,c
  5266  000C0A  EF09  F006         	goto	u6441
  5267  000C0E  EF0B  F006         	goto	u6440
  5268  000C12                     u6441:
  5269  000C12  EF0F  F006         	goto	l5627
  5270  000C16                     u6440:
  5271  000C16                     
  5272                           ; BSR set to: 0
  5273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5274  000C16  0E00               	movlw	0
  5275  000C18  6FF8               	movwf	(_prec+1)& (0+255),b
  5276  000C1A  0E01               	movlw	1
  5277  000C1C  6FF7               	movwf	_prec& (0+255),b
  5278  000C1E                     l5627:
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5282  000C1E  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  5283  000C20  EF1C  F006         	goto	u6450
  5284  000C24  51F8               	movf	(_prec+1)& (0+255),w,b
  5285  000C26  E106               	bnz	u6451
  5286  000C28  05F7               	decf	_prec& (0+255),w,b
  5287  000C2A  B0D8               	btfsc	status,0,c
  5288  000C2C  EF1A  F006         	goto	u6451
  5289  000C30  EF1C  F006         	goto	u6450
  5290  000C34                     u6451:
  5291  000C34  EF22  F006         	goto	l1177
  5292  000C38                     u6450:
  5293  000C38                     l5629:
  5294                           
  5295                           ; BSR set to: 0
  5296  000C38  0E00               	movlw	0
  5297  000C3A  6F91               	movwf	(efgtoa@p+1)& (0+255),b
  5298  000C3C  0E06               	movlw	6
  5299  000C3E  6F90               	movwf	efgtoa@p& (0+255),b
  5300  000C40  EF31  F006         	goto	l5637
  5301  000C44                     l1177:
  5302                           
  5303                           ; BSR set to: 0
  5304  000C44  C0F7  F090         	movff	_prec,efgtoa@p
  5305  000C48  C0F8  F091         	movff	_prec+1,efgtoa@p+1
  5306  000C4C  EF31  F006         	goto	l5637
  5307  000C50                     l5631:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5311  000C50  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  5312  000C52  EF2D  F006         	goto	u6461
  5313  000C56  EF2F  F006         	goto	u6460
  5314  000C5A                     u6461:
  5315  000C5A  EF1C  F006         	goto	l5629
  5316  000C5E                     u6460:
  5317  000C5E  EF22  F006         	goto	l1177
  5318  000C62                     l5637:
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5322  000C62  0E67               	movlw	103
  5323  000C64  1995               	xorwf	efgtoa@mode& (0+255),w,b
  5324  000C66  A4D8               	btfss	status,2,c
  5325  000C68  EF38  F006         	goto	u6471
  5326  000C6C  EF3A  F006         	goto	u6470
  5327  000C70                     u6471:
  5328  000C70  EF69  F006         	goto	l5647
  5329  000C74                     u6470:
  5330  000C74                     
  5331                           ; BSR set to: 0
  5332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5333  000C74  AFA5               	btfss	(efgtoa@e+1)& (0+255),7,b
  5334  000C76  EF48  F006         	goto	u6480
  5335  000C7A  0EFC               	movlw	252
  5336  000C7C  5DA4               	subwf	efgtoa@e& (0+255),w,b
  5337  000C7E  0EFF               	movlw	255
  5338  000C80  59A5               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5339  000C82  A0D8               	btfss	status,0,c
  5340  000C84  EF46  F006         	goto	u6481
  5341  000C88  EF48  F006         	goto	u6480
  5342  000C8C                     u6481:
  5343  000C8C  EF67  F006         	goto	l5645
  5344  000C90                     u6480:
  5345  000C90                     
  5346                           ; BSR set to: 0
  5347  000C90  0EFF               	movlw	255
  5348  000C92  6F6F               	movwf	??_efgtoa& (0+255),b
  5349  000C94  0EFF               	movlw	255
  5350  000C96  6F70               	movwf	(??_efgtoa+1)& (0+255),b
  5351  000C98  C090  F071         	movff	efgtoa@p,??_efgtoa+2
  5352  000C9C  C091  F072         	movff	efgtoa@p+1,??_efgtoa+3
  5353  000CA0  516F               	movf	??_efgtoa& (0+255),w,b
  5354  000CA2  2771               	addwf	(??_efgtoa+2)& (0+255),f,b
  5355  000CA4  5170               	movf	(??_efgtoa+1)& (0+255),w,b
  5356  000CA6  2372               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5357  000CA8  51A4               	movf	efgtoa@e& (0+255),w,b
  5358  000CAA  5D71               	subwf	(??_efgtoa+2)& (0+255),w,b
  5359  000CAC  5172               	movf	(??_efgtoa+3)& (0+255),w,b
  5360  000CAE  0A80               	xorlw	128
  5361  000CB0  6F73               	movwf	(??_efgtoa+4)& (0+255),b
  5362  000CB2  51A5               	movf	(efgtoa@e+1)& (0+255),w,b
  5363  000CB4  0A80               	xorlw	128
  5364  000CB6  5973               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5365  000CB8  A0D8               	btfss	status,0,c
  5366  000CBA  EF61  F006         	goto	u6491
  5367  000CBE  EF63  F006         	goto	u6490
  5368  000CC2                     u6491:
  5369  000CC2  EF67  F006         	goto	l5645
  5370  000CC6                     u6490:
  5371  000CC6                     
  5372                           ; BSR set to: 0
  5373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5374  000CC6  0E66               	movlw	102
  5375  000CC8  6F94               	movwf	efgtoa@nmode& (0+255),b
  5376                           
  5377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5378  000CCA  EF69  F006         	goto	l5647
  5379  000CCE                     l5645:
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5383  000CCE  0E65               	movlw	101
  5384  000CD0  6F94               	movwf	efgtoa@nmode& (0+255),b
  5385  000CD2                     l5647:
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5389  000CD2  C090  F086         	movff	efgtoa@p,efgtoa@m
  5390  000CD6  C091  F087         	movff	efgtoa@p+1,efgtoa@m+1
  5391  000CDA                     
  5392                           ; BSR set to: 0
  5393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5394  000CDA  0E67               	movlw	103
  5395  000CDC  1995               	xorwf	efgtoa@mode& (0+255),w,b
  5396  000CDE  A4D8               	btfss	status,2,c
  5397  000CE0  EF74  F006         	goto	u6501
  5398  000CE4  EF76  F006         	goto	u6500
  5399  000CE8                     u6501:
  5400  000CE8  EF86  F006         	goto	l5655
  5401  000CEC                     u6500:
  5402  000CEC                     
  5403                           ; BSR set to: 0
  5404  000CEC  0E66               	movlw	102
  5405  000CEE  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  5406  000CF0  A4D8               	btfss	status,2,c
  5407  000CF2  EF7D  F006         	goto	u6511
  5408  000CF6  EF7F  F006         	goto	u6510
  5409  000CFA                     u6511:
  5410  000CFA  EF88  F006         	goto	l5657
  5411  000CFE                     u6510:
  5412  000CFE                     
  5413                           ; BSR set to: 0
  5414  000CFE  BFA5               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5415  000D00  EF86  F006         	goto	u6520
  5416  000D04  EF84  F006         	goto	u6521
  5417  000D08                     u6521:
  5418  000D08  EF88  F006         	goto	l5657
  5419  000D0C                     u6520:
  5420  000D0C                     l5655:
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5424  000D0C  4B86               	infsnz	efgtoa@m& (0+255),f,b
  5425  000D0E  2B87               	incf	(efgtoa@m+1)& (0+255),f,b
  5426  000D10                     l5657:
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5430  000D10  0E66               	movlw	102
  5431  000D12  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  5432  000D14  A4D8               	btfss	status,2,c
  5433  000D16  EF8F  F006         	goto	u6531
  5434  000D1A  EF91  F006         	goto	u6530
  5435  000D1E                     u6531:
  5436  000D1E  EFB1  F006         	goto	l5667
  5437  000D22                     u6530:
  5438  000D22                     
  5439                           ; BSR set to: 0
  5440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5441  000D22  BFA5               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5442  000D24  EF98  F006         	goto	u6540
  5443  000D28  EF96  F006         	goto	u6541
  5444  000D2C                     u6541:
  5445  000D2C  EFA4  F006         	goto	l5663
  5446  000D30                     u6540:
  5447  000D30                     
  5448                           ; BSR set to: 0
  5449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5450  000D30  0E00               	movlw	0
  5451  000D32  6FA8               	movwf	efgtoa@u& (0+255),b
  5452  000D34  0E00               	movlw	0
  5453  000D36  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  5454  000D38  0E80               	movlw	128
  5455  000D3A  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  5456  000D3C  0E3F               	movlw	63
  5457  000D3E  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  5458                           
  5459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5460  000D40  0E00               	movlw	0
  5461  000D42  6FA5               	movwf	(efgtoa@e+1)& (0+255),b
  5462  000D44  0E00               	movlw	0
  5463  000D46  6FA4               	movwf	efgtoa@e& (0+255),b
  5464  000D48                     l5663:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5468  000D48  0E67               	movlw	103
  5469  000D4A  1995               	xorwf	efgtoa@mode& (0+255),w,b
  5470  000D4C  B4D8               	btfsc	status,2,c
  5471  000D4E  EFAB  F006         	goto	u6551
  5472  000D52  EFAD  F006         	goto	u6550
  5473  000D56                     u6551:
  5474  000D56  EFB1  F006         	goto	l5667
  5475  000D5A                     u6550:
  5476  000D5A                     
  5477                           ; BSR set to: 0
  5478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5479  000D5A  51A4               	movf	efgtoa@e& (0+255),w,b
  5480  000D5C  2786               	addwf	efgtoa@m& (0+255),f,b
  5481  000D5E  51A5               	movf	(efgtoa@e+1)& (0+255),w,b
  5482  000D60  2387               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5483  000D62                     l5667:
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5487  000D62  0E00               	movlw	0
  5488  000D64  6F9F               	movwf	(efgtoa@i+1)& (0+255),b
  5489  000D66  0E00               	movlw	0
  5490  000D68  6F9E               	movwf	efgtoa@i& (0+255),b
  5491  000D6A                     
  5492                           ; BSR set to: 0
  5493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5494  000D6A  C0A0  F096         	movff	efgtoa@g,efgtoa@h
  5495  000D6E  C0A1  F097         	movff	efgtoa@g+1,efgtoa@h+1
  5496  000D72  C0A2  F098         	movff	efgtoa@g+2,efgtoa@h+2
  5497  000D76  C0A3  F099         	movff	efgtoa@g+3,efgtoa@h+3
  5498  000D7A                     
  5499                           ; BSR set to: 0
  5500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5501  000D7A  C0A8  F088         	movff	efgtoa@u,efgtoa@ou
  5502  000D7E  C0A9  F089         	movff	efgtoa@u+1,efgtoa@ou+1
  5503  000D82  C0AA  F08A         	movff	efgtoa@u+2,efgtoa@ou+2
  5504  000D86  C0AB  F08B         	movff	efgtoa@u+3,efgtoa@ou+3
  5505                           
  5506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5507  000D8A  EF42  F007         	goto	l5681
  5508  000D8E                     l5673:
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5512  000D8E  C096  F02F         	movff	efgtoa@h,___fldiv@b
  5513  000D92  C097  F030         	movff	efgtoa@h+1,___fldiv@b+1
  5514  000D96  C098  F031         	movff	efgtoa@h+2,___fldiv@b+2
  5515  000D9A  C099  F032         	movff	efgtoa@h+3,___fldiv@b+3
  5516  000D9E  C0A8  F033         	movff	efgtoa@u,___fldiv@a
  5517  000DA2  C0A9  F034         	movff	efgtoa@u+1,___fldiv@a+1
  5518  000DA6  C0AA  F035         	movff	efgtoa@u+2,___fldiv@a+2
  5519  000DAA  C0AB  F036         	movff	efgtoa@u+3,___fldiv@a+3
  5520  000DAE  ECAA  F013         	call	___fldiv	;wreg free
  5521  000DB2  C02F  F048         	movff	?___fldiv,floorf@x
  5522  000DB6  C030  F049         	movff	?___fldiv+1,floorf@x+1
  5523  000DBA  C031  F04A         	movff	?___fldiv+2,floorf@x+2
  5524  000DBE  C032  F04B         	movff	?___fldiv+3,floorf@x+3
  5525  000DC2  EC91  F018         	call	_floorf	;wreg free
  5526  000DC6  C048  F09A         	movff	?_floorf,efgtoa@l
  5527  000DCA  C049  F09B         	movff	?_floorf+1,efgtoa@l+1
  5528  000DCE  C04A  F09C         	movff	?_floorf+2,efgtoa@l+2
  5529  000DD2  C04B  F09D         	movff	?_floorf+3,efgtoa@l+3
  5530                           
  5531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5532  000DD6  C09A  F058         	movff	efgtoa@l,___fltol@f1
  5533  000DDA  C09B  F059         	movff	efgtoa@l+1,___fltol@f1+1
  5534  000DDE  C09C  F05A         	movff	efgtoa@l+2,___fltol@f1+2
  5535  000DE2  C09D  F05B         	movff	efgtoa@l+3,___fltol@f1+3
  5536  000DE6  EC3C  F01B         	call	___fltol	;wreg free
  5537  000DEA  C058  F08C         	movff	?___fltol,efgtoa@d
  5538  000DEE  C059  F08D         	movff	?___fltol+1,efgtoa@d+1
  5539  000DF2                     
  5540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5541  000DF2  C096  F060         	movff	efgtoa@h,___flsub@b
  5542  000DF6  C097  F061         	movff	efgtoa@h+1,___flsub@b+1
  5543  000DFA  C098  F062         	movff	efgtoa@h+2,___flsub@b+2
  5544  000DFE  C099  F063         	movff	efgtoa@h+3,___flsub@b+3
  5545  000E02  C0A8  F01A         	movff	efgtoa@u,___flmul@a
  5546  000E06  C0A9  F01B         	movff	efgtoa@u+1,___flmul@a+1
  5547  000E0A  C0AA  F01C         	movff	efgtoa@u+2,___flmul@a+2
  5548  000E0E  C0AB  F01D         	movff	efgtoa@u+3,___flmul@a+3
  5549  000E12  C09A  F016         	movff	efgtoa@l,___flmul@b
  5550  000E16  C09B  F017         	movff	efgtoa@l+1,___flmul@b+1
  5551  000E1A  C09C  F018         	movff	efgtoa@l+2,___flmul@b+2
  5552  000E1E  C09D  F019         	movff	efgtoa@l+3,___flmul@b+3
  5553  000E22  ECBF  F00F         	call	___flmul	;wreg free
  5554  000E26  C016  F064         	movff	?___flmul,___flsub@a
  5555  000E2A  C017  F065         	movff	?___flmul+1,___flsub@a+1
  5556  000E2E  C018  F066         	movff	?___flmul+2,___flsub@a+2
  5557  000E32  C019  F067         	movff	?___flmul+3,___flsub@a+3
  5558  000E36  ECFB  F021         	call	___flsub	;wreg free
  5559  000E3A  C060  F096         	movff	?___flsub,efgtoa@h
  5560  000E3E  C061  F097         	movff	?___flsub+1,efgtoa@h+1
  5561  000E42  C062  F098         	movff	?___flsub+2,efgtoa@h+2
  5562  000E46  C063  F099         	movff	?___flsub+3,efgtoa@h+3
  5563  000E4A                     
  5564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5565  000E4A  C0A8  F02F         	movff	efgtoa@u,___fldiv@b
  5566  000E4E  C0A9  F030         	movff	efgtoa@u+1,___fldiv@b+1
  5567  000E52  C0AA  F031         	movff	efgtoa@u+2,___fldiv@b+2
  5568  000E56  C0AB  F032         	movff	efgtoa@u+3,___fldiv@b+3
  5569  000E5A  0E00               	movlw	0
  5570  000E5C  6E33               	movwf	___fldiv@a^0,c
  5571  000E5E  0E00               	movlw	0
  5572  000E60  6E34               	movwf	(___fldiv@a+1)^0,c
  5573  000E62  0E20               	movlw	32
  5574  000E64  6E35               	movwf	(___fldiv@a+2)^0,c
  5575  000E66  0E41               	movlw	65
  5576  000E68  6E36               	movwf	(___fldiv@a+3)^0,c
  5577  000E6A  ECAA  F013         	call	___fldiv	;wreg free
  5578  000E6E  C02F  F0A8         	movff	?___fldiv,efgtoa@u
  5579  000E72  C030  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  5580  000E76  C031  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  5581  000E7A  C032  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  5582  000E7E                     
  5583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5584  000E7E  0100               	movlb	0	; () banked
  5585  000E80  4B9E               	infsnz	efgtoa@i& (0+255),f,b
  5586  000E82  2B9F               	incf	(efgtoa@i+1)& (0+255),f,b
  5587  000E84                     l5681:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5591  000E84  5186               	movf	efgtoa@m& (0+255),w,b
  5592  000E86  5D9E               	subwf	efgtoa@i& (0+255),w,b
  5593  000E88  519F               	movf	(efgtoa@i+1)& (0+255),w,b
  5594  000E8A  0A80               	xorlw	128
  5595  000E8C  6F6F               	movwf	??_efgtoa& (0+255),b
  5596  000E8E  5187               	movf	(efgtoa@m+1)& (0+255),w,b
  5597  000E90  0A80               	xorlw	128
  5598  000E92  596F               	subwfb	??_efgtoa& (0+255),w,b
  5599  000E94  A0D8               	btfss	status,0,c
  5600  000E96  EF4F  F007         	goto	u6561
  5601  000E9A  EF51  F007         	goto	u6560
  5602  000E9E                     u6561:
  5603  000E9E  EFC7  F006         	goto	l5673
  5604  000EA2                     u6560:
  5605  000EA2                     
  5606                           ; BSR set to: 0
  5607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5608  000EA2  C0A8  F016         	movff	efgtoa@u,___flmul@b
  5609  000EA6  C0A9  F017         	movff	efgtoa@u+1,___flmul@b+1
  5610  000EAA  C0AA  F018         	movff	efgtoa@u+2,___flmul@b+2
  5611  000EAE  C0AB  F019         	movff	efgtoa@u+3,___flmul@b+3
  5612  000EB2  0E00               	movlw	0
  5613  000EB4  6E1A               	movwf	___flmul@a^0,c
  5614  000EB6  0E00               	movlw	0
  5615  000EB8  6E1B               	movwf	(___flmul@a+1)^0,c
  5616  000EBA  0EA0               	movlw	160
  5617  000EBC  6E1C               	movwf	(___flmul@a+2)^0,c
  5618  000EBE  0E40               	movlw	64
  5619  000EC0  6E1D               	movwf	(___flmul@a+3)^0,c
  5620  000EC2  ECBF  F00F         	call	___flmul	;wreg free
  5621  000EC6  C016  F09A         	movff	?___flmul,efgtoa@l
  5622  000ECA  C017  F09B         	movff	?___flmul+1,efgtoa@l+1
  5623  000ECE  C018  F09C         	movff	?___flmul+2,efgtoa@l+2
  5624  000ED2  C019  F09D         	movff	?___flmul+3,efgtoa@l+3
  5625  000ED6                     
  5626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5627  000ED6  C096  F02F         	movff	efgtoa@h,___flge@ff1
  5628  000EDA  C097  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5629  000EDE  C098  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5630  000EE2  C099  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5631  000EE6  C09A  F033         	movff	efgtoa@l,___flge@ff2
  5632  000EEA  C09B  F034         	movff	efgtoa@l+1,___flge@ff2+1
  5633  000EEE  C09C  F035         	movff	efgtoa@l+2,___flge@ff2+2
  5634  000EF2  C09D  F036         	movff	efgtoa@l+3,___flge@ff2+3
  5635  000EF6  ECC0  F01B         	call	___flge	;wreg free
  5636  000EFA  B0D8               	btfsc	status,0,c
  5637  000EFC  EF82  F007         	goto	u6571
  5638  000F00  EF84  F007         	goto	u6570
  5639  000F04                     u6571:
  5640  000F04  EF8F  F007         	goto	l5689
  5641  000F08                     u6570:
  5642  000F08                     
  5643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5644  000F08  0E00               	movlw	0
  5645  000F0A  0100               	movlb	0	; () banked
  5646  000F0C  6F9A               	movwf	efgtoa@l& (0+255),b
  5647  000F0E  0E00               	movlw	0
  5648  000F10  6F9B               	movwf	(efgtoa@l+1)& (0+255),b
  5649  000F12  0E00               	movlw	0
  5650  000F14  6F9C               	movwf	(efgtoa@l+2)& (0+255),b
  5651  000F16  0E00               	movlw	0
  5652  000F18  6F9D               	movwf	(efgtoa@l+3)& (0+255),b
  5653                           
  5654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5655  000F1A  EFB8  F007         	goto	l5695
  5656  000F1E                     l5689:
  5657                           
  5658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5659  000F1E  C096  F002         	movff	efgtoa@h,___fleq@ff1
  5660  000F22  C097  F003         	movff	efgtoa@h+1,___fleq@ff1+1
  5661  000F26  C098  F004         	movff	efgtoa@h+2,___fleq@ff1+2
  5662  000F2A  C099  F005         	movff	efgtoa@h+3,___fleq@ff1+3
  5663  000F2E  C09A  F006         	movff	efgtoa@l,___fleq@ff2
  5664  000F32  C09B  F007         	movff	efgtoa@l+1,___fleq@ff2+1
  5665  000F36  C09C  F008         	movff	efgtoa@l+2,___fleq@ff2+2
  5666  000F3A  C09D  F009         	movff	efgtoa@l+3,___fleq@ff2+3
  5667  000F3E  EC2D  F01F         	call	___fleq	;wreg free
  5668  000F42  A0D8               	btfss	status,0,c
  5669  000F44  EFA6  F007         	goto	u6581
  5670  000F48  EFA8  F007         	goto	u6580
  5671  000F4C                     u6581:
  5672  000F4C  EFB8  F007         	goto	l5695
  5673  000F50                     u6580:
  5674  000F50  0100               	movlb	0	; () banked
  5675  000F52  B18C               	btfsc	efgtoa@d& (0+255),0,b
  5676  000F54  EFAE  F007         	goto	u6591
  5677  000F58  EFB0  F007         	goto	u6590
  5678  000F5C                     u6591:
  5679  000F5C  EFB8  F007         	goto	l5695
  5680  000F60                     u6590:
  5681  000F60                     
  5682                           ; BSR set to: 0
  5683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5684  000F60  0E00               	movlw	0
  5685  000F62  6F9A               	movwf	efgtoa@l& (0+255),b
  5686  000F64  0E00               	movlw	0
  5687  000F66  6F9B               	movwf	(efgtoa@l+1)& (0+255),b
  5688  000F68  0E00               	movlw	0
  5689  000F6A  6F9C               	movwf	(efgtoa@l+2)& (0+255),b
  5690  000F6C  0E00               	movlw	0
  5691  000F6E  6F9D               	movwf	(efgtoa@l+3)& (0+255),b
  5692  000F70                     l5695:
  5693                           
  5694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5695  000F70  C0A0  F048         	movff	efgtoa@g,___fladd@b
  5696  000F74  C0A1  F049         	movff	efgtoa@g+1,___fladd@b+1
  5697  000F78  C0A2  F04A         	movff	efgtoa@g+2,___fladd@b+2
  5698  000F7C  C0A3  F04B         	movff	efgtoa@g+3,___fladd@b+3
  5699  000F80  C09A  F04C         	movff	efgtoa@l,___fladd@a
  5700  000F84  C09B  F04D         	movff	efgtoa@l+1,___fladd@a+1
  5701  000F88  C09C  F04E         	movff	efgtoa@l+2,___fladd@a+2
  5702  000F8C  C09D  F04F         	movff	efgtoa@l+3,___fladd@a+3
  5703  000F90  EC5F  F00D         	call	___fladd	;wreg free
  5704  000F94  C048  F096         	movff	?___fladd,efgtoa@h
  5705  000F98  C049  F097         	movff	?___fladd+1,efgtoa@h+1
  5706  000F9C  C04A  F098         	movff	?___fladd+2,efgtoa@h+2
  5707  000FA0  C04B  F099         	movff	?___fladd+3,efgtoa@h+3
  5708  000FA4                     
  5709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5710  000FA4  C096  F02F         	movff	efgtoa@h,___flge@ff1
  5711  000FA8  C097  F030         	movff	efgtoa@h+1,___flge@ff1+1
  5712  000FAC  C098  F031         	movff	efgtoa@h+2,___flge@ff1+2
  5713  000FB0  C099  F032         	movff	efgtoa@h+3,___flge@ff1+3
  5714  000FB4  0E00               	movlw	0
  5715  000FB6  6E1A               	movwf	___flmul@a^0,c
  5716  000FB8  0E00               	movlw	0
  5717  000FBA  6E1B               	movwf	(___flmul@a+1)^0,c
  5718  000FBC  0E20               	movlw	32
  5719  000FBE  6E1C               	movwf	(___flmul@a+2)^0,c
  5720  000FC0  0E41               	movlw	65
  5721  000FC2  6E1D               	movwf	(___flmul@a+3)^0,c
  5722  000FC4  C088  F016         	movff	efgtoa@ou,___flmul@b
  5723  000FC8  C089  F017         	movff	efgtoa@ou+1,___flmul@b+1
  5724  000FCC  C08A  F018         	movff	efgtoa@ou+2,___flmul@b+2
  5725  000FD0  C08B  F019         	movff	efgtoa@ou+3,___flmul@b+3
  5726  000FD4  ECBF  F00F         	call	___flmul	;wreg free
  5727  000FD8  C016  F033         	movff	?___flmul,___flge@ff2
  5728  000FDC  C017  F034         	movff	?___flmul+1,___flge@ff2+1
  5729  000FE0  C018  F035         	movff	?___flmul+2,___flge@ff2+2
  5730  000FE4  C019  F036         	movff	?___flmul+3,___flge@ff2+3
  5731  000FE8  ECC0  F01B         	call	___flge	;wreg free
  5732  000FEC  A0D8               	btfss	status,0,c
  5733  000FEE  EFFB  F007         	goto	u6601
  5734  000FF2  EFFD  F007         	goto	u6600
  5735  000FF6                     u6601:
  5736  000FF6  EF26  F008         	goto	l5707
  5737  000FFA                     u6600:
  5738  000FFA                     
  5739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5740  000FFA  0100               	movlb	0	; () banked
  5741  000FFC  4BA4               	infsnz	efgtoa@e& (0+255),f,b
  5742  000FFE  2BA5               	incf	(efgtoa@e+1)& (0+255),f,b
  5743  001000                     
  5744                           ; BSR set to: 0
  5745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5746  001000  C088  F016         	movff	efgtoa@ou,___flmul@b
  5747  001004  C089  F017         	movff	efgtoa@ou+1,___flmul@b+1
  5748  001008  C08A  F018         	movff	efgtoa@ou+2,___flmul@b+2
  5749  00100C  C08B  F019         	movff	efgtoa@ou+3,___flmul@b+3
  5750  001010  0E00               	movlw	0
  5751  001012  6E1A               	movwf	___flmul@a^0,c
  5752  001014  0E00               	movlw	0
  5753  001016  6E1B               	movwf	(___flmul@a+1)^0,c
  5754  001018  0E20               	movlw	32
  5755  00101A  6E1C               	movwf	(___flmul@a+2)^0,c
  5756  00101C  0E41               	movlw	65
  5757  00101E  6E1D               	movwf	(___flmul@a+3)^0,c
  5758  001020  ECBF  F00F         	call	___flmul	;wreg free
  5759  001024  C016  F088         	movff	?___flmul,efgtoa@ou
  5760  001028  C017  F089         	movff	?___flmul+1,efgtoa@ou+1
  5761  00102C  C018  F08A         	movff	?___flmul+2,efgtoa@ou+2
  5762  001030  C019  F08B         	movff	?___flmul+3,efgtoa@ou+3
  5763  001034                     
  5764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5765  001034  0E66               	movlw	102
  5766  001036  0100               	movlb	0	; () banked
  5767  001038  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  5768  00103A  A4D8               	btfss	status,2,c
  5769  00103C  EF22  F008         	goto	u6611
  5770  001040  EF24  F008         	goto	u6610
  5771  001044                     u6611:
  5772  001044  EF26  F008         	goto	l5707
  5773  001048                     u6610:
  5774  001048                     
  5775                           ; BSR set to: 0
  5776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5777  001048  4B86               	infsnz	efgtoa@m& (0+255),f,b
  5778  00104A  2B87               	incf	(efgtoa@m+1)& (0+255),f,b
  5779  00104C                     l5707:
  5780                           
  5781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5782  00104C  C088  F0A8         	movff	efgtoa@ou,efgtoa@u
  5783  001050  C089  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  5784  001054  C08A  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  5785  001058  C08B  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  5786  00105C                     
  5787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5788  00105C  0E65               	movlw	101
  5789  00105E  0100               	movlb	0	; () banked
  5790  001060  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  5791  001062  B4D8               	btfsc	status,2,c
  5792  001064  EF36  F008         	goto	u6621
  5793  001068  EF38  F008         	goto	u6620
  5794  00106C                     u6621:
  5795  00106C  EF3E  F008         	goto	l5713
  5796  001070                     u6620:
  5797  001070                     
  5798                           ; BSR set to: 0
  5799  001070  C0A4  F084         	movff	efgtoa@e,efgtoa@ne
  5800  001074  C0A5  F085         	movff	efgtoa@e+1,efgtoa@ne+1
  5801  001078  EF42  F008         	goto	l1205
  5802  00107C                     l5713:
  5803                           
  5804                           ; BSR set to: 0
  5805  00107C  0E00               	movlw	0
  5806  00107E  6F85               	movwf	(efgtoa@ne+1)& (0+255),b
  5807  001080  0E00               	movlw	0
  5808  001082  6F84               	movwf	efgtoa@ne& (0+255),b
  5809  001084                     l1205:
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5813  001084  0E00               	movlw	0
  5814  001086  6F83               	movwf	(efgtoa@pp+1)& (0+255),b
  5815  001088  0E00               	movlw	0
  5816  00108A  6F82               	movwf	efgtoa@pp& (0+255),b
  5817                           
  5818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5819  00108C  0E00               	movlw	0
  5820  00108E  6F81               	movwf	(efgtoa@t+1)& (0+255),b
  5821  001090  0E00               	movlw	0
  5822  001092  6F80               	movwf	efgtoa@t& (0+255),b
  5823                           
  5824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5825  001094  0E00               	movlw	0
  5826  001096  6F9F               	movwf	(efgtoa@i+1)& (0+255),b
  5827  001098  0E00               	movlw	0
  5828  00109A  6F9E               	movwf	efgtoa@i& (0+255),b
  5829                           
  5830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5831  00109C  EF3D  F009         	goto	l5763
  5832  0010A0                     l5715:
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5836  0010A0  C096  F02F         	movff	efgtoa@h,___fldiv@b
  5837  0010A4  C097  F030         	movff	efgtoa@h+1,___fldiv@b+1
  5838  0010A8  C098  F031         	movff	efgtoa@h+2,___fldiv@b+2
  5839  0010AC  C099  F032         	movff	efgtoa@h+3,___fldiv@b+3
  5840  0010B0  C0A8  F033         	movff	efgtoa@u,___fldiv@a
  5841  0010B4  C0A9  F034         	movff	efgtoa@u+1,___fldiv@a+1
  5842  0010B8  C0AA  F035         	movff	efgtoa@u+2,___fldiv@a+2
  5843  0010BC  C0AB  F036         	movff	efgtoa@u+3,___fldiv@a+3
  5844  0010C0  ECAA  F013         	call	___fldiv	;wreg free
  5845  0010C4  C02F  F048         	movff	?___fldiv,floorf@x
  5846  0010C8  C030  F049         	movff	?___fldiv+1,floorf@x+1
  5847  0010CC  C031  F04A         	movff	?___fldiv+2,floorf@x+2
  5848  0010D0  C032  F04B         	movff	?___fldiv+3,floorf@x+3
  5849  0010D4  EC91  F018         	call	_floorf	;wreg free
  5850  0010D8  C048  F09A         	movff	?_floorf,efgtoa@l
  5851  0010DC  C049  F09B         	movff	?_floorf+1,efgtoa@l+1
  5852  0010E0  C04A  F09C         	movff	?_floorf+2,efgtoa@l+2
  5853  0010E4  C04B  F09D         	movff	?_floorf+3,efgtoa@l+3
  5854                           
  5855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5856  0010E8  C09A  F058         	movff	efgtoa@l,___fltol@f1
  5857  0010EC  C09B  F059         	movff	efgtoa@l+1,___fltol@f1+1
  5858  0010F0  C09C  F05A         	movff	efgtoa@l+2,___fltol@f1+2
  5859  0010F4  C09D  F05B         	movff	efgtoa@l+3,___fltol@f1+3
  5860  0010F8  EC3C  F01B         	call	___fltol	;wreg free
  5861  0010FC  C058  F08C         	movff	?___fltol,efgtoa@d
  5862  001100  C059  F08D         	movff	?___fltol+1,efgtoa@d+1
  5863  001104                     
  5864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5865  001104  0100               	movlb	0	; () banked
  5866  001106  B9F9               	btfsc	_flags& (0+255),4,b
  5867  001108  EF88  F008         	goto	u6631
  5868  00110C  EF8A  F008         	goto	u6630
  5869  001110                     u6631:
  5870  001110  EFA7  F008         	goto	l5727
  5871  001114                     u6630:
  5872  001114                     
  5873                           ; BSR set to: 0
  5874  001114  518C               	movf	efgtoa@d& (0+255),w,b
  5875  001116  118D               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5876  001118  A4D8               	btfss	status,2,c
  5877  00111A  EF91  F008         	goto	u6641
  5878  00111E  EF93  F008         	goto	u6640
  5879  001122                     u6641:
  5880  001122  EFA7  F008         	goto	l5727
  5881  001126                     u6640:
  5882  001126                     
  5883                           ; BSR set to: 0
  5884  001126  0E67               	movlw	103
  5885  001128  1995               	xorwf	efgtoa@mode& (0+255),w,b
  5886  00112A  A4D8               	btfss	status,2,c
  5887  00112C  EF9A  F008         	goto	u6651
  5888  001130  EF9C  F008         	goto	u6650
  5889  001134                     u6651:
  5890  001134  EFA7  F008         	goto	l5727
  5891  001138                     u6650:
  5892  001138                     
  5893                           ; BSR set to: 0
  5894  001138  BF85               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5895  00113A  EFA3  F008         	goto	u6660
  5896  00113E  EFA1  F008         	goto	u6661
  5897  001142                     u6661:
  5898  001142  EFA7  F008         	goto	l5727
  5899  001146                     u6660:
  5900  001146                     
  5901                           ; BSR set to: 0
  5902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5903  001146  4B80               	infsnz	efgtoa@t& (0+255),f,b
  5904  001148  2B81               	incf	(efgtoa@t+1)& (0+255),f,b
  5905                           
  5906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5907  00114A  EFF1  F008         	goto	l5755
  5908  00114E                     l5727:
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5912  00114E  5182               	movf	efgtoa@pp& (0+255),w,b
  5913  001150  1183               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5914  001152  A4D8               	btfss	status,2,c
  5915  001154  EFAE  F008         	goto	u6671
  5916  001158  EFB0  F008         	goto	u6670
  5917  00115C                     u6671:
  5918  00115C  EFDA  F008         	goto	l5747
  5919  001160                     u6670:
  5920  001160                     
  5921                           ; BSR set to: 0
  5922  001160  BF85               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5923  001162  EFB7  F008         	goto	u6680
  5924  001166  EFB5  F008         	goto	u6681
  5925  00116A                     u6681:
  5926  00116A  EFDA  F008         	goto	l5747
  5927  00116E                     u6680:
  5928  00116E                     
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5931  00116E  0E32               	movlw	low _dbuf
  5932  001170  25A6               	addwf	efgtoa@n& (0+255),w,b
  5933  001172  6ED9               	movwf	fsr2l,c
  5934  001174  0E01               	movlw	high _dbuf
  5935  001176  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5936  001178  6EDA               	movwf	fsr2h,c
  5937  00117A  0E2E               	movlw	46
  5938  00117C  6EDF               	movwf	indf2,c
  5939  00117E                     
  5940                           ; BSR set to: 0
  5941  00117E  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  5942  001180  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  5943  001182                     
  5944                           ; BSR set to: 0
  5945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5946  001182  0792               	decf	efgtoa@w& (0+255),f,b
  5947  001184  A0D8               	btfss	status,0,c
  5948  001186  0793               	decf	(efgtoa@w+1)& (0+255),f,b
  5949  001188                     
  5950                           ; BSR set to: 0
  5951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5952  001188  0E00               	movlw	0
  5953  00118A  6F83               	movwf	(efgtoa@pp+1)& (0+255),b
  5954  00118C  0E01               	movlw	1
  5955  00118E  6F82               	movwf	efgtoa@pp& (0+255),b
  5956  001190  EFDA  F008         	goto	l5747
  5957  001194                     l5739:
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5961  001194  0E32               	movlw	low _dbuf
  5962  001196  25A6               	addwf	efgtoa@n& (0+255),w,b
  5963  001198  6ED9               	movwf	fsr2l,c
  5964  00119A  0E01               	movlw	high _dbuf
  5965  00119C  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5966  00119E  6EDA               	movwf	fsr2h,c
  5967  0011A0  0E30               	movlw	48
  5968  0011A2  6EDF               	movwf	indf2,c
  5969  0011A4                     
  5970                           ; BSR set to: 0
  5971  0011A4  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  5972  0011A6  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  5973  0011A8                     
  5974                           ; BSR set to: 0
  5975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5976  0011A8  0792               	decf	efgtoa@w& (0+255),f,b
  5977  0011AA  A0D8               	btfss	status,0,c
  5978  0011AC  0793               	decf	(efgtoa@w+1)& (0+255),f,b
  5979  0011AE                     
  5980                           ; BSR set to: 0
  5981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5982  0011AE  0780               	decf	efgtoa@t& (0+255),f,b
  5983  0011B0  A0D8               	btfss	status,0,c
  5984  0011B2  0781               	decf	(efgtoa@t+1)& (0+255),f,b
  5985  0011B4                     l5747:
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5989  0011B4  5180               	movf	efgtoa@t& (0+255),w,b
  5990  0011B6  1181               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5991  0011B8  A4D8               	btfss	status,2,c
  5992  0011BA  EFE1  F008         	goto	u6691
  5993  0011BE  EFE3  F008         	goto	u6690
  5994  0011C2                     u6691:
  5995  0011C2  EFCA  F008         	goto	l5739
  5996  0011C6                     u6690:
  5997  0011C6                     
  5998                           ; BSR set to: 0
  5999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6000  0011C6  0E32               	movlw	low _dbuf
  6001  0011C8  25A6               	addwf	efgtoa@n& (0+255),w,b
  6002  0011CA  6ED9               	movwf	fsr2l,c
  6003  0011CC  0E01               	movlw	high _dbuf
  6004  0011CE  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6005  0011D0  6EDA               	movwf	fsr2h,c
  6006  0011D2  518C               	movf	efgtoa@d& (0+255),w,b
  6007  0011D4  0F30               	addlw	48
  6008  0011D6  6EDF               	movwf	indf2,c
  6009  0011D8                     
  6010                           ; BSR set to: 0
  6011  0011D8  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  6012  0011DA  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  6013  0011DC                     
  6014                           ; BSR set to: 0
  6015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  6016  0011DC  0792               	decf	efgtoa@w& (0+255),f,b
  6017  0011DE  A0D8               	btfss	status,0,c
  6018  0011E0  0793               	decf	(efgtoa@w+1)& (0+255),f,b
  6019  0011E2                     l5755:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  6023  0011E2  C096  F060         	movff	efgtoa@h,___flsub@b
  6024  0011E6  C097  F061         	movff	efgtoa@h+1,___flsub@b+1
  6025  0011EA  C098  F062         	movff	efgtoa@h+2,___flsub@b+2
  6026  0011EE  C099  F063         	movff	efgtoa@h+3,___flsub@b+3
  6027  0011F2  C0A8  F01A         	movff	efgtoa@u,___flmul@a
  6028  0011F6  C0A9  F01B         	movff	efgtoa@u+1,___flmul@a+1
  6029  0011FA  C0AA  F01C         	movff	efgtoa@u+2,___flmul@a+2
  6030  0011FE  C0AB  F01D         	movff	efgtoa@u+3,___flmul@a+3
  6031  001202  C09A  F016         	movff	efgtoa@l,___flmul@b
  6032  001206  C09B  F017         	movff	efgtoa@l+1,___flmul@b+1
  6033  00120A  C09C  F018         	movff	efgtoa@l+2,___flmul@b+2
  6034  00120E  C09D  F019         	movff	efgtoa@l+3,___flmul@b+3
  6035  001212  ECBF  F00F         	call	___flmul	;wreg free
  6036  001216  C016  F064         	movff	?___flmul,___flsub@a
  6037  00121A  C017  F065         	movff	?___flmul+1,___flsub@a+1
  6038  00121E  C018  F066         	movff	?___flmul+2,___flsub@a+2
  6039  001222  C019  F067         	movff	?___flmul+3,___flsub@a+3
  6040  001226  ECFB  F021         	call	___flsub	;wreg free
  6041  00122A  C060  F096         	movff	?___flsub,efgtoa@h
  6042  00122E  C061  F097         	movff	?___flsub+1,efgtoa@h+1
  6043  001232  C062  F098         	movff	?___flsub+2,efgtoa@h+2
  6044  001236  C063  F099         	movff	?___flsub+3,efgtoa@h+3
  6045  00123A                     
  6046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  6047  00123A  C0A8  F02F         	movff	efgtoa@u,___fldiv@b
  6048  00123E  C0A9  F030         	movff	efgtoa@u+1,___fldiv@b+1
  6049  001242  C0AA  F031         	movff	efgtoa@u+2,___fldiv@b+2
  6050  001246  C0AB  F032         	movff	efgtoa@u+3,___fldiv@b+3
  6051  00124A  0E00               	movlw	0
  6052  00124C  6E33               	movwf	___fldiv@a^0,c
  6053  00124E  0E00               	movlw	0
  6054  001250  6E34               	movwf	(___fldiv@a+1)^0,c
  6055  001252  0E20               	movlw	32
  6056  001254  6E35               	movwf	(___fldiv@a+2)^0,c
  6057  001256  0E41               	movlw	65
  6058  001258  6E36               	movwf	(___fldiv@a+3)^0,c
  6059  00125A  ECAA  F013         	call	___fldiv	;wreg free
  6060  00125E  C02F  F0A8         	movff	?___fldiv,efgtoa@u
  6061  001262  C030  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  6062  001266  C031  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  6063  00126A  C032  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  6064  00126E                     
  6065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  6066  00126E  0100               	movlb	0	; () banked
  6067  001270  0784               	decf	efgtoa@ne& (0+255),f,b
  6068  001272  A0D8               	btfss	status,0,c
  6069  001274  0785               	decf	(efgtoa@ne+1)& (0+255),f,b
  6070  001276                     
  6071                           ; BSR set to: 0
  6072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  6073  001276  4B9E               	infsnz	efgtoa@i& (0+255),f,b
  6074  001278  2B9F               	incf	(efgtoa@i+1)& (0+255),f,b
  6075  00127A                     l5763:
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6079  00127A  5186               	movf	efgtoa@m& (0+255),w,b
  6080  00127C  5D9E               	subwf	efgtoa@i& (0+255),w,b
  6081  00127E  519F               	movf	(efgtoa@i+1)& (0+255),w,b
  6082  001280  0A80               	xorlw	128
  6083  001282  6F6F               	movwf	??_efgtoa& (0+255),b
  6084  001284  5187               	movf	(efgtoa@m+1)& (0+255),w,b
  6085  001286  0A80               	xorlw	128
  6086  001288  596F               	subwfb	??_efgtoa& (0+255),w,b
  6087  00128A  B0D8               	btfsc	status,0,c
  6088  00128C  EF4A  F009         	goto	u6701
  6089  001290  EF4C  F009         	goto	u6700
  6090  001294                     u6701:
  6091  001294  EF5A  F009         	goto	l5767
  6092  001298                     u6700:
  6093  001298                     
  6094                           ; BSR set to: 0
  6095  001298  BFA7               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6096  00129A  EF58  F009         	goto	u6711
  6097  00129E  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  6098  0012A0  E109               	bnz	u6710
  6099  0012A2  0E4B               	movlw	75
  6100  0012A4  5DA6               	subwf	efgtoa@n& (0+255),w,b
  6101  0012A6  A0D8               	btfss	status,0,c
  6102  0012A8  EF58  F009         	goto	u6711
  6103  0012AC  EF5A  F009         	goto	u6710
  6104  0012B0                     u6711:
  6105  0012B0  EF50  F008         	goto	l5715
  6106  0012B4                     u6710:
  6107  0012B4                     l5767:
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6111  0012B4  5182               	movf	efgtoa@pp& (0+255),w,b
  6112  0012B6  1183               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6113  0012B8  A4D8               	btfss	status,2,c
  6114  0012BA  EF61  F009         	goto	u6721
  6115  0012BE  EF63  F009         	goto	u6720
  6116  0012C2                     u6721:
  6117  0012C2  EF74  F009         	goto	l5775
  6118  0012C6                     u6720:
  6119  0012C6                     
  6120                           ; BSR set to: 0
  6121  0012C6  A9F9               	btfss	_flags& (0+255),4,b
  6122  0012C8  EF68  F009         	goto	u6731
  6123  0012CC  EF6A  F009         	goto	u6730
  6124  0012D0                     u6731:
  6125  0012D0  EF74  F009         	goto	l5775
  6126  0012D4                     u6730:
  6127  0012D4                     
  6128                           ; BSR set to: 0
  6129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6130  0012D4  0E32               	movlw	low _dbuf
  6131  0012D6  25A6               	addwf	efgtoa@n& (0+255),w,b
  6132  0012D8  6ED9               	movwf	fsr2l,c
  6133  0012DA  0E01               	movlw	high _dbuf
  6134  0012DC  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6135  0012DE  6EDA               	movwf	fsr2h,c
  6136  0012E0  0E2E               	movlw	46
  6137  0012E2  6EDF               	movwf	indf2,c
  6138  0012E4                     
  6139                           ; BSR set to: 0
  6140  0012E4  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  6141  0012E6  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  6142  0012E8                     l5775:
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6146  0012E8  0E32               	movlw	low _dbuf
  6147  0012EA  25A6               	addwf	efgtoa@n& (0+255),w,b
  6148  0012EC  6ED9               	movwf	fsr2l,c
  6149  0012EE  0E01               	movlw	high _dbuf
  6150  0012F0  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6151  0012F2  6EDA               	movwf	fsr2h,c
  6152  0012F4  0E00               	movlw	0
  6153  0012F6  6EDF               	movwf	indf2,c
  6154  0012F8                     
  6155                           ; BSR set to: 0
  6156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6157  0012F8  0E65               	movlw	101
  6158  0012FA  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  6159  0012FC  A4D8               	btfss	status,2,c
  6160  0012FE  EF83  F009         	goto	u6741
  6161  001302  EF85  F009         	goto	u6740
  6162  001306                     u6741:
  6163  001306  EFDF  F004         	goto	l5577
  6164  00130A                     u6740:
  6165  00130A                     
  6166                           ; BSR set to: 0
  6167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6168  00130A  0E00               	movlw	0
  6169  00130C  6F9F               	movwf	(efgtoa@i+1)& (0+255),b
  6170  00130E  0E4F               	movlw	79
  6171  001310  6F9E               	movwf	efgtoa@i& (0+255),b
  6172  001312                     
  6173                           ; BSR set to: 0
  6174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6175  001312  0E32               	movlw	low _dbuf
  6176  001314  259E               	addwf	efgtoa@i& (0+255),w,b
  6177  001316  6ED9               	movwf	fsr2l,c
  6178  001318  0E01               	movlw	high _dbuf
  6179  00131A  219F               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6180  00131C  6EDA               	movwf	fsr2h,c
  6181  00131E  0E00               	movlw	0
  6182  001320  6EDF               	movwf	indf2,c
  6183  001322                     
  6184                           ; BSR set to: 0
  6185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6186  001322  0E00               	movlw	0
  6187  001324  6F8F               	movwf	(efgtoa@sign+1)& (0+255),b
  6188  001326  0E00               	movlw	0
  6189  001328  6F8E               	movwf	efgtoa@sign& (0+255),b
  6190  00132A                     
  6191                           ; BSR set to: 0
  6192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6193  00132A  BFA5               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6194  00132C  EF9C  F009         	goto	u6750
  6195  001330  EF9A  F009         	goto	u6751
  6196  001334                     u6751:
  6197  001334  EFA4  F009         	goto	l5791
  6198  001338                     u6750:
  6199  001338                     
  6200                           ; BSR set to: 0
  6201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6202  001338  0E00               	movlw	0
  6203  00133A  6F8F               	movwf	(efgtoa@sign+1)& (0+255),b
  6204  00133C  0E01               	movlw	1
  6205  00133E  6F8E               	movwf	efgtoa@sign& (0+255),b
  6206  001340                     
  6207                           ; BSR set to: 0
  6208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6209  001340  6DA4               	negf	efgtoa@e& (0+255),b
  6210  001342  1FA5               	comf	(efgtoa@e+1)& (0+255),f,b
  6211  001344  B0D8               	btfsc	status,0,c
  6212  001346  2BA5               	incf	(efgtoa@e+1)& (0+255),f,b
  6213  001348                     l5791:
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6217  001348  0E00               	movlw	0
  6218  00134A  6F91               	movwf	(efgtoa@p+1)& (0+255),b
  6219  00134C  0E02               	movlw	2
  6220  00134E  6F90               	movwf	efgtoa@p& (0+255),b
  6221                           
  6222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6223  001350  EFD5  F009         	goto	l5803
  6224  001354                     l5793:
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6228  001354  079E               	decf	efgtoa@i& (0+255),f,b
  6229  001356  A0D8               	btfss	status,0,c
  6230  001358  079F               	decf	(efgtoa@i+1)& (0+255),f,b
  6231  00135A                     
  6232                           ; BSR set to: 0
  6233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6234  00135A  0E32               	movlw	low _dbuf
  6235  00135C  259E               	addwf	efgtoa@i& (0+255),w,b
  6236  00135E  6ED9               	movwf	fsr2l,c
  6237  001360  0E01               	movlw	high _dbuf
  6238  001362  219F               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6239  001364  6EDA               	movwf	fsr2h,c
  6240  001366  C0A4  F002         	movff	efgtoa@e,___awmod@dividend
  6241  00136A  C0A5  F003         	movff	efgtoa@e+1,___awmod@dividend+1
  6242  00136E  0E00               	movlw	0
  6243  001370  6E05               	movwf	(___awmod@divisor+1)^0,c
  6244  001372  0E0A               	movlw	10
  6245  001374  6E04               	movwf	___awmod@divisor^0,c
  6246  001376  ECD5  F01E         	call	___awmod	;wreg free
  6247  00137A  5002               	movf	?___awmod^0,w,c
  6248  00137C  0F30               	addlw	48
  6249  00137E  6EDF               	movwf	indf2,c
  6250  001380                     
  6251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6252  001380  C0A4  F002         	movff	efgtoa@e,___awdiv@dividend
  6253  001384  C0A5  F003         	movff	efgtoa@e+1,___awdiv@dividend+1
  6254  001388  0E00               	movlw	0
  6255  00138A  6E05               	movwf	(___awdiv@divisor+1)^0,c
  6256  00138C  0E0A               	movlw	10
  6257  00138E  6E04               	movwf	___awdiv@divisor^0,c
  6258  001390  EC73  F01E         	call	___awdiv	;wreg free
  6259  001394  C002  F0A4         	movff	?___awdiv,efgtoa@e
  6260  001398  C003  F0A5         	movff	?___awdiv+1,efgtoa@e+1
  6261  00139C                     
  6262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6263  00139C  0100               	movlb	0	; () banked
  6264  00139E  0790               	decf	efgtoa@p& (0+255),f,b
  6265  0013A0  A0D8               	btfss	status,0,c
  6266  0013A2  0791               	decf	(efgtoa@p+1)& (0+255),f,b
  6267  0013A4                     
  6268                           ; BSR set to: 0
  6269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6270  0013A4  0792               	decf	efgtoa@w& (0+255),f,b
  6271  0013A6  A0D8               	btfss	status,0,c
  6272  0013A8  0793               	decf	(efgtoa@w+1)& (0+255),f,b
  6273  0013AA                     l5803:
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6277  0013AA  51A4               	movf	efgtoa@e& (0+255),w,b
  6278  0013AC  11A5               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6279  0013AE  A4D8               	btfss	status,2,c
  6280  0013B0  EFDC  F009         	goto	u6761
  6281  0013B4  EFDE  F009         	goto	u6760
  6282  0013B8                     u6761:
  6283  0013B8  EFAA  F009         	goto	l5793
  6284  0013BC                     u6760:
  6285  0013BC                     
  6286                           ; BSR set to: 0
  6287  0013BC  BF91               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6288  0013BE  EFEB  F009         	goto	u6770
  6289  0013C2  5191               	movf	(efgtoa@p+1)& (0+255),w,b
  6290  0013C4  E106               	bnz	u6771
  6291  0013C6  0590               	decf	efgtoa@p& (0+255),w,b
  6292  0013C8  B0D8               	btfsc	status,0,c
  6293  0013CA  EFE9  F009         	goto	u6771
  6294  0013CE  EFEB  F009         	goto	u6770
  6295  0013D2                     u6771:
  6296  0013D2  EFAA  F009         	goto	l5793
  6297  0013D6                     u6770:
  6298  0013D6                     
  6299                           ; BSR set to: 0
  6300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6301  0013D6  079E               	decf	efgtoa@i& (0+255),f,b
  6302  0013D8  A0D8               	btfss	status,0,c
  6303  0013DA  079F               	decf	(efgtoa@i+1)& (0+255),f,b
  6304  0013DC                     
  6305                           ; BSR set to: 0
  6306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6307  0013DC  518E               	movf	efgtoa@sign& (0+255),w,b
  6308  0013DE  118F               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6309  0013E0  A4D8               	btfss	status,2,c
  6310  0013E2  EFF5  F009         	goto	u6781
  6311  0013E6  EFF7  F009         	goto	u6780
  6312  0013EA                     u6781:
  6313  0013EA  EFFD  F009         	goto	l5813
  6314  0013EE                     u6780:
  6315  0013EE                     
  6316                           ; BSR set to: 0
  6317  0013EE  0E00               	movlw	0
  6318  0013F0  6F7B               	movwf	(_efgtoa$1666+1)& (0+255),b
  6319  0013F2  0E2B               	movlw	43
  6320  0013F4  6F7A               	movwf	_efgtoa$1666& (0+255),b
  6321  0013F6  EF01  F00A         	goto	l5815
  6322  0013FA                     l5813:
  6323                           
  6324                           ; BSR set to: 0
  6325  0013FA  0E00               	movlw	0
  6326  0013FC  6F7B               	movwf	(_efgtoa$1666+1)& (0+255),b
  6327  0013FE  0E2D               	movlw	45
  6328  001400  6F7A               	movwf	_efgtoa$1666& (0+255),b
  6329  001402                     l5815:
  6330                           
  6331                           ; BSR set to: 0
  6332  001402  0E32               	movlw	low _dbuf
  6333  001404  259E               	addwf	efgtoa@i& (0+255),w,b
  6334  001406  6ED9               	movwf	fsr2l,c
  6335  001408  0E01               	movlw	high _dbuf
  6336  00140A  219F               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6337  00140C  6EDA               	movwf	fsr2h,c
  6338  00140E  C07A  FFDF         	movff	_efgtoa$1666,indf2
  6339  001412                     
  6340                           ; BSR set to: 0
  6341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6342  001412  0792               	decf	efgtoa@w& (0+255),f,b
  6343  001414  A0D8               	btfss	status,0,c
  6344  001416  0793               	decf	(efgtoa@w+1)& (0+255),f,b
  6345  001418                     
  6346                           ; BSR set to: 0
  6347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6348  001418  079E               	decf	efgtoa@i& (0+255),f,b
  6349  00141A  A0D8               	btfss	status,0,c
  6350  00141C  079F               	decf	(efgtoa@i+1)& (0+255),f,b
  6351  00141E                     
  6352                           ; BSR set to: 0
  6353  00141E  0EBF               	movlw	191
  6354  001420  6F6F               	movwf	??_efgtoa& (0+255),b
  6355  001422  0EFF               	movlw	255
  6356  001424  6F70               	movwf	(??_efgtoa+1)& (0+255),b
  6357  001426  516E               	movf	efgtoa@c& (0+255),w,b
  6358  001428  6F71               	movwf	(??_efgtoa+2)& (0+255),b
  6359  00142A  6B72               	clrf	(??_efgtoa+3)& (0+255),b
  6360  00142C  516F               	movf	??_efgtoa& (0+255),w,b
  6361  00142E  2771               	addwf	(??_efgtoa+2)& (0+255),f,b
  6362  001430  5170               	movf	(??_efgtoa+1)& (0+255),w,b
  6363  001432  2372               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6364  001434  5172               	movf	(??_efgtoa+3)& (0+255),w,b
  6365  001436  E10A               	bnz	u6790
  6366  001438  0E1A               	movlw	26
  6367  00143A  5D71               	subwf	(??_efgtoa+2)& (0+255),w,b
  6368  00143C  A0D8               	btfss	status,0,c
  6369  00143E  EF23  F00A         	goto	u6791
  6370  001442  EF26  F00A         	goto	u6790
  6371  001446                     u6791:
  6372  001446  0E01               	movlw	1
  6373  001448  EF27  F00A         	goto	u6800
  6374  00144C                     u6790:
  6375  00144C  0E00               	movlw	0
  6376  00144E                     u6800:
  6377  00144E  6F7E               	movwf	_efgtoa$1668& (0+255),b
  6378  001450  6B7F               	clrf	(_efgtoa$1668+1)& (0+255),b
  6379  001452                     
  6380                           ; BSR set to: 0
  6381  001452  517E               	movf	_efgtoa$1668& (0+255),w,b
  6382  001454  117F               	iorwf	(_efgtoa$1668+1)& (0+255),w,b
  6383  001456  A4D8               	btfss	status,2,c
  6384  001458  EF30  F00A         	goto	u6811
  6385  00145C  EF32  F00A         	goto	u6810
  6386  001460                     u6811:
  6387  001460  EF38  F00A         	goto	l5829
  6388  001464                     u6810:
  6389  001464                     
  6390                           ; BSR set to: 0
  6391  001464  0E00               	movlw	0
  6392  001466  6F7D               	movwf	(_efgtoa$1667+1)& (0+255),b
  6393  001468  0E65               	movlw	101
  6394  00146A  6F7C               	movwf	_efgtoa$1667& (0+255),b
  6395  00146C  EF3C  F00A         	goto	l5831
  6396  001470                     l5829:
  6397                           
  6398                           ; BSR set to: 0
  6399  001470  0E00               	movlw	0
  6400  001472  6F7D               	movwf	(_efgtoa$1667+1)& (0+255),b
  6401  001474  0E45               	movlw	69
  6402  001476  6F7C               	movwf	_efgtoa$1667& (0+255),b
  6403  001478                     l5831:
  6404                           
  6405                           ; BSR set to: 0
  6406  001478  0E32               	movlw	low _dbuf
  6407  00147A  259E               	addwf	efgtoa@i& (0+255),w,b
  6408  00147C  6ED9               	movwf	fsr2l,c
  6409  00147E  0E01               	movlw	high _dbuf
  6410  001480  219F               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6411  001482  6EDA               	movwf	fsr2h,c
  6412  001484  C07C  FFDF         	movff	_efgtoa$1667,indf2
  6413  001488                     
  6414                           ; BSR set to: 0
  6415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6416  001488  0792               	decf	efgtoa@w& (0+255),f,b
  6417  00148A  A0D8               	btfss	status,0,c
  6418  00148C  0793               	decf	(efgtoa@w+1)& (0+255),f,b
  6419  00148E                     
  6420                           ; BSR set to: 0
  6421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6422  00148E  0E32               	movlw	low _dbuf
  6423  001490  25A6               	addwf	efgtoa@n& (0+255),w,b
  6424  001492  6E02               	movwf	strcpy@dest^0,c
  6425  001494  0E01               	movlw	high _dbuf
  6426  001496  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6427  001498  6E03               	movwf	(strcpy@dest+1)^0,c
  6428  00149A  0E32               	movlw	low _dbuf
  6429  00149C  259E               	addwf	efgtoa@i& (0+255),w,b
  6430  00149E  6E04               	movwf	strcpy@src^0,c
  6431  0014A0  0E01               	movlw	high _dbuf
  6432  0014A2  219F               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6433  0014A4  6E05               	movwf	(strcpy@src+1)^0,c
  6434  0014A6  ECB9  F020         	call	_strcpy	;wreg free
  6435  0014AA  EFDF  F004         	goto	l5577
  6436  0014AE                     l1159:
  6437  0014AE  0012               	return		;funcret
  6438  0014B0                     __end_of_efgtoa:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function _tolower *****************
  6442 ;; Defined at:
  6443 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  c               2    7[COMRAM] int 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  2    7[COMRAM] int 
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6457 ;;      Params:         2       0       0       0       0       0       0       0       0
  6458 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6459 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6460 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6461 ;;Total ram usage:        8 bytes
  6462 ;; Hardware stack levels used: 1
  6463 ;; Hardware stack levels required when called: 3
  6464 ;; This function calls:
  6465 ;;		_isupper
  6466 ;; This function is called by:
  6467 ;;		_efgtoa
  6468 ;;		_vfpfcnvrt
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text14
  6473  004056                     __ptext14:
  6474                           	callstack 0
  6475  004056                     _tolower:
  6476                           	callstack 24
  6477  004056  0EBF               	movlw	191
  6478  004058  6E0A               	movwf	??_tolower^0,c
  6479  00405A  0EFF               	movlw	255
  6480  00405C  6E0B               	movwf	(??_tolower+1)^0,c
  6481  00405E  C008  F00C         	movff	tolower@c,??_tolower+2
  6482  004062  C009  F00D         	movff	tolower@c+1,??_tolower+3
  6483  004066  500A               	movf	??_tolower^0,w,c
  6484  004068  260C               	addwf	(??_tolower+2)^0,f,c
  6485  00406A  500B               	movf	(??_tolower+1)^0,w,c
  6486  00406C  220D               	addwfc	(??_tolower+3)^0,f,c
  6487  00406E  500D               	movf	(??_tolower+3)^0,w,c
  6488  004070  E10A               	bnz	u4430
  6489  004072  0E1A               	movlw	26
  6490  004074  5C0C               	subwf	(??_tolower+2)^0,w,c
  6491  004076  A0D8               	btfss	status,0,c
  6492  004078  EF40  F020         	goto	u4431
  6493  00407C  EF43  F020         	goto	u4430
  6494  004080                     u4431:
  6495  004080  0E01               	movlw	1
  6496  004082  EF44  F020         	goto	u4440
  6497  004086                     u4430:
  6498  004086  0E00               	movlw	0
  6499  004088                     u4440:
  6500  004088  6E0E               	movwf	_tolower$1836^0,c
  6501  00408A  6A0F               	clrf	(_tolower$1836+1)^0,c
  6502  00408C  500E               	movf	_tolower$1836^0,w,c
  6503  00408E  100F               	iorwf	(_tolower$1836+1)^0,w,c
  6504  004090  B4D8               	btfsc	status,2,c
  6505  004092  EF4D  F020         	goto	u4451
  6506  004096  EF4F  F020         	goto	u4450
  6507  00409A                     u4451:
  6508  00409A  EF56  F020         	goto	l1440
  6509  00409E                     u4450:
  6510  00409E  0E20               	movlw	32
  6511  0040A0  1008               	iorwf	tolower@c^0,w,c
  6512  0040A2  6E08               	movwf	?_tolower^0,c
  6513  0040A4  5009               	movf	(tolower@c+1)^0,w,c
  6514  0040A6  6E09               	movwf	(?_tolower+1)^0,c
  6515  0040A8  EF5A  F020         	goto	l1445
  6516  0040AC                     l1440:
  6517  0040AC  C008  F008         	movff	tolower@c,?_tolower
  6518  0040B0  C009  F009         	movff	tolower@c+1,?_tolower+1
  6519  0040B4                     l1445:
  6520  0040B4  0012               	return		;funcret
  6521  0040B6                     __end_of_tolower:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function _isupper *****************
  6525 ;; Defined at:
  6526 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  c               2    1[COMRAM] int 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  2    1[COMRAM] int 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6540 ;;      Params:         2       0       0       0       0       0       0       0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6542 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6543 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6544 ;;Total ram usage:        6 bytes
  6545 ;; Hardware stack levels used: 1
  6546 ;; Hardware stack levels required when called: 2
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_efgtoa
  6551 ;;		_xtoa
  6552 ;;		_vfpfcnvrt
  6553 ;;		_tolower
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text15
  6558  0045FE                     __ptext15:
  6559                           	callstack 0
  6560  0045FE                     _isupper:
  6561                           	callstack 24
  6562  0045FE  0EBF               	movlw	191
  6563  004600  6E04               	movwf	??_isupper^0,c
  6564  004602  0EFF               	movlw	255
  6565  004604  6E05               	movwf	(??_isupper+1)^0,c
  6566  004606  C002  F006         	movff	isupper@c,??_isupper+2
  6567  00460A  C003  F007         	movff	isupper@c+1,??_isupper+3
  6568  00460E  5004               	movf	??_isupper^0,w,c
  6569  004610  2606               	addwf	(??_isupper+2)^0,f,c
  6570  004612  5005               	movf	(??_isupper+1)^0,w,c
  6571  004614  2207               	addwfc	(??_isupper+3)^0,f,c
  6572  004616  5007               	movf	(??_isupper+3)^0,w,c
  6573  004618  E10A               	bnz	u3560
  6574  00461A  0E1A               	movlw	26
  6575  00461C  5C06               	subwf	(??_isupper+2)^0,w,c
  6576  00461E  A0D8               	btfss	status,0,c
  6577  004620  EF14  F023         	goto	u3561
  6578  004624  EF17  F023         	goto	u3560
  6579  004628                     u3561:
  6580  004628  0E01               	movlw	1
  6581  00462A  EF18  F023         	goto	u3570
  6582  00462E                     u3560:
  6583  00462E  0E00               	movlw	0
  6584  004630                     u3570:
  6585  004630  6E02               	movwf	?_isupper^0,c
  6586  004632  6A03               	clrf	(?_isupper+1)^0,c
  6587  004634  0012               	return		;funcret
  6588  004636                     __end_of_isupper:
  6589                           	callstack 0
  6590                           
  6591 ;; *************** function _strcpy *****************
  6592 ;; Defined at:
  6593 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  dest            2    1[COMRAM] PTR unsigned char 
  6596 ;;		 -> dbuf(80), 
  6597 ;;  src             2    3[COMRAM] PTR const unsigned char 
  6598 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  6599 ;;		 -> dbuf(80), 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  d               2    9[COMRAM] PTR unsigned char 
  6602 ;;		 -> dbuf(80), 
  6603 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6604 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  6605 ;;		 -> dbuf(80), 
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  2    1[COMRAM] PTR unsigned char 
  6608 ;; Registers used:
  6609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6615 ;;      Params:         4       0       0       0       0       0       0       0       0
  6616 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6617 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6618 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6619 ;;Total ram usage:       10 bytes
  6620 ;; Hardware stack levels used: 1
  6621 ;; Hardware stack levels required when called: 2
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_efgtoa
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           	psect	text16
  6630  004172                     __ptext16:
  6631                           	callstack 0
  6632  004172                     _strcpy:
  6633                           	callstack 24
  6634  004172  C004  F008         	movff	strcpy@src,strcpy@s
  6635  004176  C005  F009         	movff	strcpy@src+1,strcpy@s+1
  6636  00417A  C002  F00A         	movff	strcpy@dest,strcpy@d
  6637  00417E  C003  F00B         	movff	strcpy@dest+1,strcpy@d+1
  6638  004182                     l4235:
  6639  004182  5008               	movf	strcpy@s^0,w,c
  6640  004184  6E06               	movwf	??_strcpy^0,c
  6641  004186  5009               	movf	(strcpy@s+1)^0,w,c
  6642  004188  6E07               	movwf	(??_strcpy+1)^0,c
  6643  00418A  4A08               	infsnz	strcpy@s^0,f,c
  6644  00418C  2A09               	incf	(strcpy@s+1)^0,f,c
  6645  00418E  C006  FFF6         	movff	??_strcpy,tblptrl
  6646  004192  C007  FFF7         	movff	??_strcpy+1,tblptrh
  6647  004196  6AF8               	clrf	tblptru,c
  6648  004198  C00A  FFD9         	movff	strcpy@d,fsr2l
  6649  00419C  C00B  FFDA         	movff	strcpy@d+1,fsr2h
  6650  0041A0  4A0A               	infsnz	strcpy@d^0,f,c
  6651  0041A2  2A0B               	incf	(strcpy@d+1)^0,f,c
  6652  0041A4  0E07               	movlw	(high __ramtop+-1)
  6653  0041A6  64F7               	cpfsgt	tblptrh,c
  6654  0041A8  D003               	bra	u4417
  6655  0041AA  0008               	tblrd		*
  6656  0041AC  50F5               	movf	tablat,w,c
  6657  0041AE  D005               	bra	u4410
  6658  0041B0                     u4417:
  6659  0041B0  CFF6 FFE1          	movff	tblptrl,fsr1l
  6660  0041B4  CFF7 FFE2          	movff	tblptrh,fsr1h
  6661  0041B8  50E7               	movf	indf1,w,c
  6662  0041BA                     u4410:
  6663  0041BA  6EDF               	movwf	indf2,c
  6664  0041BC  50DF               	movf	indf2,w,c
  6665  0041BE  A4D8               	btfss	status,2,c
  6666  0041C0  EFE4  F020         	goto	u4421
  6667  0041C4  EFE6  F020         	goto	u4420
  6668  0041C8                     u4421:
  6669  0041C8  EFC1  F020         	goto	l4235
  6670  0041CC                     u4420:
  6671  0041CC  0012               	return		;funcret
  6672  0041CE                     __end_of_strcpy:
  6673                           	callstack 0
  6674                           
  6675 ;; *************** function _pad *****************
  6676 ;; Defined at:
  6677 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  6680 ;;		 -> sprintf@f(6), 
  6681 ;;  buf             2   19[COMRAM] PTR unsigned char 
  6682 ;;		 -> dbuf(80), 
  6683 ;;  p               2   21[COMRAM] int 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  w               2   26[COMRAM] int 
  6686 ;;  i               2   24[COMRAM] int 
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  2   17[COMRAM] int 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6696 ;;      Params:         6       0       0       0       0       0       0       0       0
  6697 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6698 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6699 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6700 ;;Total ram usage:       11 bytes
  6701 ;; Hardware stack levels used: 1
  6702 ;; Hardware stack levels required when called: 5
  6703 ;; This function calls:
  6704 ;;		_fputc
  6705 ;;		_fputs
  6706 ;;		_strlen
  6707 ;; This function is called by:
  6708 ;;		_efgtoa
  6709 ;;		_xtoa
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text17
  6714  003C20                     __ptext17:
  6715                           	callstack 0
  6716  003C20                     _pad:
  6717                           	callstack 21
  6718  003C20                     
  6719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6720  003C20  0100               	movlb	0	; () banked
  6721  003C22  A1F9               	btfss	_flags& (0+255),0,b
  6722  003C24  EF16  F01E         	goto	u4301
  6723  003C28  EF18  F01E         	goto	u4300
  6724  003C2C                     u4301:
  6725  003C2C  EF22  F01E         	goto	l4193
  6726  003C30                     u4300:
  6727  003C30                     
  6728                           ; BSR set to: 0
  6729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6730  003C30  C014  F00B         	movff	pad@buf,fputs@s
  6731  003C34  C015  F00C         	movff	pad@buf+1,fputs@s+1
  6732  003C38  C012  F00D         	movff	pad@fp,fputs@fp
  6733  003C3C  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  6734  003C40  EC66  F022         	call	_fputs	;wreg free
  6735  003C44                     l4193:
  6736                           
  6737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6738  003C44  BE17               	btfsc	(pad@p+1)^0,7,c
  6739  003C46  EF27  F01E         	goto	u4311
  6740  003C4A  EF29  F01E         	goto	u4310
  6741  003C4E                     u4311:
  6742  003C4E  EF2F  F01E         	goto	l4197
  6743  003C52                     u4310:
  6744  003C52  C016  F01B         	movff	pad@p,pad@w
  6745  003C56  C017  F01C         	movff	pad@p+1,pad@w+1
  6746  003C5A  EF33  F01E         	goto	l1136
  6747  003C5E                     l4197:
  6748  003C5E  0E00               	movlw	0
  6749  003C60  6E1C               	movwf	(pad@w+1)^0,c
  6750  003C62  0E00               	movlw	0
  6751  003C64  6E1B               	movwf	pad@w^0,c
  6752  003C66                     l1136:
  6753                           
  6754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6755  003C66  0E00               	movlw	0
  6756  003C68  6E1A               	movwf	(pad@i+1)^0,c
  6757  003C6A  0E00               	movlw	0
  6758  003C6C  6E19               	movwf	pad@i^0,c
  6759                           
  6760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6761  003C6E  EF45  F01E         	goto	l4203
  6762  003C72                     l4199:
  6763                           
  6764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6765  003C72  0E00               	movlw	0
  6766  003C74  6E03               	movwf	(fputc@c+1)^0,c
  6767  003C76  0E20               	movlw	32
  6768  003C78  6E02               	movwf	fputc@c^0,c
  6769  003C7A  C012  F004         	movff	pad@fp,fputc@fp
  6770  003C7E  C013  F005         	movff	pad@fp+1,fputc@fp+1
  6771  003C82  ECAB  F01D         	call	_fputc	;wreg free
  6772  003C86                     
  6773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6774  003C86  4A19               	infsnz	pad@i^0,f,c
  6775  003C88  2A1A               	incf	(pad@i+1)^0,f,c
  6776  003C8A                     l4203:
  6777                           
  6778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6779  003C8A  501B               	movf	pad@w^0,w,c
  6780  003C8C  5C19               	subwf	pad@i^0,w,c
  6781  003C8E  501A               	movf	(pad@i+1)^0,w,c
  6782  003C90  0A80               	xorlw	128
  6783  003C92  6E18               	movwf	??_pad^0,c
  6784  003C94  501C               	movf	(pad@w+1)^0,w,c
  6785  003C96  0A80               	xorlw	128
  6786  003C98  5818               	subwfb	??_pad^0,w,c
  6787  003C9A  A0D8               	btfss	status,0,c
  6788  003C9C  EF52  F01E         	goto	u4321
  6789  003CA0  EF54  F01E         	goto	u4320
  6790  003CA4                     u4321:
  6791  003CA4  EF39  F01E         	goto	l4199
  6792  003CA8                     u4320:
  6793  003CA8                     
  6794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6795  003CA8  0100               	movlb	0	; () banked
  6796  003CAA  B1F9               	btfsc	_flags& (0+255),0,b
  6797  003CAC  EF5A  F01E         	goto	u4331
  6798  003CB0  EF5C  F01E         	goto	u4330
  6799  003CB4                     u4331:
  6800  003CB4  EF66  F01E         	goto	l4207
  6801  003CB8                     u4330:
  6802  003CB8                     
  6803                           ; BSR set to: 0
  6804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6805  003CB8  C014  F00B         	movff	pad@buf,fputs@s
  6806  003CBC  C015  F00C         	movff	pad@buf+1,fputs@s+1
  6807  003CC0  C012  F00D         	movff	pad@fp,fputs@fp
  6808  003CC4  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  6809  003CC8  EC66  F022         	call	_fputs	;wreg free
  6810  003CCC                     l4207:
  6811                           
  6812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6813  003CCC  C014  F002         	movff	pad@buf,strlen@s
  6814  003CD0  C015  F003         	movff	pad@buf+1,strlen@s+1
  6815  003CD4  EC53  F023         	call	_strlen	;wreg free
  6816  003CD8  501B               	movf	pad@w^0,w,c
  6817  003CDA  2402               	addwf	?_strlen^0,w,c
  6818  003CDC  6E12               	movwf	?_pad^0,c
  6819  003CDE  501C               	movf	(pad@w+1)^0,w,c
  6820  003CE0  2003               	addwfc	(?_strlen+1)^0,w,c
  6821  003CE2  6E13               	movwf	(?_pad+1)^0,c
  6822  003CE4  0012               	return		;funcret
  6823  003CE6                     __end_of_pad:
  6824                           	callstack 0
  6825                           
  6826 ;; *************** function _strlen *****************
  6827 ;; Defined at:
  6828 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  s               2    1[COMRAM] PTR const unsigned char 
  6831 ;;		 -> dbuf(80), 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  a               2    3[COMRAM] PTR const unsigned char 
  6834 ;;		 -> dbuf(80), 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  2    1[COMRAM] unsigned int 
  6837 ;; Registers used:
  6838 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6844 ;;      Params:         2       0       0       0       0       0       0       0       0
  6845 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6847 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6848 ;;Total ram usage:        4 bytes
  6849 ;; Hardware stack levels used: 1
  6850 ;; Hardware stack levels required when called: 2
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_pad
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text18
  6859  0046A6                     __ptext18:
  6860                           	callstack 0
  6861  0046A6                     _strlen:
  6862                           	callstack 23
  6863  0046A6  C002  F004         	movff	strlen@s,strlen@a
  6864  0046AA  C003  F005         	movff	strlen@s+1,strlen@a+1
  6865  0046AE  EF5B  F023         	goto	l3725
  6866  0046B2                     l3723:
  6867  0046B2  4A02               	infsnz	strlen@s^0,f,c
  6868  0046B4  2A03               	incf	(strlen@s+1)^0,f,c
  6869  0046B6                     l3725:
  6870  0046B6  C002  FFD9         	movff	strlen@s,fsr2l
  6871  0046BA  C003  FFDA         	movff	strlen@s+1,fsr2h
  6872  0046BE  50DF               	movf	indf2,w,c
  6873  0046C0  A4D8               	btfss	status,2,c
  6874  0046C2  EF65  F023         	goto	u3551
  6875  0046C6  EF67  F023         	goto	u3550
  6876  0046CA                     u3551:
  6877  0046CA  EF59  F023         	goto	l3723
  6878  0046CE                     u3550:
  6879  0046CE  5004               	movf	strlen@a^0,w,c
  6880  0046D0  5C02               	subwf	strlen@s^0,w,c
  6881  0046D2  6E02               	movwf	?_strlen^0,c
  6882  0046D4  5005               	movf	(strlen@a+1)^0,w,c
  6883  0046D6  5803               	subwfb	(strlen@s+1)^0,w,c
  6884  0046D8  6E03               	movwf	(?_strlen+1)^0,c
  6885  0046DA  0012               	return		;funcret
  6886  0046DC                     __end_of_strlen:
  6887                           	callstack 0
  6888                           
  6889 ;; *************** function _fputs *****************
  6890 ;; Defined at:
  6891 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  s               2   10[COMRAM] PTR const unsigned char 
  6894 ;;		 -> dbuf(80), 
  6895 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  6896 ;;		 -> sprintf@f(6), 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  i               2   15[COMRAM] int 
  6899 ;;  c               1   14[COMRAM] unsigned char 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  2   10[COMRAM] int 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6909 ;;      Params:         4       0       0       0       0       0       0       0       0
  6910 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6911 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6912 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6913 ;;Total ram usage:        7 bytes
  6914 ;; Hardware stack levels used: 1
  6915 ;; Hardware stack levels required when called: 4
  6916 ;; This function calls:
  6917 ;;		_fputc
  6918 ;; This function is called by:
  6919 ;;		_pad
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text19
  6924  0044CC                     __ptext19:
  6925                           	callstack 0
  6926  0044CC                     _fputs:
  6927                           	callstack 21
  6928  0044CC  0E00               	movlw	0
  6929  0044CE  6E11               	movwf	(fputs@i+1)^0,c
  6930  0044D0  0E00               	movlw	0
  6931  0044D2  6E10               	movwf	fputs@i^0,c
  6932  0044D4  EF77  F022         	goto	l3719
  6933  0044D8                     l3715:
  6934  0044D8  C00F  F002         	movff	fputs@c,fputc@c
  6935  0044DC  6A03               	clrf	(fputc@c+1)^0,c
  6936  0044DE  C00D  F004         	movff	fputs@fp,fputc@fp
  6937  0044E2  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  6938  0044E6  ECAB  F01D         	call	_fputc	;wreg free
  6939  0044EA  4A10               	infsnz	fputs@i^0,f,c
  6940  0044EC  2A11               	incf	(fputs@i+1)^0,f,c
  6941  0044EE                     l3719:
  6942  0044EE  5010               	movf	fputs@i^0,w,c
  6943  0044F0  240B               	addwf	fputs@s^0,w,c
  6944  0044F2  6ED9               	movwf	fsr2l,c
  6945  0044F4  5011               	movf	(fputs@i+1)^0,w,c
  6946  0044F6  200C               	addwfc	(fputs@s+1)^0,w,c
  6947  0044F8  6EDA               	movwf	fsr2h,c
  6948  0044FA  50DF               	movf	indf2,w,c
  6949  0044FC  6E0F               	movwf	fputs@c^0,c
  6950  0044FE  500F               	movf	fputs@c^0,w,c
  6951  004500  A4D8               	btfss	status,2,c
  6952  004502  EF85  F022         	goto	u3541
  6953  004506  EF87  F022         	goto	u3540
  6954  00450A                     u3541:
  6955  00450A  EF6C  F022         	goto	l3715
  6956  00450E                     u3540:
  6957  00450E  0012               	return		;funcret
  6958  004510                     __end_of_fputs:
  6959                           	callstack 0
  6960                           
  6961 ;; *************** function _fputc *****************
  6962 ;; Defined at:
  6963 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  c               2    1[COMRAM] int 
  6966 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  6967 ;;		 -> sprintf@f(6), 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;		None
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  2    1[COMRAM] int 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6979 ;;      Params:         4       0       0       0       0       0       0       0       0
  6980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6981 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6982 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6983 ;;Total ram usage:        9 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; Hardware stack levels required when called: 3
  6986 ;; This function calls:
  6987 ;;		_putch
  6988 ;; This function is called by:
  6989 ;;		_pad
  6990 ;;		_vfpfcnvrt
  6991 ;;		_fputs
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text20
  6996  003B56                     __ptext20:
  6997                           	callstack 0
  6998  003B56                     _fputc:
  6999                           	callstack 21
  7000  003B56  5004               	movf	fputc@fp^0,w,c
  7001  003B58  1005               	iorwf	(fputc@fp+1)^0,w,c
  7002  003B5A  B4D8               	btfsc	status,2,c
  7003  003B5C  EFB2  F01D         	goto	u3111
  7004  003B60  EFB4  F01D         	goto	u3110
  7005  003B64                     u3111:
  7006  003B64  EFBD  F01D         	goto	l3501
  7007  003B68                     u3110:
  7008  003B68  5004               	movf	fputc@fp^0,w,c
  7009  003B6A  1005               	iorwf	(fputc@fp+1)^0,w,c
  7010  003B6C  A4D8               	btfss	status,2,c
  7011  003B6E  EFBB  F01D         	goto	u3121
  7012  003B72  EFBD  F01D         	goto	u3120
  7013  003B76                     u3121:
  7014  003B76  EFC2  F01D         	goto	l3503
  7015  003B7A                     u3120:
  7016  003B7A                     l3501:
  7017  003B7A  5002               	movf	fputc@c^0,w,c
  7018  003B7C  EC4C  F024         	call	_putch
  7019  003B80  EF0F  F01E         	goto	l1403
  7020  003B84                     l3503:
  7021  003B84  EE20 F004          	lfsr	2,4
  7022  003B88  5004               	movf	fputc@fp^0,w,c
  7023  003B8A  26D9               	addwf	fsr2l,f,c
  7024  003B8C  5005               	movf	(fputc@fp+1)^0,w,c
  7025  003B8E  22DA               	addwfc	fsr2h,f,c
  7026  003B90  50DE               	movf	postinc2,w,c
  7027  003B92  10DE               	iorwf	postinc2,w,c
  7028  003B94  B4D8               	btfsc	status,2,c
  7029  003B96  EFCF  F01D         	goto	u3131
  7030  003B9A  EFD1  F01D         	goto	u3130
  7031  003B9E                     u3131:
  7032  003B9E  EFEC  F01D         	goto	l3507
  7033  003BA2                     u3130:
  7034  003BA2  EE20 F004          	lfsr	2,4
  7035  003BA6  5004               	movf	fputc@fp^0,w,c
  7036  003BA8  26D9               	addwf	fsr2l,f,c
  7037  003BAA  5005               	movf	(fputc@fp+1)^0,w,c
  7038  003BAC  22DA               	addwfc	fsr2h,f,c
  7039  003BAE  EE10 F002          	lfsr	1,2
  7040  003BB2  5004               	movf	fputc@fp^0,w,c
  7041  003BB4  26E1               	addwf	fsr1l,f,c
  7042  003BB6  5005               	movf	(fputc@fp+1)^0,w,c
  7043  003BB8  22E2               	addwfc	fsr1h,f,c
  7044  003BBA  50DE               	movf	postinc2,w,c
  7045  003BBC  5CE6               	subwf	postinc1,w,c
  7046  003BBE  50E6               	movf	postinc1,w,c
  7047  003BC0  0A80               	xorlw	128
  7048  003BC2  6E0A               	movwf	(??_fputc+4)^0,c
  7049  003BC4  50DE               	movf	postinc2,w,c
  7050  003BC6  0A80               	xorlw	128
  7051  003BC8  580A               	subwfb	(??_fputc+4)^0,w,c
  7052  003BCA  B0D8               	btfsc	status,0,c
  7053  003BCC  EFEA  F01D         	goto	u3141
  7054  003BD0  EFEC  F01D         	goto	u3140
  7055  003BD4                     u3141:
  7056  003BD4  EF0F  F01E         	goto	l1403
  7057  003BD8                     u3140:
  7058  003BD8                     l3507:
  7059  003BD8  EE20 F002          	lfsr	2,2
  7060  003BDC  5004               	movf	fputc@fp^0,w,c
  7061  003BDE  26D9               	addwf	fsr2l,f,c
  7062  003BE0  5005               	movf	(fputc@fp+1)^0,w,c
  7063  003BE2  22DA               	addwfc	fsr2h,f,c
  7064  003BE4  CFDE F006          	movff	postinc2,??_fputc
  7065  003BE8  CFDD F007          	movff	postdec2,??_fputc+1
  7066  003BEC  C004  FFD9         	movff	fputc@fp,fsr2l
  7067  003BF0  C005  FFDA         	movff	fputc@fp+1,fsr2h
  7068  003BF4  CFDE F008          	movff	postinc2,??_fputc+2
  7069  003BF8  CFDD F009          	movff	postdec2,??_fputc+3
  7070  003BFC  5006               	movf	??_fputc^0,w,c
  7071  003BFE  2408               	addwf	(??_fputc+2)^0,w,c
  7072  003C00  6ED9               	movwf	fsr2l,c
  7073  003C02  5007               	movf	(??_fputc+1)^0,w,c
  7074  003C04  2009               	addwfc	(??_fputc+3)^0,w,c
  7075  003C06  6EDA               	movwf	fsr2h,c
  7076  003C08  C002  FFDF         	movff	fputc@c,indf2
  7077  003C0C  EE20 F002          	lfsr	2,2
  7078  003C10  5004               	movf	fputc@fp^0,w,c
  7079  003C12  26D9               	addwf	fsr2l,f,c
  7080  003C14  5005               	movf	(fputc@fp+1)^0,w,c
  7081  003C16  22DA               	addwfc	fsr2h,f,c
  7082  003C18  2ADE               	incf	postinc2,f,c
  7083  003C1A  0E00               	movlw	0
  7084  003C1C  22DD               	addwfc	postdec2,f,c
  7085  003C1E                     l1403:
  7086  003C1E  0012               	return		;funcret
  7087  003C20                     __end_of_fputc:
  7088                           	callstack 0
  7089                           
  7090 ;; *************** function _putch *****************
  7091 ;; Defined at:
  7092 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  c               1    wreg     unsigned char 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  c               1    0[COMRAM] unsigned char 
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1    wreg      void 
  7099 ;; Registers used:
  7100 ;;		wreg
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7106 ;;      Params:         0       0       0       0       0       0       0       0       0
  7107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7109 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7110 ;;Total ram usage:        0 bytes
  7111 ;; Hardware stack levels used: 1
  7112 ;; Hardware stack levels required when called: 2
  7113 ;; This function calls:
  7114 ;;		Nothing
  7115 ;; This function is called by:
  7116 ;;		_fputc
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           	psect	text21
  7121  004898                     __ptext21:
  7122                           	callstack 0
  7123  004898                     _putch:
  7124                           	callstack 21
  7125  004898  0012               	return		;funcret
  7126  00489A                     __end_of_putch:
  7127                           	callstack 0
  7128                           
  7129 ;; *************** function _floorf *****************
  7130 ;; Defined at:
  7131 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  x               4   71[COMRAM] float 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  u               4   87[COMRAM] struct .
  7136 ;;  m               4   81[COMRAM] unsigned long 
  7137 ;;  e               2   85[COMRAM] int 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  4   71[COMRAM] float 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7147 ;;      Params:         4       0       0       0       0       0       0       0       0
  7148 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7149 ;;      Temps:          6       0       0       0       0       0       0       0       0
  7150 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7151 ;;Total ram usage:       20 bytes
  7152 ;; Hardware stack levels used: 1
  7153 ;; Hardware stack levels required when called: 2
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_efgtoa
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text22
  7162  003122                     __ptext22:
  7163                           	callstack 0
  7164  003122                     _floorf:
  7165                           	callstack 24
  7166  003122  C114  F058         	movff	floorf@F527,floorf@u
  7167  003126  C115  F059         	movff	floorf@F527+1,floorf@u+1
  7168  00312A  C116  F05A         	movff	floorf@F527+2,floorf@u+2
  7169  00312E  C117  F05B         	movff	floorf@F527+3,floorf@u+3
  7170  003132  C048  F058         	movff	floorf@x,floorf@u
  7171  003136  C049  F059         	movff	floorf@x+1,floorf@u+1
  7172  00313A  C04A  F05A         	movff	floorf@x+2,floorf@u+2
  7173  00313E  C04B  F05B         	movff	floorf@x+3,floorf@u+3
  7174  003142  0E81               	movlw	129
  7175  003144  6E4C               	movwf	??_floorf^0,c
  7176  003146  0EFF               	movlw	255
  7177  003148  6E4D               	movwf	(??_floorf+1)^0,c
  7178  00314A  C058  F04E         	movff	floorf@u,??_floorf+2
  7179  00314E  C059  F04F         	movff	floorf@u+1,??_floorf+3
  7180  003152  C05A  F050         	movff	floorf@u+2,??_floorf+4
  7181  003156  C05B  F051         	movff	floorf@u+3,??_floorf+5
  7182  00315A  0E18               	movlw	24
  7183  00315C  EFB5  F018         	goto	u4460
  7184  003160                     u4465:
  7185  003160  90D8               	bcf	status,0,c
  7186  003162  3251               	rrcf	(??_floorf+5)^0,f,c
  7187  003164  3250               	rrcf	(??_floorf+4)^0,f,c
  7188  003166  324F               	rrcf	(??_floorf+3)^0,f,c
  7189  003168  324E               	rrcf	(??_floorf+2)^0,f,c
  7190  00316A                     u4460:
  7191  00316A  2EE8               	decfsz	wreg,f,c
  7192  00316C  EFB0  F018         	goto	u4465
  7193  003170  504E               	movf	(??_floorf+2)^0,w,c
  7194  003172  244C               	addwf	??_floorf^0,w,c
  7195  003174  6E56               	movwf	floorf@e^0,c
  7196  003176  0E00               	movlw	0
  7197  003178  204D               	addwfc	(??_floorf+1)^0,w,c
  7198  00317A  6E57               	movwf	(floorf@e+1)^0,c
  7199  00317C  BE57               	btfsc	(floorf@e+1)^0,7,c
  7200  00317E  EFCA  F018         	goto	u4471
  7201  003182  5057               	movf	(floorf@e+1)^0,w,c
  7202  003184  E109               	bnz	u4470
  7203  003186  0E17               	movlw	23
  7204  003188  5C56               	subwf	floorf@e^0,w,c
  7205  00318A  A0D8               	btfss	status,0,c
  7206  00318C  EFCA  F018         	goto	u4471
  7207  003190  EFCC  F018         	goto	u4470
  7208  003194                     u4471:
  7209  003194  EFD6  F018         	goto	l4253
  7210  003198                     u4470:
  7211  003198                     l4251:
  7212  003198  C048  F048         	movff	floorf@x,?_floorf
  7213  00319C  C049  F049         	movff	floorf@x+1,?_floorf+1
  7214  0031A0  C04A  F04A         	movff	floorf@x+2,?_floorf+2
  7215  0031A4  C04B  F04B         	movff	floorf@x+3,?_floorf+3
  7216  0031A8  EF99  F019         	goto	l1358
  7217  0031AC                     l4253:
  7218  0031AC  BE57               	btfsc	(floorf@e+1)^0,7,c
  7219  0031AE  EFDB  F018         	goto	u4481
  7220  0031B2  EFDD  F018         	goto	u4480
  7221  0031B6                     u4481:
  7222  0031B6  EF4D  F019         	goto	l4263
  7223  0031BA                     u4480:
  7224  0031BA  C056  F04C         	movff	floorf@e,??_floorf
  7225  0031BE  0EFF               	movlw	255
  7226  0031C0  6E4D               	movwf	(??_floorf+1)^0,c
  7227  0031C2  0EFF               	movlw	255
  7228  0031C4  6E4E               	movwf	(??_floorf+2)^0,c
  7229  0031C6  0E7F               	movlw	127
  7230  0031C8  6E4F               	movwf	(??_floorf+3)^0,c
  7231  0031CA  0E00               	movlw	0
  7232  0031CC  6E50               	movwf	(??_floorf+4)^0,c
  7233  0031CE                     u4495:
  7234  0031CE  664C               	tstfsz	??_floorf^0,c
  7235  0031D0  EFEC  F018         	goto	u4496
  7236  0031D4  EFF4  F018         	goto	u4497
  7237  0031D8                     u4496:
  7238  0031D8  3450               	rlcf	(??_floorf+4)^0,w,c
  7239  0031DA  3250               	rrcf	(??_floorf+4)^0,f,c
  7240  0031DC  324F               	rrcf	(??_floorf+3)^0,f,c
  7241  0031DE  324E               	rrcf	(??_floorf+2)^0,f,c
  7242  0031E0  324D               	rrcf	(??_floorf+1)^0,f,c
  7243  0031E2  2E4C               	decfsz	??_floorf^0,f,c
  7244  0031E4  EFE7  F018         	goto	u4495
  7245  0031E8                     u4497:
  7246  0031E8  C04D  F052         	movff	??_floorf+1,floorf@m
  7247  0031EC  C04E  F053         	movff	??_floorf+2,floorf@m+1
  7248  0031F0  C04F  F054         	movff	??_floorf+3,floorf@m+2
  7249  0031F4  C050  F055         	movff	??_floorf+4,floorf@m+3
  7250  0031F8  5052               	movf	floorf@m^0,w,c
  7251  0031FA  1458               	andwf	floorf@u^0,w,c
  7252  0031FC  6E4C               	movwf	??_floorf^0,c
  7253  0031FE  5053               	movf	(floorf@m+1)^0,w,c
  7254  003200  1459               	andwf	(floorf@u+1)^0,w,c
  7255  003202  6E4D               	movwf	(??_floorf+1)^0,c
  7256  003204  5054               	movf	(floorf@m+2)^0,w,c
  7257  003206  145A               	andwf	(floorf@u+2)^0,w,c
  7258  003208  6E4E               	movwf	(??_floorf+2)^0,c
  7259  00320A  5055               	movf	(floorf@m+3)^0,w,c
  7260  00320C  145B               	andwf	(floorf@u+3)^0,w,c
  7261  00320E  6E4F               	movwf	(??_floorf+3)^0,c
  7262  003210  504C               	movf	??_floorf^0,w,c
  7263  003212  104D               	iorwf	(??_floorf+1)^0,w,c
  7264  003214  104E               	iorwf	(??_floorf+2)^0,w,c
  7265  003216  104F               	iorwf	(??_floorf+3)^0,w,c
  7266  003218  A4D8               	btfss	status,2,c
  7267  00321A  EF11  F019         	goto	u4501
  7268  00321E  EF13  F019         	goto	u4500
  7269  003222                     u4501:
  7270  003222  EF15  F019         	goto	l4259
  7271  003226                     u4500:
  7272  003226  EFCC  F018         	goto	l4251
  7273  00322A                     l4259:
  7274  00322A  C058  F04C         	movff	floorf@u,??_floorf
  7275  00322E  C059  F04D         	movff	floorf@u+1,??_floorf+1
  7276  003232  C05A  F04E         	movff	floorf@u+2,??_floorf+2
  7277  003236  C05B  F04F         	movff	floorf@u+3,??_floorf+3
  7278  00323A  0E20               	movlw	32
  7279  00323C  EF25  F019         	goto	u4510
  7280  003240                     u4515:
  7281  003240  90D8               	bcf	status,0,c
  7282  003242  324F               	rrcf	(??_floorf+3)^0,f,c
  7283  003244  324E               	rrcf	(??_floorf+2)^0,f,c
  7284  003246  324D               	rrcf	(??_floorf+1)^0,f,c
  7285  003248  324C               	rrcf	??_floorf^0,f,c
  7286  00324A                     u4510:
  7287  00324A  2EE8               	decfsz	wreg,f,c
  7288  00324C  EF20  F019         	goto	u4515
  7289  003250  504C               	movf	??_floorf^0,w,c
  7290  003252  104D               	iorwf	(??_floorf+1)^0,w,c
  7291  003254  104E               	iorwf	(??_floorf+2)^0,w,c
  7292  003256  104F               	iorwf	(??_floorf+3)^0,w,c
  7293  003258  B4D8               	btfsc	status,2,c
  7294  00325A  EF31  F019         	goto	u4521
  7295  00325E  EF33  F019         	goto	u4520
  7296  003262                     u4521:
  7297  003262  EF3B  F019         	goto	l1361
  7298  003266                     u4520:
  7299  003266  5052               	movf	floorf@m^0,w,c
  7300  003268  2658               	addwf	floorf@u^0,f,c
  7301  00326A  5053               	movf	(floorf@m+1)^0,w,c
  7302  00326C  2259               	addwfc	(floorf@u+1)^0,f,c
  7303  00326E  5054               	movf	(floorf@m+2)^0,w,c
  7304  003270  225A               	addwfc	(floorf@u+2)^0,f,c
  7305  003272  5055               	movf	(floorf@m+3)^0,w,c
  7306  003274  225B               	addwfc	(floorf@u+3)^0,f,c
  7307  003276                     l1361:
  7308  003276  1C52               	comf	floorf@m^0,w,c
  7309  003278  6E4C               	movwf	??_floorf^0,c
  7310  00327A  1C53               	comf	(floorf@m+1)^0,w,c
  7311  00327C  6E4D               	movwf	(??_floorf+1)^0,c
  7312  00327E  1C54               	comf	(floorf@m+2)^0,w,c
  7313  003280  6E4E               	movwf	(??_floorf+2)^0,c
  7314  003282  1C55               	comf	(floorf@m+3)^0,w,c
  7315  003284  6E4F               	movwf	(??_floorf+3)^0,c
  7316  003286  504C               	movf	??_floorf^0,w,c
  7317  003288  1658               	andwf	floorf@u^0,f,c
  7318  00328A  504D               	movf	(??_floorf+1)^0,w,c
  7319  00328C  1659               	andwf	(floorf@u+1)^0,f,c
  7320  00328E  504E               	movf	(??_floorf+2)^0,w,c
  7321  003290  165A               	andwf	(floorf@u+2)^0,f,c
  7322  003292  504F               	movf	(??_floorf+3)^0,w,c
  7323  003294  165B               	andwf	(floorf@u+3)^0,f,c
  7324  003296  EF91  F019         	goto	l4271
  7325  00329A                     l4263:
  7326  00329A  C058  F04C         	movff	floorf@u,??_floorf
  7327  00329E  C059  F04D         	movff	floorf@u+1,??_floorf+1
  7328  0032A2  C05A  F04E         	movff	floorf@u+2,??_floorf+2
  7329  0032A6  C05B  F04F         	movff	floorf@u+3,??_floorf+3
  7330  0032AA  0E20               	movlw	32
  7331  0032AC  EF5D  F019         	goto	u4530
  7332  0032B0                     u4535:
  7333  0032B0  90D8               	bcf	status,0,c
  7334  0032B2  324F               	rrcf	(??_floorf+3)^0,f,c
  7335  0032B4  324E               	rrcf	(??_floorf+2)^0,f,c
  7336  0032B6  324D               	rrcf	(??_floorf+1)^0,f,c
  7337  0032B8  324C               	rrcf	??_floorf^0,f,c
  7338  0032BA                     u4530:
  7339  0032BA  2EE8               	decfsz	wreg,f,c
  7340  0032BC  EF58  F019         	goto	u4535
  7341  0032C0  504C               	movf	??_floorf^0,w,c
  7342  0032C2  104D               	iorwf	(??_floorf+1)^0,w,c
  7343  0032C4  104E               	iorwf	(??_floorf+2)^0,w,c
  7344  0032C6  104F               	iorwf	(??_floorf+3)^0,w,c
  7345  0032C8  A4D8               	btfss	status,2,c
  7346  0032CA  EF69  F019         	goto	u4541
  7347  0032CE  EF6B  F019         	goto	u4540
  7348  0032D2                     u4541:
  7349  0032D2  EF75  F019         	goto	l4267
  7350  0032D6                     u4540:
  7351  0032D6  0E00               	movlw	0
  7352  0032D8  6E58               	movwf	floorf@u^0,c
  7353  0032DA  0E00               	movlw	0
  7354  0032DC  6E59               	movwf	(floorf@u+1)^0,c
  7355  0032DE  0E00               	movlw	0
  7356  0032E0  6E5A               	movwf	(floorf@u+2)^0,c
  7357  0032E2  0E00               	movlw	0
  7358  0032E4  6E5B               	movwf	(floorf@u+3)^0,c
  7359  0032E6  EF91  F019         	goto	l4271
  7360  0032EA                     l4267:
  7361  0032EA  90D8               	bcf	status,0,c
  7362  0032EC  3458               	rlcf	floorf@u^0,w,c
  7363  0032EE  6E4C               	movwf	??_floorf^0,c
  7364  0032F0  3459               	rlcf	(floorf@u+1)^0,w,c
  7365  0032F2  6E4D               	movwf	(??_floorf+1)^0,c
  7366  0032F4  345A               	rlcf	(floorf@u+2)^0,w,c
  7367  0032F6  6E4E               	movwf	(??_floorf+2)^0,c
  7368  0032F8  345B               	rlcf	(floorf@u+3)^0,w,c
  7369  0032FA  6E4F               	movwf	(??_floorf+3)^0,c
  7370  0032FC  504C               	movf	??_floorf^0,w,c
  7371  0032FE  104D               	iorwf	(??_floorf+1)^0,w,c
  7372  003300  104E               	iorwf	(??_floorf+2)^0,w,c
  7373  003302  104F               	iorwf	(??_floorf+3)^0,w,c
  7374  003304  B4D8               	btfsc	status,2,c
  7375  003306  EF87  F019         	goto	u4551
  7376  00330A  EF89  F019         	goto	u4550
  7377  00330E                     u4551:
  7378  00330E  EF91  F019         	goto	l4271
  7379  003312                     u4550:
  7380  003312  0E00               	movlw	0
  7381  003314  6E58               	movwf	floorf@u^0,c
  7382  003316  0E00               	movlw	0
  7383  003318  6E59               	movwf	(floorf@u+1)^0,c
  7384  00331A  0E80               	movlw	128
  7385  00331C  6E5A               	movwf	(floorf@u+2)^0,c
  7386  00331E  0EBF               	movlw	191
  7387  003320  6E5B               	movwf	(floorf@u+3)^0,c
  7388  003322                     l4271:
  7389  003322  C058  F048         	movff	floorf@u,?_floorf
  7390  003326  C059  F049         	movff	floorf@u+1,?_floorf+1
  7391  00332A  C05A  F04A         	movff	floorf@u+2,?_floorf+2
  7392  00332E  C05B  F04B         	movff	floorf@u+3,?_floorf+3
  7393  003332                     l1358:
  7394  003332  0012               	return		;funcret
  7395  003334                     __end_of_floorf:
  7396                           	callstack 0
  7397                           
  7398 ;; *************** function ___fpclassifyf *****************
  7399 ;; Defined at:
  7400 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  x               4    1[COMRAM] float 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  u               4   11[COMRAM] struct .
  7405 ;;  e               2    9[COMRAM] int 
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  2    1[COMRAM] int 
  7408 ;; Registers used:
  7409 ;;		wreg, status,2, status,0
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7415 ;;      Params:         4       0       0       0       0       0       0       0       0
  7416 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7417 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7418 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7419 ;;Total ram usage:       14 bytes
  7420 ;; Hardware stack levels used: 1
  7421 ;; Hardware stack levels required when called: 2
  7422 ;; This function calls:
  7423 ;;		Nothing
  7424 ;; This function is called by:
  7425 ;;		_efgtoa
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           	psect	text23
  7430  003982                     __ptext23:
  7431                           	callstack 0
  7432  003982                     ___fpclassifyf:
  7433                           	callstack 24
  7434  003982  C118  F00C         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7435  003986  C119  F00D         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7436  00398A  C11A  F00E         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7437  00398E  C11B  F00F         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7438  003992  C002  F00C         	movff	___fpclassifyf@x,___fpclassifyf@u
  7439  003996  C003  F00D         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7440  00399A  C004  F00E         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7441  00399E  C005  F00F         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7442  0039A2  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  7443  0039A6  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7444  0039AA  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7445  0039AE  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7446  0039B2  0E18               	movlw	24
  7447  0039B4  EFE1  F01C         	goto	u4340
  7448  0039B8                     u4345:
  7449  0039B8  90D8               	bcf	status,0,c
  7450  0039BA  3209               	rrcf	(??___fpclassifyf+3)^0,f,c
  7451  0039BC  3208               	rrcf	(??___fpclassifyf+2)^0,f,c
  7452  0039BE  3207               	rrcf	(??___fpclassifyf+1)^0,f,c
  7453  0039C0  3206               	rrcf	??___fpclassifyf^0,f,c
  7454  0039C2                     u4340:
  7455  0039C2  2EE8               	decfsz	wreg,f,c
  7456  0039C4  EFDC  F01C         	goto	u4345
  7457  0039C8  5006               	movf	??___fpclassifyf^0,w,c
  7458  0039CA  6E0A               	movwf	___fpclassifyf@e^0,c
  7459  0039CC  6A0B               	clrf	(___fpclassifyf@e+1)^0,c
  7460  0039CE  500A               	movf	___fpclassifyf@e^0,w,c
  7461  0039D0  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7462  0039D2  A4D8               	btfss	status,2,c
  7463  0039D4  EFEE  F01C         	goto	u4351
  7464  0039D8  EFF0  F01C         	goto	u4350
  7465  0039DC                     u4351:
  7466  0039DC  EF10  F01D         	goto	l4223
  7467  0039E0                     u4350:
  7468  0039E0  90D8               	bcf	status,0,c
  7469  0039E2  340C               	rlcf	___fpclassifyf@u^0,w,c
  7470  0039E4  6E06               	movwf	??___fpclassifyf^0,c
  7471  0039E6  340D               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7472  0039E8  6E07               	movwf	(??___fpclassifyf+1)^0,c
  7473  0039EA  340E               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7474  0039EC  6E08               	movwf	(??___fpclassifyf+2)^0,c
  7475  0039EE  340F               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7476  0039F0  6E09               	movwf	(??___fpclassifyf+3)^0,c
  7477  0039F2  5006               	movf	??___fpclassifyf^0,w,c
  7478  0039F4  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  7479  0039F6  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  7480  0039F8  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  7481  0039FA  A4D8               	btfss	status,2,c
  7482  0039FC  EF02  F01D         	goto	u4361
  7483  003A00  EF04  F01D         	goto	u4360
  7484  003A04                     u4361:
  7485  003A04  EF0A  F01D         	goto	l4219
  7486  003A08                     u4360:
  7487  003A08  0E00               	movlw	0
  7488  003A0A  6E03               	movwf	(?___fpclassifyf+1)^0,c
  7489  003A0C  0E02               	movlw	2
  7490  003A0E  6E02               	movwf	?___fpclassifyf^0,c
  7491  003A10  EF3F  F01D         	goto	l1320
  7492  003A14                     l4219:
  7493  003A14  0E00               	movlw	0
  7494  003A16  6E03               	movwf	(?___fpclassifyf+1)^0,c
  7495  003A18  0E03               	movlw	3
  7496  003A1A  6E02               	movwf	?___fpclassifyf^0,c
  7497  003A1C  EF3F  F01D         	goto	l1320
  7498  003A20                     l4223:
  7499  003A20  280A               	incf	___fpclassifyf@e^0,w,c
  7500  003A22  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7501  003A24  A4D8               	btfss	status,2,c
  7502  003A26  EF17  F01D         	goto	u4371
  7503  003A2A  EF19  F01D         	goto	u4370
  7504  003A2E                     u4371:
  7505  003A2E  EF3B  F01D         	goto	l4229
  7506  003A32                     u4370:
  7507  003A32  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  7508  003A36  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7509  003A3A  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7510  003A3E  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7511  003A42  0E09               	movlw	9
  7512  003A44                     u4385:
  7513  003A44  90D8               	bcf	status,0,c
  7514  003A46  3606               	rlcf	??___fpclassifyf^0,f,c
  7515  003A48  3607               	rlcf	(??___fpclassifyf+1)^0,f,c
  7516  003A4A  3608               	rlcf	(??___fpclassifyf+2)^0,f,c
  7517  003A4C  3609               	rlcf	(??___fpclassifyf+3)^0,f,c
  7518  003A4E  2EE8               	decfsz	wreg,f,c
  7519  003A50  EF22  F01D         	goto	u4385
  7520  003A54  5006               	movf	??___fpclassifyf^0,w,c
  7521  003A56  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  7522  003A58  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  7523  003A5A  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  7524  003A5C  B4D8               	btfsc	status,2,c
  7525  003A5E  EF33  F01D         	goto	u4391
  7526  003A62  EF36  F01D         	goto	u4390
  7527  003A66                     u4391:
  7528  003A66  0E01               	movlw	1
  7529  003A68  EF37  F01D         	goto	u4400
  7530  003A6C                     u4390:
  7531  003A6C  0E00               	movlw	0
  7532  003A6E                     u4400:
  7533  003A6E  6E02               	movwf	?___fpclassifyf^0,c
  7534  003A70  6A03               	clrf	(?___fpclassifyf+1)^0,c
  7535  003A72  EF3F  F01D         	goto	l1320
  7536  003A76                     l4229:
  7537  003A76  0E00               	movlw	0
  7538  003A78  6E03               	movwf	(?___fpclassifyf+1)^0,c
  7539  003A7A  0E04               	movlw	4
  7540  003A7C  6E02               	movwf	?___fpclassifyf^0,c
  7541  003A7E                     l1320:
  7542  003A7E  0012               	return		;funcret
  7543  003A80                     __end_of___fpclassifyf:
  7544                           	callstack 0
  7545                           
  7546 ;; *************** function ___fltol *****************
  7547 ;; Defined at:
  7548 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;  f1              4   87[COMRAM] int 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  exp1            1    5[BANK0 ] unsigned char 
  7553 ;;  sign1           1    4[BANK0 ] unsigned char 
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  4   87[COMRAM] long 
  7556 ;; Registers used:
  7557 ;;		wreg, status,2, status,0
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7563 ;;      Params:         4       0       0       0       0       0       0       0       0
  7564 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7565 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7566 ;;      Totals:         4       6       0       0       0       0       0       0       0
  7567 ;;Total ram usage:       10 bytes
  7568 ;; Hardware stack levels used: 1
  7569 ;; Hardware stack levels required when called: 2
  7570 ;; This function calls:
  7571 ;;		Nothing
  7572 ;; This function is called by:
  7573 ;;		_ReadADC
  7574 ;;		_efgtoa
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text24
  7579  003678                     __ptext24:
  7580                           	callstack 0
  7581  003678                     ___fltol:
  7582                           	callstack 24
  7583  003678  345A               	rlcf	(___fltol@f1+2)^0,w,c
  7584  00367A  345B               	rlcf	(___fltol@f1+3)^0,w,c
  7585  00367C  0100               	movlb	0	; () banked
  7586  00367E  6F65               	movwf	___fltol@exp1& (0+255),b
  7587  003680  5165               	movf	___fltol@exp1& (0+255),w,b
  7588  003682  A4D8               	btfss	status,2,c
  7589  003684  EF46  F01B         	goto	u6211
  7590  003688  EF48  F01B         	goto	u6210
  7591  00368C                     u6211:
  7592  00368C  EF52  F01B         	goto	l5495
  7593  003690                     u6210:
  7594  003690                     l5491:
  7595                           
  7596                           ; BSR set to: 0
  7597  003690  0E00               	movlw	0
  7598  003692  6E58               	movwf	?___fltol^0,c
  7599  003694  0E00               	movlw	0
  7600  003696  6E59               	movwf	(?___fltol+1)^0,c
  7601  003698  0E00               	movlw	0
  7602  00369A  6E5A               	movwf	(?___fltol+2)^0,c
  7603  00369C  0E00               	movlw	0
  7604  00369E  6E5B               	movwf	(?___fltol+3)^0,c
  7605  0036A0  EFBF  F01B         	goto	l710
  7606  0036A4                     l5495:
  7607                           
  7608                           ; BSR set to: 0
  7609  0036A4  C058  F060         	movff	___fltol@f1,??___fltol
  7610  0036A8  C059  F061         	movff	___fltol@f1+1,??___fltol+1
  7611  0036AC  C05A  F062         	movff	___fltol@f1+2,??___fltol+2
  7612  0036B0  C05B  F063         	movff	___fltol@f1+3,??___fltol+3
  7613  0036B4  0E20               	movlw	32
  7614  0036B6  EF62  F01B         	goto	u6220
  7615  0036BA                     u6225:
  7616  0036BA  90D8               	bcf	status,0,c
  7617  0036BC  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  7618  0036BE  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  7619  0036C0  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  7620  0036C2  3360               	rrcf	??___fltol& (0+255),f,b
  7621  0036C4                     u6220:
  7622  0036C4  2EE8               	decfsz	wreg,f,c
  7623  0036C6  EF5D  F01B         	goto	u6225
  7624  0036CA  5160               	movf	??___fltol& (0+255),w,b
  7625  0036CC  6F64               	movwf	___fltol@sign1& (0+255),b
  7626  0036CE                     
  7627                           ; BSR set to: 0
  7628  0036CE  8E5A               	bsf	(___fltol@f1+2)^0,7,c
  7629  0036D0                     
  7630                           ; BSR set to: 0
  7631  0036D0  0EFF               	movlw	255
  7632  0036D2  1658               	andwf	___fltol@f1^0,f,c
  7633  0036D4  0EFF               	movlw	255
  7634  0036D6  1659               	andwf	(___fltol@f1+1)^0,f,c
  7635  0036D8  0EFF               	movlw	255
  7636  0036DA  165A               	andwf	(___fltol@f1+2)^0,f,c
  7637  0036DC  0E00               	movlw	0
  7638  0036DE  165B               	andwf	(___fltol@f1+3)^0,f,c
  7639  0036E0                     
  7640                           ; BSR set to: 0
  7641  0036E0  0E96               	movlw	150
  7642  0036E2  5F65               	subwf	___fltol@exp1& (0+255),f,b
  7643  0036E4                     
  7644                           ; BSR set to: 0
  7645  0036E4  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  7646  0036E6  EF79  F01B         	goto	u6230
  7647  0036EA  EF77  F01B         	goto	u6231
  7648  0036EE                     u6231:
  7649  0036EE  EF8F  F01B         	goto	l5515
  7650  0036F2                     u6230:
  7651  0036F2                     
  7652                           ; BSR set to: 0
  7653  0036F2  5165               	movf	___fltol@exp1& (0+255),w,b
  7654  0036F4  0A80               	xorlw	128
  7655  0036F6  0F97               	addlw	151
  7656  0036F8  B0D8               	btfsc	status,0,c
  7657  0036FA  EF81  F01B         	goto	u6241
  7658  0036FE  EF83  F01B         	goto	u6240
  7659  003702                     u6241:
  7660  003702  EF85  F01B         	goto	l5511
  7661  003706                     u6240:
  7662  003706  EF48  F01B         	goto	l5491
  7663  00370A                     l5511:
  7664                           
  7665                           ; BSR set to: 0
  7666  00370A  90D8               	bcf	status,0,c
  7667  00370C  325B               	rrcf	(___fltol@f1+3)^0,f,c
  7668  00370E  325A               	rrcf	(___fltol@f1+2)^0,f,c
  7669  003710  3259               	rrcf	(___fltol@f1+1)^0,f,c
  7670  003712  3258               	rrcf	___fltol@f1^0,f,c
  7671  003714                     
  7672                           ; BSR set to: 0
  7673  003714  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  7674  003716  EF85  F01B         	goto	l5511
  7675  00371A  EFA7  F01B         	goto	l5525
  7676  00371E                     l5515:
  7677                           
  7678                           ; BSR set to: 0
  7679  00371E  0E1F               	movlw	31
  7680  003720  6565               	cpfsgt	___fltol@exp1& (0+255),b
  7681  003722  EF95  F01B         	goto	u6251
  7682  003726  EF97  F01B         	goto	u6250
  7683  00372A                     u6251:
  7684  00372A  EF9F  F01B         	goto	l5523
  7685  00372E                     u6250:
  7686  00372E  EF48  F01B         	goto	l5491
  7687  003732                     l5521:
  7688                           
  7689                           ; BSR set to: 0
  7690  003732  90D8               	bcf	status,0,c
  7691  003734  3658               	rlcf	___fltol@f1^0,f,c
  7692  003736  3659               	rlcf	(___fltol@f1+1)^0,f,c
  7693  003738  365A               	rlcf	(___fltol@f1+2)^0,f,c
  7694  00373A  365B               	rlcf	(___fltol@f1+3)^0,f,c
  7695  00373C  0765               	decf	___fltol@exp1& (0+255),f,b
  7696  00373E                     l5523:
  7697                           
  7698                           ; BSR set to: 0
  7699  00373E  5165               	movf	___fltol@exp1& (0+255),w,b
  7700  003740  A4D8               	btfss	status,2,c
  7701  003742  EFA5  F01B         	goto	u6261
  7702  003746  EFA7  F01B         	goto	u6260
  7703  00374A                     u6261:
  7704  00374A  EF99  F01B         	goto	l5521
  7705  00374E                     u6260:
  7706  00374E                     l5525:
  7707                           
  7708                           ; BSR set to: 0
  7709  00374E  5164               	movf	___fltol@sign1& (0+255),w,b
  7710  003750  B4D8               	btfsc	status,2,c
  7711  003752  EFAD  F01B         	goto	u6271
  7712  003756  EFAF  F01B         	goto	u6270
  7713  00375A                     u6271:
  7714  00375A  EFB7  F01B         	goto	l5529
  7715  00375E                     u6270:
  7716  00375E                     
  7717                           ; BSR set to: 0
  7718  00375E  1E5B               	comf	(___fltol@f1+3)^0,f,c
  7719  003760  1E5A               	comf	(___fltol@f1+2)^0,f,c
  7720  003762  1E59               	comf	(___fltol@f1+1)^0,f,c
  7721  003764  6C58               	negf	___fltol@f1^0,c
  7722  003766  0E00               	movlw	0
  7723  003768  2259               	addwfc	(___fltol@f1+1)^0,f,c
  7724  00376A  225A               	addwfc	(___fltol@f1+2)^0,f,c
  7725  00376C  225B               	addwfc	(___fltol@f1+3)^0,f,c
  7726  00376E                     l5529:
  7727                           
  7728                           ; BSR set to: 0
  7729  00376E  C058  F058         	movff	___fltol@f1,?___fltol
  7730  003772  C059  F059         	movff	___fltol@f1+1,?___fltol+1
  7731  003776  C05A  F05A         	movff	___fltol@f1+2,?___fltol+2
  7732  00377A  C05B  F05B         	movff	___fltol@f1+3,?___fltol+3
  7733  00377E                     l710:
  7734                           
  7735                           ; BSR set to: 0
  7736  00377E  0012               	return		;funcret
  7737  003780                     __end_of___fltol:
  7738                           	callstack 0
  7739                           
  7740 ;; *************** function ___flsub *****************
  7741 ;; Defined at:
  7742 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  b               4    0[BANK0 ] long 
  7745 ;;  a               4    4[BANK0 ] long 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;		None
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  4    0[BANK0 ] long 
  7750 ;; Registers used:
  7751 ;;		wreg, status,2, status,0, cstack
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7757 ;;      Params:         0       8       0       0       0       0       0       0       0
  7758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7760 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7761 ;;Total ram usage:        8 bytes
  7762 ;; Hardware stack levels used: 1
  7763 ;; Hardware stack levels required when called: 3
  7764 ;; This function calls:
  7765 ;;		___fladd
  7766 ;; This function is called by:
  7767 ;;		_efgtoa
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text25
  7772  0043F6                     __ptext25:
  7773                           	callstack 0
  7774  0043F6                     ___flsub:
  7775                           	callstack 23
  7776  0043F6  0E00               	movlw	0
  7777  0043F8  0100               	movlb	0	; () banked
  7778  0043FA  1B64               	xorwf	___flsub@a& (0+255),f,b
  7779  0043FC  0E00               	movlw	0
  7780  0043FE  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
  7781  004400  0E00               	movlw	0
  7782  004402  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
  7783  004404  0E80               	movlw	128
  7784  004406  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
  7785  004408                     
  7786                           ; BSR set to: 0
  7787  004408  C060  F048         	movff	___flsub@b,___fladd@b
  7788  00440C  C061  F049         	movff	___flsub@b+1,___fladd@b+1
  7789  004410  C062  F04A         	movff	___flsub@b+2,___fladd@b+2
  7790  004414  C063  F04B         	movff	___flsub@b+3,___fladd@b+3
  7791  004418  C064  F04C         	movff	___flsub@a,___fladd@a
  7792  00441C  C065  F04D         	movff	___flsub@a+1,___fladd@a+1
  7793  004420  C066  F04E         	movff	___flsub@a+2,___fladd@a+2
  7794  004424  C067  F04F         	movff	___flsub@a+3,___fladd@a+3
  7795  004428  EC5F  F00D         	call	___fladd	;wreg free
  7796  00442C  C048  F060         	movff	?___fladd,?___flsub
  7797  004430  C049  F061         	movff	?___fladd+1,?___flsub+1
  7798  004434  C04A  F062         	movff	?___fladd+2,?___flsub+2
  7799  004438  C04B  F063         	movff	?___fladd+3,?___flsub+3
  7800  00443C  0012               	return		;funcret
  7801  00443E                     __end_of___flsub:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function ___fladd *****************
  7805 ;; Defined at:
  7806 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;  b               4   71[COMRAM] long 
  7809 ;;  a               4   75[COMRAM] long 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  grs             1   86[COMRAM] unsigned char 
  7812 ;;  bexp            1   85[COMRAM] unsigned char 
  7813 ;;  aexp            1   84[COMRAM] unsigned char 
  7814 ;;  signs           1   83[COMRAM] unsigned char 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  4   71[COMRAM] unsigned char 
  7817 ;; Registers used:
  7818 ;;		wreg, status,2, status,0
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7824 ;;      Params:         8       0       0       0       0       0       0       0       0
  7825 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7826 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7827 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7828 ;;Total ram usage:       16 bytes
  7829 ;; Hardware stack levels used: 1
  7830 ;; Hardware stack levels required when called: 2
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_ReadADC
  7835 ;;		___flsub
  7836 ;;		_efgtoa
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text26
  7841  001ABE                     __ptext26:
  7842                           	callstack 0
  7843  001ABE                     ___fladd:
  7844                           	callstack 23
  7845  001ABE  504B               	movf	(___fladd@b+3)^0,w,c
  7846  001AC0  0B80               	andlw	128
  7847  001AC2  6E54               	movwf	___fladd@signs^0,c
  7848  001AC4  504B               	movf	(___fladd@b+3)^0,w,c
  7849  001AC6  244B               	addwf	(___fladd@b+3)^0,w,c
  7850  001AC8  6E56               	movwf	___fladd@bexp^0,c
  7851  001ACA  AE4A               	btfss	(___fladd@b+2)^0,7,c
  7852  001ACC  EF6A  F00D         	goto	u3151
  7853  001AD0  EF6C  F00D         	goto	u3150
  7854  001AD4                     u3151:
  7855  001AD4  EF6D  F00D         	goto	l3517
  7856  001AD8                     u3150:
  7857  001AD8  8056               	bsf	___fladd@bexp^0,0,c
  7858  001ADA                     l3517:
  7859  001ADA  5056               	movf	___fladd@bexp^0,w,c
  7860  001ADC  B4D8               	btfsc	status,2,c
  7861  001ADE  EF73  F00D         	goto	u3161
  7862  001AE2  EF75  F00D         	goto	u3160
  7863  001AE6                     u3161:
  7864  001AE6  EF8A  F00D         	goto	l3527
  7865  001AEA                     u3160:
  7866  001AEA  2856               	incf	___fladd@bexp^0,w,c
  7867  001AEC  A4D8               	btfss	status,2,c
  7868  001AEE  EF7B  F00D         	goto	u3171
  7869  001AF2  EF7D  F00D         	goto	u3170
  7870  001AF6                     u3171:
  7871  001AF6  EF85  F00D         	goto	l3523
  7872  001AFA                     u3170:
  7873  001AFA  0E00               	movlw	0
  7874  001AFC  6E48               	movwf	___fladd@b^0,c
  7875  001AFE  0E00               	movlw	0
  7876  001B00  6E49               	movwf	(___fladd@b+1)^0,c
  7877  001B02  0E00               	movlw	0
  7878  001B04  6E4A               	movwf	(___fladd@b+2)^0,c
  7879  001B06  0E00               	movlw	0
  7880  001B08  6E4B               	movwf	(___fladd@b+3)^0,c
  7881  001B0A                     l3523:
  7882  001B0A  8E4A               	bsf	(___fladd@b+2)^0,7,c
  7883  001B0C  0E00               	movlw	0
  7884  001B0E  6E4B               	movwf	(___fladd@b+3)^0,c
  7885  001B10  EF92  F00D         	goto	l3529
  7886  001B14                     l3527:
  7887  001B14  0E00               	movlw	0
  7888  001B16  6E48               	movwf	___fladd@b^0,c
  7889  001B18  0E00               	movlw	0
  7890  001B1A  6E49               	movwf	(___fladd@b+1)^0,c
  7891  001B1C  0E00               	movlw	0
  7892  001B1E  6E4A               	movwf	(___fladd@b+2)^0,c
  7893  001B20  0E00               	movlw	0
  7894  001B22  6E4B               	movwf	(___fladd@b+3)^0,c
  7895  001B24                     l3529:
  7896  001B24  504F               	movf	(___fladd@a+3)^0,w,c
  7897  001B26  0B80               	andlw	128
  7898  001B28  6E55               	movwf	___fladd@aexp^0,c
  7899  001B2A  5054               	movf	___fladd@signs^0,w,c
  7900  001B2C  1855               	xorwf	___fladd@aexp^0,w,c
  7901  001B2E  B4D8               	btfsc	status,2,c
  7902  001B30  EF9C  F00D         	goto	u3181
  7903  001B34  EF9E  F00D         	goto	u3180
  7904  001B38                     u3181:
  7905  001B38  EF9F  F00D         	goto	l3535
  7906  001B3C                     u3180:
  7907  001B3C  8C54               	bsf	___fladd@signs^0,6,c
  7908  001B3E                     l3535:
  7909  001B3E  504F               	movf	(___fladd@a+3)^0,w,c
  7910  001B40  244F               	addwf	(___fladd@a+3)^0,w,c
  7911  001B42  6E55               	movwf	___fladd@aexp^0,c
  7912  001B44  AE4E               	btfss	(___fladd@a+2)^0,7,c
  7913  001B46  EFA7  F00D         	goto	u3191
  7914  001B4A  EFA9  F00D         	goto	u3190
  7915  001B4E                     u3191:
  7916  001B4E  EFAA  F00D         	goto	l3541
  7917  001B52                     u3190:
  7918  001B52  8055               	bsf	___fladd@aexp^0,0,c
  7919  001B54                     l3541:
  7920  001B54  5055               	movf	___fladd@aexp^0,w,c
  7921  001B56  B4D8               	btfsc	status,2,c
  7922  001B58  EFB0  F00D         	goto	u3201
  7923  001B5C  EFB2  F00D         	goto	u3200
  7924  001B60                     u3201:
  7925  001B60  EFC7  F00D         	goto	l3551
  7926  001B64                     u3200:
  7927  001B64  2855               	incf	___fladd@aexp^0,w,c
  7928  001B66  A4D8               	btfss	status,2,c
  7929  001B68  EFB8  F00D         	goto	u3211
  7930  001B6C  EFBA  F00D         	goto	u3210
  7931  001B70                     u3211:
  7932  001B70  EFC2  F00D         	goto	l3547
  7933  001B74                     u3210:
  7934  001B74  0E00               	movlw	0
  7935  001B76  6E4C               	movwf	___fladd@a^0,c
  7936  001B78  0E00               	movlw	0
  7937  001B7A  6E4D               	movwf	(___fladd@a+1)^0,c
  7938  001B7C  0E00               	movlw	0
  7939  001B7E  6E4E               	movwf	(___fladd@a+2)^0,c
  7940  001B80  0E00               	movlw	0
  7941  001B82  6E4F               	movwf	(___fladd@a+3)^0,c
  7942  001B84                     l3547:
  7943  001B84  8E4E               	bsf	(___fladd@a+2)^0,7,c
  7944  001B86  0E00               	movlw	0
  7945  001B88  6E4F               	movwf	(___fladd@a+3)^0,c
  7946  001B8A  EFCF  F00D         	goto	l3553
  7947  001B8E                     l3551:
  7948  001B8E  0E00               	movlw	0
  7949  001B90  6E4C               	movwf	___fladd@a^0,c
  7950  001B92  0E00               	movlw	0
  7951  001B94  6E4D               	movwf	(___fladd@a+1)^0,c
  7952  001B96  0E00               	movlw	0
  7953  001B98  6E4E               	movwf	(___fladd@a+2)^0,c
  7954  001B9A  0E00               	movlw	0
  7955  001B9C  6E4F               	movwf	(___fladd@a+3)^0,c
  7956  001B9E                     l3553:
  7957  001B9E  5056               	movf	___fladd@bexp^0,w,c
  7958  001BA0  5C55               	subwf	___fladd@aexp^0,w,c
  7959  001BA2  B0D8               	btfsc	status,0,c
  7960  001BA4  EFD6  F00D         	goto	u3221
  7961  001BA8  EFD8  F00D         	goto	u3220
  7962  001BAC                     u3221:
  7963  001BAC  EFFF  F00D         	goto	l3589
  7964  001BB0                     u3220:
  7965  001BB0  AC54               	btfss	___fladd@signs^0,6,c
  7966  001BB2  EFDD  F00D         	goto	u3231
  7967  001BB6  EFDF  F00D         	goto	u3230
  7968  001BBA                     u3231:
  7969  001BBA  EFE1  F00D         	goto	l3559
  7970  001BBE                     u3230:
  7971  001BBE  0E80               	movlw	128
  7972  001BC0  1A54               	xorwf	___fladd@signs^0,f,c
  7973  001BC2                     l3559:
  7974  001BC2  C056  F057         	movff	___fladd@bexp,___fladd@grs
  7975  001BC6  C055  F056         	movff	___fladd@aexp,___fladd@bexp
  7976  001BCA  C057  F055         	movff	___fladd@grs,___fladd@aexp
  7977  001BCE  C048  F057         	movff	___fladd@b,___fladd@grs
  7978  001BD2  C04C  F048         	movff	___fladd@a,___fladd@b
  7979  001BD6  C057  F04C         	movff	___fladd@grs,___fladd@a
  7980  001BDA  C049  F057         	movff	___fladd@b+1,___fladd@grs
  7981  001BDE  C04D  F049         	movff	___fladd@a+1,___fladd@b+1
  7982  001BE2  C057  F04D         	movff	___fladd@grs,___fladd@a+1
  7983  001BE6  C04A  F057         	movff	___fladd@b+2,___fladd@grs
  7984  001BEA  C04E  F04A         	movff	___fladd@a+2,___fladd@b+2
  7985  001BEE  C057  F04E         	movff	___fladd@grs,___fladd@a+2
  7986  001BF2  C04B  F057         	movff	___fladd@b+3,___fladd@grs
  7987  001BF6  C04F  F04B         	movff	___fladd@a+3,___fladd@b+3
  7988  001BFA  C057  F04F         	movff	___fladd@grs,___fladd@a+3
  7989  001BFE                     l3589:
  7990  001BFE  0E00               	movlw	0
  7991  001C00  6E57               	movwf	___fladd@grs^0,c
  7992  001C02  5056               	movf	___fladd@bexp^0,w,c
  7993  001C04  C055  F050         	movff	___fladd@aexp,??___fladd
  7994  001C08  6A51               	clrf	(??___fladd+1)^0,c
  7995  001C0A  5E50               	subwf	??___fladd^0,f,c
  7996  001C0C  0E00               	movlw	0
  7997  001C0E  5A51               	subwfb	(??___fladd+1)^0,f,c
  7998  001C10  BE51               	btfsc	(??___fladd+1)^0,7,c
  7999  001C12  EF14  F00E         	goto	u3241
  8000  001C16  5051               	movf	(??___fladd+1)^0,w,c
  8001  001C18  E109               	bnz	u3240
  8002  001C1A  0E1A               	movlw	26
  8003  001C1C  5C50               	subwf	??___fladd^0,w,c
  8004  001C1E  A0D8               	btfss	status,0,c
  8005  001C20  EF14  F00E         	goto	u3241
  8006  001C24  EF16  F00E         	goto	u3240
  8007  001C28                     u3241:
  8008  001C28  EF4D  F00E         	goto	l942
  8009  001C2C                     u3240:
  8010  001C2C  5048               	movf	___fladd@b^0,w,c
  8011  001C2E  1049               	iorwf	(___fladd@b+1)^0,w,c
  8012  001C30  104A               	iorwf	(___fladd@b+2)^0,w,c
  8013  001C32  104B               	iorwf	(___fladd@b+3)^0,w,c
  8014  001C34  A4D8               	btfss	status,2,c
  8015  001C36  EF1F  F00E         	goto	u3251
  8016  001C3A  EF22  F00E         	goto	u3250
  8017  001C3E                     u3251:
  8018  001C3E  0E01               	movlw	1
  8019  001C40  EF23  F00E         	goto	u3260
  8020  001C44                     u3250:
  8021  001C44  0E00               	movlw	0
  8022  001C46                     u3260:
  8023  001C46  6E57               	movwf	___fladd@grs^0,c
  8024  001C48  0E00               	movlw	0
  8025  001C4A  6E48               	movwf	___fladd@b^0,c
  8026  001C4C  0E00               	movlw	0
  8027  001C4E  6E49               	movwf	(___fladd@b+1)^0,c
  8028  001C50  0E00               	movlw	0
  8029  001C52  6E4A               	movwf	(___fladd@b+2)^0,c
  8030  001C54  0E00               	movlw	0
  8031  001C56  6E4B               	movwf	(___fladd@b+3)^0,c
  8032  001C58  C055  F056         	movff	___fladd@aexp,___fladd@bexp
  8033  001C5C  EF56  F00E         	goto	l941
  8034  001C60                     l943:
  8035  001C60  A057               	btfss	___fladd@grs^0,0,c
  8036  001C62  EF35  F00E         	goto	u3271
  8037  001C66  EF37  F00E         	goto	u3270
  8038  001C6A                     u3271:
  8039  001C6A  EF3D  F00E         	goto	l3601
  8040  001C6E                     u3270:
  8041  001C6E  90D8               	bcf	status,0,c
  8042  001C70  3057               	rrcf	___fladd@grs^0,w,c
  8043  001C72  0901               	iorlw	1
  8044  001C74  6E57               	movwf	___fladd@grs^0,c
  8045  001C76  EF3F  F00E         	goto	l3603
  8046  001C7A                     l3601:
  8047  001C7A  90D8               	bcf	status,0,c
  8048  001C7C  3257               	rrcf	___fladd@grs^0,f,c
  8049  001C7E                     l3603:
  8050  001C7E  A048               	btfss	___fladd@b^0,0,c
  8051  001C80  EF44  F00E         	goto	u3281
  8052  001C84  EF46  F00E         	goto	u3280
  8053  001C88                     u3281:
  8054  001C88  EF47  F00E         	goto	l3607
  8055  001C8C                     u3280:
  8056  001C8C  8E57               	bsf	___fladd@grs^0,7,c
  8057  001C8E                     l3607:
  8058  001C8E  344B               	rlcf	(___fladd@b+3)^0,w,c
  8059  001C90  324B               	rrcf	(___fladd@b+3)^0,f,c
  8060  001C92  324A               	rrcf	(___fladd@b+2)^0,f,c
  8061  001C94  3249               	rrcf	(___fladd@b+1)^0,f,c
  8062  001C96  3248               	rrcf	___fladd@b^0,f,c
  8063  001C98  2A56               	incf	___fladd@bexp^0,f,c
  8064  001C9A                     l942:
  8065  001C9A  5055               	movf	___fladd@aexp^0,w,c
  8066  001C9C  5C56               	subwf	___fladd@bexp^0,w,c
  8067  001C9E  A0D8               	btfss	status,0,c
  8068  001CA0  EF54  F00E         	goto	u3291
  8069  001CA4  EF56  F00E         	goto	u3290
  8070  001CA8                     u3291:
  8071  001CA8  EF30  F00E         	goto	l943
  8072  001CAC                     u3290:
  8073  001CAC                     l941:
  8074  001CAC  BC54               	btfsc	___fladd@signs^0,6,c
  8075  001CAE  EF5B  F00E         	goto	u3301
  8076  001CB2  EF5D  F00E         	goto	u3300
  8077  001CB6                     u3301:
  8078  001CB6  EF9D  F00E         	goto	l3635
  8079  001CBA                     u3300:
  8080  001CBA  5056               	movf	___fladd@bexp^0,w,c
  8081  001CBC  A4D8               	btfss	status,2,c
  8082  001CBE  EF63  F00E         	goto	u3311
  8083  001CC2  EF65  F00E         	goto	u3310
  8084  001CC6                     u3311:
  8085  001CC6  EF6F  F00E         	goto	l3617
  8086  001CCA                     u3310:
  8087  001CCA  0E00               	movlw	0
  8088  001CCC  6E48               	movwf	?___fladd^0,c
  8089  001CCE  0E00               	movlw	0
  8090  001CD0  6E49               	movwf	(?___fladd+1)^0,c
  8091  001CD2  0E00               	movlw	0
  8092  001CD4  6E4A               	movwf	(?___fladd+2)^0,c
  8093  001CD6  0E00               	movlw	0
  8094  001CD8  6E4B               	movwf	(?___fladd+3)^0,c
  8095  001CDA  EFBE  F00F         	goto	l950
  8096  001CDE                     l3617:
  8097  001CDE  504C               	movf	___fladd@a^0,w,c
  8098  001CE0  2648               	addwf	___fladd@b^0,f,c
  8099  001CE2  504D               	movf	(___fladd@a+1)^0,w,c
  8100  001CE4  2249               	addwfc	(___fladd@b+1)^0,f,c
  8101  001CE6  504E               	movf	(___fladd@a+2)^0,w,c
  8102  001CE8  224A               	addwfc	(___fladd@b+2)^0,f,c
  8103  001CEA  504F               	movf	(___fladd@a+3)^0,w,c
  8104  001CEC  224B               	addwfc	(___fladd@b+3)^0,f,c
  8105  001CEE  A04B               	btfss	(___fladd@b+3)^0,0,c
  8106  001CF0  EF7C  F00E         	goto	u3321
  8107  001CF4  EF7E  F00E         	goto	u3320
  8108  001CF8                     u3321:
  8109  001CF8  EF2A  F00F         	goto	l3671
  8110  001CFC                     u3320:
  8111  001CFC  A057               	btfss	___fladd@grs^0,0,c
  8112  001CFE  EF83  F00E         	goto	u3331
  8113  001D02  EF85  F00E         	goto	u3330
  8114  001D06                     u3331:
  8115  001D06  EF8B  F00E         	goto	l3625
  8116  001D0A                     u3330:
  8117  001D0A  90D8               	bcf	status,0,c
  8118  001D0C  3057               	rrcf	___fladd@grs^0,w,c
  8119  001D0E  0901               	iorlw	1
  8120  001D10  6E57               	movwf	___fladd@grs^0,c
  8121  001D12  EF8D  F00E         	goto	l3627
  8122  001D16                     l3625:
  8123  001D16  90D8               	bcf	status,0,c
  8124  001D18  3257               	rrcf	___fladd@grs^0,f,c
  8125  001D1A                     l3627:
  8126  001D1A  A048               	btfss	___fladd@b^0,0,c
  8127  001D1C  EF92  F00E         	goto	u3341
  8128  001D20  EF94  F00E         	goto	u3340
  8129  001D24                     u3341:
  8130  001D24  EF95  F00E         	goto	l3631
  8131  001D28                     u3340:
  8132  001D28  8E57               	bsf	___fladd@grs^0,7,c
  8133  001D2A                     l3631:
  8134  001D2A  344B               	rlcf	(___fladd@b+3)^0,w,c
  8135  001D2C  324B               	rrcf	(___fladd@b+3)^0,f,c
  8136  001D2E  324A               	rrcf	(___fladd@b+2)^0,f,c
  8137  001D30  3249               	rrcf	(___fladd@b+1)^0,f,c
  8138  001D32  3248               	rrcf	___fladd@b^0,f,c
  8139  001D34  2A56               	incf	___fladd@bexp^0,f,c
  8140  001D36  EF2A  F00F         	goto	l3671
  8141  001D3A                     l3635:
  8142  001D3A  504C               	movf	___fladd@a^0,w,c
  8143  001D3C  5C48               	subwf	___fladd@b^0,w,c
  8144  001D3E  504D               	movf	(___fladd@a+1)^0,w,c
  8145  001D40  5849               	subwfb	(___fladd@b+1)^0,w,c
  8146  001D42  504E               	movf	(___fladd@a+2)^0,w,c
  8147  001D44  584A               	subwfb	(___fladd@b+2)^0,w,c
  8148  001D46  504B               	movf	(___fladd@b+3)^0,w,c
  8149  001D48  0A80               	xorlw	128
  8150  001D4A  6E50               	movwf	??___fladd^0,c
  8151  001D4C  504F               	movf	(___fladd@a+3)^0,w,c
  8152  001D4E  0A80               	xorlw	128
  8153  001D50  5850               	subwfb	??___fladd^0,w,c
  8154  001D52  B0D8               	btfsc	status,0,c
  8155  001D54  EFAE  F00E         	goto	u3351
  8156  001D58  EFB0  F00E         	goto	u3350
  8157  001D5C                     u3351:
  8158  001D5C  EFDB  F00E         	goto	l3645
  8159  001D60                     u3350:
  8160  001D60  5048               	movf	___fladd@b^0,w,c
  8161  001D62  5C4C               	subwf	___fladd@a^0,w,c
  8162  001D64  6E50               	movwf	??___fladd^0,c
  8163  001D66  5049               	movf	(___fladd@b+1)^0,w,c
  8164  001D68  584D               	subwfb	(___fladd@a+1)^0,w,c
  8165  001D6A  6E51               	movwf	(??___fladd+1)^0,c
  8166  001D6C  504A               	movf	(___fladd@b+2)^0,w,c
  8167  001D6E  584E               	subwfb	(___fladd@a+2)^0,w,c
  8168  001D70  6E52               	movwf	(??___fladd+2)^0,c
  8169  001D72  504B               	movf	(___fladd@b+3)^0,w,c
  8170  001D74  584F               	subwfb	(___fladd@a+3)^0,w,c
  8171  001D76  6E53               	movwf	(??___fladd+3)^0,c
  8172  001D78  0EFF               	movlw	255
  8173  001D7A  2450               	addwf	??___fladd^0,w,c
  8174  001D7C  6E48               	movwf	___fladd@b^0,c
  8175  001D7E  0EFF               	movlw	255
  8176  001D80  2051               	addwfc	(??___fladd+1)^0,w,c
  8177  001D82  6E49               	movwf	(___fladd@b+1)^0,c
  8178  001D84  0EFF               	movlw	255
  8179  001D86  2052               	addwfc	(??___fladd+2)^0,w,c
  8180  001D88  6E4A               	movwf	(___fladd@b+2)^0,c
  8181  001D8A  0EFF               	movlw	255
  8182  001D8C  2053               	addwfc	(??___fladd+3)^0,w,c
  8183  001D8E  6E4B               	movwf	(___fladd@b+3)^0,c
  8184  001D90  0E80               	movlw	128
  8185  001D92  1A54               	xorwf	___fladd@signs^0,f,c
  8186  001D94  6C57               	negf	___fladd@grs^0,c
  8187  001D96  5057               	movf	___fladd@grs^0,w,c
  8188  001D98  A4D8               	btfss	status,2,c
  8189  001D9A  EFD1  F00E         	goto	u3361
  8190  001D9E  EFD3  F00E         	goto	u3360
  8191  001DA2                     u3361:
  8192  001DA2  EFE3  F00E         	goto	l958
  8193  001DA6                     u3360:
  8194  001DA6  0E01               	movlw	1
  8195  001DA8  2648               	addwf	___fladd@b^0,f,c
  8196  001DAA  0E00               	movlw	0
  8197  001DAC  2249               	addwfc	(___fladd@b+1)^0,f,c
  8198  001DAE  224A               	addwfc	(___fladd@b+2)^0,f,c
  8199  001DB0  224B               	addwfc	(___fladd@b+3)^0,f,c
  8200  001DB2  EFE3  F00E         	goto	l958
  8201  001DB6                     l3645:
  8202  001DB6  504C               	movf	___fladd@a^0,w,c
  8203  001DB8  5E48               	subwf	___fladd@b^0,f,c
  8204  001DBA  504D               	movf	(___fladd@a+1)^0,w,c
  8205  001DBC  5A49               	subwfb	(___fladd@b+1)^0,f,c
  8206  001DBE  504E               	movf	(___fladd@a+2)^0,w,c
  8207  001DC0  5A4A               	subwfb	(___fladd@b+2)^0,f,c
  8208  001DC2  504F               	movf	(___fladd@a+3)^0,w,c
  8209  001DC4  5A4B               	subwfb	(___fladd@b+3)^0,f,c
  8210  001DC6                     l958:
  8211  001DC6  5048               	movf	___fladd@b^0,w,c
  8212  001DC8  1049               	iorwf	(___fladd@b+1)^0,w,c
  8213  001DCA  104A               	iorwf	(___fladd@b+2)^0,w,c
  8214  001DCC  104B               	iorwf	(___fladd@b+3)^0,w,c
  8215  001DCE  A4D8               	btfss	status,2,c
  8216  001DD0  EFEC  F00E         	goto	u3371
  8217  001DD4  EFEE  F00E         	goto	u3370
  8218  001DD8                     u3371:
  8219  001DD8  EF23  F00F         	goto	l3669
  8220  001DDC                     u3370:
  8221  001DDC  5057               	movf	___fladd@grs^0,w,c
  8222  001DDE  A4D8               	btfss	status,2,c
  8223  001DE0  EFF4  F00E         	goto	u3381
  8224  001DE4  EFF6  F00E         	goto	u3380
  8225  001DE8                     u3381:
  8226  001DE8  EF23  F00F         	goto	l3669
  8227  001DEC                     u3380:
  8228  001DEC  0E00               	movlw	0
  8229  001DEE  6E48               	movwf	?___fladd^0,c
  8230  001DF0  0E00               	movlw	0
  8231  001DF2  6E49               	movwf	(?___fladd+1)^0,c
  8232  001DF4  0E00               	movlw	0
  8233  001DF6  6E4A               	movwf	(?___fladd+2)^0,c
  8234  001DF8  0E00               	movlw	0
  8235  001DFA  6E4B               	movwf	(?___fladd+3)^0,c
  8236  001DFC  EFBE  F00F         	goto	l950
  8237  001E00                     l3653:
  8238  001E00  90D8               	bcf	status,0,c
  8239  001E02  3648               	rlcf	___fladd@b^0,f,c
  8240  001E04  3649               	rlcf	(___fladd@b+1)^0,f,c
  8241  001E06  364A               	rlcf	(___fladd@b+2)^0,f,c
  8242  001E08  364B               	rlcf	(___fladd@b+3)^0,f,c
  8243  001E0A  AE57               	btfss	___fladd@grs^0,7,c
  8244  001E0C  EF0A  F00F         	goto	u3391
  8245  001E10  EF0C  F00F         	goto	u3390
  8246  001E14                     u3391:
  8247  001E14  EF0D  F00F         	goto	l3659
  8248  001E18                     u3390:
  8249  001E18  8048               	bsf	___fladd@b^0,0,c
  8250  001E1A                     l3659:
  8251  001E1A  A057               	btfss	___fladd@grs^0,0,c
  8252  001E1C  EF12  F00F         	goto	u3401
  8253  001E20  EF14  F00F         	goto	u3400
  8254  001E24                     u3401:
  8255  001E24  EF18  F00F         	goto	l3663
  8256  001E28                     u3400:
  8257  001E28  80D8               	bsf	status,0,c
  8258  001E2A  3657               	rlcf	___fladd@grs^0,f,c
  8259  001E2C  EF1A  F00F         	goto	l3665
  8260  001E30                     l3663:
  8261  001E30  90D8               	bcf	status,0,c
  8262  001E32  3657               	rlcf	___fladd@grs^0,f,c
  8263  001E34                     l3665:
  8264  001E34  5056               	movf	___fladd@bexp^0,w,c
  8265  001E36  B4D8               	btfsc	status,2,c
  8266  001E38  EF20  F00F         	goto	u3411
  8267  001E3C  EF22  F00F         	goto	u3410
  8268  001E40                     u3411:
  8269  001E40  EF23  F00F         	goto	l3669
  8270  001E44                     u3410:
  8271  001E44  0656               	decf	___fladd@bexp^0,f,c
  8272  001E46                     l3669:
  8273  001E46  AE4A               	btfss	(___fladd@b+2)^0,7,c
  8274  001E48  EF28  F00F         	goto	u3421
  8275  001E4C  EF2A  F00F         	goto	u3420
  8276  001E50                     u3421:
  8277  001E50  EF00  F00F         	goto	l3653
  8278  001E54                     u3420:
  8279  001E54                     l3671:
  8280  001E54  0E00               	movlw	0
  8281  001E56  6E55               	movwf	___fladd@aexp^0,c
  8282  001E58  AE57               	btfss	___fladd@grs^0,7,c
  8283  001E5A  EF31  F00F         	goto	u3431
  8284  001E5E  EF33  F00F         	goto	u3430
  8285  001E62                     u3431:
  8286  001E62  EF4B  F00F         	goto	l967
  8287  001E66                     u3430:
  8288  001E66  C057  F050         	movff	___fladd@grs,??___fladd
  8289  001E6A  0E7F               	movlw	127
  8290  001E6C  1650               	andwf	??___fladd^0,f,c
  8291  001E6E  B4D8               	btfsc	status,2,c
  8292  001E70  EF3C  F00F         	goto	u3441
  8293  001E74  EF3E  F00F         	goto	u3440
  8294  001E78                     u3441:
  8295  001E78  EF42  F00F         	goto	l968
  8296  001E7C                     u3440:
  8297  001E7C                     l3677:
  8298  001E7C  0E01               	movlw	1
  8299  001E7E  6E55               	movwf	___fladd@aexp^0,c
  8300  001E80  EF4B  F00F         	goto	l967
  8301  001E84                     l968:
  8302  001E84  A048               	btfss	___fladd@b^0,0,c
  8303  001E86  EF47  F00F         	goto	u3451
  8304  001E8A  EF49  F00F         	goto	u3450
  8305  001E8E                     u3451:
  8306  001E8E  EF4B  F00F         	goto	l967
  8307  001E92                     u3450:
  8308  001E92  EF3E  F00F         	goto	l3677
  8309  001E96                     l967:
  8310  001E96  5055               	movf	___fladd@aexp^0,w,c
  8311  001E98  B4D8               	btfsc	status,2,c
  8312  001E9A  EF51  F00F         	goto	u3461
  8313  001E9E  EF53  F00F         	goto	u3460
  8314  001EA2                     u3461:
  8315  001EA2  EF7E  F00F         	goto	l3689
  8316  001EA6                     u3460:
  8317  001EA6  0E01               	movlw	1
  8318  001EA8  2648               	addwf	___fladd@b^0,f,c
  8319  001EAA  0E00               	movlw	0
  8320  001EAC  2249               	addwfc	(___fladd@b+1)^0,f,c
  8321  001EAE  224A               	addwfc	(___fladd@b+2)^0,f,c
  8322  001EB0  224B               	addwfc	(___fladd@b+3)^0,f,c
  8323  001EB2  A04B               	btfss	(___fladd@b+3)^0,0,c
  8324  001EB4  EF5E  F00F         	goto	u3471
  8325  001EB8  EF60  F00F         	goto	u3470
  8326  001EBC                     u3471:
  8327  001EBC  EF7E  F00F         	goto	l3689
  8328  001EC0                     u3470:
  8329  001EC0  C048  F050         	movff	___fladd@b,??___fladd
  8330  001EC4  C049  F051         	movff	___fladd@b+1,??___fladd+1
  8331  001EC8  C04A  F052         	movff	___fladd@b+2,??___fladd+2
  8332  001ECC  C04B  F053         	movff	___fladd@b+3,??___fladd+3
  8333  001ED0  3453               	rlcf	(??___fladd+3)^0,w,c
  8334  001ED2  3253               	rrcf	(??___fladd+3)^0,f,c
  8335  001ED4  3252               	rrcf	(??___fladd+2)^0,f,c
  8336  001ED6  3251               	rrcf	(??___fladd+1)^0,f,c
  8337  001ED8  3250               	rrcf	??___fladd^0,f,c
  8338  001EDA  C050  F048         	movff	??___fladd,___fladd@b
  8339  001EDE  C051  F049         	movff	??___fladd+1,___fladd@b+1
  8340  001EE2  C052  F04A         	movff	??___fladd+2,___fladd@b+2
  8341  001EE6  C053  F04B         	movff	??___fladd+3,___fladd@b+3
  8342  001EEA  2856               	incf	___fladd@bexp^0,w,c
  8343  001EEC  B4D8               	btfsc	status,2,c
  8344  001EEE  EF7B  F00F         	goto	u3481
  8345  001EF2  EF7D  F00F         	goto	u3480
  8346  001EF6                     u3481:
  8347  001EF6  EF7E  F00F         	goto	l3689
  8348  001EFA                     u3480:
  8349  001EFA  2A56               	incf	___fladd@bexp^0,f,c
  8350  001EFC                     l3689:
  8351  001EFC  2856               	incf	___fladd@bexp^0,w,c
  8352  001EFE  B4D8               	btfsc	status,2,c
  8353  001F00  EF84  F00F         	goto	u3491
  8354  001F04  EF86  F00F         	goto	u3490
  8355  001F08                     u3491:
  8356  001F08  EF8E  F00F         	goto	l3693
  8357  001F0C                     u3490:
  8358  001F0C  5056               	movf	___fladd@bexp^0,w,c
  8359  001F0E  A4D8               	btfss	status,2,c
  8360  001F10  EF8C  F00F         	goto	u3501
  8361  001F14  EF8E  F00F         	goto	u3500
  8362  001F18                     u3501:
  8363  001F18  EFA0  F00F         	goto	l3697
  8364  001F1C                     u3500:
  8365  001F1C                     l3693:
  8366  001F1C  0E00               	movlw	0
  8367  001F1E  6E48               	movwf	___fladd@b^0,c
  8368  001F20  0E00               	movlw	0
  8369  001F22  6E49               	movwf	(___fladd@b+1)^0,c
  8370  001F24  0E00               	movlw	0
  8371  001F26  6E4A               	movwf	(___fladd@b+2)^0,c
  8372  001F28  0E00               	movlw	0
  8373  001F2A  6E4B               	movwf	(___fladd@b+3)^0,c
  8374  001F2C  5056               	movf	___fladd@bexp^0,w,c
  8375  001F2E  A4D8               	btfss	status,2,c
  8376  001F30  EF9C  F00F         	goto	u3511
  8377  001F34  EF9E  F00F         	goto	u3510
  8378  001F38                     u3511:
  8379  001F38  EFA0  F00F         	goto	l3697
  8380  001F3C                     u3510:
  8381  001F3C  0E00               	movlw	0
  8382  001F3E  6E54               	movwf	___fladd@signs^0,c
  8383  001F40                     l3697:
  8384  001F40  A056               	btfss	___fladd@bexp^0,0,c
  8385  001F42  EFA5  F00F         	goto	u3521
  8386  001F46  EFA7  F00F         	goto	u3520
  8387  001F4A                     u3521:
  8388  001F4A  EFAA  F00F         	goto	l3701
  8389  001F4E                     u3520:
  8390  001F4E  8E4A               	bsf	(___fladd@b+2)^0,7,c
  8391  001F50  EFAB  F00F         	goto	l3703
  8392  001F54                     l3701:
  8393  001F54  9E4A               	bcf	(___fladd@b+2)^0,7,c
  8394  001F56                     l3703:
  8395  001F56  90D8               	bcf	status,0,c
  8396  001F58  3056               	rrcf	___fladd@bexp^0,w,c
  8397  001F5A  6E4B               	movwf	(___fladd@b+3)^0,c
  8398  001F5C  AE54               	btfss	___fladd@signs^0,7,c
  8399  001F5E  EFB3  F00F         	goto	u3531
  8400  001F62  EFB5  F00F         	goto	u3530
  8401  001F66                     u3531:
  8402  001F66  EFB6  F00F         	goto	l3709
  8403  001F6A                     u3530:
  8404  001F6A  8E4B               	bsf	(___fladd@b+3)^0,7,c
  8405  001F6C                     l3709:
  8406  001F6C  C048  F048         	movff	___fladd@b,?___fladd
  8407  001F70  C049  F049         	movff	___fladd@b+1,?___fladd+1
  8408  001F74  C04A  F04A         	movff	___fladd@b+2,?___fladd+2
  8409  001F78  C04B  F04B         	movff	___fladd@b+3,?___fladd+3
  8410  001F7C                     l950:
  8411  001F7C  0012               	return		;funcret
  8412  001F7E                     __end_of___fladd:
  8413                           	callstack 0
  8414                           
  8415 ;; *************** function ___flneg *****************
  8416 ;; Defined at:
  8417 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  f1              4    1[COMRAM] unsigned char 
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  4    1[COMRAM] unsigned char 
  8424 ;; Registers used:
  8425 ;;		wreg, status,2, status,0
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8431 ;;      Params:         4       0       0       0       0       0       0       0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8434 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8435 ;;Total ram usage:        4 bytes
  8436 ;; Hardware stack levels used: 1
  8437 ;; Hardware stack levels required when called: 2
  8438 ;; This function calls:
  8439 ;;		Nothing
  8440 ;; This function is called by:
  8441 ;;		_efgtoa
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text27
  8446  004636                     __ptext27:
  8447                           	callstack 0
  8448  004636                     ___flneg:
  8449                           	callstack 24
  8450  004636  5002               	movf	___flneg@f1^0,w,c
  8451  004638  1003               	iorwf	(___flneg@f1+1)^0,w,c
  8452  00463A  1004               	iorwf	(___flneg@f1+2)^0,w,c
  8453  00463C  1005               	iorwf	(___flneg@f1+3)^0,w,c
  8454  00463E  B4D8               	btfsc	status,2,c
  8455  004640  EF24  F023         	goto	u4221
  8456  004644  EF26  F023         	goto	u4220
  8457  004648                     u4221:
  8458  004648  EF2E  F023         	goto	l4141
  8459  00464C                     u4220:
  8460  00464C  0E00               	movlw	0
  8461  00464E  1A02               	xorwf	___flneg@f1^0,f,c
  8462  004650  0E00               	movlw	0
  8463  004652  1A03               	xorwf	(___flneg@f1+1)^0,f,c
  8464  004654  0E00               	movlw	0
  8465  004656  1A04               	xorwf	(___flneg@f1+2)^0,f,c
  8466  004658  0E80               	movlw	128
  8467  00465A  1A05               	xorwf	(___flneg@f1+3)^0,f,c
  8468  00465C                     l4141:
  8469  00465C  C002  F002         	movff	___flneg@f1,?___flneg
  8470  004660  C003  F003         	movff	___flneg@f1+1,?___flneg+1
  8471  004664  C004  F004         	movff	___flneg@f1+2,?___flneg+2
  8472  004668  C005  F005         	movff	___flneg@f1+3,?___flneg+3
  8473  00466C  0012               	return		;funcret
  8474  00466E                     __end_of___flneg:
  8475                           	callstack 0
  8476                           
  8477 ;; *************** function ___flmul *****************
  8478 ;; Defined at:
  8479 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  b               4   21[COMRAM] unsigned char 
  8482 ;;  a               4   25[COMRAM] unsigned char 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  prod            4   40[COMRAM] struct .
  8485 ;;  grs             4   34[COMRAM] unsigned long 
  8486 ;;  temp            2   44[COMRAM] struct .
  8487 ;;  bexp            1   39[COMRAM] unsigned char 
  8488 ;;  aexp            1   38[COMRAM] unsigned char 
  8489 ;;  sign            1   33[COMRAM] unsigned char 
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  4   21[COMRAM] unsigned char 
  8492 ;; Registers used:
  8493 ;;		wreg, status,2, status,0, prodl, prodh
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8499 ;;      Params:         8       0       0       0       0       0       0       0       0
  8500 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8501 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8502 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8503 ;;Total ram usage:       25 bytes
  8504 ;; Hardware stack levels used: 1
  8505 ;; Hardware stack levels required when called: 2
  8506 ;; This function calls:
  8507 ;;		Nothing
  8508 ;; This function is called by:
  8509 ;;		_ReadADC
  8510 ;;		_efgtoa
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text28
  8515  001F7E                     __ptext28:
  8516                           	callstack 0
  8517  001F7E                     ___flmul:
  8518                           	callstack 24
  8519  001F7E  5019               	movf	(___flmul@b+3)^0,w,c
  8520  001F80  0B80               	andlw	128
  8521  001F82  6E22               	movwf	___flmul@sign^0,c
  8522  001F84  5019               	movf	(___flmul@b+3)^0,w,c
  8523  001F86  2419               	addwf	(___flmul@b+3)^0,w,c
  8524  001F88  6E28               	movwf	___flmul@bexp^0,c
  8525  001F8A  AE18               	btfss	(___flmul@b+2)^0,7,c
  8526  001F8C  EFCA  F00F         	goto	u3831
  8527  001F90  EFCC  F00F         	goto	u3830
  8528  001F94                     u3831:
  8529  001F94  EFCD  F00F         	goto	l3889
  8530  001F98                     u3830:
  8531  001F98  8028               	bsf	___flmul@bexp^0,0,c
  8532  001F9A                     l3889:
  8533  001F9A  5028               	movf	___flmul@bexp^0,w,c
  8534  001F9C  B4D8               	btfsc	status,2,c
  8535  001F9E  EFD3  F00F         	goto	u3841
  8536  001FA2  EFD5  F00F         	goto	u3840
  8537  001FA6                     u3841:
  8538  001FA6  EFE8  F00F         	goto	l3897
  8539  001FAA                     u3840:
  8540  001FAA  2828               	incf	___flmul@bexp^0,w,c
  8541  001FAC  A4D8               	btfss	status,2,c
  8542  001FAE  EFDB  F00F         	goto	u3851
  8543  001FB2  EFDD  F00F         	goto	u3850
  8544  001FB6                     u3851:
  8545  001FB6  EFE5  F00F         	goto	l3895
  8546  001FBA                     u3850:
  8547  001FBA  0E00               	movlw	0
  8548  001FBC  6E16               	movwf	___flmul@b^0,c
  8549  001FBE  0E00               	movlw	0
  8550  001FC0  6E17               	movwf	(___flmul@b+1)^0,c
  8551  001FC2  0E00               	movlw	0
  8552  001FC4  6E18               	movwf	(___flmul@b+2)^0,c
  8553  001FC6  0E00               	movlw	0
  8554  001FC8  6E19               	movwf	(___flmul@b+3)^0,c
  8555  001FCA                     l3895:
  8556  001FCA  8E18               	bsf	(___flmul@b+2)^0,7,c
  8557  001FCC  EFF0  F00F         	goto	l3899
  8558  001FD0                     l3897:
  8559  001FD0  0E00               	movlw	0
  8560  001FD2  6E16               	movwf	___flmul@b^0,c
  8561  001FD4  0E00               	movlw	0
  8562  001FD6  6E17               	movwf	(___flmul@b+1)^0,c
  8563  001FD8  0E00               	movlw	0
  8564  001FDA  6E18               	movwf	(___flmul@b+2)^0,c
  8565  001FDC  0E00               	movlw	0
  8566  001FDE  6E19               	movwf	(___flmul@b+3)^0,c
  8567  001FE0                     l3899:
  8568  001FE0  501D               	movf	(___flmul@a+3)^0,w,c
  8569  001FE2  0B80               	andlw	128
  8570  001FE4  1A22               	xorwf	___flmul@sign^0,f,c
  8571  001FE6  501D               	movf	(___flmul@a+3)^0,w,c
  8572  001FE8  241D               	addwf	(___flmul@a+3)^0,w,c
  8573  001FEA  6E27               	movwf	___flmul@aexp^0,c
  8574  001FEC  AE1C               	btfss	(___flmul@a+2)^0,7,c
  8575  001FEE  EFFB  F00F         	goto	u3861
  8576  001FF2  EFFD  F00F         	goto	u3860
  8577  001FF6                     u3861:
  8578  001FF6  EFFE  F00F         	goto	l3907
  8579  001FFA                     u3860:
  8580  001FFA  8027               	bsf	___flmul@aexp^0,0,c
  8581  001FFC                     l3907:
  8582  001FFC  5027               	movf	___flmul@aexp^0,w,c
  8583  001FFE  B4D8               	btfsc	status,2,c
  8584  002000  EF04  F010         	goto	u3871
  8585  002004  EF06  F010         	goto	u3870
  8586  002008                     u3871:
  8587  002008  EF19  F010         	goto	l3915
  8588  00200C                     u3870:
  8589  00200C  2827               	incf	___flmul@aexp^0,w,c
  8590  00200E  A4D8               	btfss	status,2,c
  8591  002010  EF0C  F010         	goto	u3881
  8592  002014  EF0E  F010         	goto	u3880
  8593  002018                     u3881:
  8594  002018  EF16  F010         	goto	l3913
  8595  00201C                     u3880:
  8596  00201C  0E00               	movlw	0
  8597  00201E  6E1A               	movwf	___flmul@a^0,c
  8598  002020  0E00               	movlw	0
  8599  002022  6E1B               	movwf	(___flmul@a+1)^0,c
  8600  002024  0E00               	movlw	0
  8601  002026  6E1C               	movwf	(___flmul@a+2)^0,c
  8602  002028  0E00               	movlw	0
  8603  00202A  6E1D               	movwf	(___flmul@a+3)^0,c
  8604  00202C                     l3913:
  8605  00202C  8E1C               	bsf	(___flmul@a+2)^0,7,c
  8606  00202E  EF21  F010         	goto	l1027
  8607  002032                     l3915:
  8608  002032  0E00               	movlw	0
  8609  002034  6E1A               	movwf	___flmul@a^0,c
  8610  002036  0E00               	movlw	0
  8611  002038  6E1B               	movwf	(___flmul@a+1)^0,c
  8612  00203A  0E00               	movlw	0
  8613  00203C  6E1C               	movwf	(___flmul@a+2)^0,c
  8614  00203E  0E00               	movlw	0
  8615  002040  6E1D               	movwf	(___flmul@a+3)^0,c
  8616  002042                     l1027:
  8617  002042  5027               	movf	___flmul@aexp^0,w,c
  8618  002044  B4D8               	btfsc	status,2,c
  8619  002046  EF27  F010         	goto	u3891
  8620  00204A  EF29  F010         	goto	u3890
  8621  00204E                     u3891:
  8622  00204E  EF31  F010         	goto	l3919
  8623  002052                     u3890:
  8624  002052  5028               	movf	___flmul@bexp^0,w,c
  8625  002054  A4D8               	btfss	status,2,c
  8626  002056  EF2F  F010         	goto	u3901
  8627  00205A  EF31  F010         	goto	u3900
  8628  00205E                     u3901:
  8629  00205E  EF3B  F010         	goto	l3923
  8630  002062                     u3900:
  8631  002062                     l3919:
  8632  002062  0E00               	movlw	0
  8633  002064  6E16               	movwf	?___flmul^0,c
  8634  002066  0E00               	movlw	0
  8635  002068  6E17               	movwf	(?___flmul+1)^0,c
  8636  00206A  0E00               	movlw	0
  8637  00206C  6E18               	movwf	(?___flmul+2)^0,c
  8638  00206E  0E00               	movlw	0
  8639  002070  6E19               	movwf	(?___flmul+3)^0,c
  8640  002072  EFD3  F011         	goto	l1031
  8641  002076                     l3923:
  8642  002076  501C               	movf	(___flmul@a+2)^0,w,c
  8643  002078  0216               	mulwf	___flmul@b^0,c
  8644  00207A  CFF3 F02D          	movff	prodl,___flmul@temp
  8645  00207E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  8646  002082  502D               	movf	___flmul@temp^0,w,c
  8647  002084  6E23               	movwf	___flmul@grs^0,c
  8648  002086  6A24               	clrf	(___flmul@grs+1)^0,c
  8649  002088  6A25               	clrf	(___flmul@grs+2)^0,c
  8650  00208A  6A26               	clrf	(___flmul@grs+3)^0,c
  8651  00208C  502E               	movf	(___flmul@temp+1)^0,w,c
  8652  00208E  6E29               	movwf	___flmul@prod^0,c
  8653  002090  6A2A               	clrf	(___flmul@prod+1)^0,c
  8654  002092  6A2B               	clrf	(___flmul@prod+2)^0,c
  8655  002094  6A2C               	clrf	(___flmul@prod+3)^0,c
  8656  002096  501B               	movf	(___flmul@a+1)^0,w,c
  8657  002098  0217               	mulwf	(___flmul@b+1)^0,c
  8658  00209A  CFF3 F02D          	movff	prodl,___flmul@temp
  8659  00209E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  8660  0020A2  502D               	movf	___flmul@temp^0,w,c
  8661  0020A4  2623               	addwf	___flmul@grs^0,f,c
  8662  0020A6  0E00               	movlw	0
  8663  0020A8  2224               	addwfc	(___flmul@grs+1)^0,f,c
  8664  0020AA  2225               	addwfc	(___flmul@grs+2)^0,f,c
  8665  0020AC  2226               	addwfc	(___flmul@grs+3)^0,f,c
  8666  0020AE  502E               	movf	(___flmul@temp+1)^0,w,c
  8667  0020B0  2629               	addwf	___flmul@prod^0,f,c
  8668  0020B2  0E00               	movlw	0
  8669  0020B4  222A               	addwfc	(___flmul@prod+1)^0,f,c
  8670  0020B6  222B               	addwfc	(___flmul@prod+2)^0,f,c
  8671  0020B8  222C               	addwfc	(___flmul@prod+3)^0,f,c
  8672  0020BA  501A               	movf	___flmul@a^0,w,c
  8673  0020BC  0218               	mulwf	(___flmul@b+2)^0,c
  8674  0020BE  CFF3 F02D          	movff	prodl,___flmul@temp
  8675  0020C2  CFF4 F02E          	movff	prodh,___flmul@temp+1
  8676  0020C6  502D               	movf	___flmul@temp^0,w,c
  8677  0020C8  2623               	addwf	___flmul@grs^0,f,c
  8678  0020CA  0E00               	movlw	0
  8679  0020CC  2224               	addwfc	(___flmul@grs+1)^0,f,c
  8680  0020CE  2225               	addwfc	(___flmul@grs+2)^0,f,c
  8681  0020D0  2226               	addwfc	(___flmul@grs+3)^0,f,c
  8682  0020D2  502E               	movf	(___flmul@temp+1)^0,w,c
  8683  0020D4  2629               	addwf	___flmul@prod^0,f,c
  8684  0020D6  0E00               	movlw	0
  8685  0020D8  222A               	addwfc	(___flmul@prod+1)^0,f,c
  8686  0020DA  222B               	addwfc	(___flmul@prod+2)^0,f,c
  8687  0020DC  222C               	addwfc	(___flmul@prod+3)^0,f,c
  8688  0020DE  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  8689  0020E2  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  8690  0020E6  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  8691  0020EA  6A23               	clrf	___flmul@grs^0,c
  8692  0020EC  501A               	movf	___flmul@a^0,w,c
  8693  0020EE  0217               	mulwf	(___flmul@b+1)^0,c
  8694  0020F0  CFF3 F02D          	movff	prodl,___flmul@temp
  8695  0020F4  CFF4 F02E          	movff	prodh,___flmul@temp+1
  8696  0020F8  502D               	movf	___flmul@temp^0,w,c
  8697  0020FA  2623               	addwf	___flmul@grs^0,f,c
  8698  0020FC  502E               	movf	(___flmul@temp+1)^0,w,c
  8699  0020FE  2224               	addwfc	(___flmul@grs+1)^0,f,c
  8700  002100  0E00               	movlw	0
  8701  002102  2225               	addwfc	(___flmul@grs+2)^0,f,c
  8702  002104  0E00               	movlw	0
  8703  002106  2226               	addwfc	(___flmul@grs+3)^0,f,c
  8704  002108  501B               	movf	(___flmul@a+1)^0,w,c
  8705  00210A  0216               	mulwf	___flmul@b^0,c
  8706  00210C  CFF3 F02D          	movff	prodl,___flmul@temp
  8707  002110  CFF4 F02E          	movff	prodh,___flmul@temp+1
  8708  002114  502D               	movf	___flmul@temp^0,w,c
  8709  002116  2623               	addwf	___flmul@grs^0,f,c
  8710  002118  502E               	movf	(___flmul@temp+1)^0,w,c
  8711  00211A  2224               	addwfc	(___flmul@grs+1)^0,f,c
  8712  00211C  0E00               	movlw	0
  8713  00211E  2225               	addwfc	(___flmul@grs+2)^0,f,c
  8714  002120  0E00               	movlw	0
  8715  002122  2226               	addwfc	(___flmul@grs+3)^0,f,c
  8716  002124  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  8717  002128  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  8718  00212C  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  8719  002130  6A23               	clrf	___flmul@grs^0,c
  8720  002132  501A               	movf	___flmul@a^0,w,c
  8721  002134  0216               	mulwf	___flmul@b^0,c
  8722  002136  CFF3 F02D          	movff	prodl,___flmul@temp
  8723  00213A  CFF4 F02E          	movff	prodh,___flmul@temp+1
  8724  00213E  502D               	movf	___flmul@temp^0,w,c
  8725  002140  2623               	addwf	___flmul@grs^0,f,c
  8726  002142  502E               	movf	(___flmul@temp+1)^0,w,c
  8727  002144  2224               	addwfc	(___flmul@grs+1)^0,f,c
  8728  002146  0E00               	movlw	0
  8729  002148  2225               	addwfc	(___flmul@grs+2)^0,f,c
  8730  00214A  0E00               	movlw	0
  8731  00214C  2226               	addwfc	(___flmul@grs+3)^0,f,c
  8732  00214E  501C               	movf	(___flmul@a+2)^0,w,c
  8733  002150  0217               	mulwf	(___flmul@b+1)^0,c
  8734  002152  CFF3 F02D          	movff	prodl,___flmul@temp
  8735  002156  CFF4 F02E          	movff	prodh,___flmul@temp+1
  8736  00215A  502D               	movf	___flmul@temp^0,w,c
  8737  00215C  2629               	addwf	___flmul@prod^0,f,c
  8738  00215E  502E               	movf	(___flmul@temp+1)^0,w,c
  8739  002160  222A               	addwfc	(___flmul@prod+1)^0,f,c
  8740  002162  0E00               	movlw	0
  8741  002164  222B               	addwfc	(___flmul@prod+2)^0,f,c
  8742  002166  0E00               	movlw	0
  8743  002168  222C               	addwfc	(___flmul@prod+3)^0,f,c
  8744  00216A  501B               	movf	(___flmul@a+1)^0,w,c
  8745  00216C  0218               	mulwf	(___flmul@b+2)^0,c
  8746  00216E  CFF3 F02D          	movff	prodl,___flmul@temp
  8747  002172  CFF4 F02E          	movff	prodh,___flmul@temp+1
  8748  002176  502D               	movf	___flmul@temp^0,w,c
  8749  002178  2629               	addwf	___flmul@prod^0,f,c
  8750  00217A  502E               	movf	(___flmul@temp+1)^0,w,c
  8751  00217C  222A               	addwfc	(___flmul@prod+1)^0,f,c
  8752  00217E  0E00               	movlw	0
  8753  002180  222B               	addwfc	(___flmul@prod+2)^0,f,c
  8754  002182  0E00               	movlw	0
  8755  002184  222C               	addwfc	(___flmul@prod+3)^0,f,c
  8756  002186  501C               	movf	(___flmul@a+2)^0,w,c
  8757  002188  0218               	mulwf	(___flmul@b+2)^0,c
  8758  00218A  CFF3 F02D          	movff	prodl,___flmul@temp
  8759  00218E  CFF4 F02E          	movff	prodh,___flmul@temp+1
  8760  002192  502D               	movf	___flmul@temp^0,w,c
  8761  002194  6E1E               	movwf	??___flmul^0,c
  8762  002196  502E               	movf	(___flmul@temp+1)^0,w,c
  8763  002198  6E1F               	movwf	(??___flmul+1)^0,c
  8764  00219A  6A20               	clrf	(??___flmul+2)^0,c
  8765  00219C  6A21               	clrf	(??___flmul+3)^0,c
  8766  00219E  C020  F021         	movff	??___flmul+2,??___flmul+3
  8767  0021A2  C01F  F020         	movff	??___flmul+1,??___flmul+2
  8768  0021A6  C01E  F01F         	movff	??___flmul,??___flmul+1
  8769  0021AA  6A1E               	clrf	??___flmul^0,c
  8770  0021AC  501E               	movf	??___flmul^0,w,c
  8771  0021AE  2629               	addwf	___flmul@prod^0,f,c
  8772  0021B0  501F               	movf	(??___flmul+1)^0,w,c
  8773  0021B2  222A               	addwfc	(___flmul@prod+1)^0,f,c
  8774  0021B4  5020               	movf	(??___flmul+2)^0,w,c
  8775  0021B6  222B               	addwfc	(___flmul@prod+2)^0,f,c
  8776  0021B8  5021               	movf	(??___flmul+3)^0,w,c
  8777  0021BA  222C               	addwfc	(___flmul@prod+3)^0,f,c
  8778  0021BC  C023  F01E         	movff	___flmul@grs,??___flmul
  8779  0021C0  C024  F01F         	movff	___flmul@grs+1,??___flmul+1
  8780  0021C4  C025  F020         	movff	___flmul@grs+2,??___flmul+2
  8781  0021C8  C026  F021         	movff	___flmul@grs+3,??___flmul+3
  8782  0021CC  0E19               	movlw	25
  8783  0021CE  EFEE  F010         	goto	u3910
  8784  0021D2                     u3915:
  8785  0021D2  90D8               	bcf	status,0,c
  8786  0021D4  3221               	rrcf	(??___flmul+3)^0,f,c
  8787  0021D6  3220               	rrcf	(??___flmul+2)^0,f,c
  8788  0021D8  321F               	rrcf	(??___flmul+1)^0,f,c
  8789  0021DA  321E               	rrcf	??___flmul^0,f,c
  8790  0021DC                     u3910:
  8791  0021DC  2EE8               	decfsz	wreg,f,c
  8792  0021DE  EFE9  F010         	goto	u3915
  8793  0021E2  501E               	movf	??___flmul^0,w,c
  8794  0021E4  2629               	addwf	___flmul@prod^0,f,c
  8795  0021E6  501F               	movf	(??___flmul+1)^0,w,c
  8796  0021E8  222A               	addwfc	(___flmul@prod+1)^0,f,c
  8797  0021EA  5020               	movf	(??___flmul+2)^0,w,c
  8798  0021EC  222B               	addwfc	(___flmul@prod+2)^0,f,c
  8799  0021EE  5021               	movf	(??___flmul+3)^0,w,c
  8800  0021F0  222C               	addwfc	(___flmul@prod+3)^0,f,c
  8801  0021F2  C025  F026         	movff	___flmul@grs+2,___flmul@grs+3
  8802  0021F6  C024  F025         	movff	___flmul@grs+1,___flmul@grs+2
  8803  0021FA  C023  F024         	movff	___flmul@grs,___flmul@grs+1
  8804  0021FE  6A23               	clrf	___flmul@grs^0,c
  8805  002200  5027               	movf	___flmul@aexp^0,w,c
  8806  002202  C028  F01E         	movff	___flmul@bexp,??___flmul
  8807  002206  6A1F               	clrf	(??___flmul+1)^0,c
  8808  002208  261E               	addwf	??___flmul^0,f,c
  8809  00220A  0E00               	movlw	0
  8810  00220C  221F               	addwfc	(??___flmul+1)^0,f,c
  8811  00220E  0E82               	movlw	130
  8812  002210  241E               	addwf	??___flmul^0,w,c
  8813  002212  6E2D               	movwf	___flmul@temp^0,c
  8814  002214  0EFF               	movlw	255
  8815  002216  201F               	addwfc	(??___flmul+1)^0,w,c
  8816  002218  6E2E               	movwf	(___flmul@temp+1)^0,c
  8817  00221A  EF24  F011         	goto	l3971
  8818  00221E                     l3965:
  8819  00221E  90D8               	bcf	status,0,c
  8820  002220  3629               	rlcf	___flmul@prod^0,f,c
  8821  002222  362A               	rlcf	(___flmul@prod+1)^0,f,c
  8822  002224  362B               	rlcf	(___flmul@prod+2)^0,f,c
  8823  002226  362C               	rlcf	(___flmul@prod+3)^0,f,c
  8824  002228  AE26               	btfss	(___flmul@grs+3)^0,7,c
  8825  00222A  EF19  F011         	goto	u3921
  8826  00222E  EF1B  F011         	goto	u3920
  8827  002232                     u3921:
  8828  002232  EF1C  F011         	goto	l1034
  8829  002236                     u3920:
  8830  002236  8029               	bsf	___flmul@prod^0,0,c
  8831  002238                     l1034:
  8832  002238  90D8               	bcf	status,0,c
  8833  00223A  3623               	rlcf	___flmul@grs^0,f,c
  8834  00223C  3624               	rlcf	(___flmul@grs+1)^0,f,c
  8835  00223E  3625               	rlcf	(___flmul@grs+2)^0,f,c
  8836  002240  3626               	rlcf	(___flmul@grs+3)^0,f,c
  8837  002242  062D               	decf	___flmul@temp^0,f,c
  8838  002244  A0D8               	btfss	status,0,c
  8839  002246  062E               	decf	(___flmul@temp+1)^0,f,c
  8840  002248                     l3971:
  8841  002248  AE2B               	btfss	(___flmul@prod+2)^0,7,c
  8842  00224A  EF29  F011         	goto	u3931
  8843  00224E  EF2B  F011         	goto	u3930
  8844  002252                     u3931:
  8845  002252  EF0F  F011         	goto	l3965
  8846  002256                     u3930:
  8847  002256  0E00               	movlw	0
  8848  002258  6E27               	movwf	___flmul@aexp^0,c
  8849  00225A  AE26               	btfss	(___flmul@grs+3)^0,7,c
  8850  00225C  EF32  F011         	goto	u3941
  8851  002260  EF34  F011         	goto	u3940
  8852  002264                     u3941:
  8853  002264  EF58  F011         	goto	l1036
  8854  002268                     u3940:
  8855  002268  0EFF               	movlw	255
  8856  00226A  1423               	andwf	___flmul@grs^0,w,c
  8857  00226C  6E1E               	movwf	??___flmul^0,c
  8858  00226E  0EFF               	movlw	255
  8859  002270  1424               	andwf	(___flmul@grs+1)^0,w,c
  8860  002272  6E1F               	movwf	(??___flmul+1)^0,c
  8861  002274  0EFF               	movlw	255
  8862  002276  1425               	andwf	(___flmul@grs+2)^0,w,c
  8863  002278  6E20               	movwf	(??___flmul+2)^0,c
  8864  00227A  0E7F               	movlw	127
  8865  00227C  1426               	andwf	(___flmul@grs+3)^0,w,c
  8866  00227E  6E21               	movwf	(??___flmul+3)^0,c
  8867  002280  501E               	movf	??___flmul^0,w,c
  8868  002282  101F               	iorwf	(??___flmul+1)^0,w,c
  8869  002284  1020               	iorwf	(??___flmul+2)^0,w,c
  8870  002286  1021               	iorwf	(??___flmul+3)^0,w,c
  8871  002288  B4D8               	btfsc	status,2,c
  8872  00228A  EF49  F011         	goto	u3951
  8873  00228E  EF4B  F011         	goto	u3950
  8874  002292                     u3951:
  8875  002292  EF4F  F011         	goto	l1037
  8876  002296                     u3950:
  8877  002296                     l3979:
  8878  002296  0E01               	movlw	1
  8879  002298  6E27               	movwf	___flmul@aexp^0,c
  8880  00229A  EF58  F011         	goto	l1036
  8881  00229E                     l1037:
  8882  00229E  A029               	btfss	___flmul@prod^0,0,c
  8883  0022A0  EF54  F011         	goto	u3961
  8884  0022A4  EF56  F011         	goto	u3960
  8885  0022A8                     u3961:
  8886  0022A8  EF58  F011         	goto	l1036
  8887  0022AC                     u3960:
  8888  0022AC  EF4B  F011         	goto	l3979
  8889  0022B0                     l1036:
  8890  0022B0  5027               	movf	___flmul@aexp^0,w,c
  8891  0022B2  B4D8               	btfsc	status,2,c
  8892  0022B4  EF5E  F011         	goto	u3971
  8893  0022B8  EF60  F011         	goto	u3970
  8894  0022BC                     u3971:
  8895  0022BC  EF84  F011         	goto	l3991
  8896  0022C0                     u3970:
  8897  0022C0  0E01               	movlw	1
  8898  0022C2  2629               	addwf	___flmul@prod^0,f,c
  8899  0022C4  0E00               	movlw	0
  8900  0022C6  222A               	addwfc	(___flmul@prod+1)^0,f,c
  8901  0022C8  222B               	addwfc	(___flmul@prod+2)^0,f,c
  8902  0022CA  222C               	addwfc	(___flmul@prod+3)^0,f,c
  8903  0022CC  A02C               	btfss	(___flmul@prod+3)^0,0,c
  8904  0022CE  EF6B  F011         	goto	u3981
  8905  0022D2  EF6D  F011         	goto	u3980
  8906  0022D6                     u3981:
  8907  0022D6  EF84  F011         	goto	l3991
  8908  0022DA                     u3980:
  8909  0022DA  C029  F01E         	movff	___flmul@prod,??___flmul
  8910  0022DE  C02A  F01F         	movff	___flmul@prod+1,??___flmul+1
  8911  0022E2  C02B  F020         	movff	___flmul@prod+2,??___flmul+2
  8912  0022E6  C02C  F021         	movff	___flmul@prod+3,??___flmul+3
  8913  0022EA  3421               	rlcf	(??___flmul+3)^0,w,c
  8914  0022EC  3221               	rrcf	(??___flmul+3)^0,f,c
  8915  0022EE  3220               	rrcf	(??___flmul+2)^0,f,c
  8916  0022F0  321F               	rrcf	(??___flmul+1)^0,f,c
  8917  0022F2  321E               	rrcf	??___flmul^0,f,c
  8918  0022F4  C01E  F029         	movff	??___flmul,___flmul@prod
  8919  0022F8  C01F  F02A         	movff	??___flmul+1,___flmul@prod+1
  8920  0022FC  C020  F02B         	movff	??___flmul+2,___flmul@prod+2
  8921  002300  C021  F02C         	movff	??___flmul+3,___flmul@prod+3
  8922  002304  4A2D               	infsnz	___flmul@temp^0,f,c
  8923  002306  2A2E               	incf	(___flmul@temp+1)^0,f,c
  8924  002308                     l3991:
  8925  002308  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  8926  00230A  EF8F  F011         	goto	u3991
  8927  00230E  502E               	movf	(___flmul@temp+1)^0,w,c
  8928  002310  E108               	bnz	u3990
  8929  002312  282D               	incf	___flmul@temp^0,w,c
  8930  002314  A0D8               	btfss	status,0,c
  8931  002316  EF8F  F011         	goto	u3991
  8932  00231A  EF91  F011         	goto	u3990
  8933  00231E                     u3991:
  8934  00231E  EF9B  F011         	goto	l3995
  8935  002322                     u3990:
  8936  002322  0E00               	movlw	0
  8937  002324  6E29               	movwf	___flmul@prod^0,c
  8938  002326  0E00               	movlw	0
  8939  002328  6E2A               	movwf	(___flmul@prod+1)^0,c
  8940  00232A  0E80               	movlw	128
  8941  00232C  6E2B               	movwf	(___flmul@prod+2)^0,c
  8942  00232E  0E7F               	movlw	127
  8943  002330  6E2C               	movwf	(___flmul@prod+3)^0,c
  8944  002332  EFC9  F011         	goto	l4007
  8945  002336                     l3995:
  8946  002336  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
  8947  002338  EFA8  F011         	goto	u4000
  8948  00233C  502E               	movf	(___flmul@temp+1)^0,w,c
  8949  00233E  E106               	bnz	u4001
  8950  002340  042D               	decf	___flmul@temp^0,w,c
  8951  002342  B0D8               	btfsc	status,0,c
  8952  002344  EFA6  F011         	goto	u4001
  8953  002348  EFA8  F011         	goto	u4000
  8954  00234C                     u4001:
  8955  00234C  EFB4  F011         	goto	l1044
  8956  002350                     u4000:
  8957  002350  0E00               	movlw	0
  8958  002352  6E29               	movwf	___flmul@prod^0,c
  8959  002354  0E00               	movlw	0
  8960  002356  6E2A               	movwf	(___flmul@prod+1)^0,c
  8961  002358  0E00               	movlw	0
  8962  00235A  6E2B               	movwf	(___flmul@prod+2)^0,c
  8963  00235C  0E00               	movlw	0
  8964  00235E  6E2C               	movwf	(___flmul@prod+3)^0,c
  8965  002360  0E00               	movlw	0
  8966  002362  6E22               	movwf	___flmul@sign^0,c
  8967  002364  EFC9  F011         	goto	l4007
  8968  002368                     l1044:
  8969  002368  C02D  F028         	movff	___flmul@temp,___flmul@bexp
  8970  00236C  0EFF               	movlw	255
  8971  00236E  1629               	andwf	___flmul@prod^0,f,c
  8972  002370  0EFF               	movlw	255
  8973  002372  162A               	andwf	(___flmul@prod+1)^0,f,c
  8974  002374  0E7F               	movlw	127
  8975  002376  162B               	andwf	(___flmul@prod+2)^0,f,c
  8976  002378  0E00               	movlw	0
  8977  00237A  162C               	andwf	(___flmul@prod+3)^0,f,c
  8978  00237C  A028               	btfss	___flmul@bexp^0,0,c
  8979  00237E  EFC3  F011         	goto	u4011
  8980  002382  EFC5  F011         	goto	u4010
  8981  002386                     u4011:
  8982  002386  EFC6  F011         	goto	l4005
  8983  00238A                     u4010:
  8984  00238A  8E2B               	bsf	(___flmul@prod+2)^0,7,c
  8985  00238C                     l4005:
  8986  00238C  90D8               	bcf	status,0,c
  8987  00238E  3028               	rrcf	___flmul@bexp^0,w,c
  8988  002390  6E2C               	movwf	(___flmul@prod+3)^0,c
  8989  002392                     l4007:
  8990  002392  5022               	movf	___flmul@sign^0,w,c
  8991  002394  122C               	iorwf	(___flmul@prod+3)^0,f,c
  8992  002396  C029  F016         	movff	___flmul@prod,?___flmul
  8993  00239A  C02A  F017         	movff	___flmul@prod+1,?___flmul+1
  8994  00239E  C02B  F018         	movff	___flmul@prod+2,?___flmul+2
  8995  0023A2  C02C  F019         	movff	___flmul@prod+3,?___flmul+3
  8996  0023A6                     l1031:
  8997  0023A6  0012               	return		;funcret
  8998  0023A8                     __end_of___flmul:
  8999                           	callstack 0
  9000                           
  9001 ;; *************** function ___flge *****************
  9002 ;; Defined at:
  9003 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;  ff1             4   46[COMRAM] unsigned char 
  9006 ;;  ff2             4   50[COMRAM] unsigned char 
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;		None
  9009 ;; Return value:  Size  Location     Type
  9010 ;;		None               void
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9018 ;;      Params:         8       0       0       0       0       0       0       0       0
  9019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9020 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9021 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9022 ;;Total ram usage:       12 bytes
  9023 ;; Hardware stack levels used: 1
  9024 ;; Hardware stack levels required when called: 2
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		_main
  9029 ;;		_efgtoa
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           	psect	text29
  9034  003780                     __ptext29:
  9035                           	callstack 0
  9036  003780                     ___flge:
  9037                           	callstack 24
  9038  003780  0E00               	movlw	0
  9039  003782  142F               	andwf	___flge@ff1^0,w,c
  9040  003784  6E37               	movwf	??___flge^0,c
  9041  003786  0E00               	movlw	0
  9042  003788  1430               	andwf	(___flge@ff1+1)^0,w,c
  9043  00378A  6E38               	movwf	(??___flge+1)^0,c
  9044  00378C  0E80               	movlw	128
  9045  00378E  1431               	andwf	(___flge@ff1+2)^0,w,c
  9046  003790  6E39               	movwf	(??___flge+2)^0,c
  9047  003792  0E7F               	movlw	127
  9048  003794  1432               	andwf	(___flge@ff1+3)^0,w,c
  9049  003796  6E3A               	movwf	(??___flge+3)^0,c
  9050  003798  5037               	movf	??___flge^0,w,c
  9051  00379A  1038               	iorwf	(??___flge+1)^0,w,c
  9052  00379C  1039               	iorwf	(??___flge+2)^0,w,c
  9053  00379E  103A               	iorwf	(??___flge+3)^0,w,c
  9054  0037A0  A4D8               	btfss	status,2,c
  9055  0037A2  EFD5  F01B         	goto	u4171
  9056  0037A6  EFD7  F01B         	goto	u4170
  9057  0037AA                     u4171:
  9058  0037AA  EFDF  F01B         	goto	l4119
  9059  0037AE                     u4170:
  9060  0037AE  0E00               	movlw	0
  9061  0037B0  6E2F               	movwf	___flge@ff1^0,c
  9062  0037B2  0E00               	movlw	0
  9063  0037B4  6E30               	movwf	(___flge@ff1+1)^0,c
  9064  0037B6  0E00               	movlw	0
  9065  0037B8  6E31               	movwf	(___flge@ff1+2)^0,c
  9066  0037BA  0E00               	movlw	0
  9067  0037BC  6E32               	movwf	(___flge@ff1+3)^0,c
  9068  0037BE                     l4119:
  9069  0037BE  0E00               	movlw	0
  9070  0037C0  1433               	andwf	___flge@ff2^0,w,c
  9071  0037C2  6E37               	movwf	??___flge^0,c
  9072  0037C4  0E00               	movlw	0
  9073  0037C6  1434               	andwf	(___flge@ff2+1)^0,w,c
  9074  0037C8  6E38               	movwf	(??___flge+1)^0,c
  9075  0037CA  0E80               	movlw	128
  9076  0037CC  1435               	andwf	(___flge@ff2+2)^0,w,c
  9077  0037CE  6E39               	movwf	(??___flge+2)^0,c
  9078  0037D0  0E7F               	movlw	127
  9079  0037D2  1436               	andwf	(___flge@ff2+3)^0,w,c
  9080  0037D4  6E3A               	movwf	(??___flge+3)^0,c
  9081  0037D6  5037               	movf	??___flge^0,w,c
  9082  0037D8  1038               	iorwf	(??___flge+1)^0,w,c
  9083  0037DA  1039               	iorwf	(??___flge+2)^0,w,c
  9084  0037DC  103A               	iorwf	(??___flge+3)^0,w,c
  9085  0037DE  A4D8               	btfss	status,2,c
  9086  0037E0  EFF4  F01B         	goto	u4181
  9087  0037E4  EFF6  F01B         	goto	u4180
  9088  0037E8                     u4181:
  9089  0037E8  EFFE  F01B         	goto	l4123
  9090  0037EC                     u4180:
  9091  0037EC  0E00               	movlw	0
  9092  0037EE  6E33               	movwf	___flge@ff2^0,c
  9093  0037F0  0E00               	movlw	0
  9094  0037F2  6E34               	movwf	(___flge@ff2+1)^0,c
  9095  0037F4  0E00               	movlw	0
  9096  0037F6  6E35               	movwf	(___flge@ff2+2)^0,c
  9097  0037F8  0E00               	movlw	0
  9098  0037FA  6E36               	movwf	(___flge@ff2+3)^0,c
  9099  0037FC                     l4123:
  9100  0037FC  AE32               	btfss	(___flge@ff1+3)^0,7,c
  9101  0037FE  EF03  F01C         	goto	u4191
  9102  003802  EF05  F01C         	goto	u4190
  9103  003806                     u4191:
  9104  003806  EF0E  F01C         	goto	l4127
  9105  00380A                     u4190:
  9106  00380A  6C2F               	negf	___flge@ff1^0,c
  9107  00380C  1E30               	comf	(___flge@ff1+1)^0,f,c
  9108  00380E  B0D8               	btfsc	status,0,c
  9109  003810  2A30               	incf	(___flge@ff1+1)^0,f,c
  9110  003812  1E31               	comf	(___flge@ff1+2)^0,f,c
  9111  003814  B0D8               	btfsc	status,0,c
  9112  003816  2A31               	incf	(___flge@ff1+2)^0,f,c
  9113  003818  0E80               	movlw	128
  9114  00381A  5632               	subfwb	(___flge@ff1+3)^0,f,c
  9115  00381C                     l4127:
  9116  00381C  AE36               	btfss	(___flge@ff2+3)^0,7,c
  9117  00381E  EF13  F01C         	goto	u4201
  9118  003822  EF15  F01C         	goto	u4200
  9119  003826                     u4201:
  9120  003826  EF1E  F01C         	goto	l678
  9121  00382A                     u4200:
  9122  00382A  6C33               	negf	___flge@ff2^0,c
  9123  00382C  1E34               	comf	(___flge@ff2+1)^0,f,c
  9124  00382E  B0D8               	btfsc	status,0,c
  9125  003830  2A34               	incf	(___flge@ff2+1)^0,f,c
  9126  003832  1E35               	comf	(___flge@ff2+2)^0,f,c
  9127  003834  B0D8               	btfsc	status,0,c
  9128  003836  2A35               	incf	(___flge@ff2+2)^0,f,c
  9129  003838  0E80               	movlw	128
  9130  00383A  5636               	subfwb	(___flge@ff2+3)^0,f,c
  9131  00383C                     l678:
  9132  00383C  0E00               	movlw	0
  9133  00383E  1A2F               	xorwf	___flge@ff1^0,f,c
  9134  003840  0E00               	movlw	0
  9135  003842  1A30               	xorwf	(___flge@ff1+1)^0,f,c
  9136  003844  0E00               	movlw	0
  9137  003846  1A31               	xorwf	(___flge@ff1+2)^0,f,c
  9138  003848  0E80               	movlw	128
  9139  00384A  1A32               	xorwf	(___flge@ff1+3)^0,f,c
  9140  00384C  0E00               	movlw	0
  9141  00384E  1A33               	xorwf	___flge@ff2^0,f,c
  9142  003850  0E00               	movlw	0
  9143  003852  1A34               	xorwf	(___flge@ff2+1)^0,f,c
  9144  003854  0E00               	movlw	0
  9145  003856  1A35               	xorwf	(___flge@ff2+2)^0,f,c
  9146  003858  0E80               	movlw	128
  9147  00385A  1A36               	xorwf	(___flge@ff2+3)^0,f,c
  9148  00385C  5033               	movf	___flge@ff2^0,w,c
  9149  00385E  5C2F               	subwf	___flge@ff1^0,w,c
  9150  003860  5034               	movf	(___flge@ff2+1)^0,w,c
  9151  003862  5830               	subwfb	(___flge@ff1+1)^0,w,c
  9152  003864  5035               	movf	(___flge@ff2+2)^0,w,c
  9153  003866  5831               	subwfb	(___flge@ff1+2)^0,w,c
  9154  003868  5036               	movf	(___flge@ff2+3)^0,w,c
  9155  00386A  5832               	subwfb	(___flge@ff1+3)^0,w,c
  9156  00386C  B0D8               	btfsc	status,0,c
  9157  00386E  EF3B  F01C         	goto	u4211
  9158  003872  EF3D  F01C         	goto	u4210
  9159  003876                     u4211:
  9160  003876  EF40  F01C         	goto	l4133
  9161  00387A                     u4210:
  9162  00387A  90D8               	bcf	status,0,c
  9163  00387C  EF41  F01C         	goto	l683
  9164  003880                     l4133:
  9165  003880  80D8               	bsf	status,0,c
  9166  003882                     l683:
  9167  003882  0012               	return		;funcret
  9168  003884                     __end_of___flge:
  9169                           	callstack 0
  9170                           
  9171 ;; *************** function ___fleq *****************
  9172 ;; Defined at:
  9173 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  ff1             4    1[COMRAM] unsigned char 
  9176 ;;  ff2             4    5[COMRAM] unsigned char 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;		None               void
  9181 ;; Registers used:
  9182 ;;		wreg, status,2, status,0
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9188 ;;      Params:         8       0       0       0       0       0       0       0       0
  9189 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9190 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9191 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9192 ;;Total ram usage:       12 bytes
  9193 ;; Hardware stack levels used: 1
  9194 ;; Hardware stack levels required when called: 2
  9195 ;; This function calls:
  9196 ;;		Nothing
  9197 ;; This function is called by:
  9198 ;;		_efgtoa
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text30
  9203  003E5A                     __ptext30:
  9204                           	callstack 0
  9205  003E5A                     ___fleq:
  9206                           	callstack 24
  9207  003E5A  0E00               	movlw	0
  9208  003E5C  1402               	andwf	___fleq@ff1^0,w,c
  9209  003E5E  6E0A               	movwf	??___fleq^0,c
  9210  003E60  0E00               	movlw	0
  9211  003E62  1403               	andwf	(___fleq@ff1+1)^0,w,c
  9212  003E64  6E0B               	movwf	(??___fleq+1)^0,c
  9213  003E66  0E80               	movlw	128
  9214  003E68  1404               	andwf	(___fleq@ff1+2)^0,w,c
  9215  003E6A  6E0C               	movwf	(??___fleq+2)^0,c
  9216  003E6C  0E7F               	movlw	127
  9217  003E6E  1405               	andwf	(___fleq@ff1+3)^0,w,c
  9218  003E70  6E0D               	movwf	(??___fleq+3)^0,c
  9219  003E72  500A               	movf	??___fleq^0,w,c
  9220  003E74  100B               	iorwf	(??___fleq+1)^0,w,c
  9221  003E76  100C               	iorwf	(??___fleq+2)^0,w,c
  9222  003E78  100D               	iorwf	(??___fleq+3)^0,w,c
  9223  003E7A  A4D8               	btfss	status,2,c
  9224  003E7C  EF42  F01F         	goto	u4141
  9225  003E80  EF44  F01F         	goto	u4140
  9226  003E84                     u4141:
  9227  003E84  EF4C  F01F         	goto	l4103
  9228  003E88                     u4140:
  9229  003E88  0E00               	movlw	0
  9230  003E8A  6E02               	movwf	___fleq@ff1^0,c
  9231  003E8C  0E00               	movlw	0
  9232  003E8E  6E03               	movwf	(___fleq@ff1+1)^0,c
  9233  003E90  0E00               	movlw	0
  9234  003E92  6E04               	movwf	(___fleq@ff1+2)^0,c
  9235  003E94  0E00               	movlw	0
  9236  003E96  6E05               	movwf	(___fleq@ff1+3)^0,c
  9237  003E98                     l4103:
  9238  003E98  0E00               	movlw	0
  9239  003E9A  1406               	andwf	___fleq@ff2^0,w,c
  9240  003E9C  6E0A               	movwf	??___fleq^0,c
  9241  003E9E  0E00               	movlw	0
  9242  003EA0  1407               	andwf	(___fleq@ff2+1)^0,w,c
  9243  003EA2  6E0B               	movwf	(??___fleq+1)^0,c
  9244  003EA4  0E80               	movlw	128
  9245  003EA6  1408               	andwf	(___fleq@ff2+2)^0,w,c
  9246  003EA8  6E0C               	movwf	(??___fleq+2)^0,c
  9247  003EAA  0E7F               	movlw	127
  9248  003EAC  1409               	andwf	(___fleq@ff2+3)^0,w,c
  9249  003EAE  6E0D               	movwf	(??___fleq+3)^0,c
  9250  003EB0  500A               	movf	??___fleq^0,w,c
  9251  003EB2  100B               	iorwf	(??___fleq+1)^0,w,c
  9252  003EB4  100C               	iorwf	(??___fleq+2)^0,w,c
  9253  003EB6  100D               	iorwf	(??___fleq+3)^0,w,c
  9254  003EB8  A4D8               	btfss	status,2,c
  9255  003EBA  EF61  F01F         	goto	u4151
  9256  003EBE  EF63  F01F         	goto	u4150
  9257  003EC2                     u4151:
  9258  003EC2  EF6B  F01F         	goto	l4107
  9259  003EC6                     u4150:
  9260  003EC6  0E00               	movlw	0
  9261  003EC8  6E06               	movwf	___fleq@ff2^0,c
  9262  003ECA  0E00               	movlw	0
  9263  003ECC  6E07               	movwf	(___fleq@ff2+1)^0,c
  9264  003ECE  0E00               	movlw	0
  9265  003ED0  6E08               	movwf	(___fleq@ff2+2)^0,c
  9266  003ED2  0E00               	movlw	0
  9267  003ED4  6E09               	movwf	(___fleq@ff2+3)^0,c
  9268  003ED6                     l4107:
  9269  003ED6  5006               	movf	___fleq@ff2^0,w,c
  9270  003ED8  1802               	xorwf	___fleq@ff1^0,w,c
  9271  003EDA  E10F               	bnz	u4160
  9272  003EDC  5007               	movf	(___fleq@ff2+1)^0,w,c
  9273  003EDE  1803               	xorwf	(___fleq@ff1+1)^0,w,c
  9274  003EE0  E10C               	bnz	u4160
  9275  003EE2  5008               	movf	(___fleq@ff2+2)^0,w,c
  9276  003EE4  1804               	xorwf	(___fleq@ff1+2)^0,w,c
  9277  003EE6  E109               	bnz	u4160
  9278  003EE8  5009               	movf	(___fleq@ff2+3)^0,w,c
  9279  003EEA  1805               	xorwf	(___fleq@ff1+3)^0,w,c
  9280  003EEC  B4D8               	btfsc	status,2,c
  9281  003EEE  EF7B  F01F         	goto	u4161
  9282  003EF2  EF7D  F01F         	goto	u4160
  9283  003EF6                     u4161:
  9284  003EF6  EF80  F01F         	goto	l4111
  9285  003EFA                     u4160:
  9286  003EFA  90D8               	bcf	status,0,c
  9287  003EFC  EF81  F01F         	goto	l672
  9288  003F00                     l4111:
  9289  003F00  80D8               	bsf	status,0,c
  9290  003F02                     l672:
  9291  003F02  0012               	return		;funcret
  9292  003F04                     __end_of___fleq:
  9293                           	callstack 0
  9294                           
  9295 ;; *************** function ___fldiv *****************
  9296 ;; Defined at:
  9297 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  b               4   46[COMRAM] unsigned char 
  9300 ;;  a               4   50[COMRAM] unsigned char 
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;  grs             4   65[COMRAM] unsigned long 
  9303 ;;  rem             4   58[COMRAM] unsigned long 
  9304 ;;  new_exp         2   63[COMRAM] short 
  9305 ;;  aexp            1   70[COMRAM] unsigned char 
  9306 ;;  bexp            1   69[COMRAM] unsigned char 
  9307 ;;  sign            1   62[COMRAM] unsigned char 
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  4   46[COMRAM] unsigned char 
  9310 ;; Registers used:
  9311 ;;		wreg, status,2, status,0
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9317 ;;      Params:         8       0       0       0       0       0       0       0       0
  9318 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9319 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9320 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9321 ;;Total ram usage:       25 bytes
  9322 ;; Hardware stack levels used: 1
  9323 ;; Hardware stack levels required when called: 2
  9324 ;; This function calls:
  9325 ;;		Nothing
  9326 ;; This function is called by:
  9327 ;;		_ReadADC
  9328 ;;		_efgtoa
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text31
  9333  002754                     __ptext31:
  9334                           	callstack 0
  9335  002754                     ___fldiv:
  9336                           	callstack 24
  9337  002754  5032               	movf	(___fldiv@b+3)^0,w,c
  9338  002756  0B80               	andlw	128
  9339  002758  6E3F               	movwf	___fldiv@sign^0,c
  9340  00275A  5032               	movf	(___fldiv@b+3)^0,w,c
  9341  00275C  2432               	addwf	(___fldiv@b+3)^0,w,c
  9342  00275E  6E46               	movwf	___fldiv@bexp^0,c
  9343  002760  AE31               	btfss	(___fldiv@b+2)^0,7,c
  9344  002762  EFB5  F013         	goto	u3601
  9345  002766  EFB7  F013         	goto	u3600
  9346  00276A                     u3601:
  9347  00276A  EFB8  F013         	goto	l3751
  9348  00276E                     u3600:
  9349  00276E  8046               	bsf	___fldiv@bexp^0,0,c
  9350  002770                     l3751:
  9351  002770  5046               	movf	___fldiv@bexp^0,w,c
  9352  002772  B4D8               	btfsc	status,2,c
  9353  002774  EFBE  F013         	goto	u3611
  9354  002778  EFC0  F013         	goto	u3610
  9355  00277C                     u3611:
  9356  00277C  EFD5  F013         	goto	l3761
  9357  002780                     u3610:
  9358  002780  2846               	incf	___fldiv@bexp^0,w,c
  9359  002782  A4D8               	btfss	status,2,c
  9360  002784  EFC6  F013         	goto	u3621
  9361  002788  EFC8  F013         	goto	u3620
  9362  00278C                     u3621:
  9363  00278C  EFD0  F013         	goto	l3757
  9364  002790                     u3620:
  9365  002790  0E00               	movlw	0
  9366  002792  6E2F               	movwf	___fldiv@b^0,c
  9367  002794  0E00               	movlw	0
  9368  002796  6E30               	movwf	(___fldiv@b+1)^0,c
  9369  002798  0E00               	movlw	0
  9370  00279A  6E31               	movwf	(___fldiv@b+2)^0,c
  9371  00279C  0E00               	movlw	0
  9372  00279E  6E32               	movwf	(___fldiv@b+3)^0,c
  9373  0027A0                     l3757:
  9374  0027A0  8E31               	bsf	(___fldiv@b+2)^0,7,c
  9375  0027A2  0E00               	movlw	0
  9376  0027A4  6E32               	movwf	(___fldiv@b+3)^0,c
  9377  0027A6  EFDD  F013         	goto	l3763
  9378  0027AA                     l3761:
  9379  0027AA  0E00               	movlw	0
  9380  0027AC  6E2F               	movwf	___fldiv@b^0,c
  9381  0027AE  0E00               	movlw	0
  9382  0027B0  6E30               	movwf	(___fldiv@b+1)^0,c
  9383  0027B2  0E00               	movlw	0
  9384  0027B4  6E31               	movwf	(___fldiv@b+2)^0,c
  9385  0027B6  0E00               	movlw	0
  9386  0027B8  6E32               	movwf	(___fldiv@b+3)^0,c
  9387  0027BA                     l3763:
  9388  0027BA  5036               	movf	(___fldiv@a+3)^0,w,c
  9389  0027BC  0B80               	andlw	128
  9390  0027BE  1A3F               	xorwf	___fldiv@sign^0,f,c
  9391  0027C0  5036               	movf	(___fldiv@a+3)^0,w,c
  9392  0027C2  2436               	addwf	(___fldiv@a+3)^0,w,c
  9393  0027C4  6E47               	movwf	___fldiv@aexp^0,c
  9394  0027C6  AE35               	btfss	(___fldiv@a+2)^0,7,c
  9395  0027C8  EFE8  F013         	goto	u3631
  9396  0027CC  EFEA  F013         	goto	u3630
  9397  0027D0                     u3631:
  9398  0027D0  EFEB  F013         	goto	l3771
  9399  0027D4                     u3630:
  9400  0027D4  8047               	bsf	___fldiv@aexp^0,0,c
  9401  0027D6                     l3771:
  9402  0027D6  5047               	movf	___fldiv@aexp^0,w,c
  9403  0027D8  B4D8               	btfsc	status,2,c
  9404  0027DA  EFF1  F013         	goto	u3641
  9405  0027DE  EFF3  F013         	goto	u3640
  9406  0027E2                     u3641:
  9407  0027E2  EF08  F014         	goto	l3781
  9408  0027E6                     u3640:
  9409  0027E6  2847               	incf	___fldiv@aexp^0,w,c
  9410  0027E8  A4D8               	btfss	status,2,c
  9411  0027EA  EFF9  F013         	goto	u3651
  9412  0027EE  EFFB  F013         	goto	u3650
  9413  0027F2                     u3651:
  9414  0027F2  EF03  F014         	goto	l3777
  9415  0027F6                     u3650:
  9416  0027F6  0E00               	movlw	0
  9417  0027F8  6E33               	movwf	___fldiv@a^0,c
  9418  0027FA  0E00               	movlw	0
  9419  0027FC  6E34               	movwf	(___fldiv@a+1)^0,c
  9420  0027FE  0E00               	movlw	0
  9421  002800  6E35               	movwf	(___fldiv@a+2)^0,c
  9422  002802  0E00               	movlw	0
  9423  002804  6E36               	movwf	(___fldiv@a+3)^0,c
  9424  002806                     l3777:
  9425  002806  8E35               	bsf	(___fldiv@a+2)^0,7,c
  9426  002808  0E00               	movlw	0
  9427  00280A  6E36               	movwf	(___fldiv@a+3)^0,c
  9428  00280C  EF10  F014         	goto	l3783
  9429  002810                     l3781:
  9430  002810  0E00               	movlw	0
  9431  002812  6E33               	movwf	___fldiv@a^0,c
  9432  002814  0E00               	movlw	0
  9433  002816  6E34               	movwf	(___fldiv@a+1)^0,c
  9434  002818  0E00               	movlw	0
  9435  00281A  6E35               	movwf	(___fldiv@a+2)^0,c
  9436  00281C  0E00               	movlw	0
  9437  00281E  6E36               	movwf	(___fldiv@a+3)^0,c
  9438  002820                     l3783:
  9439  002820  5033               	movf	___fldiv@a^0,w,c
  9440  002822  1034               	iorwf	(___fldiv@a+1)^0,w,c
  9441  002824  1035               	iorwf	(___fldiv@a+2)^0,w,c
  9442  002826  1036               	iorwf	(___fldiv@a+3)^0,w,c
  9443  002828  A4D8               	btfss	status,2,c
  9444  00282A  EF19  F014         	goto	u3661
  9445  00282E  EF1B  F014         	goto	u3660
  9446  002832                     u3661:
  9447  002832  EF33  F014         	goto	l3795
  9448  002836                     u3660:
  9449  002836  0E00               	movlw	0
  9450  002838  6E2F               	movwf	___fldiv@b^0,c
  9451  00283A  0E00               	movlw	0
  9452  00283C  6E30               	movwf	(___fldiv@b+1)^0,c
  9453  00283E  0E00               	movlw	0
  9454  002840  6E31               	movwf	(___fldiv@b+2)^0,c
  9455  002842  0E00               	movlw	0
  9456  002844  6E32               	movwf	(___fldiv@b+3)^0,c
  9457  002846  0E80               	movlw	128
  9458  002848  1231               	iorwf	(___fldiv@b+2)^0,f,c
  9459  00284A  0E7F               	movlw	127
  9460  00284C  1232               	iorwf	(___fldiv@b+3)^0,f,c
  9461  00284E                     l3789:
  9462  00284E  503F               	movf	___fldiv@sign^0,w,c
  9463  002850  1232               	iorwf	(___fldiv@b+3)^0,f,c
  9464  002852  C02F  F02F         	movff	___fldiv@b,?___fldiv
  9465  002856  C030  F030         	movff	___fldiv@b+1,?___fldiv+1
  9466  00285A  C031  F031         	movff	___fldiv@b+2,?___fldiv+2
  9467  00285E  C032  F032         	movff	___fldiv@b+3,?___fldiv+3
  9468  002862  EF76  F015         	goto	l995
  9469  002866                     l3795:
  9470  002866  5046               	movf	___fldiv@bexp^0,w,c
  9471  002868  A4D8               	btfss	status,2,c
  9472  00286A  EF39  F014         	goto	u3671
  9473  00286E  EF3B  F014         	goto	u3670
  9474  002872                     u3671:
  9475  002872  EF45  F014         	goto	l3803
  9476  002876                     u3670:
  9477  002876  0E00               	movlw	0
  9478  002878  6E2F               	movwf	?___fldiv^0,c
  9479  00287A  0E00               	movlw	0
  9480  00287C  6E30               	movwf	(?___fldiv+1)^0,c
  9481  00287E  0E00               	movlw	0
  9482  002880  6E31               	movwf	(?___fldiv+2)^0,c
  9483  002882  0E00               	movlw	0
  9484  002884  6E32               	movwf	(?___fldiv+3)^0,c
  9485  002886  EF76  F015         	goto	l995
  9486  00288A                     l3803:
  9487  00288A  5047               	movf	___fldiv@aexp^0,w,c
  9488  00288C  C046  F037         	movff	___fldiv@bexp,??___fldiv
  9489  002890  6A38               	clrf	(??___fldiv+1)^0,c
  9490  002892  5E37               	subwf	??___fldiv^0,f,c
  9491  002894  0E00               	movlw	0
  9492  002896  5A38               	subwfb	(??___fldiv+1)^0,f,c
  9493  002898  0E7F               	movlw	127
  9494  00289A  2437               	addwf	??___fldiv^0,w,c
  9495  00289C  6E40               	movwf	___fldiv@new_exp^0,c
  9496  00289E  0E00               	movlw	0
  9497  0028A0  2038               	addwfc	(??___fldiv+1)^0,w,c
  9498  0028A2  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  9499  0028A4  C02F  F03B         	movff	___fldiv@b,___fldiv@rem
  9500  0028A8  C030  F03C         	movff	___fldiv@b+1,___fldiv@rem+1
  9501  0028AC  C031  F03D         	movff	___fldiv@b+2,___fldiv@rem+2
  9502  0028B0  C032  F03E         	movff	___fldiv@b+3,___fldiv@rem+3
  9503  0028B4  0E00               	movlw	0
  9504  0028B6  6E2F               	movwf	___fldiv@b^0,c
  9505  0028B8  0E00               	movlw	0
  9506  0028BA  6E30               	movwf	(___fldiv@b+1)^0,c
  9507  0028BC  0E00               	movlw	0
  9508  0028BE  6E31               	movwf	(___fldiv@b+2)^0,c
  9509  0028C0  0E00               	movlw	0
  9510  0028C2  6E32               	movwf	(___fldiv@b+3)^0,c
  9511  0028C4  0E00               	movlw	0
  9512  0028C6  6E42               	movwf	___fldiv@grs^0,c
  9513  0028C8  0E00               	movlw	0
  9514  0028CA  6E43               	movwf	(___fldiv@grs+1)^0,c
  9515  0028CC  0E00               	movlw	0
  9516  0028CE  6E44               	movwf	(___fldiv@grs+2)^0,c
  9517  0028D0  0E00               	movlw	0
  9518  0028D2  6E45               	movwf	(___fldiv@grs+3)^0,c
  9519  0028D4  0E00               	movlw	0
  9520  0028D6  6E47               	movwf	___fldiv@aexp^0,c
  9521  0028D8  EFA6  F014         	goto	l997
  9522  0028DC                     l3813:
  9523  0028DC  5047               	movf	___fldiv@aexp^0,w,c
  9524  0028DE  B4D8               	btfsc	status,2,c
  9525  0028E0  EF74  F014         	goto	u3681
  9526  0028E4  EF76  F014         	goto	u3680
  9527  0028E8                     u3681:
  9528  0028E8  EF8D  F014         	goto	l3821
  9529  0028EC                     u3680:
  9530  0028EC  90D8               	bcf	status,0,c
  9531  0028EE  363B               	rlcf	___fldiv@rem^0,f,c
  9532  0028F0  363C               	rlcf	(___fldiv@rem+1)^0,f,c
  9533  0028F2  363D               	rlcf	(___fldiv@rem+2)^0,f,c
  9534  0028F4  363E               	rlcf	(___fldiv@rem+3)^0,f,c
  9535  0028F6  90D8               	bcf	status,0,c
  9536  0028F8  362F               	rlcf	___fldiv@b^0,f,c
  9537  0028FA  3630               	rlcf	(___fldiv@b+1)^0,f,c
  9538  0028FC  3631               	rlcf	(___fldiv@b+2)^0,f,c
  9539  0028FE  3632               	rlcf	(___fldiv@b+3)^0,f,c
  9540  002900  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  9541  002902  EF85  F014         	goto	u3691
  9542  002906  EF87  F014         	goto	u3690
  9543  00290A                     u3691:
  9544  00290A  EF88  F014         	goto	l1000
  9545  00290E                     u3690:
  9546  00290E  802F               	bsf	___fldiv@b^0,0,c
  9547  002910                     l1000:
  9548  002910  90D8               	bcf	status,0,c
  9549  002912  3642               	rlcf	___fldiv@grs^0,f,c
  9550  002914  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  9551  002916  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  9552  002918  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  9553  00291A                     l3821:
  9554  00291A  5033               	movf	___fldiv@a^0,w,c
  9555  00291C  5C3B               	subwf	___fldiv@rem^0,w,c
  9556  00291E  5034               	movf	(___fldiv@a+1)^0,w,c
  9557  002920  583C               	subwfb	(___fldiv@rem+1)^0,w,c
  9558  002922  5035               	movf	(___fldiv@a+2)^0,w,c
  9559  002924  583D               	subwfb	(___fldiv@rem+2)^0,w,c
  9560  002926  5036               	movf	(___fldiv@a+3)^0,w,c
  9561  002928  583E               	subwfb	(___fldiv@rem+3)^0,w,c
  9562  00292A  A0D8               	btfss	status,0,c
  9563  00292C  EF9A  F014         	goto	u3701
  9564  002930  EF9C  F014         	goto	u3700
  9565  002934                     u3701:
  9566  002934  EFA5  F014         	goto	l3827
  9567  002938                     u3700:
  9568  002938  8C45               	bsf	(___fldiv@grs+3)^0,6,c
  9569  00293A  5033               	movf	___fldiv@a^0,w,c
  9570  00293C  5E3B               	subwf	___fldiv@rem^0,f,c
  9571  00293E  5034               	movf	(___fldiv@a+1)^0,w,c
  9572  002940  5A3C               	subwfb	(___fldiv@rem+1)^0,f,c
  9573  002942  5035               	movf	(___fldiv@a+2)^0,w,c
  9574  002944  5A3D               	subwfb	(___fldiv@rem+2)^0,f,c
  9575  002946  5036               	movf	(___fldiv@a+3)^0,w,c
  9576  002948  5A3E               	subwfb	(___fldiv@rem+3)^0,f,c
  9577  00294A                     l3827:
  9578  00294A  2A47               	incf	___fldiv@aexp^0,f,c
  9579  00294C                     l997:
  9580  00294C  0E19               	movlw	25
  9581  00294E  6447               	cpfsgt	___fldiv@aexp^0,c
  9582  002950  EFAC  F014         	goto	u3711
  9583  002954  EFAE  F014         	goto	u3710
  9584  002958                     u3711:
  9585  002958  EF6E  F014         	goto	l3813
  9586  00295C                     u3710:
  9587  00295C  503B               	movf	___fldiv@rem^0,w,c
  9588  00295E  103C               	iorwf	(___fldiv@rem+1)^0,w,c
  9589  002960  103D               	iorwf	(___fldiv@rem+2)^0,w,c
  9590  002962  103E               	iorwf	(___fldiv@rem+3)^0,w,c
  9591  002964  B4D8               	btfsc	status,2,c
  9592  002966  EFB7  F014         	goto	u3721
  9593  00296A  EFB9  F014         	goto	u3720
  9594  00296E                     u3721:
  9595  00296E  EFD1  F014         	goto	l3839
  9596  002972                     u3720:
  9597  002972  8042               	bsf	___fldiv@grs^0,0,c
  9598  002974  EFD1  F014         	goto	l3839
  9599  002978                     l3833:
  9600  002978  90D8               	bcf	status,0,c
  9601  00297A  362F               	rlcf	___fldiv@b^0,f,c
  9602  00297C  3630               	rlcf	(___fldiv@b+1)^0,f,c
  9603  00297E  3631               	rlcf	(___fldiv@b+2)^0,f,c
  9604  002980  3632               	rlcf	(___fldiv@b+3)^0,f,c
  9605  002982  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  9606  002984  EFC6  F014         	goto	u3731
  9607  002988  EFC8  F014         	goto	u3730
  9608  00298C                     u3731:
  9609  00298C  EFC9  F014         	goto	l1006
  9610  002990                     u3730:
  9611  002990  802F               	bsf	___fldiv@b^0,0,c
  9612  002992                     l1006:
  9613  002992  90D8               	bcf	status,0,c
  9614  002994  3642               	rlcf	___fldiv@grs^0,f,c
  9615  002996  3643               	rlcf	(___fldiv@grs+1)^0,f,c
  9616  002998  3644               	rlcf	(___fldiv@grs+2)^0,f,c
  9617  00299A  3645               	rlcf	(___fldiv@grs+3)^0,f,c
  9618  00299C  0640               	decf	___fldiv@new_exp^0,f,c
  9619  00299E  A0D8               	btfss	status,0,c
  9620  0029A0  0641               	decf	(___fldiv@new_exp+1)^0,f,c
  9621  0029A2                     l3839:
  9622  0029A2  AE31               	btfss	(___fldiv@b+2)^0,7,c
  9623  0029A4  EFD6  F014         	goto	u3741
  9624  0029A8  EFD8  F014         	goto	u3740
  9625  0029AC                     u3741:
  9626  0029AC  EFBC  F014         	goto	l3833
  9627  0029B0                     u3740:
  9628  0029B0  0E00               	movlw	0
  9629  0029B2  6E47               	movwf	___fldiv@aexp^0,c
  9630  0029B4  AE45               	btfss	(___fldiv@grs+3)^0,7,c
  9631  0029B6  EFDF  F014         	goto	u3751
  9632  0029BA  EFE1  F014         	goto	u3750
  9633  0029BE                     u3751:
  9634  0029BE  EF05  F015         	goto	l1008
  9635  0029C2                     u3750:
  9636  0029C2  0EFF               	movlw	255
  9637  0029C4  1442               	andwf	___fldiv@grs^0,w,c
  9638  0029C6  6E37               	movwf	??___fldiv^0,c
  9639  0029C8  0EFF               	movlw	255
  9640  0029CA  1443               	andwf	(___fldiv@grs+1)^0,w,c
  9641  0029CC  6E38               	movwf	(??___fldiv+1)^0,c
  9642  0029CE  0EFF               	movlw	255
  9643  0029D0  1444               	andwf	(___fldiv@grs+2)^0,w,c
  9644  0029D2  6E39               	movwf	(??___fldiv+2)^0,c
  9645  0029D4  0E7F               	movlw	127
  9646  0029D6  1445               	andwf	(___fldiv@grs+3)^0,w,c
  9647  0029D8  6E3A               	movwf	(??___fldiv+3)^0,c
  9648  0029DA  5037               	movf	??___fldiv^0,w,c
  9649  0029DC  1038               	iorwf	(??___fldiv+1)^0,w,c
  9650  0029DE  1039               	iorwf	(??___fldiv+2)^0,w,c
  9651  0029E0  103A               	iorwf	(??___fldiv+3)^0,w,c
  9652  0029E2  B4D8               	btfsc	status,2,c
  9653  0029E4  EFF6  F014         	goto	u3761
  9654  0029E8  EFF8  F014         	goto	u3760
  9655  0029EC                     u3761:
  9656  0029EC  EFFC  F014         	goto	l1009
  9657  0029F0                     u3760:
  9658  0029F0                     l3847:
  9659  0029F0  0E01               	movlw	1
  9660  0029F2  6E47               	movwf	___fldiv@aexp^0,c
  9661  0029F4  EF05  F015         	goto	l1008
  9662  0029F8                     l1009:
  9663  0029F8  A02F               	btfss	___fldiv@b^0,0,c
  9664  0029FA  EF01  F015         	goto	u3771
  9665  0029FE  EF03  F015         	goto	u3770
  9666  002A02                     u3771:
  9667  002A02  EF05  F015         	goto	l1008
  9668  002A06                     u3770:
  9669  002A06  EFF8  F014         	goto	l3847
  9670  002A0A                     l1008:
  9671  002A0A  5047               	movf	___fldiv@aexp^0,w,c
  9672  002A0C  B4D8               	btfsc	status,2,c
  9673  002A0E  EF0B  F015         	goto	u3781
  9674  002A12  EF0D  F015         	goto	u3780
  9675  002A16                     u3781:
  9676  002A16  EF31  F015         	goto	l3859
  9677  002A1A                     u3780:
  9678  002A1A  0E01               	movlw	1
  9679  002A1C  262F               	addwf	___fldiv@b^0,f,c
  9680  002A1E  0E00               	movlw	0
  9681  002A20  2230               	addwfc	(___fldiv@b+1)^0,f,c
  9682  002A22  2231               	addwfc	(___fldiv@b+2)^0,f,c
  9683  002A24  2232               	addwfc	(___fldiv@b+3)^0,f,c
  9684  002A26  A032               	btfss	(___fldiv@b+3)^0,0,c
  9685  002A28  EF18  F015         	goto	u3791
  9686  002A2C  EF1A  F015         	goto	u3790
  9687  002A30                     u3791:
  9688  002A30  EF31  F015         	goto	l3859
  9689  002A34                     u3790:
  9690  002A34  C02F  F037         	movff	___fldiv@b,??___fldiv
  9691  002A38  C030  F038         	movff	___fldiv@b+1,??___fldiv+1
  9692  002A3C  C031  F039         	movff	___fldiv@b+2,??___fldiv+2
  9693  002A40  C032  F03A         	movff	___fldiv@b+3,??___fldiv+3
  9694  002A44  343A               	rlcf	(??___fldiv+3)^0,w,c
  9695  002A46  323A               	rrcf	(??___fldiv+3)^0,f,c
  9696  002A48  3239               	rrcf	(??___fldiv+2)^0,f,c
  9697  002A4A  3238               	rrcf	(??___fldiv+1)^0,f,c
  9698  002A4C  3237               	rrcf	??___fldiv^0,f,c
  9699  002A4E  C037  F02F         	movff	??___fldiv,___fldiv@b
  9700  002A52  C038  F030         	movff	??___fldiv+1,___fldiv@b+1
  9701  002A56  C039  F031         	movff	??___fldiv+2,___fldiv@b+2
  9702  002A5A  C03A  F032         	movff	??___fldiv+3,___fldiv@b+3
  9703  002A5E  4A40               	infsnz	___fldiv@new_exp^0,f,c
  9704  002A60  2A41               	incf	(___fldiv@new_exp+1)^0,f,c
  9705  002A62                     l3859:
  9706  002A62  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9707  002A64  EF3C  F015         	goto	u3801
  9708  002A68  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  9709  002A6A  E108               	bnz	u3800
  9710  002A6C  2840               	incf	___fldiv@new_exp^0,w,c
  9711  002A6E  A0D8               	btfss	status,0,c
  9712  002A70  EF3C  F015         	goto	u3801
  9713  002A74  EF3E  F015         	goto	u3800
  9714  002A78                     u3801:
  9715  002A78  EF49  F015         	goto	l3863
  9716  002A7C                     u3800:
  9717  002A7C  0E00               	movlw	0
  9718  002A7E  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  9719  002A80  6840               	setf	___fldiv@new_exp^0,c
  9720  002A82  0E00               	movlw	0
  9721  002A84  6E2F               	movwf	___fldiv@b^0,c
  9722  002A86  0E00               	movlw	0
  9723  002A88  6E30               	movwf	(___fldiv@b+1)^0,c
  9724  002A8A  0E00               	movlw	0
  9725  002A8C  6E31               	movwf	(___fldiv@b+2)^0,c
  9726  002A8E  0E00               	movlw	0
  9727  002A90  6E32               	movwf	(___fldiv@b+3)^0,c
  9728  002A92                     l3863:
  9729  002A92  BE41               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9730  002A94  EF56  F015         	goto	u3810
  9731  002A98  5041               	movf	(___fldiv@new_exp+1)^0,w,c
  9732  002A9A  E106               	bnz	u3811
  9733  002A9C  0440               	decf	___fldiv@new_exp^0,w,c
  9734  002A9E  B0D8               	btfsc	status,0,c
  9735  002AA0  EF54  F015         	goto	u3811
  9736  002AA4  EF56  F015         	goto	u3810
  9737  002AA8                     u3811:
  9738  002AA8  EF64  F015         	goto	l3867
  9739  002AAC                     u3810:
  9740  002AAC  0E00               	movlw	0
  9741  002AAE  6E41               	movwf	(___fldiv@new_exp+1)^0,c
  9742  002AB0  0E00               	movlw	0
  9743  002AB2  6E40               	movwf	___fldiv@new_exp^0,c
  9744  002AB4  0E00               	movlw	0
  9745  002AB6  6E2F               	movwf	___fldiv@b^0,c
  9746  002AB8  0E00               	movlw	0
  9747  002ABA  6E30               	movwf	(___fldiv@b+1)^0,c
  9748  002ABC  0E00               	movlw	0
  9749  002ABE  6E31               	movwf	(___fldiv@b+2)^0,c
  9750  002AC0  0E00               	movlw	0
  9751  002AC2  6E32               	movwf	(___fldiv@b+3)^0,c
  9752  002AC4  0E00               	movlw	0
  9753  002AC6  6E3F               	movwf	___fldiv@sign^0,c
  9754  002AC8                     l3867:
  9755  002AC8  C040  F046         	movff	___fldiv@new_exp,___fldiv@bexp
  9756  002ACC  A046               	btfss	___fldiv@bexp^0,0,c
  9757  002ACE  EF6B  F015         	goto	u3821
  9758  002AD2  EF6D  F015         	goto	u3820
  9759  002AD6                     u3821:
  9760  002AD6  EF70  F015         	goto	l3873
  9761  002ADA                     u3820:
  9762  002ADA  8E31               	bsf	(___fldiv@b+2)^0,7,c
  9763  002ADC  EF71  F015         	goto	l3875
  9764  002AE0                     l3873:
  9765  002AE0  9E31               	bcf	(___fldiv@b+2)^0,7,c
  9766  002AE2                     l3875:
  9767  002AE2  90D8               	bcf	status,0,c
  9768  002AE4  3046               	rrcf	___fldiv@bexp^0,w,c
  9769  002AE6  6E32               	movwf	(___fldiv@b+3)^0,c
  9770  002AE8  EF27  F014         	goto	l3789
  9771  002AEC                     l995:
  9772  002AEC  0012               	return		;funcret
  9773  002AEE                     __end_of___fldiv:
  9774                           	callstack 0
  9775                           
  9776 ;; *************** function ___awmod *****************
  9777 ;; Defined at:
  9778 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;  dividend        2    1[COMRAM] int 
  9781 ;;  divisor         2    3[COMRAM] int 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  sign            1    6[COMRAM] unsigned char 
  9784 ;;  counter         1    5[COMRAM] unsigned char 
  9785 ;; Return value:  Size  Location     Type
  9786 ;;                  2    1[COMRAM] int 
  9787 ;; Registers used:
  9788 ;;		wreg, status,2, status,0
  9789 ;; Tracked objects:
  9790 ;;		On entry : 0/0
  9791 ;;		On exit  : 0/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9794 ;;      Params:         4       0       0       0       0       0       0       0       0
  9795 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9797 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9798 ;;Total ram usage:        6 bytes
  9799 ;; Hardware stack levels used: 1
  9800 ;; Hardware stack levels required when called: 2
  9801 ;; This function calls:
  9802 ;;		Nothing
  9803 ;; This function is called by:
  9804 ;;		_efgtoa
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text32
  9809  003DAA                     __ptext32:
  9810                           	callstack 0
  9811  003DAA                     ___awmod:
  9812                           	callstack 24
  9813  003DAA  0E00               	movlw	0
  9814  003DAC  6E07               	movwf	___awmod@sign^0,c
  9815  003DAE  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  9816  003DB0  EFDE  F01E         	goto	u4080
  9817  003DB4  EFDC  F01E         	goto	u4081
  9818  003DB8                     u4081:
  9819  003DB8  EFE4  F01E         	goto	l4071
  9820  003DBC                     u4080:
  9821  003DBC  6C02               	negf	___awmod@dividend^0,c
  9822  003DBE  1E03               	comf	(___awmod@dividend+1)^0,f,c
  9823  003DC0  B0D8               	btfsc	status,0,c
  9824  003DC2  2A03               	incf	(___awmod@dividend+1)^0,f,c
  9825  003DC4  0E01               	movlw	1
  9826  003DC6  6E07               	movwf	___awmod@sign^0,c
  9827  003DC8                     l4071:
  9828  003DC8  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  9829  003DCA  EFEB  F01E         	goto	u4090
  9830  003DCE  EFE9  F01E         	goto	u4091
  9831  003DD2                     u4091:
  9832  003DD2  EFEF  F01E         	goto	l4075
  9833  003DD6                     u4090:
  9834  003DD6  6C04               	negf	___awmod@divisor^0,c
  9835  003DD8  1E05               	comf	(___awmod@divisor+1)^0,f,c
  9836  003DDA  B0D8               	btfsc	status,0,c
  9837  003DDC  2A05               	incf	(___awmod@divisor+1)^0,f,c
  9838  003DDE                     l4075:
  9839  003DDE  5004               	movf	___awmod@divisor^0,w,c
  9840  003DE0  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  9841  003DE2  B4D8               	btfsc	status,2,c
  9842  003DE4  EFF6  F01E         	goto	u4101
  9843  003DE8  EFF8  F01E         	goto	u4100
  9844  003DEC                     u4101:
  9845  003DEC  EF1C  F01F         	goto	l4091
  9846  003DF0                     u4100:
  9847  003DF0  0E01               	movlw	1
  9848  003DF2  6E06               	movwf	___awmod@counter^0,c
  9849  003DF4  EF00  F01F         	goto	l4081
  9850  003DF8                     l4079:
  9851  003DF8  90D8               	bcf	status,0,c
  9852  003DFA  3604               	rlcf	___awmod@divisor^0,f,c
  9853  003DFC  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  9854  003DFE  2A06               	incf	___awmod@counter^0,f,c
  9855  003E00                     l4081:
  9856  003E00  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  9857  003E02  EF05  F01F         	goto	u4111
  9858  003E06  EF07  F01F         	goto	u4110
  9859  003E0A                     u4111:
  9860  003E0A  EFFC  F01E         	goto	l4079
  9861  003E0E                     u4110:
  9862  003E0E                     l4083:
  9863  003E0E  5004               	movf	___awmod@divisor^0,w,c
  9864  003E10  5C02               	subwf	___awmod@dividend^0,w,c
  9865  003E12  5005               	movf	(___awmod@divisor+1)^0,w,c
  9866  003E14  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  9867  003E16  A0D8               	btfss	status,0,c
  9868  003E18  EF10  F01F         	goto	u4121
  9869  003E1C  EF12  F01F         	goto	u4120
  9870  003E20                     u4121:
  9871  003E20  EF16  F01F         	goto	l4087
  9872  003E24                     u4120:
  9873  003E24  5004               	movf	___awmod@divisor^0,w,c
  9874  003E26  5E02               	subwf	___awmod@dividend^0,f,c
  9875  003E28  5005               	movf	(___awmod@divisor+1)^0,w,c
  9876  003E2A  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  9877  003E2C                     l4087:
  9878  003E2C  90D8               	bcf	status,0,c
  9879  003E2E  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  9880  003E30  3204               	rrcf	___awmod@divisor^0,f,c
  9881  003E32  2E06               	decfsz	___awmod@counter^0,f,c
  9882  003E34  EF07  F01F         	goto	l4083
  9883  003E38                     l4091:
  9884  003E38  5007               	movf	___awmod@sign^0,w,c
  9885  003E3A  B4D8               	btfsc	status,2,c
  9886  003E3C  EF22  F01F         	goto	u4131
  9887  003E40  EF24  F01F         	goto	u4130
  9888  003E44                     u4131:
  9889  003E44  EF28  F01F         	goto	l4095
  9890  003E48                     u4130:
  9891  003E48  6C02               	negf	___awmod@dividend^0,c
  9892  003E4A  1E03               	comf	(___awmod@dividend+1)^0,f,c
  9893  003E4C  B0D8               	btfsc	status,0,c
  9894  003E4E  2A03               	incf	(___awmod@dividend+1)^0,f,c
  9895  003E50                     l4095:
  9896  003E50  C002  F002         	movff	___awmod@dividend,?___awmod
  9897  003E54  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  9898  003E58  0012               	return		;funcret
  9899  003E5A                     __end_of___awmod:
  9900                           	callstack 0
  9901                           
  9902 ;; *************** function ___awdiv *****************
  9903 ;; Defined at:
  9904 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  dividend        2    1[COMRAM] int 
  9907 ;;  divisor         2    3[COMRAM] int 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;  quotient        2    7[COMRAM] int 
  9910 ;;  sign            1    6[COMRAM] unsigned char 
  9911 ;;  counter         1    5[COMRAM] unsigned char 
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  2    1[COMRAM] int 
  9914 ;; Registers used:
  9915 ;;		wreg, status,2, status,0
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9921 ;;      Params:         4       0       0       0       0       0       0       0       0
  9922 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9924 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9925 ;;Total ram usage:        8 bytes
  9926 ;; Hardware stack levels used: 1
  9927 ;; Hardware stack levels required when called: 2
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_efgtoa
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           	psect	text33
  9936  003CE6                     __ptext33:
  9937                           	callstack 0
  9938  003CE6                     ___awdiv:
  9939                           	callstack 24
  9940  003CE6  0E00               	movlw	0
  9941  003CE8  6E07               	movwf	___awdiv@sign^0,c
  9942  003CEA  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  9943  003CEC  EF7C  F01E         	goto	u4020
  9944  003CF0  EF7A  F01E         	goto	u4021
  9945  003CF4                     u4021:
  9946  003CF4  EF82  F01E         	goto	l4027
  9947  003CF8                     u4020:
  9948  003CF8  6C04               	negf	___awdiv@divisor^0,c
  9949  003CFA  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  9950  003CFC  B0D8               	btfsc	status,0,c
  9951  003CFE  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  9952  003D00  0E01               	movlw	1
  9953  003D02  6E07               	movwf	___awdiv@sign^0,c
  9954  003D04                     l4027:
  9955  003D04  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  9956  003D06  EF89  F01E         	goto	u4030
  9957  003D0A  EF87  F01E         	goto	u4031
  9958  003D0E                     u4031:
  9959  003D0E  EF8F  F01E         	goto	l4033
  9960  003D12                     u4030:
  9961  003D12  6C02               	negf	___awdiv@dividend^0,c
  9962  003D14  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  9963  003D16  B0D8               	btfsc	status,0,c
  9964  003D18  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  9965  003D1A  0E01               	movlw	1
  9966  003D1C  1A07               	xorwf	___awdiv@sign^0,f,c
  9967  003D1E                     l4033:
  9968  003D1E  0E00               	movlw	0
  9969  003D20  6E09               	movwf	(___awdiv@quotient+1)^0,c
  9970  003D22  0E00               	movlw	0
  9971  003D24  6E08               	movwf	___awdiv@quotient^0,c
  9972  003D26  5004               	movf	___awdiv@divisor^0,w,c
  9973  003D28  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  9974  003D2A  B4D8               	btfsc	status,2,c
  9975  003D2C  EF9A  F01E         	goto	u4041
  9976  003D30  EF9C  F01E         	goto	u4040
  9977  003D34                     u4041:
  9978  003D34  EFC4  F01E         	goto	l4055
  9979  003D38                     u4040:
  9980  003D38  0E01               	movlw	1
  9981  003D3A  6E06               	movwf	___awdiv@counter^0,c
  9982  003D3C  EFA4  F01E         	goto	l4041
  9983  003D40                     l4039:
  9984  003D40  90D8               	bcf	status,0,c
  9985  003D42  3604               	rlcf	___awdiv@divisor^0,f,c
  9986  003D44  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  9987  003D46  2A06               	incf	___awdiv@counter^0,f,c
  9988  003D48                     l4041:
  9989  003D48  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  9990  003D4A  EFA9  F01E         	goto	u4051
  9991  003D4E  EFAB  F01E         	goto	u4050
  9992  003D52                     u4051:
  9993  003D52  EFA0  F01E         	goto	l4039
  9994  003D56                     u4050:
  9995  003D56                     l4043:
  9996  003D56  90D8               	bcf	status,0,c
  9997  003D58  3608               	rlcf	___awdiv@quotient^0,f,c
  9998  003D5A  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  9999  003D5C  5004               	movf	___awdiv@divisor^0,w,c
 10000  003D5E  5C02               	subwf	___awdiv@dividend^0,w,c
 10001  003D60  5005               	movf	(___awdiv@divisor+1)^0,w,c
 10002  003D62  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
 10003  003D64  A0D8               	btfss	status,0,c
 10004  003D66  EFB7  F01E         	goto	u4061
 10005  003D6A  EFB9  F01E         	goto	u4060
 10006  003D6E                     u4061:
 10007  003D6E  EFBE  F01E         	goto	l4051
 10008  003D72                     u4060:
 10009  003D72  5004               	movf	___awdiv@divisor^0,w,c
 10010  003D74  5E02               	subwf	___awdiv@dividend^0,f,c
 10011  003D76  5005               	movf	(___awdiv@divisor+1)^0,w,c
 10012  003D78  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
 10013  003D7A  8008               	bsf	___awdiv@quotient^0,0,c
 10014  003D7C                     l4051:
 10015  003D7C  90D8               	bcf	status,0,c
 10016  003D7E  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
 10017  003D80  3204               	rrcf	___awdiv@divisor^0,f,c
 10018  003D82  2E06               	decfsz	___awdiv@counter^0,f,c
 10019  003D84  EFAB  F01E         	goto	l4043
 10020  003D88                     l4055:
 10021  003D88  5007               	movf	___awdiv@sign^0,w,c
 10022  003D8A  B4D8               	btfsc	status,2,c
 10023  003D8C  EFCA  F01E         	goto	u4071
 10024  003D90  EFCC  F01E         	goto	u4070
 10025  003D94                     u4071:
 10026  003D94  EFD0  F01E         	goto	l4059
 10027  003D98                     u4070:
 10028  003D98  6C08               	negf	___awdiv@quotient^0,c
 10029  003D9A  1E09               	comf	(___awdiv@quotient+1)^0,f,c
 10030  003D9C  B0D8               	btfsc	status,0,c
 10031  003D9E  2A09               	incf	(___awdiv@quotient+1)^0,f,c
 10032  003DA0                     l4059:
 10033  003DA0  C008  F002         	movff	___awdiv@quotient,?___awdiv
 10034  003DA4  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
 10035  003DA8  0012               	return		;funcret
 10036  003DAA                     __end_of___awdiv:
 10037                           	callstack 0
 10038                           
 10039 ;; *************** function _atoi *****************
 10040 ;; Defined at:
 10041 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;  s               2    8[COMRAM] PTR const unsigned char 
 10044 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
 10045 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
 10046 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;  n               2   21[COMRAM] int 
 10049 ;;  neg             2   14[COMRAM] int 
 10050 ;; Return value:  Size  Location     Type
 10051 ;;                  2    8[COMRAM] int 
 10052 ;; Registers used:
 10053 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/0
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10059 ;;      Params:         2       0       0       0       0       0       0       0       0
 10060 ;;      Locals:         9       0       0       0       0       0       0       0       0
 10061 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10062 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10063 ;;Total ram usage:       15 bytes
 10064 ;; Hardware stack levels used: 1
 10065 ;; Hardware stack levels required when called: 3
 10066 ;; This function calls:
 10067 ;;		___wmul
 10068 ;;		_isdigit
 10069 ;;		_isspace
 10070 ;; This function is called by:
 10071 ;;		_vfpfcnvrt
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           	psect	text34
 10076  0034E8                     __ptext34:
 10077                           	callstack 0
 10078  0034E8                     _atoi:
 10079                           	callstack 24
 10080  0034E8  0E00               	movlw	0
 10081  0034EA  6E17               	movwf	(atoi@n+1)^0,c
 10082  0034EC  0E00               	movlw	0
 10083  0034EE  6E16               	movwf	atoi@n^0,c
 10084  0034F0  0E00               	movlw	0
 10085  0034F2  6E10               	movwf	(atoi@neg+1)^0,c
 10086  0034F4  0E00               	movlw	0
 10087  0034F6  6E0F               	movwf	atoi@neg^0,c
 10088  0034F8  EF80  F01A         	goto	l4701
 10089  0034FC                     l4699:
 10090  0034FC  4A09               	infsnz	atoi@s^0,f,c
 10091  0034FE  2A0A               	incf	(atoi@s+1)^0,f,c
 10092  003500                     l4701:
 10093  003500  0E01               	movlw	1
 10094  003502  6E15               	movwf	_atoi$1733^0,c
 10095  003504  C009  FFF6         	movff	atoi@s,tblptrl
 10096  003508  C00A  FFF7         	movff	atoi@s+1,tblptrh
 10097  00350C                     	if	0	;tblptru may be non-zero
 10098  00350C                     	endif
 10099  00350C                     	if	0	;tblptru may be non-zero
 10100  00350C                     	endif
 10101  00350C  0008               	tblrd		*
 10102  00350E  50F5               	movf	tablat,w,c
 10103  003510  0A20               	xorlw	32
 10104  003512  B4D8               	btfsc	status,2,c
 10105  003514  EF8E  F01A         	goto	u5391
 10106  003518  EF90  F01A         	goto	u5390
 10107  00351C                     u5391:
 10108  00351C  EFAD  F01A         	goto	l4709
 10109  003520                     u5390:
 10110  003520  0EF7               	movlw	247
 10111  003522  6E0B               	movwf	??_atoi^0,c
 10112  003524  0EFF               	movlw	255
 10113  003526  6E0C               	movwf	(??_atoi+1)^0,c
 10114  003528  C009  FFF6         	movff	atoi@s,tblptrl
 10115  00352C  C00A  FFF7         	movff	atoi@s+1,tblptrh
 10116  003530                     	if	0	;tblptru may be non-zero
 10117  003530                     	endif
 10118  003530                     	if	0	;tblptru may be non-zero
 10119  003530                     	endif
 10120  003530  0008               	tblrd		*
 10121  003532  50F5               	movf	tablat,w,c
 10122  003534  6E0D               	movwf	(??_atoi+2)^0,c
 10123  003536  6A0E               	clrf	(??_atoi+3)^0,c
 10124  003538  500B               	movf	??_atoi^0,w,c
 10125  00353A  260D               	addwf	(??_atoi+2)^0,f,c
 10126  00353C  500C               	movf	(??_atoi+1)^0,w,c
 10127  00353E  220E               	addwfc	(??_atoi+3)^0,f,c
 10128  003540  500E               	movf	(??_atoi+3)^0,w,c
 10129  003542  E109               	bnz	u5400
 10130  003544  0E05               	movlw	5
 10131  003546  5C0D               	subwf	(??_atoi+2)^0,w,c
 10132  003548  A0D8               	btfss	status,0,c
 10133  00354A  EFA9  F01A         	goto	u5401
 10134  00354E  EFAB  F01A         	goto	u5400
 10135  003552                     u5401:
 10136  003552  EFAD  F01A         	goto	l4709
 10137  003556                     u5400:
 10138  003556  0E00               	movlw	0
 10139  003558  6E15               	movwf	_atoi$1733^0,c
 10140  00355A                     l4709:
 10141  00355A  C015  F011         	movff	_atoi$1733,_atoi$1732
 10142  00355E  6A12               	clrf	(_atoi$1732+1)^0,c
 10143  003560  5011               	movf	_atoi$1732^0,w,c
 10144  003562  1012               	iorwf	(_atoi$1732+1)^0,w,c
 10145  003564  A4D8               	btfss	status,2,c
 10146  003566  EFB7  F01A         	goto	u5411
 10147  00356A  EFB9  F01A         	goto	u5410
 10148  00356E                     u5411:
 10149  00356E  EF7E  F01A         	goto	l4699
 10150  003572                     u5410:
 10151  003572  EFC3  F01A         	goto	l4719
 10152  003576                     l4715:
 10153  003576  0E00               	movlw	0
 10154  003578  6E10               	movwf	(atoi@neg+1)^0,c
 10155  00357A  0E01               	movlw	1
 10156  00357C  6E0F               	movwf	atoi@neg^0,c
 10157  00357E                     l4717:
 10158  00357E  4A09               	infsnz	atoi@s^0,f,c
 10159  003580  2A0A               	incf	(atoi@s+1)^0,f,c
 10160  003582  EFF8  F01A         	goto	l4725
 10161  003586                     l4719:
 10162  003586  C009  FFF6         	movff	atoi@s,tblptrl
 10163  00358A  C00A  FFF7         	movff	atoi@s+1,tblptrh
 10164  00358E                     	if	0	;tblptru may be non-zero
 10165  00358E                     	endif
 10166  00358E                     	if	0	;tblptru may be non-zero
 10167  00358E                     	endif
 10168  00358E  0008               	tblrd		*
 10169  003590  50F5               	movf	tablat,w,c
 10170  003592  6E0B               	movwf	??_atoi^0,c
 10171  003594  6A0C               	clrf	(??_atoi+1)^0,c
 10172                           
 10173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10174                           ; Switch size 1, requested type "simple"
 10175                           ; Number of cases is 1, Range of values is 0 to 0
 10176                           ; switch strategies available:
 10177                           ; Name         Instructions Cycles
 10178                           ; simple_byte            4     3 (average)
 10179                           ;	Chosen strategy is simple_byte
 10180  003596  500C               	movf	(??_atoi+1)^0,w,c
 10181  003598  0A00               	xorlw	0	; case 0
 10182  00359A  B4D8               	btfsc	status,2,c
 10183  00359C  EFD2  F01A         	goto	l6277
 10184  0035A0  EFF8  F01A         	goto	l4725
 10185  0035A4                     l6277:
 10186                           
 10187                           ; Switch size 1, requested type "simple"
 10188                           ; Number of cases is 2, Range of values is 43 to 45
 10189                           ; switch strategies available:
 10190                           ; Name         Instructions Cycles
 10191                           ; simple_byte            7     4 (average)
 10192                           ;	Chosen strategy is simple_byte
 10193  0035A4  500B               	movf	??_atoi^0,w,c
 10194  0035A6  0A2B               	xorlw	43	; case 43
 10195  0035A8  B4D8               	btfsc	status,2,c
 10196  0035AA  EFBF  F01A         	goto	l4717
 10197  0035AE  0A06               	xorlw	6	; case 45
 10198  0035B0  B4D8               	btfsc	status,2,c
 10199  0035B2  EFBB  F01A         	goto	l4715
 10200  0035B6  EFF8  F01A         	goto	l4725
 10201  0035BA                     l4721:
 10202  0035BA  C016  F002         	movff	atoi@n,___wmul@multiplier
 10203  0035BE  C017  F003         	movff	atoi@n+1,___wmul@multiplier+1
 10204  0035C2  0E00               	movlw	0
 10205  0035C4  6E05               	movwf	(___wmul@multiplicand+1)^0,c
 10206  0035C6  0E0A               	movlw	10
 10207  0035C8  6E04               	movwf	___wmul@multiplicand^0,c
 10208  0035CA  ECB4  F023         	call	___wmul	;wreg free
 10209  0035CE  C009  FFF6         	movff	atoi@s,tblptrl
 10210  0035D2  C00A  FFF7         	movff	atoi@s+1,tblptrh
 10211  0035D6                     	if	0	;tblptru may be non-zero
 10212  0035D6                     	endif
 10213  0035D6                     	if	0	;tblptru may be non-zero
 10214  0035D6                     	endif
 10215  0035D6  0008               	tblrd		*
 10216  0035D8  50F5               	movf	tablat,w,c
 10217  0035DA  5E02               	subwf	?___wmul^0,f,c
 10218  0035DC  0E00               	movlw	0
 10219  0035DE  5A03               	subwfb	(?___wmul+1)^0,f,c
 10220  0035E0  0E30               	movlw	48
 10221  0035E2  2402               	addwf	?___wmul^0,w,c
 10222  0035E4  6E16               	movwf	atoi@n^0,c
 10223  0035E6  0E00               	movlw	0
 10224  0035E8  2003               	addwfc	(?___wmul+1)^0,w,c
 10225  0035EA  6E17               	movwf	(atoi@n+1)^0,c
 10226  0035EC  EFBF  F01A         	goto	l4717
 10227  0035F0                     l4725:
 10228  0035F0  0ED0               	movlw	208
 10229  0035F2  6E0B               	movwf	??_atoi^0,c
 10230  0035F4  0EFF               	movlw	255
 10231  0035F6  6E0C               	movwf	(??_atoi+1)^0,c
 10232  0035F8  C009  FFF6         	movff	atoi@s,tblptrl
 10233  0035FC  C00A  FFF7         	movff	atoi@s+1,tblptrh
 10234  003600                     	if	0	;tblptru may be non-zero
 10235  003600                     	endif
 10236  003600                     	if	0	;tblptru may be non-zero
 10237  003600                     	endif
 10238  003600  0008               	tblrd		*
 10239  003602  50F5               	movf	tablat,w,c
 10240  003604  6E0D               	movwf	(??_atoi+2)^0,c
 10241  003606  6A0E               	clrf	(??_atoi+3)^0,c
 10242  003608  500B               	movf	??_atoi^0,w,c
 10243  00360A  260D               	addwf	(??_atoi+2)^0,f,c
 10244  00360C  500C               	movf	(??_atoi+1)^0,w,c
 10245  00360E  220E               	addwfc	(??_atoi+3)^0,f,c
 10246  003610  500E               	movf	(??_atoi+3)^0,w,c
 10247  003612  E10A               	bnz	u5420
 10248  003614  0E0A               	movlw	10
 10249  003616  5C0D               	subwf	(??_atoi+2)^0,w,c
 10250  003618  A0D8               	btfss	status,0,c
 10251  00361A  EF11  F01B         	goto	u5421
 10252  00361E  EF14  F01B         	goto	u5420
 10253  003622                     u5421:
 10254  003622  0E01               	movlw	1
 10255  003624  EF15  F01B         	goto	u5430
 10256  003628                     u5420:
 10257  003628  0E00               	movlw	0
 10258  00362A                     u5430:
 10259  00362A  6E13               	movwf	_atoi$1734^0,c
 10260  00362C  6A14               	clrf	(_atoi$1734+1)^0,c
 10261  00362E  5013               	movf	_atoi$1734^0,w,c
 10262  003630  1014               	iorwf	(_atoi$1734+1)^0,w,c
 10263  003632  A4D8               	btfss	status,2,c
 10264  003634  EF1E  F01B         	goto	u5441
 10265  003638  EF20  F01B         	goto	u5440
 10266  00363C                     u5441:
 10267  00363C  EFDD  F01A         	goto	l4721
 10268  003640                     u5440:
 10269  003640  500F               	movf	atoi@neg^0,w,c
 10270  003642  1010               	iorwf	(atoi@neg+1)^0,w,c
 10271  003644  A4D8               	btfss	status,2,c
 10272  003646  EF27  F01B         	goto	u5451
 10273  00364A  EF29  F01B         	goto	u5450
 10274  00364E                     u5451:
 10275  00364E  EF37  F01B         	goto	l1349
 10276  003652                     u5450:
 10277  003652  C016  F00B         	movff	atoi@n,??_atoi
 10278  003656  C017  F00C         	movff	atoi@n+1,??_atoi+1
 10279  00365A  1E0B               	comf	??_atoi^0,f,c
 10280  00365C  1E0C               	comf	(??_atoi+1)^0,f,c
 10281  00365E  4A0B               	infsnz	??_atoi^0,f,c
 10282  003660  2A0C               	incf	(??_atoi+1)^0,f,c
 10283  003662  C00B  F009         	movff	??_atoi,?_atoi
 10284  003666  C00C  F00A         	movff	??_atoi+1,?_atoi+1
 10285  00366A  EF3B  F01B         	goto	l1352
 10286  00366E                     l1349:
 10287  00366E  C016  F009         	movff	atoi@n,?_atoi
 10288  003672  C017  F00A         	movff	atoi@n+1,?_atoi+1
 10289  003676                     l1352:
 10290  003676  0012               	return		;funcret
 10291  003678                     __end_of_atoi:
 10292                           	callstack 0
 10293                           
 10294 ;; *************** function _isspace *****************
 10295 ;; Defined at:
 10296 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;  c               2    1[COMRAM] int 
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;		None
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  2    1[COMRAM] int 
 10303 ;; Registers used:
 10304 ;;		wreg, status,2, status,0
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10310 ;;      Params:         2       0       0       0       0       0       0       0       0
 10311 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10312 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10313 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10314 ;;Total ram usage:        7 bytes
 10315 ;; Hardware stack levels used: 1
 10316 ;; Hardware stack levels required when called: 2
 10317 ;; This function calls:
 10318 ;;		Nothing
 10319 ;; This function is called by:
 10320 ;;		_atoi
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324                           	psect	text35
 10325  00427A                     __ptext35:
 10326                           	callstack 0
 10327  00427A                     _isspace:
 10328                           	callstack 24
 10329  00427A  0E01               	movlw	1
 10330  00427C  6E08               	movwf	_isspace$1772^0,c
 10331  00427E  0E20               	movlw	32
 10332  004280  1802               	xorwf	isspace@c^0,w,c
 10333  004282  1003               	iorwf	(isspace@c+1)^0,w,c
 10334  004284  B4D8               	btfsc	status,2,c
 10335  004286  EF47  F021         	goto	u4631
 10336  00428A  EF49  F021         	goto	u4630
 10337  00428E                     u4631:
 10338  00428E  EF62  F021         	goto	l4301
 10339  004292                     u4630:
 10340  004292  0EF7               	movlw	247
 10341  004294  6E04               	movwf	??_isspace^0,c
 10342  004296  0EFF               	movlw	255
 10343  004298  6E05               	movwf	(??_isspace+1)^0,c
 10344  00429A  C002  F006         	movff	isspace@c,??_isspace+2
 10345  00429E  C003  F007         	movff	isspace@c+1,??_isspace+3
 10346  0042A2  5004               	movf	??_isspace^0,w,c
 10347  0042A4  2606               	addwf	(??_isspace+2)^0,f,c
 10348  0042A6  5005               	movf	(??_isspace+1)^0,w,c
 10349  0042A8  2207               	addwfc	(??_isspace+3)^0,f,c
 10350  0042AA  5007               	movf	(??_isspace+3)^0,w,c
 10351  0042AC  E109               	bnz	u4640
 10352  0042AE  0E05               	movlw	5
 10353  0042B0  5C06               	subwf	(??_isspace+2)^0,w,c
 10354  0042B2  A0D8               	btfss	status,0,c
 10355  0042B4  EF5E  F021         	goto	u4641
 10356  0042B8  EF60  F021         	goto	u4640
 10357  0042BC                     u4641:
 10358  0042BC  EF62  F021         	goto	l4301
 10359  0042C0                     u4640:
 10360  0042C0  0E00               	movlw	0
 10361  0042C2  6E08               	movwf	_isspace$1772^0,c
 10362  0042C4                     l4301:
 10363  0042C4  C008  F002         	movff	_isspace$1772,?_isspace
 10364  0042C8  6A03               	clrf	(?_isspace+1)^0,c
 10365  0042CA  0012               	return		;funcret
 10366  0042CC                     __end_of_isspace:
 10367                           	callstack 0
 10368                           
 10369 ;; *************** function _isdigit *****************
 10370 ;; Defined at:
 10371 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  c               2    1[COMRAM] int 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;		None
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  2    1[COMRAM] int 
 10378 ;; Registers used:
 10379 ;;		wreg, status,2, status,0
 10380 ;; Tracked objects:
 10381 ;;		On entry : 0/0
 10382 ;;		On exit  : 0/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10385 ;;      Params:         2       0       0       0       0       0       0       0       0
 10386 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10387 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10388 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10389 ;;Total ram usage:        6 bytes
 10390 ;; Hardware stack levels used: 1
 10391 ;; Hardware stack levels required when called: 2
 10392 ;; This function calls:
 10393 ;;		Nothing
 10394 ;; This function is called by:
 10395 ;;		_vfpfcnvrt
 10396 ;;		_atoi
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text36
 10401  00466E                     __ptext36:
 10402                           	callstack 0
 10403  00466E                     _isdigit:
 10404                           	callstack 25
 10405  00466E  0ED0               	movlw	208
 10406  004670  6E04               	movwf	??_isdigit^0,c
 10407  004672  0EFF               	movlw	255
 10408  004674  6E05               	movwf	(??_isdigit+1)^0,c
 10409  004676  C002  F006         	movff	isdigit@c,??_isdigit+2
 10410  00467A  C003  F007         	movff	isdigit@c+1,??_isdigit+3
 10411  00467E  5004               	movf	??_isdigit^0,w,c
 10412  004680  2606               	addwf	(??_isdigit+2)^0,f,c
 10413  004682  5005               	movf	(??_isdigit+1)^0,w,c
 10414  004684  2207               	addwfc	(??_isdigit+3)^0,f,c
 10415  004686  5007               	movf	(??_isdigit+3)^0,w,c
 10416  004688  E10A               	bnz	u4610
 10417  00468A  0E0A               	movlw	10
 10418  00468C  5C06               	subwf	(??_isdigit+2)^0,w,c
 10419  00468E  A0D8               	btfss	status,0,c
 10420  004690  EF4C  F023         	goto	u4611
 10421  004694  EF4F  F023         	goto	u4610
 10422  004698                     u4611:
 10423  004698  0E01               	movlw	1
 10424  00469A  EF50  F023         	goto	u4620
 10425  00469E                     u4610:
 10426  00469E  0E00               	movlw	0
 10427  0046A0                     u4620:
 10428  0046A0  6E02               	movwf	?_isdigit^0,c
 10429  0046A2  6A03               	clrf	(?_isdigit+1)^0,c
 10430  0046A4  0012               	return		;funcret
 10431  0046A6                     __end_of_isdigit:
 10432                           	callstack 0
 10433                           
 10434 ;; *************** function ___wmul *****************
 10435 ;; Defined at:
 10436 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;  multiplier      2    1[COMRAM] unsigned int 
 10439 ;;  multiplicand    2    3[COMRAM] unsigned int 
 10440 ;; Auto vars:     Size  Location     Type
 10441 ;;  product         2    5[COMRAM] unsigned int 
 10442 ;; Return value:  Size  Location     Type
 10443 ;;                  2    1[COMRAM] unsigned int 
 10444 ;; Registers used:
 10445 ;;		wreg, status,2, status,0, prodl, prodh
 10446 ;; Tracked objects:
 10447 ;;		On entry : 0/0
 10448 ;;		On exit  : 0/0
 10449 ;;		Unchanged: 0/0
 10450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10451 ;;      Params:         4       0       0       0       0       0       0       0       0
 10452 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10453 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10454 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10455 ;;Total ram usage:        6 bytes
 10456 ;; Hardware stack levels used: 1
 10457 ;; Hardware stack levels required when called: 2
 10458 ;; This function calls:
 10459 ;;		Nothing
 10460 ;; This function is called by:
 10461 ;;		_atoi
 10462 ;; This function uses a non-reentrant model
 10463 ;;
 10464                           
 10465                           	psect	text37
 10466  004768                     __ptext37:
 10467                           	callstack 0
 10468  004768                     ___wmul:
 10469                           	callstack 24
 10470  004768  5002               	movf	___wmul@multiplier^0,w,c
 10471  00476A  0204               	mulwf	___wmul@multiplicand^0,c
 10472  00476C  CFF3 F006          	movff	prodl,___wmul@product
 10473  004770  CFF4 F007          	movff	prodh,___wmul@product+1
 10474  004774  5002               	movf	___wmul@multiplier^0,w,c
 10475  004776  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 10476  004778  50F3               	movf	243,w,c
 10477  00477A  2607               	addwf	(___wmul@product+1)^0,f,c
 10478  00477C  5003               	movf	(___wmul@multiplier+1)^0,w,c
 10479  00477E  0204               	mulwf	___wmul@multiplicand^0,c
 10480  004780  50F3               	movf	243,w,c
 10481  004782  2607               	addwf	(___wmul@product+1)^0,f,c
 10482  004784  C006  F002         	movff	___wmul@product,?___wmul
 10483  004788  C007  F003         	movff	___wmul@product+1,?___wmul+1
 10484  00478C  0012               	return		;funcret
 10485  00478E                     __end_of___wmul:
 10486                           	callstack 0
 10487                           
 10488 ;; *************** function _RTC_Read_Clock *****************
 10489 ;; Defined at:
 10490 ;;		line 34 in file "reloj.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  read_clock_a    1    wreg     unsigned char 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;  read_clock_a    1    4[COMRAM] unsigned char 
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      void 
 10497 ;; Registers used:
 10498 ;;		wreg, status,2, status,0, cstack
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10504 ;;      Params:         0       0       0       0       0       0       0       0       0
 10505 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10506 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10507 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10508 ;;Total ram usage:        2 bytes
 10509 ;; Hardware stack levels used: 1
 10510 ;; Hardware stack levels required when called: 5
 10511 ;; This function calls:
 10512 ;;		_I2C_Read
 10513 ;;		_I2C_Repeated_Start
 10514 ;;		_I2C_Start
 10515 ;;		_I2C_Write
 10516 ;; This function is called by:
 10517 ;;		_RTC_Calendario
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           	psect	text38
 10522  004486                     __ptext38:
 10523                           	callstack 0
 10524  004486                     _RTC_Read_Clock:
 10525                           	callstack 24
 10526                           
 10527                           ;incstack = 0
 10528                           ;RTC_Read_Clock@read_clock_address stored from wreg
 10529  004486  6E05               	movwf	RTC_Read_Clock@read_clock_address^0,c
 10530  004488                     
 10531                           ;reloj.c: 34: void RTC_Read_Clock(char read_clock_address);reloj.c: 35: {;reloj.c: 36:  
      +                             I2C_Start(0xD0);
 10532  004488  0ED0               	movlw	208
 10533  00448A  EC86  F023         	call	_I2C_Start
 10534                           
 10535                           ;reloj.c: 37:     I2C_Write(read_clock_address);
 10536  00448E  5005               	movf	RTC_Read_Clock@read_clock_address^0,w,c
 10537  004490  ECC7  F023         	call	_I2C_Write
 10538                           
 10539                           ;reloj.c: 38:     I2C_Repeated_Start(0xD1);
 10540  004494  0ED1               	movlw	209
 10541  004496  EC9D  F023         	call	_I2C_Repeated_Start
 10542  00449A                     
 10543                           ;reloj.c: 39:     sec = I2C_Read(0);
 10544  00449A  0E00               	movlw	0
 10545  00449C  ECC6  F022         	call	_I2C_Read
 10546  0044A0  6E04               	movwf	??_RTC_Read_Clock^0,c
 10547  0044A2  5004               	movf	??_RTC_Read_Clock^0,w,c
 10548  0044A4  0101               	movlb	1	; () banked
 10549  0044A6  6F30               	movwf	_sec& (0+255),b
 10550  0044A8  6B31               	clrf	(_sec+1)& (0+255),b
 10551  0044AA                     
 10552                           ; BSR set to: 1
 10553                           ;reloj.c: 40:     min = I2C_Read(0);
 10554  0044AA  0E00               	movlw	0
 10555  0044AC  ECC6  F022         	call	_I2C_Read
 10556  0044B0  6E04               	movwf	??_RTC_Read_Clock^0,c
 10557  0044B2  5004               	movf	??_RTC_Read_Clock^0,w,c
 10558  0044B4  0101               	movlb	1	; () banked
 10559  0044B6  6F2E               	movwf	_min& (0+255),b
 10560  0044B8  6B2F               	clrf	(_min+1)& (0+255),b
 10561  0044BA                     
 10562                           ; BSR set to: 1
 10563                           ;reloj.c: 41:     hour= I2C_Read(1);
 10564  0044BA  0E01               	movlw	1
 10565  0044BC  ECC6  F022         	call	_I2C_Read
 10566  0044C0  6E04               	movwf	??_RTC_Read_Clock^0,c
 10567  0044C2  5004               	movf	??_RTC_Read_Clock^0,w,c
 10568  0044C4  0101               	movlb	1	; () banked
 10569  0044C6  6F2C               	movwf	_hour& (0+255),b
 10570  0044C8  6B2D               	clrf	(_hour+1)& (0+255),b
 10571  0044CA                     
 10572                           ; BSR set to: 1
 10573  0044CA  0012               	return		;funcret
 10574  0044CC                     __end_of_RTC_Read_Clock:
 10575                           	callstack 0
 10576                           
 10577 ;; *************** function _RTC_Read_Calendar *****************
 10578 ;; Defined at:
 10579 ;;		line 57 in file "reloj.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;  read_calenda    1    wreg     unsigned char 
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;  read_calenda    1    4[COMRAM] unsigned char 
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  1    wreg      void 
 10586 ;; Registers used:
 10587 ;;		wreg, status,2, status,0, cstack
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10593 ;;      Params:         0       0       0       0       0       0       0       0       0
 10594 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10595 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10596 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10597 ;;Total ram usage:        2 bytes
 10598 ;; Hardware stack levels used: 1
 10599 ;; Hardware stack levels required when called: 5
 10600 ;; This function calls:
 10601 ;;		_I2C_Read
 10602 ;;		_I2C_Repeated_Start
 10603 ;;		_I2C_Start
 10604 ;;		_I2C_Stop
 10605 ;;		_I2C_Write
 10606 ;; This function is called by:
 10607 ;;		_RTC_Calendario
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text39
 10612  0041CE                     __ptext39:
 10613                           	callstack 0
 10614  0041CE                     _RTC_Read_Calendar:
 10615                           	callstack 24
 10616                           
 10617                           ; BSR set to: 1
 10618                           ;incstack = 0
 10619                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
 10620  0041CE  6E05               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
 10621  0041D0                     
 10622                           ;reloj.c: 57: void RTC_Read_Calendar(char read_calendar_address);reloj.c: 58: {;reloj.c:
      +                           59:     I2C_Start(0xD0);
 10623  0041D0  0ED0               	movlw	208
 10624  0041D2  EC86  F023         	call	_I2C_Start
 10625                           
 10626                           ;reloj.c: 60:     I2C_Write(read_calendar_address);
 10627  0041D6  5005               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
 10628  0041D8  ECC7  F023         	call	_I2C_Write
 10629                           
 10630                           ;reloj.c: 61:     I2C_Repeated_Start(0xD1);
 10631  0041DC  0ED1               	movlw	209
 10632  0041DE  EC9D  F023         	call	_I2C_Repeated_Start
 10633  0041E2                     
 10634                           ;reloj.c: 62:     Day = I2C_Read(0);
 10635  0041E2  0E00               	movlw	0
 10636  0041E4  ECC6  F022         	call	_I2C_Read
 10637  0041E8  6E04               	movwf	??_RTC_Read_Calendar^0,c
 10638  0041EA  5004               	movf	??_RTC_Read_Calendar^0,w,c
 10639  0041EC  0101               	movlb	1	; () banked
 10640  0041EE  6F2A               	movwf	_Day& (0+255),b
 10641  0041F0  6B2B               	clrf	(_Day+1)& (0+255),b
 10642  0041F2                     
 10643                           ; BSR set to: 1
 10644                           ;reloj.c: 63:     Date = I2C_Read(0);
 10645  0041F2  0E00               	movlw	0
 10646  0041F4  ECC6  F022         	call	_I2C_Read
 10647  0041F8  6E04               	movwf	??_RTC_Read_Calendar^0,c
 10648  0041FA  5004               	movf	??_RTC_Read_Calendar^0,w,c
 10649  0041FC  0101               	movlb	1	; () banked
 10650  0041FE  6F28               	movwf	_Date& (0+255),b
 10651  004200  6B29               	clrf	(_Date+1)& (0+255),b
 10652  004202                     
 10653                           ; BSR set to: 1
 10654                           ;reloj.c: 64:     Month = I2C_Read(0);
 10655  004202  0E00               	movlw	0
 10656  004204  ECC6  F022         	call	_I2C_Read
 10657  004208  6E04               	movwf	??_RTC_Read_Calendar^0,c
 10658  00420A  5004               	movf	??_RTC_Read_Calendar^0,w,c
 10659  00420C  0101               	movlb	1	; () banked
 10660  00420E  6F26               	movwf	_Month& (0+255),b
 10661  004210  6B27               	clrf	(_Month+1)& (0+255),b
 10662  004212                     
 10663                           ; BSR set to: 1
 10664                           ;reloj.c: 65:     Year = I2C_Read(1);
 10665  004212  0E01               	movlw	1
 10666  004214  ECC6  F022         	call	_I2C_Read
 10667  004218  6E04               	movwf	??_RTC_Read_Calendar^0,c
 10668  00421A  5004               	movf	??_RTC_Read_Calendar^0,w,c
 10669  00421C  0101               	movlb	1	; () banked
 10670  00421E  6F24               	movwf	_Year& (0+255),b
 10671  004220  6B25               	clrf	(_Year+1)& (0+255),b
 10672  004222                     
 10673                           ; BSR set to: 1
 10674                           ;reloj.c: 66:     I2C_Stop();
 10675  004222  ECF5  F023         	call	_I2C_Stop	;wreg free
 10676  004226  0012               	return		;funcret
 10677  004228                     __end_of_RTC_Read_Calendar:
 10678                           	callstack 0
 10679                           
 10680 ;; *************** function _I2C_Stop *****************
 10681 ;; Defined at:
 10682 ;;		line 93 in file "Reloj_ar.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;		None
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;		None
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  1    wreg      unsigned char 
 10689 ;; Registers used:
 10690 ;;		wreg
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10696 ;;      Params:         0       0       0       0       0       0       0       0       0
 10697 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10698 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10699 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10700 ;;Total ram usage:        0 bytes
 10701 ;; Hardware stack levels used: 1
 10702 ;; Hardware stack levels required when called: 2
 10703 ;; This function calls:
 10704 ;;		Nothing
 10705 ;; This function is called by:
 10706 ;;		_RTC_Read_Calendar
 10707 ;;		_RTC_Calendario
 10708 ;;		_I2C_Start_Wait
 10709 ;; This function uses a non-reentrant model
 10710 ;;
 10711                           
 10712                           	psect	text40
 10713  0047EA                     __ptext40:
 10714                           	callstack 0
 10715  0047EA                     _I2C_Stop:
 10716                           	callstack 26
 10717  0047EA                     
 10718                           ;Reloj_ar.c: 95:     PEN = 1;
 10719  0047EA  84C5               	bsf	4037,2,c	;volatile
 10720  0047EC                     l389:
 10721  0047EC  B4C5               	btfsc	4037,2,c	;volatile
 10722  0047EE  EFFB  F023         	goto	u5811
 10723  0047F2  EFFD  F023         	goto	u5810
 10724  0047F6                     u5811:
 10725  0047F6  EFF6  F023         	goto	l389
 10726  0047FA                     u5810:
 10727  0047FA                     
 10728                           ;Reloj_ar.c: 97:     if(!SSPSTATbits.P);
 10729  0047FA  50C7               	movf	199,w,c	;volatile
 10730  0047FC  0012               	return		;funcret
 10731  0047FE                     __end_of_I2C_Stop:
 10732                           	callstack 0
 10733                           
 10734 ;; *************** function _I2C_Start *****************
 10735 ;; Defined at:
 10736 ;;		line 68 in file "Reloj_ar.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  slave_write_    1    wreg     unsigned char 
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;  slave_write_    1    2[COMRAM] unsigned char 
 10741 ;; Return value:  Size  Location     Type
 10742 ;;                  1    wreg      unsigned char 
 10743 ;; Registers used:
 10744 ;;		wreg, status,2, cstack
 10745 ;; Tracked objects:
 10746 ;;		On entry : 0/0
 10747 ;;		On exit  : 0/0
 10748 ;;		Unchanged: 0/0
 10749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10750 ;;      Params:         0       0       0       0       0       0       0       0       0
 10751 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10752 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10753 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10754 ;;Total ram usage:        1 bytes
 10755 ;; Hardware stack levels used: 1
 10756 ;; Hardware stack levels required when called: 4
 10757 ;; This function calls:
 10758 ;;		_I2C_Write
 10759 ;; This function is called by:
 10760 ;;		_RTC_Read_Clock
 10761 ;;		_RTC_Read_Calendar
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           	psect	text41
 10766  00470C                     __ptext41:
 10767                           	callstack 0
 10768  00470C                     _I2C_Start:
 10769                           	callstack 24
 10770                           
 10771                           ;incstack = 0
 10772                           ;I2C_Start@slave_write_address stored from wreg
 10773  00470C  6E03               	movwf	I2C_Start@slave_write_address^0,c
 10774  00470E                     
 10775                           ;Reloj_ar.c: 68: char I2C_Start(char slave_write_address);Reloj_ar.c: 69: {;Reloj_ar.c: 
      +                          70:     SSPCON2bits.SEN=1;
 10776  00470E  80C5               	bsf	197,0,c	;volatile
 10777  004710                     l373:
 10778  004710  B0C5               	btfsc	197,0,c	;volatile
 10779  004712  EF8D  F023         	goto	u5751
 10780  004716  EF8F  F023         	goto	u5750
 10781  00471A                     u5751:
 10782  00471A  EF88  F023         	goto	l373
 10783  00471E                     u5750:
 10784  00471E                     
 10785                           ;Reloj_ar.c: 72:  SSPIF=0;
 10786  00471E  969E               	bcf	3998,3,c	;volatile
 10787                           
 10788                           ;Reloj_ar.c: 73:     if(!SSPSTATbits.S)
 10789  004720  B6C7               	btfsc	199,3,c	;volatile
 10790  004722  EF95  F023         	goto	u5761
 10791  004726  EF97  F023         	goto	u5760
 10792  00472A                     u5761:
 10793  00472A  EF99  F023         	goto	l4973
 10794  00472E                     u5760:
 10795  00472E  EF9C  F023         	goto	l377
 10796  004732                     l4973:
 10797                           
 10798                           ;Reloj_ar.c: 75:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Star
      +                          t is never used
 10799  004732  5003               	movf	I2C_Start@slave_write_address^0,w,c
 10800  004734  ECC7  F023         	call	_I2C_Write
 10801  004738                     l377:
 10802  004738  0012               	return		;funcret
 10803  00473A                     __end_of_I2C_Start:
 10804                           	callstack 0
 10805                           
 10806 ;; *************** function _I2C_Repeated_Start *****************
 10807 ;; Defined at:
 10808 ;;		line 79 in file "Reloj_ar.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;  slave_read_a    1    wreg     unsigned char 
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;  slave_read_a    1    2[COMRAM] unsigned char 
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  1    wreg      unsigned char 
 10815 ;; Registers used:
 10816 ;;		wreg, status,2, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10822 ;;      Params:         0       0       0       0       0       0       0       0       0
 10823 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10824 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10825 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10826 ;;Total ram usage:        1 bytes
 10827 ;; Hardware stack levels used: 1
 10828 ;; Hardware stack levels required when called: 4
 10829 ;; This function calls:
 10830 ;;		_I2C_Write
 10831 ;; This function is called by:
 10832 ;;		_RTC_Read_Clock
 10833 ;;		_RTC_Read_Calendar
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837                           	psect	text42
 10838  00473A                     __ptext42:
 10839                           	callstack 0
 10840  00473A                     _I2C_Repeated_Start:
 10841                           	callstack 24
 10842                           
 10843                           ;incstack = 0
 10844                           ;I2C_Repeated_Start@slave_read_address stored from wreg
 10845  00473A  6E03               	movwf	I2C_Repeated_Start@slave_read_address^0,c
 10846  00473C                     
 10847                           ;Reloj_ar.c: 79: char I2C_Repeated_Start(char slave_read_address);Reloj_ar.c: 80: {;Relo
      +                          j_ar.c: 81:     RSEN = 1;
 10848  00473C  82C5               	bsf	4037,1,c	;volatile
 10849  00473E                     l380:
 10850  00473E  B2C5               	btfsc	4037,1,c	;volatile
 10851  004740  EFA4  F023         	goto	u5771
 10852  004744  EFA6  F023         	goto	u5770
 10853  004748                     u5771:
 10854  004748  EF9F  F023         	goto	l380
 10855  00474C                     u5770:
 10856  00474C                     
 10857                           ;Reloj_ar.c: 83:     SSPIF = 0;
 10858  00474C  969E               	bcf	3998,3,c	;volatile
 10859                           
 10860                           ;Reloj_ar.c: 84:  if(!SSPSTATbits.S)
 10861  00474E  B6C7               	btfsc	199,3,c	;volatile
 10862  004750  EFAC  F023         	goto	u5781
 10863  004754  EFAE  F023         	goto	u5780
 10864  004758                     u5781:
 10865  004758  EFB0  F023         	goto	l4981
 10866  00475C                     u5780:
 10867  00475C  EFB3  F023         	goto	l384
 10868  004760                     l4981:
 10869                           
 10870                           ;Reloj_ar.c: 86:     I2C_Write(slave_read_address);
 10871  004760  5003               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
 10872  004762  ECC7  F023         	call	_I2C_Write
 10873  004766                     l384:
 10874  004766  0012               	return		;funcret
 10875  004768                     __end_of_I2C_Repeated_Start:
 10876                           	callstack 0
 10877                           
 10878 ;; *************** function _I2C_Write *****************
 10879 ;; Defined at:
 10880 ;;		line 101 in file "Reloj_ar.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  data            1    wreg     unsigned char 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  data            1    1[COMRAM] unsigned char 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1    wreg      unsigned char 
 10887 ;; Registers used:
 10888 ;;		wreg, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10894 ;;      Params:         0       0       0       0       0       0       0       0       0
 10895 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10897 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10898 ;;Total ram usage:        1 bytes
 10899 ;; Hardware stack levels used: 1
 10900 ;; Hardware stack levels required when called: 3
 10901 ;; This function calls:
 10902 ;;		_I2C_Ready
 10903 ;; This function is called by:
 10904 ;;		_RTC_Read_Clock
 10905 ;;		_RTC_Read_Calendar
 10906 ;;		_I2C_Start
 10907 ;;		_I2C_Repeated_Start
 10908 ;;		_I2C_Start_Wait
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           
 10912                           	psect	text43
 10913  00478E                     __ptext43:
 10914                           	callstack 0
 10915  00478E                     _I2C_Write:
 10916                           	callstack 25
 10917                           
 10918                           ;incstack = 0
 10919                           ;I2C_Write@data stored from wreg
 10920  00478E  6E02               	movwf	I2C_Write@data^0,c
 10921  004790                     
 10922                           ;Reloj_ar.c: 101: char I2C_Write(unsigned char data);Reloj_ar.c: 102: {;Reloj_ar.c: 103:
      +                                 SSPBUF = data;
 10923  004790  C002  FFC9         	movff	I2C_Write@data,4041	;volatile
 10924  004794                     
 10925                           ;Reloj_ar.c: 104:       I2C_Ready();
 10926  004794  EC27  F024         	call	_I2C_Ready	;wreg free
 10927  004798                     
 10928                           ;Reloj_ar.c: 105:       if (ACKSTAT)
 10929  004798  ACC5               	btfss	4037,6,c	;volatile
 10930  00479A  EFD1  F023         	goto	u5511
 10931  00479E  EFD3  F023         	goto	u5510
 10932  0047A2                     u5511:
 10933  0047A2  EFD6  F023         	goto	l4791
 10934  0047A6                     u5510:
 10935  0047A6                     
 10936                           ;Reloj_ar.c: 106:         return 1;
 10937  0047A6  0E01               	movlw	1
 10938  0047A8  EFD7  F023         	goto	l397
 10939  0047AC                     l4791:
 10940                           
 10941                           ;Reloj_ar.c: 108:         return 2;
 10942  0047AC  0E02               	movlw	2
 10943  0047AE                     l397:
 10944  0047AE  0012               	return		;funcret
 10945  0047B0                     __end_of_I2C_Write:
 10946                           	callstack 0
 10947                           
 10948 ;; *************** function _I2C_Read *****************
 10949 ;; Defined at:
 10950 ;;		line 12 in file "Reloj_ar.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;  flag            1    wreg     unsigned char 
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;  flag            1    1[COMRAM] unsigned char 
 10955 ;;  buffer          1    2[COMRAM] unsigned char 
 10956 ;; Return value:  Size  Location     Type
 10957 ;;                  1    wreg      unsigned char 
 10958 ;; Registers used:
 10959 ;;		wreg, status,2, cstack
 10960 ;; Tracked objects:
 10961 ;;		On entry : 0/0
 10962 ;;		On exit  : 0/0
 10963 ;;		Unchanged: 0/0
 10964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10965 ;;      Params:         0       0       0       0       0       0       0       0       0
 10966 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10967 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10968 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10969 ;;Total ram usage:        2 bytes
 10970 ;; Hardware stack levels used: 1
 10971 ;; Hardware stack levels required when called: 3
 10972 ;; This function calls:
 10973 ;;		_I2C_Ack
 10974 ;;		_I2C_Nack
 10975 ;;		_I2C_Ready
 10976 ;; This function is called by:
 10977 ;;		_RTC_Read_Clock
 10978 ;;		_RTC_Read_Calendar
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           	psect	text44
 10983  00458C                     __ptext44:
 10984                           	callstack 0
 10985  00458C                     _I2C_Read:
 10986                           	callstack 25
 10987                           
 10988                           ;incstack = 0
 10989                           ;I2C_Read@flag stored from wreg
 10990  00458C  6E02               	movwf	I2C_Read@flag^0,c
 10991  00458E                     
 10992                           ;Reloj_ar.c: 12: char I2C_Read(char flag);Reloj_ar.c: 14: {;Reloj_ar.c: 15:         char
      +                           buffer;;Reloj_ar.c: 16:         RCEN = 1;
 10993  00458E  86C5               	bsf	4037,3,c	;volatile
 10994  004590                     l345:
 10995  004590  A0C7               	btfss	199,0,c	;volatile
 10996  004592  EFCD  F022         	goto	u5791
 10997  004596  EFCF  F022         	goto	u5790
 10998  00459A                     u5791:
 10999  00459A  EFC8  F022         	goto	l345
 11000  00459E                     u5790:
 11001  00459E                     
 11002                           ;Reloj_ar.c: 19:         buffer = SSPBUF;
 11003  00459E  CFC9 F003          	movff	4041,I2C_Read@buffer	;volatile
 11004  0045A2                     
 11005                           ;Reloj_ar.c: 21:         if(flag==0)
 11006  0045A2  5002               	movf	I2C_Read@flag^0,w,c
 11007  0045A4  A4D8               	btfss	status,2,c
 11008  0045A6  EFD7  F022         	goto	u5801
 11009  0045AA  EFD9  F022         	goto	u5800
 11010  0045AE                     u5801:
 11011  0045AE  EFDD  F022         	goto	l4995
 11012  0045B2                     u5800:
 11013  0045B2                     
 11014                           ;Reloj_ar.c: 22:             I2C_Ack();
 11015  0045B2  EC09  F024         	call	_I2C_Ack	;wreg free
 11016  0045B6  EFDF  F022         	goto	l349
 11017  0045BA                     l4995:
 11018                           
 11019                           ;Reloj_ar.c: 24:             I2C_Nack();
 11020  0045BA  ECFF  F023         	call	_I2C_Nack	;wreg free
 11021  0045BE                     l349:
 11022                           
 11023                           ;Reloj_ar.c: 25:         I2C_Ready();
 11024  0045BE  EC27  F024         	call	_I2C_Ready	;wreg free
 11025  0045C2                     
 11026                           ;Reloj_ar.c: 26:         return(buffer);
 11027  0045C2  5003               	movf	I2C_Read@buffer^0,w,c
 11028  0045C4  0012               	return		;funcret
 11029  0045C6                     __end_of_I2C_Read:
 11030                           	callstack 0
 11031                           
 11032 ;; *************** function _I2C_Ready *****************
 11033 ;; Defined at:
 11034 ;;		line 43 in file "Reloj_ar.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;		None
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;		None
 11039 ;; Return value:  Size  Location     Type
 11040 ;;                  1    wreg      void 
 11041 ;; Registers used:
 11042 ;;		None
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11048 ;;      Params:         0       0       0       0       0       0       0       0       0
 11049 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11050 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11051 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11052 ;;Total ram usage:        0 bytes
 11053 ;; Hardware stack levels used: 1
 11054 ;; Hardware stack levels required when called: 2
 11055 ;; This function calls:
 11056 ;;		Nothing
 11057 ;; This function is called by:
 11058 ;;		_I2C_Read
 11059 ;;		_I2C_Write
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text45
 11064  00484E                     __ptext45:
 11065                           	callstack 0
 11066  00484E                     _I2C_Ready:
 11067                           	callstack 25
 11068  00484E                     l356:
 11069  00484E  A69E               	btfss	3998,3,c	;volatile
 11070  004850  EF2C  F024         	goto	u4671
 11071  004854  EF2E  F024         	goto	u4670
 11072  004858                     u4671:
 11073  004858  EF27  F024         	goto	l356
 11074  00485C                     u4670:
 11075  00485C                     
 11076                           ;Reloj_ar.c: 46:     SSPIF=0;
 11077  00485C  969E               	bcf	3998,3,c	;volatile
 11078  00485E  0012               	return		;funcret
 11079  004860                     __end_of_I2C_Ready:
 11080                           	callstack 0
 11081                           
 11082 ;; *************** function _I2C_Nack *****************
 11083 ;; Defined at:
 11084 ;;		line 118 in file "Reloj_ar.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;		None
 11087 ;; Auto vars:     Size  Location     Type
 11088 ;;		None
 11089 ;; Return value:  Size  Location     Type
 11090 ;;                  1    wreg      void 
 11091 ;; Registers used:
 11092 ;;		None
 11093 ;; Tracked objects:
 11094 ;;		On entry : 0/0
 11095 ;;		On exit  : 0/0
 11096 ;;		Unchanged: 0/0
 11097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11098 ;;      Params:         0       0       0       0       0       0       0       0       0
 11099 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11100 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11101 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11102 ;;Total ram usage:        0 bytes
 11103 ;; Hardware stack levels used: 1
 11104 ;; Hardware stack levels required when called: 2
 11105 ;; This function calls:
 11106 ;;		Nothing
 11107 ;; This function is called by:
 11108 ;;		_I2C_Read
 11109 ;; This function uses a non-reentrant model
 11110 ;;
 11111                           
 11112                           	psect	text46
 11113  0047FE                     __ptext46:
 11114                           	callstack 0
 11115  0047FE                     _I2C_Nack:
 11116                           	callstack 25
 11117  0047FE                     
 11118                           ;Reloj_ar.c: 120:     ACKDT=1;
 11119  0047FE  8AC5               	bsf	4037,5,c	;volatile
 11120                           
 11121                           ;Reloj_ar.c: 121:  ACKEN=1;
 11122  004800  88C5               	bsf	4037,4,c	;volatile
 11123  004802                     l407:
 11124  004802  B8C5               	btfsc	4037,4,c	;volatile
 11125  004804  EF06  F024         	goto	u5531
 11126  004808  EF08  F024         	goto	u5530
 11127  00480C                     u5531:
 11128  00480C  EF01  F024         	goto	l407
 11129  004810                     u5530:
 11130  004810  0012               	return		;funcret
 11131  004812                     __end_of_I2C_Nack:
 11132                           	callstack 0
 11133                           
 11134 ;; *************** function _I2C_Ack *****************
 11135 ;; Defined at:
 11136 ;;		line 111 in file "Reloj_ar.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;		None
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;		None
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  1    wreg      void 
 11143 ;; Registers used:
 11144 ;;		None
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11150 ;;      Params:         0       0       0       0       0       0       0       0       0
 11151 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11152 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11153 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11154 ;;Total ram usage:        0 bytes
 11155 ;; Hardware stack levels used: 1
 11156 ;; Hardware stack levels required when called: 2
 11157 ;; This function calls:
 11158 ;;		Nothing
 11159 ;; This function is called by:
 11160 ;;		_I2C_Read
 11161 ;; This function uses a non-reentrant model
 11162 ;;
 11163                           
 11164                           	psect	text47
 11165  004812                     __ptext47:
 11166                           	callstack 0
 11167  004812                     _I2C_Ack:
 11168                           	callstack 25
 11169  004812                     
 11170                           ;Reloj_ar.c: 113:     ACKDT=0;
 11171  004812  9AC5               	bcf	4037,5,c	;volatile
 11172                           
 11173                           ;Reloj_ar.c: 114:  ACKEN=1;
 11174  004814  88C5               	bsf	4037,4,c	;volatile
 11175  004816                     l401:
 11176  004816  B8C5               	btfsc	4037,4,c	;volatile
 11177  004818  EF10  F024         	goto	u5521
 11178  00481C  EF12  F024         	goto	u5520
 11179  004820                     u5521:
 11180  004820  EF0B  F024         	goto	l401
 11181  004824                     u5520:
 11182  004824  0012               	return		;funcret
 11183  004826                     __end_of_I2C_Ack:
 11184                           	callstack 0
 11185                           
 11186 ;; *************** function _LCD_String_xy *****************
 11187 ;; Defined at:
 11188 ;;		line 75 in file "LCD_caracter.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  row             1    wreg     unsigned char 
 11191 ;;  pos             1   11[COMRAM] unsigned char 
 11192 ;;  msg             2   12[COMRAM] PTR const unsigned char 
 11193 ;;		 -> RTC_Calendario@date(10), RTC_Calendario@hours(10), STR_6(3), STR_5(3), 
 11194 ;;		 -> Stemp(20), STR_1(14), 
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;  row             1   14[COMRAM] unsigned char 
 11197 ;;  location        1   15[COMRAM] unsigned char 
 11198 ;; Return value:  Size  Location     Type
 11199 ;;                  1    wreg      void 
 11200 ;; Registers used:
 11201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11202 ;; Tracked objects:
 11203 ;;		On entry : 0/0
 11204 ;;		On exit  : 0/0
 11205 ;;		Unchanged: 0/0
 11206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11207 ;;      Params:         3       0       0       0       0       0       0       0       0
 11208 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11209 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11210 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11211 ;;Total ram usage:        5 bytes
 11212 ;; Hardware stack levels used: 1
 11213 ;; Hardware stack levels required when called: 5
 11214 ;; This function calls:
 11215 ;;		_LCD_Command
 11216 ;;		_LCD_String
 11217 ;; This function is called by:
 11218 ;;		_main
 11219 ;;		_RTC_Calendario
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223                           	psect	text48
 11224  004510                     __ptext48:
 11225                           	callstack 0
 11226  004510                     _LCD_String_xy:
 11227                           	callstack 24
 11228                           
 11229                           ;incstack = 0
 11230                           ;LCD_String_xy@row stored from wreg
 11231  004510  6E0F               	movwf	LCD_String_xy@row^0,c
 11232  004512                     
 11233                           ;LCD_caracter.c: 78:     if(row<=1)
 11234  004512  0E02               	movlw	2
 11235  004514  600F               	cpfslt	LCD_String_xy@row^0,c
 11236  004516  EF8F  F022         	goto	u5831
 11237  00451A  EF91  F022         	goto	u5830
 11238  00451E                     u5831:
 11239  00451E  EF9A  F022         	goto	l5041
 11240  004522                     u5830:
 11241  004522                     
 11242                           ;LCD_caracter.c: 79:     {;LCD_caracter.c: 80:         location=(0x80) | ((pos) & 0x0f);
 11243  004522  500C               	movf	LCD_String_xy@pos^0,w,c
 11244  004524  0B0F               	andlw	15
 11245  004526  0980               	iorlw	128
 11246  004528  6E10               	movwf	LCD_String_xy@location^0,c
 11247  00452A                     
 11248                           ;LCD_caracter.c: 81:         LCD_Command(location);
 11249  00452A  5010               	movf	LCD_String_xy@location^0,w,c
 11250  00452C  EC66  F021         	call	_LCD_Command
 11251                           
 11252                           ;LCD_caracter.c: 82:     }
 11253  004530  EFA1  F022         	goto	l5045
 11254  004534                     l5041:
 11255                           
 11256                           ;LCD_caracter.c: 84:     {;LCD_caracter.c: 85:         location=(0xC0) | ((pos) & 0x0f);
 11257  004534  500C               	movf	LCD_String_xy@pos^0,w,c
 11258  004536  0B0F               	andlw	15
 11259  004538  09C0               	iorlw	192
 11260  00453A  6E10               	movwf	LCD_String_xy@location^0,c
 11261  00453C                     
 11262                           ;LCD_caracter.c: 86:         LCD_Command(location);
 11263  00453C  5010               	movf	LCD_String_xy@location^0,w,c
 11264  00453E  EC66  F021         	call	_LCD_Command
 11265  004542                     l5045:
 11266                           
 11267                           ;LCD_caracter.c: 90:     LCD_String(msg);
 11268  004542  C00D  F00A         	movff	LCD_String_xy@msg,LCD_String@msg
 11269  004546  C00E  F00B         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 11270  00454A  EC8A  F020         	call	_LCD_String	;wreg free
 11271  00454E  0012               	return		;funcret
 11272  004550                     __end_of_LCD_String_xy:
 11273                           	callstack 0
 11274                           
 11275 ;; *************** function _LCD_String *****************
 11276 ;; Defined at:
 11277 ;;		line 66 in file "LCD_caracter.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;  msg             2    9[COMRAM] PTR const unsigned char 
 11280 ;;		 -> STR_22(4), STR_21(4), STR_20(4), STR_19(4), 
 11281 ;;		 -> STR_18(4), STR_17(4), STR_16(4), RTC_Calendario@year(10), 
 11282 ;;		 -> RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), RTC_Calendario@mins(10), 
 11283 ;;		 -> RTC_Calendario@secs(10), STR_6(3), STR_5(3), Stemp(20), 
 11284 ;;		 -> STR_1(14), 
 11285 ;; Auto vars:     Size  Location     Type
 11286 ;;		None
 11287 ;; Return value:  Size  Location     Type
 11288 ;;                  1    wreg      void 
 11289 ;; Registers used:
 11290 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11291 ;; Tracked objects:
 11292 ;;		On entry : 0/0
 11293 ;;		On exit  : 0/0
 11294 ;;		Unchanged: 0/0
 11295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11296 ;;      Params:         2       0       0       0       0       0       0       0       0
 11297 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11298 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11299 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11300 ;;Total ram usage:        2 bytes
 11301 ;; Hardware stack levels used: 1
 11302 ;; Hardware stack levels required when called: 4
 11303 ;; This function calls:
 11304 ;;		_LCD_Char
 11305 ;; This function is called by:
 11306 ;;		_LCD_String_xy
 11307 ;;		_RTC_Calendario
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           	psect	text49
 11312  004114                     __ptext49:
 11313                           	callstack 0
 11314  004114                     _LCD_String:
 11315                           	callstack 24
 11316  004114                     
 11317                           ;LCD_caracter.c: 66: void LCD_String(const char *msg);LCD_caracter.c: 67: {;LCD_caracter
      +                          .c: 68:  while((*msg)!=0)
 11318  004114  EFA0  F020         	goto	l4967
 11319  004118                     l4963:
 11320                           
 11321                           ;LCD_caracter.c: 69:  {;LCD_caracter.c: 70:    LCD_Char(*msg);
 11322  004118  C00A  FFF6         	movff	LCD_String@msg,tblptrl
 11323  00411C  C00B  FFF7         	movff	LCD_String@msg+1,tblptrh
 11324  004120  6AF8               	clrf	tblptru,c
 11325  004122  0E07               	movlw	(high __ramtop+-1)
 11326  004124  64F7               	cpfsgt	tblptrh,c
 11327  004126  D003               	bra	u5727
 11328  004128  0008               	tblrd		*
 11329  00412A  50F5               	movf	tablat,w,c
 11330  00412C  D005               	bra	u5720
 11331  00412E                     u5727:
 11332  00412E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11333  004132  CFF7 FFE2          	movff	tblptrh,fsr1h
 11334  004136  50E7               	movf	indf1,w,c
 11335  004138                     u5720:
 11336  004138  EC8C  F021         	call	_LCD_Char
 11337  00413C                     
 11338                           ;LCD_caracter.c: 71:    msg++;
 11339  00413C  4A0A               	infsnz	LCD_String@msg^0,f,c
 11340  00413E  2A0B               	incf	(LCD_String@msg+1)^0,f,c
 11341  004140                     l4967:
 11342                           
 11343                           ;LCD_caracter.c: 68:  while((*msg)!=0)
 11344  004140  C00A  FFF6         	movff	LCD_String@msg,tblptrl
 11345  004144  C00B  FFF7         	movff	LCD_String@msg+1,tblptrh
 11346  004148  6AF8               	clrf	tblptru,c
 11347  00414A  0E07               	movlw	(high __ramtop+-1)
 11348  00414C  64F7               	cpfsgt	tblptrh,c
 11349  00414E  D003               	bra	u5737
 11350  004150  0008               	tblrd		*
 11351  004152  50F5               	movf	tablat,w,c
 11352  004154  D005               	bra	u5730
 11353  004156                     u5737:
 11354  004156  CFF6 FFE1          	movff	tblptrl,fsr1l
 11355  00415A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11356  00415E  50E7               	movf	indf1,w,c
 11357  004160                     u5730:
 11358  004160  0900               	iorlw	0
 11359  004162  A4D8               	btfss	status,2,c
 11360  004164  EFB6  F020         	goto	u5741
 11361  004168  EFB8  F020         	goto	u5740
 11362  00416C                     u5741:
 11363  00416C  EF8C  F020         	goto	l4963
 11364  004170                     u5740:
 11365  004170  0012               	return		;funcret
 11366  004172                     __end_of_LCD_String:
 11367                           	callstack 0
 11368                           
 11369 ;; *************** function _LCD_Init *****************
 11370 ;; Defined at:
 11371 ;;		line 23 in file "LCD_caracter.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;		None
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		wreg, status,2, status,0, cstack
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11385 ;;      Params:         0       0       0       0       0       0       0       0       0
 11386 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11387 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11388 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11389 ;;Total ram usage:        0 bytes
 11390 ;; Hardware stack levels used: 1
 11391 ;; Hardware stack levels required when called: 4
 11392 ;; This function calls:
 11393 ;;		_LCD_Command
 11394 ;;		_MSdelay
 11395 ;; This function is called by:
 11396 ;;		_main
 11397 ;;		_RTC_Calendario
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           
 11401                           	psect	text50
 11402  0046DC                     __ptext50:
 11403                           	callstack 0
 11404  0046DC                     _LCD_Init:
 11405                           	callstack 25
 11406  0046DC                     
 11407                           ;LCD_caracter.c: 25:     TRISD = 0;
 11408  0046DC  0E00               	movlw	0
 11409  0046DE  6E95               	movwf	149,c	;volatile
 11410  0046E0                     
 11411                           ;LCD_caracter.c: 26:     MSdelay(15);
 11412  0046E0  0E00               	movlw	0
 11413  0046E2  6E03               	movwf	(MSdelay@val+1)^0,c
 11414  0046E4  0E0F               	movlw	15
 11415  0046E6  6E02               	movwf	MSdelay@val^0,c
 11416  0046E8  ECB2  F021         	call	_MSdelay	;wreg free
 11417  0046EC                     
 11418                           ;LCD_caracter.c: 27:     LCD_Command(0x02);
 11419  0046EC  0E02               	movlw	2
 11420  0046EE  EC66  F021         	call	_LCD_Command
 11421  0046F2                     
 11422                           ;LCD_caracter.c: 29:     LCD_Command(0x28);
 11423  0046F2  0E28               	movlw	40
 11424  0046F4  EC66  F021         	call	_LCD_Command
 11425  0046F8                     
 11426                           ;LCD_caracter.c: 31:  LCD_Command(0x01);
 11427  0046F8  0E01               	movlw	1
 11428  0046FA  EC66  F021         	call	_LCD_Command
 11429  0046FE                     
 11430                           ;LCD_caracter.c: 32:     LCD_Command(0x0c);
 11431  0046FE  0E0C               	movlw	12
 11432  004700  EC66  F021         	call	_LCD_Command
 11433  004704                     
 11434                           ;LCD_caracter.c: 33:  LCD_Command(0x06);
 11435  004704  0E06               	movlw	6
 11436  004706  EC66  F021         	call	_LCD_Command
 11437  00470A  0012               	return		;funcret
 11438  00470C                     __end_of_LCD_Init:
 11439                           	callstack 0
 11440                           
 11441 ;; *************** function _LCD_Clear *****************
 11442 ;; Defined at:
 11443 ;;		line 93 in file "LCD_caracter.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;		None
 11446 ;; Auto vars:     Size  Location     Type
 11447 ;;		None
 11448 ;; Return value:  Size  Location     Type
 11449 ;;                  1    wreg      void 
 11450 ;; Registers used:
 11451 ;;		wreg, status,2, status,0, cstack
 11452 ;; Tracked objects:
 11453 ;;		On entry : 0/0
 11454 ;;		On exit  : 0/0
 11455 ;;		Unchanged: 0/0
 11456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11457 ;;      Params:         0       0       0       0       0       0       0       0       0
 11458 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11459 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11460 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11461 ;;Total ram usage:        0 bytes
 11462 ;; Hardware stack levels used: 1
 11463 ;; Hardware stack levels required when called: 4
 11464 ;; This function calls:
 11465 ;;		_LCD_Command
 11466 ;;		_MSdelay
 11467 ;; This function is called by:
 11468 ;;		_main
 11469 ;;		_RTC_Calendario
 11470 ;; This function uses a non-reentrant model
 11471 ;;
 11472                           
 11473                           	psect	text51
 11474  004826                     __ptext51:
 11475                           	callstack 0
 11476  004826                     _LCD_Clear:
 11477                           	callstack 25
 11478  004826                     
 11479                           ;LCD_caracter.c: 95:     LCD_Command(0x01);
 11480  004826  0E01               	movlw	1
 11481  004828  EC66  F021         	call	_LCD_Command
 11482                           
 11483                           ;LCD_caracter.c: 96:     MSdelay(3);
 11484  00482C  0E00               	movlw	0
 11485  00482E  6E03               	movwf	(MSdelay@val+1)^0,c
 11486  004830  0E03               	movlw	3
 11487  004832  6E02               	movwf	MSdelay@val^0,c
 11488  004834  ECB2  F021         	call	_MSdelay	;wreg free
 11489  004838  0012               	return		;funcret
 11490  00483A                     __end_of_LCD_Clear:
 11491                           	callstack 0
 11492                           
 11493 ;; *************** function _I2C_Init *****************
 11494 ;; Defined at:
 11495 ;;		line 29 in file "Reloj_ar.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;		None
 11498 ;; Auto vars:     Size  Location     Type
 11499 ;;		None
 11500 ;; Return value:  Size  Location     Type
 11501 ;;                  1    wreg      void 
 11502 ;; Registers used:
 11503 ;;		wreg, status,2
 11504 ;; Tracked objects:
 11505 ;;		On entry : 0/0
 11506 ;;		On exit  : 0/0
 11507 ;;		Unchanged: 0/0
 11508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11509 ;;      Params:         0       0       0       0       0       0       0       0       0
 11510 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11512 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11513 ;;Total ram usage:        0 bytes
 11514 ;; Hardware stack levels used: 1
 11515 ;; Hardware stack levels required when called: 2
 11516 ;; This function calls:
 11517 ;;		Nothing
 11518 ;; This function is called by:
 11519 ;;		_main
 11520 ;;		_RTC_Calendario
 11521 ;; This function uses a non-reentrant model
 11522 ;;
 11523                           
 11524                           	psect	text52
 11525  0047D0                     __ptext52:
 11526                           	callstack 0
 11527  0047D0                     _I2C_Init:
 11528                           	callstack 27
 11529  0047D0                     
 11530                           ;Reloj_ar.c: 31:     TRISB0=1;
 11531  0047D0  8093               	bsf	3987,0,c	;volatile
 11532                           
 11533                           ;Reloj_ar.c: 32:  TRISB1=1;
 11534  0047D2  8293               	bsf	3987,1,c	;volatile
 11535  0047D4                     
 11536                           ;Reloj_ar.c: 33:  SSPSTAT=80;
 11537  0047D4  0E50               	movlw	80
 11538  0047D6  6EC7               	movwf	199,c	;volatile
 11539                           
 11540                           ;Reloj_ar.c: 34:     SSPCON1=0x28;
 11541  0047D8  0E28               	movlw	40
 11542  0047DA  6EC6               	movwf	198,c	;volatile
 11543                           
 11544                           ;Reloj_ar.c: 36:  SSPCON2=0;
 11545  0047DC  0E00               	movlw	0
 11546  0047DE  6EC5               	movwf	197,c	;volatile
 11547                           
 11548                           ;Reloj_ar.c: 37:     SSPADD=((8000000/(4*100000))-1);
 11549  0047E0  0E13               	movlw	19
 11550  0047E2  6EC8               	movwf	200,c	;volatile
 11551  0047E4                     
 11552                           ;Reloj_ar.c: 38:     SSPIE=1;
 11553  0047E4  869D               	bsf	3997,3,c	;volatile
 11554  0047E6                     
 11555                           ;Reloj_ar.c: 39:     SSPIF=0;
 11556  0047E6  969E               	bcf	3998,3,c	;volatile
 11557  0047E8  0012               	return		;funcret
 11558  0047EA                     __end_of_I2C_Init:
 11559                           	callstack 0
 11560                           
 11561 ;; *************** function _PlayCancion *****************
 11562 ;; Defined at:
 11563 ;;		line 37 in file "Melodia2.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;		None
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;		None
 11568 ;; Return value:  Size  Location     Type
 11569 ;;                  1    wreg      void 
 11570 ;; Registers used:
 11571 ;;		wreg, status,2, cstack
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11577 ;;      Params:         0       0       0       0       0       0       0       0       0
 11578 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11579 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11580 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11581 ;;Total ram usage:        0 bytes
 11582 ;; Hardware stack levels used: 1
 11583 ;; Hardware stack levels required when called: 3
 11584 ;; This function calls:
 11585 ;;		_conf_CLK
 11586 ;;		_conf_IO
 11587 ;;		_conf_TA1
 11588 ;; This function is called by:
 11589 ;;		_main
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text53
 11594  004860                     __ptext53:
 11595                           	callstack 0
 11596  004860                     _PlayCancion:
 11597                           	callstack 27
 11598  004860                     
 11599                           ;Melodia2.c: 42:     conf_CLK ();
 11600  004860  EC39  F024         	call	_conf_CLK	;wreg free
 11601                           
 11602                           ;Melodia2.c: 43:     conf_IO ();
 11603  004864  EC42  F024         	call	_conf_IO	;wreg free
 11604                           
 11605                           ;Melodia2.c: 44:     conf_TA1 ();
 11606  004868  EC1D  F024         	call	_conf_TA1	;wreg free
 11607  00486C                     
 11608                           ;Melodia2.c: 47:     INTCONbits.PEIE = 0;
 11609  00486C  9CF2               	bcf	242,6,c	;volatile
 11610  00486E                     
 11611                           ;Melodia2.c: 48:     (INTCONbits.GIE = 1);
 11612  00486E  8EF2               	bsf	242,7,c	;volatile
 11613  004870  0012               	return		;funcret
 11614  004872                     __end_of_PlayCancion:
 11615                           	callstack 0
 11616                           
 11617 ;; *************** function _conf_TA1 *****************
 11618 ;; Defined at:
 11619 ;;		line 137 in file "Melodia2.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;		None
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;		None
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  1    wreg      void 
 11626 ;; Registers used:
 11627 ;;		wreg, status,2
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : 0/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11633 ;;      Params:         0       0       0       0       0       0       0       0       0
 11634 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11635 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11636 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11637 ;;Total ram usage:        0 bytes
 11638 ;; Hardware stack levels used: 1
 11639 ;; Hardware stack levels required when called: 2
 11640 ;; This function calls:
 11641 ;;		Nothing
 11642 ;; This function is called by:
 11643 ;;		_PlayCancion
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           	psect	text54
 11648  00483A                     __ptext54:
 11649                           	callstack 0
 11650  00483A                     _conf_TA1:
 11651                           	callstack 27
 11652  00483A                     
 11653                           ;Melodia2.c: 138:     T1CONbits.T1CKPS0 = 1;
 11654  00483A  88CD               	bsf	205,4,c	;volatile
 11655                           
 11656                           ;Melodia2.c: 139:     T1CONbits.T1CKPS1 = 1;
 11657  00483C  8ACD               	bsf	205,5,c	;volatile
 11658  00483E                     
 11659                           ;Melodia2.c: 141:     TMR1H = 0xCF;
 11660  00483E  0ECF               	movlw	207
 11661  004840  6ECF               	movwf	207,c	;volatile
 11662                           
 11663                           ;Melodia2.c: 142:     TMR1L = 0x2C;
 11664  004842  0E2C               	movlw	44
 11665  004844  6ECE               	movwf	206,c	;volatile
 11666  004846                     
 11667                           ;Melodia2.c: 144:     PIR1bits.TMR1IF = 0;
 11668  004846  909E               	bcf	158,0,c	;volatile
 11669  004848                     
 11670                           ;Melodia2.c: 145:     PIE1bits.TMR1IE = 1;
 11671  004848  809D               	bsf	157,0,c	;volatile
 11672  00484A                     
 11673                           ;Melodia2.c: 147:     T1CONbits.TMR1ON = 1;
 11674  00484A  80CD               	bsf	205,0,c	;volatile
 11675  00484C  0012               	return		;funcret
 11676  00484E                     __end_of_conf_TA1:
 11677                           	callstack 0
 11678                           
 11679 ;; *************** function _conf_IO *****************
 11680 ;; Defined at:
 11681 ;;		line 102 in file "Melodia2.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;		None
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;		None
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  1    wreg      void 
 11688 ;; Registers used:
 11689 ;;		wreg, status,2
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/0
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11695 ;;      Params:         0       0       0       0       0       0       0       0       0
 11696 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11697 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11698 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11699 ;;Total ram usage:        0 bytes
 11700 ;; Hardware stack levels used: 1
 11701 ;; Hardware stack levels required when called: 2
 11702 ;; This function calls:
 11703 ;;		Nothing
 11704 ;; This function is called by:
 11705 ;;		_PlayCancion
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           	psect	text55
 11710  004884                     __ptext55:
 11711                           	callstack 0
 11712  004884                     _conf_IO:
 11713                           	callstack 27
 11714  004884                     
 11715                           ;Melodia2.c: 103:     ADCON1bits.PCFG = 0b1111;
 11716  004884  0E0F               	movlw	15
 11717  004886  12C1               	iorwf	193,f,c	;volatile
 11718  004888                     
 11719                           ;Melodia2.c: 105:     TRISCbits.RC1 = 0;
 11720  004888  9294               	bcf	148,1,c	;volatile
 11721  00488A                     
 11722                           ;Melodia2.c: 107:     LATCbits.LC1 = 0;
 11723  00488A  928B               	bcf	139,1,c	;volatile
 11724  00488C  0012               	return		;funcret
 11725  00488E                     __end_of_conf_IO:
 11726                           	callstack 0
 11727                           
 11728 ;; *************** function _conf_CLK *****************
 11729 ;; Defined at:
 11730 ;;		line 78 in file "Melodia2.c"
 11731 ;; Parameters:    Size  Location     Type
 11732 ;;		None
 11733 ;; Auto vars:     Size  Location     Type
 11734 ;;		None
 11735 ;; Return value:  Size  Location     Type
 11736 ;;                  1    wreg      void 
 11737 ;; Registers used:
 11738 ;;		wreg, status,2
 11739 ;; Tracked objects:
 11740 ;;		On entry : 0/0
 11741 ;;		On exit  : 0/0
 11742 ;;		Unchanged: 0/0
 11743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11744 ;;      Params:         0       0       0       0       0       0       0       0       0
 11745 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11746 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11747 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11748 ;;Total ram usage:        0 bytes
 11749 ;; Hardware stack levels used: 1
 11750 ;; Hardware stack levels required when called: 2
 11751 ;; This function calls:
 11752 ;;		Nothing
 11753 ;; This function is called by:
 11754 ;;		_PlayCancion
 11755 ;; This function uses a non-reentrant model
 11756 ;;
 11757                           
 11758                           	psect	text56
 11759  004872                     __ptext56:
 11760                           	callstack 0
 11761  004872                     _conf_CLK:
 11762                           	callstack 27
 11763  004872                     
 11764                           ;Melodia2.c: 79:     OSCCONbits.IRCF0 = 1;
 11765  004872  88D3               	bsf	211,4,c	;volatile
 11766                           
 11767                           ;Melodia2.c: 80:     OSCCONbits.IRCF1 = 1;
 11768  004874  8AD3               	bsf	211,5,c	;volatile
 11769                           
 11770                           ;Melodia2.c: 81:     OSCCONbits.IRCF2 = 1;
 11771  004876  8CD3               	bsf	211,6,c	;volatile
 11772  004878                     
 11773                           ;Melodia2.c: 83:     OSCCONbits.SCS = 0b10;
 11774  004878  50D3               	movf	211,w,c	;volatile
 11775  00487A  0BFC               	andlw	-4
 11776  00487C  0902               	iorlw	2
 11777  00487E  6ED3               	movwf	211,c	;volatile
 11778  004880                     
 11779                           ;Melodia2.c: 85:     OSCCONbits.IDLEN = 1;
 11780  004880  8ED3               	bsf	211,7,c	;volatile
 11781  004882  0012               	return		;funcret
 11782  004884                     __end_of_conf_CLK:
 11783                           	callstack 0
 11784                           
 11785 ;; *************** function _LCD_Custom_Char *****************
 11786 ;; Defined at:
 11787 ;;		line 99 in file "LCD_caracter.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;  loc             1    wreg     unsigned char 
 11790 ;;  msg             2    9[COMRAM] PTR unsigned char 
 11791 ;;		 -> character1(8), character3(8), character2(8), 
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;  loc             1   11[COMRAM] unsigned char 
 11794 ;;  i               1   12[COMRAM] unsigned char 
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      void 
 11797 ;; Registers used:
 11798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11804 ;;      Params:         2       0       0       0       0       0       0       0       0
 11805 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11806 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11807 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11808 ;;Total ram usage:        4 bytes
 11809 ;; Hardware stack levels used: 1
 11810 ;; Hardware stack levels required when called: 4
 11811 ;; This function calls:
 11812 ;;		_LCD_Char
 11813 ;;		_LCD_Command
 11814 ;; This function is called by:
 11815 ;;		_main
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819                           	psect	text57
 11820  00443E                     __ptext57:
 11821                           	callstack 0
 11822  00443E                     _LCD_Custom_Char:
 11823                           	callstack 26
 11824                           
 11825                           ;incstack = 0
 11826                           ;LCD_Custom_Char@loc stored from wreg
 11827  00443E  6E0C               	movwf	LCD_Custom_Char@loc^0,c
 11828  004440                     
 11829                           ;LCD_caracter.c: 99: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_c
      +                          aracter.c: 100: {;LCD_caracter.c: 101:     unsigned char i;;LCD_caracter.c: 102:     if 
      +                          (loc< 8 )
 11830  004440  0E08               	movlw	8
 11831  004442  600C               	cpfslt	LCD_Custom_Char@loc^0,c
 11832  004444  EF26  F022         	goto	u6011
 11833  004448  EF28  F022         	goto	u6010
 11834  00444C                     u6011:
 11835  00444C  EF42  F022         	goto	l112
 11836  004450                     u6010:
 11837  004450                     
 11838                           ;LCD_caracter.c: 103:     {;LCD_caracter.c: 104:      LCD_Command ( 0x40 +(loc* 8 ));
 11839  004450  500C               	movf	LCD_Custom_Char@loc^0,w,c
 11840  004452  0D08               	mullw	8
 11841  004454  50F3               	movf	243,w,c
 11842  004456  0F40               	addlw	64
 11843  004458  EC66  F021         	call	_LCD_Command
 11844  00445C                     
 11845                           ;LCD_caracter.c: 105:        for (i= 0 ;i< 8 ;i++)
 11846  00445C  0E00               	movlw	0
 11847  00445E  6E0D               	movwf	LCD_Custom_Char@i^0,c
 11848  004460                     l5311:
 11849                           
 11850                           ;LCD_caracter.c: 106:            LCD_Char (msg[i]);
 11851  004460  500D               	movf	LCD_Custom_Char@i^0,w,c
 11852  004462  240A               	addwf	LCD_Custom_Char@msg^0,w,c
 11853  004464  6ED9               	movwf	fsr2l,c
 11854  004466  0E00               	movlw	0
 11855  004468  200B               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
 11856  00446A  6EDA               	movwf	fsr2h,c
 11857  00446C  50DF               	movf	indf2,w,c
 11858  00446E  EC8C  F021         	call	_LCD_Char
 11859  004472  2A0D               	incf	LCD_Custom_Char@i^0,f,c
 11860  004474  0E07               	movlw	7
 11861  004476  640D               	cpfsgt	LCD_Custom_Char@i^0,c
 11862  004478  EF40  F022         	goto	u6021
 11863  00447C  EF42  F022         	goto	u6020
 11864  004480                     u6021:
 11865  004480  EF30  F022         	goto	l5311
 11866  004484                     u6020:
 11867  004484                     l112:
 11868  004484  0012               	return		;funcret
 11869  004486                     __end_of_LCD_Custom_Char:
 11870                           	callstack 0
 11871                           
 11872 ;; *************** function _LCD_Command *****************
 11873 ;; Defined at:
 11874 ;;		line 36 in file "LCD_caracter.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;  cmd             1    wreg     unsigned char 
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;  cmd             1    8[COMRAM] unsigned char 
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		wreg, status,2, status,0, cstack
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11888 ;;      Params:         0       0       0       0       0       0       0       0       0
 11889 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11890 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11891 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11892 ;;Total ram usage:        2 bytes
 11893 ;; Hardware stack levels used: 1
 11894 ;; Hardware stack levels required when called: 3
 11895 ;; This function calls:
 11896 ;;		_MSdelay
 11897 ;; This function is called by:
 11898 ;;		_main
 11899 ;;		_LCD_Init
 11900 ;;		_LCD_String_xy
 11901 ;;		_LCD_Clear
 11902 ;;		_LCD_Custom_Char
 11903 ;; This function uses a non-reentrant model
 11904 ;;
 11905                           
 11906                           	psect	text58
 11907  0042CC                     __ptext58:
 11908                           	callstack 0
 11909  0042CC                     _LCD_Command:
 11910                           	callstack 25
 11911                           
 11912                           ;incstack = 0
 11913                           ;LCD_Command@cmd stored from wreg
 11914  0042CC  6E09               	movwf	LCD_Command@cmd^0,c
 11915  0042CE                     
 11916                           ;LCD_caracter.c: 36: void LCD_Command(unsigned char cmd );LCD_caracter.c: 37: {;LCD_cara
      +                          cter.c: 38:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 11917  0042CE  C009  F008         	movff	LCD_Command@cmd,??_LCD_Command
 11918  0042D2  0EF0               	movlw	240
 11919  0042D4  1608               	andwf	??_LCD_Command^0,f,c
 11920  0042D6  508C               	movf	140,w,c	;volatile
 11921  0042D8  0B0F               	andlw	15
 11922  0042DA  1008               	iorwf	??_LCD_Command^0,w,c
 11923  0042DC  6E8C               	movwf	140,c	;volatile
 11924  0042DE                     
 11925                           ;LCD_caracter.c: 39:  LATD0 = 0;
 11926  0042DE  908C               	bcf	3980,0,c	;volatile
 11927  0042E0                     
 11928                           ;LCD_caracter.c: 40:  LATD1 = 1;
 11929  0042E0  828C               	bsf	3980,1,c	;volatile
 11930  0042E2                     
 11931                           ;LCD_caracter.c: 41:  __nop();
 11932  0042E2  F000               	nop	
 11933  0042E4                     
 11934                           ;LCD_caracter.c: 42:  LATD1 = 0;
 11935  0042E4  928C               	bcf	3980,1,c	;volatile
 11936  0042E6                     
 11937                           ;LCD_caracter.c: 43:  MSdelay(1);
 11938  0042E6  0E00               	movlw	0
 11939  0042E8  6E03               	movwf	(MSdelay@val+1)^0,c
 11940  0042EA  0E01               	movlw	1
 11941  0042EC  6E02               	movwf	MSdelay@val^0,c
 11942  0042EE  ECB2  F021         	call	_MSdelay	;wreg free
 11943  0042F2                     
 11944                           ;LCD_caracter.c: 44:     LATD = (LATD & 0x0f) | (cmd<<4);
 11945  0042F2  C009  F008         	movff	LCD_Command@cmd,??_LCD_Command
 11946  0042F6  3A08               	swapf	??_LCD_Command^0,f,c
 11947  0042F8  0EF0               	movlw	240
 11948  0042FA  1608               	andwf	??_LCD_Command^0,f,c
 11949  0042FC  508C               	movf	140,w,c	;volatile
 11950  0042FE  0B0F               	andlw	15
 11951  004300  1008               	iorwf	??_LCD_Command^0,w,c
 11952  004302  6E8C               	movwf	140,c	;volatile
 11953  004304                     
 11954                           ;LCD_caracter.c: 45:  LATD1 = 1;
 11955  004304  828C               	bsf	3980,1,c	;volatile
 11956  004306                     
 11957                           ;LCD_caracter.c: 46:  __nop();
 11958  004306  F000               	nop	
 11959  004308                     
 11960                           ;LCD_caracter.c: 47:  LATD1 = 0;
 11961  004308  928C               	bcf	3980,1,c	;volatile
 11962                           
 11963                           ;LCD_caracter.c: 48:  MSdelay(3);
 11964  00430A  0E00               	movlw	0
 11965  00430C  6E03               	movwf	(MSdelay@val+1)^0,c
 11966  00430E  0E03               	movlw	3
 11967  004310  6E02               	movwf	MSdelay@val^0,c
 11968  004312  ECB2  F021         	call	_MSdelay	;wreg free
 11969  004316  0012               	return		;funcret
 11970  004318                     __end_of_LCD_Command:
 11971                           	callstack 0
 11972                           
 11973 ;; *************** function _LCD_Char *****************
 11974 ;; Defined at:
 11975 ;;		line 52 in file "LCD_caracter.c"
 11976 ;; Parameters:    Size  Location     Type
 11977 ;;  dat             1    wreg     unsigned char 
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;  dat             1    8[COMRAM] unsigned char 
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  1    wreg      void 
 11982 ;; Registers used:
 11983 ;;		wreg, status,2, status,0, cstack
 11984 ;; Tracked objects:
 11985 ;;		On entry : 0/0
 11986 ;;		On exit  : 0/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11989 ;;      Params:         0       0       0       0       0       0       0       0       0
 11990 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11991 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11992 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11993 ;;Total ram usage:        2 bytes
 11994 ;; Hardware stack levels used: 1
 11995 ;; Hardware stack levels required when called: 3
 11996 ;; This function calls:
 11997 ;;		_MSdelay
 11998 ;; This function is called by:
 11999 ;;		_main
 12000 ;;		_LCD_String
 12001 ;;		_LCD_Custom_Char
 12002 ;; This function uses a non-reentrant model
 12003 ;;
 12004                           
 12005                           	psect	text59
 12006  004318                     __ptext59:
 12007                           	callstack 0
 12008  004318                     _LCD_Char:
 12009                           	callstack 24
 12010                           
 12011                           ;incstack = 0
 12012                           ;LCD_Char@dat stored from wreg
 12013  004318  6E09               	movwf	LCD_Char@dat^0,c
 12014  00431A                     
 12015                           ;LCD_caracter.c: 52: void LCD_Char(unsigned char dat);LCD_caracter.c: 53: {;LCD_caracter
      +                          .c: 54:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 12016  00431A  C009  F008         	movff	LCD_Char@dat,??_LCD_Char
 12017  00431E  0EF0               	movlw	240
 12018  004320  1608               	andwf	??_LCD_Char^0,f,c
 12019  004322  508C               	movf	140,w,c	;volatile
 12020  004324  0B0F               	andlw	15
 12021  004326  1008               	iorwf	??_LCD_Char^0,w,c
 12022  004328  6E8C               	movwf	140,c	;volatile
 12023  00432A                     
 12024                           ;LCD_caracter.c: 55:  LATD0 = 1;
 12025  00432A  808C               	bsf	3980,0,c	;volatile
 12026  00432C                     
 12027                           ;LCD_caracter.c: 56:  LATD1 = 1;
 12028  00432C  828C               	bsf	3980,1,c	;volatile
 12029  00432E                     
 12030                           ;LCD_caracter.c: 57:  __nop();
 12031  00432E  F000               	nop	
 12032  004330                     
 12033                           ;LCD_caracter.c: 58:  LATD1 = 0;
 12034  004330  928C               	bcf	3980,1,c	;volatile
 12035  004332                     
 12036                           ;LCD_caracter.c: 59:  MSdelay(1);
 12037  004332  0E00               	movlw	0
 12038  004334  6E03               	movwf	(MSdelay@val+1)^0,c
 12039  004336  0E01               	movlw	1
 12040  004338  6E02               	movwf	MSdelay@val^0,c
 12041  00433A  ECB2  F021         	call	_MSdelay	;wreg free
 12042  00433E                     
 12043                           ;LCD_caracter.c: 60:     LATD = (LATD & 0x0f) | (dat<<4);
 12044  00433E  C009  F008         	movff	LCD_Char@dat,??_LCD_Char
 12045  004342  3A08               	swapf	??_LCD_Char^0,f,c
 12046  004344  0EF0               	movlw	240
 12047  004346  1608               	andwf	??_LCD_Char^0,f,c
 12048  004348  508C               	movf	140,w,c	;volatile
 12049  00434A  0B0F               	andlw	15
 12050  00434C  1008               	iorwf	??_LCD_Char^0,w,c
 12051  00434E  6E8C               	movwf	140,c	;volatile
 12052  004350                     
 12053                           ;LCD_caracter.c: 61:  LATD1 = 1;
 12054  004350  828C               	bsf	3980,1,c	;volatile
 12055  004352                     
 12056                           ;LCD_caracter.c: 62:  __nop();
 12057  004352  F000               	nop	
 12058  004354                     
 12059                           ;LCD_caracter.c: 63:  LATD1 = 0;
 12060  004354  928C               	bcf	3980,1,c	;volatile
 12061                           
 12062                           ;LCD_caracter.c: 64:  MSdelay(3);
 12063  004356  0E00               	movlw	0
 12064  004358  6E03               	movwf	(MSdelay@val+1)^0,c
 12065  00435A  0E03               	movlw	3
 12066  00435C  6E02               	movwf	MSdelay@val^0,c
 12067  00435E  ECB2  F021         	call	_MSdelay	;wreg free
 12068  004362  0012               	return		;funcret
 12069  004364                     __end_of_LCD_Char:
 12070                           	callstack 0
 12071                           
 12072 ;; *************** function _MSdelay *****************
 12073 ;; Defined at:
 12074 ;;		line 111 in file "LCD_caracter.c"
 12075 ;; Parameters:    Size  Location     Type
 12076 ;;  val             2    1[COMRAM] unsigned int 
 12077 ;; Auto vars:     Size  Location     Type
 12078 ;;  j               2    5[COMRAM] unsigned int 
 12079 ;;  i               2    3[COMRAM] unsigned int 
 12080 ;; Return value:  Size  Location     Type
 12081 ;;                  1    wreg      void 
 12082 ;; Registers used:
 12083 ;;		wreg, status,2, status,0
 12084 ;; Tracked objects:
 12085 ;;		On entry : 0/0
 12086 ;;		On exit  : 0/0
 12087 ;;		Unchanged: 0/0
 12088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12089 ;;      Params:         2       0       0       0       0       0       0       0       0
 12090 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12091 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12092 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12093 ;;Total ram usage:        6 bytes
 12094 ;; Hardware stack levels used: 1
 12095 ;; Hardware stack levels required when called: 2
 12096 ;; This function calls:
 12097 ;;		Nothing
 12098 ;; This function is called by:
 12099 ;;		_main
 12100 ;;		_LCD_Init
 12101 ;;		_LCD_Command
 12102 ;;		_LCD_Char
 12103 ;;		_LCD_Clear
 12104 ;;		_RTC_Calendario
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           	psect	text60
 12109  004364                     __ptext60:
 12110                           	callstack 0
 12111  004364                     _MSdelay:
 12112                           	callstack 27
 12113  004364                     
 12114                           ;LCD_caracter.c: 111: void MSdelay(unsigned int val);LCD_caracter.c: 112: {;LCD_caracter
      +                          .c: 113:  unsigned int i,j;;LCD_caracter.c: 114:  for(i=0;i<val;i++)
 12115  004364  0E00               	movlw	0
 12116  004366  6E05               	movwf	(MSdelay@i+1)^0,c
 12117  004368  0E00               	movlw	0
 12118  00436A  6E04               	movwf	MSdelay@i^0,c
 12119  00436C  EFCB  F021         	goto	l4319
 12120  004370                     l4307:
 12121                           
 12122                           ;LCD_caracter.c: 115:      for(j=0;j<165;j++);
 12123  004370  0E00               	movlw	0
 12124  004372  6E07               	movwf	(MSdelay@j+1)^0,c
 12125  004374  0E00               	movlw	0
 12126  004376  6E06               	movwf	MSdelay@j^0,c
 12127  004378                     l4313:
 12128  004378  4A06               	infsnz	MSdelay@j^0,f,c
 12129  00437A  2A07               	incf	(MSdelay@j+1)^0,f,c
 12130  00437C  5007               	movf	(MSdelay@j+1)^0,w,c
 12131  00437E  E109               	bnz	u4650
 12132  004380  0EA5               	movlw	165
 12133  004382  5C06               	subwf	MSdelay@j^0,w,c
 12134  004384  A0D8               	btfss	status,0,c
 12135  004386  EFC7  F021         	goto	u4651
 12136  00438A  EFC9  F021         	goto	u4650
 12137  00438E                     u4651:
 12138  00438E  EFBC  F021         	goto	l4313
 12139  004392                     u4650:
 12140  004392  4A04               	infsnz	MSdelay@i^0,f,c
 12141  004394  2A05               	incf	(MSdelay@i+1)^0,f,c
 12142  004396                     l4319:
 12143  004396  5002               	movf	MSdelay@val^0,w,c
 12144  004398  5C04               	subwf	MSdelay@i^0,w,c
 12145  00439A  5003               	movf	(MSdelay@val+1)^0,w,c
 12146  00439C  5805               	subwfb	(MSdelay@i+1)^0,w,c
 12147  00439E  A0D8               	btfss	status,0,c
 12148  0043A0  EFD4  F021         	goto	u4661
 12149  0043A4  EFD6  F021         	goto	u4660
 12150  0043A8                     u4661:
 12151  0043A8  EFB8  F021         	goto	l4307
 12152  0043AC                     u4660:
 12153  0043AC  0012               	return		;funcret
 12154  0043AE                     __end_of_MSdelay:
 12155                           	callstack 0
 12156                           
 12157 ;; *************** function _ISR *****************
 12158 ;; Defined at:
 12159 ;;		line 150 in file "Melodia2.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;		None
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;		None
 12164 ;; Return value:  Size  Location     Type
 12165 ;;                  1    wreg      void 
 12166 ;; Registers used:
 12167 ;;		wreg, status,2, status,0, cstack
 12168 ;; Tracked objects:
 12169 ;;		On entry : 0/0
 12170 ;;		On exit  : 0/0
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12173 ;;      Params:         0       0       0       0       0       0       0       0       0
 12174 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12175 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12176 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12177 ;;Total ram usage:        1 bytes
 12178 ;; Hardware stack levels used: 1
 12179 ;; Hardware stack levels required when called: 1
 12180 ;; This function calls:
 12181 ;;		_desabilitar_Time
 12182 ;; This function is called by:
 12183 ;;		Interrupt level 2
 12184 ;; This function uses a non-reentrant model
 12185 ;;
 12186                           
 12187                           	psect	intcode
 12188  000008                     __pintcode:
 12189                           	callstack 0
 12190  000008                     _ISR:
 12191                           	callstack 20
 12192                           
 12193                           ;incstack = 0
 12194  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12195  00000A  ED82  F01F         	call	int_func,f	;refresh shadow registers
 12196                           
 12197                           	psect	intcode_body
 12198  003F04                     __pintcode_body:
 12199                           	callstack 20
 12200  003F04                     int_func:
 12201                           	callstack 20
 12202  003F04  0006               	pop		; remove dummy address from shadow register refresh
 12203  003F06                     
 12204                           ;Melodia2.c: 152:     if ( PIR1bits.TMR1IF == 1 )
 12205  003F06  A09E               	btfss	158,0,c	;volatile
 12206  003F08  EF88  F01F         	goto	i2u613_41
 12207  003F0C  EF8A  F01F         	goto	i2u613_40
 12208  003F10                     i2u613_41:
 12209  003F10  EFC5  F01F         	goto	i2l227
 12210  003F14                     i2u613_40:
 12211  003F14                     
 12212                           ;Melodia2.c: 153:     {;Melodia2.c: 154:         LATCbits.LC1 = ~LATCbits.LC1;
 12213  003F14  B28B               	btfsc	139,1,c	;volatile
 12214  003F16  EF8F  F01F         	goto	i2u614_41
 12215  003F1A  EF92  F01F         	goto	i2u614_40
 12216  003F1E                     i2u614_41:
 12217  003F1E  0E01               	movlw	1
 12218  003F20  EF93  F01F         	goto	i2u614_46
 12219  003F24                     i2u614_40:
 12220  003F24  0E00               	movlw	0
 12221  003F26                     i2u614_46:
 12222  003F26  0AFF               	xorlw	255
 12223  003F28  6E01               	movwf	??_ISR^0,c
 12224  003F2A  4601               	rlncf	??_ISR^0,f,c
 12225  003F2C  508B               	movf	139,w,c	;volatile
 12226  003F2E  1801               	xorwf	??_ISR^0,w,c
 12227  003F30  0BFD               	andlw	-3
 12228  003F32  1801               	xorwf	??_ISR^0,w,c
 12229  003F34  6E8B               	movwf	139,c	;volatile
 12230                           
 12231                           ;Melodia2.c: 155:         if ( var3seg == 60 && var3beep < 6 )
 12232  003F36  0E3C               	movlw	60
 12233  003F38  0100               	movlb	0	; () banked
 12234  003F3A  19FB               	xorwf	_var3seg& (0+255),w,b	;volatile
 12235  003F3C  A4D8               	btfss	status,2,c
 12236  003F3E  EFA3  F01F         	goto	i2u615_41
 12237  003F42  EFA5  F01F         	goto	i2u615_40
 12238  003F46                     i2u615_41:
 12239  003F46  EFB0  F01F         	goto	i2l5397
 12240  003F4A                     i2u615_40:
 12241  003F4A                     
 12242                           ; BSR set to: 0
 12243  003F4A  0E06               	movlw	6
 12244  003F4C  605C               	cpfslt	_var3beep^0,c	;volatile
 12245  003F4E  EFAB  F01F         	goto	i2u616_41
 12246  003F52  EFAD  F01F         	goto	i2u616_40
 12247  003F56                     i2u616_41:
 12248  003F56  EFB0  F01F         	goto	i2l5397
 12249  003F5A                     i2u616_40:
 12250  003F5A                     
 12251                           ; BSR set to: 0
 12252                           ;Melodia2.c: 156:         {;Melodia2.c: 159:             var3beep++;
 12253  003F5A  2A5C               	incf	_var3beep^0,f,c	;volatile
 12254                           
 12255                           ;Melodia2.c: 161:         }
 12256  003F5C  EFC0  F01F         	goto	i2l5405
 12257  003F60                     i2l5397:
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;Melodia2.c: 163:         {;Melodia2.c: 164:             if ( var3beep > 5 )
 12261  003F60  0E05               	movlw	5
 12262  003F62  645C               	cpfsgt	_var3beep^0,c	;volatile
 12263  003F64  EFB6  F01F         	goto	i2u617_41
 12264  003F68  EFB8  F01F         	goto	i2u617_40
 12265  003F6C                     i2u617_41:
 12266  003F6C  EFBE  F01F         	goto	i2l5403
 12267  003F70                     i2u617_40:
 12268  003F70                     
 12269                           ; BSR set to: 0
 12270                           ;Melodia2.c: 165:             {;Melodia2.c: 167:                 var3beep = 0;
 12271  003F70  0E00               	movlw	0
 12272  003F72  6E5C               	movwf	_var3beep^0,c	;volatile
 12273                           
 12274                           ;Melodia2.c: 168:                 var3seg = 0;
 12275  003F74  0E00               	movlw	0
 12276  003F76  6FFB               	movwf	_var3seg& (0+255),b	;volatile
 12277  003F78                     
 12278                           ; BSR set to: 0
 12279                           ;Melodia2.c: 169:                 desabilitar_Time();
 12280  003F78  EC47  F024         	call	_desabilitar_Time	;wreg free
 12281  003F7C                     i2l5403:
 12282                           
 12283                           ;Melodia2.c: 172:             var3seg++;
 12284  003F7C  0100               	movlb	0	; () banked
 12285  003F7E  2BFB               	incf	_var3seg& (0+255),f,b	;volatile
 12286  003F80                     i2l5405:
 12287                           
 12288                           ; BSR set to: 0
 12289                           ;Melodia2.c: 177:         TMR1H = 0xCF;
 12290  003F80  0ECF               	movlw	207
 12291  003F82  6ECF               	movwf	207,c	;volatile
 12292  003F84                     
 12293                           ; BSR set to: 0
 12294                           ;Melodia2.c: 178:         TMR1L = 0x2C;
 12295  003F84  0E2C               	movlw	44
 12296  003F86  6ECE               	movwf	206,c	;volatile
 12297  003F88                     
 12298                           ; BSR set to: 0
 12299                           ;Melodia2.c: 180:         PIR1bits.TMR1IF = 0;
 12300  003F88  909E               	bcf	158,0,c	;volatile
 12301  003F8A                     i2l227:
 12302  003F8A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12303  003F8C  0011               	retfie		f
 12304  003F8E                     __end_of_ISR:
 12305                           	callstack 0
 12306                           
 12307 ;; *************** function _desabilitar_Time *****************
 12308 ;; Defined at:
 12309 ;;		line 184 in file "Melodia2.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;		None
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;		None
 12314 ;; Return value:  Size  Location     Type
 12315 ;;                  1    wreg      void 
 12316 ;; Registers used:
 12317 ;;		None
 12318 ;; Tracked objects:
 12319 ;;		On entry : 0/0
 12320 ;;		On exit  : 0/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12323 ;;      Params:         0       0       0       0       0       0       0       0       0
 12324 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12325 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12326 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12327 ;;Total ram usage:        0 bytes
 12328 ;; Hardware stack levels used: 1
 12329 ;; This function calls:
 12330 ;;		Nothing
 12331 ;; This function is called by:
 12332 ;;		_ISR
 12333 ;; This function uses a non-reentrant model
 12334 ;;
 12335                           
 12336                           	psect	text62
 12337  00488E                     __ptext62:
 12338                           	callstack 0
 12339  00488E                     _desabilitar_Time:
 12340                           	callstack 20
 12341  00488E                     
 12342                           ;Melodia2.c: 185: PIE1bits.TMR1IE = 0;
 12343  00488E  909D               	bcf	157,0,c	;volatile
 12344                           
 12345                           ;Melodia2.c: 187:     T1CONbits.TMR1ON = 0;
 12346  004890  90CD               	bcf	205,0,c	;volatile
 12347                           
 12348                           ;Melodia2.c: 189:      INTCONbits.PEIE = 0;
 12349  004892  9CF2               	bcf	242,6,c	;volatile
 12350                           
 12351                           ;Melodia2.c: 190:     (INTCONbits.GIE = 0);
 12352  004894  9EF2               	bcf	242,7,c	;volatile
 12353  004896  0012               	return		;funcret
 12354  004898                     __end_of_desabilitar_Time:
 12355                           	callstack 0
 12356                           
 12357                           	psect	rparam
 12358  0000                     
 12359                           	psect	temp
 12360  00005D                     btemp:
 12361                           	callstack 0
 12362  00005D                     	ds	1
 12363  0000                     int$flags	set	btemp
 12364  0000                     wtemp8	set	btemp+1
 12365  0000                     ttemp5	set	btemp+1
 12366  0000                     ttemp6	set	btemp+4
 12367  0000                     ttemp7	set	btemp+8
 12368                           
 12369                           	psect	idloc
 12370                           
 12371                           ;Config register IDLOC0 @ 0x200000
 12372                           ;	unspecified, using default values
 12373  200000                     	org	2097152
 12374  200000  FF                 	db	255
 12375                           
 12376                           ;Config register IDLOC1 @ 0x200001
 12377                           ;	unspecified, using default values
 12378  200001                     	org	2097153
 12379  200001  FF                 	db	255
 12380                           
 12381                           ;Config register IDLOC2 @ 0x200002
 12382                           ;	unspecified, using default values
 12383  200002                     	org	2097154
 12384  200002  FF                 	db	255
 12385                           
 12386                           ;Config register IDLOC3 @ 0x200003
 12387                           ;	unspecified, using default values
 12388  200003                     	org	2097155
 12389  200003  FF                 	db	255
 12390                           
 12391                           ;Config register IDLOC4 @ 0x200004
 12392                           ;	unspecified, using default values
 12393  200004                     	org	2097156
 12394  200004  FF                 	db	255
 12395                           
 12396                           ;Config register IDLOC5 @ 0x200005
 12397                           ;	unspecified, using default values
 12398  200005                     	org	2097157
 12399  200005  FF                 	db	255
 12400                           
 12401                           ;Config register IDLOC6 @ 0x200006
 12402                           ;	unspecified, using default values
 12403  200006                     	org	2097158
 12404  200006  FF                 	db	255
 12405                           
 12406                           ;Config register IDLOC7 @ 0x200007
 12407                           ;	unspecified, using default values
 12408  200007                     	org	2097159
 12409  200007  FF                 	db	255
 12410                           
 12411                           	psect	config
 12412                           
 12413                           ;Config register CONFIG1L @ 0x300000
 12414                           ;	PLL Prescaler Selection bits
 12415                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12416                           ;	System Clock Postscaler Selection bits
 12417                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12418                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12419                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12420  300000                     	org	3145728
 12421  300000  00                 	db	0
 12422                           
 12423                           ;Config register CONFIG1H @ 0x300001
 12424                           ;	Oscillator Selection bits
 12425                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12426                           ;	Fail-Safe Clock Monitor Enable bit
 12427                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12428                           ;	Internal/External Oscillator Switchover bit
 12429                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12430  300001                     	org	3145729
 12431  300001  09                 	db	9
 12432                           
 12433                           ;Config register CONFIG2L @ 0x300002
 12434                           ;	Power-up Timer Enable bit
 12435                           ;	PWRT = ON, PWRT enabled
 12436                           ;	Brown-out Reset Enable bits
 12437                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12438                           ;	Brown-out Reset Voltage bits
 12439                           ;	BORV = 3, Minimum setting 2.05V
 12440                           ;	USB Voltage Regulator Enable bit
 12441                           ;	VREGEN = OFF, USB voltage regulator disabled
 12442  300002                     	org	3145730
 12443  300002  18                 	db	24
 12444                           
 12445                           ;Config register CONFIG2H @ 0x300003
 12446                           ;	Watchdog Timer Enable bit
 12447                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12448                           ;	Watchdog Timer Postscale Select bits
 12449                           ;	WDTPS = 32768, 1:32768
 12450  300003                     	org	3145731
 12451  300003  1E                 	db	30
 12452                           
 12453                           ; Padding undefined space
 12454  300004                     	org	3145732
 12455  300004  FF                 	db	255
 12456                           
 12457                           ;Config register CONFIG3H @ 0x300005
 12458                           ;	CCP2 MUX bit
 12459                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12460                           ;	PORTB A/D Enable bit
 12461                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12462                           ;	Low-Power Timer 1 Oscillator Enable bit
 12463                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12464                           ;	MCLR Pin Enable bit
 12465                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12466  300005                     	org	3145733
 12467  300005  81                 	db	129
 12468                           
 12469                           ;Config register CONFIG4L @ 0x300006
 12470                           ;	Stack Full/Underflow Reset Enable bit
 12471                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12472                           ;	Single-Supply ICSP Enable bit
 12473                           ;	LVP = OFF, Single-Supply ICSP disabled
 12474                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12475                           ;	ICPRT = OFF, ICPORT disabled
 12476                           ;	Extended Instruction Set Enable bit
 12477                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12478                           ;	Background Debugger Enable bit
 12479                           ;	DEBUG = 0x1, unprogrammed default
 12480  300006                     	org	3145734
 12481  300006  80                 	db	128
 12482                           
 12483                           ; Padding undefined space
 12484  300007                     	org	3145735
 12485  300007  FF                 	db	255
 12486                           
 12487                           ;Config register CONFIG5L @ 0x300008
 12488                           ;	Code Protection bit
 12489                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12490                           ;	Code Protection bit
 12491                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12492                           ;	Code Protection bit
 12493                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12494                           ;	Code Protection bit
 12495                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12496  300008                     	org	3145736
 12497  300008  0F                 	db	15
 12498                           
 12499                           ;Config register CONFIG5H @ 0x300009
 12500                           ;	Boot Block Code Protection bit
 12501                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12502                           ;	Data EEPROM Code Protection bit
 12503                           ;	CPD = OFF, Data EEPROM is not code-protected
 12504  300009                     	org	3145737
 12505  300009  C0                 	db	192
 12506                           
 12507                           ;Config register CONFIG6L @ 0x30000A
 12508                           ;	Write Protection bit
 12509                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12510                           ;	Write Protection bit
 12511                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12512                           ;	Write Protection bit
 12513                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12514                           ;	Write Protection bit
 12515                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12516  30000A                     	org	3145738
 12517  30000A  0F                 	db	15
 12518                           
 12519                           ;Config register CONFIG6H @ 0x30000B
 12520                           ;	Configuration Register Write Protection bit
 12521                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12522                           ;	Boot Block Write Protection bit
 12523                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12524                           ;	Data EEPROM Write Protection bit
 12525                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12526  30000B                     	org	3145739
 12527  30000B  E0                 	db	224
 12528                           
 12529                           ;Config register CONFIG7L @ 0x30000C
 12530                           ;	Table Read Protection bit
 12531                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12532                           ;	Table Read Protection bit
 12533                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12534                           ;	Table Read Protection bit
 12535                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12536                           ;	Table Read Protection bit
 12537                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12538  30000C                     	org	3145740
 12539  30000C  0F                 	db	15
 12540                           
 12541                           ;Config register CONFIG7H @ 0x30000D
 12542                           ;	Boot Block Table Read Protection bit
 12543                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12544  30000D                     	org	3145741
 12545  30000D  40                 	db	64
 12546                           tosu	equ	0xFFF
 12547                           tosh	equ	0xFFE
 12548                           tosl	equ	0xFFD
 12549                           stkptr	equ	0xFFC
 12550                           pclatu	equ	0xFFB
 12551                           pclath	equ	0xFFA
 12552                           pcl	equ	0xFF9
 12553                           tblptru	equ	0xFF8
 12554                           tblptrh	equ	0xFF7
 12555                           tblptrl	equ	0xFF6
 12556                           tablat	equ	0xFF5
 12557                           prodh	equ	0xFF4
 12558                           prodl	equ	0xFF3
 12559                           indf0	equ	0xFEF
 12560                           postinc0	equ	0xFEE
 12561                           postdec0	equ	0xFED
 12562                           preinc0	equ	0xFEC
 12563                           plusw0	equ	0xFEB
 12564                           fsr0h	equ	0xFEA
 12565                           fsr0l	equ	0xFE9
 12566                           wreg	equ	0xFE8
 12567                           indf1	equ	0xFE7
 12568                           postinc1	equ	0xFE6
 12569                           postdec1	equ	0xFE5
 12570                           preinc1	equ	0xFE4
 12571                           plusw1	equ	0xFE3
 12572                           fsr1h	equ	0xFE2
 12573                           fsr1l	equ	0xFE1
 12574                           bsr	equ	0xFE0
 12575                           indf2	equ	0xFDF
 12576                           postinc2	equ	0xFDE
 12577                           postdec2	equ	0xFDD
 12578                           preinc2	equ	0xFDC
 12579                           plusw2	equ	0xFDB
 12580                           fsr2h	equ	0xFDA
 12581                           fsr2l	equ	0xFD9
 12582                           status	equ	0xFD8

Data Sizes:
    Strings     86
    Constant    0
    Data        31
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      92
    BANK0           160    139     157
    BANK1           256     69     250
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1521_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character3(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> Stemp(BANK1[20]), STR_1(CODE[14]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), RTC_Calendario@year(BANK1[10]), 
		 -> RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), 
		 -> RTC_Calendario@secs(BANK1[10]), STR_6(CODE[3]), STR_5(CODE[3]), Stemp(BANK1[20]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_MSdelay
    _LCD_Char->_MSdelay

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RTC_Calendario
    _ReadADC->___fltol
    _RTC_Calendario->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_RTC_Calendario

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  116886
                                            135 BANK0      4     4      0
                           _I2C_Init
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                    _LCD_Custom_Char
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                        _PlayCancion
                     _RTC_Calendario
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ReadLUZ                                              6     4      2      46
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              6     4      2    8792
                                              6 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              7 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendario                                      72    72      0   52283
                                            132 BANK0      3     3      0
                                              0 BANK1     69    69      0
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   41009
                                            116 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   38519
                                            108 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   37944
                                             76 BANK0     32    26      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5327
                                             28 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   26123
                                              8 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1020
                                              7 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     541
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              1 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             71 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                             87 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                              0 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             71 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    2310
                                             46 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             46 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              3 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              3 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              2 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              2 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              1 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              1 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    4252
                                             11 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    1929
                                              9 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1596
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1596
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PlayCancion                                          0     0      0       0
                           _conf_CLK
                            _conf_IO
                           _conf_TA1
 ---------------------------------------------------------------------------------
 (2) _conf_TA1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_IO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_CLK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Custom_Char                                      4     2      2    2002
                                              9 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     820
                                              7 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0     820
                                              7 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     776
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 1     1      0       0
                                              0 COMRAM     1     1      0
                   _desabilitar_Time
 ---------------------------------------------------------------------------------
 (11) _desabilitar_Time                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _LCD_Char
     _MSdelay
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Command
   _LCD_Custom_Char
     _LCD_Char
     _LCD_Command
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _MSdelay
   _PlayCancion
     _conf_CLK
     _conf_IO
     _conf_TA1
   _RTC_Calendario
     _I2C_Init
     _I2C_Stop
     _LCD_Clear
     _LCD_Init
     _LCD_String
     _LCD_String_xy
     _MSdelay
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ReadLUZ (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _ReadADC
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _ReadLUZ
   ___flge
   ___xxtofl
   _sprintf

 _ISR (ROOT)
   _desabilitar_Time

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5C       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F3      20        0.0%
DATA                 0      0     1F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Oct 01 18:09:34 2021

                          ___fldiv@aexp 0047                            ___fldiv@bexp 0046  
                                     _i 00FC                      __size_of_I2C_Ready 0012  
                          ___fldiv@sign 003F                      ??_desabilitar_Time 0001  
                    __size_of_I2C_Start 002E                            ?_LCD_Command 0001  
                           _SSPSTATbits 000FC7                      __size_of_I2C_Write 0022  
                                    l60 273C                                      l59 264E  
                                    l92 4362                                      l86 470A  
                                    l89 4316                                      l98 4170  
                          ___awdiv@sign 0007                     ___wmul@multiplicand 0004  
                           ?_LCD_String 000A                         _LCD_Custom_Char 443E  
RTC_Read_Calendar@read_calendar_address 0005                                     l103 454E  
                                   l120 43AC                                     l112 4484  
                                   l106 4838                                     l212 4882  
                                   l215 488C                                     l144 38BC  
                                   l209 4870                                     l401 4816  
                                   l218 484C                                     l410 4810  
                                   l146 38CA                                     l147 3980  
                                   l171 3FD8                                     l404 4824  
                                   l172 3FF2                                     l413 478C  
                                   l350 45C4                                     l407 4802  
                                   l353 47E8                                     l345 4590  
                                   l273 44CA                                     l169 3FCA  
                                   l347 459E                                     l356 484E  
                                   l380 473E                                     l276 4226  
                                   l349 45BE                                     l373 4710  
                                   l358 485C                                     l382 474C  
                                   l710 377E                                     l359 485E  
                                   l375 471E                                     l391 47FA  
                                   l384 4766                                     l288 2E46  
                                   l377 4738                                     l393 47FC  
                                   l644 3DA8                                     l397 47AE  
                                   l389 47EC                                     l672 3F02  
                                   l657 3E58                                     l683 3882  
                                   l941 1CAC                                     l678 383C  
                                   l950 1F7C                                     l942 1C9A  
                                   l687 466C                                     l943 1C60  
                                   l958 1DC6                                     l967 1E96  
                                   l983 443C                                     l968 1E84  
                                   l995 2AEC                                     l997 294C  
                                   _PEN 007E2A                                     _ISR 0008  
                                   _Day 012A                         __end_of_I2C_Ack 4826  
                                   _pad 3C20                                     _min 012E  
                                   _sec 0130                                     _luz 00EB  
                          ___awmod@sign 0007                                     wreg 000FE8  
                          ___flmul@aexp 0027                            ___flmul@bexp 0028  
                          ___flmul@sign 0022                            ___flmul@temp 002D  
                          ___flmul@prod 0029                                    ?_ISR 0001  
                           LCD_Char@dat 0009                            ___fltol@exp1 0065  
                                  l1000 2910                                    l1006 2992  
                                  l1031 23A6                                    l1008 2A0A  
                                  l1009 29F8                                    l1034 2238  
                                  l1027 2042                                    l1044 2368  
                                  l1036 22B0                                    l1300 191C  
                                  l1037 229E                                    l1141 3CE4  
                                  l1205 1084                                    l1310 4054  
                                  l1071 34E6                                    l1320 3A7E  
                                  l1136 3C66                                    l1241 2E88  
                                  l1082 347E                                    l1403 3C1E  
                                  l1411 450E                                    l1139 3CA8  
                                  l1091 4278                                    l1075 3422  
                                  l1420 41CC                                    l1068 338A  
                                  l1309 404C                                    l1414 4898  
                                  l1430 3B54                                    l1262 30BC  
                                  l1159 14AE                                    l1239 2E80  
                                  l1352 3676                                    l1440 40AC  
                                  l1264 3120                                    l1248 2F1E  
                                  l4001 237C                                    l1361 3276  
                                  l1177 0C44                                    l1426 46DA  
                                  l4003 238A                                    l1349 366E  
                                  l4021 3CEA                                    l4101 3E88  
                                  l4005 238C                                    l4013 43F6  
                                  l1445 40B4                                    l1453 410A  
                                  l1293 1ABC                                    l1374 46A4  
                                  l1382 42CA                                    l1358 3332  
                                  l1278 15A2                                    l4031 3D1A  
                                  l4023 3CF8                                    l4111 3F00  
                                  l4103 3E98                                    l4007 2392  
                                  l4015 4408                                    l1368 458A  
                                  l1464 45FC                                    l5001 47EA  
                                  l4041 3D48                                    l4033 3D1E  
                                  l4025 3D00                                    l4105 3EC6  
                                  l4121 37EC                                    l4009 2396  
                                  l4201 3C86                                    l1458 4112  
                                  l5011 47D0                                    l4051 3D7C  
                                  l4043 3D56                                    l4035 3D26  
                                  l4027 3D04                                    l4019 3CE6  
                                  l4107 3ED6                                    l4131 387A  
                                  l4123 37FC                                    l4115 3780  
                                  l4211 3982                                    l4203 3C8A  
                                  l1388 4634                                    l5013 47D4  
                                  l5021 46E0                                    l5101 4222  
                                  l4301 42C4                                    l4053 3D82  
                                  l4045 3D5C                                    l4037 3D38  
                                  l4029 3D12                                    l4109 3EFA  
                                  l4133 3880                                    l4125 380A  
                                  l4117 37AE                                    l4141 465C  
                                  l4213 39A2                                    l3501 3B7A  
                                  l4205 3CB8                                    l5015 47E4  
                                  l5031 4704                                    l5023 46EC  
                                  l4047 3D72                                    l4039 3D40  
                                  l4055 3D88                                    l4071 3DC8  
                                  l4063 3DAA                                    l4127 381C  
                                  l4119 37BE                                    l3511 1ABE  
                                  l4215 39E0                                    l4223 3A20  
                                  l3503 3B84                                    l4207 3CCC  
                                  l5111 33B0                                    l5103 3336  
                                  l4313 4378                                    l4305 4364  
                                  l5017 47E6                                    l5025 46F2  
                                  l5041 4534                                    l5033 4512  
                                  l4321 484E                                    l4057 3D98  
                                  l4049 3D7A                                    l4081 3E00  
                                  l4073 3DD6                                    l4065 3DAE  
                                  l4129 382A                                    l4137 4636  
                                  l3601 1C7A                                    l3521 1AFA  
                                  l3513 1ACA                                    l4225 3A32  
                                  l4217 3A08                                    l3505 3BA2  
                                  l4233 4172                                    l4241 408C  
                                  l5121 340A                                    l5105 3346  
                                  l4315 437C                                    l4307 4370  
                                  l5027 46F8                                    l5019 46DC  
                                  l5043 453C                                    l5035 4512  
                                  l4059 3DA0                                    l4083 3E0E  
                                  l4091 3E38                                    l4075 3DDE  
                                  l4067 3DBC                                    l4139 464C  
                                  l3611 1CBA                                    l3603 1C7E  
                                  l3531 1B2A                                    l3523 1B0A  
                                  l3515 1AD8                                    l4219 3A14  
                                  l4251 3198                                    l3507 3BD8  
                                  l4235 4182                                    l4243 409E  
                                  l5131 346E                                    l5123 340C  
                                  l5115 33C4                                    l5107 3354  
                                  l6011 38BA                                    l6003 3884  
                                  l4317 4392                                    l5301 4440  
                                  l5061 4872                                    l5029 46FE  
                                  l5045 4542                                    l5037 4522  
                                  l4093 3E48                                    l4085 3E24  
                                  l4077 3DF0                                    l4069 3DC4  
                                  l3701 1F54                                    l3621 1CFC  
                                  l3613 1CCA                                    l3605 1C8C  
                                  l3541 1B54                                    l3533 1B3C  
                                  l3525 1B0C                                    l3517 1ADA  
                                  l4229 3A76                                    l4261 3266  
                                  l4253 31AC                                    l4237 4056  
                                  l6101 2D94                                    l6021 2AEE  
                                  l5141 34C6                                    l5133 348C  
                                  l5125 3418                                    l5117 33CC  
                                  l5109 339A                                    l6013 38D2  
                                  l6005 3888                                    l4319 4396  
                                  l5311 4460                                    l5303 4450  
                                  l5063 4878                                    l5071 488A  
                                  l5047 4826                                    l5039 452A  
                                  l4095 3E50                                    l4087 3E2C  
                                  l4079 3DF8                                    l3703 1F56  
                                  l3631 1D2A                                    l3623 1D0A  
                                  l3607 1C8E                                    l3543 1B64  
                                  l3551 1B8E                                    l3535 1B3E  
                                  l3519 1AEA                                    l3527 1B14  
                                  l4271 3322                                    l4255 31BA  
                                  l4263 329A                                    l4247 3122  
                                  l4191 3C30                                    l6031 2B16  
                                  l6023 2AF8                                    l5143 34D4  
                                  l5135 348E                                    l5127 3454  
                                  l5119 33D8                                    l6015 38DE  
                                  l6007 38B6                                    l5313 4472  
                                  l5305 445C                                    l5065 4880  
                                  l5081 484A                                    l5073 483A  
                                  l5321 486E                                    l4089 3E32  
                                  l3705 1F5C                                    l3641 1D96  
                                  l3633 1D34                                    l3625 1D16  
                                  l3617 1CDE                                    l3609 1C98  
                                  l3561 1BC6                                    l3553 1B9E  
                                  l3545 1B74                                    l3537 1B44  
                                  l3529 1B24                                    l4265 32D6  
                                  l4249 3142                                    l3713 44CC  
                                  l3721 46A6                                    l4193 3C44  
                                  l6113 2DB4                                    l6041 2BAE  
                                  l6033 2B1A                                    l6025 2B0A  
                                  l5145 34D6                                    l5137 3492  
                                  l5129 3460                                    l6017 3978  
                                  l6009 38B8                                    l6201 2722  
                                  l5315 4474                                    l5067 4884  
                                  l5075 483E                                    l5091 41D0  
                                  l5083 4488                                    l3811 28D4  
                                  l3803 288A                                    l4099 3E5A  
                                  l3707 1F6A                                    l3643 1DA6  
                                  l3627 1D1A                                    l3619 1CEE  
                                  l3635 1D3A                                    l3571 1BDA  
                                  l3563 1BCA                                    l3555 1BB0  
                                  l3547 1B84                                    l3539 1B52  
                                  l4267 32EA                                    l4259 322A  
                                  l3715 44D8                                    l3723 46B2  
                                  l4195 3C52                                    l3731 45FE  
                                  l4275 4550                                    l4283 40EC  
                                  l6107 2DA4                                    l6051 2C1C  
                                  l6043 2BC4                                    l6035 2B26  
                                  l6027 2B0E                                    l5139 34B6  
                                  l5171 3FC4                                    l5069 4888  
                                  l5077 4846                                    l5317 4860  
                                  l5093 41E2                                    l5085 449A  
                                  l3741 4784                                    l4293 427A  
                                  l4701 3500                                    l3821 291A  
                                  l3813 28DC                                    l3805 28A4  
                                  l3901 1FE6                                    l3709 1F6C  
                                  l3661 1E28                                    l3653 1E00  
                                  l3637 1D60                                    l3645 1DB6  
                                  l3629 1D28                                    l3581 1BEE  
                                  l3573 1BDE                                    l3565 1BCE  
                                  l3557 1BBE                                    l3549 1B86  
                                  l5501 36E0                                    l4269 3312  
                                  l3717 44EA                                    l3725 46B6  
                                  l4197 3C5E                                    l4189 3C20  
                                  l4285 40FE                                    l6125 2DD4  
                                  l6133 2DE4                                    l6061 2C72  
                                  l6053 2C3A                                    l6045 2BD6  
                                  l6037 2B2C                                    l6029 2B12  
                                  l5173 3FC6                                    l6141 23B0  
                                  ?_pad 0012                                    l5079 4848  
                                  l5319 486C                                    l5095 41F2  
                                  l5087 44AA                                    l4295 427E  
                                  l4703 3504                                    l3831 2972  
                                  l3823 2938                                    l3815 28EC  
                                  l3807 28B4                                    l3751 2770  
                                  l3911 201C                                    l3903 1FEC  
                                  l3663 1E30                                    l3655 1E0A  
                                  l3647 1DDC                                    l3639 1D94  
                                  l3671 1E54                                    l3591 1C02  
                                  l3583 1BF2                                    l3575 1BE2  
                                  l3567 1BD2                                    l3559 1BC2  
                                  l5511 370A                                    l5503 36E4  
                                  l3719 44EE                                    l3727 46CE  
                                  l4199 3C72                                    l3735 45C6  
                                  l4279 40B6                                    l4631 2E48  
                                  l6119 2DC4                                    l6063 2C90  
                                  l6055 2C4C                                    l6047 2BE0  
                                  l6039 2B6E                                    l5175 3FC8  
                                  l5167 3F8E                                    l6151 23E0  
                                  l6143 23B4                                    l5097 4202  
                                  l5089 44BA                                    l4289 466E  
                                  l4297 4292                                    l4721 35BA  
                                  l4713 3560                                    l4705 3520  
                                  l3841 29B0                                    l3833 2978  
                                  l3825 293A                                    l3817 2900  
                                  l3809 28C4                                    l3753 2780  
                                  l3761 27AA                                    l3745 2754  
                                  l3913 202C                                    l3905 1FFA  
                                  l3681 1EA6                                    l3673 1E58  
                                  l3665 1E34                                    l3657 1E18  
                                  l3649 1DEC                                    l3593 1C2C  
                                  l3585 1BF6                                    l3577 1BE6  
                                  l3569 1BD6                                    l5521 3732  
                                  l5513 3714                                    l5505 36F2  
                                  l3497 3B56                                    l5601 0AA6  
                                  l4641 2EA6                                    l4633 2E58  
                                  l6081 2D28                                    l6065 2CAE  
                                  l6073 2CE2                                    l6057 2C58  
                                  l6049 2BFE                                    l5177 3FDE  
                                  l5169 3F92                                    l6161 246E  
                                  l6153 2406                                    l6145 23B8  
                                  l5099 4212                                    l3739 4768  
                                  l4299 42C0                                    l4731 3640  
                                  l4715 3576                                    l4707 3556  
                                  l3851 2A1A                                    l3843 29B4  
                                  l3835 2982                                    l3827 294A  
                                  l3819 290E                                    l3771 27D6  
                                  l3763 27BA                                    l3755 2790  
                                  l3747 2760                                    l3931 20AE  
                                  l3923 2076                                    l3915 2032  
                                  l3907 1FFC                                    l3691 1F0C  
                                  l3683 1EB2                                    l3675 1E66  
                                  l3667 1E44                                    l3659 1E1A  
                                  l3595 1C48                                    l3587 1BFA  
                                  l3579 1BEA                                    l5523 373E  
                                  l5515 371E                                    l3499 3B68  
                                  l5611 0B70                                    l4651 2EE6  
                                  l4643 2EC6                                    l4635 2E5A  
                                  l6083 2D46                                    l6075 2CE8  
                                  l6067 2CCC                                    l6059 2C68  
                                  l5179 3FEA                                    l6171 2510  
                                  l6163 24A0                                    l6155 242C  
                                  l6147 23CA                                    l6139 23A8  
                                  l4733 3652                                    l4725 35F0  
                                  l4717 357E                                    l4709 355A  
                                  l3861 2A7C                                    l3853 2A26  
                                  l3845 29C2                                    l3837 2990  
                                  l3829 295C                                    l3773 27E6  
                                  l3781 2810                                    l3765 27C0  
                                  l3757 27A0                                    l3749 276E  
                                  l3941 20F8                                    l3933 20C6  
                                  l3925 2082                                    l3917 2052  
                                  l3909 200C                                    l3693 1F1C  
                                  l3685 1EC0                                    l3677 1E7C  
                                  l3669 1E46                                    l3597 1C58  
                                  l3589 1BFE                                    l5525 374E  
                                  l5701 1000                                    l5621 0BF2  
                                  l5613 0BA4                                    l5605 0ADC  
                                  l5541 0888                                    l5533 0858  
                                  l4741 3AAA                                    l4661 2F64  
                                  l4653 2F02                                    l4645 2ECE  
                                  l4637 2E74                                    l6085 2D58  
                                  l6077 2CEC                                    l6181 25C4  
                                  l6173 252A                                    l6165 24D2  
                                  l6157 2430                                    l6149 23CE  
                                  l4719 3586                                    l3871 2ADA  
                                  l3863 2A92                                    l3855 2A34  
                                  l3847 29F0                                    l3839 29A2  
                                  l3791 2852                                    l3783 2820  
                                  l3775 27F6                                    l3767 27C6  
                                  l3759 27A2                                    l3951 214E  
                                  l3943 2108                                    l3935 20D2  
                                  l3927 208C                                    l3919 2062  
                                  l3695 1F3C                                    l3687 1EFA  
                                  l3599 1C6E                                    l5527 375E  
                                  l5711 1070                                    l5703 1034  
                                  l5623 0C04                                    l5631 0C50  
                                  l5615 0BAC                                    l5607 0B10  
                                  l5551 08DE                                    l5543 08AC  
                                  l5535 0862                                    l4751 3AF8  
                                  l4671 2FD4                                    l4655 2F12  
                                  l4647 2ED8                                    l4639 2E9E  
                                  l6095 2D84                                    l6087 2D64  
                                  l6079 2D0A                                    l6191 2680  
                                  l6183 25F6                                    l6167 24D8  
                                  l6175 252E                                    l6159 243C  
                                  l4761 432A                                    l4729 362E  
                                  l3873 2AE0                                    l3865 2AAC  
                                  l3857 2A5E                                    l3785 2836  
                                  l3777 2806                                    l3769 27D4  
                                  l3961 21F2                                    l3953 216A  
                                  l3945 2114                                    l3937 20DE  
                                  l3929 20A2                                    l3697 1F40  
                                  l3689 1EFC                                    l5529 376E  
                                  l5801 13A4                                    l5721 1126  
                                  l5713 107C                                    l5705 1048  
                                  l5641 0C90                                    l5625 0C16  
                                  l5609 0B16                                    l5617 0BDE  
                                  l5561 090C                                    l5553 08F0  
                                  l5545 08B6                                    l5537 0872  
                                  l4753 3B0A                                    l4745 3AB6  
                                  l4681 3078                                    l4673 2FDA  
                                  l4665 2F9E                                    l4649 2EDE  
                                  l6273 2E08                                    l6089 2D74  
                                  l6193 26B2                                    l6185 25FC  
                                  l6177 2560                                    l6169 24FE  
                                  l4771 433E                                    l4763 432C  
                                  l3875 2AE2                                    l3867 2AC8  
                                  l3859 2A62                                    l3787 2846  
                                  l3795 2866                                    l3779 2808  
                                  l3971 2248                                    l3963 2200  
                                  l3955 2176                                    l3947 2124  
                                  l3939 20EC                                    l3891 1FAA  
                                  l3883 1F7E                                    l3699 1F4E  
                                  l5491 3690                                    l5811 13EE  
                                  l5803 13AA                                    l5731 116E  
                                  l5723 1138                                    l5715 10A0  
                                  l5707 104C                                    l5651 0CEC  
                                  l5643 0CC6                                    l5627 0C1E  
                                  l5619 0BEE                                    l5571 0980  
                                  l5555 08FC                                    l5563 0912  
                                  l5547 08BE                                    l5539 0880  
                                  l4755 3B32                                    l4747 3AC4  
                                  l4739 3A80                                    l4691 30E2  
                                  l4683 3092                                    l4675 2FE0  
                                  l4667 2FB0                                    l4659 2F52  
                                  l6275 1562                                    l6195 26E4  
                                  l6187 2622                                    l6179 2592  
                                  l4773 4350                                    l4765 432E  
                                  l4941 42CE                                    l4781 4794  
                                  l6277 35A4                                    l3869 2ACC  
                                  l3797 2876                                    l3789 284E  
                                  l3973 2256                                    l3965 221E  
                                  l3957 2192                                    l3949 213E  
                                  l3893 1FBA                                    l3885 1F8A  
                                  l5821 141E                                    l5813 13FA  
                                  l5805 13BC                                    l5741 11A4  
                                  l5733 117E                                    l5725 1146  
                                  l5717 1104                                    l5709 105C  
                                  l5661 0D30                                    l5653 0CFE  
                                  l5645 0CCE                                    l5637 0C62  
                                  l5629 0C38                                    l5573 099C  
                                  l5565 0938                                    l5581 09E6  
                                  l5557 0904                                    l5549 08D0  
                                  l4749 3ADC                                    l4693 30F8  
                                  l4685 30AC                                    l4669 2FC4  
                                  l4677 303E                                    l5901 16D2  
                                  l6197 26EA                                    l6189 2634  
                                  l4775 4352                                    l4767 4330  
                                  l4759 431A                                    l4951 42E6  
                                  l4943 42DE                                    l4791 47AC  
                                  l4783 4798                                    l3799 2876  
                                  l3983 22C0                                    l3991 2308  
                                  l3975 225A                                    l3967 2228  
                                  l3959 21BC                                    l3895 1FCA  
                                  l3887 1F98                                    l5495 36A4  
                                  l5831 1478                                    l5815 1402  
                                  l5807 13D6                                    l5751 11D8  
                                  l5743 11A8                                    l5735 1182  
                                  l5719 1114                                    l5727 114E  
                                  l5671 0D7A                                    l5663 0D48  
                                  l5655 0D0C                                    l5639 0C74  
                                  l5647 0CD2                                    l5591 0A70  
                                  l5583 0A0C                                    l5575 09B4  
                                  l5559 0908                                    l4687 30CC  
                                  l4679 305A                                    l5911 1778  
                                  l5903 16F4                                    l6199 2710  
                                  l4777 4354                                    l4769 4332  
                                  l4953 42F2                                    l4945 42E0  
                                  l4961 4114                                    l4785 47A6  
                                  l4697 34E8                                    l3993 2322  
                                  l3985 22CC                                    l3977 2268  
                                  l3969 2236                                    l3897 1FD0  
                                  l3889 1F9A                                    l5497 36CE  
                                  l5489 3678                                    l5833 1488  
                                  l5825 1452                                    l5817 1412  
                                  l5809 13DC                                    l5761 1276  
                                  l5753 11DC                                    l5745 11AE  
                                  l5737 1188                                    l5729 1160  
                                  l5673 0D8E                                    l5681 0E84  
                                  l5665 0D5A                                    l5657 0D10  
                                  l5649 0CDA                                    l5577 09BE  
                                  l5569 096E                                    l4689 30D2  
                                  l5913 178A                                    l5905 1704  
                                  l5841 14B0                                    l4955 4304  
                                  l4947 42E2                                    l4963 4118  
                                  l4795 4812                                    l4779 4790  
                                  l4699 34FC                                    l3995 2336  
                                  l3987 22DA                                    l3979 2296  
                                  l3899 1FE0                                    l5499 36D0  
                                  l5835 148E                                    l5827 1464  
                                  l5819 1418                                    l5771 12D4  
                                  l5739 1194                                    l5747 11B4  
                                  l5755 11E2                                    l5763 127A  
                                  l5691 0F50                                    l5683 0EA2  
                                  l5675 0DF2                                    l5659 0D22  
                                  l5667 0D62                                    l5587 0A42  
                                  l5931 18B8                                    l5915 17A0  
                                  l5923 180A                                    l5907 1736  
                                  l5851 1504                                    l5843 14D4  
                                  l4957 4306                                    l4949 42E4  
                                  l4965 413C                                    l4797 47FE  
                                  l4981 4760                                    l4973 4732  
                                  l3997 2350                                    l3989 2304  
                                  l5829 1470                                    l5781 1312  
                                  l5773 12E4                                    l5765 1298  
                                  l5757 123A                                    l5749 11C6  
                                  l5693 0F60                                    l5685 0ED6  
                                  l5677 0E4A                                    l5669 0D6A  
                                  l5589 0A54                                    l5941 1954  
                                  l5933 18EC                                    l5925 1838  
                                  l5917 17AE                                    l5909 1746  
                                  l5853 1506                                    l5845 14E2  
                                  l4959 4308                                    l4967 4140  
                                  l4991 45A2                                    l4983 4766  
                                  l3999 236C                                    l5791 1348  
                                  l5783 1322                                    l5775 12E8  
                                  l5767 12B4                                    l5759 126E  
                                  l5695 0F70                                    l5687 0F08  
                                  l5679 0E7E                                    l5599 0A8C  
                                  l5943 1978                                    l5919 17DE  
                                  l5871 1530                                    l5863 1524  
                                  l5855 1518                                    l5847 14F4  
                                  l4993 45B2                                    l4977 473C  
                                  l4969 470E                                    l5793 1354  
                                  l5785 132A                                    l5777 12F8  
                                  l5769 12C6                                    l5697 0FA4  
                                  l5689 0F1E                                    l5945 198E  
                                  l5953 1A16                                    l5929 18A6  
                                  l5881 15B2                                    l5849 14F8  
                                  l4995 45BA                                    l5795 135A  
                                  l5787 1338                                    l5779 130A  
                                  l5699 0FFA                                    l5971 1AAA  
                                  l5955 1A3A                                    l5963 1A6A  
                                  l5947 199C                                    l5939 1930  
                                  l5891 164A                                    l5883 15D6  
                                  l5875 153C                                    l5867 152A  
                                  l5859 151E                                    l4997 45C2  
                                  l4989 458E                                    l5797 1380  
                                  l5789 1340                                    l5965 1A78  
                                  l5957 1A48                                    l5949 19DA  
                                  l5893 166A                                    l5885 15DE  
                                  l5877 1590                                    l5799 139C  
                                  l5959 1A5C                                    l5895 1678  
                                  l5887 15EC                                    l5879 15B0  
                                  l5983 3FF4                                    l5991 4228  
                                  l5889 1610                                    l5969 1A86  
                                  l5985 3FFC                                    l5993 423A  
                                  l5899 16C0                                    l5987 400A  
                                  l5995 4242                                    l5989 4030  
                                  l5997 424A                                    l5999 4266  
                                  STR_1 0801                                    STR_2 080F  
                                  STR_3 080F                                    STR_4 080F  
                                  STR_5 0854                                    STR_6 0851  
                                  STR_7 0826                                    STR_8 082E  
                                  STR_9 082E                                    u3110 3B68  
                                  u3111 3B64                                    u4000 2350  
                                  u3200 1B64                                    u3120 3B7A  
                                  _LATD 000F8C                                    u4001 234C  
                                  u3201 1B60                                    u3121 3B76  
                                  u4010 238A                                    u3210 1B74  
                                  u3130 3BA2                                    u4011 2386  
                                  u3211 1B70                                    u3131 3B9E  
                                  u4020 3CF8                                    u4100 3DF0  
                                  u3300 1CBA                                    u3220 1BB0  
                                  u3140 3BD8                                    u4021 3CF4  
                                  u4101 3DEC                                    u3301 1CB6  
                                  u3221 1BAC                                    u3141 3BD4  
                                  u4030 3D12                                    u4110 3E0E  
                                  u3310 1CCA                                    u3230 1BBE  
                                  u3150 1AD8                                    u4031 3D0E  
                                  u4111 3E0A                                    u3311 1CC6  
                                  u3231 1BBA                                    u3151 1AD4  
                                  u4040 3D38                                    u4120 3E24  
                                  u4200 382A                                    u3400 1E28  
                                  u3320 1CFC                                    u3240 1C2C  
                                  u3160 1AEA                                    u4041 3D34  
                                  u4121 3E20                                    u4201 3826  
                                  u3401 1E24                                    u3321 1CF8  
                                  u3241 1C28                                    u3161 1AE6  
                                  u4050 3D56                                    u4130 3E48  
                                  u4210 387A                                    u3410 1E44  
                                  u3330 1D0A                                    u3250 1C44  
                                  u3170 1AFA                                    u4051 3D52  
                                  u4131 3E44                                    u4211 3876  
                                  u3411 1E40                                    u3331 1D06  
                                  u3251 1C3E                                    u3171 1AF6  
                                  u4060 3D72                                    u4140 3E88  
                                  u4220 464C                                    u3500 1F1C  
                                  u3420 1E54                                    u3340 1D28  
                                  u3260 1C46                                    u3180 1B3C  
                                  u4300 3C30                                    u4061 3D6E  
                                  u4141 3E84                                    u4221 4648  
                                  u3501 1F18                                    u3421 1E50  
                                  u3341 1D24                                    u3181 1B38  
                                  u4301 3C2C                                    u4070 3D98  
                                  u4150 3EC6                                    u3510 1F3C  
                                  u3430 1E66                                    u3350 1D60  
                                  u3270 1C6E                                    u3190 1B52  
                                  u4310 3C52                                    u4071 3D94  
                                  u4151 3EC2                                    u3511 1F38  
                                  u3431 1E62                                    u3351 1D5C  
                                  u3271 1C6A                                    u3191 1B4E  
                                  u4311 3C4E                                    u4080 3DBC  
                                  u3600 276E                                    u4160 3EFA  
                                  u3520 1F4E                                    u3440 1E7C  
                                  u3360 1DA6                                    u3280 1C8C  
                                  u4400 3A6E                                    u4320 3CA8  
                                  u4081 3DB8                                    u3601 276A  
                                  u4161 3EF6                                    u3521 1F4A  
                                  u3441 1E78                                    u3361 1DA2  
                                  u3281 1C88                                    u4321 3CA4  
                                  u6010 4450                                    u4090 3DD6  
                                  u3610 2780                                    u4170 37AE  
                                  u3530 1F6A                                    u3450 1E92  
                                  u3370 1DDC                                    u3290 1CAC  
                                  u4330 3CB8                                    u4410 41BA  
                                  u6011 444C                                    u4091 3DD2  
                                  u3611 277C                                    u4171 37AA  
                                  u3531 1F66                                    u3451 1E8E  
                                  u3371 1DD8                                    u3291 1CA8  
                                  u4331 3CB4                                    u6020 4484  
                                  u3700 2938                                    u3620 2790  
                                  u4180 37EC                                    u3460 1EA6  
                                  u3380 1DEC                                    u4340 39C2  
                                  u4500 3226                                    u3540 450E  
                                  u4420 41CC                                    u5300 2F9A  
                                  u5220 2E58                                    u6021 4480  
                                  u3701 2934                                    u3621 278C  
                                  u4181 37E8                                    u3461 1EA2  
                                  u3381 1DE8                                    u4501 3222  
                                  u3541 450A                                    u4421 41C8  
                                  u5221 2E54                                    u3710 295C  
                                  u3630 27D4                                    u4190 380A  
                                  u3470 1EC0                                    u3390 1E18  
                                  u4350 39E0                                    u4510 324A  
                                  u3550 46CE                                    u4430 4086  
                                  u5310 2FB0                                    u5230 2E74  
                                  u3711 2958                                    u3631 27D0  
                                  u4191 3806                                    u3471 1EBC  
                                  u3391 1E14                                    u4351 39DC  
                                  u3551 46CA                                    u4431 4080  
                                  u5311 2FAC                                    u5231 2E70  
                                  u5400 3556                                    u3800 2A7C  
                                  u3720 2972                                    u3640 27E6  
                                  u3480 1EFA                                    u4360 3A08  
                                  u4520 3266                                    u3560 462E  
                                  u4440 4088                                    u4600 40FE  
                                  u5320 3018                                    u5240 2E9E  
                                  u7000 404C                                    u5401 3552  
                                  u3801 2A78                                    u3721 296E  
                                  u3641 27E2                                    u3481 1EF6  
                                  u4361 3A04                                    u4345 39B8  
                                  u4521 3262                                    u4417 41B0  
                                  u3561 4628                                    u4601 40FA  
                                  u5241 2E9A                                    u7001 4048  
                                  u4610 469E                                    u5410 3572  
                                  u3810 2AAC                                    u3730 2990  
                                  u3650 27F6                                    u3490 1F0C  
                                  u6210 3690                                    u4370 3A32  
                                  u4530 32BA                                    u3570 4630  
                                  u4450 409E                                    u5330 305A  
                                  u5250 2F02                                    u7010 38CA  
                                  u4611 4698                                    u5411 356E  
                                  u3811 2AA8                                    u3731 298C  
                                  u3651 27F2                                    u3491 1F08  
                                  u6211 368C                                    u4371 3A2E  
                                  u4515 3240                                    u4451 409A  
                                  u5331 3056                                    u5251 2EFE  
                                  u7011 38C6                                    u4620 46A0  
                                  u5420 3628                                    u3820 2ADA  
                                  u3740 29B0                                    u3660 2836  
                                  u3900 2062                                    u6220 36C4  
                                  u4540 32D6                                    u4460 316A  
                                  u6300 08DE                                    u5500 3B32  
                                  u3580 45F6                                    u5340 3078  
                                  u5260 2F4C                                    u7100 2560  
                                  u5421 3622                                    u3821 2AD6  
                                  u3741 29AC                                    u3661 2832  
                                  u3901 205E                                    u4541 32D2  
                                  u6301 08DA                                    u5501 3B2E  
                                  u3581 45F0                                    u5341 3074  
                                  u5325 3006                                    u5261 2F46  
                                  u7021 2B02                                    u7101 255C  
                                  u5510 47A6                                    u4630 4292  
                                  u5430 362A                                    u3750 29C2  
                                  u3670 2876                                    u3910 21DC  
                                  u3830 1F98                                    u6230 36F2  
                                  u4390 3A6C                                    u4550 3312  
                                  u4470 3198                                    u6310 08F0  
                                  u3590 45F8                                    u5350 3092  
                                  u5270 2F4E                                    u7110 2592  
                                  u5511 47A2                                    u4631 428E  
                                  u3751 29BE                                    u3671 2872  
                                  u3831 1F94                                    u6231 36EE  
                                  u4391 3A66                                    u4551 330E  
                                  u4535 32B0                                    u4471 3194  
                                  u6311 08EC                                    u5351 308E  
                                  u7111 258E                                    u5520 4824  
                                  u4640 42C0                                    u5440 3640  
                                  u3760 29F0                                    u3680 28EC  
                                  u3920 2236                                    u3840 1FAA  
                                  u6240 3706                                    u4480 31BA  
                                  u6400 0AD8                                    u6320 0938  
                                  u4560 4584                                    u5360 30AC  
                                  u5280 2F64                                    u7040 2B6E  
                                  u7120 25C4                                    u5521 4820  
                                  u4641 42BC                                    u5441 363C  
                                  u3761 29EC                                    u3681 28E8  
                                  u3921 2232                                    u3841 1FA6  
                                  u6241 3702                                    u6225 36BA  
                                  u4385 3A44                                    u4481 31B6  
                                  u4465 3160                                    u6401 0AD4  
                                  u6321 0934                                    u4561 457E  
                                  u5361 30A8                                    u5281 2F60  
                                  u7041 2B6A                                    u7121 25C0  
                                  u4650 4392                                    u5530 4810  
                                  u5450 3652                                    u3770 2A06  
                                  u3690 290E                                    u3930 2256  
                                  u3850 1FBA                                    u6250 372E  
                                  u6410 0B6C                                    u6330 0968  
                                  u4570 4586                                    u5370 30BC  
                                  u5290 2F98                                    u7034 2B46  
                                  u7130 25F6                                    u4651 438E  
                                  u5531 480C                                    u5451 364E  
                                  u3771 2A02                                    u3691 290A  
                                  u3931 2252                                    u3915 21D2  
                                  u3851 1FB6                                    u6251 372A  
                                  u6411 0B68                                    u6331 0962  
                                  u5371 30B8                                    u5291 2F92  
                                  u7035 2B40                                    u7131 25F2  
                                  u4660 43AC                                    u3780 2A1A  
                                  u3940 2268                                    u3860 1FFA  
                                  u6260 374E                                    u6500 0CEC  
                                  u6420 0BDE                                    u6340 096A  
                                  u5460 3AAA                                    u4580 40E6  
                                  u5380 30CC                                    u7060 2BAE  
                                  u7140 2680                                    _RCEN 007E2B  
                                  u4661 43A8                                    u3781 2A16  
                                  u3941 2264                                    u3861 1FF6  
                                  u6261 374A                                    u6501 0CE8  
                                  u6421 0BDA                                    u5461 3AA6  
                                  u4581 40E0                                    u5381 30C8  
                                  u7061 2BAA                                    u7141 267C  
                                  u4670 485C                                    u5390 3520  
                                  u3790 2A34                                    u3950 2296  
                                  u3870 200C                                    u6270 375E  
                                  u6510 0CFE                                    u6430 0C04  
                                  u6350 0980                                    u5470 3ADC  
                                  u4590 40E8                                    u7054 2B86  
                                  u7150 26B2                                    u7070 246E  
                                  u4671 4858                                    u5391 351C  
                                  u3791 2A30                                    u3951 2292  
                                  u3871 2008                                    u6271 375A  
                                  u4495 31CE                                    u6511 0CFA  
                                  u6431 0C00                                    u6351 097C  
                                  u5471 3AD8                                    u7055 2B80  
                                  u7151 26AE                                    u7071 246A  
                                  u5720 4138                                    u5800 45B2  
                                  u3960 22AC                                    u3880 201C  
                                  u4496 31D8                                    u6600 0FFA  
                                  u6520 0D0C                                    u6440 0C16  
                                  u6360 0A0C                                    u6280 0880  
                                  u5480 3AF8                                    u7160 26E4  
                                  u7080 24A0                                    u5801 45AE  
                                  u3961 22A8                                    u3881 2018  
                                  u4497 31E8                                    u6601 0FF6  
                                  u6521 0D08                                    u6441 0C12  
                                  u6361 0A08                                    u6281 087C  
                                  u5481 3AF4                                    u7161 26E0  
                                  u7081 249C                                    u5730 4160  
                                  u5810 47FA                                    u3970 22C0  
                                  u3890 2052                                    u6610 1048  
                                  u6530 0D22                                    u6450 0C38  
                                  u6370 0A3C                                    u6290 08D0  
                                  u5490 3B0A                                    u7090 24D2  
                                  u5811 47F6                                    u3971 22BC  
                                  u3891 204E                                    u6611 1044  
                                  u6531 0D1E                                    u6451 0C34  
                                  u6371 0A36                                    u6291 08CC  
                                  u5491 3B06                                    u7091 24CE  
                                  u5740 4170                                    u3980 22DA  
                                  u6700 1298                                    u6620 1070  
                                  u6540 0D30                                    u6460 0C5E  
                                  u6380 0A3E                                    u5900 347E  
                                  u5741 416C                                    u3981 22D6  
                                  u6701 1294                                    u6621 106C  
                                  u6541 0D2C                                    u6461 0C5A  
                                  u5901 347A                                    u5830 4522  
                                  u5750 471E                                    u3990 2322  
                                  u6710 12B4                                    u6630 1114  
                                  u6550 0D5A                                    u6470 0C74  
                                  u6390 0A54                                    u5910 348C  
                                  u5727 412E                                    u5831 451E  
                                  u5751 471A                                    u3991 231E  
                                  u6711 12B0                                    u6631 1110  
                                  u6551 0D56                                    u6471 0C70  
                                  u6391 0A50                                    u5911 3488  
                                  u5760 472E                                    u6800 144E  
                                  u6720 12C6                                    u6640 1126  
                                  u6560 0EA2                                    u6480 0C90  
                                  u5920 34C6                                    u5840 3346  
                                  u5737 4156                                    u5761 472A  
                                  u6721 12C2                                    u6641 1122  
                                  u6561 0E9E                                    u6481 0C8C  
                                  u5921 34C2                                    u5841 3342  
                                  u5770 474C                                    u6810 1464  
                                  u6730 12D4                                    u6650 1138  
                                  u6570 0F08                                    u6490 0CC6  
                                  u5930 34D4                                    u5850 3354  
                                  u5771 4748                                    u6811 1460  
                                  u6731 12D0                                    u6651 1134  
                                  u6571 0F04                                    u6491 0CC2  
                                  u5931 34D0                                    u5851 3350  
                                  u5780 475C                                    u6740 130A  
                                  u6660 1146                                    u6580 0F50  
                                  u6900 1704                                    u6820 14D4  
                                  u5860 33B0                                    u5781 4758  
                                  u6741 1306                                    u6661 1142  
                                  u6581 0F4C                                    u6901 1700  
                                  u6821 14D0                                    u5861 33AC  
                                  u5790 459E                                    u6750 1338  
                                  u6670 1160                                    u6590 0F60  
                                  u6910 1746                                    u6830 15A2  
                                  u5870 3406                                    u5950 3FD8  
                                  u5791 459A                                    u6751 1334  
                                  u6671 115C                                    u6591 0F5C  
                                  u6911 1742                                    u6831 159E  
                                  u5871 3402                                    u5951 3FD4  
                                  u6760 13BC                                    u6680 116E  
                                  u6920 178A                                    u6840 15B0  
                                  u5880 3450                                    u6761 13B8  
                                  u6681 116A                                    u6921 1786  
                                  u6841 15AC                                    u5881 344C  
                                  u6770 13D6                                    u6690 11C6  
                                  u6930 1838                                    u6850 15D6  
                                  u5890 346E                                    u6771 13D2  
                                  u6691 11C2                                    u6931 1834  
                                  u6851 15D2                                    u5891 346A  
                                  u6780 13EE                                    u6940 18A0  
                                  u6860 1610                                    u6781 13EA  
                                  u6941 189A                                    u6861 160C  
                                  u6790 144C                                    u6950 18A2  
                                  u6870 16BA                                    u6791 1446  
                                  u6871 16B4                                    u6960 18B8  
                                  u6880 16BC                                    u6961 18B4  
                                  u6970 1954                                    u6890 16D2  
                                  u6971 1950                                    u6891 16CE  
                                  u6980 1978                                    u6981 1974  
                                  u6990 1A3A                                    u6991 1A36  
                                  _RSEN 007E29                                    _Date 0128  
                                  _Year 0124                                    _Sluz 0100  
                                  _dbuf 0132                                    _atoi 34E8  
                                  _main 23A8                         ?_RTC_Read_Clock 0001  
                                  _hour 012C                        __end_of_I2C_Nack 4812  
                    __size_of_LCD_Clear 0014                                    _prec 00F7  
                      __end_of_I2C_Init 47EA                                    _temp 0120  
                      __end_of_I2C_Read 45C6                                    _nout 00F3  
                                  pad@i 0019                                    pad@p 0016  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001B  
                                  fsr2l 000FD9                                    btemp 005D  
                                  _xtoa 2E48                        __end_of_I2C_Stop 47FE  
                         ___fpclassifyf 3982                                    prodh 000FF4  
                                  prodl 000FF3                                    start 000E  
                       __end_of_MSdelay 43AE                         ___fldiv@new_exp 0040  
                         _LCD_String_xy 4510                            _tolower$1836 000E  
                          ___param_bank 000000                         __end_of_ReadADC 3982  
                       __end_of_ReadLUZ 3FF4                                   ??_ISR 0001  
      RTC_Read_Clock@read_clock_address 0005                                   ??_pad 0018  
                      __end_of_LCD_Char 4364                        __end_of_LCD_Init 470C  
                         ReadADC@result 006A                           ___fltol@sign1 0064  
                                 ?_atoi 0009                         __end_of___fladd 1F7E  
                                 ?_main 0001                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                         __end_of___fldiv 2AEE  
                       __end_of___awdiv 3DAA                         __end_of___flneg 466E  
                                 STR_10 0826                                   STR_11 082E  
                                 STR_12 082E                                   STR_20 084A  
                                 STR_21 083A                                   STR_13 082A  
                                 STR_14 082A                                   STR_22 0846  
                                 STR_15 0826                                   STR_31 084E  
                                 STR_23 0816                                   STR_16 0842  
                                 STR_24 081E                                   STR_33 084E  
                                 STR_17 083E                                   STR_18 0836  
                                 STR_19 0832                                   STR_27 081A  
                                 STR_28 0822                         __end_of___awmod 3E5A  
                       __end_of___flmul 23A8                         __end_of___flsub 443E  
                       __end_of___fltol 3780                         ___awdiv@divisor 0004  
                                 ?_xtoa 001D                                   _LATD0 007C60  
                                 _LATD1 007C61                                   _LATE0 007C68  
                                 _LATE1 007C69                                   _LATE2 007C6A  
                                 i2l230 4896                                   i2l227 3F8A  
                       ___awdiv@counter 0006                            vfpfcnvrt@fmt 00AE  
                          vfpfcnvrt@llu 00B6                                   _TMR1H 000FCF  
                                 _TMR1L 000FCE                                   _TRISA 000F92  
                                 _TRISD 000F95                                   _SSPIE 007CEB  
                                 _TRISE 000F96                                   _SSPIF 007CF3  
                       __end_of_conf_IO 488E                                   _Month 0126  
                                 _Stemp 0182                                   _flags 00F9  
                                 _fputc 3B56                         __end_of_isalpha 458C  
                                 _fputs 44CC                         __end_of_isdigit 46A6  
                     __end_of_I2C_Ready 4860                                   atoi@n 0016  
                                 pad@fp 0012                                   atoi@s 0009  
                                 _width 00F5                                   _putch 4898  
                       __end_of_islower 45FE                         __end_of_isspace 42CC  
                     __end_of_I2C_Start 473A                       __end_of_I2C_Write 47B0  
                       __end_of_isupper 4636                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 ttemp5 005E                                   ttemp6 0061  
                                 ttemp7 0065                                   status 000FD8  
                                 wtemp8 005E                     __size_of_LCD_String 005E  
                       __end_of_sprintf 427A                          ?___fpclassifyf 0002  
                       __end_of_tolower 40B6                                   xtoa@c 0042  
                                 xtoa@d 001F                                   xtoa@i 0040  
                                 xtoa@n 0038                                   xtoa@p 0034  
                                 xtoa@w 0036                                   xtoa@x 0027  
                       __end_of_strncmp 3B56                         __end_of_toupper 4114  
                         ??_PlayCancion 0002                          ?_LCD_String_xy 000C  
                          _toupper$1851 000E                 __end_of_LCD_Custom_Char 4486  
                       __initialization 43AE                            __end_of_atoi 3678  
                          __end_of_main 2754                            __end_of_xtoa 3122  
                             ??_I2C_Ack 0002                                  ??_atoi 000B  
                                ??_main 005C                                  ??_xtoa 0028  
                     __end_of_LCD_Clear 483A                           __activetblptr 000002  
                                ?_fputc 0002                                  ?_fputs 000B  
                                _ADRESH 000FC4                                  _ADRESL 000FC3  
                      ___awdiv@dividend 0002                                  ?_putch 0001  
                      LCD_String_xy@msg 000D                        LCD_String_xy@pos 000C  
                      LCD_String_xy@row 000F                               ??_MSdelay 0004  
                                i2l5401 3F78                                  i2l5323 488E  
                                i2l5403 3F7C                                  i2l5405 3F80  
                                i2l5407 3F84                                  i2l5409 3F88  
                                i2l5391 3F14                                  i2l5393 3F4A  
                                i2l5395 3F5A                                  i2l5397 3F60  
                                i2l5389 3F06                                  i2l5399 3F70  
                                _OSCCON 000FD3                           vfpfcnvrt@done 00BE  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                      __end_of___xxtofl 34E8                               ??_ReadADC 0068  
                             ??_ReadLUZ 0004                        __end_of_conf_CLK 4884  
                      __end_of_conf_TA1 484E                        ??_RTC_Calendario 00E4  
                          vfprintf@cfmt 00D2                                  ___flge 3780  
                                ___fleq 3E5A                               ??___fladd 0050  
                                ___wmul 4768                               ??___fldiv 0037  
                             ??___awdiv 0006                               ??___flneg 0006  
                             ??___awmod 0006                               ??___flmul 001E  
                             ??___flsub 0058                               ??___fltol 0060  
                                _efgtoa 0858                     __end_of_PlayCancion 4872  
                                _floorf 3122                                  clear_0 43D4  
                                clear_1 43E0                        ___awdiv@quotient 0008  
                       ___awmod@divisor 0004                                  isa$std 000001  
                                _tempar 00EF                         ___awmod@counter 0006  
                    _I2C_Repeated_Start 473A                                  pad@buf 0014  
                             ??_conf_IO 0002                    __size_of_LCD_Command 004C  
                                _strcpy 4172                                  _strlen 46A6  
                                fputc@c 0002                                  fputs@c 000F  
                      LCD_Custom_Char@i 000D                                  fputs@i 0010  
                             ?_I2C_Nack 0001                                  fputs@s 000B  
                             ??_isalpha 0004                               ??_isdigit 0004  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                             ?_I2C_Stop 0001                         ___fpclassifyf@e 000A  
                       ___fpclassifyf@u 000C                         ___fpclassifyf@x 0002  
                             ??_islower 0004                            __mediumconst 0000  
                             ??_isspace 0004                                  tblptrh 000FF7  
                             ??_isupper 0004                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 4056  
                             ??_sprintf 005C                               ??_tolower 000A  
                                xtoa@fp 001D                               ??_strncmp 0008  
                             ??_toupper 000A                              ___flge@ff1 002F  
                            ___flge@ff2 0033                         ??___fpclassifyf 0006  
                          ___xxtofl@arg 0012                            ___xxtofl@exp 0011  
                          ___xxtofl@val 0008                              ___fleq@ff1 0002  
                            ___fleq@ff2 0006                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 43E8  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000F  
                            ___flneg@f1 0002                           ___rparam_used 000001  
                            ___fltol@f1 0058                    ??_I2C_Repeated_Start 0003  
                      ?_LCD_Custom_Char 000A                          __pcstackCOMRAM 0001  
                          __pidataBANK1 47B0                           __end_of_fputc 3C20  
                         __end_of_fputs 4510                           __end_of_putch 489A  
                          ??_LCD_String 000C                              ??_I2C_Nack 0002  
                            ??_I2C_Init 0002                              ??_I2C_Read 0002  
                            ??_I2C_Stop 0002               __size_of_desabilitar_Time 000A  
                         ReadLUZ@result 0006                        ??_RTC_Read_Clock 0004  
                               ??_fputc 0006                                 ??_fputs 000F  
                               ??_putch 0002                              __pbssBANK0 00EB  
                            __pbssBANK1 0100                              ??_LCD_Char 0008  
                            _character1 01F2                              _character2 01EA  
                            _character3 01E2                              ??_LCD_Init 000A  
                    __end_of_LCD_String 4172                             _PlayCancion 4860  
                          I2C_Read@flag 0002                                 ?___flge 002F  
                               ?___fleq 0002                          I2C_Read@buffer 0003  
                               ?___wmul 0002                                 ?_efgtoa 0068  
                               ?_floorf 0048                                 _I2C_Ack 4812  
                               _ACKSTAT 007E2E                                 ?_strcpy 0002  
                               ?_strlen 0002                               ?___xxtofl 0008  
                    __size_of_vfpfcnvrt 060E                               ?_conf_CLK 0001  
                             ?_conf_TA1 0001                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               _MSdelay 4364                               _I2C_Ready 484E  
                               _ReadADC 3884                               _I2C_Start 470C  
                               _ReadLUZ 3F8E                               _I2C_Write 478E  
                         LCD_String@msg 000A                                 __Hparam 0000  
                               __Lparam 0000                         __size_of___flge 0104  
                       __size_of___fleq 00AA                                 ___fladd 1ABE  
                     _RTC_Read_Calendar 41CE                                 ___fldiv 2754  
                               ___awdiv 3CE6                                 ___flneg 4636  
                               ___awmod 3DAA                                 ___flmul 1F7E  
                               ___flsub 43F6                                 ___fltol 3678  
                       __size_of___wmul 0026                               ?_vfprintf 00CC  
                          __psmallconst 0800                         __size_of_efgtoa 0C58  
                    ?_RTC_Read_Calendar 0001                         __size_of_floorf 0212  
                               __pcinit 43AE                                 __ramtop 0800  
                               _conf_IO 4884                                 __ptext0 23A8  
                               __ptext1 3F8E                                 __ptext2 3884  
                               __ptext3 3334                                 __ptext4 2AEE  
                               __ptext5 4228                                 __ptext6 3FF4  
                               __ptext7 14B0                                 __ptext8 2E48  
                               __ptext9 40B6                         __size_of_strcpy 005C  
                       __size_of_strlen 0036                            __size_of_ISR 3F86  
                             _T1CONbits 000FCD                            __size_of_pad 00C6  
                               _isalpha 4550                                 _isdigit 466E  
                            ??___xxtofl 000C                                 _var3seg 00FB  
                      ___awmod@dividend 0002                     ??_RTC_Read_Calendar 0004  
                               _islower 45C6                                 _isspace 427A  
                               _isupper 45FE                                 efgtoa@c 006E  
                               efgtoa@d 008C                                 efgtoa@e 00A4  
                               efgtoa@f 006A                                 efgtoa@g 00A0  
                               efgtoa@h 0096                                 efgtoa@i 009E  
                               efgtoa@l 009A                                 efgtoa@m 0086  
                               efgtoa@n 00A6                                 efgtoa@p 0090  
                               efgtoa@t 0080                                 efgtoa@u 00A8  
                               efgtoa@w 0092                               _LCD_Clear 4826  
                            ??_conf_CLK 0002                              ??_conf_TA1 0002  
                               atoi@neg 000F                                 _sprintf 4228  
                               _tolower 4056                                 _strncmp 3A80  
                        __pintcode_body 3F04                                 _toupper 40B6  
                  end_of_initialization 43E8                                 floorf@e 0056  
                               floorf@m 0052                                 floorf@u 0058  
                               floorf@x 0048                                 fputc@fp 0004  
                        LCD_Command@cmd 0009                           __Lmediumconst 0000  
                               int_func 3F04                                 fputs@fp 000D  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 4228  
                     __end_of_vfpfcnvrt 1ABE                              efgtoa@mode 0095  
                            efgtoa@sign 008E                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005C                                 strcpy@d 000A  
                               strlen@a 0004                                 strcpy@s 0008  
                               strlen@s 0002                             ___fladd@grs 0057  
                      _desabilitar_Time 488E                           ___xxtofl@sign 0010  
                             _TRISCbits 000F94                              ?_LCD_Clear 0001  
                     __size_of_I2C_Nack 0014                       __size_of_I2C_Init 001A  
                     __size_of_I2C_Read 003A                             ___fldiv@grs 0042  
                           ___fldiv@rem 003B                       __size_of_I2C_Stop 0014  
                           ___flmul@grs 0023                       __size_of_LCD_Char 004C  
                     __size_of_LCD_Init 0030                           ??_LCD_Command 0008  
                        __end_of___flge 3884                          __end_of___fleq 3F04  
                           vfpfcnvrt@ap 00B0                             vfpfcnvrt@ct 00C4  
                           vfpfcnvrt@fp 00AC                          __end_of___wmul 478E  
                        __end_of_efgtoa 14B0                          __end_of_floorf 3334  
                            floorf@F527 0114                          __end_of_strcpy 41CE  
                        __end_of_strlen 46DC                     start_initialization 43AE  
                           __end_of_ISR 3F8E                             __end_of_pad 3CE6  
  I2C_Repeated_Start@slave_read_address 0003                   __end_of___fpclassifyf 3A80  
                           ??_I2C_Ready 0002                             ??_I2C_Start 0003  
                           ??_I2C_Write 0002                   __end_of_LCD_String_xy 4550  
                          ?_PlayCancion 0001              __size_of_RTC_Read_Calendar 005A  
                           vfprintf@fmt 00CE             __size_of_I2C_Repeated_Start 002E  
                              ??___flge 0037                                ??___fleq 000A  
                              ??___wmul 0006                                ??_efgtoa 006F  
                           __pdataBANK1 01DB                                ??_floorf 004C  
                              ?_I2C_Ack 0001                                ??_strcpy 0006  
                              ??_strlen 0004                __size_of_LCD_Custom_Char 0048  
                             ___fladd@a 004C                               ___fladd@b 0048  
              RTC_Calendario@Clock_type 01D9                               ___fldiv@a 0033  
                             ___fldiv@b 002F                 __size_of_RTC_Calendario 035A  
                   __end_of_LCD_Command 4318                               ___flmul@a 001A  
                             ___flmul@b 0016                             __pbssCOMRAM 005C  
                             ___flsub@a 0064                               ___flsub@b 0060  
                         __pcstackBANK0 0060                           __pcstackBANK1 0196  
                           ??_LCD_Clear 000A                       __size_of___xxtofl 01B4  
                     __size_of_conf_CLK 0012                       __size_of_conf_TA1 0014  
                              ?_MSdelay 0002                                ?_ReadADC 0066  
                             _atoi$1732 0011                               _atoi$1733 0015  
                             _atoi$1734 0013                                ?_ReadLUZ 0002  
                           _efgtoa$1662 0078                             _efgtoa$1656 0074  
                           _efgtoa$1657 0076                             _efgtoa$1666 007A  
                           _efgtoa$1667 007C                             _efgtoa$1668 007E  
                             _main$2074 00E7                               __pintcode 0008  
                              ?___fladd 0048                                ?___fldiv 002F  
                              ?___awdiv 0002                                ?___flneg 0002  
                              ?___awmod 0002                                ?___flmul 0016  
                              ?___flsub 0060                                ?___fltol 0058  
                              ?_conf_IO 0001                       __size_of_vfprintf 0062  
                           __smallconst 0800                                _I2C_Nack 47FE  
                              ?_isalpha 0002                                ?_isdigit 0002  
                              _I2C_Init 47D0                                _I2C_Read 458C  
                              _I2C_Stop 47EA                                ?_islower 0002  
                              ?_isspace 0002                                ?_isupper 0002  
                 LCD_String_xy@location 0010                                ?_sprintf 00D4  
                              ?_tolower 0008                          __size_of_fputc 00CA  
                        __size_of_fputs 0044                                ?_strncmp 0002  
                              ?_toupper 0008                          __size_of_putch 0002  
                              MSdelay@i 0004                                MSdelay@j 0006  
                              _LCD_Char 4318                                _LCD_Init 46DC  
                        ___wmul@product 0006                                _LATCbits 000F8B  
                              _PIE1bits 000F9D                 __size_of_RTC_Read_Clock 0046  
              __end_of_desabilitar_Time 4898                                _PIR1bits 000F9E  
                              i2u613_40 3F14                                i2u613_41 3F10  
                              i2u614_40 3F24                                i2u614_41 3F1E  
                              i2u614_46 3F26                                i2u615_40 3F4A  
                              i2u615_41 3F46                                i2u616_40 3F5A  
                              i2u616_41 3F56                                i2u617_40 3F70  
                              i2u617_41 3F6C                             _LCD_Command 42CC  
                             _vfpfcnvrt 14B0                               _xtoa$1678 0030  
                             _xtoa$1679 0032                        __size_of_I2C_Ack 0014  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                       ___wmul@multiplier 0002  
                          _isspace$1772 0008                       ??_LCD_Custom_Char 000C  
                            vfpfcnvrt@c 00CB                              vfpfcnvrt@f 00C7  
                             copy_data0 43C2            I2C_Start@slave_write_address 0003  
                      __size_of_MSdelay 004A                        __size_of_ReadADC 00FE  
                      __size_of_ReadLUZ 0066                                __Hrparam 0000  
                            vfprintf@ap 00D0                                __Lrparam 0000  
                            vfprintf@fp 00CC                    __size_of_PlayCancion 0012  
                         I2C_Write@data 0002                        __size_of___fladd 04C0  
                      __size_of___fldiv 039A                        __size_of___awdiv 00C4  
                      __size_of___flneg 0038                        __size_of___awmod 00B0  
                      __size_of___flmul 042A                        __size_of___flsub 0048  
                      __size_of___fltol 0108                              ?_vfpfcnvrt 00AC  
                    ___fpclassifyf@F465 0118                          _RTC_Calendario 2AEE  
                      __size_of_conf_IO 000A                              sprintf@fmt 00D6  
                              ___xxtofl 3334                        __size_of_isalpha 003C  
                      __size_of_isdigit 0038                        __size_of_islower 0038  
                      __size_of_isspace 0052                                _conf_CLK 4872  
                              _conf_TA1 483A                                __ptext10 45C6  
                              __ptext11 4550                                __ptext20 3B56  
                              __ptext12 3A80                                __ptext21 4898  
                              __ptext13 0858                                __ptext30 3E5A  
                              __ptext22 3122                                __ptext14 4056  
                              __ptext31 2754                                __ptext23 3982  
                              __ptext15 45FE                                __ptext40 47EA  
                              __ptext32 3DAA                                __ptext24 3678  
                              __ptext16 4172                                __ptext41 470C  
                              __ptext33 3CE6                                __ptext25 43F6  
                              __ptext17 3C20                                __ptext50 46DC  
                              __ptext42 473A                                __ptext34 34E8  
                              __ptext26 1ABE                                __ptext18 46A6  
                              __ptext51 4826                                __ptext43 478E  
                              __ptext35 427A                                __ptext27 4636  
                              __ptext19 44CC                                __ptext60 4364  
                              __ptext52 47D0                                __ptext44 458C  
                              __ptext36 466E                                __ptext28 1F7E  
                              __ptext53 4860                                __ptext45 484E  
                              __ptext37 4768                                __ptext29 3780  
                              __ptext62 488E                                __ptext54 483A  
                              __ptext46 47FE                                __ptext38 4486  
                              __ptext55 4884                                __ptext47 4812  
                              __ptext39 41CE                                __ptext56 4872  
                              __ptext48 4510                                __ptext57 443E  
                              __ptext49 4114                                __ptext58 42CC  
                              __ptext59 4318                        __size_of_isupper 0038  
                      __size_of_sprintf 0052                        __size_of_tolower 0060  
                            strcpy@dest 0002                        __size_of_strncmp 00D6  
                      __size_of_toupper 005E                           __size_of_atoi 0190  
                         __size_of_main 03AC                                _var3beep 005C  
                         __size_of_xtoa 02DA                              MSdelay@val 0002  
                              efgtoa@fp 0068                                efgtoa@ne 0084  
                              efgtoa@pp 0082                                efgtoa@ou 0088  
                              isa$xinst 000000                                int$flags 005D  
                              _vfprintf 3FF4                  __end_of_RTC_Calendario 2E48  
                            _LCD_String 4114                          _vfpfcnvrt$1693 00C0  
                        _vfpfcnvrt$1697 00C2                              _INTCONbits 000FF2  
                              isalpha@c 0002                                isdigit@c 0002  
                    LCD_Custom_Char@loc 000C                      LCD_Custom_Char@msg 000A  
                              intlevel2 0000                               sprintf@ap 00DC  
                              islower@c 0002                                isspace@c 0002  
                             strcpy@src 0004              __end_of_I2C_Repeated_Start 4768  
                              isupper@c 0002                          _RTC_Read_Clock 4486  
                             strncmp@_l 0002                               strncmp@_r 0004  
                            _OSCCONbits 000FD3                             efgtoa@nmode 0094  
                   RTC_Calendario@F3531 01DB                             ??_vfpfcnvrt 00B2  
                       ?_RTC_Calendario 0001                     RTC_Calendario@AM_PM 01DA  
                           _temperatura 011C                                sprintf@f 00DE  
                              tolower@c 0008                                sprintf@s 00D4  
                __size_of___fpclassifyf 00FE                                strncmp@l 0009  
                              strncmp@n 0006                                strncmp@r 000B  
                              toupper@c 0008                  __size_of_LCD_String_xy 0040  
                   RTC_Calendario@hours 01CF                     RTC_Calendario@month 01A7  
                           _SSPCON2bits 000FC5                           ___fladd@signs 0054  
                    RTC_Calendario@date 019D                      RTC_Calendario@days 0196  
                    RTC_Calendario@mins 01C5                      RTC_Calendario@secs 01BB  
                    RTC_Calendario@year 01B1                            ___fladd@aexp 0055  
                          ___fladd@bexp 0056                  __end_of_RTC_Read_Clock 44CC  
                     ?_desabilitar_Time 0001  
