

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 30 14:49:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 12/02/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK1
   115  004732                     __pidataBANK1:
   116                           	callstack 0
   117                           
   118                           ;initializer for RTC_Calendario@F3531
   119  004732  53                 	db	83
   120  004733  4D                 	db	77
   121  004734  54                 	db	84
   122  004735  57                 	db	87
   123  004736  74                 	db	116
   124  004737  46                 	db	70
   125  004738  73                 	db	115
   126                           
   127                           ;initializer for _character3
   128  004739  00                 	db	0
   129  00473A  00                 	db	0
   130  00473B  0E                 	db	14
   131  00473C  1F                 	db	31
   132  00473D  0E                 	db	14
   133  00473E  00                 	db	0
   134  00473F  00                 	db	0
   135  004740  00                 	db	0
   136                           
   137                           ;initializer for _character2
   138  004741  15                 	db	21
   139  004742  0E                 	db	14
   140  004743  11                 	db	17
   141  004744  11                 	db	17
   142  004745  0E                 	db	14
   143  004746  15                 	db	21
   144  004747  00                 	db	0
   145  004748  00                 	db	0
   146                           
   147                           ;initializer for _character1
   148  004749  0E                 	db	14
   149  00474A  1F                 	db	31
   150  00474B  1F                 	db	31
   151  00474C  0E                 	db	14
   152  00474D  00                 	db	0
   153  00474E  0A                 	db	10
   154  00474F  0A                 	db	10
   155  004750  00                 	db	0
   156  0000                     _SSPCON2bits	set	4037
   157  0000                     _SSPADD	set	4040
   158  0000                     _SSPCON2	set	4037
   159  0000                     _SSPCON1	set	4038
   160  0000                     _SSPSTAT	set	4039
   161  0000                     _SSPBUF	set	4041
   162  0000                     _SSPSTATbits	set	4039
   163  0000                     _PIE1bits	set	3997
   164  0000                     _PIR1bits	set	3998
   165  0000                     _TMR1L	set	4046
   166  0000                     _TMR1H	set	4047
   167  0000                     _T1CONbits	set	4045
   168  0000                     _TRISCbits	set	3988
   169  0000                     _LATCbits	set	3979
   170  0000                     _INTCONbits	set	4082
   171  0000                     _ADRESL	set	4035
   172  0000                     _ADRESH	set	4036
   173  0000                     _ADCON2bits	set	4032
   174  0000                     _ADCON0bits	set	4034
   175  0000                     _ADCON1bits	set	4033
   176  0000                     _OSCCONbits	set	4051
   177  0000                     _TRISA	set	3986
   178  0000                     _LATD	set	3980
   179  0000                     _TRISD	set	3989
   180  0000                     _TRISE	set	3990
   181  0000                     _OSCCON	set	4051
   182  0000                     _ACKEN	set	32300
   183  0000                     _ACKDT	set	32301
   184  0000                     _PEN	set	32298
   185  0000                     _RSEN	set	32297
   186  0000                     _ACKSTAT	set	32302
   187  0000                     _SSPIF	set	31987
   188  0000                     _SSPIE	set	31979
   189  0000                     _TRISB1	set	31897
   190  0000                     _TRISB0	set	31896
   191  0000                     _RCEN	set	32299
   192  0000                     _LATD1	set	31841
   193  0000                     _LATD0	set	31840
   194  0000                     _LATE2	set	31850
   195  0000                     _LATE1	set	31849
   196  0000                     _LATE0	set	31848
   197                           
   198                           	psect	smallconst
   199  000800                     __psmallconst:
   200                           	callstack 0
   201  000800  00                 	db	0
   202  000801                     STR_1:
   203  000801  20                 	db	32
   204  000802  42                 	db	66	;'B'
   205  000803  75                 	db	117	;'u'
   206  000804  65                 	db	101	;'e'
   207  000805  6E                 	db	110	;'n'
   208  000806  6F                 	db	111	;'o'
   209  000807  73                 	db	115	;'s'
   210  000808  20                 	db	32
   211  000809  44                 	db	68	;'D'
   212  00080A  69                 	db	105	;'i'
   213  00080B  61                 	db	97	;'a'
   214  00080C  73                 	db	115	;'s'
   215  00080D  20                 	db	32
   216  00080E  00                 	db	0
   217  00080F                     STR_2:
   218  00080F  25                 	db	37
   219  000810  30                 	db	48	;'0'
   220  000811  2E                 	db	46
   221  000812  30                 	db	48	;'0'
   222  000813  66                 	db	102	;'f'
   223  000814  43                 	db	67	;'C'
   224  000815  00                 	db	0
   225  000816                     STR_23:
   226  000816  49                 	db	73	;'I'
   227  000817  4E                 	db	78	;'N'
   228  000818  46                 	db	70	;'F'
   229  000819  00                 	db	0
   230  00081A                     STR_27:
   231  00081A  4E                 	db	78	;'N'
   232  00081B  41                 	db	65	;'A'
   233  00081C  4E                 	db	78	;'N'
   234  00081D  00                 	db	0
   235  00081E                     STR_24:
   236  00081E  69                 	db	105	;'i'
   237  00081F  6E                 	db	110	;'n'
   238  000820  66                 	db	102	;'f'
   239  000821  00                 	db	0
   240  000822                     STR_28:
   241  000822  6E                 	db	110	;'n'
   242  000823  61                 	db	97	;'a'
   243  000824  6E                 	db	110	;'n'
   244  000825  00                 	db	0
   245  000826                     STR_7:
   246  000826  25                 	db	37
   247  000827  78                 	db	120	;'x'
   248  000828  20                 	db	32
   249  000829  00                 	db	0
   250  00082A                     STR_13:
   251  00082A  25                 	db	37
   252  00082B  78                 	db	120	;'x'
   253  00082C  2D                 	db	45
   254  00082D  00                 	db	0
   255  00082E                     STR_8:
   256  00082E  25                 	db	37
   257  00082F  78                 	db	120	;'x'
   258  000830  3A                 	db	58	;':'
   259  000831  00                 	db	0
   260  000832                     STR_19:
   261  000832  57                 	db	87	;'W'
   262  000833  65                 	db	101	;'e'
   263  000834  64                 	db	100	;'d'
   264  000835  00                 	db	0
   265  000836                     STR_18:
   266  000836  54                 	db	84	;'T'
   267  000837  75                 	db	117	;'u'
   268  000838  65                 	db	101	;'e'
   269  000839  00                 	db	0
   270  00083A                     STR_21:
   271  00083A  46                 	db	70	;'F'
   272  00083B  72                 	db	114	;'r'
   273  00083C  69                 	db	105	;'i'
   274  00083D  00                 	db	0
   275  00083E                     STR_17:
   276  00083E  4D                 	db	77	;'M'
   277  00083F  6F                 	db	111	;'o'
   278  000840  6E                 	db	110	;'n'
   279  000841  00                 	db	0
   280  000842                     STR_16:
   281  000842  53                 	db	83	;'S'
   282  000843  75                 	db	117	;'u'
   283  000844  6E                 	db	110	;'n'
   284  000845  00                 	db	0
   285  000846                     STR_22:
   286  000846  53                 	db	83	;'S'
   287  000847  61                 	db	97	;'a'
   288  000848  74                 	db	116	;'t'
   289  000849  00                 	db	0
   290  00084A                     STR_20:
   291  00084A  54                 	db	84	;'T'
   292  00084B  68                 	db	104	;'h'
   293  00084C  75                 	db	117	;'u'
   294  00084D  00                 	db	0
   295  00084E                     STR_31:
   296  00084E  6C                 	db	108	;'l'
   297  00084F  66                 	db	102	;'f'
   298  000850  00                 	db	0
   299  000851                     STR_6:
   300  000851  41                 	db	65	;'A'
   301  000852  4D                 	db	77	;'M'
   302  000853  00                 	db	0
   303  000854                     STR_5:
   304  000854  50                 	db	80	;'P'
   305  000855  4D                 	db	77	;'M'
   306  000856  00                 	db	0
   307  000857  00                 	db	0	; dummy byte at the end
   308  0000                     
   309                           ; #config settings
   310                           
   311                           	psect	cinit
   312  00437C                     __pcinit:
   313                           	callstack 0
   314  00437C                     start_initialization:
   315                           	callstack 0
   316  00437C                     __initialization:
   317                           	callstack 0
   318                           
   319                           ; Initialize objects allocated to BANK1 (31 bytes)
   320                           ; load TBLPTR registers with __pidataBANK1
   321  00437C  0E32               	movlw	low __pidataBANK1
   322  00437E  6EF6               	movwf	tblptrl,c
   323  004380  0E47               	movlw	high __pidataBANK1
   324  004382  6EF7               	movwf	tblptrh,c
   325  004384  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   326  004386  6EF8               	movwf	tblptru,c
   327  004388  EE01  F0D3         	lfsr	0,__pdataBANK1
   328  00438C  EE10 F01F          	lfsr	1,31
   329  004390                     copy_data0:
   330  004390  0009               	tblrd		*+
   331  004392  CFF5 FFEE          	movff	tablat,postinc0
   332  004396  50E5               	movf	postdec1,w,c
   333  004398  50E1               	movf	fsr1l,w,c
   334  00439A  E1FA               	bnz	copy_data0
   335                           
   336                           ; Clear objects allocated to BANK1 (142 bytes)
   337  00439C  EE01  F000         	lfsr	0,__pbssBANK1
   338  0043A0  0E8E               	movlw	142
   339  0043A2                     clear_0:
   340  0043A2  6AEE               	clrf	postinc0,c
   341  0043A4  06E8               	decf	wreg,f,c
   342  0043A6  E1FD               	bnz	clear_0
   343                           
   344                           ; Clear objects allocated to BANK0 (25 bytes)
   345  0043A8  EE00  F0E5         	lfsr	0,__pbssBANK0
   346  0043AC  0E19               	movlw	25
   347  0043AE                     clear_1:
   348  0043AE  6AEE               	clrf	postinc0,c
   349  0043B0  06E8               	decf	wreg,f,c
   350  0043B2  E1FD               	bnz	clear_1
   351  0043B4                     end_of_initialization:
   352                           	callstack 0
   353  0043B4                     __end_of__initialization:
   354                           	callstack 0
   355  0043B4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   356  0043B6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   357  0043B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   358  0043BA  6EF8               	movwf	tblptru,c
   359  0043BC  0100               	movlb	0
   360  0043BE  EFD4  F011         	goto	_main	;jump to C main() function
   361                           
   362                           	psect	bssBANK0
   363  0000E5                     __pbssBANK0:
   364                           	callstack 0
   365  0000E5                     floorf@F527:
   366                           	callstack 0
   367  0000E5                     	ds	4
   368  0000E9                     ___fpclassifyf@F465:
   369                           	callstack 0
   370  0000E9                     	ds	4
   371  0000ED                     _luz:
   372                           	callstack 0
   373  0000ED                     	ds	4
   374  0000F1                     _tempar:
   375                           	callstack 0
   376  0000F1                     	ds	4
   377  0000F5                     _nout:
   378                           	callstack 0
   379  0000F5                     	ds	2
   380  0000F7                     _width:
   381                           	callstack 0
   382  0000F7                     	ds	2
   383  0000F9                     _prec:
   384                           	callstack 0
   385  0000F9                     	ds	2
   386  0000FB                     _flags:
   387                           	callstack 0
   388  0000FB                     	ds	2
   389  0000FD                     _i:
   390                           	callstack 0
   391  0000FD                     	ds	1
   392                           
   393                           	psect	bssBANK1
   394  000100                     __pbssBANK1:
   395                           	callstack 0
   396  000100                     _Sluz:
   397                           	callstack 0
   398  000100                     	ds	20
   399  000114                     _temperatura:
   400                           	callstack 0
   401  000114                     	ds	4
   402  000118                     _temp:
   403                           	callstack 0
   404  000118                     	ds	4
   405  00011C                     _Year:
   406                           	callstack 0
   407  00011C                     	ds	2
   408  00011E                     _Month:
   409                           	callstack 0
   410  00011E                     	ds	2
   411  000120                     _Date:
   412                           	callstack 0
   413  000120                     	ds	2
   414  000122                     _Day:
   415                           	callstack 0
   416  000122                     	ds	2
   417  000124                     _hour:
   418                           	callstack 0
   419  000124                     	ds	2
   420  000126                     _min:
   421                           	callstack 0
   422  000126                     	ds	2
   423  000128                     _sec:
   424                           	callstack 0
   425  000128                     	ds	2
   426  00012A                     _dbuf:
   427                           	callstack 0
   428  00012A                     	ds	80
   429  00017A                     _Stemp:
   430                           	callstack 0
   431  00017A                     	ds	20
   432                           
   433                           	psect	dataBANK1
   434  0001D3                     __pdataBANK1:
   435                           	callstack 0
   436  0001D3                     RTC_Calendario@F3531:
   437                           	callstack 0
   438  0001D3                     	ds	7
   439  0001DA                     _character3:
   440                           	callstack 0
   441  0001DA                     	ds	8
   442  0001E2                     _character2:
   443                           	callstack 0
   444  0001E2                     	ds	8
   445  0001EA                     _character1:
   446                           	callstack 0
   447  0001EA                     	ds	8
   448                           
   449                           	psect	cstackBANK1
   450  00018E                     __pcstackBANK1:
   451                           	callstack 0
   452  00018E                     RTC_Calendario@days:
   453                           	callstack 0
   454                           
   455                           ; 7 bytes @ 0x0
   456  00018E                     	ds	7
   457  000195                     RTC_Calendario@date:
   458                           	callstack 0
   459                           
   460                           ; 10 bytes @ 0x7
   461  000195                     	ds	10
   462  00019F                     RTC_Calendario@month:
   463                           	callstack 0
   464                           
   465                           ; 10 bytes @ 0x11
   466  00019F                     	ds	10
   467  0001A9                     RTC_Calendario@year:
   468                           	callstack 0
   469                           
   470                           ; 10 bytes @ 0x1B
   471  0001A9                     	ds	10
   472  0001B3                     RTC_Calendario@secs:
   473                           	callstack 0
   474                           
   475                           ; 10 bytes @ 0x25
   476  0001B3                     	ds	10
   477  0001BD                     RTC_Calendario@mins:
   478                           	callstack 0
   479                           
   480                           ; 10 bytes @ 0x2F
   481  0001BD                     	ds	10
   482  0001C7                     RTC_Calendario@hours:
   483                           	callstack 0
   484                           
   485                           ; 10 bytes @ 0x39
   486  0001C7                     	ds	10
   487  0001D1                     RTC_Calendario@Clock_type:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x43
   491  0001D1                     	ds	1
   492  0001D2                     RTC_Calendario@AM_PM:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x44
   496  0001D2                     	ds	1
   497                           
   498                           	psect	cstackBANK0
   499  000060                     __pcstackBANK0:
   500                           	callstack 0
   501  000060                     ___fltol@sign1:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x0
   505  000060                     	ds	1
   506  000061                     ___fltol@exp1:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x1
   510  000061                     	ds	1
   511  000062                     ?_ReadADC:
   512                           	callstack 0
   513  000062                     ?_efgtoa:
   514                           	callstack 0
   515  000062                     efgtoa@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x2
   519  000062                     	ds	2
   520  000064                     ??_ReadADC:
   521  000064                     efgtoa@f:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x4
   525  000064                     	ds	2
   526  000066                     ReadADC@result:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x6
   530  000066                     	ds	2
   531  000068                     efgtoa@c:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x8
   535  000068                     	ds	1
   536  000069                     ??_efgtoa:
   537                           
   538                           ; 1 bytes @ 0x9
   539  000069                     	ds	5
   540  00006E                     _efgtoa$1647:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0xE
   544  00006E                     	ds	2
   545  000070                     _efgtoa$1648:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x10
   549  000070                     	ds	2
   550  000072                     _efgtoa$1653:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x12
   554  000072                     	ds	2
   555  000074                     _efgtoa$1657:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x14
   559  000074                     	ds	2
   560  000076                     _efgtoa$1658:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x16
   564  000076                     	ds	2
   565  000078                     _efgtoa$1659:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x18
   569  000078                     	ds	2
   570  00007A                     efgtoa@t:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x1A
   574  00007A                     	ds	2
   575  00007C                     efgtoa@pp:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x1C
   579  00007C                     	ds	2
   580  00007E                     efgtoa@ne:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x1E
   584  00007E                     	ds	2
   585  000080                     efgtoa@m:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x20
   589  000080                     	ds	2
   590  000082                     efgtoa@ou:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x22
   594  000082                     	ds	4
   595  000086                     efgtoa@d:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x26
   599  000086                     	ds	2
   600  000088                     efgtoa@sign:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x28
   604  000088                     	ds	2
   605  00008A                     efgtoa@p:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x2A
   609  00008A                     	ds	2
   610  00008C                     efgtoa@w:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x2C
   614  00008C                     	ds	2
   615  00008E                     efgtoa@nmode:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x2E
   619  00008E                     	ds	1
   620  00008F                     efgtoa@mode:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x2F
   624  00008F                     	ds	1
   625  000090                     efgtoa@h:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x30
   629  000090                     	ds	4
   630  000094                     efgtoa@l:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0x34
   634  000094                     	ds	4
   635  000098                     efgtoa@i:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x38
   639  000098                     	ds	2
   640  00009A                     efgtoa@g:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x3A
   644  00009A                     	ds	4
   645  00009E                     efgtoa@e:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x3E
   649  00009E                     	ds	2
   650  0000A0                     efgtoa@n:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x40
   654  0000A0                     	ds	2
   655  0000A2                     efgtoa@u:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x42
   659  0000A2                     	ds	4
   660  0000A6                     ?_vfpfcnvrt:
   661                           	callstack 0
   662  0000A6                     vfpfcnvrt@fp:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x46
   666  0000A6                     	ds	2
   667  0000A8                     vfpfcnvrt@fmt:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x48
   671  0000A8                     	ds	2
   672  0000AA                     vfpfcnvrt@ap:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x4A
   676  0000AA                     	ds	2
   677  0000AC                     ??_vfpfcnvrt:
   678                           
   679                           ; 1 bytes @ 0x4C
   680  0000AC                     	ds	4
   681  0000B0                     vfpfcnvrt@llu:
   682                           	callstack 0
   683                           
   684                           ; 8 bytes @ 0x50
   685  0000B0                     	ds	8
   686  0000B8                     vfpfcnvrt@done:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x58
   690  0000B8                     	ds	2
   691  0000BA                     _vfpfcnvrt$1684:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x5A
   695  0000BA                     	ds	2
   696  0000BC                     _vfpfcnvrt$1688:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x5C
   700  0000BC                     	ds	2
   701  0000BE                     vfpfcnvrt@f:
   702                           	callstack 0
   703                           
   704                           ; 4 bytes @ 0x5E
   705  0000BE                     	ds	4
   706  0000C2                     vfpfcnvrt@ct:
   707                           	callstack 0
   708                           
   709                           ; 3 bytes @ 0x62
   710  0000C2                     	ds	3
   711  0000C5                     vfpfcnvrt@c:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x65
   715  0000C5                     	ds	1
   716  0000C6                     ?_vfprintf:
   717                           	callstack 0
   718  0000C6                     vfprintf@fp:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x66
   722  0000C6                     	ds	2
   723  0000C8                     vfprintf@fmt:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x68
   727  0000C8                     	ds	2
   728  0000CA                     vfprintf@ap:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x6A
   732  0000CA                     	ds	2
   733  0000CC                     vfprintf@cfmt:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x6C
   737  0000CC                     	ds	2
   738  0000CE                     ?_sprintf:
   739                           	callstack 0
   740  0000CE                     sprintf@s:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x6E
   744  0000CE                     	ds	2
   745  0000D0                     sprintf@fmt:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x70
   749  0000D0                     	ds	6
   750  0000D6                     sprintf@ap:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x76
   754  0000D6                     	ds	2
   755  0000D8                     sprintf@f:
   756                           	callstack 0
   757                           
   758                           ; 6 bytes @ 0x78
   759  0000D8                     	ds	6
   760  0000DE                     ??_RTC_Calendario:
   761                           
   762                           ; 1 bytes @ 0x7E
   763  0000DE                     	ds	3
   764  0000E1                     _main$2068:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x81
   768  0000E1                     	ds	4
   769                           
   770                           	psect	cstackCOMRAM
   771  000001                     __pcstackCOMRAM:
   772                           	callstack 0
   773  000001                     ?_ReadLUZ:
   774                           	callstack 0
   775  000001                     ?_strlen:
   776                           	callstack 0
   777  000001                     ?___fpclassifyf:
   778                           	callstack 0
   779  000001                     ?_isupper:
   780                           	callstack 0
   781  000001                     ?_isalpha:
   782                           	callstack 0
   783  000001                     ?_isdigit:
   784                           	callstack 0
   785  000001                     ?_strncmp:
   786                           	callstack 0
   787  000001                     ?_isspace:
   788                           	callstack 0
   789  000001                     ?_islower:
   790                           	callstack 0
   791  000001                     ?___wmul:
   792                           	callstack 0
   793  000001                     ?___awdiv:
   794                           	callstack 0
   795  000001                     ?___awmod:
   796                           	callstack 0
   797  000001                     ?___flneg:
   798                           	callstack 0
   799  000001                     I2C_Read@flag:
   800                           	callstack 0
   801  000001                     I2C_Write@data:
   802                           	callstack 0
   803  000001                     MSdelay@val:
   804                           	callstack 0
   805  000001                     ___wmul@multiplier:
   806                           	callstack 0
   807  000001                     ___awdiv@dividend:
   808                           	callstack 0
   809  000001                     ___awmod@dividend:
   810                           	callstack 0
   811  000001                     isalpha@c:
   812                           	callstack 0
   813  000001                     isdigit@c:
   814                           	callstack 0
   815  000001                     isspace@c:
   816                           	callstack 0
   817  000001                     isupper@c:
   818                           	callstack 0
   819  000001                     fputc@c:
   820                           	callstack 0
   821  000001                     strcpy@dest:
   822                           	callstack 0
   823  000001                     strlen@s:
   824                           	callstack 0
   825  000001                     strncmp@_l:
   826                           	callstack 0
   827  000001                     islower@c:
   828                           	callstack 0
   829  000001                     ___fleq@ff1:
   830                           	callstack 0
   831  000001                     ___flneg@f1:
   832                           	callstack 0
   833  000001                     ___fpclassifyf@x:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x0
   837  000001                     	ds	1
   838  000002                     I2C_Read@buffer:
   839                           	callstack 0
   840  000002                     I2C_Start@slave_write_address:
   841                           	callstack 0
   842  000002                     I2C_Repeated_Start@slave_read_address:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x1
   846  000002                     	ds	1
   847  000003                     ??_ReadLUZ:
   848  000003                     ??_isupper:
   849  000003                     ??_isalpha:
   850  000003                     ??_isdigit:
   851  000003                     ??_isspace:
   852  000003                     ??_islower:
   853  000003                     ??_RTC_Read_Clock:
   854  000003                     ??_RTC_Read_Calendar:
   855  000003                     MSdelay@i:
   856                           	callstack 0
   857  000003                     ___wmul@multiplicand:
   858                           	callstack 0
   859  000003                     ___awdiv@divisor:
   860                           	callstack 0
   861  000003                     ___awmod@divisor:
   862                           	callstack 0
   863  000003                     fputc@fp:
   864                           	callstack 0
   865  000003                     strcpy@src:
   866                           	callstack 0
   867  000003                     strlen@a:
   868                           	callstack 0
   869  000003                     strncmp@_r:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x2
   873  000003                     	ds	1
   874  000004                     RTC_Read_Clock@read_clock_address:
   875                           	callstack 0
   876  000004                     RTC_Read_Calendar@read_calendar_address:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x3
   880  000004                     	ds	1
   881  000005                     ??_fputc:
   882  000005                     ??___fpclassifyf:
   883  000005                     ??_strcpy:
   884  000005                     ___awdiv@counter:
   885                           	callstack 0
   886  000005                     ___awmod@counter:
   887                           	callstack 0
   888  000005                     MSdelay@j:
   889                           	callstack 0
   890  000005                     ReadLUZ@result:
   891                           	callstack 0
   892  000005                     ___wmul@product:
   893                           	callstack 0
   894  000005                     strncmp@n:
   895                           	callstack 0
   896  000005                     ___fleq@ff2:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x4
   900  000005                     	ds	1
   901  000006                     ___awdiv@sign:
   902                           	callstack 0
   903  000006                     ___awmod@sign:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x5
   907  000006                     	ds	1
   908  000007                     ??_LCD_Command:
   909  000007                     ??_LCD_Char:
   910  000007                     ??_strncmp:
   911  000007                     ?_tolower:
   912                           	callstack 0
   913  000007                     ?_toupper:
   914                           	callstack 0
   915  000007                     ?___xxtofl:
   916                           	callstack 0
   917  000007                     _isspace$1763:
   918                           	callstack 0
   919  000007                     ___awdiv@quotient:
   920                           	callstack 0
   921  000007                     strcpy@s:
   922                           	callstack 0
   923  000007                     tolower@c:
   924                           	callstack 0
   925  000007                     toupper@c:
   926                           	callstack 0
   927  000007                     ___xxtofl@val:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x6
   931  000007                     	ds	1
   932  000008                     ?_atoi:
   933                           	callstack 0
   934  000008                     LCD_Command@cmd:
   935                           	callstack 0
   936  000008                     LCD_Char@dat:
   937                           	callstack 0
   938  000008                     atoi@s:
   939                           	callstack 0
   940  000008                     strncmp@l:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x7
   944  000008                     	ds	1
   945  000009                     ??_tolower:
   946  000009                     ??_toupper:
   947  000009                     ??___fleq:
   948  000009                     LCD_String@msg:
   949                           	callstack 0
   950  000009                     LCD_Custom_Char@msg:
   951                           	callstack 0
   952  000009                     ___fpclassifyf@e:
   953                           	callstack 0
   954  000009                     strcpy@d:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x8
   958  000009                     	ds	1
   959  00000A                     ??_atoi:
   960  00000A                     fputs@s:
   961                           	callstack 0
   962  00000A                     strncmp@r:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x9
   966  00000A                     	ds	1
   967  00000B                     ??___xxtofl:
   968  00000B                     LCD_String_xy@pos:
   969                           	callstack 0
   970  00000B                     LCD_Custom_Char@loc:
   971                           	callstack 0
   972  00000B                     ___fpclassifyf@u:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0xA
   976  00000B                     	ds	1
   977  00000C                     LCD_Custom_Char@i:
   978                           	callstack 0
   979  00000C                     LCD_String_xy@msg:
   980                           	callstack 0
   981  00000C                     fputs@fp:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0xB
   985  00000C                     	ds	1
   986  00000D                     _tolower$1827:
   987                           	callstack 0
   988  00000D                     _toupper$1842:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0xC
   992  00000D                     	ds	1
   993  00000E                     LCD_String_xy@row:
   994                           	callstack 0
   995  00000E                     fputs@c:
   996                           	callstack 0
   997  00000E                     atoi@neg:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0xD
  1001  00000E                     	ds	1
  1002  00000F                     LCD_String_xy@location:
  1003                           	callstack 0
  1004  00000F                     ___xxtofl@sign:
  1005                           	callstack 0
  1006  00000F                     fputs@i:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0xE
  1010  00000F                     	ds	1
  1011  000010                     ___xxtofl@exp:
  1012                           	callstack 0
  1013  000010                     _atoi$1723:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0xF
  1017  000010                     	ds	1
  1018  000011                     ?_pad:
  1019                           	callstack 0
  1020  000011                     pad@fp:
  1021                           	callstack 0
  1022  000011                     ___xxtofl@arg:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x10
  1026  000011                     	ds	1
  1027  000012                     _atoi$1725:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x11
  1031  000012                     	ds	1
  1032  000013                     pad@buf:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x12
  1036  000013                     	ds	1
  1037  000014                     _atoi$1724:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x13
  1041  000014                     	ds	1
  1042  000015                     ?___flmul:
  1043                           	callstack 0
  1044  000015                     pad@p:
  1045                           	callstack 0
  1046  000015                     atoi@n:
  1047                           	callstack 0
  1048  000015                     ___flmul@b:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x14
  1052  000015                     	ds	2
  1053  000017                     ??_pad:
  1054                           
  1055                           ; 1 bytes @ 0x16
  1056  000017                     	ds	1
  1057  000018                     pad@i:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x17
  1061  000018                     	ds	1
  1062  000019                     ___flmul@a:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x18
  1066  000019                     	ds	1
  1067  00001A                     pad@w:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x19
  1071  00001A                     	ds	2
  1072  00001C                     ?_xtoa:
  1073                           	callstack 0
  1074  00001C                     xtoa@fp:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x1B
  1078  00001C                     	ds	1
  1079  00001D                     ??___flmul:
  1080                           
  1081                           ; 1 bytes @ 0x1C
  1082  00001D                     	ds	1
  1083  00001E                     xtoa@d:
  1084                           	callstack 0
  1085                           
  1086                           ; 8 bytes @ 0x1D
  1087  00001E                     	ds	3
  1088  000021                     ___flmul@sign:
  1089                           	callstack 0
  1090                           
  1091                           ; 1 bytes @ 0x20
  1092  000021                     	ds	1
  1093  000022                     ___flmul@grs:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x21
  1097  000022                     	ds	4
  1098  000026                     ___flmul@aexp:
  1099                           	callstack 0
  1100  000026                     xtoa@x:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x25
  1104  000026                     	ds	1
  1105  000027                     ??_xtoa:
  1106  000027                     ___flmul@bexp:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x26
  1110  000027                     	ds	1
  1111  000028                     ___flmul@prod:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x27
  1115  000028                     	ds	4
  1116  00002C                     ___flmul@temp:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x2B
  1120  00002C                     	ds	2
  1121  00002E                     ?___fldiv:
  1122                           	callstack 0
  1123  00002E                     ___flge@ff1:
  1124                           	callstack 0
  1125  00002E                     ___fldiv@b:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x2D
  1129  00002E                     	ds	1
  1130  00002F                     _xtoa$1669:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x2E
  1134  00002F                     	ds	2
  1135  000031                     _xtoa$1670:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x30
  1139  000031                     	ds	1
  1140  000032                     ___flge@ff2:
  1141                           	callstack 0
  1142  000032                     ___fldiv@a:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x31
  1146  000032                     	ds	1
  1147  000033                     xtoa@p:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x32
  1151  000033                     	ds	2
  1152  000035                     xtoa@w:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x34
  1156  000035                     	ds	1
  1157  000036                     ??___fldiv:
  1158  000036                     ??___flge:
  1159                           
  1160                           ; 1 bytes @ 0x35
  1161  000036                     	ds	1
  1162  000037                     xtoa@n:
  1163                           	callstack 0
  1164                           
  1165                           ; 8 bytes @ 0x36
  1166  000037                     	ds	3
  1167  00003A                     ___fldiv@rem:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x39
  1171  00003A                     	ds	4
  1172  00003E                     ___fldiv@sign:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x3D
  1176  00003E                     	ds	1
  1177  00003F                     ___fldiv@new_exp:
  1178                           	callstack 0
  1179  00003F                     xtoa@i:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x3E
  1183  00003F                     	ds	2
  1184  000041                     xtoa@c:
  1185                           	callstack 0
  1186  000041                     ___fldiv@grs:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x40
  1190  000041                     	ds	4
  1191  000045                     ___fldiv@bexp:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x44
  1195  000045                     	ds	1
  1196  000046                     ___fldiv@aexp:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x45
  1200  000046                     	ds	1
  1201  000047                     ?___fladd:
  1202                           	callstack 0
  1203  000047                     ?_floorf:
  1204                           	callstack 0
  1205  000047                     ___fladd@b:
  1206                           	callstack 0
  1207  000047                     floorf@x:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x46
  1211  000047                     	ds	4
  1212  00004B                     ??_floorf:
  1213  00004B                     ___fladd@a:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x4A
  1217  00004B                     	ds	4
  1218  00004F                     ??___fladd:
  1219                           
  1220                           ; 1 bytes @ 0x4E
  1221  00004F                     	ds	2
  1222  000051                     floorf@m:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x50
  1226  000051                     	ds	2
  1227  000053                     ___fladd@signs:
  1228                           	callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x52
  1231  000053                     	ds	1
  1232  000054                     ___fladd@aexp:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x53
  1236  000054                     	ds	1
  1237  000055                     ___fladd@bexp:
  1238                           	callstack 0
  1239  000055                     floorf@e:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x54
  1243  000055                     	ds	1
  1244  000056                     ___fladd@grs:
  1245                           	callstack 0
  1246                           
  1247                           ; 1 bytes @ 0x55
  1248  000056                     	ds	1
  1249  000057                     ?___flsub:
  1250                           	callstack 0
  1251  000057                     ?___fltol:
  1252                           	callstack 0
  1253  000057                     ___fltol@f1:
  1254                           	callstack 0
  1255  000057                     ___flsub@b:
  1256                           	callstack 0
  1257  000057                     floorf@u:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x56
  1261  000057                     	ds	4
  1262  00005B                     ??___fltol:
  1263  00005B                     ___flsub@a:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x5A
  1267  00005B                     	ds	4
  1268  00005F                     
  1269                           ; 1 bytes @ 0x5E
  1270 ;;
  1271 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1272 ;;
  1273 ;; *************** function _main *****************
  1274 ;; Defined at:
  1275 ;;		line 40 in file "smart_main.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0
  1290 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1292 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1293 ;;Total ram usage:        4 bytes
  1294 ;; Hardware stack levels required when called: 10
  1295 ;; This function calls:
  1296 ;;		_I2C_Init
  1297 ;;		_LCD_Char
  1298 ;;		_LCD_Clear
  1299 ;;		_LCD_Command
  1300 ;;		_LCD_Custom_Char
  1301 ;;		_LCD_Init
  1302 ;;		_LCD_String_xy
  1303 ;;		_MSdelay
  1304 ;;		_RTC_Calendario
  1305 ;;		_ReadADC
  1306 ;;		_ReadLUZ
  1307 ;;		___flge
  1308 ;;		___xxtofl
  1309 ;;		_sprintf
  1310 ;; This function is called by:
  1311 ;;		Startup code after reset
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text0
  1316  0023A8                     __ptext0:
  1317                           	callstack 0
  1318  0023A8                     _main:
  1319                           	callstack 21
  1320  0023A8                     
  1321                           ;smart_main.c: 41:     OSCCON = 0x72;
  1322  0023A8  0E72               	movlw	114
  1323  0023AA  6ED3               	movwf	211,c	;volatile
  1324                           
  1325                           ;smart_main.c: 42:     TRISE = 0x00;
  1326  0023AC  0E00               	movlw	0
  1327  0023AE  6E96               	movwf	150,c	;volatile
  1328  0023B0                     
  1329                           ;smart_main.c: 45:     I2C_Init();
  1330  0023B0  ECB8  F023         	call	_I2C_Init	;wreg free
  1331  0023B4                     
  1332                           ;smart_main.c: 46:     LCD_Init();
  1333  0023B4  EC2F  F023         	call	_LCD_Init	;wreg free
  1334  0023B8                     
  1335                           ;smart_main.c: 47:     LCD_String_xy(1, 0, " Buenos Dias ");
  1336  0023B8  0E00               	movlw	0
  1337  0023BA  6E0B               	movwf	LCD_String_xy@pos^0,c
  1338  0023BC  0E01               	movlw	low STR_1
  1339  0023BE  6E0C               	movwf	LCD_String_xy@msg^0,c
  1340  0023C0  0E08               	movlw	high STR_1
  1341  0023C2  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1342  0023C4  0E01               	movlw	1
  1343  0023C6  EC49  F022         	call	_LCD_String_xy
  1344  0023CA                     l5292:
  1345                           
  1346                           ;smart_main.c: 48:     LCD_Clear();
  1347  0023CA  ECE3  F023         	call	_LCD_Clear	;wreg free
  1348  0023CE                     
  1349                           ;smart_main.c: 51:         tempar = ReadADC();
  1350  0023CE  EC4A  F01C         	call	_ReadADC	;wreg free
  1351  0023D2  0100               	movlb	0	; () banked
  1352  0023D4  C062  F0E1         	movff	?_ReadADC,_main$2068
  1353  0023D8  C063  F0E2         	movff	?_ReadADC+1,_main$2068+1
  1354  0023DC  6BE3               	clrf	(_main$2068+2)& (0+255),b
  1355  0023DE  6BE4               	clrf	(_main$2068+3)& (0+255),b
  1356  0023E0                     
  1357                           ; BSR set to: 0
  1358                           ;smart_main.c: 51:         tempar = ReadADC();
  1359  0023E0  C0E1  F007         	movff	_main$2068,___xxtofl@val
  1360  0023E4  C0E2  F008         	movff	_main$2068+1,___xxtofl@val+1
  1361  0023E8  C0E3  F009         	movff	_main$2068+2,___xxtofl@val+2
  1362  0023EC  C0E4  F00A         	movff	_main$2068+3,___xxtofl@val+3
  1363  0023F0  0E00               	movlw	0
  1364  0023F2  ECA2  F019         	call	___xxtofl
  1365  0023F6  C007  F0F1         	movff	?___xxtofl,_tempar
  1366  0023FA  C008  F0F2         	movff	?___xxtofl+1,_tempar+1
  1367  0023FE  C009  F0F3         	movff	?___xxtofl+2,_tempar+2
  1368  002402  C00A  F0F4         	movff	?___xxtofl+3,_tempar+3
  1369  002406                     
  1370                           ;smart_main.c: 52:         luz = ReadLUZ();
  1371  002406  EC8A  F01F         	call	_ReadLUZ	;wreg free
  1372  00240A  C001  F007         	movff	?_ReadLUZ,___xxtofl@val
  1373  00240E  C002  F008         	movff	?_ReadLUZ+1,___xxtofl@val+1
  1374  002412  6A09               	clrf	(___xxtofl@val+2)^0,c
  1375  002414  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1376  002416  0E00               	movlw	0
  1377  002418  ECA2  F019         	call	___xxtofl
  1378  00241C  C007  F0ED         	movff	?___xxtofl,_luz
  1379  002420  C008  F0EE         	movff	?___xxtofl+1,_luz+1
  1380  002424  C009  F0EF         	movff	?___xxtofl+2,_luz+2
  1381  002428  C00A  F0F0         	movff	?___xxtofl+3,_luz+3
  1382  00242C                     
  1383                           ;smart_main.c: 53:         RTC_Calendario();
  1384  00242C  EC7F  F015         	call	_RTC_Calendario	;wreg free
  1385  002430                     
  1386                           ;smart_main.c: 54:         MSdelay(10);
  1387  002430  0E00               	movlw	0
  1388  002432  6E02               	movwf	(MSdelay@val+1)^0,c
  1389  002434  0E0A               	movlw	10
  1390  002436  6E01               	movwf	MSdelay@val^0,c
  1391  002438  EC75  F021         	call	_MSdelay	;wreg free
  1392  00243C                     
  1393                           ;smart_main.c: 56:         if (tempar > 15 && (luz > 0 && luz < 400)) {
  1394  00243C  0E00               	movlw	0
  1395  00243E  6E2E               	movwf	___flge@ff1^0,c
  1396  002440  0E00               	movlw	0
  1397  002442  6E2F               	movwf	(___flge@ff1+1)^0,c
  1398  002444  0E70               	movlw	112
  1399  002446  6E30               	movwf	(___flge@ff1+2)^0,c
  1400  002448  0E41               	movlw	65
  1401  00244A  6E31               	movwf	(___flge@ff1+3)^0,c
  1402  00244C  C0F1  F032         	movff	_tempar,___flge@ff2
  1403  002450  C0F2  F033         	movff	_tempar+1,___flge@ff2+1
  1404  002454  C0F3  F034         	movff	_tempar+2,___flge@ff2+2
  1405  002458  C0F4  F035         	movff	_tempar+3,___flge@ff2+3
  1406  00245C  ECC8  F01B         	call	___flge	;wreg free
  1407  002460  B0D8               	btfsc	status,0,c
  1408  002462  EF35  F012         	goto	u6031
  1409  002466  EF37  F012         	goto	u6030
  1410  00246A                     u6031:
  1411  00246A  EF9B  F012         	goto	l5324
  1412  00246E                     u6030:
  1413  00246E  0E00               	movlw	0
  1414  002470  6E2E               	movwf	___flge@ff1^0,c
  1415  002472  0E00               	movlw	0
  1416  002474  6E2F               	movwf	(___flge@ff1+1)^0,c
  1417  002476  0E00               	movlw	0
  1418  002478  6E30               	movwf	(___flge@ff1+2)^0,c
  1419  00247A  0E00               	movlw	0
  1420  00247C  6E31               	movwf	(___flge@ff1+3)^0,c
  1421  00247E  C0ED  F032         	movff	_luz,___flge@ff2
  1422  002482  C0EE  F033         	movff	_luz+1,___flge@ff2+1
  1423  002486  C0EF  F034         	movff	_luz+2,___flge@ff2+2
  1424  00248A  C0F0  F035         	movff	_luz+3,___flge@ff2+3
  1425  00248E  ECC8  F01B         	call	___flge	;wreg free
  1426  002492  B0D8               	btfsc	status,0,c
  1427  002494  EF4E  F012         	goto	u6041
  1428  002498  EF50  F012         	goto	u6040
  1429  00249C                     u6041:
  1430  00249C  EF9B  F012         	goto	l5324
  1431  0024A0                     u6040:
  1432  0024A0  C0ED  F02E         	movff	_luz,___flge@ff1
  1433  0024A4  C0EE  F02F         	movff	_luz+1,___flge@ff1+1
  1434  0024A8  C0EF  F030         	movff	_luz+2,___flge@ff1+2
  1435  0024AC  C0F0  F031         	movff	_luz+3,___flge@ff1+3
  1436  0024B0  0E00               	movlw	0
  1437  0024B2  6E32               	movwf	___flge@ff2^0,c
  1438  0024B4  0E00               	movlw	0
  1439  0024B6  6E33               	movwf	(___flge@ff2+1)^0,c
  1440  0024B8  0EC8               	movlw	200
  1441  0024BA  6E34               	movwf	(___flge@ff2+2)^0,c
  1442  0024BC  0E43               	movlw	67
  1443  0024BE  6E35               	movwf	(___flge@ff2+3)^0,c
  1444  0024C0  ECC8  F01B         	call	___flge	;wreg free
  1445  0024C4  B0D8               	btfsc	status,0,c
  1446  0024C6  EF67  F012         	goto	u6051
  1447  0024CA  EF69  F012         	goto	u6050
  1448  0024CE                     u6051:
  1449  0024CE  EF9B  F012         	goto	l5324
  1450  0024D2                     u6050:
  1451  0024D2                     
  1452                           ;smart_main.c: 57:             LATE0 = 0;
  1453  0024D2  908D               	bcf	3981,0,c	;volatile
  1454                           
  1455                           ;smart_main.c: 58:             LATE1 = 0;
  1456  0024D4  928D               	bcf	3981,1,c	;volatile
  1457                           
  1458                           ;smart_main.c: 59:             LATE2 = 0;
  1459  0024D6  948D               	bcf	3981,2,c	;volatile
  1460  0024D8                     
  1461                           ;smart_main.c: 60:             sprintf(Stemp, "%0.0fC", tempar);
  1462  0024D8  0E7A               	movlw	low _Stemp
  1463  0024DA  0100               	movlb	0	; () banked
  1464  0024DC  6FCE               	movwf	sprintf@s& (0+255),b
  1465  0024DE  0E01               	movlw	high _Stemp
  1466  0024E0  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1467  0024E2  0E0F               	movlw	low STR_2
  1468  0024E4  6FD0               	movwf	sprintf@fmt& (0+255),b
  1469  0024E6  0E08               	movlw	high STR_2
  1470  0024E8  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1471  0024EA  C0F1  F0D2         	movff	_tempar,?_sprintf+4
  1472  0024EE  C0F2  F0D3         	movff	_tempar+1,?_sprintf+5
  1473  0024F2  C0F3  F0D4         	movff	_tempar+2,?_sprintf+6
  1474  0024F6  C0F4  F0D5         	movff	_tempar+3,?_sprintf+7
  1475  0024FA  ECD7  F020         	call	_sprintf	;wreg free
  1476  0024FE                     
  1477                           ;smart_main.c: 61:             LCD_String_xy(1, 0, Stemp);
  1478  0024FE  0E00               	movlw	0
  1479  002500  6E0B               	movwf	LCD_String_xy@pos^0,c
  1480  002502  0E7A               	movlw	low _Stemp
  1481  002504  6E0C               	movwf	LCD_String_xy@msg^0,c
  1482  002506  0E01               	movlw	high _Stemp
  1483  002508  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1484  00250A  0E01               	movlw	1
  1485  00250C  EC49  F022         	call	_LCD_String_xy
  1486  002510                     
  1487                           ;smart_main.c: 62:             LCD_Custom_Char(0, character2);
  1488  002510  0EE2               	movlw	low _character2
  1489  002512  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1490  002514  0E01               	movlw	high _character2
  1491  002516  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1492  002518  0E00               	movlw	0
  1493  00251A  EC9A  F021         	call	_LCD_Custom_Char
  1494  00251E                     
  1495                           ;smart_main.c: 63:             LCD_Command(0xc0);
  1496  00251E  0EC0               	movlw	192
  1497  002520  EC29  F021         	call	_LCD_Command
  1498  002524                     
  1499                           ;smart_main.c: 64:             LCD_Char(0);
  1500  002524  0E00               	movlw	0
  1501  002526  EC4F  F021         	call	_LCD_Char
  1502  00252A                     
  1503                           ;smart_main.c: 65:             MSdelay(3000);
  1504  00252A  0E0B               	movlw	11
  1505  00252C  6E02               	movwf	(MSdelay@val+1)^0,c
  1506  00252E  0EB8               	movlw	184
  1507  002530  6E01               	movwf	MSdelay@val^0,c
  1508  002532  EC75  F021         	call	_MSdelay	;wreg free
  1509  002536                     l5324:
  1510                           
  1511                           ;smart_main.c: 69:         if ((tempar >= 12 && tempar <= 15)&&(luz > 400 && luz < 700))
      +                           {
  1512  002536  C0F1  F02E         	movff	_tempar,___flge@ff1
  1513  00253A  C0F2  F02F         	movff	_tempar+1,___flge@ff1+1
  1514  00253E  C0F3  F030         	movff	_tempar+2,___flge@ff1+2
  1515  002542  C0F4  F031         	movff	_tempar+3,___flge@ff1+3
  1516  002546  0E00               	movlw	0
  1517  002548  6E32               	movwf	___flge@ff2^0,c
  1518  00254A  0E00               	movlw	0
  1519  00254C  6E33               	movwf	(___flge@ff2+1)^0,c
  1520  00254E  0E40               	movlw	64
  1521  002550  6E34               	movwf	(___flge@ff2+2)^0,c
  1522  002552  0E41               	movlw	65
  1523  002554  6E35               	movwf	(___flge@ff2+3)^0,c
  1524  002556  ECC8  F01B         	call	___flge	;wreg free
  1525  00255A  A0D8               	btfss	status,0,c
  1526  00255C  EFB2  F012         	goto	u6061
  1527  002560  EFB4  F012         	goto	u6060
  1528  002564                     u6061:
  1529  002564  EF31  F013         	goto	l5346
  1530  002568                     u6060:
  1531  002568  0E00               	movlw	0
  1532  00256A  6E2E               	movwf	___flge@ff1^0,c
  1533  00256C  0E00               	movlw	0
  1534  00256E  6E2F               	movwf	(___flge@ff1+1)^0,c
  1535  002570  0E70               	movlw	112
  1536  002572  6E30               	movwf	(___flge@ff1+2)^0,c
  1537  002574  0E41               	movlw	65
  1538  002576  6E31               	movwf	(___flge@ff1+3)^0,c
  1539  002578  C0F1  F032         	movff	_tempar,___flge@ff2
  1540  00257C  C0F2  F033         	movff	_tempar+1,___flge@ff2+1
  1541  002580  C0F3  F034         	movff	_tempar+2,___flge@ff2+2
  1542  002584  C0F4  F035         	movff	_tempar+3,___flge@ff2+3
  1543  002588  ECC8  F01B         	call	___flge	;wreg free
  1544  00258C  A0D8               	btfss	status,0,c
  1545  00258E  EFCB  F012         	goto	u6071
  1546  002592  EFCD  F012         	goto	u6070
  1547  002596                     u6071:
  1548  002596  EF31  F013         	goto	l5346
  1549  00259A                     u6070:
  1550  00259A  0E00               	movlw	0
  1551  00259C  6E2E               	movwf	___flge@ff1^0,c
  1552  00259E  0E00               	movlw	0
  1553  0025A0  6E2F               	movwf	(___flge@ff1+1)^0,c
  1554  0025A2  0EC8               	movlw	200
  1555  0025A4  6E30               	movwf	(___flge@ff1+2)^0,c
  1556  0025A6  0E43               	movlw	67
  1557  0025A8  6E31               	movwf	(___flge@ff1+3)^0,c
  1558  0025AA  C0ED  F032         	movff	_luz,___flge@ff2
  1559  0025AE  C0EE  F033         	movff	_luz+1,___flge@ff2+1
  1560  0025B2  C0EF  F034         	movff	_luz+2,___flge@ff2+2
  1561  0025B6  C0F0  F035         	movff	_luz+3,___flge@ff2+3
  1562  0025BA  ECC8  F01B         	call	___flge	;wreg free
  1563  0025BE  B0D8               	btfsc	status,0,c
  1564  0025C0  EFE4  F012         	goto	u6081
  1565  0025C4  EFE6  F012         	goto	u6080
  1566  0025C8                     u6081:
  1567  0025C8  EF31  F013         	goto	l5346
  1568  0025CC                     u6080:
  1569  0025CC  C0ED  F02E         	movff	_luz,___flge@ff1
  1570  0025D0  C0EE  F02F         	movff	_luz+1,___flge@ff1+1
  1571  0025D4  C0EF  F030         	movff	_luz+2,___flge@ff1+2
  1572  0025D8  C0F0  F031         	movff	_luz+3,___flge@ff1+3
  1573  0025DC  0E00               	movlw	0
  1574  0025DE  6E32               	movwf	___flge@ff2^0,c
  1575  0025E0  0E00               	movlw	0
  1576  0025E2  6E33               	movwf	(___flge@ff2+1)^0,c
  1577  0025E4  0E2F               	movlw	47
  1578  0025E6  6E34               	movwf	(___flge@ff2+2)^0,c
  1579  0025E8  0E44               	movlw	68
  1580  0025EA  6E35               	movwf	(___flge@ff2+3)^0,c
  1581  0025EC  ECC8  F01B         	call	___flge	;wreg free
  1582  0025F0  B0D8               	btfsc	status,0,c
  1583  0025F2  EFFD  F012         	goto	u6091
  1584  0025F6  EFFF  F012         	goto	u6090
  1585  0025FA                     u6091:
  1586  0025FA  EF31  F013         	goto	l5346
  1587  0025FE                     u6090:
  1588  0025FE                     
  1589                           ;smart_main.c: 70:             LATE0 = 1;
  1590  0025FE  808D               	bsf	3981,0,c	;volatile
  1591                           
  1592                           ;smart_main.c: 71:             LATE1 = 1;
  1593  002600  828D               	bsf	3981,1,c	;volatile
  1594                           
  1595                           ;smart_main.c: 72:             LATE2 = 0;
  1596  002602  948D               	bcf	3981,2,c	;volatile
  1597  002604                     
  1598                           ;smart_main.c: 73:             sprintf(Stemp, "%0.0fC", tempar);
  1599  002604  0E7A               	movlw	low _Stemp
  1600  002606  0100               	movlb	0	; () banked
  1601  002608  6FCE               	movwf	sprintf@s& (0+255),b
  1602  00260A  0E01               	movlw	high _Stemp
  1603  00260C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1604  00260E  0E0F               	movlw	low STR_2
  1605  002610  6FD0               	movwf	sprintf@fmt& (0+255),b
  1606  002612  0E08               	movlw	high STR_2
  1607  002614  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1608  002616  C0F1  F0D2         	movff	_tempar,?_sprintf+4
  1609  00261A  C0F2  F0D3         	movff	_tempar+1,?_sprintf+5
  1610  00261E  C0F3  F0D4         	movff	_tempar+2,?_sprintf+6
  1611  002622  C0F4  F0D5         	movff	_tempar+3,?_sprintf+7
  1612  002626  ECD7  F020         	call	_sprintf	;wreg free
  1613  00262A                     
  1614                           ;smart_main.c: 74:             LCD_String_xy(1, 0, Stemp);
  1615  00262A  0E00               	movlw	0
  1616  00262C  6E0B               	movwf	LCD_String_xy@pos^0,c
  1617  00262E  0E7A               	movlw	low _Stemp
  1618  002630  6E0C               	movwf	LCD_String_xy@msg^0,c
  1619  002632  0E01               	movlw	high _Stemp
  1620  002634  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1621  002636  0E01               	movlw	1
  1622  002638  EC49  F022         	call	_LCD_String_xy
  1623  00263C                     
  1624                           ;smart_main.c: 75:             LCD_Custom_Char(0, character3);
  1625  00263C  0EDA               	movlw	low _character3
  1626  00263E  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1627  002640  0E01               	movlw	high _character3
  1628  002642  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1629  002644  0E00               	movlw	0
  1630  002646  EC9A  F021         	call	_LCD_Custom_Char
  1631  00264A                     
  1632                           ;smart_main.c: 76:             LCD_Command(0xc0);
  1633  00264A  0EC0               	movlw	192
  1634  00264C  EC29  F021         	call	_LCD_Command
  1635  002650                     
  1636                           ;smart_main.c: 77:             LCD_Char(0);
  1637  002650  0E00               	movlw	0
  1638  002652  EC4F  F021         	call	_LCD_Char
  1639  002656                     
  1640                           ;smart_main.c: 78:             MSdelay(3000);
  1641  002656  0E0B               	movlw	11
  1642  002658  6E02               	movwf	(MSdelay@val+1)^0,c
  1643  00265A  0EB8               	movlw	184
  1644  00265C  6E01               	movwf	MSdelay@val^0,c
  1645  00265E  EC75  F021         	call	_MSdelay	;wreg free
  1646  002662                     l5346:
  1647                           
  1648                           ;smart_main.c: 82:         if (tempar < 12 && (luz > 700 && luz < 1500)) {
  1649  002662  C0F1  F02E         	movff	_tempar,___flge@ff1
  1650  002666  C0F2  F02F         	movff	_tempar+1,___flge@ff1+1
  1651  00266A  C0F3  F030         	movff	_tempar+2,___flge@ff1+2
  1652  00266E  C0F4  F031         	movff	_tempar+3,___flge@ff1+3
  1653  002672  0E00               	movlw	0
  1654  002674  6E32               	movwf	___flge@ff2^0,c
  1655  002676  0E00               	movlw	0
  1656  002678  6E33               	movwf	(___flge@ff2+1)^0,c
  1657  00267A  0E40               	movlw	64
  1658  00267C  6E34               	movwf	(___flge@ff2+2)^0,c
  1659  00267E  0E41               	movlw	65
  1660  002680  6E35               	movwf	(___flge@ff2+3)^0,c
  1661  002682  ECC8  F01B         	call	___flge	;wreg free
  1662  002686  B0D8               	btfsc	status,0,c
  1663  002688  EF48  F013         	goto	u6101
  1664  00268C  EF4A  F013         	goto	u6100
  1665  002690                     u6101:
  1666  002690  EFE5  F011         	goto	l5292
  1667  002694                     u6100:
  1668  002694  0E00               	movlw	0
  1669  002696  6E2E               	movwf	___flge@ff1^0,c
  1670  002698  0E00               	movlw	0
  1671  00269A  6E2F               	movwf	(___flge@ff1+1)^0,c
  1672  00269C  0E2F               	movlw	47
  1673  00269E  6E30               	movwf	(___flge@ff1+2)^0,c
  1674  0026A0  0E44               	movlw	68
  1675  0026A2  6E31               	movwf	(___flge@ff1+3)^0,c
  1676  0026A4  C0ED  F032         	movff	_luz,___flge@ff2
  1677  0026A8  C0EE  F033         	movff	_luz+1,___flge@ff2+1
  1678  0026AC  C0EF  F034         	movff	_luz+2,___flge@ff2+2
  1679  0026B0  C0F0  F035         	movff	_luz+3,___flge@ff2+3
  1680  0026B4  ECC8  F01B         	call	___flge	;wreg free
  1681  0026B8  B0D8               	btfsc	status,0,c
  1682  0026BA  EF61  F013         	goto	u6111
  1683  0026BE  EF63  F013         	goto	u6110
  1684  0026C2                     u6111:
  1685  0026C2  EFE5  F011         	goto	l5292
  1686  0026C6                     u6110:
  1687  0026C6  C0ED  F02E         	movff	_luz,___flge@ff1
  1688  0026CA  C0EE  F02F         	movff	_luz+1,___flge@ff1+1
  1689  0026CE  C0EF  F030         	movff	_luz+2,___flge@ff1+2
  1690  0026D2  C0F0  F031         	movff	_luz+3,___flge@ff1+3
  1691  0026D6  0E00               	movlw	0
  1692  0026D8  6E32               	movwf	___flge@ff2^0,c
  1693  0026DA  0E80               	movlw	128
  1694  0026DC  6E33               	movwf	(___flge@ff2+1)^0,c
  1695  0026DE  0EBB               	movlw	187
  1696  0026E0  6E34               	movwf	(___flge@ff2+2)^0,c
  1697  0026E2  0E44               	movlw	68
  1698  0026E4  6E35               	movwf	(___flge@ff2+3)^0,c
  1699  0026E6  ECC8  F01B         	call	___flge	;wreg free
  1700  0026EA  B0D8               	btfsc	status,0,c
  1701  0026EC  EF7A  F013         	goto	u6121
  1702  0026F0  EF7C  F013         	goto	u6120
  1703  0026F4                     u6121:
  1704  0026F4  EFE5  F011         	goto	l5292
  1705  0026F8                     u6120:
  1706  0026F8                     
  1707                           ;smart_main.c: 83:             LATE0 = 1;
  1708  0026F8  808D               	bsf	3981,0,c	;volatile
  1709                           
  1710                           ;smart_main.c: 84:             LATE1 = 1;
  1711  0026FA  828D               	bsf	3981,1,c	;volatile
  1712                           
  1713                           ;smart_main.c: 85:             LATE2 = 1;
  1714  0026FC  848D               	bsf	3981,2,c	;volatile
  1715  0026FE                     
  1716                           ;smart_main.c: 86:             sprintf(Stemp, "%0.0fC", tempar);
  1717  0026FE  0E7A               	movlw	low _Stemp
  1718  002700  0100               	movlb	0	; () banked
  1719  002702  6FCE               	movwf	sprintf@s& (0+255),b
  1720  002704  0E01               	movlw	high _Stemp
  1721  002706  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1722  002708  0E0F               	movlw	low STR_2
  1723  00270A  6FD0               	movwf	sprintf@fmt& (0+255),b
  1724  00270C  0E08               	movlw	high STR_2
  1725  00270E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1726  002710  C0F1  F0D2         	movff	_tempar,?_sprintf+4
  1727  002714  C0F2  F0D3         	movff	_tempar+1,?_sprintf+5
  1728  002718  C0F3  F0D4         	movff	_tempar+2,?_sprintf+6
  1729  00271C  C0F4  F0D5         	movff	_tempar+3,?_sprintf+7
  1730  002720  ECD7  F020         	call	_sprintf	;wreg free
  1731  002724                     
  1732                           ;smart_main.c: 87:             LCD_String_xy(1, 0, Stemp);
  1733  002724  0E00               	movlw	0
  1734  002726  6E0B               	movwf	LCD_String_xy@pos^0,c
  1735  002728  0E7A               	movlw	low _Stemp
  1736  00272A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1737  00272C  0E01               	movlw	high _Stemp
  1738  00272E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1739  002730  0E01               	movlw	1
  1740  002732  EC49  F022         	call	_LCD_String_xy
  1741  002736                     
  1742                           ;smart_main.c: 88:             LCD_Custom_Char(0, character1);
  1743  002736  0EEA               	movlw	low _character1
  1744  002738  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1745  00273A  0E01               	movlw	high _character1
  1746  00273C  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1747  00273E  0E00               	movlw	0
  1748  002740  EC9A  F021         	call	_LCD_Custom_Char
  1749  002744                     
  1750                           ;smart_main.c: 89:             LCD_Command(0xc0);
  1751  002744  0EC0               	movlw	192
  1752  002746  EC29  F021         	call	_LCD_Command
  1753  00274A                     
  1754                           ;smart_main.c: 90:             LCD_Char(0);
  1755  00274A  0E00               	movlw	0
  1756  00274C  EC4F  F021         	call	_LCD_Char
  1757  002750                     
  1758                           ;smart_main.c: 91:             MSdelay(3000);
  1759  002750  0E0B               	movlw	11
  1760  002752  6E02               	movwf	(MSdelay@val+1)^0,c
  1761  002754  0EB8               	movlw	184
  1762  002756  6E01               	movwf	MSdelay@val^0,c
  1763  002758  EC75  F021         	call	_MSdelay	;wreg free
  1764  00275C  EFE5  F011         	goto	l5292
  1765  002760  EF07  F000         	goto	start
  1766  002764                     __end_of_main:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _ReadLUZ *****************
  1770 ;; Defined at:
  1771 ;;		line 12 in file "Sensor_luz.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  result          2    4[COMRAM] unsigned short 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  2    0[COMRAM] unsigned short 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1785 ;;      Params:         2       0       0       0       0       0       0       0       0
  1786 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1787 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1788 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1789 ;;Total ram usage:        6 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text1
  1800  003F14                     __ptext1:
  1801                           	callstack 0
  1802  003F14                     _ReadLUZ:
  1803                           	callstack 29
  1804  003F14                     
  1805                           ;Sensor_luz.c: 14:     uint16_t result;;Sensor_luz.c: 16:     TRISD = 0x00;
  1806  003F14  0E00               	movlw	0
  1807  003F16  6E95               	movwf	149,c	;volatile
  1808  003F18                     
  1809                           ;Sensor_luz.c: 17:     TRISA = 0xFF;
  1810  003F18  6892               	setf	146,c	;volatile
  1811                           
  1812                           ;Sensor_luz.c: 19:     OSCCONbits.IRCF = 0b111;
  1813  003F1A  0E70               	movlw	112
  1814  003F1C  12D3               	iorwf	211,f,c	;volatile
  1815                           
  1816                           ;Sensor_luz.c: 20:     OSCCONbits.SCS = 0b10;
  1817  003F1E  50D3               	movf	211,w,c	;volatile
  1818  003F20  0BFC               	andlw	-4
  1819  003F22  0902               	iorlw	2
  1820  003F24  6ED3               	movwf	211,c	;volatile
  1821                           
  1822                           ;Sensor_luz.c: 23:     ADCON1bits.PCFG = 0b1101;
  1823  003F26  50C1               	movf	193,w,c	;volatile
  1824  003F28  0BF0               	andlw	-16
  1825  003F2A  090D               	iorlw	13
  1826  003F2C  6EC1               	movwf	193,c	;volatile
  1827                           
  1828                           ;Sensor_luz.c: 24:     ADCON1bits.VCFG = 0b00;
  1829  003F2E  0ECF               	movlw	-49
  1830  003F30  16C1               	andwf	193,f,c	;volatile
  1831                           
  1832                           ;Sensor_luz.c: 25:     ADCON0bits.CHS = 0b0001;
  1833  003F32  50C2               	movf	194,w,c	;volatile
  1834  003F34  0BC3               	andlw	-61
  1835  003F36  0904               	iorlw	4
  1836  003F38  6EC2               	movwf	194,c	;volatile
  1837                           
  1838                           ;Sensor_luz.c: 26:     ADCON2bits.ACQT = 0b010;
  1839  003F3A  50C0               	movf	192,w,c	;volatile
  1840  003F3C  0BC7               	andlw	-57
  1841  003F3E  0910               	iorlw	16
  1842  003F40  6EC0               	movwf	192,c	;volatile
  1843                           
  1844                           ;Sensor_luz.c: 27:     ADCON2bits.ADCS = 0b001;
  1845  003F42  50C0               	movf	192,w,c	;volatile
  1846  003F44  0BF8               	andlw	-8
  1847  003F46  0901               	iorlw	1
  1848  003F48  6EC0               	movwf	192,c	;volatile
  1849  003F4A                     
  1850                           ;Sensor_luz.c: 28:     ADCON2bits.ADFM = 1;
  1851  003F4A  8EC0               	bsf	192,7,c	;volatile
  1852  003F4C                     
  1853                           ;Sensor_luz.c: 29:     ADCON0bits.ADON = 1;
  1854  003F4C  80C2               	bsf	194,0,c	;volatile
  1855  003F4E                     
  1856                           ;Sensor_luz.c: 44:         ADCON0bits.GO_DONE = 1;
  1857  003F4E  82C2               	bsf	194,1,c	;volatile
  1858  003F50                     l167:
  1859  003F50  B2C2               	btfsc	194,1,c	;volatile
  1860  003F52  EFAD  F01F         	goto	u5951
  1861  003F56  EFAF  F01F         	goto	u5950
  1862  003F5A                     u5951:
  1863  003F5A  EFA8  F01F         	goto	l167
  1864  003F5E                     u5950:
  1865  003F5E                     
  1866                           ;Sensor_luz.c: 46:         result = ADRESH;
  1867  003F5E  CFC4 F005          	movff	4036,ReadLUZ@result	;volatile
  1868  003F62  6A06               	clrf	(ReadLUZ@result+1)^0,c
  1869  003F64                     
  1870                           ;Sensor_luz.c: 47:         result = (result << 8) + ADRESL;
  1871  003F64  5005               	movf	ReadLUZ@result^0,w,c
  1872  003F66  6E03               	movwf	??_ReadLUZ^0,c
  1873  003F68  50C3               	movf	195,w,c	;volatile
  1874  003F6A  6E05               	movwf	ReadLUZ@result^0,c
  1875  003F6C  C003  F006         	movff	??_ReadLUZ,ReadLUZ@result+1
  1876  003F70                     
  1877                           ;Sensor_luz.c: 49:         return result;
  1878  003F70  C005  F001         	movff	ReadLUZ@result,?_ReadLUZ
  1879  003F74  C006  F002         	movff	ReadLUZ@result+1,?_ReadLUZ+1
  1880  003F78  0012               	return		;funcret
  1881  003F7A                     __end_of_ReadLUZ:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _ReadADC *****************
  1885 ;; Defined at:
  1886 ;;		line 13 in file "Temperatura.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  result          2    6[BANK0 ] unsigned short 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2    2[BANK0 ] unsigned short 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1900 ;;      Params:         0       2       0       0       0       0       0       0       0
  1901 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1902 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1903 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1904 ;;Total ram usage:        6 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 2
  1907 ;; This function calls:
  1908 ;;		___fladd
  1909 ;;		___fldiv
  1910 ;;		___flmul
  1911 ;;		___fltol
  1912 ;;		___xxtofl
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text2
  1919  003894                     __ptext2:
  1920                           	callstack 0
  1921  003894                     _ReadADC:
  1922                           	callstack 28
  1923  003894                     
  1924                           ;Temperatura.c: 15:     uint16_t result;;Temperatura.c: 17:     TRISD = 0x00;
  1925  003894  0E00               	movlw	0
  1926  003896  6E95               	movwf	149,c	;volatile
  1927  003898                     
  1928                           ;Temperatura.c: 18:     TRISA = 0xFF;
  1929  003898  6892               	setf	146,c	;volatile
  1930                           
  1931                           ;Temperatura.c: 20:     OSCCONbits.IRCF = 0b111;
  1932  00389A  0E70               	movlw	112
  1933  00389C  12D3               	iorwf	211,f,c	;volatile
  1934                           
  1935                           ;Temperatura.c: 21:     OSCCONbits.SCS = 0b10;
  1936  00389E  50D3               	movf	211,w,c	;volatile
  1937  0038A0  0BFC               	andlw	-4
  1938  0038A2  0902               	iorlw	2
  1939  0038A4  6ED3               	movwf	211,c	;volatile
  1940                           
  1941                           ;Temperatura.c: 24:     ADCON1bits.PCFG = 0b1110;
  1942  0038A6  50C1               	movf	193,w,c	;volatile
  1943  0038A8  0BF0               	andlw	-16
  1944  0038AA  090E               	iorlw	14
  1945  0038AC  6EC1               	movwf	193,c	;volatile
  1946                           
  1947                           ;Temperatura.c: 25:     ADCON1bits.VCFG = 0b00;
  1948  0038AE  0ECF               	movlw	-49
  1949  0038B0  16C1               	andwf	193,f,c	;volatile
  1950                           
  1951                           ;Temperatura.c: 26:     ADCON0bits.CHS = 0b0000;
  1952  0038B2  0EC3               	movlw	-61
  1953  0038B4  16C2               	andwf	194,f,c	;volatile
  1954                           
  1955                           ;Temperatura.c: 27:     ADCON2bits.ACQT = 0b010;
  1956  0038B6  50C0               	movf	192,w,c	;volatile
  1957  0038B8  0BC7               	andlw	-57
  1958  0038BA  0910               	iorlw	16
  1959  0038BC  6EC0               	movwf	192,c	;volatile
  1960                           
  1961                           ;Temperatura.c: 28:     ADCON2bits.ADCS = 0b001;
  1962  0038BE  50C0               	movf	192,w,c	;volatile
  1963  0038C0  0BF8               	andlw	-8
  1964  0038C2  0901               	iorlw	1
  1965  0038C4  6EC0               	movwf	192,c	;volatile
  1966  0038C6                     
  1967                           ;Temperatura.c: 29:     ADCON2bits.ADFM = 1;
  1968  0038C6  8EC0               	bsf	192,7,c	;volatile
  1969  0038C8                     
  1970                           ;Temperatura.c: 30:     ADCON0bits.ADON = 1;
  1971  0038C8  80C2               	bsf	194,0,c	;volatile
  1972  0038CA                     
  1973                           ;Temperatura.c: 45:         ADCON0bits.GO_DONE = 1;
  1974  0038CA  82C2               	bsf	194,1,c	;volatile
  1975  0038CC                     l142:
  1976  0038CC  B2C2               	btfsc	194,1,c	;volatile
  1977  0038CE  EF6B  F01C         	goto	u5941
  1978  0038D2  EF6D  F01C         	goto	u5940
  1979  0038D6                     u5941:
  1980  0038D6  EF66  F01C         	goto	l142
  1981  0038DA                     u5940:
  1982  0038DA                     
  1983                           ;Temperatura.c: 47:         result = ADRESH;
  1984  0038DA  CFC4 F066          	movff	4036,ReadADC@result	;volatile
  1985  0038DE  0100               	movlb	0	; () banked
  1986  0038E0  6B67               	clrf	(ReadADC@result+1)& (0+255),b
  1987  0038E2                     
  1988                           ; BSR set to: 0
  1989                           ;Temperatura.c: 48:         result = (result << 8) + ADRESL;
  1990  0038E2  5166               	movf	ReadADC@result& (0+255),w,b
  1991  0038E4  6F64               	movwf	??_ReadADC& (0+255),b
  1992  0038E6  50C3               	movf	195,w,c	;volatile
  1993  0038E8  6F66               	movwf	ReadADC@result& (0+255),b
  1994  0038EA  C064  F067         	movff	??_ReadADC,ReadADC@result+1
  1995  0038EE                     
  1996                           ; BSR set to: 0
  1997                           ;Temperatura.c: 49:         result = ((result*500.0)/1023.0)-49.5;
  1998  0038EE  0E00               	movlw	0
  1999  0038F0  6E4B               	movwf	___fladd@a^0,c
  2000  0038F2  0E00               	movlw	0
  2001  0038F4  6E4C               	movwf	(___fladd@a+1)^0,c
  2002  0038F6  0E46               	movlw	70
  2003  0038F8  6E4D               	movwf	(___fladd@a+2)^0,c
  2004  0038FA  0EC2               	movlw	194
  2005  0038FC  6E4E               	movwf	(___fladd@a+3)^0,c
  2006  0038FE  0E00               	movlw	0
  2007  003900  6E32               	movwf	___fldiv@a^0,c
  2008  003902  0EC0               	movlw	192
  2009  003904  6E33               	movwf	(___fldiv@a+1)^0,c
  2010  003906  0E7F               	movlw	127
  2011  003908  6E34               	movwf	(___fldiv@a+2)^0,c
  2012  00390A  0E44               	movlw	68
  2013  00390C  6E35               	movwf	(___fldiv@a+3)^0,c
  2014  00390E  0E00               	movlw	0
  2015  003910  6E19               	movwf	___flmul@a^0,c
  2016  003912  0E00               	movlw	0
  2017  003914  6E1A               	movwf	(___flmul@a+1)^0,c
  2018  003916  0EFA               	movlw	250
  2019  003918  6E1B               	movwf	(___flmul@a+2)^0,c
  2020  00391A  0E43               	movlw	67
  2021  00391C  6E1C               	movwf	(___flmul@a+3)^0,c
  2022  00391E  C066  F007         	movff	ReadADC@result,___xxtofl@val
  2023  003922  C067  F008         	movff	ReadADC@result+1,___xxtofl@val+1
  2024  003926  6A09               	clrf	(___xxtofl@val+2)^0,c
  2025  003928  6A0A               	clrf	(___xxtofl@val+3)^0,c
  2026  00392A  0E00               	movlw	0
  2027  00392C  ECA2  F019         	call	___xxtofl
  2028  003930  C007  F015         	movff	?___xxtofl,___flmul@b
  2029  003934  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  2030  003938  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  2031  00393C  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  2032  003940  ECBF  F00F         	call	___flmul	;wreg free
  2033  003944  C015  F02E         	movff	?___flmul,___fldiv@b
  2034  003948  C016  F02F         	movff	?___flmul+1,___fldiv@b+1
  2035  00394C  C017  F030         	movff	?___flmul+2,___fldiv@b+2
  2036  003950  C018  F031         	movff	?___flmul+3,___fldiv@b+3
  2037  003954  ECB2  F013         	call	___fldiv	;wreg free
  2038  003958  C02E  F047         	movff	?___fldiv,___fladd@b
  2039  00395C  C02F  F048         	movff	?___fldiv+1,___fladd@b+1
  2040  003960  C030  F049         	movff	?___fldiv+2,___fladd@b+2
  2041  003964  C031  F04A         	movff	?___fldiv+3,___fladd@b+3
  2042  003968  EC5F  F00D         	call	___fladd	;wreg free
  2043  00396C  C047  F057         	movff	?___fladd,___fltol@f1
  2044  003970  C048  F058         	movff	?___fladd+1,___fltol@f1+1
  2045  003974  C049  F059         	movff	?___fladd+2,___fltol@f1+2
  2046  003978  C04A  F05A         	movff	?___fladd+3,___fltol@f1+3
  2047  00397C  EC44  F01B         	call	___fltol	;wreg free
  2048  003980  C057  F066         	movff	?___fltol,ReadADC@result
  2049  003984  C058  F067         	movff	?___fltol+1,ReadADC@result+1
  2050  003988                     
  2051                           ;Temperatura.c: 51:         return result;
  2052  003988  C066  F062         	movff	ReadADC@result,?_ReadADC
  2053  00398C  C067  F063         	movff	ReadADC@result+1,?_ReadADC+1
  2054  003990  0012               	return		;funcret
  2055  003992                     __end_of_ReadADC:
  2056                           	callstack 0
  2057                           
  2058 ;; *************** function ___xxtofl *****************
  2059 ;; Defined at:
  2060 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  sign            1    wreg     unsigned char 
  2063 ;;  val             4    6[COMRAM] long 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  sign            1   14[COMRAM] unsigned char 
  2066 ;;  arg             4   16[COMRAM] unsigned long 
  2067 ;;  exp             1   15[COMRAM] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  4    6[COMRAM] unsigned char 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2077 ;;      Params:         4       0       0       0       0       0       0       0       0
  2078 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2079 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2080 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2081 ;;Total ram usage:       14 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;;		_ReadADC
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text3
  2093  003344                     __ptext3:
  2094                           	callstack 0
  2095  003344                     ___xxtofl:
  2096                           	callstack 29
  2097                           
  2098                           ;incstack = 0
  2099                           ;___xxtofl@sign stored from wreg
  2100  003344  6E0F               	movwf	___xxtofl@sign^0,c
  2101  003346  500F               	movf	___xxtofl@sign^0,w,c
  2102  003348  B4D8               	btfsc	status,2,c
  2103  00334A  EFA9  F019         	goto	u5841
  2104  00334E  EFAB  F019         	goto	u5840
  2105  003352                     u5841:
  2106  003352  EFCD  F019         	goto	l1059
  2107  003356                     u5840:
  2108  003356  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  2109  003358  EFB2  F019         	goto	u5850
  2110  00335C  EFB0  F019         	goto	u5851
  2111  003360                     u5851:
  2112  003360  EFCD  F019         	goto	l1059
  2113  003364                     u5850:
  2114  003364  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  2115  003368  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  2116  00336C  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  2117  003370  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  2118  003374  1E0B               	comf	??___xxtofl^0,f,c
  2119  003376  1E0C               	comf	(??___xxtofl+1)^0,f,c
  2120  003378  1E0D               	comf	(??___xxtofl+2)^0,f,c
  2121  00337A  1E0E               	comf	(??___xxtofl+3)^0,f,c
  2122  00337C  2A0B               	incf	??___xxtofl^0,f,c
  2123  00337E  0E00               	movlw	0
  2124  003380  220C               	addwfc	(??___xxtofl+1)^0,f,c
  2125  003382  220D               	addwfc	(??___xxtofl+2)^0,f,c
  2126  003384  220E               	addwfc	(??___xxtofl+3)^0,f,c
  2127  003386  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  2128  00338A  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  2129  00338E  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  2130  003392  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  2131  003396  EFD5  F019         	goto	l5076
  2132  00339A                     l1059:
  2133  00339A  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  2134  00339E  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2135  0033A2  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2136  0033A6  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2137  0033AA                     l5076:
  2138  0033AA  5007               	movf	___xxtofl@val^0,w,c
  2139  0033AC  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  2140  0033AE  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  2141  0033B0  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  2142  0033B2  A4D8               	btfss	status,2,c
  2143  0033B4  EFDE  F019         	goto	u5861
  2144  0033B8  EFE0  F019         	goto	u5860
  2145  0033BC                     u5861:
  2146  0033BC  EFEA  F019         	goto	l5082
  2147  0033C0                     u5860:
  2148  0033C0  0E00               	movlw	0
  2149  0033C2  6E07               	movwf	?___xxtofl^0,c
  2150  0033C4  0E00               	movlw	0
  2151  0033C6  6E08               	movwf	(?___xxtofl+1)^0,c
  2152  0033C8  0E00               	movlw	0
  2153  0033CA  6E09               	movwf	(?___xxtofl+2)^0,c
  2154  0033CC  0E00               	movlw	0
  2155  0033CE  6E0A               	movwf	(?___xxtofl+3)^0,c
  2156  0033D0  EF7B  F01A         	goto	l1062
  2157  0033D4                     l5082:
  2158  0033D4  0E96               	movlw	150
  2159  0033D6  6E10               	movwf	___xxtofl@exp^0,c
  2160  0033D8  EFF4  F019         	goto	l5086
  2161  0033DC                     l5084:
  2162  0033DC  2A10               	incf	___xxtofl@exp^0,f,c
  2163  0033DE  90D8               	bcf	status,0,c
  2164  0033E0  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  2165  0033E2  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  2166  0033E4  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  2167  0033E6  3211               	rrcf	___xxtofl@arg^0,f,c
  2168  0033E8                     l5086:
  2169  0033E8  0E00               	movlw	0
  2170  0033EA  1411               	andwf	___xxtofl@arg^0,w,c
  2171  0033EC  6E0B               	movwf	??___xxtofl^0,c
  2172  0033EE  0E00               	movlw	0
  2173  0033F0  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  2174  0033F2  6E0C               	movwf	(??___xxtofl+1)^0,c
  2175  0033F4  0E00               	movlw	0
  2176  0033F6  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  2177  0033F8  6E0D               	movwf	(??___xxtofl+2)^0,c
  2178  0033FA  0EFE               	movlw	254
  2179  0033FC  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  2180  0033FE  6E0E               	movwf	(??___xxtofl+3)^0,c
  2181  003400  500B               	movf	??___xxtofl^0,w,c
  2182  003402  100C               	iorwf	(??___xxtofl+1)^0,w,c
  2183  003404  100D               	iorwf	(??___xxtofl+2)^0,w,c
  2184  003406  100E               	iorwf	(??___xxtofl+3)^0,w,c
  2185  003408  A4D8               	btfss	status,2,c
  2186  00340A  EF09  F01A         	goto	u5871
  2187  00340E  EF0B  F01A         	goto	u5870
  2188  003412                     u5871:
  2189  003412  EFEE  F019         	goto	l5084
  2190  003416                     u5870:
  2191  003416  EF19  F01A         	goto	l1066
  2192  00341A                     l5088:
  2193  00341A  2A10               	incf	___xxtofl@exp^0,f,c
  2194  00341C  0E01               	movlw	1
  2195  00341E  2611               	addwf	___xxtofl@arg^0,f,c
  2196  003420  0E00               	movlw	0
  2197  003422  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  2198  003424  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  2199  003426  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  2200  003428  90D8               	bcf	status,0,c
  2201  00342A  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  2202  00342C  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  2203  00342E  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  2204  003430  3211               	rrcf	___xxtofl@arg^0,f,c
  2205  003432                     l1066:
  2206  003432  0E00               	movlw	0
  2207  003434  1411               	andwf	___xxtofl@arg^0,w,c
  2208  003436  6E0B               	movwf	??___xxtofl^0,c
  2209  003438  0E00               	movlw	0
  2210  00343A  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  2211  00343C  6E0C               	movwf	(??___xxtofl+1)^0,c
  2212  00343E  0E00               	movlw	0
  2213  003440  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  2214  003442  6E0D               	movwf	(??___xxtofl+2)^0,c
  2215  003444  0EFF               	movlw	255
  2216  003446  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  2217  003448  6E0E               	movwf	(??___xxtofl+3)^0,c
  2218  00344A  500B               	movf	??___xxtofl^0,w,c
  2219  00344C  100C               	iorwf	(??___xxtofl+1)^0,w,c
  2220  00344E  100D               	iorwf	(??___xxtofl+2)^0,w,c
  2221  003450  100E               	iorwf	(??___xxtofl+3)^0,w,c
  2222  003452  A4D8               	btfss	status,2,c
  2223  003454  EF2E  F01A         	goto	u5881
  2224  003458  EF30  F01A         	goto	u5880
  2225  00345C                     u5881:
  2226  00345C  EF0D  F01A         	goto	l5088
  2227  003460                     u5880:
  2228  003460  EF38  F01A         	goto	l5096
  2229  003464                     l5094:
  2230  003464  0610               	decf	___xxtofl@exp^0,f,c
  2231  003466  90D8               	bcf	status,0,c
  2232  003468  3611               	rlcf	___xxtofl@arg^0,f,c
  2233  00346A  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  2234  00346C  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  2235  00346E  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  2236  003470                     l5096:
  2237  003470  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  2238  003472  EF3D  F01A         	goto	u5891
  2239  003476  EF3F  F01A         	goto	u5890
  2240  00347A                     u5891:
  2241  00347A  EF47  F01A         	goto	l1073
  2242  00347E                     u5890:
  2243  00347E  0E02               	movlw	2
  2244  003480  6010               	cpfslt	___xxtofl@exp^0,c
  2245  003482  EF45  F01A         	goto	u5901
  2246  003486  EF47  F01A         	goto	u5900
  2247  00348A                     u5901:
  2248  00348A  EF32  F01A         	goto	l5094
  2249  00348E                     u5900:
  2250  00348E                     l1073:
  2251  00348E  B010               	btfsc	___xxtofl@exp^0,0,c
  2252  003490  EF4C  F01A         	goto	u5911
  2253  003494  EF4E  F01A         	goto	u5910
  2254  003498                     u5911:
  2255  003498  EF4F  F01A         	goto	l5102
  2256  00349C                     u5910:
  2257  00349C  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  2258  00349E                     l5102:
  2259  00349E  90D8               	bcf	status,0,c
  2260  0034A0  3210               	rrcf	___xxtofl@exp^0,f,c
  2261  0034A2  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  2262  0034A6  6A0C               	clrf	(??___xxtofl+1)^0,c
  2263  0034A8  6A0D               	clrf	(??___xxtofl+2)^0,c
  2264  0034AA  6A0E               	clrf	(??___xxtofl+3)^0,c
  2265  0034AC  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  2266  0034B0  6A0D               	clrf	(??___xxtofl+2)^0,c
  2267  0034B2  6A0C               	clrf	(??___xxtofl+1)^0,c
  2268  0034B4  6A0B               	clrf	??___xxtofl^0,c
  2269  0034B6  500B               	movf	??___xxtofl^0,w,c
  2270  0034B8  1211               	iorwf	___xxtofl@arg^0,f,c
  2271  0034BA  500C               	movf	(??___xxtofl+1)^0,w,c
  2272  0034BC  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  2273  0034BE  500D               	movf	(??___xxtofl+2)^0,w,c
  2274  0034C0  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  2275  0034C2  500E               	movf	(??___xxtofl+3)^0,w,c
  2276  0034C4  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  2277  0034C6  500F               	movf	___xxtofl@sign^0,w,c
  2278  0034C8  B4D8               	btfsc	status,2,c
  2279  0034CA  EF69  F01A         	goto	u5921
  2280  0034CE  EF6B  F01A         	goto	u5920
  2281  0034D2                     u5921:
  2282  0034D2  EF73  F01A         	goto	l5112
  2283  0034D6                     u5920:
  2284  0034D6  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  2285  0034D8  EF72  F01A         	goto	u5930
  2286  0034DC  EF70  F01A         	goto	u5931
  2287  0034E0                     u5931:
  2288  0034E0  EF73  F01A         	goto	l5112
  2289  0034E4                     u5930:
  2290  0034E4  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  2291  0034E6                     l5112:
  2292  0034E6  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  2293  0034EA  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  2294  0034EE  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  2295  0034F2  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  2296  0034F6                     l1062:
  2297  0034F6  0012               	return		;funcret
  2298  0034F8                     __end_of___xxtofl:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function _RTC_Calendario *****************
  2302 ;; Defined at:
  2303 ;;		line 85 in file "reloj.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  hours          10   57[BANK1 ] unsigned char [10]
  2308 ;;  mins           10   47[BANK1 ] unsigned char [10]
  2309 ;;  secs           10   37[BANK1 ] unsigned char [10]
  2310 ;;  year           10   27[BANK1 ] unsigned char [10]
  2311 ;;  month          10   17[BANK1 ] unsigned char [10]
  2312 ;;  date           10    7[BANK1 ] unsigned char [10]
  2313 ;;  days            7    0[BANK1 ] unsigned char [7]
  2314 ;;  AM_PM           1   68[BANK1 ] unsigned char 
  2315 ;;  Clock_type      1   67[BANK1 ] unsigned char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2325 ;;      Params:         0       0       0       0       0       0       0       0       0
  2326 ;;      Locals:         0       0      69       0       0       0       0       0       0
  2327 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2328 ;;      Totals:         0       3      69       0       0       0       0       0       0
  2329 ;;Total ram usage:       72 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; Hardware stack levels required when called: 9
  2332 ;; This function calls:
  2333 ;;		_I2C_Init
  2334 ;;		_I2C_Stop
  2335 ;;		_LCD_Clear
  2336 ;;		_LCD_Init
  2337 ;;		_LCD_String
  2338 ;;		_LCD_String_xy
  2339 ;;		_MSdelay
  2340 ;;		_RTC_Read_Calendar
  2341 ;;		_RTC_Read_Clock
  2342 ;;		_sprintf
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text4
  2349  002AFE                     __ptext4:
  2350                           	callstack 0
  2351  002AFE                     _RTC_Calendario:
  2352                           	callstack 21
  2353  002AFE                     
  2354                           ;reloj.c: 88:     char secs[10],mins[10],hours[10];;reloj.c: 89:     char date[10],month
      +                          [10],year[10];;reloj.c: 90:     char Clock_type = 0x06;
  2355  002AFE  0E06               	movlw	6
  2356  002B00  0101               	movlb	1	; () banked
  2357  002B02  6FD1               	movwf	RTC_Calendario@Clock_type& (0+255),b
  2358                           
  2359                           ;reloj.c: 91:     char AM_PM = 0x05;
  2360  002B04  0E05               	movlw	5
  2361  002B06  6FD2               	movwf	RTC_Calendario@AM_PM& (0+255),b
  2362  002B08                     
  2363                           ; BSR set to: 1
  2364                           ;reloj.c: 92:     char days[7] = {'S','M','T','W','t','F','s'};
  2365  002B08  EE21  F0D3         	lfsr	2,RTC_Calendario@F3531
  2366  002B0C  EE11  F08E         	lfsr	1,RTC_Calendario@days
  2367  002B10  0E06               	movlw	6
  2368  002B12                     u5961:
  2369  002B12  CFDB FFE3          	movff	plusw2,plusw1
  2370  002B16  06E8               	decf	wreg,f,c
  2371  002B18  E2FC               	bc	u5961
  2372  002B1A                     
  2373                           ; BSR set to: 1
  2374                           ;reloj.c: 93:     OSCCON=0x72;
  2375  002B1A  0E72               	movlw	114
  2376  002B1C  6ED3               	movwf	211,c	;volatile
  2377  002B1E                     
  2378                           ; BSR set to: 1
  2379                           ;reloj.c: 95:     I2C_Init();
  2380  002B1E  ECB8  F023         	call	_I2C_Init	;wreg free
  2381  002B22                     
  2382                           ;reloj.c: 96:     LCD_Init();
  2383  002B22  EC2F  F023         	call	_LCD_Init	;wreg free
  2384  002B26                     
  2385                           ;reloj.c: 97:     LCD_Clear();
  2386  002B26  ECE3  F023         	call	_LCD_Clear	;wreg free
  2387  002B2A                     
  2388                           ;reloj.c: 98:     MSdelay(10);
  2389  002B2A  0E00               	movlw	0
  2390  002B2C  6E02               	movwf	(MSdelay@val+1)^0,c
  2391  002B2E  0E0A               	movlw	10
  2392  002B30  6E01               	movwf	MSdelay@val^0,c
  2393  002B32  EC75  F021         	call	_MSdelay	;wreg free
  2394  002B36                     l5164:
  2395                           
  2396                           ;reloj.c: 100:     {;reloj.c: 101:         RTC_Read_Clock(0);
  2397  002B36  0E00               	movlw	0
  2398  002B38  EC04  F022         	call	_RTC_Read_Clock
  2399  002B3C                     
  2400                           ;reloj.c: 102:         if(hour & (1<<Clock_type)){
  2401  002B3C  C1D1  F0DE         	movff	RTC_Calendario@Clock_type,??_RTC_Calendario
  2402  002B40  0E01               	movlw	1
  2403  002B42  0100               	movlb	0	; () banked
  2404  002B44  6FDF               	movwf	(??_RTC_Calendario+1)& (0+255),b
  2405  002B46  0E00               	movlw	0
  2406  002B48  6FE0               	movwf	(??_RTC_Calendario+2)& (0+255),b
  2407  002B4A  2BDE               	incf	??_RTC_Calendario& (0+255),f,b
  2408  002B4C  EFAB  F015         	goto	u5974
  2409  002B50                     u5975:
  2410  002B50  90D8               	bcf	status,0,c
  2411  002B52  37DF               	rlcf	(??_RTC_Calendario+1)& (0+255),f,b
  2412  002B54  37E0               	rlcf	(??_RTC_Calendario+2)& (0+255),f,b
  2413  002B56                     u5974:
  2414  002B56  2FDE               	decfsz	??_RTC_Calendario& (0+255),f,b
  2415  002B58  EFA8  F015         	goto	u5975
  2416  002B5C  0101               	movlb	1	; () banked
  2417  002B5E  5124               	movf	_hour& (0+255),w,b
  2418  002B60  0100               	movlb	0	; () banked
  2419  002B62  17DF               	andwf	(??_RTC_Calendario+1)& (0+255),f,b
  2420  002B64  0101               	movlb	1	; () banked
  2421  002B66  5125               	movf	(_hour+1)& (0+255),w,b
  2422  002B68  0100               	movlb	0	; () banked
  2423  002B6A  17E0               	andwf	(??_RTC_Calendario+2)& (0+255),f,b
  2424  002B6C  51DF               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2425  002B6E  11E0               	iorwf	(??_RTC_Calendario+2)& (0+255),w,b
  2426  002B70  B4D8               	btfsc	status,2,c
  2427  002B72  EFBD  F015         	goto	u5981
  2428  002B76  EFBF  F015         	goto	u5980
  2429  002B7A                     u5981:
  2430  002B7A  EF3C  F016         	goto	l5188
  2431  002B7E                     u5980:
  2432  002B7E                     
  2433                           ; BSR set to: 0
  2434                           ;reloj.c: 104:             if(hour & (1<<AM_PM)){
  2435  002B7E  C1D2  F0DE         	movff	RTC_Calendario@AM_PM,??_RTC_Calendario
  2436  002B82  0E01               	movlw	1
  2437  002B84  6FDF               	movwf	(??_RTC_Calendario+1)& (0+255),b
  2438  002B86  0E00               	movlw	0
  2439  002B88  6FE0               	movwf	(??_RTC_Calendario+2)& (0+255),b
  2440  002B8A  2BDE               	incf	??_RTC_Calendario& (0+255),f,b
  2441  002B8C  EFCB  F015         	goto	u5994
  2442  002B90                     u5995:
  2443  002B90  90D8               	bcf	status,0,c
  2444  002B92  37DF               	rlcf	(??_RTC_Calendario+1)& (0+255),f,b
  2445  002B94  37E0               	rlcf	(??_RTC_Calendario+2)& (0+255),f,b
  2446  002B96                     u5994:
  2447  002B96  2FDE               	decfsz	??_RTC_Calendario& (0+255),f,b
  2448  002B98  EFC8  F015         	goto	u5995
  2449  002B9C  0101               	movlb	1	; () banked
  2450  002B9E  5124               	movf	_hour& (0+255),w,b
  2451  002BA0  0100               	movlb	0	; () banked
  2452  002BA2  17DF               	andwf	(??_RTC_Calendario+1)& (0+255),f,b
  2453  002BA4  0101               	movlb	1	; () banked
  2454  002BA6  5125               	movf	(_hour+1)& (0+255),w,b
  2455  002BA8  0100               	movlb	0	; () banked
  2456  002BAA  17E0               	andwf	(??_RTC_Calendario+2)& (0+255),f,b
  2457  002BAC  51DF               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2458  002BAE  11E0               	iorwf	(??_RTC_Calendario+2)& (0+255),w,b
  2459  002BB0  B4D8               	btfsc	status,2,c
  2460  002BB2  EFDD  F015         	goto	u6001
  2461  002BB6  EFDF  F015         	goto	u6000
  2462  002BBA                     u6001:
  2463  002BBA  EFEA  F015         	goto	l5172
  2464  002BBE                     u6000:
  2465  002BBE                     
  2466                           ; BSR set to: 0
  2467                           ;reloj.c: 105:                 LCD_String_xy(1,14,"PM");
  2468  002BBE  0E0E               	movlw	14
  2469  002BC0  6E0B               	movwf	LCD_String_xy@pos^0,c
  2470  002BC2  0E54               	movlw	low STR_5
  2471  002BC4  6E0C               	movwf	LCD_String_xy@msg^0,c
  2472  002BC6  0E08               	movlw	high STR_5
  2473  002BC8  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2474  002BCA  0E01               	movlw	1
  2475  002BCC  EC49  F022         	call	_LCD_String_xy
  2476                           
  2477                           ;reloj.c: 106:             }
  2478  002BD0  EFF3  F015         	goto	l5174
  2479  002BD4                     l5172:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;reloj.c: 108:                 LCD_String_xy(1,14,"AM");
  2483  002BD4  0E0E               	movlw	14
  2484  002BD6  6E0B               	movwf	LCD_String_xy@pos^0,c
  2485  002BD8  0E51               	movlw	low STR_6
  2486  002BDA  6E0C               	movwf	LCD_String_xy@msg^0,c
  2487  002BDC  0E08               	movlw	high STR_6
  2488  002BDE  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2489  002BE0  0E01               	movlw	1
  2490  002BE2  EC49  F022         	call	_LCD_String_xy
  2491  002BE6                     l5174:
  2492                           
  2493                           ;reloj.c: 111:             hour = hour & (0x1f);
  2494  002BE6  0E1F               	movlw	31
  2495  002BE8  0101               	movlb	1	; () banked
  2496  002BEA  1524               	andwf	_hour& (0+255),w,b
  2497  002BEC  6F24               	movwf	_hour& (0+255),b
  2498  002BEE  6B25               	clrf	(_hour+1)& (0+255),b
  2499  002BF0                     
  2500                           ; BSR set to: 1
  2501                           ;reloj.c: 112:             sprintf(secs,"%x ",sec);
  2502  002BF0  0EB3               	movlw	low RTC_Calendario@secs
  2503  002BF2  0100               	movlb	0	; () banked
  2504  002BF4  6FCE               	movwf	sprintf@s& (0+255),b
  2505  002BF6  0E01               	movlw	high RTC_Calendario@secs
  2506  002BF8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2507  002BFA  0E26               	movlw	low STR_7
  2508  002BFC  6FD0               	movwf	sprintf@fmt& (0+255),b
  2509  002BFE  0E08               	movlw	high STR_7
  2510  002C00  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2511  002C02  C128  F0D2         	movff	_sec,?_sprintf+4
  2512  002C06  C129  F0D3         	movff	_sec+1,?_sprintf+5
  2513  002C0A  ECD7  F020         	call	_sprintf	;wreg free
  2514  002C0E                     
  2515                           ;reloj.c: 113:             sprintf(mins,"%x:",min);
  2516  002C0E  0EBD               	movlw	low RTC_Calendario@mins
  2517  002C10  0100               	movlb	0	; () banked
  2518  002C12  6FCE               	movwf	sprintf@s& (0+255),b
  2519  002C14  0E01               	movlw	high RTC_Calendario@mins
  2520  002C16  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2521  002C18  0E2E               	movlw	low STR_8
  2522  002C1A  6FD0               	movwf	sprintf@fmt& (0+255),b
  2523  002C1C  0E08               	movlw	high STR_8
  2524  002C1E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2525  002C20  C126  F0D2         	movff	_min,?_sprintf+4
  2526  002C24  C127  F0D3         	movff	_min+1,?_sprintf+5
  2527  002C28  ECD7  F020         	call	_sprintf	;wreg free
  2528  002C2C                     
  2529                           ;reloj.c: 114:             sprintf(hours,"%x:",hour);
  2530  002C2C  0EC7               	movlw	low RTC_Calendario@hours
  2531  002C2E  0100               	movlb	0	; () banked
  2532  002C30  6FCE               	movwf	sprintf@s& (0+255),b
  2533  002C32  0E01               	movlw	high RTC_Calendario@hours
  2534  002C34  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2535  002C36  0E2E               	movlw	low STR_8
  2536  002C38  6FD0               	movwf	sprintf@fmt& (0+255),b
  2537  002C3A  0E08               	movlw	high STR_8
  2538  002C3C  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2539  002C3E  C124  F0D2         	movff	_hour,?_sprintf+4
  2540  002C42  C125  F0D3         	movff	_hour+1,?_sprintf+5
  2541  002C46  ECD7  F020         	call	_sprintf	;wreg free
  2542  002C4A                     
  2543                           ;reloj.c: 115:             LCD_String_xy(0,4,hours);
  2544  002C4A  0E04               	movlw	4
  2545  002C4C  6E0B               	movwf	LCD_String_xy@pos^0,c
  2546  002C4E  0EC7               	movlw	low RTC_Calendario@hours
  2547  002C50  6E0C               	movwf	LCD_String_xy@msg^0,c
  2548  002C52  0E01               	movlw	high RTC_Calendario@hours
  2549  002C54  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2550  002C56  0E00               	movlw	0
  2551  002C58  EC49  F022         	call	_LCD_String_xy
  2552  002C5C                     l5184:
  2553                           
  2554                           ;reloj.c: 116:             LCD_String(mins);
  2555  002C5C  0EBD               	movlw	low RTC_Calendario@mins
  2556  002C5E  6E09               	movwf	LCD_String@msg^0,c
  2557  002C60  0E01               	movlw	high RTC_Calendario@mins
  2558  002C62  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2559  002C64  EC4D  F020         	call	_LCD_String	;wreg free
  2560  002C68                     
  2561                           ;reloj.c: 117:             LCD_String(secs);
  2562  002C68  0EB3               	movlw	low RTC_Calendario@secs
  2563  002C6A  6E09               	movwf	LCD_String@msg^0,c
  2564  002C6C  0E01               	movlw	high RTC_Calendario@secs
  2565  002C6E  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2566  002C70  EC4D  F020         	call	_LCD_String	;wreg free
  2567                           
  2568                           ;reloj.c: 118:         }
  2569  002C74  EF79  F016         	goto	l5202
  2570  002C78                     l5188:
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;reloj.c: 121:             hour = hour & (0x3f);
  2574  002C78  0E3F               	movlw	63
  2575  002C7A  0101               	movlb	1	; () banked
  2576  002C7C  1524               	andwf	_hour& (0+255),w,b
  2577  002C7E  6F24               	movwf	_hour& (0+255),b
  2578  002C80  6B25               	clrf	(_hour+1)& (0+255),b
  2579  002C82                     
  2580                           ; BSR set to: 1
  2581                           ;reloj.c: 122:             sprintf(secs,"%x ",sec);
  2582  002C82  0EB3               	movlw	low RTC_Calendario@secs
  2583  002C84  0100               	movlb	0	; () banked
  2584  002C86  6FCE               	movwf	sprintf@s& (0+255),b
  2585  002C88  0E01               	movlw	high RTC_Calendario@secs
  2586  002C8A  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2587  002C8C  0E26               	movlw	low STR_7
  2588  002C8E  6FD0               	movwf	sprintf@fmt& (0+255),b
  2589  002C90  0E08               	movlw	high STR_7
  2590  002C92  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2591  002C94  C128  F0D2         	movff	_sec,?_sprintf+4
  2592  002C98  C129  F0D3         	movff	_sec+1,?_sprintf+5
  2593  002C9C  ECD7  F020         	call	_sprintf	;wreg free
  2594  002CA0                     
  2595                           ;reloj.c: 123:             sprintf(mins,"%x:",min);
  2596  002CA0  0EBD               	movlw	low RTC_Calendario@mins
  2597  002CA2  0100               	movlb	0	; () banked
  2598  002CA4  6FCE               	movwf	sprintf@s& (0+255),b
  2599  002CA6  0E01               	movlw	high RTC_Calendario@mins
  2600  002CA8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2601  002CAA  0E2E               	movlw	low STR_8
  2602  002CAC  6FD0               	movwf	sprintf@fmt& (0+255),b
  2603  002CAE  0E08               	movlw	high STR_8
  2604  002CB0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2605  002CB2  C126  F0D2         	movff	_min,?_sprintf+4
  2606  002CB6  C127  F0D3         	movff	_min+1,?_sprintf+5
  2607  002CBA  ECD7  F020         	call	_sprintf	;wreg free
  2608  002CBE                     
  2609                           ;reloj.c: 124:             sprintf(hours,"%x:",hour);
  2610  002CBE  0EC7               	movlw	low RTC_Calendario@hours
  2611  002CC0  0100               	movlb	0	; () banked
  2612  002CC2  6FCE               	movwf	sprintf@s& (0+255),b
  2613  002CC4  0E01               	movlw	high RTC_Calendario@hours
  2614  002CC6  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2615  002CC8  0E2E               	movlw	low STR_8
  2616  002CCA  6FD0               	movwf	sprintf@fmt& (0+255),b
  2617  002CCC  0E08               	movlw	high STR_8
  2618  002CCE  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2619  002CD0  C124  F0D2         	movff	_hour,?_sprintf+4
  2620  002CD4  C125  F0D3         	movff	_hour+1,?_sprintf+5
  2621  002CD8  ECD7  F020         	call	_sprintf	;wreg free
  2622  002CDC                     
  2623                           ;reloj.c: 125:             LCD_String_xy(0,4,hours);
  2624  002CDC  0E04               	movlw	4
  2625  002CDE  6E0B               	movwf	LCD_String_xy@pos^0,c
  2626  002CE0  0EC7               	movlw	low RTC_Calendario@hours
  2627  002CE2  6E0C               	movwf	LCD_String_xy@msg^0,c
  2628  002CE4  0E01               	movlw	high RTC_Calendario@hours
  2629  002CE6  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2630  002CE8  0E00               	movlw	0
  2631  002CEA  EC49  F022         	call	_LCD_String_xy
  2632  002CEE  EF2E  F016         	goto	l5184
  2633  002CF2                     l5202:
  2634                           
  2635                           ;reloj.c: 130:         RTC_Read_Calendar(3);
  2636  002CF2  0E03               	movlw	3
  2637  002CF4  ECAA  F020         	call	_RTC_Read_Calendar
  2638  002CF8                     
  2639                           ;reloj.c: 131:         I2C_Stop();
  2640  002CF8  ECC5  F023         	call	_I2C_Stop	;wreg free
  2641  002CFC                     
  2642                           ;reloj.c: 132:         sprintf(date,"%x-",Date);
  2643  002CFC  0E95               	movlw	low RTC_Calendario@date
  2644  002CFE  0100               	movlb	0	; () banked
  2645  002D00  6FCE               	movwf	sprintf@s& (0+255),b
  2646  002D02  0E01               	movlw	high RTC_Calendario@date
  2647  002D04  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2648  002D06  0E2A               	movlw	low STR_13
  2649  002D08  6FD0               	movwf	sprintf@fmt& (0+255),b
  2650  002D0A  0E08               	movlw	high STR_13
  2651  002D0C  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2652  002D0E  C120  F0D2         	movff	_Date,?_sprintf+4
  2653  002D12  C121  F0D3         	movff	_Date+1,?_sprintf+5
  2654  002D16  ECD7  F020         	call	_sprintf	;wreg free
  2655  002D1A                     
  2656                           ;reloj.c: 133:         sprintf(month,"%x-",Month);
  2657  002D1A  0E9F               	movlw	low RTC_Calendario@month
  2658  002D1C  0100               	movlb	0	; () banked
  2659  002D1E  6FCE               	movwf	sprintf@s& (0+255),b
  2660  002D20  0E01               	movlw	high RTC_Calendario@month
  2661  002D22  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2662  002D24  0E2A               	movlw	low STR_13
  2663  002D26  6FD0               	movwf	sprintf@fmt& (0+255),b
  2664  002D28  0E08               	movlw	high STR_13
  2665  002D2A  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2666  002D2C  C11E  F0D2         	movff	_Month,?_sprintf+4
  2667  002D30  C11F  F0D3         	movff	_Month+1,?_sprintf+5
  2668  002D34  ECD7  F020         	call	_sprintf	;wreg free
  2669  002D38                     
  2670                           ;reloj.c: 134:         sprintf(year,"%x ",Year);
  2671  002D38  0EA9               	movlw	low RTC_Calendario@year
  2672  002D3A  0100               	movlb	0	; () banked
  2673  002D3C  6FCE               	movwf	sprintf@s& (0+255),b
  2674  002D3E  0E01               	movlw	high RTC_Calendario@year
  2675  002D40  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2676  002D42  0E26               	movlw	low STR_7
  2677  002D44  6FD0               	movwf	sprintf@fmt& (0+255),b
  2678  002D46  0E08               	movlw	high STR_7
  2679  002D48  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2680  002D4A  C11C  F0D2         	movff	_Year,?_sprintf+4
  2681  002D4E  C11D  F0D3         	movff	_Year+1,?_sprintf+5
  2682  002D52  ECD7  F020         	call	_sprintf	;wreg free
  2683  002D56                     
  2684                           ;reloj.c: 135:         LCD_String_xy(2,2,date);
  2685  002D56  0E02               	movlw	2
  2686  002D58  6E0B               	movwf	LCD_String_xy@pos^0,c
  2687  002D5A  0E95               	movlw	low RTC_Calendario@date
  2688  002D5C  6E0C               	movwf	LCD_String_xy@msg^0,c
  2689  002D5E  0E01               	movlw	high RTC_Calendario@date
  2690  002D60  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2691  002D62  0E02               	movlw	2
  2692  002D64  EC49  F022         	call	_LCD_String_xy
  2693  002D68                     
  2694                           ;reloj.c: 136:         LCD_String(month);
  2695  002D68  0E9F               	movlw	low RTC_Calendario@month
  2696  002D6A  6E09               	movwf	LCD_String@msg^0,c
  2697  002D6C  0E01               	movlw	high RTC_Calendario@month
  2698  002D6E  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2699  002D70  EC4D  F020         	call	_LCD_String	;wreg free
  2700  002D74                     
  2701                           ;reloj.c: 137:         LCD_String(year);
  2702  002D74  0EA9               	movlw	low RTC_Calendario@year
  2703  002D76  6E09               	movwf	LCD_String@msg^0,c
  2704  002D78  0E01               	movlw	high RTC_Calendario@year
  2705  002D7A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2706  002D7C  EC4D  F020         	call	_LCD_String	;wreg free
  2707                           
  2708                           ;reloj.c: 140:         switch(days[Day])
  2709  002D80  EFFA  F016         	goto	l5262
  2710  002D84                     l5218:
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;reloj.c: 143:                         LCD_String("Sun");
  2714  002D84  0E42               	movlw	low STR_16
  2715  002D86  6E09               	movwf	LCD_String@msg^0,c
  2716  002D88  0E08               	movlw	high STR_16
  2717  002D8A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2718  002D8C  EC4D  F020         	call	_LCD_String	;wreg free
  2719  002D90  EF2B  F017         	goto	l279
  2720  002D94                     l5224:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;reloj.c: 147:                         LCD_String("Mon");
  2724  002D94  0E3E               	movlw	low STR_17
  2725  002D96  6E09               	movwf	LCD_String@msg^0,c
  2726  002D98  0E08               	movlw	high STR_17
  2727  002D9A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2728  002D9C  EC4D  F020         	call	_LCD_String	;wreg free
  2729  002DA0  EF2B  F017         	goto	l279
  2730  002DA4                     l5230:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;reloj.c: 151:                         LCD_String("Tue");
  2734  002DA4  0E36               	movlw	low STR_18
  2735  002DA6  6E09               	movwf	LCD_String@msg^0,c
  2736  002DA8  0E08               	movlw	high STR_18
  2737  002DAA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2738  002DAC  EC4D  F020         	call	_LCD_String	;wreg free
  2739  002DB0  EF2B  F017         	goto	l279
  2740  002DB4                     l5236:
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;reloj.c: 155:                         LCD_String("Wed");
  2744  002DB4  0E32               	movlw	low STR_19
  2745  002DB6  6E09               	movwf	LCD_String@msg^0,c
  2746  002DB8  0E08               	movlw	high STR_19
  2747  002DBA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2748  002DBC  EC4D  F020         	call	_LCD_String	;wreg free
  2749  002DC0  EF2B  F017         	goto	l279
  2750  002DC4                     l5242:
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;reloj.c: 159:                         LCD_String("Thu");
  2754  002DC4  0E4A               	movlw	low STR_20
  2755  002DC6  6E09               	movwf	LCD_String@msg^0,c
  2756  002DC8  0E08               	movlw	high STR_20
  2757  002DCA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2758  002DCC  EC4D  F020         	call	_LCD_String	;wreg free
  2759  002DD0  EF2B  F017         	goto	l279
  2760  002DD4                     l5248:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;reloj.c: 163:                         LCD_String("Fri");
  2764  002DD4  0E3A               	movlw	low STR_21
  2765  002DD6  6E09               	movwf	LCD_String@msg^0,c
  2766  002DD8  0E08               	movlw	high STR_21
  2767  002DDA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2768  002DDC  EC4D  F020         	call	_LCD_String	;wreg free
  2769  002DE0  EF2B  F017         	goto	l279
  2770  002DE4                     l5254:
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;reloj.c: 167:                         LCD_String("Sat");
  2774  002DE4  0E46               	movlw	low STR_22
  2775  002DE6  6E09               	movwf	LCD_String@msg^0,c
  2776  002DE8  0E08               	movlw	high STR_22
  2777  002DEA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2778  002DEC  EC4D  F020         	call	_LCD_String	;wreg free
  2779  002DF0  EF2B  F017         	goto	l279
  2780  002DF4                     l5262:
  2781  002DF4  0E8E               	movlw	low RTC_Calendario@days
  2782  002DF6  0101               	movlb	1	; () banked
  2783  002DF8  2522               	addwf	_Day& (0+255),w,b
  2784  002DFA  6ED9               	movwf	fsr2l,c
  2785  002DFC  0E01               	movlw	high RTC_Calendario@days
  2786  002DFE  2123               	addwfc	(_Day+1)& (0+255),w,b
  2787  002E00  6EDA               	movwf	fsr2h,c
  2788  002E02  50DF               	movf	indf2,w,c
  2789  002E04  0100               	movlb	0	; () banked
  2790  002E06  6FDE               	movwf	??_RTC_Calendario& (0+255),b
  2791  002E08  6BDF               	clrf	(??_RTC_Calendario+1)& (0+255),b
  2792                           
  2793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2794                           ; Switch size 1, requested type "simple"
  2795                           ; Number of cases is 1, Range of values is 0 to 0
  2796                           ; switch strategies available:
  2797                           ; Name         Instructions Cycles
  2798                           ; simple_byte            4     3 (average)
  2799                           ;	Chosen strategy is simple_byte
  2800  002E0A  51DF               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2801  002E0C  0A00               	xorlw	0	; case 0
  2802  002E0E  B4D8               	btfsc	status,2,c
  2803  002E10  EF0C  F017         	goto	l5446
  2804  002E14  EF9B  F015         	goto	l5164
  2805  002E18                     l5446:
  2806                           
  2807                           ; BSR set to: 0
  2808                           ; Switch size 1, requested type "simple"
  2809                           ; Number of cases is 7, Range of values is 70 to 116
  2810                           ; switch strategies available:
  2811                           ; Name         Instructions Cycles
  2812                           ; simple_byte           22    12 (average)
  2813                           ;	Chosen strategy is simple_byte
  2814  002E18  51DE               	movf	??_RTC_Calendario& (0+255),w,b
  2815  002E1A  0A46               	xorlw	70	; case 70
  2816  002E1C  B4D8               	btfsc	status,2,c
  2817  002E1E  EFF2  F016         	goto	l5254
  2818  002E22  0A0B               	xorlw	11	; case 77
  2819  002E24  B4D8               	btfsc	status,2,c
  2820  002E26  EFD2  F016         	goto	l5230
  2821  002E2A  0A1E               	xorlw	30	; case 83
  2822  002E2C  B4D8               	btfsc	status,2,c
  2823  002E2E  EFCA  F016         	goto	l5224
  2824  002E32  0A07               	xorlw	7	; case 84
  2825  002E34  B4D8               	btfsc	status,2,c
  2826  002E36  EFDA  F016         	goto	l5236
  2827  002E3A  0A03               	xorlw	3	; case 87
  2828  002E3C  B4D8               	btfsc	status,2,c
  2829  002E3E  EFE2  F016         	goto	l5242
  2830  002E42  0A24               	xorlw	36	; case 115
  2831  002E44  B4D8               	btfsc	status,2,c
  2832  002E46  EFC2  F016         	goto	l5218
  2833  002E4A  0A07               	xorlw	7	; case 116
  2834  002E4C  B4D8               	btfsc	status,2,c
  2835  002E4E  EFEA  F016         	goto	l5248
  2836  002E52  EF9B  F015         	goto	l5164
  2837  002E56                     l279:
  2838  002E56  0012               	return		;funcret
  2839  002E58                     __end_of_RTC_Calendario:
  2840                           	callstack 0
  2841                           
  2842 ;; *************** function _sprintf *****************
  2843 ;; Defined at:
  2844 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  s               2  110[BANK0 ] PTR unsigned char 
  2847 ;;		 -> RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), 
  2848 ;;		 -> RTC_Calendario@mins(10), RTC_Calendario@secs(10), Stemp(20), 
  2849 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  2850 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
  2851 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  2852 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  f               6  120[BANK0 ] struct _IO_FILE
  2855 ;;  ap              2  118[BANK0 ] PTR void [1]
  2856 ;;		 -> ?_sprintf(2), 
  2857 ;;  ret             2    0        int 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  2  110[BANK0 ] int 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2867 ;;      Params:         0       8       0       0       0       0       0       0       0
  2868 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2870 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2871 ;;Total ram usage:       16 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 8
  2874 ;; This function calls:
  2875 ;;		_vfprintf
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;;		_RTC_Calendario
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text5
  2883  0041AE                     __ptext5:
  2884                           	callstack 0
  2885  0041AE                     _sprintf:
  2886                           	callstack 22
  2887  0041AE  0ED2               	movlw	low (?_sprintf+4)
  2888  0041B0  0100               	movlb	0	; () banked
  2889  0041B2  6FD6               	movwf	sprintf@ap& (0+255),b
  2890  0041B4  0E00               	movlw	high (?_sprintf+4)
  2891  0041B6  6FD7               	movwf	(sprintf@ap+1)& (0+255),b
  2892  0041B8  C0CE  F0D8         	movff	sprintf@s,sprintf@f
  2893  0041BC  C0CF  F0D9         	movff	sprintf@s+1,sprintf@f+1
  2894  0041C0                     
  2895                           ; BSR set to: 0
  2896  0041C0  0E00               	movlw	0
  2897  0041C2  6FDB               	movwf	(sprintf@f+3)& (0+255),b
  2898  0041C4  0E00               	movlw	0
  2899  0041C6  6FDA               	movwf	(sprintf@f+2)& (0+255),b
  2900  0041C8                     
  2901                           ; BSR set to: 0
  2902  0041C8  0E00               	movlw	0
  2903  0041CA  6FDD               	movwf	(sprintf@f+5)& (0+255),b
  2904  0041CC  0E00               	movlw	0
  2905  0041CE  6FDC               	movwf	(sprintf@f+4)& (0+255),b
  2906  0041D0                     
  2907                           ; BSR set to: 0
  2908  0041D0  0ED8               	movlw	low sprintf@f
  2909  0041D2  6FC6               	movwf	vfprintf@fp& (0+255),b
  2910  0041D4  0E00               	movlw	high sprintf@f
  2911  0041D6  6FC7               	movwf	(vfprintf@fp+1)& (0+255),b
  2912  0041D8  C0D0  F0C8         	movff	sprintf@fmt,vfprintf@fmt
  2913  0041DC  C0D1  F0C9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2914  0041E0  0ED6               	movlw	low sprintf@ap
  2915  0041E2  6FCA               	movwf	vfprintf@ap& (0+255),b
  2916  0041E4  0E00               	movlw	high sprintf@ap
  2917  0041E6  6FCB               	movwf	(vfprintf@ap+1)& (0+255),b
  2918  0041E8  ECBD  F01F         	call	_vfprintf	;wreg free
  2919  0041EC  0100               	movlb	0	; () banked
  2920  0041EE  51DA               	movf	(sprintf@f+2)& (0+255),w,b
  2921  0041F0  25CE               	addwf	sprintf@s& (0+255),w,b
  2922  0041F2  6ED9               	movwf	fsr2l,c
  2923  0041F4  51DB               	movf	(sprintf@f+3)& (0+255),w,b
  2924  0041F6  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  2925  0041F8  6EDA               	movwf	fsr2h,c
  2926  0041FA  0E00               	movlw	0
  2927  0041FC  6EDF               	movwf	indf2,c
  2928  0041FE                     
  2929                           ; BSR set to: 0
  2930  0041FE  0012               	return		;funcret
  2931  004200                     __end_of_sprintf:
  2932                           	callstack 0
  2933                           
  2934 ;; *************** function _vfprintf *****************
  2935 ;; Defined at:
  2936 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  fp              2  102[BANK0 ] PTR struct _IO_FILE
  2939 ;;		 -> sprintf@f(6), 
  2940 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  2941 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
  2942 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  2943 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
  2944 ;;  ap              2  106[BANK0 ] PTR PTR void 
  2945 ;;		 -> sprintf@ap(2), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  2948 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
  2949 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  2950 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  2  102[BANK0 ] int 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2960 ;;      Params:         0       6       0       0       0       0       0       0       0
  2961 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2963 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2964 ;;Total ram usage:        8 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 7
  2967 ;; This function calls:
  2968 ;;		_vfpfcnvrt
  2969 ;; This function is called by:
  2970 ;;		_sprintf
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text6
  2975  003F7A                     __ptext6:
  2976                           	callstack 0
  2977  003F7A                     _vfprintf:
  2978                           	callstack 22
  2979  003F7A                     
  2980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2981  003F7A  C0C8  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  2982  003F7E  C0C9  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2983  003F82                     
  2984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2985  003F82  0E00               	movlw	0
  2986  003F84  0100               	movlb	0	; () banked
  2987  003F86  6FF6               	movwf	(_nout+1)& (0+255),b
  2988  003F88  0E00               	movlw	0
  2989  003F8A  6FF5               	movwf	_nout& (0+255),b
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2992  003F8C  EFDB  F01F         	goto	l4998
  2993  003F90                     l4996:
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2997  003F90  C0C6  F0A6         	movff	vfprintf@fp,vfpfcnvrt@fp
  2998  003F94  C0C7  F0A7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2999  003F98  0ECC               	movlw	low vfprintf@cfmt
  3000  003F9A  6FA8               	movwf	vfpfcnvrt@fmt& (0+255),b
  3001  003F9C  0E00               	movlw	high vfprintf@cfmt
  3002  003F9E  6FA9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3003  003FA0  C0CA  F0AA         	movff	vfprintf@ap,vfpfcnvrt@ap
  3004  003FA4  C0CB  F0AB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3005  003FA8  EC58  F00A         	call	_vfpfcnvrt	;wreg free
  3006  003FAC  0100               	movlb	0	; () banked
  3007  003FAE  51A6               	movf	?_vfpfcnvrt& (0+255),w,b
  3008  003FB0  27F5               	addwf	_nout& (0+255),f,b
  3009  003FB2  51A7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3010  003FB4  23F6               	addwfc	(_nout+1)& (0+255),f,b
  3011  003FB6                     l4998:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3015  003FB6  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  3016  003FBA  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3017  003FBE                     	if	0	;tblptru may be non-zero
  3018  003FBE                     	endif
  3019  003FBE                     	if	0	;tblptru may be non-zero
  3020  003FBE                     	endif
  3021  003FBE  0008               	tblrd		*
  3022  003FC0  50F5               	movf	tablat,w,c
  3023  003FC2  0900               	iorlw	0
  3024  003FC4  A4D8               	btfss	status,2,c
  3025  003FC6  EFE7  F01F         	goto	u5821
  3026  003FCA  EFE9  F01F         	goto	u5820
  3027  003FCE                     u5821:
  3028  003FCE  EFC8  F01F         	goto	l4996
  3029  003FD2                     u5820:
  3030  003FD2                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3033  003FD2  C0F5  F0C6         	movff	_nout,?_vfprintf
  3034  003FD6  C0F6  F0C7         	movff	_nout+1,?_vfprintf+1
  3035  003FDA                     
  3036                           ; BSR set to: 0
  3037  003FDA  0012               	return		;funcret
  3038  003FDC                     __end_of_vfprintf:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _vfpfcnvrt *****************
  3042 ;; Defined at:
  3043 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  3046 ;;		 -> sprintf@f(6), 
  3047 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  3048 ;;		 -> vfprintf@cfmt(2), 
  3049 ;;  ap              2   74[BANK0 ] PTR PTR void 
  3050 ;;		 -> sprintf@ap(2), 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  llu             8   80[BANK0 ] unsigned long long 
  3053 ;;  ll              8    0        long long 
  3054 ;;  f               4   94[BANK0 ] long long 
  3055 ;;  ct              3   98[BANK0 ] unsigned char [3]
  3056 ;;  vp              3    0        PTR void 
  3057 ;;  cp              3    0        PTR unsigned char 
  3058 ;;  done            2   88[BANK0 ] int 
  3059 ;;  i               2    0        int 
  3060 ;;  c               1  101[BANK0 ] unsigned char 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  2   70[BANK0 ] int 
  3063 ;; Registers used:
  3064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3070 ;;      Params:         0       6       0       0       0       0       0       0       0
  3071 ;;      Locals:         0      22       0       0       0       0       0       0       0
  3072 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3073 ;;      Totals:         0      32       0       0       0       0       0       0       0
  3074 ;;Total ram usage:       32 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; Hardware stack levels required when called: 6
  3077 ;; This function calls:
  3078 ;;		_atoi
  3079 ;;		_efgtoa
  3080 ;;		_fputc
  3081 ;;		_isdigit
  3082 ;;		_isupper
  3083 ;;		_strncmp
  3084 ;;		_tolower
  3085 ;;		_xtoa
  3086 ;; This function is called by:
  3087 ;;		_vfprintf
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text7
  3092  0014B0                     __ptext7:
  3093                           	callstack 0
  3094  0014B0                     _vfpfcnvrt:
  3095                           	callstack 22
  3096  0014B0                     
  3097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3098  0014B0  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3099  0014B4  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3100  0014B8  CFDE FFF6          	movff	postinc2,tblptrl
  3101  0014BC  CFDD FFF7          	movff	postdec2,tblptrh
  3102  0014C0                     	if	0	;tblptru may be non-zero
  3103  0014C0                     	endif
  3104  0014C0                     	if	0	;tblptru may be non-zero
  3105  0014C0                     	endif
  3106  0014C0  0008               	tblrd		*
  3107  0014C2  50F5               	movf	tablat,w,c
  3108  0014C4  0A25               	xorlw	37
  3109  0014C6  A4D8               	btfss	status,2,c
  3110  0014C8  EF68  F00A         	goto	u5541
  3111  0014CC  EF6A  F00A         	goto	u5540
  3112  0014D0                     u5541:
  3113  0014D0  EF43  F00D         	goto	l4916
  3114  0014D4                     u5540:
  3115  0014D4                     
  3116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3117  0014D4  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3118  0014D8  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3119  0014DC  2ADE               	incf	postinc2,f,c
  3120  0014DE  0E00               	movlw	0
  3121  0014E0  22DD               	addwfc	postdec2,f,c
  3122  0014E2                     
  3123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3124  0014E2  0E00               	movlw	0
  3125  0014E4  0100               	movlb	0	; () banked
  3126  0014E6  6FF8               	movwf	(_width+1)& (0+255),b
  3127  0014E8  0E00               	movlw	0
  3128  0014EA  6FF7               	movwf	_width& (0+255),b
  3129  0014EC  C0F7  F0FB         	movff	_width,_flags
  3130  0014F0  C0F8  F0FC         	movff	_width+1,_flags+1
  3131  0014F4                     
  3132                           ; BSR set to: 0
  3133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3134  0014F4  69F9               	setf	_prec& (0+255),b
  3135  0014F6  69FA               	setf	(_prec+1)& (0+255),b
  3136  0014F8                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  3139  0014F8  0E00               	movlw	0
  3140  0014FA  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3141  0014FC  0E00               	movlw	0
  3142  0014FE  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3145  001500  EFC8  F00A         	goto	l4824
  3146  001504                     l4798:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  3150  001504  81FB               	bsf	_flags& (0+255),0,b
  3151  001506                     l4800:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  3155  001506  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3156  00150A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3157  00150E  2ADE               	incf	postinc2,f,c
  3158  001510  0E00               	movlw	0
  3159  001512  22DD               	addwfc	postdec2,f,c
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  3162  001514  EFC8  F00A         	goto	l4824
  3163  001518                     l4802:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  3167  001518  83FB               	bsf	_flags& (0+255),1,b
  3168  00151A  EF83  F00A         	goto	l4800
  3169  00151E                     l4806:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  3173  00151E  85FB               	bsf	_flags& (0+255),2,b
  3174  001520  EF83  F00A         	goto	l4800
  3175  001524                     l4810:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  3179  001524  87FB               	bsf	_flags& (0+255),3,b
  3180  001526  EF83  F00A         	goto	l4800
  3181  00152A                     l4814:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  3185  00152A  89FB               	bsf	_flags& (0+255),4,b
  3186  00152C  EF83  F00A         	goto	l4800
  3187  001530                     l4818:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  3191  001530  0E00               	movlw	0
  3192  001532  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3193  001534  0E01               	movlw	1
  3194  001536  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  3197  001538  EFC8  F00A         	goto	l4824
  3198  00153C                     l4822:
  3199                           
  3200                           ; BSR set to: 0
  3201  00153C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3202  001540  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3203  001544  CFDE FFF6          	movff	postinc2,tblptrl
  3204  001548  CFDD FFF7          	movff	postdec2,tblptrh
  3205  00154C                     	if	0	;tblptru may be non-zero
  3206  00154C                     	endif
  3207  00154C                     	if	0	;tblptru may be non-zero
  3208  00154C                     	endif
  3209  00154C  0008               	tblrd		*
  3210  00154E  50F5               	movf	tablat,w,c
  3211  001550  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3212  001552  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3213                           
  3214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3215                           ; Switch size 1, requested type "simple"
  3216                           ; Number of cases is 1, Range of values is 0 to 0
  3217                           ; switch strategies available:
  3218                           ; Name         Instructions Cycles
  3219                           ; simple_byte            4     3 (average)
  3220                           ;	Chosen strategy is simple_byte
  3221  001554  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3222  001556  0A00               	xorlw	0	; case 0
  3223  001558  B4D8               	btfsc	status,2,c
  3224  00155A  EFB1  F00A         	goto	l5448
  3225  00155E  EF98  F00A         	goto	l4818
  3226  001562                     l5448:
  3227                           
  3228                           ; BSR set to: 0
  3229                           ; Switch size 1, requested type "simple"
  3230                           ; Number of cases is 5, Range of values is 32 to 48
  3231                           ; switch strategies available:
  3232                           ; Name         Instructions Cycles
  3233                           ; simple_byte           16     9 (average)
  3234                           ;	Chosen strategy is simple_byte
  3235  001562  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3236  001564  0A20               	xorlw	32	; case 32
  3237  001566  B4D8               	btfsc	status,2,c
  3238  001568  EF92  F00A         	goto	l4810
  3239  00156C  0A03               	xorlw	3	; case 35
  3240  00156E  B4D8               	btfsc	status,2,c
  3241  001570  EF95  F00A         	goto	l4814
  3242  001574  0A08               	xorlw	8	; case 43
  3243  001576  B4D8               	btfsc	status,2,c
  3244  001578  EF8F  F00A         	goto	l4806
  3245  00157C  0A06               	xorlw	6	; case 45
  3246  00157E  B4D8               	btfsc	status,2,c
  3247  001580  EF82  F00A         	goto	l4798
  3248  001584  0A1D               	xorlw	29	; case 48
  3249  001586  B4D8               	btfsc	status,2,c
  3250  001588  EF8C  F00A         	goto	l4802
  3251  00158C  EF98  F00A         	goto	l4818
  3252  001590                     l4824:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3256  001590  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  3257  001592  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3258  001594  B4D8               	btfsc	status,2,c
  3259  001596  EFCF  F00A         	goto	u5551
  3260  00159A  EFD1  F00A         	goto	u5550
  3261  00159E                     u5551:
  3262  00159E  EF9E  F00A         	goto	l4822
  3263  0015A2                     u5550:
  3264  0015A2                     
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  3267  0015A2  A1FB               	btfss	_flags& (0+255),0,b
  3268  0015A4  EFD6  F00A         	goto	u5561
  3269  0015A8  EFD8  F00A         	goto	u5560
  3270  0015AC                     u5561:
  3271  0015AC  EFD9  F00A         	goto	l4828
  3272  0015B0                     u5560:
  3273  0015B0                     
  3274                           ; BSR set to: 0
  3275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  3276  0015B0  93FB               	bcf	_flags& (0+255),1,b
  3277  0015B2                     l4828:
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3281  0015B2  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3282  0015B6  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3283  0015BA  CFDE FFF6          	movff	postinc2,tblptrl
  3284  0015BE  CFDD FFF7          	movff	postdec2,tblptrh
  3285  0015C2                     	if	0	;tblptru may be non-zero
  3286  0015C2                     	endif
  3287  0015C2                     	if	0	;tblptru may be non-zero
  3288  0015C2                     	endif
  3289  0015C2  0008               	tblrd		*
  3290  0015C4  50F5               	movf	tablat,w,c
  3291  0015C6  0A2E               	xorlw	46
  3292  0015C8  A4D8               	btfss	status,2,c
  3293  0015CA  EFE9  F00A         	goto	u5571
  3294  0015CE  EFEB  F00A         	goto	u5570
  3295  0015D2                     u5571:
  3296  0015D2  EF69  F00B         	goto	l4848
  3297  0015D6                     u5570:
  3298  0015D6                     
  3299                           ; BSR set to: 0
  3300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3301  0015D6  0E00               	movlw	0
  3302  0015D8  6FFA               	movwf	(_prec+1)& (0+255),b
  3303  0015DA  0E00               	movlw	0
  3304  0015DC  6FF9               	movwf	_prec& (0+255),b
  3305  0015DE                     
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3308  0015DE  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3309  0015E2  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3310  0015E6  2ADE               	incf	postinc2,f,c
  3311  0015E8  0E00               	movlw	0
  3312  0015EA  22DD               	addwfc	postdec2,f,c
  3313  0015EC                     
  3314                           ; BSR set to: 0
  3315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3316  0015EC  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3317  0015F0  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3318  0015F4  CFDE FFF6          	movff	postinc2,tblptrl
  3319  0015F8  CFDD FFF7          	movff	postdec2,tblptrh
  3320  0015FC                     	if	0	;tblptru may be non-zero
  3321  0015FC                     	endif
  3322  0015FC                     	if	0	;tblptru may be non-zero
  3323  0015FC                     	endif
  3324  0015FC  0008               	tblrd		*
  3325  0015FE  50F5               	movf	tablat,w,c
  3326  001600  0A2A               	xorlw	42
  3327  001602  A4D8               	btfss	status,2,c
  3328  001604  EF06  F00B         	goto	u5581
  3329  001608  EF08  F00B         	goto	u5580
  3330  00160C                     u5581:
  3331  00160C  EF25  F00B         	goto	l4838
  3332  001610                     u5580:
  3333  001610                     
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3336  001610  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3337  001614  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3338  001618  2ADE               	incf	postinc2,f,c
  3339  00161A  0E00               	movlw	0
  3340  00161C  22DD               	addwfc	postdec2,f,c
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3343  00161E  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3344  001622  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3345  001626  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3346  00162A  0E02               	movlw	2
  3347  00162C  26DE               	addwf	postinc2,f,c
  3348  00162E  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3349  001632  0E00               	movlw	0
  3350  001634  22DD               	addwfc	postdec2,f,c
  3351  001636  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3352  00163A  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3353  00163E  CFDE F0F9          	movff	postinc2,_prec
  3354  001642  CFDD F0FA          	movff	postdec2,_prec+1
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3357  001646  EF69  F00B         	goto	l4848
  3358  00164A                     l4838:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3362  00164A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3363  00164E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3364  001652  CFDE F008          	movff	postinc2,atoi@s
  3365  001656  CFDD F009          	movff	postdec2,atoi@s+1
  3366  00165A  EC7C  F01A         	call	_atoi	;wreg free
  3367  00165E  C008  F0F9         	movff	?_atoi,_prec
  3368  001662  C009  F0FA         	movff	?_atoi+1,_prec+1
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3371  001666  EF3C  F00B         	goto	l4842
  3372  00166A                     l4840:
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3376  00166A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3377  00166E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3378  001672  2ADE               	incf	postinc2,f,c
  3379  001674  0E00               	movlw	0
  3380  001676  22DD               	addwfc	postdec2,f,c
  3381  001678                     l4842:
  3382  001678  0ED0               	movlw	208
  3383  00167A  0100               	movlb	0	; () banked
  3384  00167C  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3385  00167E  0EFF               	movlw	255
  3386  001680  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3387  001682  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3388  001686  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3389  00168A  CFDE FFF6          	movff	postinc2,tblptrl
  3390  00168E  CFDD FFF7          	movff	postdec2,tblptrh
  3391  001692                     	if	0	;tblptru may be non-zero
  3392  001692                     	endif
  3393  001692                     	if	0	;tblptru may be non-zero
  3394  001692                     	endif
  3395  001692  0008               	tblrd		*
  3396  001694  50F5               	movf	tablat,w,c
  3397  001696  6FAE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3398  001698  6BAF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3399  00169A  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3400  00169C  27AE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3401  00169E  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3402  0016A0  23AF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3403  0016A2  51AF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3404  0016A4  E10A               	bnz	u5590
  3405  0016A6  0E0A               	movlw	10
  3406  0016A8  5DAE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3407  0016AA  A0D8               	btfss	status,0,c
  3408  0016AC  EF5A  F00B         	goto	u5591
  3409  0016B0  EF5D  F00B         	goto	u5590
  3410  0016B4                     u5591:
  3411  0016B4  0E01               	movlw	1
  3412  0016B6  EF5E  F00B         	goto	u5600
  3413  0016BA                     u5590:
  3414  0016BA  0E00               	movlw	0
  3415  0016BC                     u5600:
  3416  0016BC  6FBA               	movwf	_vfpfcnvrt$1684& (0+255),b
  3417  0016BE  6BBB               	clrf	(_vfpfcnvrt$1684+1)& (0+255),b
  3418  0016C0                     
  3419                           ; BSR set to: 0
  3420  0016C0  51BA               	movf	_vfpfcnvrt$1684& (0+255),w,b
  3421  0016C2  11BB               	iorwf	(_vfpfcnvrt$1684+1)& (0+255),w,b
  3422  0016C4  A4D8               	btfss	status,2,c
  3423  0016C6  EF67  F00B         	goto	u5611
  3424  0016CA  EF69  F00B         	goto	u5610
  3425  0016CE                     u5611:
  3426  0016CE  EF35  F00B         	goto	l4840
  3427  0016D2                     u5610:
  3428  0016D2                     l4848:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3432  0016D2  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3433  0016D6  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3434  0016DA  CFDE FFF6          	movff	postinc2,tblptrl
  3435  0016DE  CFDD FFF7          	movff	postdec2,tblptrh
  3436  0016E2                     	if	0	;tblptru may be non-zero
  3437  0016E2                     	endif
  3438  0016E2                     	if	0	;tblptru may be non-zero
  3439  0016E2                     	endif
  3440  0016E2  0008               	tblrd		*
  3441  0016E4  50F5               	movf	tablat,w,c
  3442  0016E6  6E07               	movwf	tolower@c^0,c
  3443  0016E8  6A08               	clrf	(tolower@c+1)^0,c
  3444  0016EA  ECEE  F01F         	call	_tolower	;wreg free
  3445  0016EE  5007               	movf	?_tolower^0,w,c
  3446  0016F0  0100               	movlb	0	; () banked
  3447  0016F2  6FC2               	movwf	vfpfcnvrt@ct& (0+255),b
  3448  0016F4                     
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3451  0016F4  51C2               	movf	vfpfcnvrt@ct& (0+255),w,b
  3452  0016F6  B4D8               	btfsc	status,2,c
  3453  0016F8  EF80  F00B         	goto	u5621
  3454  0016FC  EF82  F00B         	goto	u5620
  3455  001700                     u5621:
  3456  001700  EFBC  F00B         	goto	l4858
  3457  001704                     u5620:
  3458  001704                     
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3461  001704  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3462  001708  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3463  00170C  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  3464  001710  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  3465  001714  0E01               	movlw	1
  3466  001716  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  3467  001718  0E00               	movlw	0
  3468  00171A  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3469  00171C  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3470  001720  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3471  001724                     	if	0	;tblptru may be non-zero
  3472  001724                     	endif
  3473  001724                     	if	0	;tblptru may be non-zero
  3474  001724                     	endif
  3475  001724  0008               	tblrd		*
  3476  001726  50F5               	movf	tablat,w,c
  3477  001728  6E07               	movwf	tolower@c^0,c
  3478  00172A  6A08               	clrf	(tolower@c+1)^0,c
  3479  00172C  ECEE  F01F         	call	_tolower	;wreg free
  3480  001730  5007               	movf	?_tolower^0,w,c
  3481  001732  0100               	movlb	0	; () banked
  3482  001734  6FC3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3483  001736                     
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3486  001736  51C3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3487  001738  B4D8               	btfsc	status,2,c
  3488  00173A  EFA1  F00B         	goto	u5631
  3489  00173E  EFA3  F00B         	goto	u5630
  3490  001742                     u5631:
  3491  001742  EFBC  F00B         	goto	l4858
  3492  001746                     u5630:
  3493  001746                     
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3496  001746  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3497  00174A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3498  00174E  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  3499  001752  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  3500  001756  0E02               	movlw	2
  3501  001758  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  3502  00175A  0E00               	movlw	0
  3503  00175C  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3504  00175E  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3505  001762  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3506  001766                     	if	0	;tblptru may be non-zero
  3507  001766                     	endif
  3508  001766                     	if	0	;tblptru may be non-zero
  3509  001766                     	endif
  3510  001766  0008               	tblrd		*
  3511  001768  50F5               	movf	tablat,w,c
  3512  00176A  6E07               	movwf	tolower@c^0,c
  3513  00176C  6A08               	clrf	(tolower@c+1)^0,c
  3514  00176E  ECEE  F01F         	call	_tolower	;wreg free
  3515  001772  5007               	movf	?_tolower^0,w,c
  3516  001774  0100               	movlb	0	; () banked
  3517  001776  6FC4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3518  001778                     l4858:
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3522  001778  0E66               	movlw	102
  3523  00177A  19C2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3524  00177C  A4D8               	btfss	status,2,c
  3525  00177E  EFC3  F00B         	goto	u5641
  3526  001782  EFC5  F00B         	goto	u5640
  3527  001786                     u5641:
  3528  001786  EF05  F00C         	goto	l4870
  3529  00178A                     u5640:
  3530  00178A                     
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3533  00178A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3534  00178E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3535  001792  CFDE FFF6          	movff	postinc2,tblptrl
  3536  001796  CFDD FFF7          	movff	postdec2,tblptrh
  3537  00179A                     	if	0	;tblptru may be non-zero
  3538  00179A                     	endif
  3539  00179A                     	if	0	;tblptru may be non-zero
  3540  00179A                     	endif
  3541  00179A  0008               	tblrd		*
  3542  00179C  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  3543  0017A0                     
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3546  0017A0  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3547  0017A4  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3548  0017A8  2ADE               	incf	postinc2,f,c
  3549  0017AA  0E00               	movlw	0
  3550  0017AC  22DD               	addwfc	postdec2,f,c
  3551  0017AE                     
  3552                           ; BSR set to: 0
  3553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3554  0017AE  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3555  0017B2  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3556  0017B6  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3557  0017BA  0E04               	movlw	4
  3558  0017BC  26DE               	addwf	postinc2,f,c
  3559  0017BE  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3560  0017C2  0E00               	movlw	0
  3561  0017C4  22DD               	addwfc	postdec2,f,c
  3562  0017C6  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3563  0017CA  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3564  0017CE  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3565  0017D2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3566  0017D6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3567  0017DA  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3568  0017DE                     l4866:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3572  0017DE  C0A6  F062         	movff	vfpfcnvrt@fp,efgtoa@fp
  3573  0017E2  C0A7  F063         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3574  0017E6  C0BE  F064         	movff	vfpfcnvrt@f,efgtoa@f
  3575  0017EA  C0BF  F065         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3576  0017EE  C0C0  F066         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3577  0017F2  C0C1  F067         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3578  0017F6  C0C5  F068         	movff	vfpfcnvrt@c,efgtoa@c
  3579  0017FA  EC2C  F004         	call	_efgtoa	;wreg free
  3580  0017FE  C062  F0A6         	movff	?_efgtoa,?_vfpfcnvrt
  3581  001802  C063  F0A7         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3582  001806  EF5E  F00D         	goto	l1284
  3583  00180A                     l4870:
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3587  00180A  0EC2               	movlw	low vfpfcnvrt@ct
  3588  00180C  6E01               	movwf	strncmp@_l^0,c
  3589  00180E  0E00               	movlw	high vfpfcnvrt@ct
  3590  001810  6E02               	movwf	(strncmp@_l+1)^0,c
  3591  001812  0E4E               	movlw	low STR_31
  3592  001814  6E03               	movwf	strncmp@_r^0,c
  3593  001816  0E08               	movlw	high STR_31
  3594  001818  6E04               	movwf	(strncmp@_r+1)^0,c
  3595  00181A  0E00               	movlw	0
  3596  00181C  6E06               	movwf	(strncmp@n+1)^0,c
  3597  00181E  0E02               	movlw	2
  3598  001820  6E05               	movwf	strncmp@n^0,c
  3599  001822  EC48  F01D         	call	_strncmp	;wreg free
  3600  001826  5001               	movf	?_strncmp^0,w,c
  3601  001828  1002               	iorwf	(?_strncmp+1)^0,w,c
  3602  00182A  A4D8               	btfss	status,2,c
  3603  00182C  EF1A  F00C         	goto	u5651
  3604  001830  EF1C  F00C         	goto	u5650
  3605  001834                     u5651:
  3606  001834  EF98  F00C         	goto	l4886
  3607  001838                     u5650:
  3608  001838                     
  3609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3610  001838  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3611  00183C  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3612  001840  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  3613  001844  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  3614  001848  0E01               	movlw	1
  3615  00184A  0100               	movlb	0	; () banked
  3616  00184C  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  3617  00184E  0E00               	movlw	0
  3618  001850  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3619  001852  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3620  001856  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3621  00185A                     	if	0	;tblptru may be non-zero
  3622  00185A                     	endif
  3623  00185A                     	if	0	;tblptru may be non-zero
  3624  00185A                     	endif
  3625  00185A  0008               	tblrd		*
  3626  00185C  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  3627  001860  0EBF               	movlw	191
  3628  001862  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3629  001864  0EFF               	movlw	255
  3630  001866  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3631  001868  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3632  00186C  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3633  001870  CFDE FFF6          	movff	postinc2,tblptrl
  3634  001874  CFDD FFF7          	movff	postdec2,tblptrh
  3635  001878                     	if	0	;tblptru may be non-zero
  3636  001878                     	endif
  3637  001878                     	if	0	;tblptru may be non-zero
  3638  001878                     	endif
  3639  001878  0008               	tblrd		*
  3640  00187A  50F5               	movf	tablat,w,c
  3641  00187C  6FAE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3642  00187E  6BAF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3643  001880  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3644  001882  27AE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3645  001884  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3646  001886  23AF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3647  001888  51AF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3648  00188A  E10A               	bnz	u5660
  3649  00188C  0E1A               	movlw	26
  3650  00188E  5DAE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3651  001890  A0D8               	btfss	status,0,c
  3652  001892  EF4D  F00C         	goto	u5661
  3653  001896  EF50  F00C         	goto	u5660
  3654  00189A                     u5661:
  3655  00189A  0E01               	movlw	1
  3656  00189C  EF51  F00C         	goto	u5670
  3657  0018A0                     u5660:
  3658  0018A0  0E00               	movlw	0
  3659  0018A2                     u5670:
  3660  0018A2  6FBC               	movwf	_vfpfcnvrt$1688& (0+255),b
  3661  0018A4  6BBD               	clrf	(_vfpfcnvrt$1688+1)& (0+255),b
  3662  0018A6                     
  3663                           ; BSR set to: 0
  3664  0018A6  51BC               	movf	_vfpfcnvrt$1688& (0+255),w,b
  3665  0018A8  11BD               	iorwf	(_vfpfcnvrt$1688+1)& (0+255),w,b
  3666  0018AA  B4D8               	btfsc	status,2,c
  3667  0018AC  EF5A  F00C         	goto	u5681
  3668  0018B0  EF5C  F00C         	goto	u5680
  3669  0018B4                     u5681:
  3670  0018B4  EF76  F00C         	goto	l4880
  3671  0018B8                     u5680:
  3672  0018B8                     
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3675  0018B8  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3676  0018BC  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3677  0018C0  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3678  0018C4  0E04               	movlw	4
  3679  0018C6  26DE               	addwf	postinc2,f,c
  3680  0018C8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3681  0018CC  0E00               	movlw	0
  3682  0018CE  22DD               	addwfc	postdec2,f,c
  3683  0018D0  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3684  0018D4  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3685  0018D8  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3686  0018DC  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3687  0018E0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3688  0018E4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3691  0018E8  EF8E  F00C         	goto	l1291
  3692  0018EC                     l4880:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3696  0018EC  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3697  0018F0  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3698  0018F4  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3699  0018F8  0E04               	movlw	4
  3700  0018FA  26DE               	addwf	postinc2,f,c
  3701  0018FC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3702  001900  0E00               	movlw	0
  3703  001902  22DD               	addwfc	postdec2,f,c
  3704  001904  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3705  001908  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3706  00190C  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3707  001910  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3708  001914  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3709  001918  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3710  00191C                     l1291:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3714  00191C  0E02               	movlw	2
  3715  00191E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3716  001922  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3717  001926  26DE               	addwf	postinc2,f,c
  3718  001928  0E00               	movlw	0
  3719  00192A  22DD               	addwfc	postdec2,f,c
  3720  00192C  EFEF  F00B         	goto	l4866
  3721  001930                     l4886:
  3722                           
  3723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3724  001930  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3725  001934  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3726  001938  CFDE FFF6          	movff	postinc2,tblptrl
  3727  00193C  CFDD FFF7          	movff	postdec2,tblptrh
  3728  001940                     	if	0	;tblptru may be non-zero
  3729  001940                     	endif
  3730  001940                     	if	0	;tblptru may be non-zero
  3731  001940                     	endif
  3732  001940  0008               	tblrd		*
  3733  001942  50F5               	movf	tablat,w,c
  3734  001944  0A78               	xorlw	120
  3735  001946  B4D8               	btfsc	status,2,c
  3736  001948  EFA8  F00C         	goto	u5691
  3737  00194C  EFAA  F00C         	goto	u5690
  3738  001950                     u5691:
  3739  001950  EFBC  F00C         	goto	l4890
  3740  001954                     u5690:
  3741  001954  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3742  001958  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3743  00195C  CFDE FFF6          	movff	postinc2,tblptrl
  3744  001960  CFDD FFF7          	movff	postdec2,tblptrh
  3745  001964                     	if	0	;tblptru may be non-zero
  3746  001964                     	endif
  3747  001964                     	if	0	;tblptru may be non-zero
  3748  001964                     	endif
  3749  001964  0008               	tblrd		*
  3750  001966  50F5               	movf	tablat,w,c
  3751  001968  0A58               	xorlw	88
  3752  00196A  A4D8               	btfss	status,2,c
  3753  00196C  EFBA  F00C         	goto	u5701
  3754  001970  EFBC  F00C         	goto	u5700
  3755  001974                     u5701:
  3756  001974  EF0B  F00D         	goto	l4900
  3757  001978                     u5700:
  3758  001978                     l4890:
  3759                           
  3760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3761  001978  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3762  00197C  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3763  001980  CFDE FFF6          	movff	postinc2,tblptrl
  3764  001984  CFDD FFF7          	movff	postdec2,tblptrh
  3765  001988                     	if	0	;tblptru may be non-zero
  3766  001988                     	endif
  3767  001988                     	if	0	;tblptru may be non-zero
  3768  001988                     	endif
  3769  001988  0008               	tblrd		*
  3770  00198A  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  3771  00198E                     
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3773  00198E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3774  001992  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3775  001996  2ADE               	incf	postinc2,f,c
  3776  001998  0E00               	movlw	0
  3777  00199A  22DD               	addwfc	postdec2,f,c
  3778  00199C                     
  3779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3780  00199C  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3781  0019A0  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3782  0019A4  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3783  0019A8  0E02               	movlw	2
  3784  0019AA  26DE               	addwf	postinc2,f,c
  3785  0019AC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3786  0019B0  0E00               	movlw	0
  3787  0019B2  22DD               	addwfc	postdec2,f,c
  3788  0019B4  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3789  0019B8  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3790  0019BC  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt+2
  3791  0019C0  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+3
  3792  0019C4  C0AE  F0B0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3793  0019C8  C0AF  F0B1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3794  0019CC  0100               	movlb	0	; () banked
  3795  0019CE  6BB2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3796  0019D0  6BB3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3797  0019D2  6BB4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3798  0019D4  6BB5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3799  0019D6  6BB6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3800  0019D8  6BB7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3801  0019DA                     
  3802                           ; BSR set to: 0
  3803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  3804  0019DA  C0A6  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3805  0019DE  C0A7  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3806  0019E2  C0B0  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3807  0019E6  C0B1  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3808  0019EA  C0B2  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3809  0019EE  C0B3  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3810  0019F2  C0B4  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3811  0019F6  C0B5  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3812  0019FA  C0B6  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3813  0019FE  C0B7  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3814  001A02  C0C5  F026         	movff	vfpfcnvrt@c,xtoa@x
  3815  001A06  EC2C  F017         	call	_xtoa	;wreg free
  3816  001A0A  C01C  F0A6         	movff	?_xtoa,?_vfpfcnvrt
  3817  001A0E  C01D  F0A7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3818  001A12  EF5E  F00D         	goto	l1284
  3819  001A16                     l4900:
  3820                           
  3821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3822  001A16  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3823  001A1A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3824  001A1E  CFDE FFF6          	movff	postinc2,tblptrl
  3825  001A22  CFDD FFF7          	movff	postdec2,tblptrh
  3826  001A26                     	if	0	;tblptru may be non-zero
  3827  001A26                     	endif
  3828  001A26                     	if	0	;tblptru may be non-zero
  3829  001A26                     	endif
  3830  001A26  0008               	tblrd		*
  3831  001A28  50F5               	movf	tablat,w,c
  3832  001A2A  0A25               	xorlw	37
  3833  001A2C  A4D8               	btfss	status,2,c
  3834  001A2E  EF1B  F00D         	goto	u5711
  3835  001A32  EF1D  F00D         	goto	u5710
  3836  001A36                     u5711:
  3837  001A36  EF35  F00D         	goto	l4910
  3838  001A3A                     u5710:
  3839  001A3A                     
  3840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3841  001A3A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3842  001A3E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3843  001A42  2ADE               	incf	postinc2,f,c
  3844  001A44  0E00               	movlw	0
  3845  001A46  22DD               	addwfc	postdec2,f,c
  3846  001A48                     
  3847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3848  001A48  0E00               	movlw	0
  3849  001A4A  6E02               	movwf	(fputc@c+1)^0,c
  3850  001A4C  0E25               	movlw	37
  3851  001A4E  6E01               	movwf	fputc@c^0,c
  3852  001A50  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3853  001A54  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3854  001A58  ECB3  F01D         	call	_fputc	;wreg free
  3855  001A5C                     l4906:
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3858  001A5C  0E00               	movlw	0
  3859  001A5E  0100               	movlb	0	; () banked
  3860  001A60  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3861  001A62  0E01               	movlw	1
  3862  001A64  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  3863  001A66  EF5E  F00D         	goto	l1284
  3864  001A6A                     l4910:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3867  001A6A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3868  001A6E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3869  001A72  2ADE               	incf	postinc2,f,c
  3870  001A74  0E00               	movlw	0
  3871  001A76  22DD               	addwfc	postdec2,f,c
  3872  001A78                     
  3873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3874  001A78  0E00               	movlw	0
  3875  001A7A  0100               	movlb	0	; () banked
  3876  001A7C  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3877  001A7E  0E00               	movlw	0
  3878  001A80  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  3879  001A82  EF5E  F00D         	goto	l1284
  3880  001A86                     l4916:
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3883  001A86  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3884  001A8A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3885  001A8E  CFDE FFF6          	movff	postinc2,tblptrl
  3886  001A92  CFDD FFF7          	movff	postdec2,tblptrh
  3887  001A96                     	if	0	;tblptru may be non-zero
  3888  001A96                     	endif
  3889  001A96                     	if	0	;tblptru may be non-zero
  3890  001A96                     	endif
  3891  001A96  0008               	tblrd		*
  3892  001A98  50F5               	movf	tablat,w,c
  3893  001A9A  6E01               	movwf	fputc@c^0,c
  3894  001A9C  6A02               	clrf	(fputc@c+1)^0,c
  3895  001A9E  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3896  001AA2  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3897  001AA6  ECB3  F01D         	call	_fputc	;wreg free
  3898  001AAA                     
  3899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3900  001AAA  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3901  001AAE  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3902  001AB2  2ADE               	incf	postinc2,f,c
  3903  001AB4  0E00               	movlw	0
  3904  001AB6  22DD               	addwfc	postdec2,f,c
  3905  001AB8  EF2E  F00D         	goto	l4906
  3906  001ABC                     l1284:
  3907  001ABC  0012               	return		;funcret
  3908  001ABE                     __end_of_vfpfcnvrt:
  3909                           	callstack 0
  3910                           
  3911 ;; *************** function _xtoa *****************
  3912 ;; Defined at:
  3913 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3916 ;;		 -> sprintf@f(6), 
  3917 ;;  d               8   29[COMRAM] unsigned long long 
  3918 ;;  x               1   37[COMRAM] unsigned char 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  n               8   54[COMRAM] unsigned long long 
  3921 ;;  c               2   64[COMRAM] int 
  3922 ;;  i               2   62[COMRAM] int 
  3923 ;;  w               2   52[COMRAM] int 
  3924 ;;  p               2   50[COMRAM] int 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  2   27[COMRAM] int 
  3927 ;; Registers used:
  3928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3934 ;;      Params:        11       0       0       0       0       0       0       0       0
  3935 ;;      Locals:        20       0       0       0       0       0       0       0       0
  3936 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3937 ;;      Totals:        39       0       0       0       0       0       0       0       0
  3938 ;;Total ram usage:       39 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; Hardware stack levels required when called: 5
  3941 ;; This function calls:
  3942 ;;		_isalpha
  3943 ;;		_isupper
  3944 ;;		_pad
  3945 ;;		_toupper
  3946 ;; This function is called by:
  3947 ;;		_vfpfcnvrt
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text8
  3952  002E58                     __ptext8:
  3953                           	callstack 0
  3954  002E58                     _xtoa:
  3955                           	callstack 22
  3956  002E58                     
  3957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3958  002E58  0100               	movlb	0	; () banked
  3959  002E5A  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3960  002E5C  EF32  F017         	goto	u5221
  3961  002E60  EF34  F017         	goto	u5220
  3962  002E64                     u5221:
  3963  002E64  EF35  F017         	goto	l4624
  3964  002E68                     u5220:
  3965  002E68                     
  3966                           ; BSR set to: 0
  3967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3968  002E68  93FB               	bcf	_flags& (0+255),1,b
  3969  002E6A                     l4624:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3973  002E6A  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3974  002E6C  EF42  F017         	goto	u5230
  3975  002E70  51FA               	movf	(_prec+1)& (0+255),w,b
  3976  002E72  E106               	bnz	u5231
  3977  002E74  05F9               	decf	_prec& (0+255),w,b
  3978  002E76  B0D8               	btfsc	status,0,c
  3979  002E78  EF40  F017         	goto	u5231
  3980  002E7C  EF42  F017         	goto	u5230
  3981  002E80                     u5231:
  3982  002E80  EF48  F017         	goto	l1230
  3983  002E84                     u5230:
  3984  002E84                     
  3985                           ; BSR set to: 0
  3986  002E84  0E00               	movlw	0
  3987  002E86  6E34               	movwf	(xtoa@p+1)^0,c
  3988  002E88  0E01               	movlw	1
  3989  002E8A  6E33               	movwf	xtoa@p^0,c
  3990  002E8C  EF4C  F017         	goto	l1232
  3991  002E90                     l1230:
  3992                           
  3993                           ; BSR set to: 0
  3994  002E90  C0F9  F033         	movff	_prec,xtoa@p
  3995  002E94  C0FA  F034         	movff	_prec+1,xtoa@p+1
  3996  002E98                     l1232:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  4000  002E98  C0F7  F035         	movff	_width,xtoa@w
  4001  002E9C  C0F8  F036         	movff	_width+1,xtoa@w+1
  4002                           
  4003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4004  002EA0  A9FB               	btfss	_flags& (0+255),4,b
  4005  002EA2  EF55  F017         	goto	u5241
  4006  002EA6  EF57  F017         	goto	u5240
  4007  002EAA                     u5241:
  4008  002EAA  EF5B  F017         	goto	l4630
  4009  002EAE                     u5240:
  4010  002EAE                     
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  4013  002EAE  0EFE               	movlw	254
  4014  002EB0  2635               	addwf	xtoa@w^0,f,c
  4015  002EB2  0EFF               	movlw	255
  4016  002EB4  2236               	addwfc	(xtoa@w+1)^0,f,c
  4017  002EB6                     l4630:
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  4021  002EB6  C01E  F037         	movff	xtoa@d,xtoa@n
  4022  002EBA  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4023  002EBE  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4024  002EC2  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4025  002EC6  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4026  002ECA  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4027  002ECE  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4028  002ED2  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4029  002ED6                     
  4030                           ; BSR set to: 0
  4031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  4032  002ED6  0E00               	movlw	0
  4033  002ED8  6E40               	movwf	(xtoa@i+1)^0,c
  4034  002EDA  0E4F               	movlw	79
  4035  002EDC  6E3F               	movwf	xtoa@i^0,c
  4036  002EDE                     
  4037                           ; BSR set to: 0
  4038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  4039  002EDE  0E00               	movlw	0
  4040  002EE0  0101               	movlb	1	; () banked
  4041  002EE2  6F79               	movwf	(_dbuf+79)& (0+255),b
  4042                           
  4043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4044  002EE4  EF27  F018         	goto	l4666
  4045  002EE8                     l4636:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  4048  002EE8  063F               	decf	xtoa@i^0,f,c
  4049  002EEA  A0D8               	btfss	status,0,c
  4050  002EEC  0640               	decf	(xtoa@i+1)^0,f,c
  4051  002EEE                     
  4052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  4053  002EEE  0E0F               	movlw	15
  4054  002EF0  1437               	andwf	xtoa@n^0,w,c
  4055  002EF2  6E41               	movwf	xtoa@c^0,c
  4056  002EF4  6A42               	clrf	(xtoa@c+1)^0,c
  4057  002EF6                     
  4058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4059  002EF6  BE42               	btfsc	(xtoa@c+1)^0,7,c
  4060  002EF8  EF87  F017         	goto	u5251
  4061  002EFC  5042               	movf	(xtoa@c+1)^0,w,c
  4062  002EFE  E109               	bnz	u5250
  4063  002F00  0E0A               	movlw	10
  4064  002F02  5C41               	subwf	xtoa@c^0,w,c
  4065  002F04  A0D8               	btfss	status,0,c
  4066  002F06  EF87  F017         	goto	u5251
  4067  002F0A  EF89  F017         	goto	u5250
  4068  002F0E                     u5251:
  4069  002F0E  EF91  F017         	goto	l4644
  4070  002F12                     u5250:
  4071  002F12  0E57               	movlw	87
  4072  002F14  2441               	addwf	xtoa@c^0,w,c
  4073  002F16  6E41               	movwf	xtoa@c^0,c
  4074  002F18  0E00               	movlw	0
  4075  002F1A  2042               	addwfc	(xtoa@c+1)^0,w,c
  4076  002F1C  6E42               	movwf	(xtoa@c+1)^0,c
  4077  002F1E  EF97  F017         	goto	l1239
  4078  002F22                     l4644:
  4079  002F22  0E30               	movlw	48
  4080  002F24  2441               	addwf	xtoa@c^0,w,c
  4081  002F26  6E41               	movwf	xtoa@c^0,c
  4082  002F28  0E00               	movlw	0
  4083  002F2A  2042               	addwfc	(xtoa@c+1)^0,w,c
  4084  002F2C  6E42               	movwf	(xtoa@c+1)^0,c
  4085  002F2E                     l1239:
  4086  002F2E  0EBF               	movlw	191
  4087  002F30  6E27               	movwf	??_xtoa^0,c
  4088  002F32  0EFF               	movlw	255
  4089  002F34  6E28               	movwf	(??_xtoa+1)^0,c
  4090  002F36  5026               	movf	xtoa@x^0,w,c
  4091  002F38  6E29               	movwf	(??_xtoa+2)^0,c
  4092  002F3A  6A2A               	clrf	(??_xtoa+3)^0,c
  4093  002F3C  5027               	movf	??_xtoa^0,w,c
  4094  002F3E  2629               	addwf	(??_xtoa+2)^0,f,c
  4095  002F40  5028               	movf	(??_xtoa+1)^0,w,c
  4096  002F42  222A               	addwfc	(??_xtoa+3)^0,f,c
  4097  002F44  502A               	movf	(??_xtoa+3)^0,w,c
  4098  002F46  E10A               	bnz	u5260
  4099  002F48  0E1A               	movlw	26
  4100  002F4A  5C29               	subwf	(??_xtoa+2)^0,w,c
  4101  002F4C  A0D8               	btfss	status,0,c
  4102  002F4E  EFAB  F017         	goto	u5261
  4103  002F52  EFAE  F017         	goto	u5260
  4104  002F56                     u5261:
  4105  002F56  0E01               	movlw	1
  4106  002F58  EFAF  F017         	goto	u5270
  4107  002F5C                     u5260:
  4108  002F5C  0E00               	movlw	0
  4109  002F5E                     u5270:
  4110  002F5E  6E2F               	movwf	_xtoa$1669^0,c
  4111  002F60  6A30               	clrf	(_xtoa$1669+1)^0,c
  4112  002F62  502F               	movf	_xtoa$1669^0,w,c
  4113  002F64  1030               	iorwf	(_xtoa$1669+1)^0,w,c
  4114  002F66  B4D8               	btfsc	status,2,c
  4115  002F68  EFB8  F017         	goto	u5281
  4116  002F6C  EFBA  F017         	goto	u5280
  4117  002F70                     u5281:
  4118  002F70  EFEA  F017         	goto	l4658
  4119  002F74                     u5280:
  4120  002F74  0E9F               	movlw	159
  4121  002F76  6E27               	movwf	??_xtoa^0,c
  4122  002F78  0EFF               	movlw	255
  4123  002F7A  6E28               	movwf	(??_xtoa+1)^0,c
  4124  002F7C  0E20               	movlw	32
  4125  002F7E  1041               	iorwf	xtoa@c^0,w,c
  4126  002F80  6E29               	movwf	(??_xtoa+2)^0,c
  4127  002F82  0E00               	movlw	0
  4128  002F84  1042               	iorwf	(xtoa@c+1)^0,w,c
  4129  002F86  6E2A               	movwf	(??_xtoa+3)^0,c
  4130  002F88  5027               	movf	??_xtoa^0,w,c
  4131  002F8A  2629               	addwf	(??_xtoa+2)^0,f,c
  4132  002F8C  5028               	movf	(??_xtoa+1)^0,w,c
  4133  002F8E  222A               	addwfc	(??_xtoa+3)^0,f,c
  4134  002F90  502A               	movf	(??_xtoa+3)^0,w,c
  4135  002F92  E10A               	bnz	u5290
  4136  002F94  0E1A               	movlw	26
  4137  002F96  5C29               	subwf	(??_xtoa+2)^0,w,c
  4138  002F98  A0D8               	btfss	status,0,c
  4139  002F9A  EFD1  F017         	goto	u5291
  4140  002F9E  EFD4  F017         	goto	u5290
  4141  002FA2                     u5291:
  4142  002FA2  0E01               	movlw	1
  4143  002FA4  EFD5  F017         	goto	u5300
  4144  002FA8                     u5290:
  4145  002FA8  0E00               	movlw	0
  4146  002FAA                     u5300:
  4147  002FAA  6E31               	movwf	_xtoa$1670^0,c
  4148  002FAC  6A32               	clrf	(_xtoa$1670+1)^0,c
  4149  002FAE  5031               	movf	_xtoa$1670^0,w,c
  4150  002FB0  1032               	iorwf	(_xtoa$1670+1)^0,w,c
  4151  002FB2  B4D8               	btfsc	status,2,c
  4152  002FB4  EFDE  F017         	goto	u5311
  4153  002FB8  EFE0  F017         	goto	u5310
  4154  002FBC                     u5311:
  4155  002FBC  EFEA  F017         	goto	l4658
  4156  002FC0                     u5310:
  4157  002FC0                     
  4158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4159  002FC0  C041  F007         	movff	xtoa@c,toupper@c
  4160  002FC4  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4161  002FC8  EC1E  F020         	call	_toupper	;wreg free
  4162  002FCC  C007  F041         	movff	?_toupper,xtoa@c
  4163  002FD0  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4164  002FD4                     l4658:
  4165                           
  4166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4167  002FD4  0E2A               	movlw	low _dbuf
  4168  002FD6  243F               	addwf	xtoa@i^0,w,c
  4169  002FD8  6ED9               	movwf	fsr2l,c
  4170  002FDA  0E01               	movlw	high _dbuf
  4171  002FDC  2040               	addwfc	(xtoa@i+1)^0,w,c
  4172  002FDE  6EDA               	movwf	fsr2h,c
  4173  002FE0  C041  FFDF         	movff	xtoa@c,indf2
  4174  002FE4                     
  4175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  4176  002FE4  0633               	decf	xtoa@p^0,f,c
  4177  002FE6  A0D8               	btfss	status,0,c
  4178  002FE8  0634               	decf	(xtoa@p+1)^0,f,c
  4179  002FEA                     
  4180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  4181  002FEA  0635               	decf	xtoa@w^0,f,c
  4182  002FEC  A0D8               	btfss	status,0,c
  4183  002FEE  0636               	decf	(xtoa@w+1)^0,f,c
  4184  002FF0                     
  4185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4186  002FF0  C037  F027         	movff	xtoa@n,??_xtoa
  4187  002FF4  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4188  002FF8  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4189  002FFC  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4190  003000  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4191  003004  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4192  003008  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4193  00300C  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4194  003010  0E05               	movlw	5
  4195  003012  EF14  F018         	goto	u5320
  4196  003016                     u5325:
  4197  003016  90D8               	bcf	status,0,c
  4198  003018  322E               	rrcf	(??_xtoa+7)^0,f,c
  4199  00301A  322D               	rrcf	(??_xtoa+6)^0,f,c
  4200  00301C  322C               	rrcf	(??_xtoa+5)^0,f,c
  4201  00301E  322B               	rrcf	(??_xtoa+4)^0,f,c
  4202  003020  322A               	rrcf	(??_xtoa+3)^0,f,c
  4203  003022  3229               	rrcf	(??_xtoa+2)^0,f,c
  4204  003024  3228               	rrcf	(??_xtoa+1)^0,f,c
  4205  003026  3227               	rrcf	??_xtoa^0,f,c
  4206  003028                     u5320:
  4207  003028  2EE8               	decfsz	wreg,f,c
  4208  00302A  EF0B  F018         	goto	u5325
  4209  00302E  C027  F037         	movff	??_xtoa,xtoa@n
  4210  003032  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4211  003036  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4212  00303A  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4213  00303E  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4214  003042  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4215  003046  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4216  00304A  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4217  00304E                     l4666:
  4218                           
  4219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4220  00304E  BE40               	btfsc	(xtoa@i+1)^0,7,c
  4221  003050  EF33  F018         	goto	u5331
  4222  003054  5040               	movf	(xtoa@i+1)^0,w,c
  4223  003056  E109               	bnz	u5330
  4224  003058  0E02               	movlw	2
  4225  00305A  5C3F               	subwf	xtoa@i^0,w,c
  4226  00305C  A0D8               	btfss	status,0,c
  4227  00305E  EF33  F018         	goto	u5331
  4228  003062  EF35  F018         	goto	u5330
  4229  003066                     u5331:
  4230  003066  EF66  F018         	goto	l1253
  4231  00306A                     u5330:
  4232  00306A  5037               	movf	xtoa@n^0,w,c
  4233  00306C  1038               	iorwf	(xtoa@n+1)^0,w,c
  4234  00306E  1039               	iorwf	(xtoa@n+2)^0,w,c
  4235  003070  103A               	iorwf	(xtoa@n+3)^0,w,c
  4236  003072  103B               	iorwf	(xtoa@n+4)^0,w,c
  4237  003074  103C               	iorwf	(xtoa@n+5)^0,w,c
  4238  003076  103D               	iorwf	(xtoa@n+6)^0,w,c
  4239  003078  103E               	iorwf	(xtoa@n+7)^0,w,c
  4240  00307A  A4D8               	btfss	status,2,c
  4241  00307C  EF42  F018         	goto	u5341
  4242  003080  EF44  F018         	goto	u5340
  4243  003084                     u5341:
  4244  003084  EF74  F017         	goto	l4636
  4245  003088                     u5340:
  4246  003088  BE34               	btfsc	(xtoa@p+1)^0,7,c
  4247  00308A  EF51  F018         	goto	u5350
  4248  00308E  5034               	movf	(xtoa@p+1)^0,w,c
  4249  003090  E106               	bnz	u5351
  4250  003092  0433               	decf	xtoa@p^0,w,c
  4251  003094  B0D8               	btfsc	status,0,c
  4252  003096  EF4F  F018         	goto	u5351
  4253  00309A  EF51  F018         	goto	u5350
  4254  00309E                     u5351:
  4255  00309E  EF74  F017         	goto	l4636
  4256  0030A2                     u5350:
  4257  0030A2  BE36               	btfsc	(xtoa@w+1)^0,7,c
  4258  0030A4  EF5C  F018         	goto	u5361
  4259  0030A8  5036               	movf	(xtoa@w+1)^0,w,c
  4260  0030AA  E108               	bnz	u5360
  4261  0030AC  0435               	decf	xtoa@w^0,w,c
  4262  0030AE  A0D8               	btfss	status,0,c
  4263  0030B0  EF5C  F018         	goto	u5361
  4264  0030B4  EF5E  F018         	goto	u5360
  4265  0030B8                     u5361:
  4266  0030B8  EF66  F018         	goto	l1253
  4267  0030BC                     u5360:
  4268  0030BC  0100               	movlb	0	; () banked
  4269  0030BE  B3FB               	btfsc	_flags& (0+255),1,b
  4270  0030C0  EF64  F018         	goto	u5371
  4271  0030C4  EF66  F018         	goto	u5370
  4272  0030C8                     u5371:
  4273  0030C8  EF74  F017         	goto	l4636
  4274  0030CC                     u5370:
  4275  0030CC                     l1253:
  4276                           
  4277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4278  0030CC  0100               	movlb	0	; () banked
  4279  0030CE  A9FB               	btfss	_flags& (0+255),4,b
  4280  0030D0  EF6C  F018         	goto	u5381
  4281  0030D4  EF6E  F018         	goto	u5380
  4282  0030D8                     u5381:
  4283  0030D8  EF84  F018         	goto	l4682
  4284  0030DC                     u5380:
  4285  0030DC                     
  4286                           ; BSR set to: 0
  4287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  4288  0030DC  063F               	decf	xtoa@i^0,f,c
  4289  0030DE  A0D8               	btfss	status,0,c
  4290  0030E0  0640               	decf	(xtoa@i+1)^0,f,c
  4291  0030E2                     
  4292                           ; BSR set to: 0
  4293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4294  0030E2  0E2A               	movlw	low _dbuf
  4295  0030E4  243F               	addwf	xtoa@i^0,w,c
  4296  0030E6  6ED9               	movwf	fsr2l,c
  4297  0030E8  0E01               	movlw	high _dbuf
  4298  0030EA  2040               	addwfc	(xtoa@i+1)^0,w,c
  4299  0030EC  6EDA               	movwf	fsr2h,c
  4300  0030EE  C026  FFDF         	movff	xtoa@x,indf2
  4301  0030F2                     
  4302                           ; BSR set to: 0
  4303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  4304  0030F2  063F               	decf	xtoa@i^0,f,c
  4305  0030F4  A0D8               	btfss	status,0,c
  4306  0030F6  0640               	decf	(xtoa@i+1)^0,f,c
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  4309  0030F8  0E2A               	movlw	low _dbuf
  4310  0030FA  243F               	addwf	xtoa@i^0,w,c
  4311  0030FC  6ED9               	movwf	fsr2l,c
  4312  0030FE  0E01               	movlw	high _dbuf
  4313  003100  2040               	addwfc	(xtoa@i+1)^0,w,c
  4314  003102  6EDA               	movwf	fsr2h,c
  4315  003104  0E30               	movlw	48
  4316  003106  6EDF               	movwf	indf2,c
  4317  003108                     l4682:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  4321  003108  C01C  F011         	movff	xtoa@fp,pad@fp
  4322  00310C  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4323  003110  0E2A               	movlw	low _dbuf
  4324  003112  243F               	addwf	xtoa@i^0,w,c
  4325  003114  6E13               	movwf	pad@buf^0,c
  4326  003116  0E01               	movlw	high _dbuf
  4327  003118  2040               	addwfc	(xtoa@i+1)^0,w,c
  4328  00311A  6E14               	movwf	(pad@buf+1)^0,c
  4329  00311C  C035  F015         	movff	xtoa@w,pad@p
  4330  003120  C036  F016         	movff	xtoa@w+1,pad@p+1
  4331  003124  EC18  F01E         	call	_pad	;wreg free
  4332  003128  C011  F01C         	movff	?_pad,?_xtoa
  4333  00312C  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4334  003130  0012               	return		;funcret
  4335  003132                     __end_of_xtoa:
  4336                           	callstack 0
  4337                           
  4338 ;; *************** function _toupper *****************
  4339 ;; Defined at:
  4340 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  c               2    6[COMRAM] int 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  2    6[COMRAM] int 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4354 ;;      Params:         2       0       0       0       0       0       0       0       0
  4355 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4356 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4357 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4358 ;;Total ram usage:        8 bytes
  4359 ;; Hardware stack levels used: 1
  4360 ;; Hardware stack levels required when called: 2
  4361 ;; This function calls:
  4362 ;;		_islower
  4363 ;; This function is called by:
  4364 ;;		_xtoa
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text9
  4369  00403C                     __ptext9:
  4370                           	callstack 0
  4371  00403C                     _toupper:
  4372                           	callstack 24
  4373  00403C  0E9F               	movlw	159
  4374  00403E  6E09               	movwf	??_toupper^0,c
  4375  004040  0EFF               	movlw	255
  4376  004042  6E0A               	movwf	(??_toupper+1)^0,c
  4377  004044  C007  F00B         	movff	toupper@c,??_toupper+2
  4378  004048  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4379  00404C  5009               	movf	??_toupper^0,w,c
  4380  00404E  260B               	addwf	(??_toupper+2)^0,f,c
  4381  004050  500A               	movf	(??_toupper+1)^0,w,c
  4382  004052  220C               	addwfc	(??_toupper+3)^0,f,c
  4383  004054  500C               	movf	(??_toupper+3)^0,w,c
  4384  004056  E10A               	bnz	u4580
  4385  004058  0E1A               	movlw	26
  4386  00405A  5C0B               	subwf	(??_toupper+2)^0,w,c
  4387  00405C  A0D8               	btfss	status,0,c
  4388  00405E  EF33  F020         	goto	u4581
  4389  004062  EF36  F020         	goto	u4580
  4390  004066                     u4581:
  4391  004066  0E01               	movlw	1
  4392  004068  EF37  F020         	goto	u4590
  4393  00406C                     u4580:
  4394  00406C  0E00               	movlw	0
  4395  00406E                     u4590:
  4396  00406E  6E0D               	movwf	_toupper$1842^0,c
  4397  004070  6A0E               	clrf	(_toupper$1842+1)^0,c
  4398  004072  500D               	movf	_toupper$1842^0,w,c
  4399  004074  100E               	iorwf	(_toupper$1842+1)^0,w,c
  4400  004076  B4D8               	btfsc	status,2,c
  4401  004078  EF40  F020         	goto	u4601
  4402  00407C  EF42  F020         	goto	u4600
  4403  004080                     u4601:
  4404  004080  EF48  F020         	goto	l1444
  4405  004084                     u4600:
  4406  004084  0E5F               	movlw	95
  4407  004086  1407               	andwf	toupper@c^0,w,c
  4408  004088  6E07               	movwf	?_toupper^0,c
  4409  00408A  6A08               	clrf	(?_toupper+1)^0,c
  4410  00408C  EF4C  F020         	goto	l1449
  4411  004090                     l1444:
  4412  004090  C007  F007         	movff	toupper@c,?_toupper
  4413  004094  C008  F008         	movff	toupper@c+1,?_toupper+1
  4414  004098                     l1449:
  4415  004098  0012               	return		;funcret
  4416  00409A                     __end_of_toupper:
  4417                           	callstack 0
  4418                           
  4419 ;; *************** function _islower *****************
  4420 ;; Defined at:
  4421 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  c               2    0[COMRAM] int 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  2    0[COMRAM] int 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4435 ;;      Params:         2       0       0       0       0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4437 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4438 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4439 ;;Total ram usage:        6 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; Hardware stack levels required when called: 1
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_toupper
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text10
  4450  004548                     __ptext10:
  4451                           	callstack 0
  4452  004548                     _islower:
  4453                           	callstack 24
  4454  004548  0E9F               	movlw	159
  4455  00454A  6E03               	movwf	??_islower^0,c
  4456  00454C  0EFF               	movlw	255
  4457  00454E  6E04               	movwf	(??_islower+1)^0,c
  4458  004550  C001  F005         	movff	islower@c,??_islower+2
  4459  004554  C002  F006         	movff	islower@c+1,??_islower+3
  4460  004558  5003               	movf	??_islower^0,w,c
  4461  00455A  2605               	addwf	(??_islower+2)^0,f,c
  4462  00455C  5004               	movf	(??_islower+1)^0,w,c
  4463  00455E  2206               	addwfc	(??_islower+3)^0,f,c
  4464  004560  5006               	movf	(??_islower+3)^0,w,c
  4465  004562  E10A               	bnz	u3580
  4466  004564  0E1A               	movlw	26
  4467  004566  5C05               	subwf	(??_islower+2)^0,w,c
  4468  004568  A0D8               	btfss	status,0,c
  4469  00456A  EFB9  F022         	goto	u3581
  4470  00456E  EFBC  F022         	goto	u3580
  4471  004572                     u3581:
  4472  004572  0E01               	movlw	1
  4473  004574  EFBD  F022         	goto	u3590
  4474  004578                     u3580:
  4475  004578  0E00               	movlw	0
  4476  00457A                     u3590:
  4477  00457A  6E01               	movwf	?_islower^0,c
  4478  00457C  6A02               	clrf	(?_islower+1)^0,c
  4479  00457E  0012               	return		;funcret
  4480  004580                     __end_of_islower:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _isalpha *****************
  4484 ;; Defined at:
  4485 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  c               2    0[COMRAM] int 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  2    0[COMRAM] int 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4499 ;;      Params:         2       0       0       0       0       0       0       0       0
  4500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4501 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4502 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4503 ;;Total ram usage:        6 bytes
  4504 ;; Hardware stack levels used: 1
  4505 ;; Hardware stack levels required when called: 1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_xtoa
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text11
  4514  0044D2                     __ptext11:
  4515                           	callstack 0
  4516  0044D2                     _isalpha:
  4517                           	callstack 25
  4518  0044D2  0E9F               	movlw	159
  4519  0044D4  6E03               	movwf	??_isalpha^0,c
  4520  0044D6  0EFF               	movlw	255
  4521  0044D8  6E04               	movwf	(??_isalpha+1)^0,c
  4522  0044DA  0E20               	movlw	32
  4523  0044DC  1001               	iorwf	isalpha@c^0,w,c
  4524  0044DE  6E05               	movwf	(??_isalpha+2)^0,c
  4525  0044E0  0E00               	movlw	0
  4526  0044E2  1002               	iorwf	(isalpha@c+1)^0,w,c
  4527  0044E4  6E06               	movwf	(??_isalpha+3)^0,c
  4528  0044E6  5003               	movf	??_isalpha^0,w,c
  4529  0044E8  2605               	addwf	(??_isalpha+2)^0,f,c
  4530  0044EA  5004               	movf	(??_isalpha+1)^0,w,c
  4531  0044EC  2206               	addwfc	(??_isalpha+3)^0,f,c
  4532  0044EE  5006               	movf	(??_isalpha+3)^0,w,c
  4533  0044F0  E10A               	bnz	u4560
  4534  0044F2  0E1A               	movlw	26
  4535  0044F4  5C05               	subwf	(??_isalpha+2)^0,w,c
  4536  0044F6  A0D8               	btfss	status,0,c
  4537  0044F8  EF80  F022         	goto	u4561
  4538  0044FC  EF83  F022         	goto	u4560
  4539  004500                     u4561:
  4540  004500  0E01               	movlw	1
  4541  004502  EF84  F022         	goto	u4570
  4542  004506                     u4560:
  4543  004506  0E00               	movlw	0
  4544  004508                     u4570:
  4545  004508  6E01               	movwf	?_isalpha^0,c
  4546  00450A  6A02               	clrf	(?_isalpha+1)^0,c
  4547  00450C  0012               	return		;funcret
  4548  00450E                     __end_of_isalpha:
  4549                           	callstack 0
  4550                           
  4551 ;; *************** function _strncmp *****************
  4552 ;; Defined at:
  4553 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4556 ;;		 -> vfpfcnvrt@ct(3), 
  4557 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4558 ;;		 -> STR_33(3), 
  4559 ;;  n               2    4[COMRAM] unsigned int 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4562 ;;		 -> STR_33(3), 
  4563 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4564 ;;		 -> vfpfcnvrt@ct(3), 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  2    0[COMRAM] int 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4574 ;;      Params:         6       0       0       0       0       0       0       0       0
  4575 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4576 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4577 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4578 ;;Total ram usage:       11 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 1
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_vfpfcnvrt
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text12
  4589  003A90                     __ptext12:
  4590                           	callstack 0
  4591  003A90                     _strncmp:
  4592                           	callstack 26
  4593  003A90  C001  F008         	movff	strncmp@_l,strncmp@l
  4594  003A94  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4595  003A98  C003  F00A         	movff	strncmp@_r,strncmp@r
  4596  003A9C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4597  003AA0  0605               	decf	strncmp@n^0,f,c
  4598  003AA2  A0D8               	btfss	status,0,c
  4599  003AA4  0606               	decf	(strncmp@n+1)^0,f,c
  4600  003AA6  2805               	incf	strncmp@n^0,w,c
  4601  003AA8  E106               	bnz	u5461
  4602  003AAA  2806               	incf	(strncmp@n+1)^0,w,c
  4603  003AAC  A4D8               	btfss	status,2,c
  4604  003AAE  EF5B  F01D         	goto	u5461
  4605  003AB2  EF5D  F01D         	goto	u5460
  4606  003AB6                     u5461:
  4607  003AB6  EF6A  F01D         	goto	l4736
  4608  003ABA                     u5460:
  4609  003ABA  0E00               	movlw	0
  4610  003ABC  6E02               	movwf	(?_strncmp+1)^0,c
  4611  003ABE  0E00               	movlw	0
  4612  003AC0  6E01               	movwf	?_strncmp^0,c
  4613  003AC2  EFB2  F01D         	goto	l1421
  4614  003AC6                     l4734:
  4615  003AC6  4A08               	infsnz	strncmp@l^0,f,c
  4616  003AC8  2A09               	incf	(strncmp@l+1)^0,f,c
  4617  003ACA  4A0A               	infsnz	strncmp@r^0,f,c
  4618  003ACC  2A0B               	incf	(strncmp@r+1)^0,f,c
  4619  003ACE  0605               	decf	strncmp@n^0,f,c
  4620  003AD0  A0D8               	btfss	status,0,c
  4621  003AD2  0606               	decf	(strncmp@n+1)^0,f,c
  4622  003AD4                     l4736:
  4623  003AD4  C008  FFD9         	movff	strncmp@l,fsr2l
  4624  003AD8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4625  003ADC  50DF               	movf	indf2,w,c
  4626  003ADE  B4D8               	btfsc	status,2,c
  4627  003AE0  EF74  F01D         	goto	u5471
  4628  003AE4  EF76  F01D         	goto	u5470
  4629  003AE8                     u5471:
  4630  003AE8  EFA1  F01D         	goto	l4744
  4631  003AEC                     u5470:
  4632  003AEC  C00A  FFF6         	movff	strncmp@r,tblptrl
  4633  003AF0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4634  003AF4                     	if	0	;tblptru may be non-zero
  4635  003AF4                     	endif
  4636  003AF4                     	if	0	;tblptru may be non-zero
  4637  003AF4                     	endif
  4638  003AF4  0008               	tblrd		*
  4639  003AF6  50F5               	movf	tablat,w,c
  4640  003AF8  0900               	iorlw	0
  4641  003AFA  B4D8               	btfsc	status,2,c
  4642  003AFC  EF82  F01D         	goto	u5481
  4643  003B00  EF84  F01D         	goto	u5480
  4644  003B04                     u5481:
  4645  003B04  EFA1  F01D         	goto	l4744
  4646  003B08                     u5480:
  4647  003B08  5005               	movf	strncmp@n^0,w,c
  4648  003B0A  1006               	iorwf	(strncmp@n+1)^0,w,c
  4649  003B0C  B4D8               	btfsc	status,2,c
  4650  003B0E  EF8B  F01D         	goto	u5491
  4651  003B12  EF8D  F01D         	goto	u5490
  4652  003B16                     u5491:
  4653  003B16  EFA1  F01D         	goto	l4744
  4654  003B1A                     u5490:
  4655  003B1A  C008  FFD9         	movff	strncmp@l,fsr2l
  4656  003B1E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4657  003B22  50DF               	movf	indf2,w,c
  4658  003B24  6E07               	movwf	??_strncmp^0,c
  4659  003B26  C00A  FFF6         	movff	strncmp@r,tblptrl
  4660  003B2A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4661  003B2E                     	if	0	;tblptru may be non-zero
  4662  003B2E                     	endif
  4663  003B2E                     	if	0	;tblptru may be non-zero
  4664  003B2E                     	endif
  4665  003B2E  0008               	tblrd		*
  4666  003B30  50F5               	movf	tablat,w,c
  4667  003B32  1807               	xorwf	??_strncmp^0,w,c
  4668  003B34  B4D8               	btfsc	status,2,c
  4669  003B36  EF9F  F01D         	goto	u5501
  4670  003B3A  EFA1  F01D         	goto	u5500
  4671  003B3E                     u5501:
  4672  003B3E  EF63  F01D         	goto	l4734
  4673  003B42                     u5500:
  4674  003B42                     l4744:
  4675  003B42  C008  FFD9         	movff	strncmp@l,fsr2l
  4676  003B46  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4677  003B4A  50DF               	movf	indf2,w,c
  4678  003B4C  6E07               	movwf	??_strncmp^0,c
  4679  003B4E  C00A  FFF6         	movff	strncmp@r,tblptrl
  4680  003B52  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4681  003B56                     	if	0	;tblptru may be non-zero
  4682  003B56                     	endif
  4683  003B56                     	if	0	;tblptru may be non-zero
  4684  003B56                     	endif
  4685  003B56  0008               	tblrd		*
  4686  003B58  50F5               	movf	tablat,w,c
  4687  003B5A  5C07               	subwf	??_strncmp^0,w,c
  4688  003B5C  6E01               	movwf	?_strncmp^0,c
  4689  003B5E  6A02               	clrf	(?_strncmp+1)^0,c
  4690  003B60  A0D8               	btfss	status,0,c
  4691  003B62  0602               	decf	(?_strncmp+1)^0,f,c
  4692  003B64                     l1421:
  4693  003B64  0012               	return		;funcret
  4694  003B66                     __end_of_strncmp:
  4695                           	callstack 0
  4696                           
  4697 ;; *************** function _efgtoa *****************
  4698 ;; Defined at:
  4699 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4702 ;;		 -> sprintf@f(6), 
  4703 ;;  f               4    4[BANK0 ] PTR struct _IO_FILE
  4704 ;;  c               1    8[BANK0 ] unsigned char 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  u               4   66[BANK0 ] unsigned char 
  4707 ;;  g               4   58[BANK0 ] unsigned char 
  4708 ;;  l               4   52[BANK0 ] unsigned char 
  4709 ;;  h               4   48[BANK0 ] unsigned char 
  4710 ;;  ou              4   34[BANK0 ] unsigned char 
  4711 ;;  n               2   64[BANK0 ] int 
  4712 ;;  e               2   62[BANK0 ] int 
  4713 ;;  i               2   56[BANK0 ] int 
  4714 ;;  w               2   44[BANK0 ] int 
  4715 ;;  p               2   42[BANK0 ] int 
  4716 ;;  sign            2   40[BANK0 ] int 
  4717 ;;  d               2   38[BANK0 ] int 
  4718 ;;  m               2   32[BANK0 ] int 
  4719 ;;  ne              2   30[BANK0 ] int 
  4720 ;;  pp              2   28[BANK0 ] int 
  4721 ;;  t               2   26[BANK0 ] int 
  4722 ;;  mode            1   47[BANK0 ] unsigned char 
  4723 ;;  nmode           1   46[BANK0 ] unsigned char 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  2    2[BANK0 ] int 
  4726 ;; Registers used:
  4727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4733 ;;      Params:         0       7       0       0       0       0       0       0       0
  4734 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4735 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4736 ;;      Totals:         0      68       0       0       0       0       0       0       0
  4737 ;;Total ram usage:       68 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 5
  4740 ;; This function calls:
  4741 ;;		___awdiv
  4742 ;;		___awmod
  4743 ;;		___fladd
  4744 ;;		___fldiv
  4745 ;;		___fleq
  4746 ;;		___flge
  4747 ;;		___flmul
  4748 ;;		___flneg
  4749 ;;		___flsub
  4750 ;;		___fltol
  4751 ;;		___fpclassifyf
  4752 ;;		_floorf
  4753 ;;		_isupper
  4754 ;;		_pad
  4755 ;;		_strcpy
  4756 ;;		_tolower
  4757 ;; This function is called by:
  4758 ;;		_vfpfcnvrt
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text13
  4763  000858                     __ptext13:
  4764                           	callstack 0
  4765  000858                     _efgtoa:
  4766                           	callstack 22
  4767  000858                     
  4768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4769  000858  0E00               	movlw	0
  4770  00085A  0100               	movlb	0	; () banked
  4771  00085C  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  4772  00085E  0E00               	movlw	0
  4773  000860  6F88               	movwf	efgtoa@sign& (0+255),b
  4774  000862                     
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4777  000862  C064  F09A         	movff	efgtoa@f,efgtoa@g
  4778  000866  C065  F09B         	movff	efgtoa@f+1,efgtoa@g+1
  4779  00086A  C066  F09C         	movff	efgtoa@f+2,efgtoa@g+2
  4780  00086E  C067  F09D         	movff	efgtoa@f+3,efgtoa@g+3
  4781  000872                     
  4782                           ; BSR set to: 0
  4783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4784  000872  BF9D               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4785  000874  EF40  F004         	goto	u4680
  4786  000878  EF3E  F004         	goto	u4681
  4787  00087C                     u4681:
  4788  00087C  EF56  F004         	goto	l4322
  4789  000880                     u4680:
  4790  000880                     
  4791                           ; BSR set to: 0
  4792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4793  000880  0E00               	movlw	0
  4794  000882  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  4795  000884  0E01               	movlw	1
  4796  000886  6F88               	movwf	efgtoa@sign& (0+255),b
  4797  000888                     
  4798                           ; BSR set to: 0
  4799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4800  000888  C09A  F001         	movff	efgtoa@g,___flneg@f1
  4801  00088C  C09B  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4802  000890  C09C  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4803  000894  C09D  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4804  000898  ECDC  F022         	call	___flneg	;wreg free
  4805  00089C  C001  F09A         	movff	?___flneg,efgtoa@g
  4806  0008A0  C002  F09B         	movff	?___flneg+1,efgtoa@g+1
  4807  0008A4  C003  F09C         	movff	?___flneg+2,efgtoa@g+2
  4808  0008A8  C004  F09D         	movff	?___flneg+3,efgtoa@g+3
  4809  0008AC                     l4322:
  4810                           
  4811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4812  0008AC  0E00               	movlw	0
  4813  0008AE  0100               	movlb	0	; () banked
  4814  0008B0  6FA1               	movwf	(efgtoa@n+1)& (0+255),b
  4815  0008B2  0E00               	movlw	0
  4816  0008B4  6FA0               	movwf	efgtoa@n& (0+255),b
  4817  0008B6                     
  4818                           ; BSR set to: 0
  4819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4820  0008B6  C0F7  F08C         	movff	_width,efgtoa@w
  4821  0008BA  C0F8  F08D         	movff	_width+1,efgtoa@w+1
  4822  0008BE                     
  4823                           ; BSR set to: 0
  4824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4825  0008BE  5188               	movf	efgtoa@sign& (0+255),w,b
  4826  0008C0  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4827  0008C2  A4D8               	btfss	status,2,c
  4828  0008C4  EF66  F004         	goto	u4691
  4829  0008C8  EF68  F004         	goto	u4690
  4830  0008CC                     u4691:
  4831  0008CC  EF6F  F004         	goto	l4330
  4832  0008D0                     u4690:
  4833  0008D0                     
  4834                           ; BSR set to: 0
  4835  0008D0  A5FB               	btfss	_flags& (0+255),2,b
  4836  0008D2  EF6D  F004         	goto	u4701
  4837  0008D6  EF6F  F004         	goto	u4700
  4838  0008DA                     u4701:
  4839  0008DA  EF89  F004         	goto	l4342
  4840  0008DE                     u4700:
  4841  0008DE                     l4330:
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4845  0008DE  5188               	movf	efgtoa@sign& (0+255),w,b
  4846  0008E0  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4847  0008E2  A4D8               	btfss	status,2,c
  4848  0008E4  EF76  F004         	goto	u4711
  4849  0008E8  EF78  F004         	goto	u4710
  4850  0008EC                     u4711:
  4851  0008EC  EF7E  F004         	goto	l4334
  4852  0008F0                     u4710:
  4853  0008F0                     
  4854                           ; BSR set to: 0
  4855  0008F0  0E00               	movlw	0
  4856  0008F2  6F6F               	movwf	(_efgtoa$1647+1)& (0+255),b
  4857  0008F4  0E2B               	movlw	43
  4858  0008F6  6F6E               	movwf	_efgtoa$1647& (0+255),b
  4859  0008F8  EF82  F004         	goto	l4336
  4860  0008FC                     l4334:
  4861                           
  4862                           ; BSR set to: 0
  4863  0008FC  0E00               	movlw	0
  4864  0008FE  6F6F               	movwf	(_efgtoa$1647+1)& (0+255),b
  4865  000900  0E2D               	movlw	45
  4866  000902  6F6E               	movwf	_efgtoa$1647& (0+255),b
  4867  000904                     l4336:
  4868                           
  4869                           ; BSR set to: 0
  4870  000904  C06E  F12A         	movff	_efgtoa$1647,_dbuf
  4871  000908                     
  4872                           ; BSR set to: 0
  4873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4874  000908  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  4875  00090A  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  4876  00090C                     
  4877                           ; BSR set to: 0
  4878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4879  00090C  078C               	decf	efgtoa@w& (0+255),f,b
  4880  00090E  A0D8               	btfss	status,0,c
  4881  000910  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  4882  000912                     l4342:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4886  000912  C09A  F001         	movff	efgtoa@g,___fpclassifyf@x
  4887  000916  C09B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4888  00091A  C09C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4889  00091E  C09D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4890  000922  ECC9  F01C         	call	___fpclassifyf	;wreg free
  4891  000926  0401               	decf	?___fpclassifyf^0,w,c
  4892  000928  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4893  00092A  A4D8               	btfss	status,2,c
  4894  00092C  EF9A  F004         	goto	u4721
  4895  000930  EF9C  F004         	goto	u4720
  4896  000934                     u4721:
  4897  000934  EFF3  F004         	goto	l4360
  4898  000938                     u4720:
  4899  000938  0EBF               	movlw	191
  4900  00093A  0100               	movlb	0	; () banked
  4901  00093C  6F69               	movwf	??_efgtoa& (0+255),b
  4902  00093E  0EFF               	movlw	255
  4903  000940  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  4904  000942  5168               	movf	efgtoa@c& (0+255),w,b
  4905  000944  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  4906  000946  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  4907  000948  5169               	movf	??_efgtoa& (0+255),w,b
  4908  00094A  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  4909  00094C  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  4910  00094E  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4911  000950  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  4912  000952  E10A               	bnz	u4730
  4913  000954  0E1A               	movlw	26
  4914  000956  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  4915  000958  A0D8               	btfss	status,0,c
  4916  00095A  EFB1  F004         	goto	u4731
  4917  00095E  EFB4  F004         	goto	u4730
  4918  000962                     u4731:
  4919  000962  0E01               	movlw	1
  4920  000964  EFB5  F004         	goto	u4740
  4921  000968                     u4730:
  4922  000968  0E00               	movlw	0
  4923  00096A                     u4740:
  4924  00096A  6F70               	movwf	_efgtoa$1648& (0+255),b
  4925  00096C  6B71               	clrf	(_efgtoa$1648+1)& (0+255),b
  4926  00096E                     
  4927                           ; BSR set to: 0
  4928  00096E  5170               	movf	_efgtoa$1648& (0+255),w,b
  4929  000970  1171               	iorwf	(_efgtoa$1648+1)& (0+255),w,b
  4930  000972  B4D8               	btfsc	status,2,c
  4931  000974  EFBE  F004         	goto	u4751
  4932  000978  EFC0  F004         	goto	u4750
  4933  00097C                     u4751:
  4934  00097C  EFCE  F004         	goto	l4352
  4935  000980                     u4750:
  4936  000980                     
  4937                           ; BSR set to: 0
  4938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4939  000980  0E2A               	movlw	low _dbuf
  4940  000982  25A0               	addwf	efgtoa@n& (0+255),w,b
  4941  000984  6E01               	movwf	strcpy@dest^0,c
  4942  000986  0E01               	movlw	high _dbuf
  4943  000988  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4944  00098A  6E02               	movwf	(strcpy@dest+1)^0,c
  4945  00098C  0E16               	movlw	low STR_23
  4946  00098E  6E03               	movwf	strcpy@src^0,c
  4947  000990  0E08               	movlw	high STR_23
  4948  000992  6E04               	movwf	(strcpy@src+1)^0,c
  4949  000994  EC7C  F020         	call	_strcpy	;wreg free
  4950                           
  4951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4952  000998  EFDA  F004         	goto	l4354
  4953  00099C                     l4352:
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4957  00099C  0E2A               	movlw	low _dbuf
  4958  00099E  25A0               	addwf	efgtoa@n& (0+255),w,b
  4959  0009A0  6E01               	movwf	strcpy@dest^0,c
  4960  0009A2  0E01               	movlw	high _dbuf
  4961  0009A4  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4962  0009A6  6E02               	movwf	(strcpy@dest+1)^0,c
  4963  0009A8  0E1E               	movlw	low STR_24
  4964  0009AA  6E03               	movwf	strcpy@src^0,c
  4965  0009AC  0E08               	movlw	high STR_24
  4966  0009AE  6E04               	movwf	(strcpy@src+1)^0,c
  4967  0009B0  EC7C  F020         	call	_strcpy	;wreg free
  4968  0009B4                     l4354:
  4969                           
  4970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4971  0009B4  0100               	movlb	0	; () banked
  4972  0009B6  0EFD               	movlw	253
  4973  0009B8  278C               	addwf	efgtoa@w& (0+255),f,b
  4974  0009BA  0EFF               	movlw	255
  4975  0009BC  238D               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4976  0009BE                     l4356:
  4977                           
  4978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4979  0009BE  C062  F011         	movff	efgtoa@fp,pad@fp
  4980  0009C2  C063  F012         	movff	efgtoa@fp+1,pad@fp+1
  4981  0009C6  0E2A               	movlw	low _dbuf
  4982  0009C8  6E13               	movwf	pad@buf^0,c
  4983  0009CA  0E01               	movlw	high _dbuf
  4984  0009CC  6E14               	movwf	(pad@buf+1)^0,c
  4985  0009CE  C08C  F015         	movff	efgtoa@w,pad@p
  4986  0009D2  C08D  F016         	movff	efgtoa@w+1,pad@p+1
  4987  0009D6  EC18  F01E         	call	_pad	;wreg free
  4988  0009DA  C011  F062         	movff	?_pad,?_efgtoa
  4989  0009DE  C012  F063         	movff	?_pad+1,?_efgtoa+1
  4990  0009E2  EF57  F00A         	goto	l1150
  4991  0009E6                     l4360:
  4992                           
  4993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4994  0009E6  C09A  F001         	movff	efgtoa@g,___fpclassifyf@x
  4995  0009EA  C09B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4996  0009EE  C09C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4997  0009F2  C09D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4998  0009F6  ECC9  F01C         	call	___fpclassifyf	;wreg free
  4999  0009FA  5001               	movf	?___fpclassifyf^0,w,c
  5000  0009FC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5001  0009FE  A4D8               	btfss	status,2,c
  5002  000A00  EF04  F005         	goto	u4761
  5003  000A04  EF06  F005         	goto	u4760
  5004  000A08                     u4761:
  5005  000A08  EF46  F005         	goto	l4378
  5006  000A0C                     u4760:
  5007  000A0C  0EBF               	movlw	191
  5008  000A0E  0100               	movlb	0	; () banked
  5009  000A10  6F69               	movwf	??_efgtoa& (0+255),b
  5010  000A12  0EFF               	movlw	255
  5011  000A14  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  5012  000A16  5168               	movf	efgtoa@c& (0+255),w,b
  5013  000A18  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  5014  000A1A  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  5015  000A1C  5169               	movf	??_efgtoa& (0+255),w,b
  5016  000A1E  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  5017  000A20  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  5018  000A22  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5019  000A24  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  5020  000A26  E10A               	bnz	u4770
  5021  000A28  0E1A               	movlw	26
  5022  000A2A  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  5023  000A2C  A0D8               	btfss	status,0,c
  5024  000A2E  EF1B  F005         	goto	u4771
  5025  000A32  EF1E  F005         	goto	u4770
  5026  000A36                     u4771:
  5027  000A36  0E01               	movlw	1
  5028  000A38  EF1F  F005         	goto	u4780
  5029  000A3C                     u4770:
  5030  000A3C  0E00               	movlw	0
  5031  000A3E                     u4780:
  5032  000A3E  6F72               	movwf	_efgtoa$1653& (0+255),b
  5033  000A40  6B73               	clrf	(_efgtoa$1653+1)& (0+255),b
  5034  000A42                     
  5035                           ; BSR set to: 0
  5036  000A42  5172               	movf	_efgtoa$1653& (0+255),w,b
  5037  000A44  1173               	iorwf	(_efgtoa$1653+1)& (0+255),w,b
  5038  000A46  B4D8               	btfsc	status,2,c
  5039  000A48  EF28  F005         	goto	u4791
  5040  000A4C  EF2A  F005         	goto	u4790
  5041  000A50                     u4791:
  5042  000A50  EF38  F005         	goto	l4370
  5043  000A54                     u4790:
  5044  000A54                     
  5045                           ; BSR set to: 0
  5046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  5047  000A54  0E2A               	movlw	low _dbuf
  5048  000A56  25A0               	addwf	efgtoa@n& (0+255),w,b
  5049  000A58  6E01               	movwf	strcpy@dest^0,c
  5050  000A5A  0E01               	movlw	high _dbuf
  5051  000A5C  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5052  000A5E  6E02               	movwf	(strcpy@dest+1)^0,c
  5053  000A60  0E1A               	movlw	low STR_27
  5054  000A62  6E03               	movwf	strcpy@src^0,c
  5055  000A64  0E08               	movlw	high STR_27
  5056  000A66  6E04               	movwf	(strcpy@src+1)^0,c
  5057  000A68  EC7C  F020         	call	_strcpy	;wreg free
  5058                           
  5059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  5060  000A6C  EFDA  F004         	goto	l4354
  5061  000A70                     l4370:
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  5065  000A70  0E2A               	movlw	low _dbuf
  5066  000A72  25A0               	addwf	efgtoa@n& (0+255),w,b
  5067  000A74  6E01               	movwf	strcpy@dest^0,c
  5068  000A76  0E01               	movlw	high _dbuf
  5069  000A78  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5070  000A7A  6E02               	movwf	(strcpy@dest+1)^0,c
  5071  000A7C  0E22               	movlw	low STR_28
  5072  000A7E  6E03               	movwf	strcpy@src^0,c
  5073  000A80  0E08               	movlw	high STR_28
  5074  000A82  6E04               	movwf	(strcpy@src+1)^0,c
  5075  000A84  EC7C  F020         	call	_strcpy	;wreg free
  5076  000A88  EFDA  F004         	goto	l4354
  5077  000A8C                     l4378:
  5078                           
  5079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5080  000A8C  0E00               	movlw	0
  5081  000A8E  0100               	movlb	0	; () banked
  5082  000A90  6FA2               	movwf	efgtoa@u& (0+255),b
  5083  000A92  0E00               	movlw	0
  5084  000A94  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  5085  000A96  0E80               	movlw	128
  5086  000A98  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  5087  000A9A  0E3F               	movlw	63
  5088  000A9C  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  5089                           
  5090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5091  000A9E  0E00               	movlw	0
  5092  000AA0  6F9F               	movwf	(efgtoa@e+1)& (0+255),b
  5093  000AA2  0E00               	movlw	0
  5094  000AA4  6F9E               	movwf	efgtoa@e& (0+255),b
  5095  000AA6                     
  5096                           ; BSR set to: 0
  5097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5098  000AA6  C09A  F001         	movff	efgtoa@g,___fleq@ff1
  5099  000AAA  C09B  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5100  000AAE  C09C  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5101  000AB2  C09D  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5102  000AB6  0E00               	movlw	0
  5103  000AB8  6E05               	movwf	___fleq@ff2^0,c
  5104  000ABA  0E00               	movlw	0
  5105  000ABC  6E06               	movwf	(___fleq@ff2+1)^0,c
  5106  000ABE  0E00               	movlw	0
  5107  000AC0  6E07               	movwf	(___fleq@ff2+2)^0,c
  5108  000AC2  0E00               	movlw	0
  5109  000AC4  6E08               	movwf	(___fleq@ff2+3)^0,c
  5110  000AC6  EC35  F01F         	call	___fleq	;wreg free
  5111  000ACA  B0D8               	btfsc	status,0,c
  5112  000ACC  EF6A  F005         	goto	u4801
  5113  000AD0  EF6C  F005         	goto	u4800
  5114  000AD4                     u4801:
  5115  000AD4  EFEF  F005         	goto	l4396
  5116  000AD8                     u4800:
  5117  000AD8  EF8B  F005         	goto	l4388
  5118  000ADC                     l4384:
  5119                           
  5120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5121  000ADC  C0A2  F015         	movff	efgtoa@u,___flmul@b
  5122  000AE0  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  5123  000AE4  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  5124  000AE8  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  5125  000AEC  0E00               	movlw	0
  5126  000AEE  6E19               	movwf	___flmul@a^0,c
  5127  000AF0  0E00               	movlw	0
  5128  000AF2  6E1A               	movwf	(___flmul@a+1)^0,c
  5129  000AF4  0E20               	movlw	32
  5130  000AF6  6E1B               	movwf	(___flmul@a+2)^0,c
  5131  000AF8  0E41               	movlw	65
  5132  000AFA  6E1C               	movwf	(___flmul@a+3)^0,c
  5133  000AFC  ECBF  F00F         	call	___flmul	;wreg free
  5134  000B00  C015  F0A2         	movff	?___flmul,efgtoa@u
  5135  000B04  C016  F0A3         	movff	?___flmul+1,efgtoa@u+1
  5136  000B08  C017  F0A4         	movff	?___flmul+2,efgtoa@u+2
  5137  000B0C  C018  F0A5         	movff	?___flmul+3,efgtoa@u+3
  5138  000B10                     
  5139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5140  000B10  0100               	movlb	0	; () banked
  5141  000B12  4B9E               	infsnz	efgtoa@e& (0+255),f,b
  5142  000B14  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  5143  000B16                     l4388:
  5144                           
  5145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5146  000B16  C09A  F02E         	movff	efgtoa@g,___flge@ff1
  5147  000B1A  C09B  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  5148  000B1E  C09C  F030         	movff	efgtoa@g+2,___flge@ff1+2
  5149  000B22  C09D  F031         	movff	efgtoa@g+3,___flge@ff1+3
  5150  000B26  0E00               	movlw	0
  5151  000B28  6E19               	movwf	___flmul@a^0,c
  5152  000B2A  0E00               	movlw	0
  5153  000B2C  6E1A               	movwf	(___flmul@a+1)^0,c
  5154  000B2E  0E20               	movlw	32
  5155  000B30  6E1B               	movwf	(___flmul@a+2)^0,c
  5156  000B32  0E41               	movlw	65
  5157  000B34  6E1C               	movwf	(___flmul@a+3)^0,c
  5158  000B36  C0A2  F015         	movff	efgtoa@u,___flmul@b
  5159  000B3A  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  5160  000B3E  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  5161  000B42  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  5162  000B46  ECBF  F00F         	call	___flmul	;wreg free
  5163  000B4A  C015  F032         	movff	?___flmul,___flge@ff2
  5164  000B4E  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  5165  000B52  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  5166  000B56  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  5167  000B5A  ECC8  F01B         	call	___flge	;wreg free
  5168  000B5E  B0D8               	btfsc	status,0,c
  5169  000B60  EFB4  F005         	goto	u4811
  5170  000B64  EFB6  F005         	goto	u4810
  5171  000B68                     u4811:
  5172  000B68  EF6E  F005         	goto	l4384
  5173  000B6C                     u4810:
  5174  000B6C  EFD6  F005         	goto	l4394
  5175  000B70                     l4390:
  5176                           
  5177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5178  000B70  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  5179  000B74  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  5180  000B78  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  5181  000B7C  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  5182  000B80  0E00               	movlw	0
  5183  000B82  6E32               	movwf	___fldiv@a^0,c
  5184  000B84  0E00               	movlw	0
  5185  000B86  6E33               	movwf	(___fldiv@a+1)^0,c
  5186  000B88  0E20               	movlw	32
  5187  000B8A  6E34               	movwf	(___fldiv@a+2)^0,c
  5188  000B8C  0E41               	movlw	65
  5189  000B8E  6E35               	movwf	(___fldiv@a+3)^0,c
  5190  000B90  ECB2  F013         	call	___fldiv	;wreg free
  5191  000B94  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  5192  000B98  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  5193  000B9C  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  5194  000BA0  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  5195  000BA4                     
  5196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5197  000BA4  0100               	movlb	0	; () banked
  5198  000BA6  079E               	decf	efgtoa@e& (0+255),f,b
  5199  000BA8  A0D8               	btfss	status,0,c
  5200  000BAA  079F               	decf	(efgtoa@e+1)& (0+255),f,b
  5201  000BAC                     l4394:
  5202                           
  5203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5204  000BAC  C09A  F02E         	movff	efgtoa@g,___flge@ff1
  5205  000BB0  C09B  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  5206  000BB4  C09C  F030         	movff	efgtoa@g+2,___flge@ff1+2
  5207  000BB8  C09D  F031         	movff	efgtoa@g+3,___flge@ff1+3
  5208  000BBC  C0A2  F032         	movff	efgtoa@u,___flge@ff2
  5209  000BC0  C0A3  F033         	movff	efgtoa@u+1,___flge@ff2+1
  5210  000BC4  C0A4  F034         	movff	efgtoa@u+2,___flge@ff2+2
  5211  000BC8  C0A5  F035         	movff	efgtoa@u+3,___flge@ff2+3
  5212  000BCC  ECC8  F01B         	call	___flge	;wreg free
  5213  000BD0  A0D8               	btfss	status,0,c
  5214  000BD2  EFED  F005         	goto	u4821
  5215  000BD6  EFEF  F005         	goto	u4820
  5216  000BDA                     u4821:
  5217  000BDA  EFB8  F005         	goto	l4390
  5218  000BDE                     u4820:
  5219  000BDE                     l4396:
  5220                           
  5221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5222  000BDE  C068  F007         	movff	efgtoa@c,tolower@c
  5223  000BE2  6A08               	clrf	(tolower@c+1)^0,c
  5224  000BE4  ECEE  F01F         	call	_tolower	;wreg free
  5225  000BE8  5007               	movf	?_tolower^0,w,c
  5226  000BEA  0100               	movlb	0	; () banked
  5227  000BEC  6F8F               	movwf	efgtoa@mode& (0+255),b
  5228  000BEE                     
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5231  000BEE  C08F  F08E         	movff	efgtoa@mode,efgtoa@nmode
  5232  000BF2                     
  5233                           ; BSR set to: 0
  5234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5235  000BF2  0E67               	movlw	103
  5236  000BF4  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5237  000BF6  A4D8               	btfss	status,2,c
  5238  000BF8  EF00  F006         	goto	u4831
  5239  000BFC  EF02  F006         	goto	u4830
  5240  000C00                     u4831:
  5241  000C00  EF28  F006         	goto	l4410
  5242  000C04                     u4830:
  5243  000C04                     
  5244                           ; BSR set to: 0
  5245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5246  000C04  51F9               	movf	_prec& (0+255),w,b
  5247  000C06  11FA               	iorwf	(_prec+1)& (0+255),w,b
  5248  000C08  A4D8               	btfss	status,2,c
  5249  000C0A  EF09  F006         	goto	u4841
  5250  000C0E  EF0B  F006         	goto	u4840
  5251  000C12                     u4841:
  5252  000C12  EF0F  F006         	goto	l4406
  5253  000C16                     u4840:
  5254  000C16                     
  5255                           ; BSR set to: 0
  5256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5257  000C16  0E00               	movlw	0
  5258  000C18  6FFA               	movwf	(_prec+1)& (0+255),b
  5259  000C1A  0E01               	movlw	1
  5260  000C1C  6FF9               	movwf	_prec& (0+255),b
  5261  000C1E                     l4406:
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5265  000C1E  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  5266  000C20  EF1C  F006         	goto	u4850
  5267  000C24  51FA               	movf	(_prec+1)& (0+255),w,b
  5268  000C26  E106               	bnz	u4851
  5269  000C28  05F9               	decf	_prec& (0+255),w,b
  5270  000C2A  B0D8               	btfsc	status,0,c
  5271  000C2C  EF1A  F006         	goto	u4851
  5272  000C30  EF1C  F006         	goto	u4850
  5273  000C34                     u4851:
  5274  000C34  EF22  F006         	goto	l1168
  5275  000C38                     u4850:
  5276  000C38                     l4408:
  5277                           
  5278                           ; BSR set to: 0
  5279  000C38  0E00               	movlw	0
  5280  000C3A  6F8B               	movwf	(efgtoa@p+1)& (0+255),b
  5281  000C3C  0E06               	movlw	6
  5282  000C3E  6F8A               	movwf	efgtoa@p& (0+255),b
  5283  000C40  EF31  F006         	goto	l4416
  5284  000C44                     l1168:
  5285                           
  5286                           ; BSR set to: 0
  5287  000C44  C0F9  F08A         	movff	_prec,efgtoa@p
  5288  000C48  C0FA  F08B         	movff	_prec+1,efgtoa@p+1
  5289  000C4C  EF31  F006         	goto	l4416
  5290  000C50                     l4410:
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5294  000C50  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  5295  000C52  EF2D  F006         	goto	u4861
  5296  000C56  EF2F  F006         	goto	u4860
  5297  000C5A                     u4861:
  5298  000C5A  EF1C  F006         	goto	l4408
  5299  000C5E                     u4860:
  5300  000C5E  EF22  F006         	goto	l1168
  5301  000C62                     l4416:
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5305  000C62  0E67               	movlw	103
  5306  000C64  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5307  000C66  A4D8               	btfss	status,2,c
  5308  000C68  EF38  F006         	goto	u4871
  5309  000C6C  EF3A  F006         	goto	u4870
  5310  000C70                     u4871:
  5311  000C70  EF69  F006         	goto	l4426
  5312  000C74                     u4870:
  5313  000C74                     
  5314                           ; BSR set to: 0
  5315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5316  000C74  AF9F               	btfss	(efgtoa@e+1)& (0+255),7,b
  5317  000C76  EF48  F006         	goto	u4880
  5318  000C7A  0EFC               	movlw	252
  5319  000C7C  5D9E               	subwf	efgtoa@e& (0+255),w,b
  5320  000C7E  0EFF               	movlw	255
  5321  000C80  599F               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5322  000C82  A0D8               	btfss	status,0,c
  5323  000C84  EF46  F006         	goto	u4881
  5324  000C88  EF48  F006         	goto	u4880
  5325  000C8C                     u4881:
  5326  000C8C  EF67  F006         	goto	l4424
  5327  000C90                     u4880:
  5328  000C90                     
  5329                           ; BSR set to: 0
  5330  000C90  0EFF               	movlw	255
  5331  000C92  6F69               	movwf	??_efgtoa& (0+255),b
  5332  000C94  0EFF               	movlw	255
  5333  000C96  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  5334  000C98  C08A  F06B         	movff	efgtoa@p,??_efgtoa+2
  5335  000C9C  C08B  F06C         	movff	efgtoa@p+1,??_efgtoa+3
  5336  000CA0  5169               	movf	??_efgtoa& (0+255),w,b
  5337  000CA2  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  5338  000CA4  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  5339  000CA6  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5340  000CA8  519E               	movf	efgtoa@e& (0+255),w,b
  5341  000CAA  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  5342  000CAC  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  5343  000CAE  0A80               	xorlw	128
  5344  000CB0  6F6D               	movwf	(??_efgtoa+4)& (0+255),b
  5345  000CB2  519F               	movf	(efgtoa@e+1)& (0+255),w,b
  5346  000CB4  0A80               	xorlw	128
  5347  000CB6  596D               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5348  000CB8  A0D8               	btfss	status,0,c
  5349  000CBA  EF61  F006         	goto	u4891
  5350  000CBE  EF63  F006         	goto	u4890
  5351  000CC2                     u4891:
  5352  000CC2  EF67  F006         	goto	l4424
  5353  000CC6                     u4890:
  5354  000CC6                     
  5355                           ; BSR set to: 0
  5356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5357  000CC6  0E66               	movlw	102
  5358  000CC8  6F8E               	movwf	efgtoa@nmode& (0+255),b
  5359                           
  5360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5361  000CCA  EF69  F006         	goto	l4426
  5362  000CCE                     l4424:
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5366  000CCE  0E65               	movlw	101
  5367  000CD0  6F8E               	movwf	efgtoa@nmode& (0+255),b
  5368  000CD2                     l4426:
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5372  000CD2  C08A  F080         	movff	efgtoa@p,efgtoa@m
  5373  000CD6  C08B  F081         	movff	efgtoa@p+1,efgtoa@m+1
  5374  000CDA                     
  5375                           ; BSR set to: 0
  5376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5377  000CDA  0E67               	movlw	103
  5378  000CDC  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5379  000CDE  A4D8               	btfss	status,2,c
  5380  000CE0  EF74  F006         	goto	u4901
  5381  000CE4  EF76  F006         	goto	u4900
  5382  000CE8                     u4901:
  5383  000CE8  EF86  F006         	goto	l4434
  5384  000CEC                     u4900:
  5385  000CEC                     
  5386                           ; BSR set to: 0
  5387  000CEC  0E66               	movlw	102
  5388  000CEE  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5389  000CF0  A4D8               	btfss	status,2,c
  5390  000CF2  EF7D  F006         	goto	u4911
  5391  000CF6  EF7F  F006         	goto	u4910
  5392  000CFA                     u4911:
  5393  000CFA  EF88  F006         	goto	l4436
  5394  000CFE                     u4910:
  5395  000CFE                     
  5396                           ; BSR set to: 0
  5397  000CFE  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5398  000D00  EF86  F006         	goto	u4920
  5399  000D04  EF84  F006         	goto	u4921
  5400  000D08                     u4921:
  5401  000D08  EF88  F006         	goto	l4436
  5402  000D0C                     u4920:
  5403  000D0C                     l4434:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5407  000D0C  4B80               	infsnz	efgtoa@m& (0+255),f,b
  5408  000D0E  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  5409  000D10                     l4436:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5413  000D10  0E66               	movlw	102
  5414  000D12  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5415  000D14  A4D8               	btfss	status,2,c
  5416  000D16  EF8F  F006         	goto	u4931
  5417  000D1A  EF91  F006         	goto	u4930
  5418  000D1E                     u4931:
  5419  000D1E  EFB1  F006         	goto	l4446
  5420  000D22                     u4930:
  5421  000D22                     
  5422                           ; BSR set to: 0
  5423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5424  000D22  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5425  000D24  EF98  F006         	goto	u4940
  5426  000D28  EF96  F006         	goto	u4941
  5427  000D2C                     u4941:
  5428  000D2C  EFA4  F006         	goto	l4442
  5429  000D30                     u4940:
  5430  000D30                     
  5431                           ; BSR set to: 0
  5432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5433  000D30  0E00               	movlw	0
  5434  000D32  6FA2               	movwf	efgtoa@u& (0+255),b
  5435  000D34  0E00               	movlw	0
  5436  000D36  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  5437  000D38  0E80               	movlw	128
  5438  000D3A  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  5439  000D3C  0E3F               	movlw	63
  5440  000D3E  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  5441                           
  5442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5443  000D40  0E00               	movlw	0
  5444  000D42  6F9F               	movwf	(efgtoa@e+1)& (0+255),b
  5445  000D44  0E00               	movlw	0
  5446  000D46  6F9E               	movwf	efgtoa@e& (0+255),b
  5447  000D48                     l4442:
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5451  000D48  0E67               	movlw	103
  5452  000D4A  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5453  000D4C  B4D8               	btfsc	status,2,c
  5454  000D4E  EFAB  F006         	goto	u4951
  5455  000D52  EFAD  F006         	goto	u4950
  5456  000D56                     u4951:
  5457  000D56  EFB1  F006         	goto	l4446
  5458  000D5A                     u4950:
  5459  000D5A                     
  5460                           ; BSR set to: 0
  5461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5462  000D5A  519E               	movf	efgtoa@e& (0+255),w,b
  5463  000D5C  2780               	addwf	efgtoa@m& (0+255),f,b
  5464  000D5E  519F               	movf	(efgtoa@e+1)& (0+255),w,b
  5465  000D60  2381               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5466  000D62                     l4446:
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5470  000D62  0E00               	movlw	0
  5471  000D64  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  5472  000D66  0E00               	movlw	0
  5473  000D68  6F98               	movwf	efgtoa@i& (0+255),b
  5474  000D6A                     
  5475                           ; BSR set to: 0
  5476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5477  000D6A  C09A  F090         	movff	efgtoa@g,efgtoa@h
  5478  000D6E  C09B  F091         	movff	efgtoa@g+1,efgtoa@h+1
  5479  000D72  C09C  F092         	movff	efgtoa@g+2,efgtoa@h+2
  5480  000D76  C09D  F093         	movff	efgtoa@g+3,efgtoa@h+3
  5481  000D7A                     
  5482                           ; BSR set to: 0
  5483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5484  000D7A  C0A2  F082         	movff	efgtoa@u,efgtoa@ou
  5485  000D7E  C0A3  F083         	movff	efgtoa@u+1,efgtoa@ou+1
  5486  000D82  C0A4  F084         	movff	efgtoa@u+2,efgtoa@ou+2
  5487  000D86  C0A5  F085         	movff	efgtoa@u+3,efgtoa@ou+3
  5488                           
  5489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5490  000D8A  EF42  F007         	goto	l4460
  5491  000D8E                     l4452:
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5495  000D8E  C090  F02E         	movff	efgtoa@h,___fldiv@b
  5496  000D92  C091  F02F         	movff	efgtoa@h+1,___fldiv@b+1
  5497  000D96  C092  F030         	movff	efgtoa@h+2,___fldiv@b+2
  5498  000D9A  C093  F031         	movff	efgtoa@h+3,___fldiv@b+3
  5499  000D9E  C0A2  F032         	movff	efgtoa@u,___fldiv@a
  5500  000DA2  C0A3  F033         	movff	efgtoa@u+1,___fldiv@a+1
  5501  000DA6  C0A4  F034         	movff	efgtoa@u+2,___fldiv@a+2
  5502  000DAA  C0A5  F035         	movff	efgtoa@u+3,___fldiv@a+3
  5503  000DAE  ECB2  F013         	call	___fldiv	;wreg free
  5504  000DB2  C02E  F047         	movff	?___fldiv,floorf@x
  5505  000DB6  C02F  F048         	movff	?___fldiv+1,floorf@x+1
  5506  000DBA  C030  F049         	movff	?___fldiv+2,floorf@x+2
  5507  000DBE  C031  F04A         	movff	?___fldiv+3,floorf@x+3
  5508  000DC2  EC99  F018         	call	_floorf	;wreg free
  5509  000DC6  C047  F094         	movff	?_floorf,efgtoa@l
  5510  000DCA  C048  F095         	movff	?_floorf+1,efgtoa@l+1
  5511  000DCE  C049  F096         	movff	?_floorf+2,efgtoa@l+2
  5512  000DD2  C04A  F097         	movff	?_floorf+3,efgtoa@l+3
  5513                           
  5514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5515  000DD6  C094  F057         	movff	efgtoa@l,___fltol@f1
  5516  000DDA  C095  F058         	movff	efgtoa@l+1,___fltol@f1+1
  5517  000DDE  C096  F059         	movff	efgtoa@l+2,___fltol@f1+2
  5518  000DE2  C097  F05A         	movff	efgtoa@l+3,___fltol@f1+3
  5519  000DE6  EC44  F01B         	call	___fltol	;wreg free
  5520  000DEA  C057  F086         	movff	?___fltol,efgtoa@d
  5521  000DEE  C058  F087         	movff	?___fltol+1,efgtoa@d+1
  5522  000DF2                     
  5523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5524  000DF2  C090  F057         	movff	efgtoa@h,___flsub@b
  5525  000DF6  C091  F058         	movff	efgtoa@h+1,___flsub@b+1
  5526  000DFA  C092  F059         	movff	efgtoa@h+2,___flsub@b+2
  5527  000DFE  C093  F05A         	movff	efgtoa@h+3,___flsub@b+3
  5528  000E02  C0A2  F019         	movff	efgtoa@u,___flmul@a
  5529  000E06  C0A3  F01A         	movff	efgtoa@u+1,___flmul@a+1
  5530  000E0A  C0A4  F01B         	movff	efgtoa@u+2,___flmul@a+2
  5531  000E0E  C0A5  F01C         	movff	efgtoa@u+3,___flmul@a+3
  5532  000E12  C094  F015         	movff	efgtoa@l,___flmul@b
  5533  000E16  C095  F016         	movff	efgtoa@l+1,___flmul@b+1
  5534  000E1A  C096  F017         	movff	efgtoa@l+2,___flmul@b+2
  5535  000E1E  C097  F018         	movff	efgtoa@l+3,___flmul@b+3
  5536  000E22  ECBF  F00F         	call	___flmul	;wreg free
  5537  000E26  C015  F05B         	movff	?___flmul,___flsub@a
  5538  000E2A  C016  F05C         	movff	?___flmul+1,___flsub@a+1
  5539  000E2E  C017  F05D         	movff	?___flmul+2,___flsub@a+2
  5540  000E32  C018  F05E         	movff	?___flmul+3,___flsub@a+3
  5541  000E36  ECE1  F021         	call	___flsub	;wreg free
  5542  000E3A  C057  F090         	movff	?___flsub,efgtoa@h
  5543  000E3E  C058  F091         	movff	?___flsub+1,efgtoa@h+1
  5544  000E42  C059  F092         	movff	?___flsub+2,efgtoa@h+2
  5545  000E46  C05A  F093         	movff	?___flsub+3,efgtoa@h+3
  5546  000E4A                     
  5547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5548  000E4A  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  5549  000E4E  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  5550  000E52  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  5551  000E56  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  5552  000E5A  0E00               	movlw	0
  5553  000E5C  6E32               	movwf	___fldiv@a^0,c
  5554  000E5E  0E00               	movlw	0
  5555  000E60  6E33               	movwf	(___fldiv@a+1)^0,c
  5556  000E62  0E20               	movlw	32
  5557  000E64  6E34               	movwf	(___fldiv@a+2)^0,c
  5558  000E66  0E41               	movlw	65
  5559  000E68  6E35               	movwf	(___fldiv@a+3)^0,c
  5560  000E6A  ECB2  F013         	call	___fldiv	;wreg free
  5561  000E6E  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  5562  000E72  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  5563  000E76  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  5564  000E7A  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  5565  000E7E                     
  5566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5567  000E7E  0100               	movlb	0	; () banked
  5568  000E80  4B98               	infsnz	efgtoa@i& (0+255),f,b
  5569  000E82  2B99               	incf	(efgtoa@i+1)& (0+255),f,b
  5570  000E84                     l4460:
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5574  000E84  5180               	movf	efgtoa@m& (0+255),w,b
  5575  000E86  5D98               	subwf	efgtoa@i& (0+255),w,b
  5576  000E88  5199               	movf	(efgtoa@i+1)& (0+255),w,b
  5577  000E8A  0A80               	xorlw	128
  5578  000E8C  6F69               	movwf	??_efgtoa& (0+255),b
  5579  000E8E  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  5580  000E90  0A80               	xorlw	128
  5581  000E92  5969               	subwfb	??_efgtoa& (0+255),w,b
  5582  000E94  A0D8               	btfss	status,0,c
  5583  000E96  EF4F  F007         	goto	u4961
  5584  000E9A  EF51  F007         	goto	u4960
  5585  000E9E                     u4961:
  5586  000E9E  EFC7  F006         	goto	l4452
  5587  000EA2                     u4960:
  5588  000EA2                     
  5589                           ; BSR set to: 0
  5590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5591  000EA2  C0A2  F015         	movff	efgtoa@u,___flmul@b
  5592  000EA6  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  5593  000EAA  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  5594  000EAE  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  5595  000EB2  0E00               	movlw	0
  5596  000EB4  6E19               	movwf	___flmul@a^0,c
  5597  000EB6  0E00               	movlw	0
  5598  000EB8  6E1A               	movwf	(___flmul@a+1)^0,c
  5599  000EBA  0EA0               	movlw	160
  5600  000EBC  6E1B               	movwf	(___flmul@a+2)^0,c
  5601  000EBE  0E40               	movlw	64
  5602  000EC0  6E1C               	movwf	(___flmul@a+3)^0,c
  5603  000EC2  ECBF  F00F         	call	___flmul	;wreg free
  5604  000EC6  C015  F094         	movff	?___flmul,efgtoa@l
  5605  000ECA  C016  F095         	movff	?___flmul+1,efgtoa@l+1
  5606  000ECE  C017  F096         	movff	?___flmul+2,efgtoa@l+2
  5607  000ED2  C018  F097         	movff	?___flmul+3,efgtoa@l+3
  5608  000ED6                     
  5609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5610  000ED6  C090  F02E         	movff	efgtoa@h,___flge@ff1
  5611  000EDA  C091  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  5612  000EDE  C092  F030         	movff	efgtoa@h+2,___flge@ff1+2
  5613  000EE2  C093  F031         	movff	efgtoa@h+3,___flge@ff1+3
  5614  000EE6  C094  F032         	movff	efgtoa@l,___flge@ff2
  5615  000EEA  C095  F033         	movff	efgtoa@l+1,___flge@ff2+1
  5616  000EEE  C096  F034         	movff	efgtoa@l+2,___flge@ff2+2
  5617  000EF2  C097  F035         	movff	efgtoa@l+3,___flge@ff2+3
  5618  000EF6  ECC8  F01B         	call	___flge	;wreg free
  5619  000EFA  B0D8               	btfsc	status,0,c
  5620  000EFC  EF82  F007         	goto	u4971
  5621  000F00  EF84  F007         	goto	u4970
  5622  000F04                     u4971:
  5623  000F04  EF8F  F007         	goto	l4468
  5624  000F08                     u4970:
  5625  000F08                     
  5626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5627  000F08  0E00               	movlw	0
  5628  000F0A  0100               	movlb	0	; () banked
  5629  000F0C  6F94               	movwf	efgtoa@l& (0+255),b
  5630  000F0E  0E00               	movlw	0
  5631  000F10  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  5632  000F12  0E00               	movlw	0
  5633  000F14  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  5634  000F16  0E00               	movlw	0
  5635  000F18  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  5636                           
  5637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5638  000F1A  EFB8  F007         	goto	l4474
  5639  000F1E                     l4468:
  5640                           
  5641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5642  000F1E  C090  F001         	movff	efgtoa@h,___fleq@ff1
  5643  000F22  C091  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5644  000F26  C092  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5645  000F2A  C093  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5646  000F2E  C094  F005         	movff	efgtoa@l,___fleq@ff2
  5647  000F32  C095  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5648  000F36  C096  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5649  000F3A  C097  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5650  000F3E  EC35  F01F         	call	___fleq	;wreg free
  5651  000F42  A0D8               	btfss	status,0,c
  5652  000F44  EFA6  F007         	goto	u4981
  5653  000F48  EFA8  F007         	goto	u4980
  5654  000F4C                     u4981:
  5655  000F4C  EFB8  F007         	goto	l4474
  5656  000F50                     u4980:
  5657  000F50  0100               	movlb	0	; () banked
  5658  000F52  B186               	btfsc	efgtoa@d& (0+255),0,b
  5659  000F54  EFAE  F007         	goto	u4991
  5660  000F58  EFB0  F007         	goto	u4990
  5661  000F5C                     u4991:
  5662  000F5C  EFB8  F007         	goto	l4474
  5663  000F60                     u4990:
  5664  000F60                     
  5665                           ; BSR set to: 0
  5666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5667  000F60  0E00               	movlw	0
  5668  000F62  6F94               	movwf	efgtoa@l& (0+255),b
  5669  000F64  0E00               	movlw	0
  5670  000F66  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  5671  000F68  0E00               	movlw	0
  5672  000F6A  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  5673  000F6C  0E00               	movlw	0
  5674  000F6E  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  5675  000F70                     l4474:
  5676                           
  5677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5678  000F70  C09A  F047         	movff	efgtoa@g,___fladd@b
  5679  000F74  C09B  F048         	movff	efgtoa@g+1,___fladd@b+1
  5680  000F78  C09C  F049         	movff	efgtoa@g+2,___fladd@b+2
  5681  000F7C  C09D  F04A         	movff	efgtoa@g+3,___fladd@b+3
  5682  000F80  C094  F04B         	movff	efgtoa@l,___fladd@a
  5683  000F84  C095  F04C         	movff	efgtoa@l+1,___fladd@a+1
  5684  000F88  C096  F04D         	movff	efgtoa@l+2,___fladd@a+2
  5685  000F8C  C097  F04E         	movff	efgtoa@l+3,___fladd@a+3
  5686  000F90  EC5F  F00D         	call	___fladd	;wreg free
  5687  000F94  C047  F090         	movff	?___fladd,efgtoa@h
  5688  000F98  C048  F091         	movff	?___fladd+1,efgtoa@h+1
  5689  000F9C  C049  F092         	movff	?___fladd+2,efgtoa@h+2
  5690  000FA0  C04A  F093         	movff	?___fladd+3,efgtoa@h+3
  5691  000FA4                     
  5692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5693  000FA4  C090  F02E         	movff	efgtoa@h,___flge@ff1
  5694  000FA8  C091  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  5695  000FAC  C092  F030         	movff	efgtoa@h+2,___flge@ff1+2
  5696  000FB0  C093  F031         	movff	efgtoa@h+3,___flge@ff1+3
  5697  000FB4  0E00               	movlw	0
  5698  000FB6  6E19               	movwf	___flmul@a^0,c
  5699  000FB8  0E00               	movlw	0
  5700  000FBA  6E1A               	movwf	(___flmul@a+1)^0,c
  5701  000FBC  0E20               	movlw	32
  5702  000FBE  6E1B               	movwf	(___flmul@a+2)^0,c
  5703  000FC0  0E41               	movlw	65
  5704  000FC2  6E1C               	movwf	(___flmul@a+3)^0,c
  5705  000FC4  C082  F015         	movff	efgtoa@ou,___flmul@b
  5706  000FC8  C083  F016         	movff	efgtoa@ou+1,___flmul@b+1
  5707  000FCC  C084  F017         	movff	efgtoa@ou+2,___flmul@b+2
  5708  000FD0  C085  F018         	movff	efgtoa@ou+3,___flmul@b+3
  5709  000FD4  ECBF  F00F         	call	___flmul	;wreg free
  5710  000FD8  C015  F032         	movff	?___flmul,___flge@ff2
  5711  000FDC  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  5712  000FE0  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  5713  000FE4  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  5714  000FE8  ECC8  F01B         	call	___flge	;wreg free
  5715  000FEC  A0D8               	btfss	status,0,c
  5716  000FEE  EFFB  F007         	goto	u5001
  5717  000FF2  EFFD  F007         	goto	u5000
  5718  000FF6                     u5001:
  5719  000FF6  EF26  F008         	goto	l4486
  5720  000FFA                     u5000:
  5721  000FFA                     
  5722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5723  000FFA  0100               	movlb	0	; () banked
  5724  000FFC  4B9E               	infsnz	efgtoa@e& (0+255),f,b
  5725  000FFE  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  5726  001000                     
  5727                           ; BSR set to: 0
  5728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5729  001000  C082  F015         	movff	efgtoa@ou,___flmul@b
  5730  001004  C083  F016         	movff	efgtoa@ou+1,___flmul@b+1
  5731  001008  C084  F017         	movff	efgtoa@ou+2,___flmul@b+2
  5732  00100C  C085  F018         	movff	efgtoa@ou+3,___flmul@b+3
  5733  001010  0E00               	movlw	0
  5734  001012  6E19               	movwf	___flmul@a^0,c
  5735  001014  0E00               	movlw	0
  5736  001016  6E1A               	movwf	(___flmul@a+1)^0,c
  5737  001018  0E20               	movlw	32
  5738  00101A  6E1B               	movwf	(___flmul@a+2)^0,c
  5739  00101C  0E41               	movlw	65
  5740  00101E  6E1C               	movwf	(___flmul@a+3)^0,c
  5741  001020  ECBF  F00F         	call	___flmul	;wreg free
  5742  001024  C015  F082         	movff	?___flmul,efgtoa@ou
  5743  001028  C016  F083         	movff	?___flmul+1,efgtoa@ou+1
  5744  00102C  C017  F084         	movff	?___flmul+2,efgtoa@ou+2
  5745  001030  C018  F085         	movff	?___flmul+3,efgtoa@ou+3
  5746  001034                     
  5747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5748  001034  0E66               	movlw	102
  5749  001036  0100               	movlb	0	; () banked
  5750  001038  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5751  00103A  A4D8               	btfss	status,2,c
  5752  00103C  EF22  F008         	goto	u5011
  5753  001040  EF24  F008         	goto	u5010
  5754  001044                     u5011:
  5755  001044  EF26  F008         	goto	l4486
  5756  001048                     u5010:
  5757  001048                     
  5758                           ; BSR set to: 0
  5759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5760  001048  4B80               	infsnz	efgtoa@m& (0+255),f,b
  5761  00104A  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  5762  00104C                     l4486:
  5763                           
  5764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5765  00104C  C082  F0A2         	movff	efgtoa@ou,efgtoa@u
  5766  001050  C083  F0A3         	movff	efgtoa@ou+1,efgtoa@u+1
  5767  001054  C084  F0A4         	movff	efgtoa@ou+2,efgtoa@u+2
  5768  001058  C085  F0A5         	movff	efgtoa@ou+3,efgtoa@u+3
  5769  00105C                     
  5770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5771  00105C  0E65               	movlw	101
  5772  00105E  0100               	movlb	0	; () banked
  5773  001060  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5774  001062  B4D8               	btfsc	status,2,c
  5775  001064  EF36  F008         	goto	u5021
  5776  001068  EF38  F008         	goto	u5020
  5777  00106C                     u5021:
  5778  00106C  EF3E  F008         	goto	l4492
  5779  001070                     u5020:
  5780  001070                     
  5781                           ; BSR set to: 0
  5782  001070  C09E  F07E         	movff	efgtoa@e,efgtoa@ne
  5783  001074  C09F  F07F         	movff	efgtoa@e+1,efgtoa@ne+1
  5784  001078  EF42  F008         	goto	l1196
  5785  00107C                     l4492:
  5786                           
  5787                           ; BSR set to: 0
  5788  00107C  0E00               	movlw	0
  5789  00107E  6F7F               	movwf	(efgtoa@ne+1)& (0+255),b
  5790  001080  0E00               	movlw	0
  5791  001082  6F7E               	movwf	efgtoa@ne& (0+255),b
  5792  001084                     l1196:
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5796  001084  0E00               	movlw	0
  5797  001086  6F7D               	movwf	(efgtoa@pp+1)& (0+255),b
  5798  001088  0E00               	movlw	0
  5799  00108A  6F7C               	movwf	efgtoa@pp& (0+255),b
  5800                           
  5801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5802  00108C  0E00               	movlw	0
  5803  00108E  6F7B               	movwf	(efgtoa@t+1)& (0+255),b
  5804  001090  0E00               	movlw	0
  5805  001092  6F7A               	movwf	efgtoa@t& (0+255),b
  5806                           
  5807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5808  001094  0E00               	movlw	0
  5809  001096  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  5810  001098  0E00               	movlw	0
  5811  00109A  6F98               	movwf	efgtoa@i& (0+255),b
  5812                           
  5813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5814  00109C  EF3D  F009         	goto	l4542
  5815  0010A0                     l4494:
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5819  0010A0  C090  F02E         	movff	efgtoa@h,___fldiv@b
  5820  0010A4  C091  F02F         	movff	efgtoa@h+1,___fldiv@b+1
  5821  0010A8  C092  F030         	movff	efgtoa@h+2,___fldiv@b+2
  5822  0010AC  C093  F031         	movff	efgtoa@h+3,___fldiv@b+3
  5823  0010B0  C0A2  F032         	movff	efgtoa@u,___fldiv@a
  5824  0010B4  C0A3  F033         	movff	efgtoa@u+1,___fldiv@a+1
  5825  0010B8  C0A4  F034         	movff	efgtoa@u+2,___fldiv@a+2
  5826  0010BC  C0A5  F035         	movff	efgtoa@u+3,___fldiv@a+3
  5827  0010C0  ECB2  F013         	call	___fldiv	;wreg free
  5828  0010C4  C02E  F047         	movff	?___fldiv,floorf@x
  5829  0010C8  C02F  F048         	movff	?___fldiv+1,floorf@x+1
  5830  0010CC  C030  F049         	movff	?___fldiv+2,floorf@x+2
  5831  0010D0  C031  F04A         	movff	?___fldiv+3,floorf@x+3
  5832  0010D4  EC99  F018         	call	_floorf	;wreg free
  5833  0010D8  C047  F094         	movff	?_floorf,efgtoa@l
  5834  0010DC  C048  F095         	movff	?_floorf+1,efgtoa@l+1
  5835  0010E0  C049  F096         	movff	?_floorf+2,efgtoa@l+2
  5836  0010E4  C04A  F097         	movff	?_floorf+3,efgtoa@l+3
  5837                           
  5838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5839  0010E8  C094  F057         	movff	efgtoa@l,___fltol@f1
  5840  0010EC  C095  F058         	movff	efgtoa@l+1,___fltol@f1+1
  5841  0010F0  C096  F059         	movff	efgtoa@l+2,___fltol@f1+2
  5842  0010F4  C097  F05A         	movff	efgtoa@l+3,___fltol@f1+3
  5843  0010F8  EC44  F01B         	call	___fltol	;wreg free
  5844  0010FC  C057  F086         	movff	?___fltol,efgtoa@d
  5845  001100  C058  F087         	movff	?___fltol+1,efgtoa@d+1
  5846  001104                     
  5847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5848  001104  0100               	movlb	0	; () banked
  5849  001106  B9FB               	btfsc	_flags& (0+255),4,b
  5850  001108  EF88  F008         	goto	u5031
  5851  00110C  EF8A  F008         	goto	u5030
  5852  001110                     u5031:
  5853  001110  EFA7  F008         	goto	l4506
  5854  001114                     u5030:
  5855  001114                     
  5856                           ; BSR set to: 0
  5857  001114  5186               	movf	efgtoa@d& (0+255),w,b
  5858  001116  1187               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5859  001118  A4D8               	btfss	status,2,c
  5860  00111A  EF91  F008         	goto	u5041
  5861  00111E  EF93  F008         	goto	u5040
  5862  001122                     u5041:
  5863  001122  EFA7  F008         	goto	l4506
  5864  001126                     u5040:
  5865  001126                     
  5866                           ; BSR set to: 0
  5867  001126  0E67               	movlw	103
  5868  001128  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5869  00112A  A4D8               	btfss	status,2,c
  5870  00112C  EF9A  F008         	goto	u5051
  5871  001130  EF9C  F008         	goto	u5050
  5872  001134                     u5051:
  5873  001134  EFA7  F008         	goto	l4506
  5874  001138                     u5050:
  5875  001138                     
  5876                           ; BSR set to: 0
  5877  001138  BF7F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5878  00113A  EFA3  F008         	goto	u5060
  5879  00113E  EFA1  F008         	goto	u5061
  5880  001142                     u5061:
  5881  001142  EFA7  F008         	goto	l4506
  5882  001146                     u5060:
  5883  001146                     
  5884                           ; BSR set to: 0
  5885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5886  001146  4B7A               	infsnz	efgtoa@t& (0+255),f,b
  5887  001148  2B7B               	incf	(efgtoa@t+1)& (0+255),f,b
  5888                           
  5889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5890  00114A  EFF1  F008         	goto	l4534
  5891  00114E                     l4506:
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5895  00114E  517C               	movf	efgtoa@pp& (0+255),w,b
  5896  001150  117D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5897  001152  A4D8               	btfss	status,2,c
  5898  001154  EFAE  F008         	goto	u5071
  5899  001158  EFB0  F008         	goto	u5070
  5900  00115C                     u5071:
  5901  00115C  EFDA  F008         	goto	l4526
  5902  001160                     u5070:
  5903  001160                     
  5904                           ; BSR set to: 0
  5905  001160  BF7F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5906  001162  EFB7  F008         	goto	u5080
  5907  001166  EFB5  F008         	goto	u5081
  5908  00116A                     u5081:
  5909  00116A  EFDA  F008         	goto	l4526
  5910  00116E                     u5080:
  5911  00116E                     
  5912                           ; BSR set to: 0
  5913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5914  00116E  0E2A               	movlw	low _dbuf
  5915  001170  25A0               	addwf	efgtoa@n& (0+255),w,b
  5916  001172  6ED9               	movwf	fsr2l,c
  5917  001174  0E01               	movlw	high _dbuf
  5918  001176  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5919  001178  6EDA               	movwf	fsr2h,c
  5920  00117A  0E2E               	movlw	46
  5921  00117C  6EDF               	movwf	indf2,c
  5922  00117E                     
  5923                           ; BSR set to: 0
  5924  00117E  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  5925  001180  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  5926  001182                     
  5927                           ; BSR set to: 0
  5928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5929  001182  078C               	decf	efgtoa@w& (0+255),f,b
  5930  001184  A0D8               	btfss	status,0,c
  5931  001186  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  5932  001188                     
  5933                           ; BSR set to: 0
  5934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5935  001188  0E00               	movlw	0
  5936  00118A  6F7D               	movwf	(efgtoa@pp+1)& (0+255),b
  5937  00118C  0E01               	movlw	1
  5938  00118E  6F7C               	movwf	efgtoa@pp& (0+255),b
  5939  001190  EFDA  F008         	goto	l4526
  5940  001194                     l4518:
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5944  001194  0E2A               	movlw	low _dbuf
  5945  001196  25A0               	addwf	efgtoa@n& (0+255),w,b
  5946  001198  6ED9               	movwf	fsr2l,c
  5947  00119A  0E01               	movlw	high _dbuf
  5948  00119C  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5949  00119E  6EDA               	movwf	fsr2h,c
  5950  0011A0  0E30               	movlw	48
  5951  0011A2  6EDF               	movwf	indf2,c
  5952  0011A4                     
  5953                           ; BSR set to: 0
  5954  0011A4  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  5955  0011A6  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  5956  0011A8                     
  5957                           ; BSR set to: 0
  5958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5959  0011A8  078C               	decf	efgtoa@w& (0+255),f,b
  5960  0011AA  A0D8               	btfss	status,0,c
  5961  0011AC  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  5962  0011AE                     
  5963                           ; BSR set to: 0
  5964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5965  0011AE  077A               	decf	efgtoa@t& (0+255),f,b
  5966  0011B0  A0D8               	btfss	status,0,c
  5967  0011B2  077B               	decf	(efgtoa@t+1)& (0+255),f,b
  5968  0011B4                     l4526:
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5972  0011B4  517A               	movf	efgtoa@t& (0+255),w,b
  5973  0011B6  117B               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5974  0011B8  A4D8               	btfss	status,2,c
  5975  0011BA  EFE1  F008         	goto	u5091
  5976  0011BE  EFE3  F008         	goto	u5090
  5977  0011C2                     u5091:
  5978  0011C2  EFCA  F008         	goto	l4518
  5979  0011C6                     u5090:
  5980  0011C6                     
  5981                           ; BSR set to: 0
  5982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5983  0011C6  0E2A               	movlw	low _dbuf
  5984  0011C8  25A0               	addwf	efgtoa@n& (0+255),w,b
  5985  0011CA  6ED9               	movwf	fsr2l,c
  5986  0011CC  0E01               	movlw	high _dbuf
  5987  0011CE  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5988  0011D0  6EDA               	movwf	fsr2h,c
  5989  0011D2  5186               	movf	efgtoa@d& (0+255),w,b
  5990  0011D4  0F30               	addlw	48
  5991  0011D6  6EDF               	movwf	indf2,c
  5992  0011D8                     
  5993                           ; BSR set to: 0
  5994  0011D8  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  5995  0011DA  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  5996  0011DC                     
  5997                           ; BSR set to: 0
  5998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5999  0011DC  078C               	decf	efgtoa@w& (0+255),f,b
  6000  0011DE  A0D8               	btfss	status,0,c
  6001  0011E0  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6002  0011E2                     l4534:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  6006  0011E2  C090  F057         	movff	efgtoa@h,___flsub@b
  6007  0011E6  C091  F058         	movff	efgtoa@h+1,___flsub@b+1
  6008  0011EA  C092  F059         	movff	efgtoa@h+2,___flsub@b+2
  6009  0011EE  C093  F05A         	movff	efgtoa@h+3,___flsub@b+3
  6010  0011F2  C0A2  F019         	movff	efgtoa@u,___flmul@a
  6011  0011F6  C0A3  F01A         	movff	efgtoa@u+1,___flmul@a+1
  6012  0011FA  C0A4  F01B         	movff	efgtoa@u+2,___flmul@a+2
  6013  0011FE  C0A5  F01C         	movff	efgtoa@u+3,___flmul@a+3
  6014  001202  C094  F015         	movff	efgtoa@l,___flmul@b
  6015  001206  C095  F016         	movff	efgtoa@l+1,___flmul@b+1
  6016  00120A  C096  F017         	movff	efgtoa@l+2,___flmul@b+2
  6017  00120E  C097  F018         	movff	efgtoa@l+3,___flmul@b+3
  6018  001212  ECBF  F00F         	call	___flmul	;wreg free
  6019  001216  C015  F05B         	movff	?___flmul,___flsub@a
  6020  00121A  C016  F05C         	movff	?___flmul+1,___flsub@a+1
  6021  00121E  C017  F05D         	movff	?___flmul+2,___flsub@a+2
  6022  001222  C018  F05E         	movff	?___flmul+3,___flsub@a+3
  6023  001226  ECE1  F021         	call	___flsub	;wreg free
  6024  00122A  C057  F090         	movff	?___flsub,efgtoa@h
  6025  00122E  C058  F091         	movff	?___flsub+1,efgtoa@h+1
  6026  001232  C059  F092         	movff	?___flsub+2,efgtoa@h+2
  6027  001236  C05A  F093         	movff	?___flsub+3,efgtoa@h+3
  6028  00123A                     
  6029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  6030  00123A  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  6031  00123E  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  6032  001242  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  6033  001246  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  6034  00124A  0E00               	movlw	0
  6035  00124C  6E32               	movwf	___fldiv@a^0,c
  6036  00124E  0E00               	movlw	0
  6037  001250  6E33               	movwf	(___fldiv@a+1)^0,c
  6038  001252  0E20               	movlw	32
  6039  001254  6E34               	movwf	(___fldiv@a+2)^0,c
  6040  001256  0E41               	movlw	65
  6041  001258  6E35               	movwf	(___fldiv@a+3)^0,c
  6042  00125A  ECB2  F013         	call	___fldiv	;wreg free
  6043  00125E  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  6044  001262  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  6045  001266  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  6046  00126A  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  6047  00126E                     
  6048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  6049  00126E  0100               	movlb	0	; () banked
  6050  001270  077E               	decf	efgtoa@ne& (0+255),f,b
  6051  001272  A0D8               	btfss	status,0,c
  6052  001274  077F               	decf	(efgtoa@ne+1)& (0+255),f,b
  6053  001276                     
  6054                           ; BSR set to: 0
  6055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  6056  001276  4B98               	infsnz	efgtoa@i& (0+255),f,b
  6057  001278  2B99               	incf	(efgtoa@i+1)& (0+255),f,b
  6058  00127A                     l4542:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6062  00127A  5180               	movf	efgtoa@m& (0+255),w,b
  6063  00127C  5D98               	subwf	efgtoa@i& (0+255),w,b
  6064  00127E  5199               	movf	(efgtoa@i+1)& (0+255),w,b
  6065  001280  0A80               	xorlw	128
  6066  001282  6F69               	movwf	??_efgtoa& (0+255),b
  6067  001284  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  6068  001286  0A80               	xorlw	128
  6069  001288  5969               	subwfb	??_efgtoa& (0+255),w,b
  6070  00128A  B0D8               	btfsc	status,0,c
  6071  00128C  EF4A  F009         	goto	u5101
  6072  001290  EF4C  F009         	goto	u5100
  6073  001294                     u5101:
  6074  001294  EF5A  F009         	goto	l4546
  6075  001298                     u5100:
  6076  001298                     
  6077                           ; BSR set to: 0
  6078  001298  BFA1               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6079  00129A  EF58  F009         	goto	u5111
  6080  00129E  51A1               	movf	(efgtoa@n+1)& (0+255),w,b
  6081  0012A0  E109               	bnz	u5110
  6082  0012A2  0E4B               	movlw	75
  6083  0012A4  5DA0               	subwf	efgtoa@n& (0+255),w,b
  6084  0012A6  A0D8               	btfss	status,0,c
  6085  0012A8  EF58  F009         	goto	u5111
  6086  0012AC  EF5A  F009         	goto	u5110
  6087  0012B0                     u5111:
  6088  0012B0  EF50  F008         	goto	l4494
  6089  0012B4                     u5110:
  6090  0012B4                     l4546:
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6094  0012B4  517C               	movf	efgtoa@pp& (0+255),w,b
  6095  0012B6  117D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6096  0012B8  A4D8               	btfss	status,2,c
  6097  0012BA  EF61  F009         	goto	u5121
  6098  0012BE  EF63  F009         	goto	u5120
  6099  0012C2                     u5121:
  6100  0012C2  EF74  F009         	goto	l4554
  6101  0012C6                     u5120:
  6102  0012C6                     
  6103                           ; BSR set to: 0
  6104  0012C6  A9FB               	btfss	_flags& (0+255),4,b
  6105  0012C8  EF68  F009         	goto	u5131
  6106  0012CC  EF6A  F009         	goto	u5130
  6107  0012D0                     u5131:
  6108  0012D0  EF74  F009         	goto	l4554
  6109  0012D4                     u5130:
  6110  0012D4                     
  6111                           ; BSR set to: 0
  6112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6113  0012D4  0E2A               	movlw	low _dbuf
  6114  0012D6  25A0               	addwf	efgtoa@n& (0+255),w,b
  6115  0012D8  6ED9               	movwf	fsr2l,c
  6116  0012DA  0E01               	movlw	high _dbuf
  6117  0012DC  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6118  0012DE  6EDA               	movwf	fsr2h,c
  6119  0012E0  0E2E               	movlw	46
  6120  0012E2  6EDF               	movwf	indf2,c
  6121  0012E4                     
  6122                           ; BSR set to: 0
  6123  0012E4  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  6124  0012E6  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  6125  0012E8                     l4554:
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6129  0012E8  0E2A               	movlw	low _dbuf
  6130  0012EA  25A0               	addwf	efgtoa@n& (0+255),w,b
  6131  0012EC  6ED9               	movwf	fsr2l,c
  6132  0012EE  0E01               	movlw	high _dbuf
  6133  0012F0  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6134  0012F2  6EDA               	movwf	fsr2h,c
  6135  0012F4  0E00               	movlw	0
  6136  0012F6  6EDF               	movwf	indf2,c
  6137  0012F8                     
  6138                           ; BSR set to: 0
  6139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6140  0012F8  0E65               	movlw	101
  6141  0012FA  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  6142  0012FC  A4D8               	btfss	status,2,c
  6143  0012FE  EF83  F009         	goto	u5141
  6144  001302  EF85  F009         	goto	u5140
  6145  001306                     u5141:
  6146  001306  EFDF  F004         	goto	l4356
  6147  00130A                     u5140:
  6148  00130A                     
  6149                           ; BSR set to: 0
  6150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6151  00130A  0E00               	movlw	0
  6152  00130C  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  6153  00130E  0E4F               	movlw	79
  6154  001310  6F98               	movwf	efgtoa@i& (0+255),b
  6155  001312                     
  6156                           ; BSR set to: 0
  6157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6158  001312  0E2A               	movlw	low _dbuf
  6159  001314  2598               	addwf	efgtoa@i& (0+255),w,b
  6160  001316  6ED9               	movwf	fsr2l,c
  6161  001318  0E01               	movlw	high _dbuf
  6162  00131A  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6163  00131C  6EDA               	movwf	fsr2h,c
  6164  00131E  0E00               	movlw	0
  6165  001320  6EDF               	movwf	indf2,c
  6166  001322                     
  6167                           ; BSR set to: 0
  6168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6169  001322  0E00               	movlw	0
  6170  001324  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  6171  001326  0E00               	movlw	0
  6172  001328  6F88               	movwf	efgtoa@sign& (0+255),b
  6173  00132A                     
  6174                           ; BSR set to: 0
  6175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6176  00132A  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6177  00132C  EF9C  F009         	goto	u5150
  6178  001330  EF9A  F009         	goto	u5151
  6179  001334                     u5151:
  6180  001334  EFA4  F009         	goto	l4570
  6181  001338                     u5150:
  6182  001338                     
  6183                           ; BSR set to: 0
  6184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6185  001338  0E00               	movlw	0
  6186  00133A  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  6187  00133C  0E01               	movlw	1
  6188  00133E  6F88               	movwf	efgtoa@sign& (0+255),b
  6189  001340                     
  6190                           ; BSR set to: 0
  6191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6192  001340  6D9E               	negf	efgtoa@e& (0+255),b
  6193  001342  1F9F               	comf	(efgtoa@e+1)& (0+255),f,b
  6194  001344  B0D8               	btfsc	status,0,c
  6195  001346  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  6196  001348                     l4570:
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6200  001348  0E00               	movlw	0
  6201  00134A  6F8B               	movwf	(efgtoa@p+1)& (0+255),b
  6202  00134C  0E02               	movlw	2
  6203  00134E  6F8A               	movwf	efgtoa@p& (0+255),b
  6204                           
  6205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6206  001350  EFD5  F009         	goto	l4582
  6207  001354                     l4572:
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6211  001354  0798               	decf	efgtoa@i& (0+255),f,b
  6212  001356  A0D8               	btfss	status,0,c
  6213  001358  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  6214  00135A                     
  6215                           ; BSR set to: 0
  6216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6217  00135A  0E2A               	movlw	low _dbuf
  6218  00135C  2598               	addwf	efgtoa@i& (0+255),w,b
  6219  00135E  6ED9               	movwf	fsr2l,c
  6220  001360  0E01               	movlw	high _dbuf
  6221  001362  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6222  001364  6EDA               	movwf	fsr2h,c
  6223  001366  C09E  F001         	movff	efgtoa@e,___awmod@dividend
  6224  00136A  C09F  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6225  00136E  0E00               	movlw	0
  6226  001370  6E04               	movwf	(___awmod@divisor+1)^0,c
  6227  001372  0E0A               	movlw	10
  6228  001374  6E03               	movwf	___awmod@divisor^0,c
  6229  001376  ECDD  F01E         	call	___awmod	;wreg free
  6230  00137A  5001               	movf	?___awmod^0,w,c
  6231  00137C  0F30               	addlw	48
  6232  00137E  6EDF               	movwf	indf2,c
  6233  001380                     
  6234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6235  001380  C09E  F001         	movff	efgtoa@e,___awdiv@dividend
  6236  001384  C09F  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  6237  001388  0E00               	movlw	0
  6238  00138A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6239  00138C  0E0A               	movlw	10
  6240  00138E  6E03               	movwf	___awdiv@divisor^0,c
  6241  001390  EC7B  F01E         	call	___awdiv	;wreg free
  6242  001394  C001  F09E         	movff	?___awdiv,efgtoa@e
  6243  001398  C002  F09F         	movff	?___awdiv+1,efgtoa@e+1
  6244  00139C                     
  6245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6246  00139C  0100               	movlb	0	; () banked
  6247  00139E  078A               	decf	efgtoa@p& (0+255),f,b
  6248  0013A0  A0D8               	btfss	status,0,c
  6249  0013A2  078B               	decf	(efgtoa@p+1)& (0+255),f,b
  6250  0013A4                     
  6251                           ; BSR set to: 0
  6252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6253  0013A4  078C               	decf	efgtoa@w& (0+255),f,b
  6254  0013A6  A0D8               	btfss	status,0,c
  6255  0013A8  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6256  0013AA                     l4582:
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6260  0013AA  519E               	movf	efgtoa@e& (0+255),w,b
  6261  0013AC  119F               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6262  0013AE  A4D8               	btfss	status,2,c
  6263  0013B0  EFDC  F009         	goto	u5161
  6264  0013B4  EFDE  F009         	goto	u5160
  6265  0013B8                     u5161:
  6266  0013B8  EFAA  F009         	goto	l4572
  6267  0013BC                     u5160:
  6268  0013BC                     
  6269                           ; BSR set to: 0
  6270  0013BC  BF8B               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6271  0013BE  EFEB  F009         	goto	u5170
  6272  0013C2  518B               	movf	(efgtoa@p+1)& (0+255),w,b
  6273  0013C4  E106               	bnz	u5171
  6274  0013C6  058A               	decf	efgtoa@p& (0+255),w,b
  6275  0013C8  B0D8               	btfsc	status,0,c
  6276  0013CA  EFE9  F009         	goto	u5171
  6277  0013CE  EFEB  F009         	goto	u5170
  6278  0013D2                     u5171:
  6279  0013D2  EFAA  F009         	goto	l4572
  6280  0013D6                     u5170:
  6281  0013D6                     
  6282                           ; BSR set to: 0
  6283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6284  0013D6  0798               	decf	efgtoa@i& (0+255),f,b
  6285  0013D8  A0D8               	btfss	status,0,c
  6286  0013DA  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  6287  0013DC                     
  6288                           ; BSR set to: 0
  6289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6290  0013DC  5188               	movf	efgtoa@sign& (0+255),w,b
  6291  0013DE  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6292  0013E0  A4D8               	btfss	status,2,c
  6293  0013E2  EFF5  F009         	goto	u5181
  6294  0013E6  EFF7  F009         	goto	u5180
  6295  0013EA                     u5181:
  6296  0013EA  EFFD  F009         	goto	l4592
  6297  0013EE                     u5180:
  6298  0013EE                     
  6299                           ; BSR set to: 0
  6300  0013EE  0E00               	movlw	0
  6301  0013F0  6F75               	movwf	(_efgtoa$1657+1)& (0+255),b
  6302  0013F2  0E2B               	movlw	43
  6303  0013F4  6F74               	movwf	_efgtoa$1657& (0+255),b
  6304  0013F6  EF01  F00A         	goto	l4594
  6305  0013FA                     l4592:
  6306                           
  6307                           ; BSR set to: 0
  6308  0013FA  0E00               	movlw	0
  6309  0013FC  6F75               	movwf	(_efgtoa$1657+1)& (0+255),b
  6310  0013FE  0E2D               	movlw	45
  6311  001400  6F74               	movwf	_efgtoa$1657& (0+255),b
  6312  001402                     l4594:
  6313                           
  6314                           ; BSR set to: 0
  6315  001402  0E2A               	movlw	low _dbuf
  6316  001404  2598               	addwf	efgtoa@i& (0+255),w,b
  6317  001406  6ED9               	movwf	fsr2l,c
  6318  001408  0E01               	movlw	high _dbuf
  6319  00140A  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6320  00140C  6EDA               	movwf	fsr2h,c
  6321  00140E  C074  FFDF         	movff	_efgtoa$1657,indf2
  6322  001412                     
  6323                           ; BSR set to: 0
  6324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6325  001412  078C               	decf	efgtoa@w& (0+255),f,b
  6326  001414  A0D8               	btfss	status,0,c
  6327  001416  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6328  001418                     
  6329                           ; BSR set to: 0
  6330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6331  001418  0798               	decf	efgtoa@i& (0+255),f,b
  6332  00141A  A0D8               	btfss	status,0,c
  6333  00141C  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  6334  00141E                     
  6335                           ; BSR set to: 0
  6336  00141E  0EBF               	movlw	191
  6337  001420  6F69               	movwf	??_efgtoa& (0+255),b
  6338  001422  0EFF               	movlw	255
  6339  001424  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  6340  001426  5168               	movf	efgtoa@c& (0+255),w,b
  6341  001428  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  6342  00142A  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  6343  00142C  5169               	movf	??_efgtoa& (0+255),w,b
  6344  00142E  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  6345  001430  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  6346  001432  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6347  001434  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  6348  001436  E10A               	bnz	u5190
  6349  001438  0E1A               	movlw	26
  6350  00143A  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  6351  00143C  A0D8               	btfss	status,0,c
  6352  00143E  EF23  F00A         	goto	u5191
  6353  001442  EF26  F00A         	goto	u5190
  6354  001446                     u5191:
  6355  001446  0E01               	movlw	1
  6356  001448  EF27  F00A         	goto	u5200
  6357  00144C                     u5190:
  6358  00144C  0E00               	movlw	0
  6359  00144E                     u5200:
  6360  00144E  6F78               	movwf	_efgtoa$1659& (0+255),b
  6361  001450  6B79               	clrf	(_efgtoa$1659+1)& (0+255),b
  6362  001452                     
  6363                           ; BSR set to: 0
  6364  001452  5178               	movf	_efgtoa$1659& (0+255),w,b
  6365  001454  1179               	iorwf	(_efgtoa$1659+1)& (0+255),w,b
  6366  001456  A4D8               	btfss	status,2,c
  6367  001458  EF30  F00A         	goto	u5211
  6368  00145C  EF32  F00A         	goto	u5210
  6369  001460                     u5211:
  6370  001460  EF38  F00A         	goto	l4608
  6371  001464                     u5210:
  6372  001464                     
  6373                           ; BSR set to: 0
  6374  001464  0E00               	movlw	0
  6375  001466  6F77               	movwf	(_efgtoa$1658+1)& (0+255),b
  6376  001468  0E65               	movlw	101
  6377  00146A  6F76               	movwf	_efgtoa$1658& (0+255),b
  6378  00146C  EF3C  F00A         	goto	l4610
  6379  001470                     l4608:
  6380                           
  6381                           ; BSR set to: 0
  6382  001470  0E00               	movlw	0
  6383  001472  6F77               	movwf	(_efgtoa$1658+1)& (0+255),b
  6384  001474  0E45               	movlw	69
  6385  001476  6F76               	movwf	_efgtoa$1658& (0+255),b
  6386  001478                     l4610:
  6387                           
  6388                           ; BSR set to: 0
  6389  001478  0E2A               	movlw	low _dbuf
  6390  00147A  2598               	addwf	efgtoa@i& (0+255),w,b
  6391  00147C  6ED9               	movwf	fsr2l,c
  6392  00147E  0E01               	movlw	high _dbuf
  6393  001480  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6394  001482  6EDA               	movwf	fsr2h,c
  6395  001484  C076  FFDF         	movff	_efgtoa$1658,indf2
  6396  001488                     
  6397                           ; BSR set to: 0
  6398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6399  001488  078C               	decf	efgtoa@w& (0+255),f,b
  6400  00148A  A0D8               	btfss	status,0,c
  6401  00148C  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6402  00148E                     
  6403                           ; BSR set to: 0
  6404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6405  00148E  0E2A               	movlw	low _dbuf
  6406  001490  25A0               	addwf	efgtoa@n& (0+255),w,b
  6407  001492  6E01               	movwf	strcpy@dest^0,c
  6408  001494  0E01               	movlw	high _dbuf
  6409  001496  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6410  001498  6E02               	movwf	(strcpy@dest+1)^0,c
  6411  00149A  0E2A               	movlw	low _dbuf
  6412  00149C  2598               	addwf	efgtoa@i& (0+255),w,b
  6413  00149E  6E03               	movwf	strcpy@src^0,c
  6414  0014A0  0E01               	movlw	high _dbuf
  6415  0014A2  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6416  0014A4  6E04               	movwf	(strcpy@src+1)^0,c
  6417  0014A6  EC7C  F020         	call	_strcpy	;wreg free
  6418  0014AA  EFDF  F004         	goto	l4356
  6419  0014AE                     l1150:
  6420  0014AE  0012               	return		;funcret
  6421  0014B0                     __end_of_efgtoa:
  6422                           	callstack 0
  6423                           
  6424 ;; *************** function _tolower *****************
  6425 ;; Defined at:
  6426 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  c               2    6[COMRAM] int 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;		None
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  2    6[COMRAM] int 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6440 ;;      Params:         2       0       0       0       0       0       0       0       0
  6441 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6442 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6443 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6444 ;;Total ram usage:        8 bytes
  6445 ;; Hardware stack levels used: 1
  6446 ;; Hardware stack levels required when called: 2
  6447 ;; This function calls:
  6448 ;;		_isupper
  6449 ;; This function is called by:
  6450 ;;		_efgtoa
  6451 ;;		_vfpfcnvrt
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text14
  6456  003FDC                     __ptext14:
  6457                           	callstack 0
  6458  003FDC                     _tolower:
  6459                           	callstack 25
  6460  003FDC  0EBF               	movlw	191
  6461  003FDE  6E09               	movwf	??_tolower^0,c
  6462  003FE0  0EFF               	movlw	255
  6463  003FE2  6E0A               	movwf	(??_tolower+1)^0,c
  6464  003FE4  C007  F00B         	movff	tolower@c,??_tolower+2
  6465  003FE8  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6466  003FEC  5009               	movf	??_tolower^0,w,c
  6467  003FEE  260B               	addwf	(??_tolower+2)^0,f,c
  6468  003FF0  500A               	movf	(??_tolower+1)^0,w,c
  6469  003FF2  220C               	addwfc	(??_tolower+3)^0,f,c
  6470  003FF4  500C               	movf	(??_tolower+3)^0,w,c
  6471  003FF6  E10A               	bnz	u4430
  6472  003FF8  0E1A               	movlw	26
  6473  003FFA  5C0B               	subwf	(??_tolower+2)^0,w,c
  6474  003FFC  A0D8               	btfss	status,0,c
  6475  003FFE  EF03  F020         	goto	u4431
  6476  004002  EF06  F020         	goto	u4430
  6477  004006                     u4431:
  6478  004006  0E01               	movlw	1
  6479  004008  EF07  F020         	goto	u4440
  6480  00400C                     u4430:
  6481  00400C  0E00               	movlw	0
  6482  00400E                     u4440:
  6483  00400E  6E0D               	movwf	_tolower$1827^0,c
  6484  004010  6A0E               	clrf	(_tolower$1827+1)^0,c
  6485  004012  500D               	movf	_tolower$1827^0,w,c
  6486  004014  100E               	iorwf	(_tolower$1827+1)^0,w,c
  6487  004016  B4D8               	btfsc	status,2,c
  6488  004018  EF10  F020         	goto	u4451
  6489  00401C  EF12  F020         	goto	u4450
  6490  004020                     u4451:
  6491  004020  EF19  F020         	goto	l1431
  6492  004024                     u4450:
  6493  004024  0E20               	movlw	32
  6494  004026  1007               	iorwf	tolower@c^0,w,c
  6495  004028  6E07               	movwf	?_tolower^0,c
  6496  00402A  5008               	movf	(tolower@c+1)^0,w,c
  6497  00402C  6E08               	movwf	(?_tolower+1)^0,c
  6498  00402E  EF1D  F020         	goto	l1436
  6499  004032                     l1431:
  6500  004032  C007  F007         	movff	tolower@c,?_tolower
  6501  004036  C008  F008         	movff	tolower@c+1,?_tolower+1
  6502  00403A                     l1436:
  6503  00403A  0012               	return		;funcret
  6504  00403C                     __end_of_tolower:
  6505                           	callstack 0
  6506                           
  6507 ;; *************** function _isupper *****************
  6508 ;; Defined at:
  6509 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;  c               2    0[COMRAM] int 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  2    0[COMRAM] int 
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6523 ;;      Params:         2       0       0       0       0       0       0       0       0
  6524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6525 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6526 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6527 ;;Total ram usage:        6 bytes
  6528 ;; Hardware stack levels used: 1
  6529 ;; Hardware stack levels required when called: 1
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_efgtoa
  6534 ;;		_xtoa
  6535 ;;		_vfpfcnvrt
  6536 ;;		_tolower
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text15
  6541  004580                     __ptext15:
  6542                           	callstack 0
  6543  004580                     _isupper:
  6544                           	callstack 25
  6545  004580  0EBF               	movlw	191
  6546  004582  6E03               	movwf	??_isupper^0,c
  6547  004584  0EFF               	movlw	255
  6548  004586  6E04               	movwf	(??_isupper+1)^0,c
  6549  004588  C001  F005         	movff	isupper@c,??_isupper+2
  6550  00458C  C002  F006         	movff	isupper@c+1,??_isupper+3
  6551  004590  5003               	movf	??_isupper^0,w,c
  6552  004592  2605               	addwf	(??_isupper+2)^0,f,c
  6553  004594  5004               	movf	(??_isupper+1)^0,w,c
  6554  004596  2206               	addwfc	(??_isupper+3)^0,f,c
  6555  004598  5006               	movf	(??_isupper+3)^0,w,c
  6556  00459A  E10A               	bnz	u3560
  6557  00459C  0E1A               	movlw	26
  6558  00459E  5C05               	subwf	(??_isupper+2)^0,w,c
  6559  0045A0  A0D8               	btfss	status,0,c
  6560  0045A2  EFD5  F022         	goto	u3561
  6561  0045A6  EFD8  F022         	goto	u3560
  6562  0045AA                     u3561:
  6563  0045AA  0E01               	movlw	1
  6564  0045AC  EFD9  F022         	goto	u3570
  6565  0045B0                     u3560:
  6566  0045B0  0E00               	movlw	0
  6567  0045B2                     u3570:
  6568  0045B2  6E01               	movwf	?_isupper^0,c
  6569  0045B4  6A02               	clrf	(?_isupper+1)^0,c
  6570  0045B6  0012               	return		;funcret
  6571  0045B8                     __end_of_isupper:
  6572                           	callstack 0
  6573                           
  6574 ;; *************** function _strcpy *****************
  6575 ;; Defined at:
  6576 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6579 ;;		 -> dbuf(80), 
  6580 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6581 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  6582 ;;		 -> dbuf(80), 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  d               2    8[COMRAM] PTR unsigned char 
  6585 ;;		 -> dbuf(80), 
  6586 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6587 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  6588 ;;		 -> dbuf(80), 
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  2    0[COMRAM] PTR unsigned char 
  6591 ;; Registers used:
  6592 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6598 ;;      Params:         4       0       0       0       0       0       0       0       0
  6599 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6600 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6601 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6602 ;;Total ram usage:       10 bytes
  6603 ;; Hardware stack levels used: 1
  6604 ;; Hardware stack levels required when called: 1
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_efgtoa
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text16
  6613  0040F8                     __ptext16:
  6614                           	callstack 0
  6615  0040F8                     _strcpy:
  6616                           	callstack 25
  6617  0040F8  C003  F007         	movff	strcpy@src,strcpy@s
  6618  0040FC  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6619  004100  C001  F009         	movff	strcpy@dest,strcpy@d
  6620  004104  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6621  004108                     l4224:
  6622  004108  5007               	movf	strcpy@s^0,w,c
  6623  00410A  6E05               	movwf	??_strcpy^0,c
  6624  00410C  5008               	movf	(strcpy@s+1)^0,w,c
  6625  00410E  6E06               	movwf	(??_strcpy+1)^0,c
  6626  004110  4A07               	infsnz	strcpy@s^0,f,c
  6627  004112  2A08               	incf	(strcpy@s+1)^0,f,c
  6628  004114  C005  FFF6         	movff	??_strcpy,tblptrl
  6629  004118  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6630  00411C  6AF8               	clrf	tblptru,c
  6631  00411E  C009  FFD9         	movff	strcpy@d,fsr2l
  6632  004122  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6633  004126  4A09               	infsnz	strcpy@d^0,f,c
  6634  004128  2A0A               	incf	(strcpy@d+1)^0,f,c
  6635  00412A  0E07               	movlw	(high __ramtop+-1)
  6636  00412C  64F7               	cpfsgt	tblptrh,c
  6637  00412E  D003               	bra	u4417
  6638  004130  0008               	tblrd		*
  6639  004132  50F5               	movf	tablat,w,c
  6640  004134  D005               	bra	u4410
  6641  004136                     u4417:
  6642  004136  CFF6 FFE9          	movff	tblptrl,fsr0l
  6643  00413A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6644  00413E  50EF               	movf	indf0,w,c
  6645  004140                     u4410:
  6646  004140  6EDF               	movwf	indf2,c
  6647  004142  50DF               	movf	indf2,w,c
  6648  004144  A4D8               	btfss	status,2,c
  6649  004146  EFA7  F020         	goto	u4421
  6650  00414A  EFA9  F020         	goto	u4420
  6651  00414E                     u4421:
  6652  00414E  EF84  F020         	goto	l4224
  6653  004152                     u4420:
  6654  004152  0012               	return		;funcret
  6655  004154                     __end_of_strcpy:
  6656                           	callstack 0
  6657                           
  6658 ;; *************** function _pad *****************
  6659 ;; Defined at:
  6660 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6663 ;;		 -> sprintf@f(6), 
  6664 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6665 ;;		 -> dbuf(80), 
  6666 ;;  p               2   20[COMRAM] int 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  w               2   25[COMRAM] int 
  6669 ;;  i               2   23[COMRAM] int 
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  2   16[COMRAM] int 
  6672 ;; Registers used:
  6673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6679 ;;      Params:         6       0       0       0       0       0       0       0       0
  6680 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6681 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6682 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6683 ;;Total ram usage:       11 bytes
  6684 ;; Hardware stack levels used: 1
  6685 ;; Hardware stack levels required when called: 4
  6686 ;; This function calls:
  6687 ;;		_fputc
  6688 ;;		_fputs
  6689 ;;		_strlen
  6690 ;; This function is called by:
  6691 ;;		_efgtoa
  6692 ;;		_xtoa
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text17
  6697  003C30                     __ptext17:
  6698                           	callstack 0
  6699  003C30                     _pad:
  6700                           	callstack 22
  6701  003C30                     
  6702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6703  003C30  0100               	movlb	0	; () banked
  6704  003C32  A1FB               	btfss	_flags& (0+255),0,b
  6705  003C34  EF1E  F01E         	goto	u4301
  6706  003C38  EF20  F01E         	goto	u4300
  6707  003C3C                     u4301:
  6708  003C3C  EF2A  F01E         	goto	l4182
  6709  003C40                     u4300:
  6710  003C40                     
  6711                           ; BSR set to: 0
  6712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6713  003C40  C013  F00A         	movff	pad@buf,fputs@s
  6714  003C44  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6715  003C48  C011  F00C         	movff	pad@fp,fputs@fp
  6716  003C4C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6717  003C50  EC27  F022         	call	_fputs	;wreg free
  6718  003C54                     l4182:
  6719                           
  6720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6721  003C54  BE16               	btfsc	(pad@p+1)^0,7,c
  6722  003C56  EF2F  F01E         	goto	u4311
  6723  003C5A  EF31  F01E         	goto	u4310
  6724  003C5E                     u4311:
  6725  003C5E  EF37  F01E         	goto	l4186
  6726  003C62                     u4310:
  6727  003C62  C015  F01A         	movff	pad@p,pad@w
  6728  003C66  C016  F01B         	movff	pad@p+1,pad@w+1
  6729  003C6A  EF3B  F01E         	goto	l1127
  6730  003C6E                     l4186:
  6731  003C6E  0E00               	movlw	0
  6732  003C70  6E1B               	movwf	(pad@w+1)^0,c
  6733  003C72  0E00               	movlw	0
  6734  003C74  6E1A               	movwf	pad@w^0,c
  6735  003C76                     l1127:
  6736                           
  6737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6738  003C76  0E00               	movlw	0
  6739  003C78  6E19               	movwf	(pad@i+1)^0,c
  6740  003C7A  0E00               	movlw	0
  6741  003C7C  6E18               	movwf	pad@i^0,c
  6742                           
  6743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6744  003C7E  EF4D  F01E         	goto	l4192
  6745  003C82                     l4188:
  6746                           
  6747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6748  003C82  0E00               	movlw	0
  6749  003C84  6E02               	movwf	(fputc@c+1)^0,c
  6750  003C86  0E20               	movlw	32
  6751  003C88  6E01               	movwf	fputc@c^0,c
  6752  003C8A  C011  F003         	movff	pad@fp,fputc@fp
  6753  003C8E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6754  003C92  ECB3  F01D         	call	_fputc	;wreg free
  6755  003C96                     
  6756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6757  003C96  4A18               	infsnz	pad@i^0,f,c
  6758  003C98  2A19               	incf	(pad@i+1)^0,f,c
  6759  003C9A                     l4192:
  6760                           
  6761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6762  003C9A  501A               	movf	pad@w^0,w,c
  6763  003C9C  5C18               	subwf	pad@i^0,w,c
  6764  003C9E  5019               	movf	(pad@i+1)^0,w,c
  6765  003CA0  0A80               	xorlw	128
  6766  003CA2  6E17               	movwf	??_pad^0,c
  6767  003CA4  501B               	movf	(pad@w+1)^0,w,c
  6768  003CA6  0A80               	xorlw	128
  6769  003CA8  5817               	subwfb	??_pad^0,w,c
  6770  003CAA  A0D8               	btfss	status,0,c
  6771  003CAC  EF5A  F01E         	goto	u4321
  6772  003CB0  EF5C  F01E         	goto	u4320
  6773  003CB4                     u4321:
  6774  003CB4  EF41  F01E         	goto	l4188
  6775  003CB8                     u4320:
  6776  003CB8                     
  6777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6778  003CB8  0100               	movlb	0	; () banked
  6779  003CBA  B1FB               	btfsc	_flags& (0+255),0,b
  6780  003CBC  EF62  F01E         	goto	u4331
  6781  003CC0  EF64  F01E         	goto	u4330
  6782  003CC4                     u4331:
  6783  003CC4  EF6E  F01E         	goto	l4196
  6784  003CC8                     u4330:
  6785  003CC8                     
  6786                           ; BSR set to: 0
  6787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6788  003CC8  C013  F00A         	movff	pad@buf,fputs@s
  6789  003CCC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6790  003CD0  C011  F00C         	movff	pad@fp,fputs@fp
  6791  003CD4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6792  003CD8  EC27  F022         	call	_fputs	;wreg free
  6793  003CDC                     l4196:
  6794                           
  6795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6796  003CDC  C013  F001         	movff	pad@buf,strlen@s
  6797  003CE0  C014  F002         	movff	pad@buf+1,strlen@s+1
  6798  003CE4  EC14  F023         	call	_strlen	;wreg free
  6799  003CE8  501A               	movf	pad@w^0,w,c
  6800  003CEA  2401               	addwf	?_strlen^0,w,c
  6801  003CEC  6E11               	movwf	?_pad^0,c
  6802  003CEE  501B               	movf	(pad@w+1)^0,w,c
  6803  003CF0  2002               	addwfc	(?_strlen+1)^0,w,c
  6804  003CF2  6E12               	movwf	(?_pad+1)^0,c
  6805  003CF4  0012               	return		;funcret
  6806  003CF6                     __end_of_pad:
  6807                           	callstack 0
  6808                           
  6809 ;; *************** function _strlen *****************
  6810 ;; Defined at:
  6811 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6814 ;;		 -> dbuf(80), 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6817 ;;		 -> dbuf(80), 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  2    0[COMRAM] unsigned int 
  6820 ;; Registers used:
  6821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6827 ;;      Params:         2       0       0       0       0       0       0       0       0
  6828 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6830 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6831 ;;Total ram usage:        4 bytes
  6832 ;; Hardware stack levels used: 1
  6833 ;; Hardware stack levels required when called: 1
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_pad
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text18
  6842  004628                     __ptext18:
  6843                           	callstack 0
  6844  004628                     _strlen:
  6845                           	callstack 24
  6846  004628  C001  F003         	movff	strlen@s,strlen@a
  6847  00462C  C002  F004         	movff	strlen@s+1,strlen@a+1
  6848  004630  EF1C  F023         	goto	l3714
  6849  004634                     l3712:
  6850  004634  4A01               	infsnz	strlen@s^0,f,c
  6851  004636  2A02               	incf	(strlen@s+1)^0,f,c
  6852  004638                     l3714:
  6853  004638  C001  FFD9         	movff	strlen@s,fsr2l
  6854  00463C  C002  FFDA         	movff	strlen@s+1,fsr2h
  6855  004640  50DF               	movf	indf2,w,c
  6856  004642  A4D8               	btfss	status,2,c
  6857  004644  EF26  F023         	goto	u3551
  6858  004648  EF28  F023         	goto	u3550
  6859  00464C                     u3551:
  6860  00464C  EF1A  F023         	goto	l3712
  6861  004650                     u3550:
  6862  004650  5003               	movf	strlen@a^0,w,c
  6863  004652  5C01               	subwf	strlen@s^0,w,c
  6864  004654  6E01               	movwf	?_strlen^0,c
  6865  004656  5004               	movf	(strlen@a+1)^0,w,c
  6866  004658  5802               	subwfb	(strlen@s+1)^0,w,c
  6867  00465A  6E02               	movwf	(?_strlen+1)^0,c
  6868  00465C  0012               	return		;funcret
  6869  00465E                     __end_of_strlen:
  6870                           	callstack 0
  6871                           
  6872 ;; *************** function _fputs *****************
  6873 ;; Defined at:
  6874 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6877 ;;		 -> dbuf(80), 
  6878 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6879 ;;		 -> sprintf@f(6), 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  i               2   14[COMRAM] int 
  6882 ;;  c               1   13[COMRAM] unsigned char 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  2    9[COMRAM] int 
  6885 ;; Registers used:
  6886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6892 ;;      Params:         4       0       0       0       0       0       0       0       0
  6893 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6895 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6896 ;;Total ram usage:        7 bytes
  6897 ;; Hardware stack levels used: 1
  6898 ;; Hardware stack levels required when called: 3
  6899 ;; This function calls:
  6900 ;;		_fputc
  6901 ;; This function is called by:
  6902 ;;		_pad
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text19
  6907  00444E                     __ptext19:
  6908                           	callstack 0
  6909  00444E                     _fputs:
  6910                           	callstack 22
  6911  00444E  0E00               	movlw	0
  6912  004450  6E10               	movwf	(fputs@i+1)^0,c
  6913  004452  0E00               	movlw	0
  6914  004454  6E0F               	movwf	fputs@i^0,c
  6915  004456  EF38  F022         	goto	l3708
  6916  00445A                     l3704:
  6917  00445A  C00E  F001         	movff	fputs@c,fputc@c
  6918  00445E  6A02               	clrf	(fputc@c+1)^0,c
  6919  004460  C00C  F003         	movff	fputs@fp,fputc@fp
  6920  004464  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6921  004468  ECB3  F01D         	call	_fputc	;wreg free
  6922  00446C  4A0F               	infsnz	fputs@i^0,f,c
  6923  00446E  2A10               	incf	(fputs@i+1)^0,f,c
  6924  004470                     l3708:
  6925  004470  500F               	movf	fputs@i^0,w,c
  6926  004472  240A               	addwf	fputs@s^0,w,c
  6927  004474  6ED9               	movwf	fsr2l,c
  6928  004476  5010               	movf	(fputs@i+1)^0,w,c
  6929  004478  200B               	addwfc	(fputs@s+1)^0,w,c
  6930  00447A  6EDA               	movwf	fsr2h,c
  6931  00447C  50DF               	movf	indf2,w,c
  6932  00447E  6E0E               	movwf	fputs@c^0,c
  6933  004480  500E               	movf	fputs@c^0,w,c
  6934  004482  A4D8               	btfss	status,2,c
  6935  004484  EF46  F022         	goto	u3541
  6936  004488  EF48  F022         	goto	u3540
  6937  00448C                     u3541:
  6938  00448C  EF2D  F022         	goto	l3704
  6939  004490                     u3540:
  6940  004490  0012               	return		;funcret
  6941  004492                     __end_of_fputs:
  6942                           	callstack 0
  6943                           
  6944 ;; *************** function _fputc *****************
  6945 ;; Defined at:
  6946 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;  c               2    0[COMRAM] int 
  6949 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6950 ;;		 -> sprintf@f(6), 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  2    0[COMRAM] int 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6962 ;;      Params:         4       0       0       0       0       0       0       0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6964 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6965 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6966 ;;Total ram usage:        9 bytes
  6967 ;; Hardware stack levels used: 1
  6968 ;; Hardware stack levels required when called: 2
  6969 ;; This function calls:
  6970 ;;		_putch
  6971 ;; This function is called by:
  6972 ;;		_pad
  6973 ;;		_vfpfcnvrt
  6974 ;;		_fputs
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text20
  6979  003B66                     __ptext20:
  6980                           	callstack 0
  6981  003B66                     _fputc:
  6982                           	callstack 22
  6983  003B66  5003               	movf	fputc@fp^0,w,c
  6984  003B68  1004               	iorwf	(fputc@fp+1)^0,w,c
  6985  003B6A  B4D8               	btfsc	status,2,c
  6986  003B6C  EFBA  F01D         	goto	u3111
  6987  003B70  EFBC  F01D         	goto	u3110
  6988  003B74                     u3111:
  6989  003B74  EFC5  F01D         	goto	l3490
  6990  003B78                     u3110:
  6991  003B78  5003               	movf	fputc@fp^0,w,c
  6992  003B7A  1004               	iorwf	(fputc@fp+1)^0,w,c
  6993  003B7C  A4D8               	btfss	status,2,c
  6994  003B7E  EFC3  F01D         	goto	u3121
  6995  003B82  EFC5  F01D         	goto	u3120
  6996  003B86                     u3121:
  6997  003B86  EFCA  F01D         	goto	l3492
  6998  003B8A                     u3120:
  6999  003B8A                     l3490:
  7000  003B8A  5001               	movf	fputc@c^0,w,c
  7001  003B8C  ECF6  F023         	call	_putch
  7002  003B90  EF17  F01E         	goto	l1394
  7003  003B94                     l3492:
  7004  003B94  EE20 F004          	lfsr	2,4
  7005  003B98  5003               	movf	fputc@fp^0,w,c
  7006  003B9A  26D9               	addwf	fsr2l,f,c
  7007  003B9C  5004               	movf	(fputc@fp+1)^0,w,c
  7008  003B9E  22DA               	addwfc	fsr2h,f,c
  7009  003BA0  50DE               	movf	postinc2,w,c
  7010  003BA2  10DE               	iorwf	postinc2,w,c
  7011  003BA4  B4D8               	btfsc	status,2,c
  7012  003BA6  EFD7  F01D         	goto	u3131
  7013  003BAA  EFD9  F01D         	goto	u3130
  7014  003BAE                     u3131:
  7015  003BAE  EFF4  F01D         	goto	l3496
  7016  003BB2                     u3130:
  7017  003BB2  EE20 F004          	lfsr	2,4
  7018  003BB6  5003               	movf	fputc@fp^0,w,c
  7019  003BB8  26D9               	addwf	fsr2l,f,c
  7020  003BBA  5004               	movf	(fputc@fp+1)^0,w,c
  7021  003BBC  22DA               	addwfc	fsr2h,f,c
  7022  003BBE  EE10 F002          	lfsr	1,2
  7023  003BC2  5003               	movf	fputc@fp^0,w,c
  7024  003BC4  26E1               	addwf	fsr1l,f,c
  7025  003BC6  5004               	movf	(fputc@fp+1)^0,w,c
  7026  003BC8  22E2               	addwfc	fsr1h,f,c
  7027  003BCA  50DE               	movf	postinc2,w,c
  7028  003BCC  5CE6               	subwf	postinc1,w,c
  7029  003BCE  50E6               	movf	postinc1,w,c
  7030  003BD0  0A80               	xorlw	128
  7031  003BD2  6E09               	movwf	(??_fputc+4)^0,c
  7032  003BD4  50DE               	movf	postinc2,w,c
  7033  003BD6  0A80               	xorlw	128
  7034  003BD8  5809               	subwfb	(??_fputc+4)^0,w,c
  7035  003BDA  B0D8               	btfsc	status,0,c
  7036  003BDC  EFF2  F01D         	goto	u3141
  7037  003BE0  EFF4  F01D         	goto	u3140
  7038  003BE4                     u3141:
  7039  003BE4  EF17  F01E         	goto	l1394
  7040  003BE8                     u3140:
  7041  003BE8                     l3496:
  7042  003BE8  EE20 F002          	lfsr	2,2
  7043  003BEC  5003               	movf	fputc@fp^0,w,c
  7044  003BEE  26D9               	addwf	fsr2l,f,c
  7045  003BF0  5004               	movf	(fputc@fp+1)^0,w,c
  7046  003BF2  22DA               	addwfc	fsr2h,f,c
  7047  003BF4  CFDE F005          	movff	postinc2,??_fputc
  7048  003BF8  CFDD F006          	movff	postdec2,??_fputc+1
  7049  003BFC  C003  FFD9         	movff	fputc@fp,fsr2l
  7050  003C00  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7051  003C04  CFDE F007          	movff	postinc2,??_fputc+2
  7052  003C08  CFDD F008          	movff	postdec2,??_fputc+3
  7053  003C0C  5005               	movf	??_fputc^0,w,c
  7054  003C0E  2407               	addwf	(??_fputc+2)^0,w,c
  7055  003C10  6ED9               	movwf	fsr2l,c
  7056  003C12  5006               	movf	(??_fputc+1)^0,w,c
  7057  003C14  2008               	addwfc	(??_fputc+3)^0,w,c
  7058  003C16  6EDA               	movwf	fsr2h,c
  7059  003C18  C001  FFDF         	movff	fputc@c,indf2
  7060  003C1C  EE20 F002          	lfsr	2,2
  7061  003C20  5003               	movf	fputc@fp^0,w,c
  7062  003C22  26D9               	addwf	fsr2l,f,c
  7063  003C24  5004               	movf	(fputc@fp+1)^0,w,c
  7064  003C26  22DA               	addwfc	fsr2h,f,c
  7065  003C28  2ADE               	incf	postinc2,f,c
  7066  003C2A  0E00               	movlw	0
  7067  003C2C  22DD               	addwfc	postdec2,f,c
  7068  003C2E                     l1394:
  7069  003C2E  0012               	return		;funcret
  7070  003C30                     __end_of_fputc:
  7071                           	callstack 0
  7072                           
  7073 ;; *************** function _putch *****************
  7074 ;; Defined at:
  7075 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  c               1    wreg     unsigned char 
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  c               1    0[COMRAM] unsigned char 
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  1    wreg      void 
  7082 ;; Registers used:
  7083 ;;		wreg
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7089 ;;      Params:         0       0       0       0       0       0       0       0       0
  7090 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7092 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7093 ;;Total ram usage:        0 bytes
  7094 ;; Hardware stack levels used: 1
  7095 ;; Hardware stack levels required when called: 1
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_fputc
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           	psect	text21
  7104  0047EC                     __ptext21:
  7105                           	callstack 0
  7106  0047EC                     _putch:
  7107                           	callstack 22
  7108  0047EC  0012               	return		;funcret
  7109  0047EE                     __end_of_putch:
  7110                           	callstack 0
  7111                           
  7112 ;; *************** function _floorf *****************
  7113 ;; Defined at:
  7114 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  x               4   70[COMRAM] float 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  u               4   86[COMRAM] struct .
  7119 ;;  m               4   80[COMRAM] unsigned long 
  7120 ;;  e               2   84[COMRAM] int 
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  4   70[COMRAM] float 
  7123 ;; Registers used:
  7124 ;;		wreg, status,2, status,0
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7130 ;;      Params:         4       0       0       0       0       0       0       0       0
  7131 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7132 ;;      Temps:          6       0       0       0       0       0       0       0       0
  7133 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7134 ;;Total ram usage:       20 bytes
  7135 ;; Hardware stack levels used: 1
  7136 ;; Hardware stack levels required when called: 1
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_efgtoa
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text22
  7145  003132                     __ptext22:
  7146                           	callstack 0
  7147  003132                     _floorf:
  7148                           	callstack 25
  7149  003132  C0E5  F057         	movff	floorf@F527,floorf@u
  7150  003136  C0E6  F058         	movff	floorf@F527+1,floorf@u+1
  7151  00313A  C0E7  F059         	movff	floorf@F527+2,floorf@u+2
  7152  00313E  C0E8  F05A         	movff	floorf@F527+3,floorf@u+3
  7153  003142  C047  F057         	movff	floorf@x,floorf@u
  7154  003146  C048  F058         	movff	floorf@x+1,floorf@u+1
  7155  00314A  C049  F059         	movff	floorf@x+2,floorf@u+2
  7156  00314E  C04A  F05A         	movff	floorf@x+3,floorf@u+3
  7157  003152  0E81               	movlw	129
  7158  003154  6E4B               	movwf	??_floorf^0,c
  7159  003156  0EFF               	movlw	255
  7160  003158  6E4C               	movwf	(??_floorf+1)^0,c
  7161  00315A  C057  F04D         	movff	floorf@u,??_floorf+2
  7162  00315E  C058  F04E         	movff	floorf@u+1,??_floorf+3
  7163  003162  C059  F04F         	movff	floorf@u+2,??_floorf+4
  7164  003166  C05A  F050         	movff	floorf@u+3,??_floorf+5
  7165  00316A  0E18               	movlw	24
  7166  00316C  EFBD  F018         	goto	u4460
  7167  003170                     u4465:
  7168  003170  90D8               	bcf	status,0,c
  7169  003172  3250               	rrcf	(??_floorf+5)^0,f,c
  7170  003174  324F               	rrcf	(??_floorf+4)^0,f,c
  7171  003176  324E               	rrcf	(??_floorf+3)^0,f,c
  7172  003178  324D               	rrcf	(??_floorf+2)^0,f,c
  7173  00317A                     u4460:
  7174  00317A  2EE8               	decfsz	wreg,f,c
  7175  00317C  EFB8  F018         	goto	u4465
  7176  003180  504D               	movf	(??_floorf+2)^0,w,c
  7177  003182  244B               	addwf	??_floorf^0,w,c
  7178  003184  6E55               	movwf	floorf@e^0,c
  7179  003186  0E00               	movlw	0
  7180  003188  204C               	addwfc	(??_floorf+1)^0,w,c
  7181  00318A  6E56               	movwf	(floorf@e+1)^0,c
  7182  00318C  BE56               	btfsc	(floorf@e+1)^0,7,c
  7183  00318E  EFD2  F018         	goto	u4471
  7184  003192  5056               	movf	(floorf@e+1)^0,w,c
  7185  003194  E109               	bnz	u4470
  7186  003196  0E17               	movlw	23
  7187  003198  5C55               	subwf	floorf@e^0,w,c
  7188  00319A  A0D8               	btfss	status,0,c
  7189  00319C  EFD2  F018         	goto	u4471
  7190  0031A0  EFD4  F018         	goto	u4470
  7191  0031A4                     u4471:
  7192  0031A4  EFDE  F018         	goto	l4242
  7193  0031A8                     u4470:
  7194  0031A8                     l4240:
  7195  0031A8  C047  F047         	movff	floorf@x,?_floorf
  7196  0031AC  C048  F048         	movff	floorf@x+1,?_floorf+1
  7197  0031B0  C049  F049         	movff	floorf@x+2,?_floorf+2
  7198  0031B4  C04A  F04A         	movff	floorf@x+3,?_floorf+3
  7199  0031B8  EFA1  F019         	goto	l1349
  7200  0031BC                     l4242:
  7201  0031BC  BE56               	btfsc	(floorf@e+1)^0,7,c
  7202  0031BE  EFE3  F018         	goto	u4481
  7203  0031C2  EFE5  F018         	goto	u4480
  7204  0031C6                     u4481:
  7205  0031C6  EF55  F019         	goto	l4252
  7206  0031CA                     u4480:
  7207  0031CA  C055  F04B         	movff	floorf@e,??_floorf
  7208  0031CE  0EFF               	movlw	255
  7209  0031D0  6E4C               	movwf	(??_floorf+1)^0,c
  7210  0031D2  0EFF               	movlw	255
  7211  0031D4  6E4D               	movwf	(??_floorf+2)^0,c
  7212  0031D6  0E7F               	movlw	127
  7213  0031D8  6E4E               	movwf	(??_floorf+3)^0,c
  7214  0031DA  0E00               	movlw	0
  7215  0031DC  6E4F               	movwf	(??_floorf+4)^0,c
  7216  0031DE                     u4495:
  7217  0031DE  664B               	tstfsz	??_floorf^0,c
  7218  0031E0  EFF4  F018         	goto	u4496
  7219  0031E4  EFFC  F018         	goto	u4497
  7220  0031E8                     u4496:
  7221  0031E8  344F               	rlcf	(??_floorf+4)^0,w,c
  7222  0031EA  324F               	rrcf	(??_floorf+4)^0,f,c
  7223  0031EC  324E               	rrcf	(??_floorf+3)^0,f,c
  7224  0031EE  324D               	rrcf	(??_floorf+2)^0,f,c
  7225  0031F0  324C               	rrcf	(??_floorf+1)^0,f,c
  7226  0031F2  2E4B               	decfsz	??_floorf^0,f,c
  7227  0031F4  EFEF  F018         	goto	u4495
  7228  0031F8                     u4497:
  7229  0031F8  C04C  F051         	movff	??_floorf+1,floorf@m
  7230  0031FC  C04D  F052         	movff	??_floorf+2,floorf@m+1
  7231  003200  C04E  F053         	movff	??_floorf+3,floorf@m+2
  7232  003204  C04F  F054         	movff	??_floorf+4,floorf@m+3
  7233  003208  5051               	movf	floorf@m^0,w,c
  7234  00320A  1457               	andwf	floorf@u^0,w,c
  7235  00320C  6E4B               	movwf	??_floorf^0,c
  7236  00320E  5052               	movf	(floorf@m+1)^0,w,c
  7237  003210  1458               	andwf	(floorf@u+1)^0,w,c
  7238  003212  6E4C               	movwf	(??_floorf+1)^0,c
  7239  003214  5053               	movf	(floorf@m+2)^0,w,c
  7240  003216  1459               	andwf	(floorf@u+2)^0,w,c
  7241  003218  6E4D               	movwf	(??_floorf+2)^0,c
  7242  00321A  5054               	movf	(floorf@m+3)^0,w,c
  7243  00321C  145A               	andwf	(floorf@u+3)^0,w,c
  7244  00321E  6E4E               	movwf	(??_floorf+3)^0,c
  7245  003220  504B               	movf	??_floorf^0,w,c
  7246  003222  104C               	iorwf	(??_floorf+1)^0,w,c
  7247  003224  104D               	iorwf	(??_floorf+2)^0,w,c
  7248  003226  104E               	iorwf	(??_floorf+3)^0,w,c
  7249  003228  A4D8               	btfss	status,2,c
  7250  00322A  EF19  F019         	goto	u4501
  7251  00322E  EF1B  F019         	goto	u4500
  7252  003232                     u4501:
  7253  003232  EF1D  F019         	goto	l4248
  7254  003236                     u4500:
  7255  003236  EFD4  F018         	goto	l4240
  7256  00323A                     l4248:
  7257  00323A  C057  F04B         	movff	floorf@u,??_floorf
  7258  00323E  C058  F04C         	movff	floorf@u+1,??_floorf+1
  7259  003242  C059  F04D         	movff	floorf@u+2,??_floorf+2
  7260  003246  C05A  F04E         	movff	floorf@u+3,??_floorf+3
  7261  00324A  0E20               	movlw	32
  7262  00324C  EF2D  F019         	goto	u4510
  7263  003250                     u4515:
  7264  003250  90D8               	bcf	status,0,c
  7265  003252  324E               	rrcf	(??_floorf+3)^0,f,c
  7266  003254  324D               	rrcf	(??_floorf+2)^0,f,c
  7267  003256  324C               	rrcf	(??_floorf+1)^0,f,c
  7268  003258  324B               	rrcf	??_floorf^0,f,c
  7269  00325A                     u4510:
  7270  00325A  2EE8               	decfsz	wreg,f,c
  7271  00325C  EF28  F019         	goto	u4515
  7272  003260  504B               	movf	??_floorf^0,w,c
  7273  003262  104C               	iorwf	(??_floorf+1)^0,w,c
  7274  003264  104D               	iorwf	(??_floorf+2)^0,w,c
  7275  003266  104E               	iorwf	(??_floorf+3)^0,w,c
  7276  003268  B4D8               	btfsc	status,2,c
  7277  00326A  EF39  F019         	goto	u4521
  7278  00326E  EF3B  F019         	goto	u4520
  7279  003272                     u4521:
  7280  003272  EF43  F019         	goto	l1352
  7281  003276                     u4520:
  7282  003276  5051               	movf	floorf@m^0,w,c
  7283  003278  2657               	addwf	floorf@u^0,f,c
  7284  00327A  5052               	movf	(floorf@m+1)^0,w,c
  7285  00327C  2258               	addwfc	(floorf@u+1)^0,f,c
  7286  00327E  5053               	movf	(floorf@m+2)^0,w,c
  7287  003280  2259               	addwfc	(floorf@u+2)^0,f,c
  7288  003282  5054               	movf	(floorf@m+3)^0,w,c
  7289  003284  225A               	addwfc	(floorf@u+3)^0,f,c
  7290  003286                     l1352:
  7291  003286  1C51               	comf	floorf@m^0,w,c
  7292  003288  6E4B               	movwf	??_floorf^0,c
  7293  00328A  1C52               	comf	(floorf@m+1)^0,w,c
  7294  00328C  6E4C               	movwf	(??_floorf+1)^0,c
  7295  00328E  1C53               	comf	(floorf@m+2)^0,w,c
  7296  003290  6E4D               	movwf	(??_floorf+2)^0,c
  7297  003292  1C54               	comf	(floorf@m+3)^0,w,c
  7298  003294  6E4E               	movwf	(??_floorf+3)^0,c
  7299  003296  504B               	movf	??_floorf^0,w,c
  7300  003298  1657               	andwf	floorf@u^0,f,c
  7301  00329A  504C               	movf	(??_floorf+1)^0,w,c
  7302  00329C  1658               	andwf	(floorf@u+1)^0,f,c
  7303  00329E  504D               	movf	(??_floorf+2)^0,w,c
  7304  0032A0  1659               	andwf	(floorf@u+2)^0,f,c
  7305  0032A2  504E               	movf	(??_floorf+3)^0,w,c
  7306  0032A4  165A               	andwf	(floorf@u+3)^0,f,c
  7307  0032A6  EF99  F019         	goto	l4260
  7308  0032AA                     l4252:
  7309  0032AA  C057  F04B         	movff	floorf@u,??_floorf
  7310  0032AE  C058  F04C         	movff	floorf@u+1,??_floorf+1
  7311  0032B2  C059  F04D         	movff	floorf@u+2,??_floorf+2
  7312  0032B6  C05A  F04E         	movff	floorf@u+3,??_floorf+3
  7313  0032BA  0E20               	movlw	32
  7314  0032BC  EF65  F019         	goto	u4530
  7315  0032C0                     u4535:
  7316  0032C0  90D8               	bcf	status,0,c
  7317  0032C2  324E               	rrcf	(??_floorf+3)^0,f,c
  7318  0032C4  324D               	rrcf	(??_floorf+2)^0,f,c
  7319  0032C6  324C               	rrcf	(??_floorf+1)^0,f,c
  7320  0032C8  324B               	rrcf	??_floorf^0,f,c
  7321  0032CA                     u4530:
  7322  0032CA  2EE8               	decfsz	wreg,f,c
  7323  0032CC  EF60  F019         	goto	u4535
  7324  0032D0  504B               	movf	??_floorf^0,w,c
  7325  0032D2  104C               	iorwf	(??_floorf+1)^0,w,c
  7326  0032D4  104D               	iorwf	(??_floorf+2)^0,w,c
  7327  0032D6  104E               	iorwf	(??_floorf+3)^0,w,c
  7328  0032D8  A4D8               	btfss	status,2,c
  7329  0032DA  EF71  F019         	goto	u4541
  7330  0032DE  EF73  F019         	goto	u4540
  7331  0032E2                     u4541:
  7332  0032E2  EF7D  F019         	goto	l4256
  7333  0032E6                     u4540:
  7334  0032E6  0E00               	movlw	0
  7335  0032E8  6E57               	movwf	floorf@u^0,c
  7336  0032EA  0E00               	movlw	0
  7337  0032EC  6E58               	movwf	(floorf@u+1)^0,c
  7338  0032EE  0E00               	movlw	0
  7339  0032F0  6E59               	movwf	(floorf@u+2)^0,c
  7340  0032F2  0E00               	movlw	0
  7341  0032F4  6E5A               	movwf	(floorf@u+3)^0,c
  7342  0032F6  EF99  F019         	goto	l4260
  7343  0032FA                     l4256:
  7344  0032FA  90D8               	bcf	status,0,c
  7345  0032FC  3457               	rlcf	floorf@u^0,w,c
  7346  0032FE  6E4B               	movwf	??_floorf^0,c
  7347  003300  3458               	rlcf	(floorf@u+1)^0,w,c
  7348  003302  6E4C               	movwf	(??_floorf+1)^0,c
  7349  003304  3459               	rlcf	(floorf@u+2)^0,w,c
  7350  003306  6E4D               	movwf	(??_floorf+2)^0,c
  7351  003308  345A               	rlcf	(floorf@u+3)^0,w,c
  7352  00330A  6E4E               	movwf	(??_floorf+3)^0,c
  7353  00330C  504B               	movf	??_floorf^0,w,c
  7354  00330E  104C               	iorwf	(??_floorf+1)^0,w,c
  7355  003310  104D               	iorwf	(??_floorf+2)^0,w,c
  7356  003312  104E               	iorwf	(??_floorf+3)^0,w,c
  7357  003314  B4D8               	btfsc	status,2,c
  7358  003316  EF8F  F019         	goto	u4551
  7359  00331A  EF91  F019         	goto	u4550
  7360  00331E                     u4551:
  7361  00331E  EF99  F019         	goto	l4260
  7362  003322                     u4550:
  7363  003322  0E00               	movlw	0
  7364  003324  6E57               	movwf	floorf@u^0,c
  7365  003326  0E00               	movlw	0
  7366  003328  6E58               	movwf	(floorf@u+1)^0,c
  7367  00332A  0E80               	movlw	128
  7368  00332C  6E59               	movwf	(floorf@u+2)^0,c
  7369  00332E  0EBF               	movlw	191
  7370  003330  6E5A               	movwf	(floorf@u+3)^0,c
  7371  003332                     l4260:
  7372  003332  C057  F047         	movff	floorf@u,?_floorf
  7373  003336  C058  F048         	movff	floorf@u+1,?_floorf+1
  7374  00333A  C059  F049         	movff	floorf@u+2,?_floorf+2
  7375  00333E  C05A  F04A         	movff	floorf@u+3,?_floorf+3
  7376  003342                     l1349:
  7377  003342  0012               	return		;funcret
  7378  003344                     __end_of_floorf:
  7379                           	callstack 0
  7380                           
  7381 ;; *************** function ___fpclassifyf *****************
  7382 ;; Defined at:
  7383 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  x               4    0[COMRAM] float 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  u               4   10[COMRAM] struct .
  7388 ;;  e               2    8[COMRAM] int 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  2    0[COMRAM] int 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7398 ;;      Params:         4       0       0       0       0       0       0       0       0
  7399 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7400 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7401 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7402 ;;Total ram usage:       14 bytes
  7403 ;; Hardware stack levels used: 1
  7404 ;; Hardware stack levels required when called: 1
  7405 ;; This function calls:
  7406 ;;		Nothing
  7407 ;; This function is called by:
  7408 ;;		_efgtoa
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text23
  7413  003992                     __ptext23:
  7414                           	callstack 0
  7415  003992                     ___fpclassifyf:
  7416                           	callstack 25
  7417  003992  C0E9  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7418  003996  C0EA  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7419  00399A  C0EB  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7420  00399E  C0EC  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7421  0039A2  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7422  0039A6  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7423  0039AA  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7424  0039AE  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7425  0039B2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7426  0039B6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7427  0039BA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7428  0039BE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7429  0039C2  0E18               	movlw	24
  7430  0039C4  EFE9  F01C         	goto	u4340
  7431  0039C8                     u4345:
  7432  0039C8  90D8               	bcf	status,0,c
  7433  0039CA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7434  0039CC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7435  0039CE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7436  0039D0  3205               	rrcf	??___fpclassifyf^0,f,c
  7437  0039D2                     u4340:
  7438  0039D2  2EE8               	decfsz	wreg,f,c
  7439  0039D4  EFE4  F01C         	goto	u4345
  7440  0039D8  5005               	movf	??___fpclassifyf^0,w,c
  7441  0039DA  6E09               	movwf	___fpclassifyf@e^0,c
  7442  0039DC  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7443  0039DE  5009               	movf	___fpclassifyf@e^0,w,c
  7444  0039E0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7445  0039E2  A4D8               	btfss	status,2,c
  7446  0039E4  EFF6  F01C         	goto	u4351
  7447  0039E8  EFF8  F01C         	goto	u4350
  7448  0039EC                     u4351:
  7449  0039EC  EF18  F01D         	goto	l4212
  7450  0039F0                     u4350:
  7451  0039F0  90D8               	bcf	status,0,c
  7452  0039F2  340B               	rlcf	___fpclassifyf@u^0,w,c
  7453  0039F4  6E05               	movwf	??___fpclassifyf^0,c
  7454  0039F6  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7455  0039F8  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7456  0039FA  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7457  0039FC  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7458  0039FE  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7459  003A00  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7460  003A02  5005               	movf	??___fpclassifyf^0,w,c
  7461  003A04  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7462  003A06  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7463  003A08  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7464  003A0A  A4D8               	btfss	status,2,c
  7465  003A0C  EF0A  F01D         	goto	u4361
  7466  003A10  EF0C  F01D         	goto	u4360
  7467  003A14                     u4361:
  7468  003A14  EF12  F01D         	goto	l4208
  7469  003A18                     u4360:
  7470  003A18  0E00               	movlw	0
  7471  003A1A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7472  003A1C  0E02               	movlw	2
  7473  003A1E  6E01               	movwf	?___fpclassifyf^0,c
  7474  003A20  EF47  F01D         	goto	l1311
  7475  003A24                     l4208:
  7476  003A24  0E00               	movlw	0
  7477  003A26  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7478  003A28  0E03               	movlw	3
  7479  003A2A  6E01               	movwf	?___fpclassifyf^0,c
  7480  003A2C  EF47  F01D         	goto	l1311
  7481  003A30                     l4212:
  7482  003A30  2809               	incf	___fpclassifyf@e^0,w,c
  7483  003A32  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7484  003A34  A4D8               	btfss	status,2,c
  7485  003A36  EF1F  F01D         	goto	u4371
  7486  003A3A  EF21  F01D         	goto	u4370
  7487  003A3E                     u4371:
  7488  003A3E  EF43  F01D         	goto	l4218
  7489  003A42                     u4370:
  7490  003A42  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7491  003A46  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7492  003A4A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7493  003A4E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7494  003A52  0E09               	movlw	9
  7495  003A54                     u4385:
  7496  003A54  90D8               	bcf	status,0,c
  7497  003A56  3605               	rlcf	??___fpclassifyf^0,f,c
  7498  003A58  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7499  003A5A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7500  003A5C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7501  003A5E  2EE8               	decfsz	wreg,f,c
  7502  003A60  EF2A  F01D         	goto	u4385
  7503  003A64  5005               	movf	??___fpclassifyf^0,w,c
  7504  003A66  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7505  003A68  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7506  003A6A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7507  003A6C  B4D8               	btfsc	status,2,c
  7508  003A6E  EF3B  F01D         	goto	u4391
  7509  003A72  EF3E  F01D         	goto	u4390
  7510  003A76                     u4391:
  7511  003A76  0E01               	movlw	1
  7512  003A78  EF3F  F01D         	goto	u4400
  7513  003A7C                     u4390:
  7514  003A7C  0E00               	movlw	0
  7515  003A7E                     u4400:
  7516  003A7E  6E01               	movwf	?___fpclassifyf^0,c
  7517  003A80  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7518  003A82  EF47  F01D         	goto	l1311
  7519  003A86                     l4218:
  7520  003A86  0E00               	movlw	0
  7521  003A88  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7522  003A8A  0E04               	movlw	4
  7523  003A8C  6E01               	movwf	?___fpclassifyf^0,c
  7524  003A8E                     l1311:
  7525  003A8E  0012               	return		;funcret
  7526  003A90                     __end_of___fpclassifyf:
  7527                           	callstack 0
  7528                           
  7529 ;; *************** function ___fltol *****************
  7530 ;; Defined at:
  7531 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;  f1              4   86[COMRAM] int 
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;  exp1            1    1[BANK0 ] unsigned char 
  7536 ;;  sign1           1    0[BANK0 ] unsigned char 
  7537 ;; Return value:  Size  Location     Type
  7538 ;;                  4   86[COMRAM] long 
  7539 ;; Registers used:
  7540 ;;		wreg, status,2, status,0
  7541 ;; Tracked objects:
  7542 ;;		On entry : 0/0
  7543 ;;		On exit  : 0/0
  7544 ;;		Unchanged: 0/0
  7545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7546 ;;      Params:         4       0       0       0       0       0       0       0       0
  7547 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7548 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7549 ;;      Totals:         8       2       0       0       0       0       0       0       0
  7550 ;;Total ram usage:       10 bytes
  7551 ;; Hardware stack levels used: 1
  7552 ;; Hardware stack levels required when called: 1
  7553 ;; This function calls:
  7554 ;;		Nothing
  7555 ;; This function is called by:
  7556 ;;		_ReadADC
  7557 ;;		_efgtoa
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           	psect	text24
  7562  003688                     __ptext24:
  7563                           	callstack 0
  7564  003688                     ___fltol:
  7565                           	callstack 25
  7566  003688  3459               	rlcf	(___fltol@f1+2)^0,w,c
  7567  00368A  345A               	rlcf	(___fltol@f1+3)^0,w,c
  7568  00368C  0100               	movlb	0	; () banked
  7569  00368E  6F61               	movwf	___fltol@exp1& (0+255),b
  7570  003690  5161               	movf	___fltol@exp1& (0+255),w,b
  7571  003692  A4D8               	btfss	status,2,c
  7572  003694  EF4E  F01B         	goto	u4231
  7573  003698  EF50  F01B         	goto	u4230
  7574  00369C                     u4231:
  7575  00369C  EF5A  F01B         	goto	l4140
  7576  0036A0                     u4230:
  7577  0036A0                     l4136:
  7578                           
  7579                           ; BSR set to: 0
  7580  0036A0  0E00               	movlw	0
  7581  0036A2  6E57               	movwf	?___fltol^0,c
  7582  0036A4  0E00               	movlw	0
  7583  0036A6  6E58               	movwf	(?___fltol+1)^0,c
  7584  0036A8  0E00               	movlw	0
  7585  0036AA  6E59               	movwf	(?___fltol+2)^0,c
  7586  0036AC  0E00               	movlw	0
  7587  0036AE  6E5A               	movwf	(?___fltol+3)^0,c
  7588  0036B0  EFC7  F01B         	goto	l701
  7589  0036B4                     l4140:
  7590                           
  7591                           ; BSR set to: 0
  7592  0036B4  C057  F05B         	movff	___fltol@f1,??___fltol
  7593  0036B8  C058  F05C         	movff	___fltol@f1+1,??___fltol+1
  7594  0036BC  C059  F05D         	movff	___fltol@f1+2,??___fltol+2
  7595  0036C0  C05A  F05E         	movff	___fltol@f1+3,??___fltol+3
  7596  0036C4  0E20               	movlw	32
  7597  0036C6  EF6A  F01B         	goto	u4240
  7598  0036CA                     u4245:
  7599  0036CA  90D8               	bcf	status,0,c
  7600  0036CC  325E               	rrcf	(??___fltol+3)^0,f,c
  7601  0036CE  325D               	rrcf	(??___fltol+2)^0,f,c
  7602  0036D0  325C               	rrcf	(??___fltol+1)^0,f,c
  7603  0036D2  325B               	rrcf	??___fltol^0,f,c
  7604  0036D4                     u4240:
  7605  0036D4  2EE8               	decfsz	wreg,f,c
  7606  0036D6  EF65  F01B         	goto	u4245
  7607  0036DA  505B               	movf	??___fltol^0,w,c
  7608  0036DC  6F60               	movwf	___fltol@sign1& (0+255),b
  7609  0036DE                     
  7610                           ; BSR set to: 0
  7611  0036DE  8E59               	bsf	(___fltol@f1+2)^0,7,c
  7612  0036E0                     
  7613                           ; BSR set to: 0
  7614  0036E0  0EFF               	movlw	255
  7615  0036E2  1657               	andwf	___fltol@f1^0,f,c
  7616  0036E4  0EFF               	movlw	255
  7617  0036E6  1658               	andwf	(___fltol@f1+1)^0,f,c
  7618  0036E8  0EFF               	movlw	255
  7619  0036EA  1659               	andwf	(___fltol@f1+2)^0,f,c
  7620  0036EC  0E00               	movlw	0
  7621  0036EE  165A               	andwf	(___fltol@f1+3)^0,f,c
  7622  0036F0                     
  7623                           ; BSR set to: 0
  7624  0036F0  0E96               	movlw	150
  7625  0036F2  5F61               	subwf	___fltol@exp1& (0+255),f,b
  7626  0036F4                     
  7627                           ; BSR set to: 0
  7628  0036F4  BF61               	btfsc	___fltol@exp1& (0+255),7,b
  7629  0036F6  EF81  F01B         	goto	u4250
  7630  0036FA  EF7F  F01B         	goto	u4251
  7631  0036FE                     u4251:
  7632  0036FE  EF97  F01B         	goto	l4160
  7633  003702                     u4250:
  7634  003702                     
  7635                           ; BSR set to: 0
  7636  003702  5161               	movf	___fltol@exp1& (0+255),w,b
  7637  003704  0A80               	xorlw	128
  7638  003706  0F97               	addlw	151
  7639  003708  B0D8               	btfsc	status,0,c
  7640  00370A  EF89  F01B         	goto	u4261
  7641  00370E  EF8B  F01B         	goto	u4260
  7642  003712                     u4261:
  7643  003712  EF8D  F01B         	goto	l4156
  7644  003716                     u4260:
  7645  003716  EF50  F01B         	goto	l4136
  7646  00371A                     l4156:
  7647                           
  7648                           ; BSR set to: 0
  7649  00371A  90D8               	bcf	status,0,c
  7650  00371C  325A               	rrcf	(___fltol@f1+3)^0,f,c
  7651  00371E  3259               	rrcf	(___fltol@f1+2)^0,f,c
  7652  003720  3258               	rrcf	(___fltol@f1+1)^0,f,c
  7653  003722  3257               	rrcf	___fltol@f1^0,f,c
  7654  003724                     
  7655                           ; BSR set to: 0
  7656  003724  3F61               	incfsz	___fltol@exp1& (0+255),f,b
  7657  003726  EF8D  F01B         	goto	l4156
  7658  00372A  EFAF  F01B         	goto	l4170
  7659  00372E                     l4160:
  7660                           
  7661                           ; BSR set to: 0
  7662  00372E  0E1F               	movlw	31
  7663  003730  6561               	cpfsgt	___fltol@exp1& (0+255),b
  7664  003732  EF9D  F01B         	goto	u4271
  7665  003736  EF9F  F01B         	goto	u4270
  7666  00373A                     u4271:
  7667  00373A  EFA7  F01B         	goto	l4168
  7668  00373E                     u4270:
  7669  00373E  EF50  F01B         	goto	l4136
  7670  003742                     l4166:
  7671                           
  7672                           ; BSR set to: 0
  7673  003742  90D8               	bcf	status,0,c
  7674  003744  3657               	rlcf	___fltol@f1^0,f,c
  7675  003746  3658               	rlcf	(___fltol@f1+1)^0,f,c
  7676  003748  3659               	rlcf	(___fltol@f1+2)^0,f,c
  7677  00374A  365A               	rlcf	(___fltol@f1+3)^0,f,c
  7678  00374C  0761               	decf	___fltol@exp1& (0+255),f,b
  7679  00374E                     l4168:
  7680                           
  7681                           ; BSR set to: 0
  7682  00374E  5161               	movf	___fltol@exp1& (0+255),w,b
  7683  003750  A4D8               	btfss	status,2,c
  7684  003752  EFAD  F01B         	goto	u4281
  7685  003756  EFAF  F01B         	goto	u4280
  7686  00375A                     u4281:
  7687  00375A  EFA1  F01B         	goto	l4166
  7688  00375E                     u4280:
  7689  00375E                     l4170:
  7690                           
  7691                           ; BSR set to: 0
  7692  00375E  5160               	movf	___fltol@sign1& (0+255),w,b
  7693  003760  B4D8               	btfsc	status,2,c
  7694  003762  EFB5  F01B         	goto	u4291
  7695  003766  EFB7  F01B         	goto	u4290
  7696  00376A                     u4291:
  7697  00376A  EFBF  F01B         	goto	l4174
  7698  00376E                     u4290:
  7699  00376E                     
  7700                           ; BSR set to: 0
  7701  00376E  1E5A               	comf	(___fltol@f1+3)^0,f,c
  7702  003770  1E59               	comf	(___fltol@f1+2)^0,f,c
  7703  003772  1E58               	comf	(___fltol@f1+1)^0,f,c
  7704  003774  6C57               	negf	___fltol@f1^0,c
  7705  003776  0E00               	movlw	0
  7706  003778  2258               	addwfc	(___fltol@f1+1)^0,f,c
  7707  00377A  2259               	addwfc	(___fltol@f1+2)^0,f,c
  7708  00377C  225A               	addwfc	(___fltol@f1+3)^0,f,c
  7709  00377E                     l4174:
  7710                           
  7711                           ; BSR set to: 0
  7712  00377E  C057  F057         	movff	___fltol@f1,?___fltol
  7713  003782  C058  F058         	movff	___fltol@f1+1,?___fltol+1
  7714  003786  C059  F059         	movff	___fltol@f1+2,?___fltol+2
  7715  00378A  C05A  F05A         	movff	___fltol@f1+3,?___fltol+3
  7716  00378E                     l701:
  7717                           
  7718                           ; BSR set to: 0
  7719  00378E  0012               	return		;funcret
  7720  003790                     __end_of___fltol:
  7721                           	callstack 0
  7722                           
  7723 ;; *************** function ___flsub *****************
  7724 ;; Defined at:
  7725 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  b               4   86[COMRAM] long 
  7728 ;;  a               4   90[COMRAM] long 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;		None
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  4   86[COMRAM] long 
  7733 ;; Registers used:
  7734 ;;		wreg, status,2, status,0, cstack
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7740 ;;      Params:         8       0       0       0       0       0       0       0       0
  7741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7743 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7744 ;;Total ram usage:        8 bytes
  7745 ;; Hardware stack levels used: 1
  7746 ;; Hardware stack levels required when called: 2
  7747 ;; This function calls:
  7748 ;;		___fladd
  7749 ;; This function is called by:
  7750 ;;		_efgtoa
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text25
  7755  0043C2                     __ptext25:
  7756                           	callstack 0
  7757  0043C2                     ___flsub:
  7758                           	callstack 24
  7759  0043C2  0E00               	movlw	0
  7760  0043C4  1A5B               	xorwf	___flsub@a^0,f,c
  7761  0043C6  0E00               	movlw	0
  7762  0043C8  1A5C               	xorwf	(___flsub@a+1)^0,f,c
  7763  0043CA  0E00               	movlw	0
  7764  0043CC  1A5D               	xorwf	(___flsub@a+2)^0,f,c
  7765  0043CE  0E80               	movlw	128
  7766  0043D0  1A5E               	xorwf	(___flsub@a+3)^0,f,c
  7767  0043D2  C057  F047         	movff	___flsub@b,___fladd@b
  7768  0043D6  C058  F048         	movff	___flsub@b+1,___fladd@b+1
  7769  0043DA  C059  F049         	movff	___flsub@b+2,___fladd@b+2
  7770  0043DE  C05A  F04A         	movff	___flsub@b+3,___fladd@b+3
  7771  0043E2  C05B  F04B         	movff	___flsub@a,___fladd@a
  7772  0043E6  C05C  F04C         	movff	___flsub@a+1,___fladd@a+1
  7773  0043EA  C05D  F04D         	movff	___flsub@a+2,___fladd@a+2
  7774  0043EE  C05E  F04E         	movff	___flsub@a+3,___fladd@a+3
  7775  0043F2  EC5F  F00D         	call	___fladd	;wreg free
  7776  0043F6  C047  F057         	movff	?___fladd,?___flsub
  7777  0043FA  C048  F058         	movff	?___fladd+1,?___flsub+1
  7778  0043FE  C049  F059         	movff	?___fladd+2,?___flsub+2
  7779  004402  C04A  F05A         	movff	?___fladd+3,?___flsub+3
  7780  004406  0012               	return		;funcret
  7781  004408                     __end_of___flsub:
  7782                           	callstack 0
  7783                           
  7784 ;; *************** function ___fladd *****************
  7785 ;; Defined at:
  7786 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;  b               4   70[COMRAM] long 
  7789 ;;  a               4   74[COMRAM] long 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  grs             1   85[COMRAM] unsigned char 
  7792 ;;  bexp            1   84[COMRAM] unsigned char 
  7793 ;;  aexp            1   83[COMRAM] unsigned char 
  7794 ;;  signs           1   82[COMRAM] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  4   70[COMRAM] unsigned char 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7804 ;;      Params:         8       0       0       0       0       0       0       0       0
  7805 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7806 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7807 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7808 ;;Total ram usage:       16 bytes
  7809 ;; Hardware stack levels used: 1
  7810 ;; Hardware stack levels required when called: 1
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_ReadADC
  7815 ;;		___flsub
  7816 ;;		_efgtoa
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text26
  7821  001ABE                     __ptext26:
  7822                           	callstack 0
  7823  001ABE                     ___fladd:
  7824                           	callstack 24
  7825  001ABE  504A               	movf	(___fladd@b+3)^0,w,c
  7826  001AC0  0B80               	andlw	128
  7827  001AC2  6E53               	movwf	___fladd@signs^0,c
  7828  001AC4  504A               	movf	(___fladd@b+3)^0,w,c
  7829  001AC6  244A               	addwf	(___fladd@b+3)^0,w,c
  7830  001AC8  6E55               	movwf	___fladd@bexp^0,c
  7831  001ACA  AE49               	btfss	(___fladd@b+2)^0,7,c
  7832  001ACC  EF6A  F00D         	goto	u3151
  7833  001AD0  EF6C  F00D         	goto	u3150
  7834  001AD4                     u3151:
  7835  001AD4  EF6D  F00D         	goto	l3506
  7836  001AD8                     u3150:
  7837  001AD8  8055               	bsf	___fladd@bexp^0,0,c
  7838  001ADA                     l3506:
  7839  001ADA  5055               	movf	___fladd@bexp^0,w,c
  7840  001ADC  B4D8               	btfsc	status,2,c
  7841  001ADE  EF73  F00D         	goto	u3161
  7842  001AE2  EF75  F00D         	goto	u3160
  7843  001AE6                     u3161:
  7844  001AE6  EF8A  F00D         	goto	l3516
  7845  001AEA                     u3160:
  7846  001AEA  2855               	incf	___fladd@bexp^0,w,c
  7847  001AEC  A4D8               	btfss	status,2,c
  7848  001AEE  EF7B  F00D         	goto	u3171
  7849  001AF2  EF7D  F00D         	goto	u3170
  7850  001AF6                     u3171:
  7851  001AF6  EF85  F00D         	goto	l3512
  7852  001AFA                     u3170:
  7853  001AFA  0E00               	movlw	0
  7854  001AFC  6E47               	movwf	___fladd@b^0,c
  7855  001AFE  0E00               	movlw	0
  7856  001B00  6E48               	movwf	(___fladd@b+1)^0,c
  7857  001B02  0E00               	movlw	0
  7858  001B04  6E49               	movwf	(___fladd@b+2)^0,c
  7859  001B06  0E00               	movlw	0
  7860  001B08  6E4A               	movwf	(___fladd@b+3)^0,c
  7861  001B0A                     l3512:
  7862  001B0A  8E49               	bsf	(___fladd@b+2)^0,7,c
  7863  001B0C  0E00               	movlw	0
  7864  001B0E  6E4A               	movwf	(___fladd@b+3)^0,c
  7865  001B10  EF92  F00D         	goto	l3518
  7866  001B14                     l3516:
  7867  001B14  0E00               	movlw	0
  7868  001B16  6E47               	movwf	___fladd@b^0,c
  7869  001B18  0E00               	movlw	0
  7870  001B1A  6E48               	movwf	(___fladd@b+1)^0,c
  7871  001B1C  0E00               	movlw	0
  7872  001B1E  6E49               	movwf	(___fladd@b+2)^0,c
  7873  001B20  0E00               	movlw	0
  7874  001B22  6E4A               	movwf	(___fladd@b+3)^0,c
  7875  001B24                     l3518:
  7876  001B24  504E               	movf	(___fladd@a+3)^0,w,c
  7877  001B26  0B80               	andlw	128
  7878  001B28  6E54               	movwf	___fladd@aexp^0,c
  7879  001B2A  5053               	movf	___fladd@signs^0,w,c
  7880  001B2C  1854               	xorwf	___fladd@aexp^0,w,c
  7881  001B2E  B4D8               	btfsc	status,2,c
  7882  001B30  EF9C  F00D         	goto	u3181
  7883  001B34  EF9E  F00D         	goto	u3180
  7884  001B38                     u3181:
  7885  001B38  EF9F  F00D         	goto	l3524
  7886  001B3C                     u3180:
  7887  001B3C  8C53               	bsf	___fladd@signs^0,6,c
  7888  001B3E                     l3524:
  7889  001B3E  504E               	movf	(___fladd@a+3)^0,w,c
  7890  001B40  244E               	addwf	(___fladd@a+3)^0,w,c
  7891  001B42  6E54               	movwf	___fladd@aexp^0,c
  7892  001B44  AE4D               	btfss	(___fladd@a+2)^0,7,c
  7893  001B46  EFA7  F00D         	goto	u3191
  7894  001B4A  EFA9  F00D         	goto	u3190
  7895  001B4E                     u3191:
  7896  001B4E  EFAA  F00D         	goto	l3530
  7897  001B52                     u3190:
  7898  001B52  8054               	bsf	___fladd@aexp^0,0,c
  7899  001B54                     l3530:
  7900  001B54  5054               	movf	___fladd@aexp^0,w,c
  7901  001B56  B4D8               	btfsc	status,2,c
  7902  001B58  EFB0  F00D         	goto	u3201
  7903  001B5C  EFB2  F00D         	goto	u3200
  7904  001B60                     u3201:
  7905  001B60  EFC7  F00D         	goto	l3540
  7906  001B64                     u3200:
  7907  001B64  2854               	incf	___fladd@aexp^0,w,c
  7908  001B66  A4D8               	btfss	status,2,c
  7909  001B68  EFB8  F00D         	goto	u3211
  7910  001B6C  EFBA  F00D         	goto	u3210
  7911  001B70                     u3211:
  7912  001B70  EFC2  F00D         	goto	l3536
  7913  001B74                     u3210:
  7914  001B74  0E00               	movlw	0
  7915  001B76  6E4B               	movwf	___fladd@a^0,c
  7916  001B78  0E00               	movlw	0
  7917  001B7A  6E4C               	movwf	(___fladd@a+1)^0,c
  7918  001B7C  0E00               	movlw	0
  7919  001B7E  6E4D               	movwf	(___fladd@a+2)^0,c
  7920  001B80  0E00               	movlw	0
  7921  001B82  6E4E               	movwf	(___fladd@a+3)^0,c
  7922  001B84                     l3536:
  7923  001B84  8E4D               	bsf	(___fladd@a+2)^0,7,c
  7924  001B86  0E00               	movlw	0
  7925  001B88  6E4E               	movwf	(___fladd@a+3)^0,c
  7926  001B8A  EFCF  F00D         	goto	l3542
  7927  001B8E                     l3540:
  7928  001B8E  0E00               	movlw	0
  7929  001B90  6E4B               	movwf	___fladd@a^0,c
  7930  001B92  0E00               	movlw	0
  7931  001B94  6E4C               	movwf	(___fladd@a+1)^0,c
  7932  001B96  0E00               	movlw	0
  7933  001B98  6E4D               	movwf	(___fladd@a+2)^0,c
  7934  001B9A  0E00               	movlw	0
  7935  001B9C  6E4E               	movwf	(___fladd@a+3)^0,c
  7936  001B9E                     l3542:
  7937  001B9E  5055               	movf	___fladd@bexp^0,w,c
  7938  001BA0  5C54               	subwf	___fladd@aexp^0,w,c
  7939  001BA2  B0D8               	btfsc	status,0,c
  7940  001BA4  EFD6  F00D         	goto	u3221
  7941  001BA8  EFD8  F00D         	goto	u3220
  7942  001BAC                     u3221:
  7943  001BAC  EFFF  F00D         	goto	l3578
  7944  001BB0                     u3220:
  7945  001BB0  AC53               	btfss	___fladd@signs^0,6,c
  7946  001BB2  EFDD  F00D         	goto	u3231
  7947  001BB6  EFDF  F00D         	goto	u3230
  7948  001BBA                     u3231:
  7949  001BBA  EFE1  F00D         	goto	l3548
  7950  001BBE                     u3230:
  7951  001BBE  0E80               	movlw	128
  7952  001BC0  1A53               	xorwf	___fladd@signs^0,f,c
  7953  001BC2                     l3548:
  7954  001BC2  C055  F056         	movff	___fladd@bexp,___fladd@grs
  7955  001BC6  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  7956  001BCA  C056  F054         	movff	___fladd@grs,___fladd@aexp
  7957  001BCE  C047  F056         	movff	___fladd@b,___fladd@grs
  7958  001BD2  C04B  F047         	movff	___fladd@a,___fladd@b
  7959  001BD6  C056  F04B         	movff	___fladd@grs,___fladd@a
  7960  001BDA  C048  F056         	movff	___fladd@b+1,___fladd@grs
  7961  001BDE  C04C  F048         	movff	___fladd@a+1,___fladd@b+1
  7962  001BE2  C056  F04C         	movff	___fladd@grs,___fladd@a+1
  7963  001BE6  C049  F056         	movff	___fladd@b+2,___fladd@grs
  7964  001BEA  C04D  F049         	movff	___fladd@a+2,___fladd@b+2
  7965  001BEE  C056  F04D         	movff	___fladd@grs,___fladd@a+2
  7966  001BF2  C04A  F056         	movff	___fladd@b+3,___fladd@grs
  7967  001BF6  C04E  F04A         	movff	___fladd@a+3,___fladd@b+3
  7968  001BFA  C056  F04E         	movff	___fladd@grs,___fladd@a+3
  7969  001BFE                     l3578:
  7970  001BFE  0E00               	movlw	0
  7971  001C00  6E56               	movwf	___fladd@grs^0,c
  7972  001C02  5055               	movf	___fladd@bexp^0,w,c
  7973  001C04  C054  F04F         	movff	___fladd@aexp,??___fladd
  7974  001C08  6A50               	clrf	(??___fladd+1)^0,c
  7975  001C0A  5E4F               	subwf	??___fladd^0,f,c
  7976  001C0C  0E00               	movlw	0
  7977  001C0E  5A50               	subwfb	(??___fladd+1)^0,f,c
  7978  001C10  BE50               	btfsc	(??___fladd+1)^0,7,c
  7979  001C12  EF14  F00E         	goto	u3241
  7980  001C16  5050               	movf	(??___fladd+1)^0,w,c
  7981  001C18  E109               	bnz	u3240
  7982  001C1A  0E1A               	movlw	26
  7983  001C1C  5C4F               	subwf	??___fladd^0,w,c
  7984  001C1E  A0D8               	btfss	status,0,c
  7985  001C20  EF14  F00E         	goto	u3241
  7986  001C24  EF16  F00E         	goto	u3240
  7987  001C28                     u3241:
  7988  001C28  EF4D  F00E         	goto	l933
  7989  001C2C                     u3240:
  7990  001C2C  5047               	movf	___fladd@b^0,w,c
  7991  001C2E  1048               	iorwf	(___fladd@b+1)^0,w,c
  7992  001C30  1049               	iorwf	(___fladd@b+2)^0,w,c
  7993  001C32  104A               	iorwf	(___fladd@b+3)^0,w,c
  7994  001C34  A4D8               	btfss	status,2,c
  7995  001C36  EF1F  F00E         	goto	u3251
  7996  001C3A  EF22  F00E         	goto	u3250
  7997  001C3E                     u3251:
  7998  001C3E  0E01               	movlw	1
  7999  001C40  EF23  F00E         	goto	u3260
  8000  001C44                     u3250:
  8001  001C44  0E00               	movlw	0
  8002  001C46                     u3260:
  8003  001C46  6E56               	movwf	___fladd@grs^0,c
  8004  001C48  0E00               	movlw	0
  8005  001C4A  6E47               	movwf	___fladd@b^0,c
  8006  001C4C  0E00               	movlw	0
  8007  001C4E  6E48               	movwf	(___fladd@b+1)^0,c
  8008  001C50  0E00               	movlw	0
  8009  001C52  6E49               	movwf	(___fladd@b+2)^0,c
  8010  001C54  0E00               	movlw	0
  8011  001C56  6E4A               	movwf	(___fladd@b+3)^0,c
  8012  001C58  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  8013  001C5C  EF56  F00E         	goto	l932
  8014  001C60                     l934:
  8015  001C60  A056               	btfss	___fladd@grs^0,0,c
  8016  001C62  EF35  F00E         	goto	u3271
  8017  001C66  EF37  F00E         	goto	u3270
  8018  001C6A                     u3271:
  8019  001C6A  EF3D  F00E         	goto	l3590
  8020  001C6E                     u3270:
  8021  001C6E  90D8               	bcf	status,0,c
  8022  001C70  3056               	rrcf	___fladd@grs^0,w,c
  8023  001C72  0901               	iorlw	1
  8024  001C74  6E56               	movwf	___fladd@grs^0,c
  8025  001C76  EF3F  F00E         	goto	l3592
  8026  001C7A                     l3590:
  8027  001C7A  90D8               	bcf	status,0,c
  8028  001C7C  3256               	rrcf	___fladd@grs^0,f,c
  8029  001C7E                     l3592:
  8030  001C7E  A047               	btfss	___fladd@b^0,0,c
  8031  001C80  EF44  F00E         	goto	u3281
  8032  001C84  EF46  F00E         	goto	u3280
  8033  001C88                     u3281:
  8034  001C88  EF47  F00E         	goto	l3596
  8035  001C8C                     u3280:
  8036  001C8C  8E56               	bsf	___fladd@grs^0,7,c
  8037  001C8E                     l3596:
  8038  001C8E  344A               	rlcf	(___fladd@b+3)^0,w,c
  8039  001C90  324A               	rrcf	(___fladd@b+3)^0,f,c
  8040  001C92  3249               	rrcf	(___fladd@b+2)^0,f,c
  8041  001C94  3248               	rrcf	(___fladd@b+1)^0,f,c
  8042  001C96  3247               	rrcf	___fladd@b^0,f,c
  8043  001C98  2A55               	incf	___fladd@bexp^0,f,c
  8044  001C9A                     l933:
  8045  001C9A  5054               	movf	___fladd@aexp^0,w,c
  8046  001C9C  5C55               	subwf	___fladd@bexp^0,w,c
  8047  001C9E  A0D8               	btfss	status,0,c
  8048  001CA0  EF54  F00E         	goto	u3291
  8049  001CA4  EF56  F00E         	goto	u3290
  8050  001CA8                     u3291:
  8051  001CA8  EF30  F00E         	goto	l934
  8052  001CAC                     u3290:
  8053  001CAC                     l932:
  8054  001CAC  BC53               	btfsc	___fladd@signs^0,6,c
  8055  001CAE  EF5B  F00E         	goto	u3301
  8056  001CB2  EF5D  F00E         	goto	u3300
  8057  001CB6                     u3301:
  8058  001CB6  EF9D  F00E         	goto	l3624
  8059  001CBA                     u3300:
  8060  001CBA  5055               	movf	___fladd@bexp^0,w,c
  8061  001CBC  A4D8               	btfss	status,2,c
  8062  001CBE  EF63  F00E         	goto	u3311
  8063  001CC2  EF65  F00E         	goto	u3310
  8064  001CC6                     u3311:
  8065  001CC6  EF6F  F00E         	goto	l3606
  8066  001CCA                     u3310:
  8067  001CCA  0E00               	movlw	0
  8068  001CCC  6E47               	movwf	?___fladd^0,c
  8069  001CCE  0E00               	movlw	0
  8070  001CD0  6E48               	movwf	(?___fladd+1)^0,c
  8071  001CD2  0E00               	movlw	0
  8072  001CD4  6E49               	movwf	(?___fladd+2)^0,c
  8073  001CD6  0E00               	movlw	0
  8074  001CD8  6E4A               	movwf	(?___fladd+3)^0,c
  8075  001CDA  EFBE  F00F         	goto	l941
  8076  001CDE                     l3606:
  8077  001CDE  504B               	movf	___fladd@a^0,w,c
  8078  001CE0  2647               	addwf	___fladd@b^0,f,c
  8079  001CE2  504C               	movf	(___fladd@a+1)^0,w,c
  8080  001CE4  2248               	addwfc	(___fladd@b+1)^0,f,c
  8081  001CE6  504D               	movf	(___fladd@a+2)^0,w,c
  8082  001CE8  2249               	addwfc	(___fladd@b+2)^0,f,c
  8083  001CEA  504E               	movf	(___fladd@a+3)^0,w,c
  8084  001CEC  224A               	addwfc	(___fladd@b+3)^0,f,c
  8085  001CEE  A04A               	btfss	(___fladd@b+3)^0,0,c
  8086  001CF0  EF7C  F00E         	goto	u3321
  8087  001CF4  EF7E  F00E         	goto	u3320
  8088  001CF8                     u3321:
  8089  001CF8  EF2A  F00F         	goto	l3660
  8090  001CFC                     u3320:
  8091  001CFC  A056               	btfss	___fladd@grs^0,0,c
  8092  001CFE  EF83  F00E         	goto	u3331
  8093  001D02  EF85  F00E         	goto	u3330
  8094  001D06                     u3331:
  8095  001D06  EF8B  F00E         	goto	l3614
  8096  001D0A                     u3330:
  8097  001D0A  90D8               	bcf	status,0,c
  8098  001D0C  3056               	rrcf	___fladd@grs^0,w,c
  8099  001D0E  0901               	iorlw	1
  8100  001D10  6E56               	movwf	___fladd@grs^0,c
  8101  001D12  EF8D  F00E         	goto	l3616
  8102  001D16                     l3614:
  8103  001D16  90D8               	bcf	status,0,c
  8104  001D18  3256               	rrcf	___fladd@grs^0,f,c
  8105  001D1A                     l3616:
  8106  001D1A  A047               	btfss	___fladd@b^0,0,c
  8107  001D1C  EF92  F00E         	goto	u3341
  8108  001D20  EF94  F00E         	goto	u3340
  8109  001D24                     u3341:
  8110  001D24  EF95  F00E         	goto	l3620
  8111  001D28                     u3340:
  8112  001D28  8E56               	bsf	___fladd@grs^0,7,c
  8113  001D2A                     l3620:
  8114  001D2A  344A               	rlcf	(___fladd@b+3)^0,w,c
  8115  001D2C  324A               	rrcf	(___fladd@b+3)^0,f,c
  8116  001D2E  3249               	rrcf	(___fladd@b+2)^0,f,c
  8117  001D30  3248               	rrcf	(___fladd@b+1)^0,f,c
  8118  001D32  3247               	rrcf	___fladd@b^0,f,c
  8119  001D34  2A55               	incf	___fladd@bexp^0,f,c
  8120  001D36  EF2A  F00F         	goto	l3660
  8121  001D3A                     l3624:
  8122  001D3A  504B               	movf	___fladd@a^0,w,c
  8123  001D3C  5C47               	subwf	___fladd@b^0,w,c
  8124  001D3E  504C               	movf	(___fladd@a+1)^0,w,c
  8125  001D40  5848               	subwfb	(___fladd@b+1)^0,w,c
  8126  001D42  504D               	movf	(___fladd@a+2)^0,w,c
  8127  001D44  5849               	subwfb	(___fladd@b+2)^0,w,c
  8128  001D46  504A               	movf	(___fladd@b+3)^0,w,c
  8129  001D48  0A80               	xorlw	128
  8130  001D4A  6E4F               	movwf	??___fladd^0,c
  8131  001D4C  504E               	movf	(___fladd@a+3)^0,w,c
  8132  001D4E  0A80               	xorlw	128
  8133  001D50  584F               	subwfb	??___fladd^0,w,c
  8134  001D52  B0D8               	btfsc	status,0,c
  8135  001D54  EFAE  F00E         	goto	u3351
  8136  001D58  EFB0  F00E         	goto	u3350
  8137  001D5C                     u3351:
  8138  001D5C  EFDB  F00E         	goto	l3634
  8139  001D60                     u3350:
  8140  001D60  5047               	movf	___fladd@b^0,w,c
  8141  001D62  5C4B               	subwf	___fladd@a^0,w,c
  8142  001D64  6E4F               	movwf	??___fladd^0,c
  8143  001D66  5048               	movf	(___fladd@b+1)^0,w,c
  8144  001D68  584C               	subwfb	(___fladd@a+1)^0,w,c
  8145  001D6A  6E50               	movwf	(??___fladd+1)^0,c
  8146  001D6C  5049               	movf	(___fladd@b+2)^0,w,c
  8147  001D6E  584D               	subwfb	(___fladd@a+2)^0,w,c
  8148  001D70  6E51               	movwf	(??___fladd+2)^0,c
  8149  001D72  504A               	movf	(___fladd@b+3)^0,w,c
  8150  001D74  584E               	subwfb	(___fladd@a+3)^0,w,c
  8151  001D76  6E52               	movwf	(??___fladd+3)^0,c
  8152  001D78  0EFF               	movlw	255
  8153  001D7A  244F               	addwf	??___fladd^0,w,c
  8154  001D7C  6E47               	movwf	___fladd@b^0,c
  8155  001D7E  0EFF               	movlw	255
  8156  001D80  2050               	addwfc	(??___fladd+1)^0,w,c
  8157  001D82  6E48               	movwf	(___fladd@b+1)^0,c
  8158  001D84  0EFF               	movlw	255
  8159  001D86  2051               	addwfc	(??___fladd+2)^0,w,c
  8160  001D88  6E49               	movwf	(___fladd@b+2)^0,c
  8161  001D8A  0EFF               	movlw	255
  8162  001D8C  2052               	addwfc	(??___fladd+3)^0,w,c
  8163  001D8E  6E4A               	movwf	(___fladd@b+3)^0,c
  8164  001D90  0E80               	movlw	128
  8165  001D92  1A53               	xorwf	___fladd@signs^0,f,c
  8166  001D94  6C56               	negf	___fladd@grs^0,c
  8167  001D96  5056               	movf	___fladd@grs^0,w,c
  8168  001D98  A4D8               	btfss	status,2,c
  8169  001D9A  EFD1  F00E         	goto	u3361
  8170  001D9E  EFD3  F00E         	goto	u3360
  8171  001DA2                     u3361:
  8172  001DA2  EFE3  F00E         	goto	l949
  8173  001DA6                     u3360:
  8174  001DA6  0E01               	movlw	1
  8175  001DA8  2647               	addwf	___fladd@b^0,f,c
  8176  001DAA  0E00               	movlw	0
  8177  001DAC  2248               	addwfc	(___fladd@b+1)^0,f,c
  8178  001DAE  2249               	addwfc	(___fladd@b+2)^0,f,c
  8179  001DB0  224A               	addwfc	(___fladd@b+3)^0,f,c
  8180  001DB2  EFE3  F00E         	goto	l949
  8181  001DB6                     l3634:
  8182  001DB6  504B               	movf	___fladd@a^0,w,c
  8183  001DB8  5E47               	subwf	___fladd@b^0,f,c
  8184  001DBA  504C               	movf	(___fladd@a+1)^0,w,c
  8185  001DBC  5A48               	subwfb	(___fladd@b+1)^0,f,c
  8186  001DBE  504D               	movf	(___fladd@a+2)^0,w,c
  8187  001DC0  5A49               	subwfb	(___fladd@b+2)^0,f,c
  8188  001DC2  504E               	movf	(___fladd@a+3)^0,w,c
  8189  001DC4  5A4A               	subwfb	(___fladd@b+3)^0,f,c
  8190  001DC6                     l949:
  8191  001DC6  5047               	movf	___fladd@b^0,w,c
  8192  001DC8  1048               	iorwf	(___fladd@b+1)^0,w,c
  8193  001DCA  1049               	iorwf	(___fladd@b+2)^0,w,c
  8194  001DCC  104A               	iorwf	(___fladd@b+3)^0,w,c
  8195  001DCE  A4D8               	btfss	status,2,c
  8196  001DD0  EFEC  F00E         	goto	u3371
  8197  001DD4  EFEE  F00E         	goto	u3370
  8198  001DD8                     u3371:
  8199  001DD8  EF23  F00F         	goto	l3658
  8200  001DDC                     u3370:
  8201  001DDC  5056               	movf	___fladd@grs^0,w,c
  8202  001DDE  A4D8               	btfss	status,2,c
  8203  001DE0  EFF4  F00E         	goto	u3381
  8204  001DE4  EFF6  F00E         	goto	u3380
  8205  001DE8                     u3381:
  8206  001DE8  EF23  F00F         	goto	l3658
  8207  001DEC                     u3380:
  8208  001DEC  0E00               	movlw	0
  8209  001DEE  6E47               	movwf	?___fladd^0,c
  8210  001DF0  0E00               	movlw	0
  8211  001DF2  6E48               	movwf	(?___fladd+1)^0,c
  8212  001DF4  0E00               	movlw	0
  8213  001DF6  6E49               	movwf	(?___fladd+2)^0,c
  8214  001DF8  0E00               	movlw	0
  8215  001DFA  6E4A               	movwf	(?___fladd+3)^0,c
  8216  001DFC  EFBE  F00F         	goto	l941
  8217  001E00                     l3642:
  8218  001E00  90D8               	bcf	status,0,c
  8219  001E02  3647               	rlcf	___fladd@b^0,f,c
  8220  001E04  3648               	rlcf	(___fladd@b+1)^0,f,c
  8221  001E06  3649               	rlcf	(___fladd@b+2)^0,f,c
  8222  001E08  364A               	rlcf	(___fladd@b+3)^0,f,c
  8223  001E0A  AE56               	btfss	___fladd@grs^0,7,c
  8224  001E0C  EF0A  F00F         	goto	u3391
  8225  001E10  EF0C  F00F         	goto	u3390
  8226  001E14                     u3391:
  8227  001E14  EF0D  F00F         	goto	l3648
  8228  001E18                     u3390:
  8229  001E18  8047               	bsf	___fladd@b^0,0,c
  8230  001E1A                     l3648:
  8231  001E1A  A056               	btfss	___fladd@grs^0,0,c
  8232  001E1C  EF12  F00F         	goto	u3401
  8233  001E20  EF14  F00F         	goto	u3400
  8234  001E24                     u3401:
  8235  001E24  EF18  F00F         	goto	l3652
  8236  001E28                     u3400:
  8237  001E28  80D8               	bsf	status,0,c
  8238  001E2A  3656               	rlcf	___fladd@grs^0,f,c
  8239  001E2C  EF1A  F00F         	goto	l3654
  8240  001E30                     l3652:
  8241  001E30  90D8               	bcf	status,0,c
  8242  001E32  3656               	rlcf	___fladd@grs^0,f,c
  8243  001E34                     l3654:
  8244  001E34  5055               	movf	___fladd@bexp^0,w,c
  8245  001E36  B4D8               	btfsc	status,2,c
  8246  001E38  EF20  F00F         	goto	u3411
  8247  001E3C  EF22  F00F         	goto	u3410
  8248  001E40                     u3411:
  8249  001E40  EF23  F00F         	goto	l3658
  8250  001E44                     u3410:
  8251  001E44  0655               	decf	___fladd@bexp^0,f,c
  8252  001E46                     l3658:
  8253  001E46  AE49               	btfss	(___fladd@b+2)^0,7,c
  8254  001E48  EF28  F00F         	goto	u3421
  8255  001E4C  EF2A  F00F         	goto	u3420
  8256  001E50                     u3421:
  8257  001E50  EF00  F00F         	goto	l3642
  8258  001E54                     u3420:
  8259  001E54                     l3660:
  8260  001E54  0E00               	movlw	0
  8261  001E56  6E54               	movwf	___fladd@aexp^0,c
  8262  001E58  AE56               	btfss	___fladd@grs^0,7,c
  8263  001E5A  EF31  F00F         	goto	u3431
  8264  001E5E  EF33  F00F         	goto	u3430
  8265  001E62                     u3431:
  8266  001E62  EF4B  F00F         	goto	l958
  8267  001E66                     u3430:
  8268  001E66  C056  F04F         	movff	___fladd@grs,??___fladd
  8269  001E6A  0E7F               	movlw	127
  8270  001E6C  164F               	andwf	??___fladd^0,f,c
  8271  001E6E  B4D8               	btfsc	status,2,c
  8272  001E70  EF3C  F00F         	goto	u3441
  8273  001E74  EF3E  F00F         	goto	u3440
  8274  001E78                     u3441:
  8275  001E78  EF42  F00F         	goto	l959
  8276  001E7C                     u3440:
  8277  001E7C                     l3666:
  8278  001E7C  0E01               	movlw	1
  8279  001E7E  6E54               	movwf	___fladd@aexp^0,c
  8280  001E80  EF4B  F00F         	goto	l958
  8281  001E84                     l959:
  8282  001E84  A047               	btfss	___fladd@b^0,0,c
  8283  001E86  EF47  F00F         	goto	u3451
  8284  001E8A  EF49  F00F         	goto	u3450
  8285  001E8E                     u3451:
  8286  001E8E  EF4B  F00F         	goto	l958
  8287  001E92                     u3450:
  8288  001E92  EF3E  F00F         	goto	l3666
  8289  001E96                     l958:
  8290  001E96  5054               	movf	___fladd@aexp^0,w,c
  8291  001E98  B4D8               	btfsc	status,2,c
  8292  001E9A  EF51  F00F         	goto	u3461
  8293  001E9E  EF53  F00F         	goto	u3460
  8294  001EA2                     u3461:
  8295  001EA2  EF7E  F00F         	goto	l3678
  8296  001EA6                     u3460:
  8297  001EA6  0E01               	movlw	1
  8298  001EA8  2647               	addwf	___fladd@b^0,f,c
  8299  001EAA  0E00               	movlw	0
  8300  001EAC  2248               	addwfc	(___fladd@b+1)^0,f,c
  8301  001EAE  2249               	addwfc	(___fladd@b+2)^0,f,c
  8302  001EB0  224A               	addwfc	(___fladd@b+3)^0,f,c
  8303  001EB2  A04A               	btfss	(___fladd@b+3)^0,0,c
  8304  001EB4  EF5E  F00F         	goto	u3471
  8305  001EB8  EF60  F00F         	goto	u3470
  8306  001EBC                     u3471:
  8307  001EBC  EF7E  F00F         	goto	l3678
  8308  001EC0                     u3470:
  8309  001EC0  C047  F04F         	movff	___fladd@b,??___fladd
  8310  001EC4  C048  F050         	movff	___fladd@b+1,??___fladd+1
  8311  001EC8  C049  F051         	movff	___fladd@b+2,??___fladd+2
  8312  001ECC  C04A  F052         	movff	___fladd@b+3,??___fladd+3
  8313  001ED0  3452               	rlcf	(??___fladd+3)^0,w,c
  8314  001ED2  3252               	rrcf	(??___fladd+3)^0,f,c
  8315  001ED4  3251               	rrcf	(??___fladd+2)^0,f,c
  8316  001ED6  3250               	rrcf	(??___fladd+1)^0,f,c
  8317  001ED8  324F               	rrcf	??___fladd^0,f,c
  8318  001EDA  C04F  F047         	movff	??___fladd,___fladd@b
  8319  001EDE  C050  F048         	movff	??___fladd+1,___fladd@b+1
  8320  001EE2  C051  F049         	movff	??___fladd+2,___fladd@b+2
  8321  001EE6  C052  F04A         	movff	??___fladd+3,___fladd@b+3
  8322  001EEA  2855               	incf	___fladd@bexp^0,w,c
  8323  001EEC  B4D8               	btfsc	status,2,c
  8324  001EEE  EF7B  F00F         	goto	u3481
  8325  001EF2  EF7D  F00F         	goto	u3480
  8326  001EF6                     u3481:
  8327  001EF6  EF7E  F00F         	goto	l3678
  8328  001EFA                     u3480:
  8329  001EFA  2A55               	incf	___fladd@bexp^0,f,c
  8330  001EFC                     l3678:
  8331  001EFC  2855               	incf	___fladd@bexp^0,w,c
  8332  001EFE  B4D8               	btfsc	status,2,c
  8333  001F00  EF84  F00F         	goto	u3491
  8334  001F04  EF86  F00F         	goto	u3490
  8335  001F08                     u3491:
  8336  001F08  EF8E  F00F         	goto	l3682
  8337  001F0C                     u3490:
  8338  001F0C  5055               	movf	___fladd@bexp^0,w,c
  8339  001F0E  A4D8               	btfss	status,2,c
  8340  001F10  EF8C  F00F         	goto	u3501
  8341  001F14  EF8E  F00F         	goto	u3500
  8342  001F18                     u3501:
  8343  001F18  EFA0  F00F         	goto	l3686
  8344  001F1C                     u3500:
  8345  001F1C                     l3682:
  8346  001F1C  0E00               	movlw	0
  8347  001F1E  6E47               	movwf	___fladd@b^0,c
  8348  001F20  0E00               	movlw	0
  8349  001F22  6E48               	movwf	(___fladd@b+1)^0,c
  8350  001F24  0E00               	movlw	0
  8351  001F26  6E49               	movwf	(___fladd@b+2)^0,c
  8352  001F28  0E00               	movlw	0
  8353  001F2A  6E4A               	movwf	(___fladd@b+3)^0,c
  8354  001F2C  5055               	movf	___fladd@bexp^0,w,c
  8355  001F2E  A4D8               	btfss	status,2,c
  8356  001F30  EF9C  F00F         	goto	u3511
  8357  001F34  EF9E  F00F         	goto	u3510
  8358  001F38                     u3511:
  8359  001F38  EFA0  F00F         	goto	l3686
  8360  001F3C                     u3510:
  8361  001F3C  0E00               	movlw	0
  8362  001F3E  6E53               	movwf	___fladd@signs^0,c
  8363  001F40                     l3686:
  8364  001F40  A055               	btfss	___fladd@bexp^0,0,c
  8365  001F42  EFA5  F00F         	goto	u3521
  8366  001F46  EFA7  F00F         	goto	u3520
  8367  001F4A                     u3521:
  8368  001F4A  EFAA  F00F         	goto	l3690
  8369  001F4E                     u3520:
  8370  001F4E  8E49               	bsf	(___fladd@b+2)^0,7,c
  8371  001F50  EFAB  F00F         	goto	l3692
  8372  001F54                     l3690:
  8373  001F54  9E49               	bcf	(___fladd@b+2)^0,7,c
  8374  001F56                     l3692:
  8375  001F56  90D8               	bcf	status,0,c
  8376  001F58  3055               	rrcf	___fladd@bexp^0,w,c
  8377  001F5A  6E4A               	movwf	(___fladd@b+3)^0,c
  8378  001F5C  AE53               	btfss	___fladd@signs^0,7,c
  8379  001F5E  EFB3  F00F         	goto	u3531
  8380  001F62  EFB5  F00F         	goto	u3530
  8381  001F66                     u3531:
  8382  001F66  EFB6  F00F         	goto	l3698
  8383  001F6A                     u3530:
  8384  001F6A  8E4A               	bsf	(___fladd@b+3)^0,7,c
  8385  001F6C                     l3698:
  8386  001F6C  C047  F047         	movff	___fladd@b,?___fladd
  8387  001F70  C048  F048         	movff	___fladd@b+1,?___fladd+1
  8388  001F74  C049  F049         	movff	___fladd@b+2,?___fladd+2
  8389  001F78  C04A  F04A         	movff	___fladd@b+3,?___fladd+3
  8390  001F7C                     l941:
  8391  001F7C  0012               	return		;funcret
  8392  001F7E                     __end_of___fladd:
  8393                           	callstack 0
  8394                           
  8395 ;; *************** function ___flneg *****************
  8396 ;; Defined at:
  8397 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;  f1              4    0[COMRAM] unsigned char 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  4    0[COMRAM] unsigned char 
  8404 ;; Registers used:
  8405 ;;		wreg, status,2, status,0
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8411 ;;      Params:         4       0       0       0       0       0       0       0       0
  8412 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8414 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8415 ;;Total ram usage:        4 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 1
  8418 ;; This function calls:
  8419 ;;		Nothing
  8420 ;; This function is called by:
  8421 ;;		_efgtoa
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text27
  8426  0045B8                     __ptext27:
  8427                           	callstack 0
  8428  0045B8                     ___flneg:
  8429                           	callstack 25
  8430  0045B8  5001               	movf	___flneg@f1^0,w,c
  8431  0045BA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8432  0045BC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8433  0045BE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8434  0045C0  B4D8               	btfsc	status,2,c
  8435  0045C2  EFE5  F022         	goto	u4221
  8436  0045C6  EFE7  F022         	goto	u4220
  8437  0045CA                     u4221:
  8438  0045CA  EFEF  F022         	goto	l4130
  8439  0045CE                     u4220:
  8440  0045CE  0E00               	movlw	0
  8441  0045D0  1A01               	xorwf	___flneg@f1^0,f,c
  8442  0045D2  0E00               	movlw	0
  8443  0045D4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8444  0045D6  0E00               	movlw	0
  8445  0045D8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8446  0045DA  0E80               	movlw	128
  8447  0045DC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8448  0045DE                     l4130:
  8449  0045DE  C001  F001         	movff	___flneg@f1,?___flneg
  8450  0045E2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8451  0045E6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8452  0045EA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8453  0045EE  0012               	return		;funcret
  8454  0045F0                     __end_of___flneg:
  8455                           	callstack 0
  8456                           
  8457 ;; *************** function ___flmul *****************
  8458 ;; Defined at:
  8459 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  b               4   20[COMRAM] unsigned char 
  8462 ;;  a               4   24[COMRAM] unsigned char 
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;  prod            4   39[COMRAM] struct .
  8465 ;;  grs             4   33[COMRAM] unsigned long 
  8466 ;;  temp            2   43[COMRAM] struct .
  8467 ;;  bexp            1   38[COMRAM] unsigned char 
  8468 ;;  aexp            1   37[COMRAM] unsigned char 
  8469 ;;  sign            1   32[COMRAM] unsigned char 
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  4   20[COMRAM] unsigned char 
  8472 ;; Registers used:
  8473 ;;		wreg, status,2, status,0, prodl, prodh
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 0/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8479 ;;      Params:         8       0       0       0       0       0       0       0       0
  8480 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8481 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8482 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8483 ;;Total ram usage:       25 bytes
  8484 ;; Hardware stack levels used: 1
  8485 ;; Hardware stack levels required when called: 1
  8486 ;; This function calls:
  8487 ;;		Nothing
  8488 ;; This function is called by:
  8489 ;;		_ReadADC
  8490 ;;		_efgtoa
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           	psect	text28
  8495  001F7E                     __ptext28:
  8496                           	callstack 0
  8497  001F7E                     ___flmul:
  8498                           	callstack 25
  8499  001F7E  5018               	movf	(___flmul@b+3)^0,w,c
  8500  001F80  0B80               	andlw	128
  8501  001F82  6E21               	movwf	___flmul@sign^0,c
  8502  001F84  5018               	movf	(___flmul@b+3)^0,w,c
  8503  001F86  2418               	addwf	(___flmul@b+3)^0,w,c
  8504  001F88  6E27               	movwf	___flmul@bexp^0,c
  8505  001F8A  AE17               	btfss	(___flmul@b+2)^0,7,c
  8506  001F8C  EFCA  F00F         	goto	u3831
  8507  001F90  EFCC  F00F         	goto	u3830
  8508  001F94                     u3831:
  8509  001F94  EFCD  F00F         	goto	l3878
  8510  001F98                     u3830:
  8511  001F98  8027               	bsf	___flmul@bexp^0,0,c
  8512  001F9A                     l3878:
  8513  001F9A  5027               	movf	___flmul@bexp^0,w,c
  8514  001F9C  B4D8               	btfsc	status,2,c
  8515  001F9E  EFD3  F00F         	goto	u3841
  8516  001FA2  EFD5  F00F         	goto	u3840
  8517  001FA6                     u3841:
  8518  001FA6  EFE8  F00F         	goto	l3886
  8519  001FAA                     u3840:
  8520  001FAA  2827               	incf	___flmul@bexp^0,w,c
  8521  001FAC  A4D8               	btfss	status,2,c
  8522  001FAE  EFDB  F00F         	goto	u3851
  8523  001FB2  EFDD  F00F         	goto	u3850
  8524  001FB6                     u3851:
  8525  001FB6  EFE5  F00F         	goto	l3884
  8526  001FBA                     u3850:
  8527  001FBA  0E00               	movlw	0
  8528  001FBC  6E15               	movwf	___flmul@b^0,c
  8529  001FBE  0E00               	movlw	0
  8530  001FC0  6E16               	movwf	(___flmul@b+1)^0,c
  8531  001FC2  0E00               	movlw	0
  8532  001FC4  6E17               	movwf	(___flmul@b+2)^0,c
  8533  001FC6  0E00               	movlw	0
  8534  001FC8  6E18               	movwf	(___flmul@b+3)^0,c
  8535  001FCA                     l3884:
  8536  001FCA  8E17               	bsf	(___flmul@b+2)^0,7,c
  8537  001FCC  EFF0  F00F         	goto	l3888
  8538  001FD0                     l3886:
  8539  001FD0  0E00               	movlw	0
  8540  001FD2  6E15               	movwf	___flmul@b^0,c
  8541  001FD4  0E00               	movlw	0
  8542  001FD6  6E16               	movwf	(___flmul@b+1)^0,c
  8543  001FD8  0E00               	movlw	0
  8544  001FDA  6E17               	movwf	(___flmul@b+2)^0,c
  8545  001FDC  0E00               	movlw	0
  8546  001FDE  6E18               	movwf	(___flmul@b+3)^0,c
  8547  001FE0                     l3888:
  8548  001FE0  501C               	movf	(___flmul@a+3)^0,w,c
  8549  001FE2  0B80               	andlw	128
  8550  001FE4  1A21               	xorwf	___flmul@sign^0,f,c
  8551  001FE6  501C               	movf	(___flmul@a+3)^0,w,c
  8552  001FE8  241C               	addwf	(___flmul@a+3)^0,w,c
  8553  001FEA  6E26               	movwf	___flmul@aexp^0,c
  8554  001FEC  AE1B               	btfss	(___flmul@a+2)^0,7,c
  8555  001FEE  EFFB  F00F         	goto	u3861
  8556  001FF2  EFFD  F00F         	goto	u3860
  8557  001FF6                     u3861:
  8558  001FF6  EFFE  F00F         	goto	l3896
  8559  001FFA                     u3860:
  8560  001FFA  8026               	bsf	___flmul@aexp^0,0,c
  8561  001FFC                     l3896:
  8562  001FFC  5026               	movf	___flmul@aexp^0,w,c
  8563  001FFE  B4D8               	btfsc	status,2,c
  8564  002000  EF04  F010         	goto	u3871
  8565  002004  EF06  F010         	goto	u3870
  8566  002008                     u3871:
  8567  002008  EF19  F010         	goto	l3904
  8568  00200C                     u3870:
  8569  00200C  2826               	incf	___flmul@aexp^0,w,c
  8570  00200E  A4D8               	btfss	status,2,c
  8571  002010  EF0C  F010         	goto	u3881
  8572  002014  EF0E  F010         	goto	u3880
  8573  002018                     u3881:
  8574  002018  EF16  F010         	goto	l3902
  8575  00201C                     u3880:
  8576  00201C  0E00               	movlw	0
  8577  00201E  6E19               	movwf	___flmul@a^0,c
  8578  002020  0E00               	movlw	0
  8579  002022  6E1A               	movwf	(___flmul@a+1)^0,c
  8580  002024  0E00               	movlw	0
  8581  002026  6E1B               	movwf	(___flmul@a+2)^0,c
  8582  002028  0E00               	movlw	0
  8583  00202A  6E1C               	movwf	(___flmul@a+3)^0,c
  8584  00202C                     l3902:
  8585  00202C  8E1B               	bsf	(___flmul@a+2)^0,7,c
  8586  00202E  EF21  F010         	goto	l1018
  8587  002032                     l3904:
  8588  002032  0E00               	movlw	0
  8589  002034  6E19               	movwf	___flmul@a^0,c
  8590  002036  0E00               	movlw	0
  8591  002038  6E1A               	movwf	(___flmul@a+1)^0,c
  8592  00203A  0E00               	movlw	0
  8593  00203C  6E1B               	movwf	(___flmul@a+2)^0,c
  8594  00203E  0E00               	movlw	0
  8595  002040  6E1C               	movwf	(___flmul@a+3)^0,c
  8596  002042                     l1018:
  8597  002042  5026               	movf	___flmul@aexp^0,w,c
  8598  002044  B4D8               	btfsc	status,2,c
  8599  002046  EF27  F010         	goto	u3891
  8600  00204A  EF29  F010         	goto	u3890
  8601  00204E                     u3891:
  8602  00204E  EF31  F010         	goto	l3908
  8603  002052                     u3890:
  8604  002052  5027               	movf	___flmul@bexp^0,w,c
  8605  002054  A4D8               	btfss	status,2,c
  8606  002056  EF2F  F010         	goto	u3901
  8607  00205A  EF31  F010         	goto	u3900
  8608  00205E                     u3901:
  8609  00205E  EF3B  F010         	goto	l3912
  8610  002062                     u3900:
  8611  002062                     l3908:
  8612  002062  0E00               	movlw	0
  8613  002064  6E15               	movwf	?___flmul^0,c
  8614  002066  0E00               	movlw	0
  8615  002068  6E16               	movwf	(?___flmul+1)^0,c
  8616  00206A  0E00               	movlw	0
  8617  00206C  6E17               	movwf	(?___flmul+2)^0,c
  8618  00206E  0E00               	movlw	0
  8619  002070  6E18               	movwf	(?___flmul+3)^0,c
  8620  002072  EFD3  F011         	goto	l1022
  8621  002076                     l3912:
  8622  002076  501B               	movf	(___flmul@a+2)^0,w,c
  8623  002078  0215               	mulwf	___flmul@b^0,c
  8624  00207A  CFF3 F02C          	movff	prodl,___flmul@temp
  8625  00207E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8626  002082  502C               	movf	___flmul@temp^0,w,c
  8627  002084  6E22               	movwf	___flmul@grs^0,c
  8628  002086  6A23               	clrf	(___flmul@grs+1)^0,c
  8629  002088  6A24               	clrf	(___flmul@grs+2)^0,c
  8630  00208A  6A25               	clrf	(___flmul@grs+3)^0,c
  8631  00208C  502D               	movf	(___flmul@temp+1)^0,w,c
  8632  00208E  6E28               	movwf	___flmul@prod^0,c
  8633  002090  6A29               	clrf	(___flmul@prod+1)^0,c
  8634  002092  6A2A               	clrf	(___flmul@prod+2)^0,c
  8635  002094  6A2B               	clrf	(___flmul@prod+3)^0,c
  8636  002096  501A               	movf	(___flmul@a+1)^0,w,c
  8637  002098  0216               	mulwf	(___flmul@b+1)^0,c
  8638  00209A  CFF3 F02C          	movff	prodl,___flmul@temp
  8639  00209E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8640  0020A2  502C               	movf	___flmul@temp^0,w,c
  8641  0020A4  2622               	addwf	___flmul@grs^0,f,c
  8642  0020A6  0E00               	movlw	0
  8643  0020A8  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8644  0020AA  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8645  0020AC  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8646  0020AE  502D               	movf	(___flmul@temp+1)^0,w,c
  8647  0020B0  2628               	addwf	___flmul@prod^0,f,c
  8648  0020B2  0E00               	movlw	0
  8649  0020B4  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8650  0020B6  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8651  0020B8  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8652  0020BA  5019               	movf	___flmul@a^0,w,c
  8653  0020BC  0217               	mulwf	(___flmul@b+2)^0,c
  8654  0020BE  CFF3 F02C          	movff	prodl,___flmul@temp
  8655  0020C2  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8656  0020C6  502C               	movf	___flmul@temp^0,w,c
  8657  0020C8  2622               	addwf	___flmul@grs^0,f,c
  8658  0020CA  0E00               	movlw	0
  8659  0020CC  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8660  0020CE  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8661  0020D0  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8662  0020D2  502D               	movf	(___flmul@temp+1)^0,w,c
  8663  0020D4  2628               	addwf	___flmul@prod^0,f,c
  8664  0020D6  0E00               	movlw	0
  8665  0020D8  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8666  0020DA  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8667  0020DC  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8668  0020DE  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8669  0020E2  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8670  0020E6  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8671  0020EA  6A22               	clrf	___flmul@grs^0,c
  8672  0020EC  5019               	movf	___flmul@a^0,w,c
  8673  0020EE  0216               	mulwf	(___flmul@b+1)^0,c
  8674  0020F0  CFF3 F02C          	movff	prodl,___flmul@temp
  8675  0020F4  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8676  0020F8  502C               	movf	___flmul@temp^0,w,c
  8677  0020FA  2622               	addwf	___flmul@grs^0,f,c
  8678  0020FC  502D               	movf	(___flmul@temp+1)^0,w,c
  8679  0020FE  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8680  002100  0E00               	movlw	0
  8681  002102  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8682  002104  0E00               	movlw	0
  8683  002106  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8684  002108  501A               	movf	(___flmul@a+1)^0,w,c
  8685  00210A  0215               	mulwf	___flmul@b^0,c
  8686  00210C  CFF3 F02C          	movff	prodl,___flmul@temp
  8687  002110  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8688  002114  502C               	movf	___flmul@temp^0,w,c
  8689  002116  2622               	addwf	___flmul@grs^0,f,c
  8690  002118  502D               	movf	(___flmul@temp+1)^0,w,c
  8691  00211A  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8692  00211C  0E00               	movlw	0
  8693  00211E  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8694  002120  0E00               	movlw	0
  8695  002122  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8696  002124  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8697  002128  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8698  00212C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8699  002130  6A22               	clrf	___flmul@grs^0,c
  8700  002132  5019               	movf	___flmul@a^0,w,c
  8701  002134  0215               	mulwf	___flmul@b^0,c
  8702  002136  CFF3 F02C          	movff	prodl,___flmul@temp
  8703  00213A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8704  00213E  502C               	movf	___flmul@temp^0,w,c
  8705  002140  2622               	addwf	___flmul@grs^0,f,c
  8706  002142  502D               	movf	(___flmul@temp+1)^0,w,c
  8707  002144  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8708  002146  0E00               	movlw	0
  8709  002148  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8710  00214A  0E00               	movlw	0
  8711  00214C  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8712  00214E  501B               	movf	(___flmul@a+2)^0,w,c
  8713  002150  0216               	mulwf	(___flmul@b+1)^0,c
  8714  002152  CFF3 F02C          	movff	prodl,___flmul@temp
  8715  002156  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8716  00215A  502C               	movf	___flmul@temp^0,w,c
  8717  00215C  2628               	addwf	___flmul@prod^0,f,c
  8718  00215E  502D               	movf	(___flmul@temp+1)^0,w,c
  8719  002160  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8720  002162  0E00               	movlw	0
  8721  002164  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8722  002166  0E00               	movlw	0
  8723  002168  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8724  00216A  501A               	movf	(___flmul@a+1)^0,w,c
  8725  00216C  0217               	mulwf	(___flmul@b+2)^0,c
  8726  00216E  CFF3 F02C          	movff	prodl,___flmul@temp
  8727  002172  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8728  002176  502C               	movf	___flmul@temp^0,w,c
  8729  002178  2628               	addwf	___flmul@prod^0,f,c
  8730  00217A  502D               	movf	(___flmul@temp+1)^0,w,c
  8731  00217C  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8732  00217E  0E00               	movlw	0
  8733  002180  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8734  002182  0E00               	movlw	0
  8735  002184  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8736  002186  501B               	movf	(___flmul@a+2)^0,w,c
  8737  002188  0217               	mulwf	(___flmul@b+2)^0,c
  8738  00218A  CFF3 F02C          	movff	prodl,___flmul@temp
  8739  00218E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8740  002192  502C               	movf	___flmul@temp^0,w,c
  8741  002194  6E1D               	movwf	??___flmul^0,c
  8742  002196  502D               	movf	(___flmul@temp+1)^0,w,c
  8743  002198  6E1E               	movwf	(??___flmul+1)^0,c
  8744  00219A  6A1F               	clrf	(??___flmul+2)^0,c
  8745  00219C  6A20               	clrf	(??___flmul+3)^0,c
  8746  00219E  C01F  F020         	movff	??___flmul+2,??___flmul+3
  8747  0021A2  C01E  F01F         	movff	??___flmul+1,??___flmul+2
  8748  0021A6  C01D  F01E         	movff	??___flmul,??___flmul+1
  8749  0021AA  6A1D               	clrf	??___flmul^0,c
  8750  0021AC  501D               	movf	??___flmul^0,w,c
  8751  0021AE  2628               	addwf	___flmul@prod^0,f,c
  8752  0021B0  501E               	movf	(??___flmul+1)^0,w,c
  8753  0021B2  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8754  0021B4  501F               	movf	(??___flmul+2)^0,w,c
  8755  0021B6  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8756  0021B8  5020               	movf	(??___flmul+3)^0,w,c
  8757  0021BA  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8758  0021BC  C022  F01D         	movff	___flmul@grs,??___flmul
  8759  0021C0  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
  8760  0021C4  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
  8761  0021C8  C025  F020         	movff	___flmul@grs+3,??___flmul+3
  8762  0021CC  0E19               	movlw	25
  8763  0021CE  EFEE  F010         	goto	u3910
  8764  0021D2                     u3915:
  8765  0021D2  90D8               	bcf	status,0,c
  8766  0021D4  3220               	rrcf	(??___flmul+3)^0,f,c
  8767  0021D6  321F               	rrcf	(??___flmul+2)^0,f,c
  8768  0021D8  321E               	rrcf	(??___flmul+1)^0,f,c
  8769  0021DA  321D               	rrcf	??___flmul^0,f,c
  8770  0021DC                     u3910:
  8771  0021DC  2EE8               	decfsz	wreg,f,c
  8772  0021DE  EFE9  F010         	goto	u3915
  8773  0021E2  501D               	movf	??___flmul^0,w,c
  8774  0021E4  2628               	addwf	___flmul@prod^0,f,c
  8775  0021E6  501E               	movf	(??___flmul+1)^0,w,c
  8776  0021E8  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8777  0021EA  501F               	movf	(??___flmul+2)^0,w,c
  8778  0021EC  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8779  0021EE  5020               	movf	(??___flmul+3)^0,w,c
  8780  0021F0  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8781  0021F2  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8782  0021F6  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8783  0021FA  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8784  0021FE  6A22               	clrf	___flmul@grs^0,c
  8785  002200  5026               	movf	___flmul@aexp^0,w,c
  8786  002202  C027  F01D         	movff	___flmul@bexp,??___flmul
  8787  002206  6A1E               	clrf	(??___flmul+1)^0,c
  8788  002208  261D               	addwf	??___flmul^0,f,c
  8789  00220A  0E00               	movlw	0
  8790  00220C  221E               	addwfc	(??___flmul+1)^0,f,c
  8791  00220E  0E82               	movlw	130
  8792  002210  241D               	addwf	??___flmul^0,w,c
  8793  002212  6E2C               	movwf	___flmul@temp^0,c
  8794  002214  0EFF               	movlw	255
  8795  002216  201E               	addwfc	(??___flmul+1)^0,w,c
  8796  002218  6E2D               	movwf	(___flmul@temp+1)^0,c
  8797  00221A  EF24  F011         	goto	l3960
  8798  00221E                     l3954:
  8799  00221E  90D8               	bcf	status,0,c
  8800  002220  3628               	rlcf	___flmul@prod^0,f,c
  8801  002222  3629               	rlcf	(___flmul@prod+1)^0,f,c
  8802  002224  362A               	rlcf	(___flmul@prod+2)^0,f,c
  8803  002226  362B               	rlcf	(___flmul@prod+3)^0,f,c
  8804  002228  AE25               	btfss	(___flmul@grs+3)^0,7,c
  8805  00222A  EF19  F011         	goto	u3921
  8806  00222E  EF1B  F011         	goto	u3920
  8807  002232                     u3921:
  8808  002232  EF1C  F011         	goto	l1025
  8809  002236                     u3920:
  8810  002236  8028               	bsf	___flmul@prod^0,0,c
  8811  002238                     l1025:
  8812  002238  90D8               	bcf	status,0,c
  8813  00223A  3622               	rlcf	___flmul@grs^0,f,c
  8814  00223C  3623               	rlcf	(___flmul@grs+1)^0,f,c
  8815  00223E  3624               	rlcf	(___flmul@grs+2)^0,f,c
  8816  002240  3625               	rlcf	(___flmul@grs+3)^0,f,c
  8817  002242  062C               	decf	___flmul@temp^0,f,c
  8818  002244  A0D8               	btfss	status,0,c
  8819  002246  062D               	decf	(___flmul@temp+1)^0,f,c
  8820  002248                     l3960:
  8821  002248  AE2A               	btfss	(___flmul@prod+2)^0,7,c
  8822  00224A  EF29  F011         	goto	u3931
  8823  00224E  EF2B  F011         	goto	u3930
  8824  002252                     u3931:
  8825  002252  EF0F  F011         	goto	l3954
  8826  002256                     u3930:
  8827  002256  0E00               	movlw	0
  8828  002258  6E26               	movwf	___flmul@aexp^0,c
  8829  00225A  AE25               	btfss	(___flmul@grs+3)^0,7,c
  8830  00225C  EF32  F011         	goto	u3941
  8831  002260  EF34  F011         	goto	u3940
  8832  002264                     u3941:
  8833  002264  EF58  F011         	goto	l1027
  8834  002268                     u3940:
  8835  002268  0EFF               	movlw	255
  8836  00226A  1422               	andwf	___flmul@grs^0,w,c
  8837  00226C  6E1D               	movwf	??___flmul^0,c
  8838  00226E  0EFF               	movlw	255
  8839  002270  1423               	andwf	(___flmul@grs+1)^0,w,c
  8840  002272  6E1E               	movwf	(??___flmul+1)^0,c
  8841  002274  0EFF               	movlw	255
  8842  002276  1424               	andwf	(___flmul@grs+2)^0,w,c
  8843  002278  6E1F               	movwf	(??___flmul+2)^0,c
  8844  00227A  0E7F               	movlw	127
  8845  00227C  1425               	andwf	(___flmul@grs+3)^0,w,c
  8846  00227E  6E20               	movwf	(??___flmul+3)^0,c
  8847  002280  501D               	movf	??___flmul^0,w,c
  8848  002282  101E               	iorwf	(??___flmul+1)^0,w,c
  8849  002284  101F               	iorwf	(??___flmul+2)^0,w,c
  8850  002286  1020               	iorwf	(??___flmul+3)^0,w,c
  8851  002288  B4D8               	btfsc	status,2,c
  8852  00228A  EF49  F011         	goto	u3951
  8853  00228E  EF4B  F011         	goto	u3950
  8854  002292                     u3951:
  8855  002292  EF4F  F011         	goto	l1028
  8856  002296                     u3950:
  8857  002296                     l3968:
  8858  002296  0E01               	movlw	1
  8859  002298  6E26               	movwf	___flmul@aexp^0,c
  8860  00229A  EF58  F011         	goto	l1027
  8861  00229E                     l1028:
  8862  00229E  A028               	btfss	___flmul@prod^0,0,c
  8863  0022A0  EF54  F011         	goto	u3961
  8864  0022A4  EF56  F011         	goto	u3960
  8865  0022A8                     u3961:
  8866  0022A8  EF58  F011         	goto	l1027
  8867  0022AC                     u3960:
  8868  0022AC  EF4B  F011         	goto	l3968
  8869  0022B0                     l1027:
  8870  0022B0  5026               	movf	___flmul@aexp^0,w,c
  8871  0022B2  B4D8               	btfsc	status,2,c
  8872  0022B4  EF5E  F011         	goto	u3971
  8873  0022B8  EF60  F011         	goto	u3970
  8874  0022BC                     u3971:
  8875  0022BC  EF84  F011         	goto	l3980
  8876  0022C0                     u3970:
  8877  0022C0  0E01               	movlw	1
  8878  0022C2  2628               	addwf	___flmul@prod^0,f,c
  8879  0022C4  0E00               	movlw	0
  8880  0022C6  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8881  0022C8  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8882  0022CA  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8883  0022CC  A02B               	btfss	(___flmul@prod+3)^0,0,c
  8884  0022CE  EF6B  F011         	goto	u3981
  8885  0022D2  EF6D  F011         	goto	u3980
  8886  0022D6                     u3981:
  8887  0022D6  EF84  F011         	goto	l3980
  8888  0022DA                     u3980:
  8889  0022DA  C028  F01D         	movff	___flmul@prod,??___flmul
  8890  0022DE  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
  8891  0022E2  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
  8892  0022E6  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
  8893  0022EA  3420               	rlcf	(??___flmul+3)^0,w,c
  8894  0022EC  3220               	rrcf	(??___flmul+3)^0,f,c
  8895  0022EE  321F               	rrcf	(??___flmul+2)^0,f,c
  8896  0022F0  321E               	rrcf	(??___flmul+1)^0,f,c
  8897  0022F2  321D               	rrcf	??___flmul^0,f,c
  8898  0022F4  C01D  F028         	movff	??___flmul,___flmul@prod
  8899  0022F8  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
  8900  0022FC  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
  8901  002300  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
  8902  002304  4A2C               	infsnz	___flmul@temp^0,f,c
  8903  002306  2A2D               	incf	(___flmul@temp+1)^0,f,c
  8904  002308                     l3980:
  8905  002308  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  8906  00230A  EF8F  F011         	goto	u3991
  8907  00230E  502D               	movf	(___flmul@temp+1)^0,w,c
  8908  002310  E108               	bnz	u3990
  8909  002312  282C               	incf	___flmul@temp^0,w,c
  8910  002314  A0D8               	btfss	status,0,c
  8911  002316  EF8F  F011         	goto	u3991
  8912  00231A  EF91  F011         	goto	u3990
  8913  00231E                     u3991:
  8914  00231E  EF9B  F011         	goto	l3984
  8915  002322                     u3990:
  8916  002322  0E00               	movlw	0
  8917  002324  6E28               	movwf	___flmul@prod^0,c
  8918  002326  0E00               	movlw	0
  8919  002328  6E29               	movwf	(___flmul@prod+1)^0,c
  8920  00232A  0E80               	movlw	128
  8921  00232C  6E2A               	movwf	(___flmul@prod+2)^0,c
  8922  00232E  0E7F               	movlw	127
  8923  002330  6E2B               	movwf	(___flmul@prod+3)^0,c
  8924  002332  EFC9  F011         	goto	l3996
  8925  002336                     l3984:
  8926  002336  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  8927  002338  EFA8  F011         	goto	u4000
  8928  00233C  502D               	movf	(___flmul@temp+1)^0,w,c
  8929  00233E  E106               	bnz	u4001
  8930  002340  042C               	decf	___flmul@temp^0,w,c
  8931  002342  B0D8               	btfsc	status,0,c
  8932  002344  EFA6  F011         	goto	u4001
  8933  002348  EFA8  F011         	goto	u4000
  8934  00234C                     u4001:
  8935  00234C  EFB4  F011         	goto	l1035
  8936  002350                     u4000:
  8937  002350  0E00               	movlw	0
  8938  002352  6E28               	movwf	___flmul@prod^0,c
  8939  002354  0E00               	movlw	0
  8940  002356  6E29               	movwf	(___flmul@prod+1)^0,c
  8941  002358  0E00               	movlw	0
  8942  00235A  6E2A               	movwf	(___flmul@prod+2)^0,c
  8943  00235C  0E00               	movlw	0
  8944  00235E  6E2B               	movwf	(___flmul@prod+3)^0,c
  8945  002360  0E00               	movlw	0
  8946  002362  6E21               	movwf	___flmul@sign^0,c
  8947  002364  EFC9  F011         	goto	l3996
  8948  002368                     l1035:
  8949  002368  C02C  F027         	movff	___flmul@temp,___flmul@bexp
  8950  00236C  0EFF               	movlw	255
  8951  00236E  1628               	andwf	___flmul@prod^0,f,c
  8952  002370  0EFF               	movlw	255
  8953  002372  1629               	andwf	(___flmul@prod+1)^0,f,c
  8954  002374  0E7F               	movlw	127
  8955  002376  162A               	andwf	(___flmul@prod+2)^0,f,c
  8956  002378  0E00               	movlw	0
  8957  00237A  162B               	andwf	(___flmul@prod+3)^0,f,c
  8958  00237C  A027               	btfss	___flmul@bexp^0,0,c
  8959  00237E  EFC3  F011         	goto	u4011
  8960  002382  EFC5  F011         	goto	u4010
  8961  002386                     u4011:
  8962  002386  EFC6  F011         	goto	l3994
  8963  00238A                     u4010:
  8964  00238A  8E2A               	bsf	(___flmul@prod+2)^0,7,c
  8965  00238C                     l3994:
  8966  00238C  90D8               	bcf	status,0,c
  8967  00238E  3027               	rrcf	___flmul@bexp^0,w,c
  8968  002390  6E2B               	movwf	(___flmul@prod+3)^0,c
  8969  002392                     l3996:
  8970  002392  5021               	movf	___flmul@sign^0,w,c
  8971  002394  122B               	iorwf	(___flmul@prod+3)^0,f,c
  8972  002396  C028  F015         	movff	___flmul@prod,?___flmul
  8973  00239A  C029  F016         	movff	___flmul@prod+1,?___flmul+1
  8974  00239E  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
  8975  0023A2  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
  8976  0023A6                     l1022:
  8977  0023A6  0012               	return		;funcret
  8978  0023A8                     __end_of___flmul:
  8979                           	callstack 0
  8980                           
  8981 ;; *************** function ___flge *****************
  8982 ;; Defined at:
  8983 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;  ff1             4   45[COMRAM] unsigned char 
  8986 ;;  ff2             4   49[COMRAM] unsigned char 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;		None
  8989 ;; Return value:  Size  Location     Type
  8990 ;;		None               void
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, status,0
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8998 ;;      Params:         8       0       0       0       0       0       0       0       0
  8999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9000 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9001 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9002 ;;Total ram usage:       12 bytes
  9003 ;; Hardware stack levels used: 1
  9004 ;; Hardware stack levels required when called: 1
  9005 ;; This function calls:
  9006 ;;		Nothing
  9007 ;; This function is called by:
  9008 ;;		_main
  9009 ;;		_efgtoa
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	text29
  9014  003790                     __ptext29:
  9015                           	callstack 0
  9016  003790                     ___flge:
  9017                           	callstack 25
  9018  003790  0E00               	movlw	0
  9019  003792  142E               	andwf	___flge@ff1^0,w,c
  9020  003794  6E36               	movwf	??___flge^0,c
  9021  003796  0E00               	movlw	0
  9022  003798  142F               	andwf	(___flge@ff1+1)^0,w,c
  9023  00379A  6E37               	movwf	(??___flge+1)^0,c
  9024  00379C  0E80               	movlw	128
  9025  00379E  1430               	andwf	(___flge@ff1+2)^0,w,c
  9026  0037A0  6E38               	movwf	(??___flge+2)^0,c
  9027  0037A2  0E7F               	movlw	127
  9028  0037A4  1431               	andwf	(___flge@ff1+3)^0,w,c
  9029  0037A6  6E39               	movwf	(??___flge+3)^0,c
  9030  0037A8  5036               	movf	??___flge^0,w,c
  9031  0037AA  1037               	iorwf	(??___flge+1)^0,w,c
  9032  0037AC  1038               	iorwf	(??___flge+2)^0,w,c
  9033  0037AE  1039               	iorwf	(??___flge+3)^0,w,c
  9034  0037B0  A4D8               	btfss	status,2,c
  9035  0037B2  EFDD  F01B         	goto	u4171
  9036  0037B6  EFDF  F01B         	goto	u4170
  9037  0037BA                     u4171:
  9038  0037BA  EFE7  F01B         	goto	l4108
  9039  0037BE                     u4170:
  9040  0037BE  0E00               	movlw	0
  9041  0037C0  6E2E               	movwf	___flge@ff1^0,c
  9042  0037C2  0E00               	movlw	0
  9043  0037C4  6E2F               	movwf	(___flge@ff1+1)^0,c
  9044  0037C6  0E00               	movlw	0
  9045  0037C8  6E30               	movwf	(___flge@ff1+2)^0,c
  9046  0037CA  0E00               	movlw	0
  9047  0037CC  6E31               	movwf	(___flge@ff1+3)^0,c
  9048  0037CE                     l4108:
  9049  0037CE  0E00               	movlw	0
  9050  0037D0  1432               	andwf	___flge@ff2^0,w,c
  9051  0037D2  6E36               	movwf	??___flge^0,c
  9052  0037D4  0E00               	movlw	0
  9053  0037D6  1433               	andwf	(___flge@ff2+1)^0,w,c
  9054  0037D8  6E37               	movwf	(??___flge+1)^0,c
  9055  0037DA  0E80               	movlw	128
  9056  0037DC  1434               	andwf	(___flge@ff2+2)^0,w,c
  9057  0037DE  6E38               	movwf	(??___flge+2)^0,c
  9058  0037E0  0E7F               	movlw	127
  9059  0037E2  1435               	andwf	(___flge@ff2+3)^0,w,c
  9060  0037E4  6E39               	movwf	(??___flge+3)^0,c
  9061  0037E6  5036               	movf	??___flge^0,w,c
  9062  0037E8  1037               	iorwf	(??___flge+1)^0,w,c
  9063  0037EA  1038               	iorwf	(??___flge+2)^0,w,c
  9064  0037EC  1039               	iorwf	(??___flge+3)^0,w,c
  9065  0037EE  A4D8               	btfss	status,2,c
  9066  0037F0  EFFC  F01B         	goto	u4181
  9067  0037F4  EFFE  F01B         	goto	u4180
  9068  0037F8                     u4181:
  9069  0037F8  EF06  F01C         	goto	l4112
  9070  0037FC                     u4180:
  9071  0037FC  0E00               	movlw	0
  9072  0037FE  6E32               	movwf	___flge@ff2^0,c
  9073  003800  0E00               	movlw	0
  9074  003802  6E33               	movwf	(___flge@ff2+1)^0,c
  9075  003804  0E00               	movlw	0
  9076  003806  6E34               	movwf	(___flge@ff2+2)^0,c
  9077  003808  0E00               	movlw	0
  9078  00380A  6E35               	movwf	(___flge@ff2+3)^0,c
  9079  00380C                     l4112:
  9080  00380C  AE31               	btfss	(___flge@ff1+3)^0,7,c
  9081  00380E  EF0B  F01C         	goto	u4191
  9082  003812  EF0D  F01C         	goto	u4190
  9083  003816                     u4191:
  9084  003816  EF16  F01C         	goto	l4116
  9085  00381A                     u4190:
  9086  00381A  6C2E               	negf	___flge@ff1^0,c
  9087  00381C  1E2F               	comf	(___flge@ff1+1)^0,f,c
  9088  00381E  B0D8               	btfsc	status,0,c
  9089  003820  2A2F               	incf	(___flge@ff1+1)^0,f,c
  9090  003822  1E30               	comf	(___flge@ff1+2)^0,f,c
  9091  003824  B0D8               	btfsc	status,0,c
  9092  003826  2A30               	incf	(___flge@ff1+2)^0,f,c
  9093  003828  0E80               	movlw	128
  9094  00382A  5631               	subfwb	(___flge@ff1+3)^0,f,c
  9095  00382C                     l4116:
  9096  00382C  AE35               	btfss	(___flge@ff2+3)^0,7,c
  9097  00382E  EF1B  F01C         	goto	u4201
  9098  003832  EF1D  F01C         	goto	u4200
  9099  003836                     u4201:
  9100  003836  EF26  F01C         	goto	l669
  9101  00383A                     u4200:
  9102  00383A  6C32               	negf	___flge@ff2^0,c
  9103  00383C  1E33               	comf	(___flge@ff2+1)^0,f,c
  9104  00383E  B0D8               	btfsc	status,0,c
  9105  003840  2A33               	incf	(___flge@ff2+1)^0,f,c
  9106  003842  1E34               	comf	(___flge@ff2+2)^0,f,c
  9107  003844  B0D8               	btfsc	status,0,c
  9108  003846  2A34               	incf	(___flge@ff2+2)^0,f,c
  9109  003848  0E80               	movlw	128
  9110  00384A  5635               	subfwb	(___flge@ff2+3)^0,f,c
  9111  00384C                     l669:
  9112  00384C  0E00               	movlw	0
  9113  00384E  1A2E               	xorwf	___flge@ff1^0,f,c
  9114  003850  0E00               	movlw	0
  9115  003852  1A2F               	xorwf	(___flge@ff1+1)^0,f,c
  9116  003854  0E00               	movlw	0
  9117  003856  1A30               	xorwf	(___flge@ff1+2)^0,f,c
  9118  003858  0E80               	movlw	128
  9119  00385A  1A31               	xorwf	(___flge@ff1+3)^0,f,c
  9120  00385C  0E00               	movlw	0
  9121  00385E  1A32               	xorwf	___flge@ff2^0,f,c
  9122  003860  0E00               	movlw	0
  9123  003862  1A33               	xorwf	(___flge@ff2+1)^0,f,c
  9124  003864  0E00               	movlw	0
  9125  003866  1A34               	xorwf	(___flge@ff2+2)^0,f,c
  9126  003868  0E80               	movlw	128
  9127  00386A  1A35               	xorwf	(___flge@ff2+3)^0,f,c
  9128  00386C  5032               	movf	___flge@ff2^0,w,c
  9129  00386E  5C2E               	subwf	___flge@ff1^0,w,c
  9130  003870  5033               	movf	(___flge@ff2+1)^0,w,c
  9131  003872  582F               	subwfb	(___flge@ff1+1)^0,w,c
  9132  003874  5034               	movf	(___flge@ff2+2)^0,w,c
  9133  003876  5830               	subwfb	(___flge@ff1+2)^0,w,c
  9134  003878  5035               	movf	(___flge@ff2+3)^0,w,c
  9135  00387A  5831               	subwfb	(___flge@ff1+3)^0,w,c
  9136  00387C  B0D8               	btfsc	status,0,c
  9137  00387E  EF43  F01C         	goto	u4211
  9138  003882  EF45  F01C         	goto	u4210
  9139  003886                     u4211:
  9140  003886  EF48  F01C         	goto	l4122
  9141  00388A                     u4210:
  9142  00388A  90D8               	bcf	status,0,c
  9143  00388C  EF49  F01C         	goto	l674
  9144  003890                     l4122:
  9145  003890  80D8               	bsf	status,0,c
  9146  003892                     l674:
  9147  003892  0012               	return		;funcret
  9148  003894                     __end_of___flge:
  9149                           	callstack 0
  9150                           
  9151 ;; *************** function ___fleq *****************
  9152 ;; Defined at:
  9153 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;  ff1             4    0[COMRAM] unsigned char 
  9156 ;;  ff2             4    4[COMRAM] unsigned char 
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;		None
  9159 ;; Return value:  Size  Location     Type
  9160 ;;		None               void
  9161 ;; Registers used:
  9162 ;;		wreg, status,2, status,0
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9168 ;;      Params:         8       0       0       0       0       0       0       0       0
  9169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9170 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9171 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9172 ;;Total ram usage:       12 bytes
  9173 ;; Hardware stack levels used: 1
  9174 ;; Hardware stack levels required when called: 1
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_efgtoa
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           	psect	text30
  9183  003E6A                     __ptext30:
  9184                           	callstack 0
  9185  003E6A                     ___fleq:
  9186                           	callstack 25
  9187  003E6A  0E00               	movlw	0
  9188  003E6C  1401               	andwf	___fleq@ff1^0,w,c
  9189  003E6E  6E09               	movwf	??___fleq^0,c
  9190  003E70  0E00               	movlw	0
  9191  003E72  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9192  003E74  6E0A               	movwf	(??___fleq+1)^0,c
  9193  003E76  0E80               	movlw	128
  9194  003E78  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9195  003E7A  6E0B               	movwf	(??___fleq+2)^0,c
  9196  003E7C  0E7F               	movlw	127
  9197  003E7E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9198  003E80  6E0C               	movwf	(??___fleq+3)^0,c
  9199  003E82  5009               	movf	??___fleq^0,w,c
  9200  003E84  100A               	iorwf	(??___fleq+1)^0,w,c
  9201  003E86  100B               	iorwf	(??___fleq+2)^0,w,c
  9202  003E88  100C               	iorwf	(??___fleq+3)^0,w,c
  9203  003E8A  A4D8               	btfss	status,2,c
  9204  003E8C  EF4A  F01F         	goto	u4141
  9205  003E90  EF4C  F01F         	goto	u4140
  9206  003E94                     u4141:
  9207  003E94  EF54  F01F         	goto	l4092
  9208  003E98                     u4140:
  9209  003E98  0E00               	movlw	0
  9210  003E9A  6E01               	movwf	___fleq@ff1^0,c
  9211  003E9C  0E00               	movlw	0
  9212  003E9E  6E02               	movwf	(___fleq@ff1+1)^0,c
  9213  003EA0  0E00               	movlw	0
  9214  003EA2  6E03               	movwf	(___fleq@ff1+2)^0,c
  9215  003EA4  0E00               	movlw	0
  9216  003EA6  6E04               	movwf	(___fleq@ff1+3)^0,c
  9217  003EA8                     l4092:
  9218  003EA8  0E00               	movlw	0
  9219  003EAA  1405               	andwf	___fleq@ff2^0,w,c
  9220  003EAC  6E09               	movwf	??___fleq^0,c
  9221  003EAE  0E00               	movlw	0
  9222  003EB0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9223  003EB2  6E0A               	movwf	(??___fleq+1)^0,c
  9224  003EB4  0E80               	movlw	128
  9225  003EB6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9226  003EB8  6E0B               	movwf	(??___fleq+2)^0,c
  9227  003EBA  0E7F               	movlw	127
  9228  003EBC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9229  003EBE  6E0C               	movwf	(??___fleq+3)^0,c
  9230  003EC0  5009               	movf	??___fleq^0,w,c
  9231  003EC2  100A               	iorwf	(??___fleq+1)^0,w,c
  9232  003EC4  100B               	iorwf	(??___fleq+2)^0,w,c
  9233  003EC6  100C               	iorwf	(??___fleq+3)^0,w,c
  9234  003EC8  A4D8               	btfss	status,2,c
  9235  003ECA  EF69  F01F         	goto	u4151
  9236  003ECE  EF6B  F01F         	goto	u4150
  9237  003ED2                     u4151:
  9238  003ED2  EF73  F01F         	goto	l4096
  9239  003ED6                     u4150:
  9240  003ED6  0E00               	movlw	0
  9241  003ED8  6E05               	movwf	___fleq@ff2^0,c
  9242  003EDA  0E00               	movlw	0
  9243  003EDC  6E06               	movwf	(___fleq@ff2+1)^0,c
  9244  003EDE  0E00               	movlw	0
  9245  003EE0  6E07               	movwf	(___fleq@ff2+2)^0,c
  9246  003EE2  0E00               	movlw	0
  9247  003EE4  6E08               	movwf	(___fleq@ff2+3)^0,c
  9248  003EE6                     l4096:
  9249  003EE6  5005               	movf	___fleq@ff2^0,w,c
  9250  003EE8  1801               	xorwf	___fleq@ff1^0,w,c
  9251  003EEA  E10F               	bnz	u4160
  9252  003EEC  5006               	movf	(___fleq@ff2+1)^0,w,c
  9253  003EEE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9254  003EF0  E10C               	bnz	u4160
  9255  003EF2  5007               	movf	(___fleq@ff2+2)^0,w,c
  9256  003EF4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9257  003EF6  E109               	bnz	u4160
  9258  003EF8  5008               	movf	(___fleq@ff2+3)^0,w,c
  9259  003EFA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9260  003EFC  B4D8               	btfsc	status,2,c
  9261  003EFE  EF83  F01F         	goto	u4161
  9262  003F02  EF85  F01F         	goto	u4160
  9263  003F06                     u4161:
  9264  003F06  EF88  F01F         	goto	l4100
  9265  003F0A                     u4160:
  9266  003F0A  90D8               	bcf	status,0,c
  9267  003F0C  EF89  F01F         	goto	l663
  9268  003F10                     l4100:
  9269  003F10  80D8               	bsf	status,0,c
  9270  003F12                     l663:
  9271  003F12  0012               	return		;funcret
  9272  003F14                     __end_of___fleq:
  9273                           	callstack 0
  9274                           
  9275 ;; *************** function ___fldiv *****************
  9276 ;; Defined at:
  9277 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;  b               4   45[COMRAM] unsigned char 
  9280 ;;  a               4   49[COMRAM] unsigned char 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;  grs             4   64[COMRAM] unsigned long 
  9283 ;;  rem             4   57[COMRAM] unsigned long 
  9284 ;;  new_exp         2   62[COMRAM] short 
  9285 ;;  aexp            1   69[COMRAM] unsigned char 
  9286 ;;  bexp            1   68[COMRAM] unsigned char 
  9287 ;;  sign            1   61[COMRAM] unsigned char 
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  4   45[COMRAM] unsigned char 
  9290 ;; Registers used:
  9291 ;;		wreg, status,2, status,0
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9297 ;;      Params:         8       0       0       0       0       0       0       0       0
  9298 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9299 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9300 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9301 ;;Total ram usage:       25 bytes
  9302 ;; Hardware stack levels used: 1
  9303 ;; Hardware stack levels required when called: 1
  9304 ;; This function calls:
  9305 ;;		Nothing
  9306 ;; This function is called by:
  9307 ;;		_ReadADC
  9308 ;;		_efgtoa
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text31
  9313  002764                     __ptext31:
  9314                           	callstack 0
  9315  002764                     ___fldiv:
  9316                           	callstack 25
  9317  002764  5031               	movf	(___fldiv@b+3)^0,w,c
  9318  002766  0B80               	andlw	128
  9319  002768  6E3E               	movwf	___fldiv@sign^0,c
  9320  00276A  5031               	movf	(___fldiv@b+3)^0,w,c
  9321  00276C  2431               	addwf	(___fldiv@b+3)^0,w,c
  9322  00276E  6E45               	movwf	___fldiv@bexp^0,c
  9323  002770  AE30               	btfss	(___fldiv@b+2)^0,7,c
  9324  002772  EFBD  F013         	goto	u3601
  9325  002776  EFBF  F013         	goto	u3600
  9326  00277A                     u3601:
  9327  00277A  EFC0  F013         	goto	l3740
  9328  00277E                     u3600:
  9329  00277E  8045               	bsf	___fldiv@bexp^0,0,c
  9330  002780                     l3740:
  9331  002780  5045               	movf	___fldiv@bexp^0,w,c
  9332  002782  B4D8               	btfsc	status,2,c
  9333  002784  EFC6  F013         	goto	u3611
  9334  002788  EFC8  F013         	goto	u3610
  9335  00278C                     u3611:
  9336  00278C  EFDD  F013         	goto	l3750
  9337  002790                     u3610:
  9338  002790  2845               	incf	___fldiv@bexp^0,w,c
  9339  002792  A4D8               	btfss	status,2,c
  9340  002794  EFCE  F013         	goto	u3621
  9341  002798  EFD0  F013         	goto	u3620
  9342  00279C                     u3621:
  9343  00279C  EFD8  F013         	goto	l3746
  9344  0027A0                     u3620:
  9345  0027A0  0E00               	movlw	0
  9346  0027A2  6E2E               	movwf	___fldiv@b^0,c
  9347  0027A4  0E00               	movlw	0
  9348  0027A6  6E2F               	movwf	(___fldiv@b+1)^0,c
  9349  0027A8  0E00               	movlw	0
  9350  0027AA  6E30               	movwf	(___fldiv@b+2)^0,c
  9351  0027AC  0E00               	movlw	0
  9352  0027AE  6E31               	movwf	(___fldiv@b+3)^0,c
  9353  0027B0                     l3746:
  9354  0027B0  8E30               	bsf	(___fldiv@b+2)^0,7,c
  9355  0027B2  0E00               	movlw	0
  9356  0027B4  6E31               	movwf	(___fldiv@b+3)^0,c
  9357  0027B6  EFE5  F013         	goto	l3752
  9358  0027BA                     l3750:
  9359  0027BA  0E00               	movlw	0
  9360  0027BC  6E2E               	movwf	___fldiv@b^0,c
  9361  0027BE  0E00               	movlw	0
  9362  0027C0  6E2F               	movwf	(___fldiv@b+1)^0,c
  9363  0027C2  0E00               	movlw	0
  9364  0027C4  6E30               	movwf	(___fldiv@b+2)^0,c
  9365  0027C6  0E00               	movlw	0
  9366  0027C8  6E31               	movwf	(___fldiv@b+3)^0,c
  9367  0027CA                     l3752:
  9368  0027CA  5035               	movf	(___fldiv@a+3)^0,w,c
  9369  0027CC  0B80               	andlw	128
  9370  0027CE  1A3E               	xorwf	___fldiv@sign^0,f,c
  9371  0027D0  5035               	movf	(___fldiv@a+3)^0,w,c
  9372  0027D2  2435               	addwf	(___fldiv@a+3)^0,w,c
  9373  0027D4  6E46               	movwf	___fldiv@aexp^0,c
  9374  0027D6  AE34               	btfss	(___fldiv@a+2)^0,7,c
  9375  0027D8  EFF0  F013         	goto	u3631
  9376  0027DC  EFF2  F013         	goto	u3630
  9377  0027E0                     u3631:
  9378  0027E0  EFF3  F013         	goto	l3760
  9379  0027E4                     u3630:
  9380  0027E4  8046               	bsf	___fldiv@aexp^0,0,c
  9381  0027E6                     l3760:
  9382  0027E6  5046               	movf	___fldiv@aexp^0,w,c
  9383  0027E8  B4D8               	btfsc	status,2,c
  9384  0027EA  EFF9  F013         	goto	u3641
  9385  0027EE  EFFB  F013         	goto	u3640
  9386  0027F2                     u3641:
  9387  0027F2  EF10  F014         	goto	l3770
  9388  0027F6                     u3640:
  9389  0027F6  2846               	incf	___fldiv@aexp^0,w,c
  9390  0027F8  A4D8               	btfss	status,2,c
  9391  0027FA  EF01  F014         	goto	u3651
  9392  0027FE  EF03  F014         	goto	u3650
  9393  002802                     u3651:
  9394  002802  EF0B  F014         	goto	l3766
  9395  002806                     u3650:
  9396  002806  0E00               	movlw	0
  9397  002808  6E32               	movwf	___fldiv@a^0,c
  9398  00280A  0E00               	movlw	0
  9399  00280C  6E33               	movwf	(___fldiv@a+1)^0,c
  9400  00280E  0E00               	movlw	0
  9401  002810  6E34               	movwf	(___fldiv@a+2)^0,c
  9402  002812  0E00               	movlw	0
  9403  002814  6E35               	movwf	(___fldiv@a+3)^0,c
  9404  002816                     l3766:
  9405  002816  8E34               	bsf	(___fldiv@a+2)^0,7,c
  9406  002818  0E00               	movlw	0
  9407  00281A  6E35               	movwf	(___fldiv@a+3)^0,c
  9408  00281C  EF18  F014         	goto	l3772
  9409  002820                     l3770:
  9410  002820  0E00               	movlw	0
  9411  002822  6E32               	movwf	___fldiv@a^0,c
  9412  002824  0E00               	movlw	0
  9413  002826  6E33               	movwf	(___fldiv@a+1)^0,c
  9414  002828  0E00               	movlw	0
  9415  00282A  6E34               	movwf	(___fldiv@a+2)^0,c
  9416  00282C  0E00               	movlw	0
  9417  00282E  6E35               	movwf	(___fldiv@a+3)^0,c
  9418  002830                     l3772:
  9419  002830  5032               	movf	___fldiv@a^0,w,c
  9420  002832  1033               	iorwf	(___fldiv@a+1)^0,w,c
  9421  002834  1034               	iorwf	(___fldiv@a+2)^0,w,c
  9422  002836  1035               	iorwf	(___fldiv@a+3)^0,w,c
  9423  002838  A4D8               	btfss	status,2,c
  9424  00283A  EF21  F014         	goto	u3661
  9425  00283E  EF23  F014         	goto	u3660
  9426  002842                     u3661:
  9427  002842  EF3B  F014         	goto	l3784
  9428  002846                     u3660:
  9429  002846  0E00               	movlw	0
  9430  002848  6E2E               	movwf	___fldiv@b^0,c
  9431  00284A  0E00               	movlw	0
  9432  00284C  6E2F               	movwf	(___fldiv@b+1)^0,c
  9433  00284E  0E00               	movlw	0
  9434  002850  6E30               	movwf	(___fldiv@b+2)^0,c
  9435  002852  0E00               	movlw	0
  9436  002854  6E31               	movwf	(___fldiv@b+3)^0,c
  9437  002856  0E80               	movlw	128
  9438  002858  1230               	iorwf	(___fldiv@b+2)^0,f,c
  9439  00285A  0E7F               	movlw	127
  9440  00285C  1231               	iorwf	(___fldiv@b+3)^0,f,c
  9441  00285E                     l3778:
  9442  00285E  503E               	movf	___fldiv@sign^0,w,c
  9443  002860  1231               	iorwf	(___fldiv@b+3)^0,f,c
  9444  002862  C02E  F02E         	movff	___fldiv@b,?___fldiv
  9445  002866  C02F  F02F         	movff	___fldiv@b+1,?___fldiv+1
  9446  00286A  C030  F030         	movff	___fldiv@b+2,?___fldiv+2
  9447  00286E  C031  F031         	movff	___fldiv@b+3,?___fldiv+3
  9448  002872  EF7E  F015         	goto	l986
  9449  002876                     l3784:
  9450  002876  5045               	movf	___fldiv@bexp^0,w,c
  9451  002878  A4D8               	btfss	status,2,c
  9452  00287A  EF41  F014         	goto	u3671
  9453  00287E  EF43  F014         	goto	u3670
  9454  002882                     u3671:
  9455  002882  EF4D  F014         	goto	l3792
  9456  002886                     u3670:
  9457  002886  0E00               	movlw	0
  9458  002888  6E2E               	movwf	?___fldiv^0,c
  9459  00288A  0E00               	movlw	0
  9460  00288C  6E2F               	movwf	(?___fldiv+1)^0,c
  9461  00288E  0E00               	movlw	0
  9462  002890  6E30               	movwf	(?___fldiv+2)^0,c
  9463  002892  0E00               	movlw	0
  9464  002894  6E31               	movwf	(?___fldiv+3)^0,c
  9465  002896  EF7E  F015         	goto	l986
  9466  00289A                     l3792:
  9467  00289A  5046               	movf	___fldiv@aexp^0,w,c
  9468  00289C  C045  F036         	movff	___fldiv@bexp,??___fldiv
  9469  0028A0  6A37               	clrf	(??___fldiv+1)^0,c
  9470  0028A2  5E36               	subwf	??___fldiv^0,f,c
  9471  0028A4  0E00               	movlw	0
  9472  0028A6  5A37               	subwfb	(??___fldiv+1)^0,f,c
  9473  0028A8  0E7F               	movlw	127
  9474  0028AA  2436               	addwf	??___fldiv^0,w,c
  9475  0028AC  6E3F               	movwf	___fldiv@new_exp^0,c
  9476  0028AE  0E00               	movlw	0
  9477  0028B0  2037               	addwfc	(??___fldiv+1)^0,w,c
  9478  0028B2  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  9479  0028B4  C02E  F03A         	movff	___fldiv@b,___fldiv@rem
  9480  0028B8  C02F  F03B         	movff	___fldiv@b+1,___fldiv@rem+1
  9481  0028BC  C030  F03C         	movff	___fldiv@b+2,___fldiv@rem+2
  9482  0028C0  C031  F03D         	movff	___fldiv@b+3,___fldiv@rem+3
  9483  0028C4  0E00               	movlw	0
  9484  0028C6  6E2E               	movwf	___fldiv@b^0,c
  9485  0028C8  0E00               	movlw	0
  9486  0028CA  6E2F               	movwf	(___fldiv@b+1)^0,c
  9487  0028CC  0E00               	movlw	0
  9488  0028CE  6E30               	movwf	(___fldiv@b+2)^0,c
  9489  0028D0  0E00               	movlw	0
  9490  0028D2  6E31               	movwf	(___fldiv@b+3)^0,c
  9491  0028D4  0E00               	movlw	0
  9492  0028D6  6E41               	movwf	___fldiv@grs^0,c
  9493  0028D8  0E00               	movlw	0
  9494  0028DA  6E42               	movwf	(___fldiv@grs+1)^0,c
  9495  0028DC  0E00               	movlw	0
  9496  0028DE  6E43               	movwf	(___fldiv@grs+2)^0,c
  9497  0028E0  0E00               	movlw	0
  9498  0028E2  6E44               	movwf	(___fldiv@grs+3)^0,c
  9499  0028E4  0E00               	movlw	0
  9500  0028E6  6E46               	movwf	___fldiv@aexp^0,c
  9501  0028E8  EFAE  F014         	goto	l988
  9502  0028EC                     l3802:
  9503  0028EC  5046               	movf	___fldiv@aexp^0,w,c
  9504  0028EE  B4D8               	btfsc	status,2,c
  9505  0028F0  EF7C  F014         	goto	u3681
  9506  0028F4  EF7E  F014         	goto	u3680
  9507  0028F8                     u3681:
  9508  0028F8  EF95  F014         	goto	l3810
  9509  0028FC                     u3680:
  9510  0028FC  90D8               	bcf	status,0,c
  9511  0028FE  363A               	rlcf	___fldiv@rem^0,f,c
  9512  002900  363B               	rlcf	(___fldiv@rem+1)^0,f,c
  9513  002902  363C               	rlcf	(___fldiv@rem+2)^0,f,c
  9514  002904  363D               	rlcf	(___fldiv@rem+3)^0,f,c
  9515  002906  90D8               	bcf	status,0,c
  9516  002908  362E               	rlcf	___fldiv@b^0,f,c
  9517  00290A  362F               	rlcf	(___fldiv@b+1)^0,f,c
  9518  00290C  3630               	rlcf	(___fldiv@b+2)^0,f,c
  9519  00290E  3631               	rlcf	(___fldiv@b+3)^0,f,c
  9520  002910  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  9521  002912  EF8D  F014         	goto	u3691
  9522  002916  EF8F  F014         	goto	u3690
  9523  00291A                     u3691:
  9524  00291A  EF90  F014         	goto	l991
  9525  00291E                     u3690:
  9526  00291E  802E               	bsf	___fldiv@b^0,0,c
  9527  002920                     l991:
  9528  002920  90D8               	bcf	status,0,c
  9529  002922  3641               	rlcf	___fldiv@grs^0,f,c
  9530  002924  3642               	rlcf	(___fldiv@grs+1)^0,f,c
  9531  002926  3643               	rlcf	(___fldiv@grs+2)^0,f,c
  9532  002928  3644               	rlcf	(___fldiv@grs+3)^0,f,c
  9533  00292A                     l3810:
  9534  00292A  5032               	movf	___fldiv@a^0,w,c
  9535  00292C  5C3A               	subwf	___fldiv@rem^0,w,c
  9536  00292E  5033               	movf	(___fldiv@a+1)^0,w,c
  9537  002930  583B               	subwfb	(___fldiv@rem+1)^0,w,c
  9538  002932  5034               	movf	(___fldiv@a+2)^0,w,c
  9539  002934  583C               	subwfb	(___fldiv@rem+2)^0,w,c
  9540  002936  5035               	movf	(___fldiv@a+3)^0,w,c
  9541  002938  583D               	subwfb	(___fldiv@rem+3)^0,w,c
  9542  00293A  A0D8               	btfss	status,0,c
  9543  00293C  EFA2  F014         	goto	u3701
  9544  002940  EFA4  F014         	goto	u3700
  9545  002944                     u3701:
  9546  002944  EFAD  F014         	goto	l3816
  9547  002948                     u3700:
  9548  002948  8C44               	bsf	(___fldiv@grs+3)^0,6,c
  9549  00294A  5032               	movf	___fldiv@a^0,w,c
  9550  00294C  5E3A               	subwf	___fldiv@rem^0,f,c
  9551  00294E  5033               	movf	(___fldiv@a+1)^0,w,c
  9552  002950  5A3B               	subwfb	(___fldiv@rem+1)^0,f,c
  9553  002952  5034               	movf	(___fldiv@a+2)^0,w,c
  9554  002954  5A3C               	subwfb	(___fldiv@rem+2)^0,f,c
  9555  002956  5035               	movf	(___fldiv@a+3)^0,w,c
  9556  002958  5A3D               	subwfb	(___fldiv@rem+3)^0,f,c
  9557  00295A                     l3816:
  9558  00295A  2A46               	incf	___fldiv@aexp^0,f,c
  9559  00295C                     l988:
  9560  00295C  0E19               	movlw	25
  9561  00295E  6446               	cpfsgt	___fldiv@aexp^0,c
  9562  002960  EFB4  F014         	goto	u3711
  9563  002964  EFB6  F014         	goto	u3710
  9564  002968                     u3711:
  9565  002968  EF76  F014         	goto	l3802
  9566  00296C                     u3710:
  9567  00296C  503A               	movf	___fldiv@rem^0,w,c
  9568  00296E  103B               	iorwf	(___fldiv@rem+1)^0,w,c
  9569  002970  103C               	iorwf	(___fldiv@rem+2)^0,w,c
  9570  002972  103D               	iorwf	(___fldiv@rem+3)^0,w,c
  9571  002974  B4D8               	btfsc	status,2,c
  9572  002976  EFBF  F014         	goto	u3721
  9573  00297A  EFC1  F014         	goto	u3720
  9574  00297E                     u3721:
  9575  00297E  EFD9  F014         	goto	l3828
  9576  002982                     u3720:
  9577  002982  8041               	bsf	___fldiv@grs^0,0,c
  9578  002984  EFD9  F014         	goto	l3828
  9579  002988                     l3822:
  9580  002988  90D8               	bcf	status,0,c
  9581  00298A  362E               	rlcf	___fldiv@b^0,f,c
  9582  00298C  362F               	rlcf	(___fldiv@b+1)^0,f,c
  9583  00298E  3630               	rlcf	(___fldiv@b+2)^0,f,c
  9584  002990  3631               	rlcf	(___fldiv@b+3)^0,f,c
  9585  002992  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  9586  002994  EFCE  F014         	goto	u3731
  9587  002998  EFD0  F014         	goto	u3730
  9588  00299C                     u3731:
  9589  00299C  EFD1  F014         	goto	l997
  9590  0029A0                     u3730:
  9591  0029A0  802E               	bsf	___fldiv@b^0,0,c
  9592  0029A2                     l997:
  9593  0029A2  90D8               	bcf	status,0,c
  9594  0029A4  3641               	rlcf	___fldiv@grs^0,f,c
  9595  0029A6  3642               	rlcf	(___fldiv@grs+1)^0,f,c
  9596  0029A8  3643               	rlcf	(___fldiv@grs+2)^0,f,c
  9597  0029AA  3644               	rlcf	(___fldiv@grs+3)^0,f,c
  9598  0029AC  063F               	decf	___fldiv@new_exp^0,f,c
  9599  0029AE  A0D8               	btfss	status,0,c
  9600  0029B0  0640               	decf	(___fldiv@new_exp+1)^0,f,c
  9601  0029B2                     l3828:
  9602  0029B2  AE30               	btfss	(___fldiv@b+2)^0,7,c
  9603  0029B4  EFDE  F014         	goto	u3741
  9604  0029B8  EFE0  F014         	goto	u3740
  9605  0029BC                     u3741:
  9606  0029BC  EFC4  F014         	goto	l3822
  9607  0029C0                     u3740:
  9608  0029C0  0E00               	movlw	0
  9609  0029C2  6E46               	movwf	___fldiv@aexp^0,c
  9610  0029C4  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  9611  0029C6  EFE7  F014         	goto	u3751
  9612  0029CA  EFE9  F014         	goto	u3750
  9613  0029CE                     u3751:
  9614  0029CE  EF0D  F015         	goto	l999
  9615  0029D2                     u3750:
  9616  0029D2  0EFF               	movlw	255
  9617  0029D4  1441               	andwf	___fldiv@grs^0,w,c
  9618  0029D6  6E36               	movwf	??___fldiv^0,c
  9619  0029D8  0EFF               	movlw	255
  9620  0029DA  1442               	andwf	(___fldiv@grs+1)^0,w,c
  9621  0029DC  6E37               	movwf	(??___fldiv+1)^0,c
  9622  0029DE  0EFF               	movlw	255
  9623  0029E0  1443               	andwf	(___fldiv@grs+2)^0,w,c
  9624  0029E2  6E38               	movwf	(??___fldiv+2)^0,c
  9625  0029E4  0E7F               	movlw	127
  9626  0029E6  1444               	andwf	(___fldiv@grs+3)^0,w,c
  9627  0029E8  6E39               	movwf	(??___fldiv+3)^0,c
  9628  0029EA  5036               	movf	??___fldiv^0,w,c
  9629  0029EC  1037               	iorwf	(??___fldiv+1)^0,w,c
  9630  0029EE  1038               	iorwf	(??___fldiv+2)^0,w,c
  9631  0029F0  1039               	iorwf	(??___fldiv+3)^0,w,c
  9632  0029F2  B4D8               	btfsc	status,2,c
  9633  0029F4  EFFE  F014         	goto	u3761
  9634  0029F8  EF00  F015         	goto	u3760
  9635  0029FC                     u3761:
  9636  0029FC  EF04  F015         	goto	l1000
  9637  002A00                     u3760:
  9638  002A00                     l3836:
  9639  002A00  0E01               	movlw	1
  9640  002A02  6E46               	movwf	___fldiv@aexp^0,c
  9641  002A04  EF0D  F015         	goto	l999
  9642  002A08                     l1000:
  9643  002A08  A02E               	btfss	___fldiv@b^0,0,c
  9644  002A0A  EF09  F015         	goto	u3771
  9645  002A0E  EF0B  F015         	goto	u3770
  9646  002A12                     u3771:
  9647  002A12  EF0D  F015         	goto	l999
  9648  002A16                     u3770:
  9649  002A16  EF00  F015         	goto	l3836
  9650  002A1A                     l999:
  9651  002A1A  5046               	movf	___fldiv@aexp^0,w,c
  9652  002A1C  B4D8               	btfsc	status,2,c
  9653  002A1E  EF13  F015         	goto	u3781
  9654  002A22  EF15  F015         	goto	u3780
  9655  002A26                     u3781:
  9656  002A26  EF39  F015         	goto	l3848
  9657  002A2A                     u3780:
  9658  002A2A  0E01               	movlw	1
  9659  002A2C  262E               	addwf	___fldiv@b^0,f,c
  9660  002A2E  0E00               	movlw	0
  9661  002A30  222F               	addwfc	(___fldiv@b+1)^0,f,c
  9662  002A32  2230               	addwfc	(___fldiv@b+2)^0,f,c
  9663  002A34  2231               	addwfc	(___fldiv@b+3)^0,f,c
  9664  002A36  A031               	btfss	(___fldiv@b+3)^0,0,c
  9665  002A38  EF20  F015         	goto	u3791
  9666  002A3C  EF22  F015         	goto	u3790
  9667  002A40                     u3791:
  9668  002A40  EF39  F015         	goto	l3848
  9669  002A44                     u3790:
  9670  002A44  C02E  F036         	movff	___fldiv@b,??___fldiv
  9671  002A48  C02F  F037         	movff	___fldiv@b+1,??___fldiv+1
  9672  002A4C  C030  F038         	movff	___fldiv@b+2,??___fldiv+2
  9673  002A50  C031  F039         	movff	___fldiv@b+3,??___fldiv+3
  9674  002A54  3439               	rlcf	(??___fldiv+3)^0,w,c
  9675  002A56  3239               	rrcf	(??___fldiv+3)^0,f,c
  9676  002A58  3238               	rrcf	(??___fldiv+2)^0,f,c
  9677  002A5A  3237               	rrcf	(??___fldiv+1)^0,f,c
  9678  002A5C  3236               	rrcf	??___fldiv^0,f,c
  9679  002A5E  C036  F02E         	movff	??___fldiv,___fldiv@b
  9680  002A62  C037  F02F         	movff	??___fldiv+1,___fldiv@b+1
  9681  002A66  C038  F030         	movff	??___fldiv+2,___fldiv@b+2
  9682  002A6A  C039  F031         	movff	??___fldiv+3,___fldiv@b+3
  9683  002A6E  4A3F               	infsnz	___fldiv@new_exp^0,f,c
  9684  002A70  2A40               	incf	(___fldiv@new_exp+1)^0,f,c
  9685  002A72                     l3848:
  9686  002A72  BE40               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9687  002A74  EF44  F015         	goto	u3801
  9688  002A78  5040               	movf	(___fldiv@new_exp+1)^0,w,c
  9689  002A7A  E108               	bnz	u3800
  9690  002A7C  283F               	incf	___fldiv@new_exp^0,w,c
  9691  002A7E  A0D8               	btfss	status,0,c
  9692  002A80  EF44  F015         	goto	u3801
  9693  002A84  EF46  F015         	goto	u3800
  9694  002A88                     u3801:
  9695  002A88  EF51  F015         	goto	l3852
  9696  002A8C                     u3800:
  9697  002A8C  0E00               	movlw	0
  9698  002A8E  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  9699  002A90  683F               	setf	___fldiv@new_exp^0,c
  9700  002A92  0E00               	movlw	0
  9701  002A94  6E2E               	movwf	___fldiv@b^0,c
  9702  002A96  0E00               	movlw	0
  9703  002A98  6E2F               	movwf	(___fldiv@b+1)^0,c
  9704  002A9A  0E00               	movlw	0
  9705  002A9C  6E30               	movwf	(___fldiv@b+2)^0,c
  9706  002A9E  0E00               	movlw	0
  9707  002AA0  6E31               	movwf	(___fldiv@b+3)^0,c
  9708  002AA2                     l3852:
  9709  002AA2  BE40               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9710  002AA4  EF5E  F015         	goto	u3810
  9711  002AA8  5040               	movf	(___fldiv@new_exp+1)^0,w,c
  9712  002AAA  E106               	bnz	u3811
  9713  002AAC  043F               	decf	___fldiv@new_exp^0,w,c
  9714  002AAE  B0D8               	btfsc	status,0,c
  9715  002AB0  EF5C  F015         	goto	u3811
  9716  002AB4  EF5E  F015         	goto	u3810
  9717  002AB8                     u3811:
  9718  002AB8  EF6C  F015         	goto	l3856
  9719  002ABC                     u3810:
  9720  002ABC  0E00               	movlw	0
  9721  002ABE  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  9722  002AC0  0E00               	movlw	0
  9723  002AC2  6E3F               	movwf	___fldiv@new_exp^0,c
  9724  002AC4  0E00               	movlw	0
  9725  002AC6  6E2E               	movwf	___fldiv@b^0,c
  9726  002AC8  0E00               	movlw	0
  9727  002ACA  6E2F               	movwf	(___fldiv@b+1)^0,c
  9728  002ACC  0E00               	movlw	0
  9729  002ACE  6E30               	movwf	(___fldiv@b+2)^0,c
  9730  002AD0  0E00               	movlw	0
  9731  002AD2  6E31               	movwf	(___fldiv@b+3)^0,c
  9732  002AD4  0E00               	movlw	0
  9733  002AD6  6E3E               	movwf	___fldiv@sign^0,c
  9734  002AD8                     l3856:
  9735  002AD8  C03F  F045         	movff	___fldiv@new_exp,___fldiv@bexp
  9736  002ADC  A045               	btfss	___fldiv@bexp^0,0,c
  9737  002ADE  EF73  F015         	goto	u3821
  9738  002AE2  EF75  F015         	goto	u3820
  9739  002AE6                     u3821:
  9740  002AE6  EF78  F015         	goto	l3862
  9741  002AEA                     u3820:
  9742  002AEA  8E30               	bsf	(___fldiv@b+2)^0,7,c
  9743  002AEC  EF79  F015         	goto	l3864
  9744  002AF0                     l3862:
  9745  002AF0  9E30               	bcf	(___fldiv@b+2)^0,7,c
  9746  002AF2                     l3864:
  9747  002AF2  90D8               	bcf	status,0,c
  9748  002AF4  3045               	rrcf	___fldiv@bexp^0,w,c
  9749  002AF6  6E31               	movwf	(___fldiv@b+3)^0,c
  9750  002AF8  EF2F  F014         	goto	l3778
  9751  002AFC                     l986:
  9752  002AFC  0012               	return		;funcret
  9753  002AFE                     __end_of___fldiv:
  9754                           	callstack 0
  9755                           
  9756 ;; *************** function ___awmod *****************
  9757 ;; Defined at:
  9758 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  dividend        2    0[COMRAM] int 
  9761 ;;  divisor         2    2[COMRAM] int 
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;  sign            1    5[COMRAM] unsigned char 
  9764 ;;  counter         1    4[COMRAM] unsigned char 
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  2    0[COMRAM] int 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2, status,0
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9774 ;;      Params:         4       0       0       0       0       0       0       0       0
  9775 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9777 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9778 ;;Total ram usage:        6 bytes
  9779 ;; Hardware stack levels used: 1
  9780 ;; Hardware stack levels required when called: 1
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_efgtoa
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text32
  9789  003DBA                     __ptext32:
  9790                           	callstack 0
  9791  003DBA                     ___awmod:
  9792                           	callstack 25
  9793  003DBA  0E00               	movlw	0
  9794  003DBC  6E06               	movwf	___awmod@sign^0,c
  9795  003DBE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9796  003DC0  EFE6  F01E         	goto	u4080
  9797  003DC4  EFE4  F01E         	goto	u4081
  9798  003DC8                     u4081:
  9799  003DC8  EFEC  F01E         	goto	l4060
  9800  003DCC                     u4080:
  9801  003DCC  6C01               	negf	___awmod@dividend^0,c
  9802  003DCE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9803  003DD0  B0D8               	btfsc	status,0,c
  9804  003DD2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9805  003DD4  0E01               	movlw	1
  9806  003DD6  6E06               	movwf	___awmod@sign^0,c
  9807  003DD8                     l4060:
  9808  003DD8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9809  003DDA  EFF3  F01E         	goto	u4090
  9810  003DDE  EFF1  F01E         	goto	u4091
  9811  003DE2                     u4091:
  9812  003DE2  EFF7  F01E         	goto	l4064
  9813  003DE6                     u4090:
  9814  003DE6  6C03               	negf	___awmod@divisor^0,c
  9815  003DE8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9816  003DEA  B0D8               	btfsc	status,0,c
  9817  003DEC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9818  003DEE                     l4064:
  9819  003DEE  5003               	movf	___awmod@divisor^0,w,c
  9820  003DF0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9821  003DF2  B4D8               	btfsc	status,2,c
  9822  003DF4  EFFE  F01E         	goto	u4101
  9823  003DF8  EF00  F01F         	goto	u4100
  9824  003DFC                     u4101:
  9825  003DFC  EF24  F01F         	goto	l4080
  9826  003E00                     u4100:
  9827  003E00  0E01               	movlw	1
  9828  003E02  6E05               	movwf	___awmod@counter^0,c
  9829  003E04  EF08  F01F         	goto	l4070
  9830  003E08                     l4068:
  9831  003E08  90D8               	bcf	status,0,c
  9832  003E0A  3603               	rlcf	___awmod@divisor^0,f,c
  9833  003E0C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9834  003E0E  2A05               	incf	___awmod@counter^0,f,c
  9835  003E10                     l4070:
  9836  003E10  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9837  003E12  EF0D  F01F         	goto	u4111
  9838  003E16  EF0F  F01F         	goto	u4110
  9839  003E1A                     u4111:
  9840  003E1A  EF04  F01F         	goto	l4068
  9841  003E1E                     u4110:
  9842  003E1E                     l4072:
  9843  003E1E  5003               	movf	___awmod@divisor^0,w,c
  9844  003E20  5C01               	subwf	___awmod@dividend^0,w,c
  9845  003E22  5004               	movf	(___awmod@divisor+1)^0,w,c
  9846  003E24  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9847  003E26  A0D8               	btfss	status,0,c
  9848  003E28  EF18  F01F         	goto	u4121
  9849  003E2C  EF1A  F01F         	goto	u4120
  9850  003E30                     u4121:
  9851  003E30  EF1E  F01F         	goto	l4076
  9852  003E34                     u4120:
  9853  003E34  5003               	movf	___awmod@divisor^0,w,c
  9854  003E36  5E01               	subwf	___awmod@dividend^0,f,c
  9855  003E38  5004               	movf	(___awmod@divisor+1)^0,w,c
  9856  003E3A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9857  003E3C                     l4076:
  9858  003E3C  90D8               	bcf	status,0,c
  9859  003E3E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9860  003E40  3203               	rrcf	___awmod@divisor^0,f,c
  9861  003E42  2E05               	decfsz	___awmod@counter^0,f,c
  9862  003E44  EF0F  F01F         	goto	l4072
  9863  003E48                     l4080:
  9864  003E48  5006               	movf	___awmod@sign^0,w,c
  9865  003E4A  B4D8               	btfsc	status,2,c
  9866  003E4C  EF2A  F01F         	goto	u4131
  9867  003E50  EF2C  F01F         	goto	u4130
  9868  003E54                     u4131:
  9869  003E54  EF30  F01F         	goto	l4084
  9870  003E58                     u4130:
  9871  003E58  6C01               	negf	___awmod@dividend^0,c
  9872  003E5A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9873  003E5C  B0D8               	btfsc	status,0,c
  9874  003E5E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9875  003E60                     l4084:
  9876  003E60  C001  F001         	movff	___awmod@dividend,?___awmod
  9877  003E64  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9878  003E68  0012               	return		;funcret
  9879  003E6A                     __end_of___awmod:
  9880                           	callstack 0
  9881                           
  9882 ;; *************** function ___awdiv *****************
  9883 ;; Defined at:
  9884 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;  dividend        2    0[COMRAM] int 
  9887 ;;  divisor         2    2[COMRAM] int 
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;  quotient        2    6[COMRAM] int 
  9890 ;;  sign            1    5[COMRAM] unsigned char 
  9891 ;;  counter         1    4[COMRAM] unsigned char 
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  2    0[COMRAM] int 
  9894 ;; Registers used:
  9895 ;;		wreg, status,2, status,0
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/0
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9901 ;;      Params:         4       0       0       0       0       0       0       0       0
  9902 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9903 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9904 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9905 ;;Total ram usage:        8 bytes
  9906 ;; Hardware stack levels used: 1
  9907 ;; Hardware stack levels required when called: 1
  9908 ;; This function calls:
  9909 ;;		Nothing
  9910 ;; This function is called by:
  9911 ;;		_efgtoa
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text33
  9916  003CF6                     __ptext33:
  9917                           	callstack 0
  9918  003CF6                     ___awdiv:
  9919                           	callstack 25
  9920  003CF6  0E00               	movlw	0
  9921  003CF8  6E06               	movwf	___awdiv@sign^0,c
  9922  003CFA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9923  003CFC  EF84  F01E         	goto	u4020
  9924  003D00  EF82  F01E         	goto	u4021
  9925  003D04                     u4021:
  9926  003D04  EF8A  F01E         	goto	l4016
  9927  003D08                     u4020:
  9928  003D08  6C03               	negf	___awdiv@divisor^0,c
  9929  003D0A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9930  003D0C  B0D8               	btfsc	status,0,c
  9931  003D0E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9932  003D10  0E01               	movlw	1
  9933  003D12  6E06               	movwf	___awdiv@sign^0,c
  9934  003D14                     l4016:
  9935  003D14  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9936  003D16  EF91  F01E         	goto	u4030
  9937  003D1A  EF8F  F01E         	goto	u4031
  9938  003D1E                     u4031:
  9939  003D1E  EF97  F01E         	goto	l4022
  9940  003D22                     u4030:
  9941  003D22  6C01               	negf	___awdiv@dividend^0,c
  9942  003D24  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9943  003D26  B0D8               	btfsc	status,0,c
  9944  003D28  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9945  003D2A  0E01               	movlw	1
  9946  003D2C  1A06               	xorwf	___awdiv@sign^0,f,c
  9947  003D2E                     l4022:
  9948  003D2E  0E00               	movlw	0
  9949  003D30  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9950  003D32  0E00               	movlw	0
  9951  003D34  6E07               	movwf	___awdiv@quotient^0,c
  9952  003D36  5003               	movf	___awdiv@divisor^0,w,c
  9953  003D38  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9954  003D3A  B4D8               	btfsc	status,2,c
  9955  003D3C  EFA2  F01E         	goto	u4041
  9956  003D40  EFA4  F01E         	goto	u4040
  9957  003D44                     u4041:
  9958  003D44  EFCC  F01E         	goto	l4044
  9959  003D48                     u4040:
  9960  003D48  0E01               	movlw	1
  9961  003D4A  6E05               	movwf	___awdiv@counter^0,c
  9962  003D4C  EFAC  F01E         	goto	l4030
  9963  003D50                     l4028:
  9964  003D50  90D8               	bcf	status,0,c
  9965  003D52  3603               	rlcf	___awdiv@divisor^0,f,c
  9966  003D54  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9967  003D56  2A05               	incf	___awdiv@counter^0,f,c
  9968  003D58                     l4030:
  9969  003D58  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9970  003D5A  EFB1  F01E         	goto	u4051
  9971  003D5E  EFB3  F01E         	goto	u4050
  9972  003D62                     u4051:
  9973  003D62  EFA8  F01E         	goto	l4028
  9974  003D66                     u4050:
  9975  003D66                     l4032:
  9976  003D66  90D8               	bcf	status,0,c
  9977  003D68  3607               	rlcf	___awdiv@quotient^0,f,c
  9978  003D6A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9979  003D6C  5003               	movf	___awdiv@divisor^0,w,c
  9980  003D6E  5C01               	subwf	___awdiv@dividend^0,w,c
  9981  003D70  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9982  003D72  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9983  003D74  A0D8               	btfss	status,0,c
  9984  003D76  EFBF  F01E         	goto	u4061
  9985  003D7A  EFC1  F01E         	goto	u4060
  9986  003D7E                     u4061:
  9987  003D7E  EFC6  F01E         	goto	l4040
  9988  003D82                     u4060:
  9989  003D82  5003               	movf	___awdiv@divisor^0,w,c
  9990  003D84  5E01               	subwf	___awdiv@dividend^0,f,c
  9991  003D86  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9992  003D88  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9993  003D8A  8007               	bsf	___awdiv@quotient^0,0,c
  9994  003D8C                     l4040:
  9995  003D8C  90D8               	bcf	status,0,c
  9996  003D8E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9997  003D90  3203               	rrcf	___awdiv@divisor^0,f,c
  9998  003D92  2E05               	decfsz	___awdiv@counter^0,f,c
  9999  003D94  EFB3  F01E         	goto	l4032
 10000  003D98                     l4044:
 10001  003D98  5006               	movf	___awdiv@sign^0,w,c
 10002  003D9A  B4D8               	btfsc	status,2,c
 10003  003D9C  EFD2  F01E         	goto	u4071
 10004  003DA0  EFD4  F01E         	goto	u4070
 10005  003DA4                     u4071:
 10006  003DA4  EFD8  F01E         	goto	l4048
 10007  003DA8                     u4070:
 10008  003DA8  6C07               	negf	___awdiv@quotient^0,c
 10009  003DAA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10010  003DAC  B0D8               	btfsc	status,0,c
 10011  003DAE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10012  003DB0                     l4048:
 10013  003DB0  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10014  003DB4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10015  003DB8  0012               	return		;funcret
 10016  003DBA                     __end_of___awdiv:
 10017                           	callstack 0
 10018                           
 10019 ;; *************** function _atoi *****************
 10020 ;; Defined at:
 10021 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10024 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
 10025 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
 10026 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;  n               2   20[COMRAM] int 
 10029 ;;  neg             2   13[COMRAM] int 
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  2    7[COMRAM] int 
 10032 ;; Registers used:
 10033 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10039 ;;      Params:         2       0       0       0       0       0       0       0       0
 10040 ;;      Locals:         9       0       0       0       0       0       0       0       0
 10041 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10042 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10043 ;;Total ram usage:       15 bytes
 10044 ;; Hardware stack levels used: 1
 10045 ;; Hardware stack levels required when called: 2
 10046 ;; This function calls:
 10047 ;;		___wmul
 10048 ;;		_isdigit
 10049 ;;		_isspace
 10050 ;; This function is called by:
 10051 ;;		_vfpfcnvrt
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           	psect	text34
 10056  0034F8                     __ptext34:
 10057                           	callstack 0
 10058  0034F8                     _atoi:
 10059                           	callstack 25
 10060  0034F8  0E00               	movlw	0
 10061  0034FA  6E16               	movwf	(atoi@n+1)^0,c
 10062  0034FC  0E00               	movlw	0
 10063  0034FE  6E15               	movwf	atoi@n^0,c
 10064  003500  0E00               	movlw	0
 10065  003502  6E0F               	movwf	(atoi@neg+1)^0,c
 10066  003504  0E00               	movlw	0
 10067  003506  6E0E               	movwf	atoi@neg^0,c
 10068  003508  EF88  F01A         	goto	l4690
 10069  00350C                     l4688:
 10070  00350C  4A08               	infsnz	atoi@s^0,f,c
 10071  00350E  2A09               	incf	(atoi@s+1)^0,f,c
 10072  003510                     l4690:
 10073  003510  0E01               	movlw	1
 10074  003512  6E14               	movwf	_atoi$1724^0,c
 10075  003514  C008  FFF6         	movff	atoi@s,tblptrl
 10076  003518  C009  FFF7         	movff	atoi@s+1,tblptrh
 10077  00351C                     	if	0	;tblptru may be non-zero
 10078  00351C                     	endif
 10079  00351C                     	if	0	;tblptru may be non-zero
 10080  00351C                     	endif
 10081  00351C  0008               	tblrd		*
 10082  00351E  50F5               	movf	tablat,w,c
 10083  003520  0A20               	xorlw	32
 10084  003522  B4D8               	btfsc	status,2,c
 10085  003524  EF96  F01A         	goto	u5391
 10086  003528  EF98  F01A         	goto	u5390
 10087  00352C                     u5391:
 10088  00352C  EFB5  F01A         	goto	l4698
 10089  003530                     u5390:
 10090  003530  0EF7               	movlw	247
 10091  003532  6E0A               	movwf	??_atoi^0,c
 10092  003534  0EFF               	movlw	255
 10093  003536  6E0B               	movwf	(??_atoi+1)^0,c
 10094  003538  C008  FFF6         	movff	atoi@s,tblptrl
 10095  00353C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10096  003540                     	if	0	;tblptru may be non-zero
 10097  003540                     	endif
 10098  003540                     	if	0	;tblptru may be non-zero
 10099  003540                     	endif
 10100  003540  0008               	tblrd		*
 10101  003542  50F5               	movf	tablat,w,c
 10102  003544  6E0C               	movwf	(??_atoi+2)^0,c
 10103  003546  6A0D               	clrf	(??_atoi+3)^0,c
 10104  003548  500A               	movf	??_atoi^0,w,c
 10105  00354A  260C               	addwf	(??_atoi+2)^0,f,c
 10106  00354C  500B               	movf	(??_atoi+1)^0,w,c
 10107  00354E  220D               	addwfc	(??_atoi+3)^0,f,c
 10108  003550  500D               	movf	(??_atoi+3)^0,w,c
 10109  003552  E109               	bnz	u5400
 10110  003554  0E05               	movlw	5
 10111  003556  5C0C               	subwf	(??_atoi+2)^0,w,c
 10112  003558  A0D8               	btfss	status,0,c
 10113  00355A  EFB1  F01A         	goto	u5401
 10114  00355E  EFB3  F01A         	goto	u5400
 10115  003562                     u5401:
 10116  003562  EFB5  F01A         	goto	l4698
 10117  003566                     u5400:
 10118  003566  0E00               	movlw	0
 10119  003568  6E14               	movwf	_atoi$1724^0,c
 10120  00356A                     l4698:
 10121  00356A  C014  F010         	movff	_atoi$1724,_atoi$1723
 10122  00356E  6A11               	clrf	(_atoi$1723+1)^0,c
 10123  003570  5010               	movf	_atoi$1723^0,w,c
 10124  003572  1011               	iorwf	(_atoi$1723+1)^0,w,c
 10125  003574  A4D8               	btfss	status,2,c
 10126  003576  EFBF  F01A         	goto	u5411
 10127  00357A  EFC1  F01A         	goto	u5410
 10128  00357E                     u5411:
 10129  00357E  EF86  F01A         	goto	l4688
 10130  003582                     u5410:
 10131  003582  EFCB  F01A         	goto	l4708
 10132  003586                     l4704:
 10133  003586  0E00               	movlw	0
 10134  003588  6E0F               	movwf	(atoi@neg+1)^0,c
 10135  00358A  0E01               	movlw	1
 10136  00358C  6E0E               	movwf	atoi@neg^0,c
 10137  00358E                     l4706:
 10138  00358E  4A08               	infsnz	atoi@s^0,f,c
 10139  003590  2A09               	incf	(atoi@s+1)^0,f,c
 10140  003592  EF00  F01B         	goto	l4714
 10141  003596                     l4708:
 10142  003596  C008  FFF6         	movff	atoi@s,tblptrl
 10143  00359A  C009  FFF7         	movff	atoi@s+1,tblptrh
 10144  00359E                     	if	0	;tblptru may be non-zero
 10145  00359E                     	endif
 10146  00359E                     	if	0	;tblptru may be non-zero
 10147  00359E                     	endif
 10148  00359E  0008               	tblrd		*
 10149  0035A0  50F5               	movf	tablat,w,c
 10150  0035A2  6E0A               	movwf	??_atoi^0,c
 10151  0035A4  6A0B               	clrf	(??_atoi+1)^0,c
 10152                           
 10153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10154                           ; Switch size 1, requested type "simple"
 10155                           ; Number of cases is 1, Range of values is 0 to 0
 10156                           ; switch strategies available:
 10157                           ; Name         Instructions Cycles
 10158                           ; simple_byte            4     3 (average)
 10159                           ;	Chosen strategy is simple_byte
 10160  0035A6  500B               	movf	(??_atoi+1)^0,w,c
 10161  0035A8  0A00               	xorlw	0	; case 0
 10162  0035AA  B4D8               	btfsc	status,2,c
 10163  0035AC  EFDA  F01A         	goto	l5450
 10164  0035B0  EF00  F01B         	goto	l4714
 10165  0035B4                     l5450:
 10166                           
 10167                           ; Switch size 1, requested type "simple"
 10168                           ; Number of cases is 2, Range of values is 43 to 45
 10169                           ; switch strategies available:
 10170                           ; Name         Instructions Cycles
 10171                           ; simple_byte            7     4 (average)
 10172                           ;	Chosen strategy is simple_byte
 10173  0035B4  500A               	movf	??_atoi^0,w,c
 10174  0035B6  0A2B               	xorlw	43	; case 43
 10175  0035B8  B4D8               	btfsc	status,2,c
 10176  0035BA  EFC7  F01A         	goto	l4706
 10177  0035BE  0A06               	xorlw	6	; case 45
 10178  0035C0  B4D8               	btfsc	status,2,c
 10179  0035C2  EFC3  F01A         	goto	l4704
 10180  0035C6  EF00  F01B         	goto	l4714
 10181  0035CA                     l4710:
 10182  0035CA  C015  F001         	movff	atoi@n,___wmul@multiplier
 10183  0035CE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10184  0035D2  0E00               	movlw	0
 10185  0035D4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10186  0035D6  0E0A               	movlw	10
 10187  0035D8  6E03               	movwf	___wmul@multiplicand^0,c
 10188  0035DA  EC75  F023         	call	___wmul	;wreg free
 10189  0035DE  C008  FFF6         	movff	atoi@s,tblptrl
 10190  0035E2  C009  FFF7         	movff	atoi@s+1,tblptrh
 10191  0035E6                     	if	0	;tblptru may be non-zero
 10192  0035E6                     	endif
 10193  0035E6                     	if	0	;tblptru may be non-zero
 10194  0035E6                     	endif
 10195  0035E6  0008               	tblrd		*
 10196  0035E8  50F5               	movf	tablat,w,c
 10197  0035EA  5E01               	subwf	?___wmul^0,f,c
 10198  0035EC  0E00               	movlw	0
 10199  0035EE  5A02               	subwfb	(?___wmul+1)^0,f,c
 10200  0035F0  0E30               	movlw	48
 10201  0035F2  2401               	addwf	?___wmul^0,w,c
 10202  0035F4  6E15               	movwf	atoi@n^0,c
 10203  0035F6  0E00               	movlw	0
 10204  0035F8  2002               	addwfc	(?___wmul+1)^0,w,c
 10205  0035FA  6E16               	movwf	(atoi@n+1)^0,c
 10206  0035FC  EFC7  F01A         	goto	l4706
 10207  003600                     l4714:
 10208  003600  0ED0               	movlw	208
 10209  003602  6E0A               	movwf	??_atoi^0,c
 10210  003604  0EFF               	movlw	255
 10211  003606  6E0B               	movwf	(??_atoi+1)^0,c
 10212  003608  C008  FFF6         	movff	atoi@s,tblptrl
 10213  00360C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10214  003610                     	if	0	;tblptru may be non-zero
 10215  003610                     	endif
 10216  003610                     	if	0	;tblptru may be non-zero
 10217  003610                     	endif
 10218  003610  0008               	tblrd		*
 10219  003612  50F5               	movf	tablat,w,c
 10220  003614  6E0C               	movwf	(??_atoi+2)^0,c
 10221  003616  6A0D               	clrf	(??_atoi+3)^0,c
 10222  003618  500A               	movf	??_atoi^0,w,c
 10223  00361A  260C               	addwf	(??_atoi+2)^0,f,c
 10224  00361C  500B               	movf	(??_atoi+1)^0,w,c
 10225  00361E  220D               	addwfc	(??_atoi+3)^0,f,c
 10226  003620  500D               	movf	(??_atoi+3)^0,w,c
 10227  003622  E10A               	bnz	u5420
 10228  003624  0E0A               	movlw	10
 10229  003626  5C0C               	subwf	(??_atoi+2)^0,w,c
 10230  003628  A0D8               	btfss	status,0,c
 10231  00362A  EF19  F01B         	goto	u5421
 10232  00362E  EF1C  F01B         	goto	u5420
 10233  003632                     u5421:
 10234  003632  0E01               	movlw	1
 10235  003634  EF1D  F01B         	goto	u5430
 10236  003638                     u5420:
 10237  003638  0E00               	movlw	0
 10238  00363A                     u5430:
 10239  00363A  6E12               	movwf	_atoi$1725^0,c
 10240  00363C  6A13               	clrf	(_atoi$1725+1)^0,c
 10241  00363E  5012               	movf	_atoi$1725^0,w,c
 10242  003640  1013               	iorwf	(_atoi$1725+1)^0,w,c
 10243  003642  A4D8               	btfss	status,2,c
 10244  003644  EF26  F01B         	goto	u5441
 10245  003648  EF28  F01B         	goto	u5440
 10246  00364C                     u5441:
 10247  00364C  EFE5  F01A         	goto	l4710
 10248  003650                     u5440:
 10249  003650  500E               	movf	atoi@neg^0,w,c
 10250  003652  100F               	iorwf	(atoi@neg+1)^0,w,c
 10251  003654  A4D8               	btfss	status,2,c
 10252  003656  EF2F  F01B         	goto	u5451
 10253  00365A  EF31  F01B         	goto	u5450
 10254  00365E                     u5451:
 10255  00365E  EF3F  F01B         	goto	l1340
 10256  003662                     u5450:
 10257  003662  C015  F00A         	movff	atoi@n,??_atoi
 10258  003666  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10259  00366A  1E0A               	comf	??_atoi^0,f,c
 10260  00366C  1E0B               	comf	(??_atoi+1)^0,f,c
 10261  00366E  4A0A               	infsnz	??_atoi^0,f,c
 10262  003670  2A0B               	incf	(??_atoi+1)^0,f,c
 10263  003672  C00A  F008         	movff	??_atoi,?_atoi
 10264  003676  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10265  00367A  EF43  F01B         	goto	l1343
 10266  00367E                     l1340:
 10267  00367E  C015  F008         	movff	atoi@n,?_atoi
 10268  003682  C016  F009         	movff	atoi@n+1,?_atoi+1
 10269  003686                     l1343:
 10270  003686  0012               	return		;funcret
 10271  003688                     __end_of_atoi:
 10272                           	callstack 0
 10273                           
 10274 ;; *************** function _isspace *****************
 10275 ;; Defined at:
 10276 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10277 ;; Parameters:    Size  Location     Type
 10278 ;;  c               2    0[COMRAM] int 
 10279 ;; Auto vars:     Size  Location     Type
 10280 ;;		None
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  2    0[COMRAM] int 
 10283 ;; Registers used:
 10284 ;;		wreg, status,2, status,0
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10290 ;;      Params:         2       0       0       0       0       0       0       0       0
 10291 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10292 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10293 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10294 ;;Total ram usage:        7 bytes
 10295 ;; Hardware stack levels used: 1
 10296 ;; Hardware stack levels required when called: 1
 10297 ;; This function calls:
 10298 ;;		Nothing
 10299 ;; This function is called by:
 10300 ;;		_atoi
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           	psect	text35
 10305  004200                     __ptext35:
 10306                           	callstack 0
 10307  004200                     _isspace:
 10308                           	callstack 25
 10309  004200  0E01               	movlw	1
 10310  004202  6E07               	movwf	_isspace$1763^0,c
 10311  004204  0E20               	movlw	32
 10312  004206  1801               	xorwf	isspace@c^0,w,c
 10313  004208  1002               	iorwf	(isspace@c+1)^0,w,c
 10314  00420A  B4D8               	btfsc	status,2,c
 10315  00420C  EF0A  F021         	goto	u4631
 10316  004210  EF0C  F021         	goto	u4630
 10317  004214                     u4631:
 10318  004214  EF25  F021         	goto	l4290
 10319  004218                     u4630:
 10320  004218  0EF7               	movlw	247
 10321  00421A  6E03               	movwf	??_isspace^0,c
 10322  00421C  0EFF               	movlw	255
 10323  00421E  6E04               	movwf	(??_isspace+1)^0,c
 10324  004220  C001  F005         	movff	isspace@c,??_isspace+2
 10325  004224  C002  F006         	movff	isspace@c+1,??_isspace+3
 10326  004228  5003               	movf	??_isspace^0,w,c
 10327  00422A  2605               	addwf	(??_isspace+2)^0,f,c
 10328  00422C  5004               	movf	(??_isspace+1)^0,w,c
 10329  00422E  2206               	addwfc	(??_isspace+3)^0,f,c
 10330  004230  5006               	movf	(??_isspace+3)^0,w,c
 10331  004232  E109               	bnz	u4640
 10332  004234  0E05               	movlw	5
 10333  004236  5C05               	subwf	(??_isspace+2)^0,w,c
 10334  004238  A0D8               	btfss	status,0,c
 10335  00423A  EF21  F021         	goto	u4641
 10336  00423E  EF23  F021         	goto	u4640
 10337  004242                     u4641:
 10338  004242  EF25  F021         	goto	l4290
 10339  004246                     u4640:
 10340  004246  0E00               	movlw	0
 10341  004248  6E07               	movwf	_isspace$1763^0,c
 10342  00424A                     l4290:
 10343  00424A  C007  F001         	movff	_isspace$1763,?_isspace
 10344  00424E  6A02               	clrf	(?_isspace+1)^0,c
 10345  004250  0012               	return		;funcret
 10346  004252                     __end_of_isspace:
 10347                           	callstack 0
 10348                           
 10349 ;; *************** function _isdigit *****************
 10350 ;; Defined at:
 10351 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10352 ;; Parameters:    Size  Location     Type
 10353 ;;  c               2    0[COMRAM] int 
 10354 ;; Auto vars:     Size  Location     Type
 10355 ;;		None
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  2    0[COMRAM] int 
 10358 ;; Registers used:
 10359 ;;		wreg, status,2, status,0
 10360 ;; Tracked objects:
 10361 ;;		On entry : 0/0
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10365 ;;      Params:         2       0       0       0       0       0       0       0       0
 10366 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10367 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10368 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10369 ;;Total ram usage:        6 bytes
 10370 ;; Hardware stack levels used: 1
 10371 ;; Hardware stack levels required when called: 1
 10372 ;; This function calls:
 10373 ;;		Nothing
 10374 ;; This function is called by:
 10375 ;;		_vfpfcnvrt
 10376 ;;		_atoi
 10377 ;; This function uses a non-reentrant model
 10378 ;;
 10379                           
 10380                           	psect	text36
 10381  0045F0                     __ptext36:
 10382                           	callstack 0
 10383  0045F0                     _isdigit:
 10384                           	callstack 26
 10385  0045F0  0ED0               	movlw	208
 10386  0045F2  6E03               	movwf	??_isdigit^0,c
 10387  0045F4  0EFF               	movlw	255
 10388  0045F6  6E04               	movwf	(??_isdigit+1)^0,c
 10389  0045F8  C001  F005         	movff	isdigit@c,??_isdigit+2
 10390  0045FC  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10391  004600  5003               	movf	??_isdigit^0,w,c
 10392  004602  2605               	addwf	(??_isdigit+2)^0,f,c
 10393  004604  5004               	movf	(??_isdigit+1)^0,w,c
 10394  004606  2206               	addwfc	(??_isdigit+3)^0,f,c
 10395  004608  5006               	movf	(??_isdigit+3)^0,w,c
 10396  00460A  E10A               	bnz	u4610
 10397  00460C  0E0A               	movlw	10
 10398  00460E  5C05               	subwf	(??_isdigit+2)^0,w,c
 10399  004610  A0D8               	btfss	status,0,c
 10400  004612  EF0D  F023         	goto	u4611
 10401  004616  EF10  F023         	goto	u4610
 10402  00461A                     u4611:
 10403  00461A  0E01               	movlw	1
 10404  00461C  EF11  F023         	goto	u4620
 10405  004620                     u4610:
 10406  004620  0E00               	movlw	0
 10407  004622                     u4620:
 10408  004622  6E01               	movwf	?_isdigit^0,c
 10409  004624  6A02               	clrf	(?_isdigit+1)^0,c
 10410  004626  0012               	return		;funcret
 10411  004628                     __end_of_isdigit:
 10412                           	callstack 0
 10413                           
 10414 ;; *************** function ___wmul *****************
 10415 ;; Defined at:
 10416 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10417 ;; Parameters:    Size  Location     Type
 10418 ;;  multiplier      2    0[COMRAM] unsigned int 
 10419 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;  product         2    4[COMRAM] unsigned int 
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  2    0[COMRAM] unsigned int 
 10424 ;; Registers used:
 10425 ;;		wreg, status,2, status,0, prodl, prodh
 10426 ;; Tracked objects:
 10427 ;;		On entry : 0/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10431 ;;      Params:         4       0       0       0       0       0       0       0       0
 10432 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10433 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10434 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10435 ;;Total ram usage:        6 bytes
 10436 ;; Hardware stack levels used: 1
 10437 ;; Hardware stack levels required when called: 1
 10438 ;; This function calls:
 10439 ;;		Nothing
 10440 ;; This function is called by:
 10441 ;;		_atoi
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           	psect	text37
 10446  0046EA                     __ptext37:
 10447                           	callstack 0
 10448  0046EA                     ___wmul:
 10449                           	callstack 25
 10450  0046EA  5001               	movf	___wmul@multiplier^0,w,c
 10451  0046EC  0203               	mulwf	___wmul@multiplicand^0,c
 10452  0046EE  CFF3 F005          	movff	prodl,___wmul@product
 10453  0046F2  CFF4 F006          	movff	prodh,___wmul@product+1
 10454  0046F6  5001               	movf	___wmul@multiplier^0,w,c
 10455  0046F8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10456  0046FA  50F3               	movf	243,w,c
 10457  0046FC  2606               	addwf	(___wmul@product+1)^0,f,c
 10458  0046FE  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10459  004700  0203               	mulwf	___wmul@multiplicand^0,c
 10460  004702  50F3               	movf	243,w,c
 10461  004704  2606               	addwf	(___wmul@product+1)^0,f,c
 10462  004706  C005  F001         	movff	___wmul@product,?___wmul
 10463  00470A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10464  00470E  0012               	return		;funcret
 10465  004710                     __end_of___wmul:
 10466                           	callstack 0
 10467                           
 10468 ;; *************** function _RTC_Read_Clock *****************
 10469 ;; Defined at:
 10470 ;;		line 34 in file "reloj.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  read_clock_a    1    wreg     unsigned char 
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;  read_clock_a    1    3[COMRAM] unsigned char 
 10475 ;; Return value:  Size  Location     Type
 10476 ;;                  1    wreg      void 
 10477 ;; Registers used:
 10478 ;;		wreg, status,2, status,0, cstack
 10479 ;; Tracked objects:
 10480 ;;		On entry : 0/0
 10481 ;;		On exit  : 0/0
 10482 ;;		Unchanged: 0/0
 10483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10484 ;;      Params:         0       0       0       0       0       0       0       0       0
 10485 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10486 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10487 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10488 ;;Total ram usage:        2 bytes
 10489 ;; Hardware stack levels used: 1
 10490 ;; Hardware stack levels required when called: 4
 10491 ;; This function calls:
 10492 ;;		_I2C_Read
 10493 ;;		_I2C_Repeated_Start
 10494 ;;		_I2C_Start
 10495 ;;		_I2C_Write
 10496 ;; This function is called by:
 10497 ;;		_RTC_Calendario
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text38
 10502  004408                     __ptext38:
 10503                           	callstack 0
 10504  004408                     _RTC_Read_Clock:
 10505                           	callstack 25
 10506                           
 10507                           ;incstack = 0
 10508                           ;RTC_Read_Clock@read_clock_address stored from wreg
 10509  004408  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
 10510  00440A                     
 10511                           ;reloj.c: 34: void RTC_Read_Clock(char read_clock_address);reloj.c: 35: {;reloj.c: 36:  
      +                             I2C_Start(0xD0);
 10512  00440A  0ED0               	movlw	208
 10513  00440C  EC47  F023         	call	_I2C_Start
 10514                           
 10515                           ;reloj.c: 37:     I2C_Write(read_clock_address);
 10516  004410  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
 10517  004412  EC88  F023         	call	_I2C_Write
 10518                           
 10519                           ;reloj.c: 38:     I2C_Repeated_Start(0xD1);
 10520  004416  0ED1               	movlw	209
 10521  004418  EC5E  F023         	call	_I2C_Repeated_Start
 10522  00441C                     
 10523                           ;reloj.c: 39:     sec = I2C_Read(0);
 10524  00441C  0E00               	movlw	0
 10525  00441E  EC87  F022         	call	_I2C_Read
 10526  004422  6E03               	movwf	??_RTC_Read_Clock^0,c
 10527  004424  5003               	movf	??_RTC_Read_Clock^0,w,c
 10528  004426  0101               	movlb	1	; () banked
 10529  004428  6F28               	movwf	_sec& (0+255),b
 10530  00442A  6B29               	clrf	(_sec+1)& (0+255),b
 10531  00442C                     
 10532                           ; BSR set to: 1
 10533                           ;reloj.c: 40:     min = I2C_Read(0);
 10534  00442C  0E00               	movlw	0
 10535  00442E  EC87  F022         	call	_I2C_Read
 10536  004432  6E03               	movwf	??_RTC_Read_Clock^0,c
 10537  004434  5003               	movf	??_RTC_Read_Clock^0,w,c
 10538  004436  0101               	movlb	1	; () banked
 10539  004438  6F26               	movwf	_min& (0+255),b
 10540  00443A  6B27               	clrf	(_min+1)& (0+255),b
 10541  00443C                     
 10542                           ; BSR set to: 1
 10543                           ;reloj.c: 41:     hour= I2C_Read(1);
 10544  00443C  0E01               	movlw	1
 10545  00443E  EC87  F022         	call	_I2C_Read
 10546  004442  6E03               	movwf	??_RTC_Read_Clock^0,c
 10547  004444  5003               	movf	??_RTC_Read_Clock^0,w,c
 10548  004446  0101               	movlb	1	; () banked
 10549  004448  6F24               	movwf	_hour& (0+255),b
 10550  00444A  6B25               	clrf	(_hour+1)& (0+255),b
 10551  00444C                     
 10552                           ; BSR set to: 1
 10553  00444C  0012               	return		;funcret
 10554  00444E                     __end_of_RTC_Read_Clock:
 10555                           	callstack 0
 10556                           
 10557 ;; *************** function _RTC_Read_Calendar *****************
 10558 ;; Defined at:
 10559 ;;		line 57 in file "reloj.c"
 10560 ;; Parameters:    Size  Location     Type
 10561 ;;  read_calenda    1    wreg     unsigned char 
 10562 ;; Auto vars:     Size  Location     Type
 10563 ;;  read_calenda    1    3[COMRAM] unsigned char 
 10564 ;; Return value:  Size  Location     Type
 10565 ;;                  1    wreg      void 
 10566 ;; Registers used:
 10567 ;;		wreg, status,2, status,0, cstack
 10568 ;; Tracked objects:
 10569 ;;		On entry : 0/0
 10570 ;;		On exit  : 0/0
 10571 ;;		Unchanged: 0/0
 10572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10573 ;;      Params:         0       0       0       0       0       0       0       0       0
 10574 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10575 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10576 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10577 ;;Total ram usage:        2 bytes
 10578 ;; Hardware stack levels used: 1
 10579 ;; Hardware stack levels required when called: 4
 10580 ;; This function calls:
 10581 ;;		_I2C_Read
 10582 ;;		_I2C_Repeated_Start
 10583 ;;		_I2C_Start
 10584 ;;		_I2C_Stop
 10585 ;;		_I2C_Write
 10586 ;; This function is called by:
 10587 ;;		_RTC_Calendario
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           	psect	text39
 10592  004154                     __ptext39:
 10593                           	callstack 0
 10594  004154                     _RTC_Read_Calendar:
 10595                           	callstack 25
 10596                           
 10597                           ; BSR set to: 1
 10598                           ;incstack = 0
 10599                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
 10600  004154  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
 10601  004156                     
 10602                           ;reloj.c: 57: void RTC_Read_Calendar(char read_calendar_address);reloj.c: 58: {;reloj.c:
      +                           59:     I2C_Start(0xD0);
 10603  004156  0ED0               	movlw	208
 10604  004158  EC47  F023         	call	_I2C_Start
 10605                           
 10606                           ;reloj.c: 60:     I2C_Write(read_calendar_address);
 10607  00415C  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
 10608  00415E  EC88  F023         	call	_I2C_Write
 10609                           
 10610                           ;reloj.c: 61:     I2C_Repeated_Start(0xD1);
 10611  004162  0ED1               	movlw	209
 10612  004164  EC5E  F023         	call	_I2C_Repeated_Start
 10613  004168                     
 10614                           ;reloj.c: 62:     Day = I2C_Read(0);
 10615  004168  0E00               	movlw	0
 10616  00416A  EC87  F022         	call	_I2C_Read
 10617  00416E  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10618  004170  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10619  004172  0101               	movlb	1	; () banked
 10620  004174  6F22               	movwf	_Day& (0+255),b
 10621  004176  6B23               	clrf	(_Day+1)& (0+255),b
 10622  004178                     
 10623                           ; BSR set to: 1
 10624                           ;reloj.c: 63:     Date = I2C_Read(0);
 10625  004178  0E00               	movlw	0
 10626  00417A  EC87  F022         	call	_I2C_Read
 10627  00417E  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10628  004180  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10629  004182  0101               	movlb	1	; () banked
 10630  004184  6F20               	movwf	_Date& (0+255),b
 10631  004186  6B21               	clrf	(_Date+1)& (0+255),b
 10632  004188                     
 10633                           ; BSR set to: 1
 10634                           ;reloj.c: 64:     Month = I2C_Read(0);
 10635  004188  0E00               	movlw	0
 10636  00418A  EC87  F022         	call	_I2C_Read
 10637  00418E  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10638  004190  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10639  004192  0101               	movlb	1	; () banked
 10640  004194  6F1E               	movwf	_Month& (0+255),b
 10641  004196  6B1F               	clrf	(_Month+1)& (0+255),b
 10642  004198                     
 10643                           ; BSR set to: 1
 10644                           ;reloj.c: 65:     Year = I2C_Read(1);
 10645  004198  0E01               	movlw	1
 10646  00419A  EC87  F022         	call	_I2C_Read
 10647  00419E  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10648  0041A0  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10649  0041A2  0101               	movlb	1	; () banked
 10650  0041A4  6F1C               	movwf	_Year& (0+255),b
 10651  0041A6  6B1D               	clrf	(_Year+1)& (0+255),b
 10652  0041A8                     
 10653                           ; BSR set to: 1
 10654                           ;reloj.c: 66:     I2C_Stop();
 10655  0041A8  ECC5  F023         	call	_I2C_Stop	;wreg free
 10656  0041AC  0012               	return		;funcret
 10657  0041AE                     __end_of_RTC_Read_Calendar:
 10658                           	callstack 0
 10659                           
 10660 ;; *************** function _I2C_Stop *****************
 10661 ;; Defined at:
 10662 ;;		line 93 in file "Reloj_ar.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;		None
 10665 ;; Auto vars:     Size  Location     Type
 10666 ;;		None
 10667 ;; Return value:  Size  Location     Type
 10668 ;;                  1    wreg      unsigned char 
 10669 ;; Registers used:
 10670 ;;		wreg
 10671 ;; Tracked objects:
 10672 ;;		On entry : 0/0
 10673 ;;		On exit  : 0/0
 10674 ;;		Unchanged: 0/0
 10675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10676 ;;      Params:         0       0       0       0       0       0       0       0       0
 10677 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10678 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10679 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10680 ;;Total ram usage:        0 bytes
 10681 ;; Hardware stack levels used: 1
 10682 ;; Hardware stack levels required when called: 1
 10683 ;; This function calls:
 10684 ;;		Nothing
 10685 ;; This function is called by:
 10686 ;;		_RTC_Read_Calendar
 10687 ;;		_RTC_Calendario
 10688 ;;		_I2C_Start_Wait
 10689 ;; This function uses a non-reentrant model
 10690 ;;
 10691                           
 10692                           	psect	text40
 10693  00478A                     __ptext40:
 10694                           	callstack 0
 10695  00478A                     _I2C_Stop:
 10696                           	callstack 27
 10697  00478A                     
 10698                           ;Reloj_ar.c: 95:     PEN = 1;
 10699  00478A  84C5               	bsf	4037,2,c	;volatile
 10700  00478C                     l380:
 10701  00478C  B4C5               	btfsc	4037,2,c	;volatile
 10702  00478E  EFCB  F023         	goto	u5811
 10703  004792  EFCD  F023         	goto	u5810
 10704  004796                     u5811:
 10705  004796  EFC6  F023         	goto	l380
 10706  00479A                     u5810:
 10707  00479A                     
 10708                           ;Reloj_ar.c: 97:     if(!SSPSTATbits.P);
 10709  00479A  50C7               	movf	199,w,c	;volatile
 10710  00479C  0012               	return		;funcret
 10711  00479E                     __end_of_I2C_Stop:
 10712                           	callstack 0
 10713                           
 10714 ;; *************** function _I2C_Start *****************
 10715 ;; Defined at:
 10716 ;;		line 68 in file "Reloj_ar.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;  slave_write_    1    wreg     unsigned char 
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;  slave_write_    1    1[COMRAM] unsigned char 
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1    wreg      unsigned char 
 10723 ;; Registers used:
 10724 ;;		wreg, status,2, cstack
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0
 10731 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10733 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10734 ;;Total ram usage:        1 bytes
 10735 ;; Hardware stack levels used: 1
 10736 ;; Hardware stack levels required when called: 3
 10737 ;; This function calls:
 10738 ;;		_I2C_Write
 10739 ;; This function is called by:
 10740 ;;		_RTC_Read_Clock
 10741 ;;		_RTC_Read_Calendar
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           
 10745                           	psect	text41
 10746  00468E                     __ptext41:
 10747                           	callstack 0
 10748  00468E                     _I2C_Start:
 10749                           	callstack 25
 10750                           
 10751                           ;incstack = 0
 10752                           ;I2C_Start@slave_write_address stored from wreg
 10753  00468E  6E02               	movwf	I2C_Start@slave_write_address^0,c
 10754  004690                     
 10755                           ;Reloj_ar.c: 68: char I2C_Start(char slave_write_address);Reloj_ar.c: 69: {;Reloj_ar.c: 
      +                          70:     SSPCON2bits.SEN=1;
 10756  004690  80C5               	bsf	197,0,c	;volatile
 10757  004692                     l364:
 10758  004692  B0C5               	btfsc	197,0,c	;volatile
 10759  004694  EF4E  F023         	goto	u5751
 10760  004698  EF50  F023         	goto	u5750
 10761  00469C                     u5751:
 10762  00469C  EF49  F023         	goto	l364
 10763  0046A0                     u5750:
 10764  0046A0                     
 10765                           ;Reloj_ar.c: 72:  SSPIF=0;
 10766  0046A0  969E               	bcf	3998,3,c	;volatile
 10767                           
 10768                           ;Reloj_ar.c: 73:     if(!SSPSTATbits.S)
 10769  0046A2  B6C7               	btfsc	199,3,c	;volatile
 10770  0046A4  EF56  F023         	goto	u5761
 10771  0046A8  EF58  F023         	goto	u5760
 10772  0046AC                     u5761:
 10773  0046AC  EF5A  F023         	goto	l4962
 10774  0046B0                     u5760:
 10775  0046B0  EF5D  F023         	goto	l368
 10776  0046B4                     l4962:
 10777                           
 10778                           ;Reloj_ar.c: 75:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Star
      +                          t is never used
 10779  0046B4  5002               	movf	I2C_Start@slave_write_address^0,w,c
 10780  0046B6  EC88  F023         	call	_I2C_Write
 10781  0046BA                     l368:
 10782  0046BA  0012               	return		;funcret
 10783  0046BC                     __end_of_I2C_Start:
 10784                           	callstack 0
 10785                           
 10786 ;; *************** function _I2C_Repeated_Start *****************
 10787 ;; Defined at:
 10788 ;;		line 79 in file "Reloj_ar.c"
 10789 ;; Parameters:    Size  Location     Type
 10790 ;;  slave_read_a    1    wreg     unsigned char 
 10791 ;; Auto vars:     Size  Location     Type
 10792 ;;  slave_read_a    1    1[COMRAM] unsigned char 
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  1    wreg      unsigned char 
 10795 ;; Registers used:
 10796 ;;		wreg, status,2, cstack
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10802 ;;      Params:         0       0       0       0       0       0       0       0       0
 10803 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10804 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10805 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10806 ;;Total ram usage:        1 bytes
 10807 ;; Hardware stack levels used: 1
 10808 ;; Hardware stack levels required when called: 3
 10809 ;; This function calls:
 10810 ;;		_I2C_Write
 10811 ;; This function is called by:
 10812 ;;		_RTC_Read_Clock
 10813 ;;		_RTC_Read_Calendar
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           	psect	text42
 10818  0046BC                     __ptext42:
 10819                           	callstack 0
 10820  0046BC                     _I2C_Repeated_Start:
 10821                           	callstack 25
 10822                           
 10823                           ;incstack = 0
 10824                           ;I2C_Repeated_Start@slave_read_address stored from wreg
 10825  0046BC  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
 10826  0046BE                     
 10827                           ;Reloj_ar.c: 79: char I2C_Repeated_Start(char slave_read_address);Reloj_ar.c: 80: {;Relo
      +                          j_ar.c: 81:     RSEN = 1;
 10828  0046BE  82C5               	bsf	4037,1,c	;volatile
 10829  0046C0                     l371:
 10830  0046C0  B2C5               	btfsc	4037,1,c	;volatile
 10831  0046C2  EF65  F023         	goto	u5771
 10832  0046C6  EF67  F023         	goto	u5770
 10833  0046CA                     u5771:
 10834  0046CA  EF60  F023         	goto	l371
 10835  0046CE                     u5770:
 10836  0046CE                     
 10837                           ;Reloj_ar.c: 83:     SSPIF = 0;
 10838  0046CE  969E               	bcf	3998,3,c	;volatile
 10839                           
 10840                           ;Reloj_ar.c: 84:  if(!SSPSTATbits.S)
 10841  0046D0  B6C7               	btfsc	199,3,c	;volatile
 10842  0046D2  EF6D  F023         	goto	u5781
 10843  0046D6  EF6F  F023         	goto	u5780
 10844  0046DA                     u5781:
 10845  0046DA  EF71  F023         	goto	l4970
 10846  0046DE                     u5780:
 10847  0046DE  EF74  F023         	goto	l375
 10848  0046E2                     l4970:
 10849                           
 10850                           ;Reloj_ar.c: 86:     I2C_Write(slave_read_address);
 10851  0046E2  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
 10852  0046E4  EC88  F023         	call	_I2C_Write
 10853  0046E8                     l375:
 10854  0046E8  0012               	return		;funcret
 10855  0046EA                     __end_of_I2C_Repeated_Start:
 10856                           	callstack 0
 10857                           
 10858 ;; *************** function _I2C_Write *****************
 10859 ;; Defined at:
 10860 ;;		line 101 in file "Reloj_ar.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;  data            1    wreg     unsigned char 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;  data            1    0[COMRAM] unsigned char 
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  1    wreg      unsigned char 
 10867 ;; Registers used:
 10868 ;;		wreg, cstack
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10874 ;;      Params:         0       0       0       0       0       0       0       0       0
 10875 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10876 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10877 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10878 ;;Total ram usage:        1 bytes
 10879 ;; Hardware stack levels used: 1
 10880 ;; Hardware stack levels required when called: 2
 10881 ;; This function calls:
 10882 ;;		_I2C_Ready
 10883 ;; This function is called by:
 10884 ;;		_RTC_Read_Clock
 10885 ;;		_RTC_Read_Calendar
 10886 ;;		_I2C_Start
 10887 ;;		_I2C_Repeated_Start
 10888 ;;		_I2C_Start_Wait
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           	psect	text43
 10893  004710                     __ptext43:
 10894                           	callstack 0
 10895  004710                     _I2C_Write:
 10896                           	callstack 26
 10897                           
 10898                           ;incstack = 0
 10899                           ;I2C_Write@data stored from wreg
 10900  004710  6E01               	movwf	I2C_Write@data^0,c
 10901  004712                     
 10902                           ;Reloj_ar.c: 101: char I2C_Write(unsigned char data);Reloj_ar.c: 102: {;Reloj_ar.c: 103:
      +                                 SSPBUF = data;
 10903  004712  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
 10904  004716                     
 10905                           ;Reloj_ar.c: 104:       I2C_Ready();
 10906  004716  ECED  F023         	call	_I2C_Ready	;wreg free
 10907  00471A                     
 10908                           ;Reloj_ar.c: 105:       if (ACKSTAT)
 10909  00471A  ACC5               	btfss	4037,6,c	;volatile
 10910  00471C  EF92  F023         	goto	u5511
 10911  004720  EF94  F023         	goto	u5510
 10912  004724                     u5511:
 10913  004724  EF97  F023         	goto	l4780
 10914  004728                     u5510:
 10915  004728                     
 10916                           ;Reloj_ar.c: 106:         return 1;
 10917  004728  0E01               	movlw	1
 10918  00472A  EF98  F023         	goto	l388
 10919  00472E                     l4780:
 10920                           
 10921                           ;Reloj_ar.c: 108:         return 2;
 10922  00472E  0E02               	movlw	2
 10923  004730                     l388:
 10924  004730  0012               	return		;funcret
 10925  004732                     __end_of_I2C_Write:
 10926                           	callstack 0
 10927                           
 10928 ;; *************** function _I2C_Read *****************
 10929 ;; Defined at:
 10930 ;;		line 12 in file "Reloj_ar.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;  flag            1    wreg     unsigned char 
 10933 ;; Auto vars:     Size  Location     Type
 10934 ;;  flag            1    0[COMRAM] unsigned char 
 10935 ;;  buffer          1    1[COMRAM] unsigned char 
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  1    wreg      unsigned char 
 10938 ;; Registers used:
 10939 ;;		wreg, status,2, cstack
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10945 ;;      Params:         0       0       0       0       0       0       0       0       0
 10946 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10947 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10948 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10949 ;;Total ram usage:        2 bytes
 10950 ;; Hardware stack levels used: 1
 10951 ;; Hardware stack levels required when called: 2
 10952 ;; This function calls:
 10953 ;;		_I2C_Ack
 10954 ;;		_I2C_Nack
 10955 ;;		_I2C_Ready
 10956 ;; This function is called by:
 10957 ;;		_RTC_Read_Clock
 10958 ;;		_RTC_Read_Calendar
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           	psect	text44
 10963  00450E                     __ptext44:
 10964                           	callstack 0
 10965  00450E                     _I2C_Read:
 10966                           	callstack 26
 10967                           
 10968                           ;incstack = 0
 10969                           ;I2C_Read@flag stored from wreg
 10970  00450E  6E01               	movwf	I2C_Read@flag^0,c
 10971  004510                     
 10972                           ;Reloj_ar.c: 12: char I2C_Read(char flag);Reloj_ar.c: 14: {;Reloj_ar.c: 15:         char
      +                           buffer;;Reloj_ar.c: 16:         RCEN = 1;
 10973  004510  86C5               	bsf	4037,3,c	;volatile
 10974  004512                     l336:
 10975  004512  A0C7               	btfss	199,0,c	;volatile
 10976  004514  EF8E  F022         	goto	u5791
 10977  004518  EF90  F022         	goto	u5790
 10978  00451C                     u5791:
 10979  00451C  EF89  F022         	goto	l336
 10980  004520                     u5790:
 10981  004520                     
 10982                           ;Reloj_ar.c: 19:         buffer = SSPBUF;
 10983  004520  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
 10984  004524                     
 10985                           ;Reloj_ar.c: 21:         if(flag==0)
 10986  004524  5001               	movf	I2C_Read@flag^0,w,c
 10987  004526  A4D8               	btfss	status,2,c
 10988  004528  EF98  F022         	goto	u5801
 10989  00452C  EF9A  F022         	goto	u5800
 10990  004530                     u5801:
 10991  004530  EF9E  F022         	goto	l4984
 10992  004534                     u5800:
 10993  004534                     
 10994                           ;Reloj_ar.c: 22:             I2C_Ack();
 10995  004534  ECD9  F023         	call	_I2C_Ack	;wreg free
 10996  004538  EFA0  F022         	goto	l340
 10997  00453C                     l4984:
 10998                           
 10999                           ;Reloj_ar.c: 24:             I2C_Nack();
 11000  00453C  ECCF  F023         	call	_I2C_Nack	;wreg free
 11001  004540                     l340:
 11002                           
 11003                           ;Reloj_ar.c: 25:         I2C_Ready();
 11004  004540  ECED  F023         	call	_I2C_Ready	;wreg free
 11005  004544                     
 11006                           ;Reloj_ar.c: 26:         return(buffer);
 11007  004544  5002               	movf	I2C_Read@buffer^0,w,c
 11008  004546  0012               	return		;funcret
 11009  004548                     __end_of_I2C_Read:
 11010                           	callstack 0
 11011                           
 11012 ;; *************** function _I2C_Ready *****************
 11013 ;; Defined at:
 11014 ;;		line 43 in file "Reloj_ar.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;		None
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;		None
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      void 
 11021 ;; Registers used:
 11022 ;;		None
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11028 ;;      Params:         0       0       0       0       0       0       0       0       0
 11029 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11030 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11031 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11032 ;;Total ram usage:        0 bytes
 11033 ;; Hardware stack levels used: 1
 11034 ;; Hardware stack levels required when called: 1
 11035 ;; This function calls:
 11036 ;;		Nothing
 11037 ;; This function is called by:
 11038 ;;		_I2C_Read
 11039 ;;		_I2C_Write
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text45
 11044  0047DA                     __ptext45:
 11045                           	callstack 0
 11046  0047DA                     _I2C_Ready:
 11047                           	callstack 26
 11048  0047DA                     l347:
 11049  0047DA  A69E               	btfss	3998,3,c	;volatile
 11050  0047DC  EFF2  F023         	goto	u4671
 11051  0047E0  EFF4  F023         	goto	u4670
 11052  0047E4                     u4671:
 11053  0047E4  EFED  F023         	goto	l347
 11054  0047E8                     u4670:
 11055  0047E8                     
 11056                           ;Reloj_ar.c: 46:     SSPIF=0;
 11057  0047E8  969E               	bcf	3998,3,c	;volatile
 11058  0047EA  0012               	return		;funcret
 11059  0047EC                     __end_of_I2C_Ready:
 11060                           	callstack 0
 11061                           
 11062 ;; *************** function _I2C_Nack *****************
 11063 ;; Defined at:
 11064 ;;		line 118 in file "Reloj_ar.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;		None
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;		None
 11069 ;; Return value:  Size  Location     Type
 11070 ;;                  1    wreg      void 
 11071 ;; Registers used:
 11072 ;;		None
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11078 ;;      Params:         0       0       0       0       0       0       0       0       0
 11079 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11080 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11081 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11082 ;;Total ram usage:        0 bytes
 11083 ;; Hardware stack levels used: 1
 11084 ;; Hardware stack levels required when called: 1
 11085 ;; This function calls:
 11086 ;;		Nothing
 11087 ;; This function is called by:
 11088 ;;		_I2C_Read
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text46
 11093  00479E                     __ptext46:
 11094                           	callstack 0
 11095  00479E                     _I2C_Nack:
 11096                           	callstack 26
 11097  00479E                     
 11098                           ;Reloj_ar.c: 120:     ACKDT=1;
 11099  00479E  8AC5               	bsf	4037,5,c	;volatile
 11100                           
 11101                           ;Reloj_ar.c: 121:  ACKEN=1;
 11102  0047A0  88C5               	bsf	4037,4,c	;volatile
 11103  0047A2                     l398:
 11104  0047A2  B8C5               	btfsc	4037,4,c	;volatile
 11105  0047A4  EFD6  F023         	goto	u5531
 11106  0047A8  EFD8  F023         	goto	u5530
 11107  0047AC                     u5531:
 11108  0047AC  EFD1  F023         	goto	l398
 11109  0047B0                     u5530:
 11110  0047B0  0012               	return		;funcret
 11111  0047B2                     __end_of_I2C_Nack:
 11112                           	callstack 0
 11113                           
 11114 ;; *************** function _I2C_Ack *****************
 11115 ;; Defined at:
 11116 ;;		line 111 in file "Reloj_ar.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;		None
 11119 ;; Auto vars:     Size  Location     Type
 11120 ;;		None
 11121 ;; Return value:  Size  Location     Type
 11122 ;;                  1    wreg      void 
 11123 ;; Registers used:
 11124 ;;		None
 11125 ;; Tracked objects:
 11126 ;;		On entry : 0/0
 11127 ;;		On exit  : 0/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11130 ;;      Params:         0       0       0       0       0       0       0       0       0
 11131 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11132 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11133 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11134 ;;Total ram usage:        0 bytes
 11135 ;; Hardware stack levels used: 1
 11136 ;; Hardware stack levels required when called: 1
 11137 ;; This function calls:
 11138 ;;		Nothing
 11139 ;; This function is called by:
 11140 ;;		_I2C_Read
 11141 ;; This function uses a non-reentrant model
 11142 ;;
 11143                           
 11144                           	psect	text47
 11145  0047B2                     __ptext47:
 11146                           	callstack 0
 11147  0047B2                     _I2C_Ack:
 11148                           	callstack 26
 11149  0047B2                     
 11150                           ;Reloj_ar.c: 113:     ACKDT=0;
 11151  0047B2  9AC5               	bcf	4037,5,c	;volatile
 11152                           
 11153                           ;Reloj_ar.c: 114:  ACKEN=1;
 11154  0047B4  88C5               	bsf	4037,4,c	;volatile
 11155  0047B6                     l392:
 11156  0047B6  B8C5               	btfsc	4037,4,c	;volatile
 11157  0047B8  EFE0  F023         	goto	u5521
 11158  0047BC  EFE2  F023         	goto	u5520
 11159  0047C0                     u5521:
 11160  0047C0  EFDB  F023         	goto	l392
 11161  0047C4                     u5520:
 11162  0047C4  0012               	return		;funcret
 11163  0047C6                     __end_of_I2C_Ack:
 11164                           	callstack 0
 11165                           
 11166 ;; *************** function _LCD_String_xy *****************
 11167 ;; Defined at:
 11168 ;;		line 75 in file "LCD_caracter.c"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;  row             1    wreg     unsigned char 
 11171 ;;  pos             1   10[COMRAM] unsigned char 
 11172 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 11173 ;;		 -> RTC_Calendario@date(10), RTC_Calendario@hours(10), STR_6(3), STR_5(3), 
 11174 ;;		 -> Stemp(20), STR_1(14), 
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;  row             1   13[COMRAM] unsigned char 
 11177 ;;  location        1   14[COMRAM] unsigned char 
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  1    wreg      void 
 11180 ;; Registers used:
 11181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11182 ;; Tracked objects:
 11183 ;;		On entry : 0/0
 11184 ;;		On exit  : 0/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11187 ;;      Params:         3       0       0       0       0       0       0       0       0
 11188 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11189 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11190 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11191 ;;Total ram usage:        5 bytes
 11192 ;; Hardware stack levels used: 1
 11193 ;; Hardware stack levels required when called: 4
 11194 ;; This function calls:
 11195 ;;		_LCD_Command
 11196 ;;		_LCD_String
 11197 ;; This function is called by:
 11198 ;;		_main
 11199 ;;		_RTC_Calendario
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text48
 11204  004492                     __ptext48:
 11205                           	callstack 0
 11206  004492                     _LCD_String_xy:
 11207                           	callstack 25
 11208                           
 11209                           ;incstack = 0
 11210                           ;LCD_String_xy@row stored from wreg
 11211  004492  6E0E               	movwf	LCD_String_xy@row^0,c
 11212  004494                     
 11213                           ;LCD_caracter.c: 78:     if(row<=1)
 11214  004494  0E02               	movlw	2
 11215  004496  600E               	cpfslt	LCD_String_xy@row^0,c
 11216  004498  EF50  F022         	goto	u5831
 11217  00449C  EF52  F022         	goto	u5830
 11218  0044A0                     u5831:
 11219  0044A0  EF5B  F022         	goto	l5030
 11220  0044A4                     u5830:
 11221  0044A4                     
 11222                           ;LCD_caracter.c: 79:     {;LCD_caracter.c: 80:         location=(0x80) | ((pos) & 0x0f);
 11223  0044A4  500B               	movf	LCD_String_xy@pos^0,w,c
 11224  0044A6  0B0F               	andlw	15
 11225  0044A8  0980               	iorlw	128
 11226  0044AA  6E0F               	movwf	LCD_String_xy@location^0,c
 11227  0044AC                     
 11228                           ;LCD_caracter.c: 81:         LCD_Command(location);
 11229  0044AC  500F               	movf	LCD_String_xy@location^0,w,c
 11230  0044AE  EC29  F021         	call	_LCD_Command
 11231                           
 11232                           ;LCD_caracter.c: 82:     }
 11233  0044B2  EF62  F022         	goto	l5034
 11234  0044B6                     l5030:
 11235                           
 11236                           ;LCD_caracter.c: 84:     {;LCD_caracter.c: 85:         location=(0xC0) | ((pos) & 0x0f);
 11237  0044B6  500B               	movf	LCD_String_xy@pos^0,w,c
 11238  0044B8  0B0F               	andlw	15
 11239  0044BA  09C0               	iorlw	192
 11240  0044BC  6E0F               	movwf	LCD_String_xy@location^0,c
 11241  0044BE                     
 11242                           ;LCD_caracter.c: 86:         LCD_Command(location);
 11243  0044BE  500F               	movf	LCD_String_xy@location^0,w,c
 11244  0044C0  EC29  F021         	call	_LCD_Command
 11245  0044C4                     l5034:
 11246                           
 11247                           ;LCD_caracter.c: 90:     LCD_String(msg);
 11248  0044C4  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 11249  0044C8  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 11250  0044CC  EC4D  F020         	call	_LCD_String	;wreg free
 11251  0044D0  0012               	return		;funcret
 11252  0044D2                     __end_of_LCD_String_xy:
 11253                           	callstack 0
 11254                           
 11255 ;; *************** function _LCD_String *****************
 11256 ;; Defined at:
 11257 ;;		line 66 in file "LCD_caracter.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 11260 ;;		 -> STR_22(4), STR_21(4), STR_20(4), STR_19(4), 
 11261 ;;		 -> STR_18(4), STR_17(4), STR_16(4), RTC_Calendario@year(10), 
 11262 ;;		 -> RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), RTC_Calendario@mins(10), 
 11263 ;;		 -> RTC_Calendario@secs(10), STR_6(3), STR_5(3), Stemp(20), 
 11264 ;;		 -> STR_1(14), 
 11265 ;; Auto vars:     Size  Location     Type
 11266 ;;		None
 11267 ;; Return value:  Size  Location     Type
 11268 ;;                  1    wreg      void 
 11269 ;; Registers used:
 11270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11271 ;; Tracked objects:
 11272 ;;		On entry : 0/0
 11273 ;;		On exit  : 0/0
 11274 ;;		Unchanged: 0/0
 11275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11276 ;;      Params:         2       0       0       0       0       0       0       0       0
 11277 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11278 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11279 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11280 ;;Total ram usage:        2 bytes
 11281 ;; Hardware stack levels used: 1
 11282 ;; Hardware stack levels required when called: 3
 11283 ;; This function calls:
 11284 ;;		_LCD_Char
 11285 ;; This function is called by:
 11286 ;;		_LCD_String_xy
 11287 ;;		_RTC_Calendario
 11288 ;; This function uses a non-reentrant model
 11289 ;;
 11290                           
 11291                           	psect	text49
 11292  00409A                     __ptext49:
 11293                           	callstack 0
 11294  00409A                     _LCD_String:
 11295                           	callstack 25
 11296  00409A                     
 11297                           ;LCD_caracter.c: 66: void LCD_String(const char *msg);LCD_caracter.c: 67: {;LCD_caracter
      +                          .c: 68:  while((*msg)!=0)
 11298  00409A  EF63  F020         	goto	l4956
 11299  00409E                     l4952:
 11300                           
 11301                           ;LCD_caracter.c: 69:  {;LCD_caracter.c: 70:    LCD_Char(*msg);
 11302  00409E  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11303  0040A2  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11304  0040A6  6AF8               	clrf	tblptru,c
 11305  0040A8  0E07               	movlw	(high __ramtop+-1)
 11306  0040AA  64F7               	cpfsgt	tblptrh,c
 11307  0040AC  D003               	bra	u5727
 11308  0040AE  0008               	tblrd		*
 11309  0040B0  50F5               	movf	tablat,w,c
 11310  0040B2  D005               	bra	u5720
 11311  0040B4                     u5727:
 11312  0040B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 11313  0040B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 11314  0040BC  50EF               	movf	indf0,w,c
 11315  0040BE                     u5720:
 11316  0040BE  EC4F  F021         	call	_LCD_Char
 11317  0040C2                     
 11318                           ;LCD_caracter.c: 71:    msg++;
 11319  0040C2  4A09               	infsnz	LCD_String@msg^0,f,c
 11320  0040C4  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 11321  0040C6                     l4956:
 11322                           
 11323                           ;LCD_caracter.c: 68:  while((*msg)!=0)
 11324  0040C6  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11325  0040CA  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11326  0040CE  6AF8               	clrf	tblptru,c
 11327  0040D0  0E07               	movlw	(high __ramtop+-1)
 11328  0040D2  64F7               	cpfsgt	tblptrh,c
 11329  0040D4  D003               	bra	u5737
 11330  0040D6  0008               	tblrd		*
 11331  0040D8  50F5               	movf	tablat,w,c
 11332  0040DA  D005               	bra	u5730
 11333  0040DC                     u5737:
 11334  0040DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 11335  0040E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 11336  0040E4  50EF               	movf	indf0,w,c
 11337  0040E6                     u5730:
 11338  0040E6  0900               	iorlw	0
 11339  0040E8  A4D8               	btfss	status,2,c
 11340  0040EA  EF79  F020         	goto	u5741
 11341  0040EE  EF7B  F020         	goto	u5740
 11342  0040F2                     u5741:
 11343  0040F2  EF4F  F020         	goto	l4952
 11344  0040F6                     u5740:
 11345  0040F6  0012               	return		;funcret
 11346  0040F8                     __end_of_LCD_String:
 11347                           	callstack 0
 11348                           
 11349 ;; *************** function _LCD_Init *****************
 11350 ;; Defined at:
 11351 ;;		line 23 in file "LCD_caracter.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;		None
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;		None
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      void 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2, status,0, cstack
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11365 ;;      Params:         0       0       0       0       0       0       0       0       0
 11366 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11367 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11368 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11369 ;;Total ram usage:        0 bytes
 11370 ;; Hardware stack levels used: 1
 11371 ;; Hardware stack levels required when called: 3
 11372 ;; This function calls:
 11373 ;;		_LCD_Command
 11374 ;;		_MSdelay
 11375 ;; This function is called by:
 11376 ;;		_main
 11377 ;;		_RTC_Calendario
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           	psect	text50
 11382  00465E                     __ptext50:
 11383                           	callstack 0
 11384  00465E                     _LCD_Init:
 11385                           	callstack 26
 11386  00465E                     
 11387                           ;LCD_caracter.c: 25:     TRISD = 0;
 11388  00465E  0E00               	movlw	0
 11389  004660  6E95               	movwf	149,c	;volatile
 11390  004662                     
 11391                           ;LCD_caracter.c: 26:     MSdelay(15);
 11392  004662  0E00               	movlw	0
 11393  004664  6E02               	movwf	(MSdelay@val+1)^0,c
 11394  004666  0E0F               	movlw	15
 11395  004668  6E01               	movwf	MSdelay@val^0,c
 11396  00466A  EC75  F021         	call	_MSdelay	;wreg free
 11397  00466E                     
 11398                           ;LCD_caracter.c: 27:     LCD_Command(0x02);
 11399  00466E  0E02               	movlw	2
 11400  004670  EC29  F021         	call	_LCD_Command
 11401  004674                     
 11402                           ;LCD_caracter.c: 29:     LCD_Command(0x28);
 11403  004674  0E28               	movlw	40
 11404  004676  EC29  F021         	call	_LCD_Command
 11405  00467A                     
 11406                           ;LCD_caracter.c: 31:  LCD_Command(0x01);
 11407  00467A  0E01               	movlw	1
 11408  00467C  EC29  F021         	call	_LCD_Command
 11409  004680                     
 11410                           ;LCD_caracter.c: 32:     LCD_Command(0x0c);
 11411  004680  0E0C               	movlw	12
 11412  004682  EC29  F021         	call	_LCD_Command
 11413  004686                     
 11414                           ;LCD_caracter.c: 33:  LCD_Command(0x06);
 11415  004686  0E06               	movlw	6
 11416  004688  EC29  F021         	call	_LCD_Command
 11417  00468C  0012               	return		;funcret
 11418  00468E                     __end_of_LCD_Init:
 11419                           	callstack 0
 11420                           
 11421 ;; *************** function _LCD_Clear *****************
 11422 ;; Defined at:
 11423 ;;		line 93 in file "LCD_caracter.c"
 11424 ;; Parameters:    Size  Location     Type
 11425 ;;		None
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;		None
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      void 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2, status,0, cstack
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11437 ;;      Params:         0       0       0       0       0       0       0       0       0
 11438 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11440 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11441 ;;Total ram usage:        0 bytes
 11442 ;; Hardware stack levels used: 1
 11443 ;; Hardware stack levels required when called: 3
 11444 ;; This function calls:
 11445 ;;		_LCD_Command
 11446 ;;		_MSdelay
 11447 ;; This function is called by:
 11448 ;;		_main
 11449 ;;		_RTC_Calendario
 11450 ;; This function uses a non-reentrant model
 11451 ;;
 11452                           
 11453                           	psect	text51
 11454  0047C6                     __ptext51:
 11455                           	callstack 0
 11456  0047C6                     _LCD_Clear:
 11457                           	callstack 26
 11458  0047C6                     
 11459                           ;LCD_caracter.c: 95:     LCD_Command(0x01);
 11460  0047C6  0E01               	movlw	1
 11461  0047C8  EC29  F021         	call	_LCD_Command
 11462                           
 11463                           ;LCD_caracter.c: 96:     MSdelay(3);
 11464  0047CC  0E00               	movlw	0
 11465  0047CE  6E02               	movwf	(MSdelay@val+1)^0,c
 11466  0047D0  0E03               	movlw	3
 11467  0047D2  6E01               	movwf	MSdelay@val^0,c
 11468  0047D4  EC75  F021         	call	_MSdelay	;wreg free
 11469  0047D8  0012               	return		;funcret
 11470  0047DA                     __end_of_LCD_Clear:
 11471                           	callstack 0
 11472                           
 11473 ;; *************** function _I2C_Init *****************
 11474 ;; Defined at:
 11475 ;;		line 29 in file "Reloj_ar.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;		None
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;		None
 11480 ;; Return value:  Size  Location     Type
 11481 ;;                  1    wreg      void 
 11482 ;; Registers used:
 11483 ;;		wreg, status,2
 11484 ;; Tracked objects:
 11485 ;;		On entry : 0/0
 11486 ;;		On exit  : 0/0
 11487 ;;		Unchanged: 0/0
 11488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11489 ;;      Params:         0       0       0       0       0       0       0       0       0
 11490 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11491 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11492 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11493 ;;Total ram usage:        0 bytes
 11494 ;; Hardware stack levels used: 1
 11495 ;; Hardware stack levels required when called: 1
 11496 ;; This function calls:
 11497 ;;		Nothing
 11498 ;; This function is called by:
 11499 ;;		_main
 11500 ;;		_RTC_Calendario
 11501 ;; This function uses a non-reentrant model
 11502 ;;
 11503                           
 11504                           	psect	text52
 11505  004770                     __ptext52:
 11506                           	callstack 0
 11507  004770                     _I2C_Init:
 11508                           	callstack 28
 11509  004770                     
 11510                           ;Reloj_ar.c: 31:     TRISB0=1;
 11511  004770  8093               	bsf	3987,0,c	;volatile
 11512                           
 11513                           ;Reloj_ar.c: 32:  TRISB1=1;
 11514  004772  8293               	bsf	3987,1,c	;volatile
 11515  004774                     
 11516                           ;Reloj_ar.c: 33:  SSPSTAT=80;
 11517  004774  0E50               	movlw	80
 11518  004776  6EC7               	movwf	199,c	;volatile
 11519                           
 11520                           ;Reloj_ar.c: 34:     SSPCON1=0x28;
 11521  004778  0E28               	movlw	40
 11522  00477A  6EC6               	movwf	198,c	;volatile
 11523                           
 11524                           ;Reloj_ar.c: 36:  SSPCON2=0;
 11525  00477C  0E00               	movlw	0
 11526  00477E  6EC5               	movwf	197,c	;volatile
 11527                           
 11528                           ;Reloj_ar.c: 37:     SSPADD=((8000000/(4*100000))-1);
 11529  004780  0E13               	movlw	19
 11530  004782  6EC8               	movwf	200,c	;volatile
 11531  004784                     
 11532                           ;Reloj_ar.c: 38:     SSPIE=1;
 11533  004784  869D               	bsf	3997,3,c	;volatile
 11534  004786                     
 11535                           ;Reloj_ar.c: 39:     SSPIF=0;
 11536  004786  969E               	bcf	3998,3,c	;volatile
 11537  004788  0012               	return		;funcret
 11538  00478A                     __end_of_I2C_Init:
 11539                           	callstack 0
 11540                           
 11541 ;; *************** function _LCD_Custom_Char *****************
 11542 ;; Defined at:
 11543 ;;		line 99 in file "LCD_caracter.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;  loc             1    wreg     unsigned char 
 11546 ;;  msg             2    8[COMRAM] PTR unsigned char 
 11547 ;;		 -> character1(8), character3(8), character2(8), 
 11548 ;; Auto vars:     Size  Location     Type
 11549 ;;  loc             1   10[COMRAM] unsigned char 
 11550 ;;  i               1   11[COMRAM] unsigned char 
 11551 ;; Return value:  Size  Location     Type
 11552 ;;                  1    wreg      void 
 11553 ;; Registers used:
 11554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11560 ;;      Params:         2       0       0       0       0       0       0       0       0
 11561 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11562 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11563 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11564 ;;Total ram usage:        4 bytes
 11565 ;; Hardware stack levels used: 1
 11566 ;; Hardware stack levels required when called: 3
 11567 ;; This function calls:
 11568 ;;		_LCD_Char
 11569 ;;		_LCD_Command
 11570 ;; This function is called by:
 11571 ;;		_main
 11572 ;; This function uses a non-reentrant model
 11573 ;;
 11574                           
 11575                           	psect	text53
 11576  004334                     __ptext53:
 11577                           	callstack 0
 11578  004334                     _LCD_Custom_Char:
 11579                           	callstack 27
 11580                           
 11581                           ;incstack = 0
 11582                           ;LCD_Custom_Char@loc stored from wreg
 11583  004334  6E0B               	movwf	LCD_Custom_Char@loc^0,c
 11584  004336                     
 11585                           ;LCD_caracter.c: 99: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_c
      +                          aracter.c: 100: {;LCD_caracter.c: 101:     unsigned char i;;LCD_caracter.c: 102:     if 
      +                          (loc< 8 )
 11586  004336  0E08               	movlw	8
 11587  004338  600B               	cpfslt	LCD_Custom_Char@loc^0,c
 11588  00433A  EFA1  F021         	goto	u6011
 11589  00433E  EFA3  F021         	goto	u6010
 11590  004342                     u6011:
 11591  004342  EFBD  F021         	goto	l110
 11592  004346                     u6010:
 11593  004346                     
 11594                           ;LCD_caracter.c: 103:     {;LCD_caracter.c: 104:      LCD_Command ( 0x40 +(loc* 8 ));
 11595  004346  500B               	movf	LCD_Custom_Char@loc^0,w,c
 11596  004348  0D08               	mullw	8
 11597  00434A  50F3               	movf	243,w,c
 11598  00434C  0F40               	addlw	64
 11599  00434E  EC29  F021         	call	_LCD_Command
 11600  004352                     
 11601                           ;LCD_caracter.c: 105:        for (i= 0 ;i< 8 ;i++)
 11602  004352  0E00               	movlw	0
 11603  004354  6E0C               	movwf	LCD_Custom_Char@i^0,c
 11604  004356                     l5278:
 11605                           
 11606                           ;LCD_caracter.c: 106:            LCD_Char (msg[i]);
 11607  004356  500C               	movf	LCD_Custom_Char@i^0,w,c
 11608  004358  2409               	addwf	LCD_Custom_Char@msg^0,w,c
 11609  00435A  6ED9               	movwf	fsr2l,c
 11610  00435C  0E00               	movlw	0
 11611  00435E  200A               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
 11612  004360  6EDA               	movwf	fsr2h,c
 11613  004362  50DF               	movf	indf2,w,c
 11614  004364  EC4F  F021         	call	_LCD_Char
 11615  004368  2A0C               	incf	LCD_Custom_Char@i^0,f,c
 11616  00436A  0E07               	movlw	7
 11617  00436C  640C               	cpfsgt	LCD_Custom_Char@i^0,c
 11618  00436E  EFBB  F021         	goto	u6021
 11619  004372  EFBD  F021         	goto	u6020
 11620  004376                     u6021:
 11621  004376  EFAB  F021         	goto	l5278
 11622  00437A                     u6020:
 11623  00437A                     l110:
 11624  00437A  0012               	return		;funcret
 11625  00437C                     __end_of_LCD_Custom_Char:
 11626                           	callstack 0
 11627                           
 11628 ;; *************** function _LCD_Command *****************
 11629 ;; Defined at:
 11630 ;;		line 36 in file "LCD_caracter.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;  cmd             1    wreg     unsigned char 
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;  cmd             1    7[COMRAM] unsigned char 
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  1    wreg      void 
 11637 ;; Registers used:
 11638 ;;		wreg, status,2, status,0, cstack
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11644 ;;      Params:         0       0       0       0       0       0       0       0       0
 11645 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11646 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11647 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11648 ;;Total ram usage:        2 bytes
 11649 ;; Hardware stack levels used: 1
 11650 ;; Hardware stack levels required when called: 2
 11651 ;; This function calls:
 11652 ;;		_MSdelay
 11653 ;; This function is called by:
 11654 ;;		_main
 11655 ;;		_LCD_Init
 11656 ;;		_LCD_String_xy
 11657 ;;		_LCD_Clear
 11658 ;;		_LCD_Custom_Char
 11659 ;; This function uses a non-reentrant model
 11660 ;;
 11661                           
 11662                           	psect	text54
 11663  004252                     __ptext54:
 11664                           	callstack 0
 11665  004252                     _LCD_Command:
 11666                           	callstack 26
 11667                           
 11668                           ;incstack = 0
 11669                           ;LCD_Command@cmd stored from wreg
 11670  004252  6E08               	movwf	LCD_Command@cmd^0,c
 11671  004254                     
 11672                           ;LCD_caracter.c: 36: void LCD_Command(unsigned char cmd );LCD_caracter.c: 37: {;LCD_cara
      +                          cter.c: 38:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 11673  004254  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11674  004258  0EF0               	movlw	240
 11675  00425A  1607               	andwf	??_LCD_Command^0,f,c
 11676  00425C  508C               	movf	140,w,c	;volatile
 11677  00425E  0B0F               	andlw	15
 11678  004260  1007               	iorwf	??_LCD_Command^0,w,c
 11679  004262  6E8C               	movwf	140,c	;volatile
 11680  004264                     
 11681                           ;LCD_caracter.c: 39:  LATD0 = 0;
 11682  004264  908C               	bcf	3980,0,c	;volatile
 11683  004266                     
 11684                           ;LCD_caracter.c: 40:  LATD1 = 1;
 11685  004266  828C               	bsf	3980,1,c	;volatile
 11686  004268                     
 11687                           ;LCD_caracter.c: 41:  __nop();
 11688  004268  F000               	nop	
 11689  00426A                     
 11690                           ;LCD_caracter.c: 42:  LATD1 = 0;
 11691  00426A  928C               	bcf	3980,1,c	;volatile
 11692  00426C                     
 11693                           ;LCD_caracter.c: 43:  MSdelay(1);
 11694  00426C  0E00               	movlw	0
 11695  00426E  6E02               	movwf	(MSdelay@val+1)^0,c
 11696  004270  0E01               	movlw	1
 11697  004272  6E01               	movwf	MSdelay@val^0,c
 11698  004274  EC75  F021         	call	_MSdelay	;wreg free
 11699  004278                     
 11700                           ;LCD_caracter.c: 44:     LATD = (LATD & 0x0f) | (cmd<<4);
 11701  004278  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11702  00427C  3A07               	swapf	??_LCD_Command^0,f,c
 11703  00427E  0EF0               	movlw	240
 11704  004280  1607               	andwf	??_LCD_Command^0,f,c
 11705  004282  508C               	movf	140,w,c	;volatile
 11706  004284  0B0F               	andlw	15
 11707  004286  1007               	iorwf	??_LCD_Command^0,w,c
 11708  004288  6E8C               	movwf	140,c	;volatile
 11709  00428A                     
 11710                           ;LCD_caracter.c: 45:  LATD1 = 1;
 11711  00428A  828C               	bsf	3980,1,c	;volatile
 11712  00428C                     
 11713                           ;LCD_caracter.c: 46:  __nop();
 11714  00428C  F000               	nop	
 11715  00428E                     
 11716                           ;LCD_caracter.c: 47:  LATD1 = 0;
 11717  00428E  928C               	bcf	3980,1,c	;volatile
 11718                           
 11719                           ;LCD_caracter.c: 48:  MSdelay(3);
 11720  004290  0E00               	movlw	0
 11721  004292  6E02               	movwf	(MSdelay@val+1)^0,c
 11722  004294  0E03               	movlw	3
 11723  004296  6E01               	movwf	MSdelay@val^0,c
 11724  004298  EC75  F021         	call	_MSdelay	;wreg free
 11725  00429C  0012               	return		;funcret
 11726  00429E                     __end_of_LCD_Command:
 11727                           	callstack 0
 11728                           
 11729 ;; *************** function _LCD_Char *****************
 11730 ;; Defined at:
 11731 ;;		line 52 in file "LCD_caracter.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;  dat             1    wreg     unsigned char 
 11734 ;; Auto vars:     Size  Location     Type
 11735 ;;  dat             1    7[COMRAM] unsigned char 
 11736 ;; Return value:  Size  Location     Type
 11737 ;;                  1    wreg      void 
 11738 ;; Registers used:
 11739 ;;		wreg, status,2, status,0, cstack
 11740 ;; Tracked objects:
 11741 ;;		On entry : 0/0
 11742 ;;		On exit  : 0/0
 11743 ;;		Unchanged: 0/0
 11744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11745 ;;      Params:         0       0       0       0       0       0       0       0       0
 11746 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11747 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11748 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11749 ;;Total ram usage:        2 bytes
 11750 ;; Hardware stack levels used: 1
 11751 ;; Hardware stack levels required when called: 2
 11752 ;; This function calls:
 11753 ;;		_MSdelay
 11754 ;; This function is called by:
 11755 ;;		_main
 11756 ;;		_LCD_String
 11757 ;;		_LCD_Custom_Char
 11758 ;; This function uses a non-reentrant model
 11759 ;;
 11760                           
 11761                           	psect	text55
 11762  00429E                     __ptext55:
 11763                           	callstack 0
 11764  00429E                     _LCD_Char:
 11765                           	callstack 25
 11766                           
 11767                           ;incstack = 0
 11768                           ;LCD_Char@dat stored from wreg
 11769  00429E  6E08               	movwf	LCD_Char@dat^0,c
 11770  0042A0                     
 11771                           ;LCD_caracter.c: 52: void LCD_Char(unsigned char dat);LCD_caracter.c: 53: {;LCD_caracter
      +                          .c: 54:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 11772  0042A0  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 11773  0042A4  0EF0               	movlw	240
 11774  0042A6  1607               	andwf	??_LCD_Char^0,f,c
 11775  0042A8  508C               	movf	140,w,c	;volatile
 11776  0042AA  0B0F               	andlw	15
 11777  0042AC  1007               	iorwf	??_LCD_Char^0,w,c
 11778  0042AE  6E8C               	movwf	140,c	;volatile
 11779  0042B0                     
 11780                           ;LCD_caracter.c: 55:  LATD0 = 1;
 11781  0042B0  808C               	bsf	3980,0,c	;volatile
 11782  0042B2                     
 11783                           ;LCD_caracter.c: 56:  LATD1 = 1;
 11784  0042B2  828C               	bsf	3980,1,c	;volatile
 11785  0042B4                     
 11786                           ;LCD_caracter.c: 57:  __nop();
 11787  0042B4  F000               	nop	
 11788  0042B6                     
 11789                           ;LCD_caracter.c: 58:  LATD1 = 0;
 11790  0042B6  928C               	bcf	3980,1,c	;volatile
 11791  0042B8                     
 11792                           ;LCD_caracter.c: 59:  MSdelay(1);
 11793  0042B8  0E00               	movlw	0
 11794  0042BA  6E02               	movwf	(MSdelay@val+1)^0,c
 11795  0042BC  0E01               	movlw	1
 11796  0042BE  6E01               	movwf	MSdelay@val^0,c
 11797  0042C0  EC75  F021         	call	_MSdelay	;wreg free
 11798  0042C4                     
 11799                           ;LCD_caracter.c: 60:     LATD = (LATD & 0x0f) | (dat<<4);
 11800  0042C4  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 11801  0042C8  3A07               	swapf	??_LCD_Char^0,f,c
 11802  0042CA  0EF0               	movlw	240
 11803  0042CC  1607               	andwf	??_LCD_Char^0,f,c
 11804  0042CE  508C               	movf	140,w,c	;volatile
 11805  0042D0  0B0F               	andlw	15
 11806  0042D2  1007               	iorwf	??_LCD_Char^0,w,c
 11807  0042D4  6E8C               	movwf	140,c	;volatile
 11808  0042D6                     
 11809                           ;LCD_caracter.c: 61:  LATD1 = 1;
 11810  0042D6  828C               	bsf	3980,1,c	;volatile
 11811  0042D8                     
 11812                           ;LCD_caracter.c: 62:  __nop();
 11813  0042D8  F000               	nop	
 11814  0042DA                     
 11815                           ;LCD_caracter.c: 63:  LATD1 = 0;
 11816  0042DA  928C               	bcf	3980,1,c	;volatile
 11817                           
 11818                           ;LCD_caracter.c: 64:  MSdelay(3);
 11819  0042DC  0E00               	movlw	0
 11820  0042DE  6E02               	movwf	(MSdelay@val+1)^0,c
 11821  0042E0  0E03               	movlw	3
 11822  0042E2  6E01               	movwf	MSdelay@val^0,c
 11823  0042E4  EC75  F021         	call	_MSdelay	;wreg free
 11824  0042E8  0012               	return		;funcret
 11825  0042EA                     __end_of_LCD_Char:
 11826                           	callstack 0
 11827                           
 11828 ;; *************** function _MSdelay *****************
 11829 ;; Defined at:
 11830 ;;		line 111 in file "LCD_caracter.c"
 11831 ;; Parameters:    Size  Location     Type
 11832 ;;  val             2    0[COMRAM] unsigned int 
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;  j               2    4[COMRAM] unsigned int 
 11835 ;;  i               2    2[COMRAM] unsigned int 
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  1    wreg      void 
 11838 ;; Registers used:
 11839 ;;		wreg, status,2, status,0
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11845 ;;      Params:         2       0       0       0       0       0       0       0       0
 11846 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11847 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11848 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11849 ;;Total ram usage:        6 bytes
 11850 ;; Hardware stack levels used: 1
 11851 ;; Hardware stack levels required when called: 1
 11852 ;; This function calls:
 11853 ;;		Nothing
 11854 ;; This function is called by:
 11855 ;;		_main
 11856 ;;		_LCD_Init
 11857 ;;		_LCD_Command
 11858 ;;		_LCD_Char
 11859 ;;		_LCD_Clear
 11860 ;;		_RTC_Calendario
 11861 ;; This function uses a non-reentrant model
 11862 ;;
 11863                           
 11864                           	psect	text56
 11865  0042EA                     __ptext56:
 11866                           	callstack 0
 11867  0042EA                     _MSdelay:
 11868                           	callstack 28
 11869  0042EA                     
 11870                           ;LCD_caracter.c: 111: void MSdelay(unsigned int val);LCD_caracter.c: 112: {;LCD_caracter
      +                          .c: 113:  unsigned int i,j;;LCD_caracter.c: 114:  for(i=0;i<val;i++)
 11871  0042EA  0E00               	movlw	0
 11872  0042EC  6E04               	movwf	(MSdelay@i+1)^0,c
 11873  0042EE  0E00               	movlw	0
 11874  0042F0  6E03               	movwf	MSdelay@i^0,c
 11875  0042F2  EF8E  F021         	goto	l4308
 11876  0042F6                     l4296:
 11877                           
 11878                           ;LCD_caracter.c: 115:      for(j=0;j<165;j++);
 11879  0042F6  0E00               	movlw	0
 11880  0042F8  6E06               	movwf	(MSdelay@j+1)^0,c
 11881  0042FA  0E00               	movlw	0
 11882  0042FC  6E05               	movwf	MSdelay@j^0,c
 11883  0042FE                     l4302:
 11884  0042FE  4A05               	infsnz	MSdelay@j^0,f,c
 11885  004300  2A06               	incf	(MSdelay@j+1)^0,f,c
 11886  004302  5006               	movf	(MSdelay@j+1)^0,w,c
 11887  004304  E109               	bnz	u4650
 11888  004306  0EA5               	movlw	165
 11889  004308  5C05               	subwf	MSdelay@j^0,w,c
 11890  00430A  A0D8               	btfss	status,0,c
 11891  00430C  EF8A  F021         	goto	u4651
 11892  004310  EF8C  F021         	goto	u4650
 11893  004314                     u4651:
 11894  004314  EF7F  F021         	goto	l4302
 11895  004318                     u4650:
 11896  004318  4A03               	infsnz	MSdelay@i^0,f,c
 11897  00431A  2A04               	incf	(MSdelay@i+1)^0,f,c
 11898  00431C                     l4308:
 11899  00431C  5001               	movf	MSdelay@val^0,w,c
 11900  00431E  5C03               	subwf	MSdelay@i^0,w,c
 11901  004320  5002               	movf	(MSdelay@val+1)^0,w,c
 11902  004322  5804               	subwfb	(MSdelay@i+1)^0,w,c
 11903  004324  A0D8               	btfss	status,0,c
 11904  004326  EF97  F021         	goto	u4661
 11905  00432A  EF99  F021         	goto	u4660
 11906  00432E                     u4661:
 11907  00432E  EF7B  F021         	goto	l4296
 11908  004332                     u4660:
 11909  004332  0012               	return		;funcret
 11910  004334                     __end_of_MSdelay:
 11911                           	callstack 0
 11912                           
 11913 ;; *************** function _ISR *****************
 11914 ;; Defined at:
 11915 ;;		line 143 in file "Melodia2.c"
 11916 ;; Parameters:    Size  Location     Type
 11917 ;;		None
 11918 ;; Auto vars:     Size  Location     Type
 11919 ;;		None
 11920 ;; Return value:  Size  Location     Type
 11921 ;;                  1    wreg      void 
 11922 ;; Registers used:
 11923 ;;		wreg, status,2
 11924 ;; Tracked objects:
 11925 ;;		On entry : 0/0
 11926 ;;		On exit  : 0/0
 11927 ;;		Unchanged: 0/0
 11928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11929 ;;      Params:         0       0       0       0       0       0       0       0       0
 11930 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11931 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11932 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11933 ;;Total ram usage:        0 bytes
 11934 ;; Hardware stack levels used: 1
 11935 ;; This function calls:
 11936 ;;		Nothing
 11937 ;; This function is called by:
 11938 ;;		Interrupt level 2
 11939 ;; This function uses a non-reentrant model
 11940 ;;
 11941                           
 11942                           	psect	intcode
 11943  000008                     __pintcode:
 11944                           	callstack 0
 11945  000008                     _ISR:
 11946                           	callstack 21
 11947                           
 11948                           ;incstack = 0
 11949  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11950  00000A  EDA9  F023         	call	int_func,f	;refresh shadow registers
 11951                           
 11952                           	psect	intcode_body
 11953  004752                     __pintcode_body:
 11954                           	callstack 21
 11955  004752                     int_func:
 11956                           	callstack 21
 11957  004752  0006               	pop		; remove dummy address from shadow register refresh
 11958  004754                     
 11959                           ;Melodia2.c: 145:     if ( PIR1bits.TMR1IF == 1 )
 11960  004754  A09E               	btfss	158,0,c	;volatile
 11961  004756  EFAF  F023         	goto	i2u307_41
 11962  00475A  EFB1  F023         	goto	i2u307_40
 11963  00475E                     i2u307_41:
 11964  00475E  EFB6  F023         	goto	i2l221
 11965  004762                     i2u307_40:
 11966  004762                     
 11967                           ;Melodia2.c: 146:     {;Melodia2.c: 147:         PIR1bits.TMR1IF = 0;
 11968  004762  909E               	bcf	158,0,c	;volatile
 11969  004764                     
 11970                           ;Melodia2.c: 149:         TMR1H = 0xCF;
 11971  004764  0ECF               	movlw	207
 11972  004766  6ECF               	movwf	207,c	;volatile
 11973                           
 11974                           ;Melodia2.c: 150:         TMR1L = 0x2C;
 11975  004768  0E2C               	movlw	44
 11976  00476A  6ECE               	movwf	206,c	;volatile
 11977  00476C                     i2l221:
 11978  00476C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11979  00476E  0011               	retfie		f
 11980  004770                     __end_of_ISR:
 11981                           	callstack 0
 11982                           
 11983                           	psect	rparam
 11984  0000                     
 11985                           	psect	temp
 11986  00005F                     btemp:
 11987                           	callstack 0
 11988  00005F                     	ds	1
 11989  0000                     int$flags	set	btemp
 11990  0000                     wtemp8	set	btemp+1
 11991  0000                     ttemp5	set	btemp+1
 11992  0000                     ttemp6	set	btemp+4
 11993  0000                     ttemp7	set	btemp+8
 11994                           
 11995                           	psect	idloc
 11996                           
 11997                           ;Config register IDLOC0 @ 0x200000
 11998                           ;	unspecified, using default values
 11999  200000                     	org	2097152
 12000  200000  FF                 	db	255
 12001                           
 12002                           ;Config register IDLOC1 @ 0x200001
 12003                           ;	unspecified, using default values
 12004  200001                     	org	2097153
 12005  200001  FF                 	db	255
 12006                           
 12007                           ;Config register IDLOC2 @ 0x200002
 12008                           ;	unspecified, using default values
 12009  200002                     	org	2097154
 12010  200002  FF                 	db	255
 12011                           
 12012                           ;Config register IDLOC3 @ 0x200003
 12013                           ;	unspecified, using default values
 12014  200003                     	org	2097155
 12015  200003  FF                 	db	255
 12016                           
 12017                           ;Config register IDLOC4 @ 0x200004
 12018                           ;	unspecified, using default values
 12019  200004                     	org	2097156
 12020  200004  FF                 	db	255
 12021                           
 12022                           ;Config register IDLOC5 @ 0x200005
 12023                           ;	unspecified, using default values
 12024  200005                     	org	2097157
 12025  200005  FF                 	db	255
 12026                           
 12027                           ;Config register IDLOC6 @ 0x200006
 12028                           ;	unspecified, using default values
 12029  200006                     	org	2097158
 12030  200006  FF                 	db	255
 12031                           
 12032                           ;Config register IDLOC7 @ 0x200007
 12033                           ;	unspecified, using default values
 12034  200007                     	org	2097159
 12035  200007  FF                 	db	255
 12036                           
 12037                           	psect	config
 12038                           
 12039                           ;Config register CONFIG1L @ 0x300000
 12040                           ;	PLL Prescaler Selection bits
 12041                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12042                           ;	System Clock Postscaler Selection bits
 12043                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12044                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12045                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12046  300000                     	org	3145728
 12047  300000  00                 	db	0
 12048                           
 12049                           ;Config register CONFIG1H @ 0x300001
 12050                           ;	Oscillator Selection bits
 12051                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12052                           ;	Fail-Safe Clock Monitor Enable bit
 12053                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12054                           ;	Internal/External Oscillator Switchover bit
 12055                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12056  300001                     	org	3145729
 12057  300001  09                 	db	9
 12058                           
 12059                           ;Config register CONFIG2L @ 0x300002
 12060                           ;	Power-up Timer Enable bit
 12061                           ;	PWRT = ON, PWRT enabled
 12062                           ;	Brown-out Reset Enable bits
 12063                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12064                           ;	Brown-out Reset Voltage bits
 12065                           ;	BORV = 3, Minimum setting 2.05V
 12066                           ;	USB Voltage Regulator Enable bit
 12067                           ;	VREGEN = OFF, USB voltage regulator disabled
 12068  300002                     	org	3145730
 12069  300002  18                 	db	24
 12070                           
 12071                           ;Config register CONFIG2H @ 0x300003
 12072                           ;	Watchdog Timer Enable bit
 12073                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12074                           ;	Watchdog Timer Postscale Select bits
 12075                           ;	WDTPS = 32768, 1:32768
 12076  300003                     	org	3145731
 12077  300003  1E                 	db	30
 12078                           
 12079                           ; Padding undefined space
 12080  300004                     	org	3145732
 12081  300004  FF                 	db	255
 12082                           
 12083                           ;Config register CONFIG3H @ 0x300005
 12084                           ;	CCP2 MUX bit
 12085                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12086                           ;	PORTB A/D Enable bit
 12087                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12088                           ;	Low-Power Timer 1 Oscillator Enable bit
 12089                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12090                           ;	MCLR Pin Enable bit
 12091                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12092  300005                     	org	3145733
 12093  300005  81                 	db	129
 12094                           
 12095                           ;Config register CONFIG4L @ 0x300006
 12096                           ;	Stack Full/Underflow Reset Enable bit
 12097                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12098                           ;	Single-Supply ICSP Enable bit
 12099                           ;	LVP = OFF, Single-Supply ICSP disabled
 12100                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12101                           ;	ICPRT = OFF, ICPORT disabled
 12102                           ;	Extended Instruction Set Enable bit
 12103                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12104                           ;	Background Debugger Enable bit
 12105                           ;	DEBUG = 0x1, unprogrammed default
 12106  300006                     	org	3145734
 12107  300006  80                 	db	128
 12108                           
 12109                           ; Padding undefined space
 12110  300007                     	org	3145735
 12111  300007  FF                 	db	255
 12112                           
 12113                           ;Config register CONFIG5L @ 0x300008
 12114                           ;	Code Protection bit
 12115                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12116                           ;	Code Protection bit
 12117                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12118                           ;	Code Protection bit
 12119                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12120                           ;	Code Protection bit
 12121                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12122  300008                     	org	3145736
 12123  300008  0F                 	db	15
 12124                           
 12125                           ;Config register CONFIG5H @ 0x300009
 12126                           ;	Boot Block Code Protection bit
 12127                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12128                           ;	Data EEPROM Code Protection bit
 12129                           ;	CPD = OFF, Data EEPROM is not code-protected
 12130  300009                     	org	3145737
 12131  300009  C0                 	db	192
 12132                           
 12133                           ;Config register CONFIG6L @ 0x30000A
 12134                           ;	Write Protection bit
 12135                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12136                           ;	Write Protection bit
 12137                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12138                           ;	Write Protection bit
 12139                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12140                           ;	Write Protection bit
 12141                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12142  30000A                     	org	3145738
 12143  30000A  0F                 	db	15
 12144                           
 12145                           ;Config register CONFIG6H @ 0x30000B
 12146                           ;	Configuration Register Write Protection bit
 12147                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12148                           ;	Boot Block Write Protection bit
 12149                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12150                           ;	Data EEPROM Write Protection bit
 12151                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12152  30000B                     	org	3145739
 12153  30000B  E0                 	db	224
 12154                           
 12155                           ;Config register CONFIG7L @ 0x30000C
 12156                           ;	Table Read Protection bit
 12157                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12158                           ;	Table Read Protection bit
 12159                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12160                           ;	Table Read Protection bit
 12161                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12162                           ;	Table Read Protection bit
 12163                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12164  30000C                     	org	3145740
 12165  30000C  0F                 	db	15
 12166                           
 12167                           ;Config register CONFIG7H @ 0x30000D
 12168                           ;	Boot Block Table Read Protection bit
 12169                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12170  30000D                     	org	3145741
 12171  30000D  40                 	db	64
 12172                           tosu	equ	0xFFF
 12173                           tosh	equ	0xFFE
 12174                           tosl	equ	0xFFD
 12175                           stkptr	equ	0xFFC
 12176                           pclatu	equ	0xFFB
 12177                           pclath	equ	0xFFA
 12178                           pcl	equ	0xFF9
 12179                           tblptru	equ	0xFF8
 12180                           tblptrh	equ	0xFF7
 12181                           tblptrl	equ	0xFF6
 12182                           tablat	equ	0xFF5
 12183                           prodh	equ	0xFF4
 12184                           prodl	equ	0xFF3
 12185                           indf0	equ	0xFEF
 12186                           postinc0	equ	0xFEE
 12187                           postdec0	equ	0xFED
 12188                           preinc0	equ	0xFEC
 12189                           plusw0	equ	0xFEB
 12190                           fsr0h	equ	0xFEA
 12191                           fsr0l	equ	0xFE9
 12192                           wreg	equ	0xFE8
 12193                           indf1	equ	0xFE7
 12194                           postinc1	equ	0xFE6
 12195                           postdec1	equ	0xFE5
 12196                           preinc1	equ	0xFE4
 12197                           plusw1	equ	0xFE3
 12198                           fsr1h	equ	0xFE2
 12199                           fsr1l	equ	0xFE1
 12200                           bsr	equ	0xFE0
 12201                           indf2	equ	0xFDF
 12202                           postinc2	equ	0xFDE
 12203                           postdec2	equ	0xFDD
 12204                           preinc2	equ	0xFDC
 12205                           plusw2	equ	0xFDB
 12206                           fsr2h	equ	0xFDA
 12207                           fsr2l	equ	0xFD9
 12208                           status	equ	0xFD8

Data Sizes:
    Strings     86
    Constant    0
    Data        31
    BSS         167
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    133     158
    BANK1           256     69     242
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1512_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character3(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> Stemp(BANK1[20]), STR_1(CODE[14]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), RTC_Calendario@year(BANK1[10]), 
		 -> RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), 
		 -> RTC_Calendario@secs(BANK1[10]), STR_6(CODE[3]), STR_5(CODE[3]), Stemp(BANK1[20]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___flsub
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_MSdelay
    _LCD_Char->_MSdelay

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RTC_Calendario
    _ReadADC->___fltol
    _RTC_Calendario->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_RTC_Calendario

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  113883
                                            129 BANK0      4     4      0
                           _I2C_Init
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                    _LCD_Custom_Char
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                     _RTC_Calendario
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ReadLUZ                                              6     4      2      46
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              6     4      2    8609
                                              2 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              6 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendario                                      72    72      0   50516
                                            126 BANK0      3     3      0
                                              0 BANK1     69    69      0
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   38295
                                            110 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   36264
                                            102 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   35876
                                             70 BANK0     32    26      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5327
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   24672
                                              2 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             70 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             86 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             86 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             70 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    2310
                                             45 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             45 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    4556
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    2081
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1900
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1900
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Custom_Char                                      4     2      2    2306
                                              8 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     972
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0     972
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     928
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _LCD_Char
     _MSdelay
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Command
   _LCD_Custom_Char
     _LCD_Char
     _LCD_Command
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _MSdelay
   _RTC_Calendario
     _I2C_Init
     _I2C_Stop
     _LCD_Clear
     _LCD_Init
     _LCD_String
     _LCD_String_xy
     _MSdelay
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ReadLUZ (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _ReadADC
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _ReadLUZ
   ___flge
   ___xxtofl
   _sprintf

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EE      20        0.0%
DATA                 0      0     1EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 30 14:49:23 2021

                          ___fldiv@aexp 0046                            ___fldiv@bexp 0045  
                                     _i 00FD                      __size_of_I2C_Ready 0012  
                          ___fldiv@sign 003E                      __size_of_I2C_Start 002E  
                          ?_LCD_Command 0001                             _SSPSTATbits 000FC7  
                    __size_of_I2C_Write 0022                                      l90 42E8  
                                    l84 468C                                      l87 429C  
                                    l96 40F6                            ___awdiv@sign 0006  
                   ___wmul@multiplicand 0003                             ?_LCD_String 0009  
                       _LCD_Custom_Char 4334  RTC_Read_Calendar@read_calendar_address 0004  
                                   l101 44D0                                     l110 437A  
                                   l104 47D8                                     l118 4332  
                                   l142 38CC                                     l144 38DA  
                                   l401 47B0                                     l145 3990  
                                   l170 3F78                                     l340 4540  
                                   l404 470E                                     l341 4546  
                                   l350 47EA                                     l167 3F50  
                                   l344 4788                                     l336 4512  
                                   l264 444C                                     l169 3F5E  
                                   l338 4520                                     l347 47DA  
                                   l371 46C0                                     l267 41AC  
                                   l364 4692                                     l380 478C  
                                   l349 47E8                                     l373 46CE  
                                   l701 378E                                     l366 46A0  
                                   l382 479A                                     l375 46E8  
                                   l279 2E56                                     l392 47B6  
                                   l368 46BA                                     l384 479C  
                                   l395 47C4                                     l635 3DB8  
                                   l388 4730                                     l398 47A2  
                                   l663 3F12                                     l648 3E68  
                                   l674 3892                                     l932 1CAC  
                                   l669 384C                                     l941 1F7C  
                                   l933 1C9A                                     l678 45EE  
                                   l934 1C60                                     l949 1DC6  
                                   l958 1E96                                     l974 4406  
                                   l991 2920                                     l959 1E84  
                                   l986 2AFC                                     l988 295C  
                                   l997 29A2                                     l999 2A1A  
                                   _PEN 007E2A                                     _ISR 0008  
                                   _Day 0122                         __end_of_I2C_Ack 47C6  
                                   _pad 3C30                                     _min 0126  
                                   _sec 0128                                     _luz 00ED  
                          ___awmod@sign 0006                                     wreg 000FE8  
                          ___flmul@aexp 0026                            ___flmul@bexp 0027  
                          ___flmul@sign 0021                            ___flmul@temp 002C  
                          ___flmul@prod 0028                                    ?_ISR 0001  
                           LCD_Char@dat 0008                            ___fltol@exp1 0061  
                                  l1000 2A08                                    l1022 23A6  
                                  l1025 2238                                    l1018 2042  
                                  l1130 3CB8                                    l1035 2368  
                                  l1027 22B0                                    l1028 229E  
                                  l1132 3CF4                                    l1300 3FD2  
                                  l1301 3FDA                                    l1150 14AE  
                                  l1230 2E90                                    l1062 34F6  
                                  l1311 3A8E                                    l1127 3C76  
                                  l1232 2E98                                    l1073 348E  
                                  l1402 4490                                    l1082 41FE  
                                  l1066 3432                                    l1411 4152  
                                  l1059 339A                                    l1340 367E  
                                  l1405 47EC                                    l1421 3B64  
                                  l1253 30CC                                    l1343 3686  
                                  l1431 4032                                    l1255 3130  
                                  l1239 2F2E                                    l1352 3286  
                                  l1168 0C44                                    l1417 465C  
                                  l4010 3CFA                                    l4002 43C2  
                                  l1291 191C                                    l4020 3D2A  
                                  l4012 3D08                                    l4100 3F10  
                                  l4004 43D2                                    l1436 403A  
                                  l1196 1084                                    l1444 4090  
                                  l1284 1ABC                                    l1365 4626  
                                  l1373 4250                                    l1349 3342  
                                  l1269 15A2                                    l4030 3D58  
                                  l4022 3D2E                                    l4014 3D10  
                                  l4110 37FC                                    l1359 450C  
                                  l1455 457E                                    l5000 4770  
                                  l4040 3D8C                                    l4032 3D66  
                                  l4024 3D36                                    l4016 3D14  
                                  l4008 3CF6                                    l4120 388A  
                                  l4112 380C                                    l4104 3790  
                                  l4200 3992                                    l1449 4098  
                                  l5002 4774                                    l5010 4662  
                                  l4042 3D92                                    l4034 3D6C  
                                  l4026 3D48                                    l4018 3D22  
                                  l4122 3890                                    l4114 381A  
                                  l4106 37BE                                    l4130 45DE  
                                  l4202 39B2                                    l1394 3C2E  
                                  l1379 45B6                                    l5004 4784  
                                  l5020 4686                                    l5012 466E  
                                  l4036 3D82                                    l4028 3D50  
                                  l4044 3D98                                    l4060 3DD8  
                                  l4052 3DBA                                    l4116 382C  
                                  l4108 37CE                                    l3500 1ABE  
                                  l4140 36B4                                    l4204 39F0  
                                  l4212 3A30                                    l5100 349C  
                                  l4302 42FE                                    l5006 4786  
                                  l5014 4674                                    l5030 44B6  
                                  l5022 4494                                    l4310 47DA  
                                  l4046 3DA8                                    l4038 3D8A  
                                  l4070 3E10                                    l4062 3DE6  
                                  l4054 3DBE                                    l4118 383A  
                                  l4126 45B8                                    l3510 1AFA  
                                  l3502 1ACA                                    l4150 3702  
                                  l4142 36DE                                    l4134 3688  
                                  l4214 3A42                                    l4206 3A18  
                                  l4222 40F8                                    l4230 4012  
                                  l5110 34E4                                    l5102 349E  
                                  l4304 4302                                    l5016 467A  
                                  l5008 465E                                    l5032 44BE  
                                  l5024 4494                                    l4048 3DB0  
                                  l4072 3E1E                                    l4080 3E48  
                                  l4064 3DEE                                    l4056 3DCC  
                                  l4128 45CE                                    l3600 1CBA  
                                  l3520 1B2A                                    l3512 1B0A  
                                  l3504 1AD8                                    l4160 372E  
                                  l4144 36E0                                    l4136 36A0  
                                  l4208 3A24                                    l4240 31A8  
                                  l4224 4108                                    l4232 4024  
                                  l4400 0BF2                                    l4320 0888  
                                  l4312 0858                                    l5040 41C0  
                                  l5112 34E6                                    l5104 34A2  
                                  l5120 38C6                                    l4306 4318  
                                  l5018 4680                                    l5034 44C4  
                                  l5026 44A4                                    l5050 440A  
                                  l4082 3E58                                    l4074 3E34  
                                  l4066 3E00                                    l4058 3DD4  
                                  l4090 3E98                                    l3610 1CFC  
                                  l3602 1CCA                                    l3530 1B54  
                                  l3522 1B3C                                    l3514 1B0C  
                                  l3506 1ADA                                    l4170 375E  
                                  l4146 36F0                                    l4218 3A86  
                                  l4250 3276                                    l4242 31BC  
                                  l4226 3FDC                                    l4402 0C04  
                                  l4410 0C50                                    l4330 08DE  
                                  l4322 08AC                                    l4314 0862  
                                  l5042 41C8                                    l5210 2D38  
                                  l5202 2CF2                                    l5106 34C6  
                                  l5130 3988                                    l5122 38C8  
                                  l4308 431C                                    l5036 47C6  
                                  l5028 44AC                                    l5060 4168  
                                  l5052 441C                                    l4084 3E60  
                                  l4076 3E3C                                    l4068 3E08  
                                  l4092 3EA8                                    l3620 1D2A  
                                  l3612 1D0A                                    l3532 1B64  
                                  l3540 1B8E                                    l3524 1B3E  
                                  l3508 1AEA                                    l3516 1B14  
                                  l4172 376E                                    l4156 371A  
                                  l4148 36F4                                    l4260 3332  
                                  l4244 31CA                                    l4252 32AA  
                                  l4236 3132                                    l4180 3C40  
                                  l4500 1126                                    l4420 0C90  
                                  l4404 0C16                                    l4340 090C  
                                  l4332 08F0                                    l4324 08B6  
                                  l4316 0872                                    l5044 41D0  
                                  l5212 2D56                                    l5204 2CF8  
                                  l5108 34D6                                    l5124 38CA  
                                  l5116 3894                                    l5140 3F4C  
                                  l5300 242C                                    l5062 4178  
                                  l5054 442C                                    l4078 3E42  
                                  l4094 3ED6                                    l3630 1D96  
                                  l3622 1D34                                    l3614 1D16  
                                  l3606 1CDE                                    l3550 1BC6  
                                  l3542 1B9E                                    l3534 1B74  
                                  l3526 1B44                                    l3518 1B24  
                                  l4174 377E                                    l4166 3742  
                                  l4158 3724                                    l4254 32E6  
                                  l4238 3152                                    l3702 444E  
                                  l3710 4628                                    l4190 3C96  
                                  l4182 3C54                                    l4510 116E  
                                  l4502 1138                                    l4430 0CEC  
                                  l4422 0CC6                                    l4406 0C1E  
                                  l4350 0980                                    l4334 08FC  
                                  l4342 0912                                    l4326 08BE  
                                  l4318 0880                                    l5046 41EC  
                                  l5038 41AE                                    l5230 2DA4  
                                  l5214 2D68                                    l5206 2CFC  
                                  l5150 2AFE                                    l5070 3346  
                                  l5126 38E2                                    l5118 3898  
                                  l5142 3F4E                                    l5134 3F14  
                                  l5310 24D2                                    l5302 2430  
                                  l5064 4188                                    l5056 443C  
                                  l3800 28E4                                    l4096 3EE6  
                                  l4088 3E6A                                    l3632 1DA6  
                                  l3616 1D1A                                    l3608 1CEE  
                                  l3624 1D3A                                    l3560 1BDA  
                                  l3552 1BCA                                    l3544 1BB0  
                                  l3536 1B84                                    l3528 1B52  
                                  l4168 374E                                    l4256 32FA  
                                  l4248 323A                                    l3704 445A  
                                  l3712 4634                                    l4192 3C9A  
                                  l4184 3C62                                    l3720 4580  
                                  l4600 141E                                    l4520 11A4  
                                  l4512 117E                                    l4504 1146  
                                  l4440 0D30                                    l4432 0CFE  
                                  l4424 0CCE                                    l4416 0C62  
                                  l4408 0C38                                    l4352 099C  
                                  l4344 0938                                    l4360 09E6  
                                  l4336 0904                                    l4328 08D0  
                                  l4264 44D2                                    l4272 4072  
                                  l5224 2D94                                    l5216 2D74  
                                  l5208 2D1A                                    l5160 2B26  
                                  l5152 2B08                                    l5072 3356  
                                  l5128 38EE                                    l5144 3F64  
                                  l5136 3F18                                    l5320 2524  
                                  l5312 24D8                                    l5304 243C  
                                  l5066 4198                                    l5058 4156  
                                  l3730 4706                                    l4290 424A  
                                  l4282 4200                                    l3810 292A  
                                  l3802 28EC                                    l4098 3F0A  
                                  l3650 1E28                                    l3642 1E00  
                                  l3626 1D60                                    l3634 1DB6  
                                  l3618 1D28                                    l3570 1BEE  
                                  l3562 1BDE                                    l3554 1BCE  
                                  l3546 1BBE                                    l3538 1B86  
                                  l4258 3322                                    l3490 3B8A  
                                  l3706 446C                                    l3714 4638  
                                  l4194 3CC8                                    l4186 3C6E  
                                  l4178 3C30                                    l4610 1478  
                                  l4530 11D8                                    l4522 11A8  
                                  l4514 1182                                    l4506 114E  
                                  l4450 0D7A                                    l4442 0D48  
                                  l4434 0D0C                                    l4418 0C74  
                                  l4426 0CD2                                    l4370 0A70  
                                  l4362 0A0C                                    l4354 09B4  
                                  l4338 0908                                    l4274 4084  
                                  l5242 2DC4                                    l5218 2D84  
                                  l5170 2BBE                                    l5162 2B2A  
                                  l5154 2B1A                                    l5090 341C  
                                  l5082 33D4                                    l5074 3364  
                                  l5146 3F70                                    l5138 3F4A  
                                  l5330 25CC                                    l5322 252A  
                                  l5314 24FE                                    l5306 246E  
                                  l5068 41A8                                    l4284 4204  
                                  l3820 2982                                    l3812 2948  
                                  l3804 28FC                                    l3740 2780  
                                  l3900 201C                                    l3652 1E30  
                                  l3644 1E0A                                    l3636 1DDC  
                                  l3628 1D94                                    l3660 1E54  
                                  l3580 1C02                                    l3572 1BF2  
                                  l3564 1BE2                                    l3556 1BD2  
                                  l3548 1BC2                                    l3492 3B94  
                                  l3708 4470                                    l3716 4650  
                                  l4196 3CDC                                    l4188 3C82  
                                  l4612 1488                                    l4604 1452  
                                  l4540 1276                                    l4532 11DC  
                                  l4524 11AE                                    l4516 1188  
                                  l4508 1160                                    l4452 0D8E  
                                  l4460 0E84                                    l4444 0D5A  
                                  l4436 0D10                                    l4428 0CDA  
                                  l4380 0AA6                                    l4356 09BE  
                                  l4348 096E                                    l3724 4548  
                                  l4268 403C                                    l4620 2E58  
                                  l5236 2DB4                                    l5180 2C2C  
                                  l5172 2BD4                                    l5164 2B36  
                                  l5156 2B1E                                    l5092 3428  
                                  l5084 33DC                                    l5076 33AA  
                                  l5340 264A                                    l5332 25FE  
                                  l5316 2510                                    l5308 24A0  
                                  l5324 2536                                    l4294 42EA  
                                  l5270 4346                                    l4278 45F0  
                                  l4286 4218                                    l4710 35CA  
                                  l4702 3570                                    l3830 29C0  
                                  l3822 2988                                    l3814 294A  
                                  l3806 2910                                    l3742 2790  
                                  l3750 27BA                                    l3734 2764  
                                  l3902 202C                                    l3670 1EA6  
                                  l3662 1E58                                    l3654 1E34  
                                  l3646 1E18                                    l3638 1DEC  
                                  l3590 1C7A                                    l3582 1C2C  
                                  l3574 1BF6                                    l3566 1BE6  
                                  l3558 1BD6                                    l3494 3BB2  
                                  l3486 3B66                                    l4614 148E  
                                  l4606 1464                                    l4550 12D4  
                                  l4518 1194                                    l4526 11B4  
                                  l4534 11E2                                    l4542 127A  
                                  l4470 0F50                                    l4462 0EA2  
                                  l4454 0DF2                                    l4438 0D22  
                                  l4446 0D62                                    l4390 0B70  
                                  l4366 0A42                                    l4630 2EB6  
                                  l4622 2E68                                    l5254 2DE4  
                                  l5262 2DF4                                    l5190 2C82  
                                  l5182 2C4A                                    l5174 2BE6  
                                  l5166 2B3C                                    l5158 2B22  
                                  l5094 3464                                    l5086 33E8  
                                  l5078 33C0                                    l5350 26C6  
                                  l5342 2650                                    l5334 2604  
                                  l5326 2568                                    l5318 251E  
                                  ?_pad 0011                                    l4296 42F6  
                                  l5280 4368                                    l5272 4352  
                                  l3728 46EA                                    l4288 4246  
                                  l4720 3650                                    l4704 3586  
                                  l3840 2A2A                                    l3832 29C4  
                                  l3824 2992                                    l3816 295A  
                                  l3808 291E                                    l3760 27E6  
                                  l3752 27CA                                    l3744 27A0  
                                  l3736 2770                                    l3920 20AE  
                                  l3912 2076                                    l3904 2032  
                                  l3680 1F0C                                    l3672 1EB2  
                                  l3664 1E66                                    l3656 1E44  
                                  l3648 1E1A                                    l3592 1C7E  
                                  l3584 1C48                                    l3576 1BFA  
                                  l3568 1BEA                                    l3496 3BE8  
                                  l3488 3B78                                    l4608 1470  
                                  l4560 1312                                    l4552 12E4  
                                  l4544 1298                                    l4536 123A  
                                  l4528 11C6                                    l4480 1000  
                                  l4472 0F60                                    l4464 0ED6  
                                  l4456 0E4A                                    l4448 0D6A  
                                  l4392 0BA4                                    l4384 0ADC  
                                  l4368 0A54                                    l4640 2EF6  
                                  l4632 2ED6                                    l4624 2E6A  
                                  l4800 1506                                    l5248 2DD4  
                                  l5192 2CA0                                    l5184 2C5C  
                                  l5176 2BF0                                    l5168 2B7E  
                                  l5096 3470                                    l5088 341A  
                                  l5360 2744                                    l5352 26F8  
                                  l5344 2656                                    l5336 262A  
                                  l5328 259A                                    l5282 436A  
                                  l4722 3662                                    l5450 35B4  
                                  l4714 3600                                    l4706 358E  
                                  l3850 2A8C                                    l3842 2A36  
                                  l3834 29D2                                    l3826 29A0  
                                  l3818 296C                                    l3762 27F6  
                                  l3770 2820                                    l3754 27D0  
                                  l3746 27B0                                    l3738 277E  
                                  l3930 20F8                                    l3922 20C6  
                                  l3914 2082                                    l3906 2052  
                                  l3690 1F54                                    l3682 1F1C  
                                  l3674 1EC0                                    l3666 1E7C  
                                  l3658 1E46                                    l3594 1C8C  
                                  l3586 1C58                                    l3578 1BFE  
                                  l4570 1348                                    l4562 1322  
                                  l4554 12E8                                    l4546 12B4  
                                  l4538 126E                                    l4490 1070  
                                  l4482 1034                                    l4474 0F70  
                                  l4466 0F08                                    l4458 0E7E  
                                  l4394 0BAC                                    l4386 0B10  
                                  l4378 0A8C                                    l4730 3ABA  
                                  l4650 2F74                                    l4642 2F12  
                                  l4634 2EDE                                    l4626 2E84  
                                  l4810 1524                                    l4802 1518  
                                  l5194 2CBE                                    l5186 2C68  
                                  l5178 2C0E                                    l5098 347E  
                                  l5362 274A                                    l5354 26FE  
                                  l5338 263C                                    l5346 2662  
                                  l5290 23B8                                    l5268 4336  
                                  l4708 3596                                    l3860 2AEA  
                                  l3852 2AA2                                    l3844 2A44  
                                  l3836 2A00                                    l3828 29B2  
                                  l3780 2862                                    l3772 2830  
                                  l3764 2806                                    l3756 27D6  
                                  l3748 27B2                                    l3940 214E  
                                  l3932 2108                                    l3924 20D2  
                                  l3916 208C                                    l3908 2062  
                                  l3692 1F56                                    l3684 1F3C  
                                  l3676 1EFA                                    l3596 1C8E  
                                  l3588 1C6E                                    l4580 13A4  
                                  l4572 1354                                    l4564 132A  
                                  l4556 12F8                                    l4548 12C6  
                                  l4492 107C                                    l4484 1048  
                                  l4476 0FA4                                    l4468 0F1E  
                                  l4388 0B16                                    l4396 0BDE  
                                  l4740 3B08                                    l4660 2FE4  
                                  l4644 2F22                                    l4636 2EE8  
                                  l4628 2EAE                                    l4900 1A16  
                                  l5196 2CDC                                    l5188 2C78  
                                  l5364 2750                                    l5356 2724  
                                  l5348 2694                                    l5292 23CA  
                                  l5284 23A8                                    l4750 42B0  
                                  l5278 4356                                    l4718 363E  
                                  l3862 2AF0                                    l3854 2ABC  
                                  l3846 2A6E                                    l3774 2846  
                                  l3766 2816                                    l3758 27E4  
                                  l3950 21F2                                    l3942 216A  
                                  l3934 2114                                    l3926 20DE  
                                  l3918 20A2                                    l3694 1F5C  
                                  l3686 1F40                                    l3678 1EFC  
                                  l3598 1C98                                    l4590 13EE  
                                  l4574 135A                                    l4582 13AA  
                                  l4566 1338                                    l4558 130A  
                                  l4494 10A0                                    l4478 0FFA  
                                  l4486 104C                                    l4398 0BEE  
                                  l4742 3B1A                                    l4734 3AC6  
                                  l4670 3088                                    l4662 2FEA  
                                  l4654 2FAE                                    l4638 2EEE  
                                  l4902 1A3A                                    l4910 1A6A  
                                  l4830 15D6                                    l4822 153C  
                                  l4814 152A                                    l4806 151E  
                                  l5446 2E18                                    l5358 2736  
                                  l5294 23CE                                    l5286 23B0  
                                  l4760 42C4                                    l4752 42B2  
                                  l3864 2AF2                                    l3856 2AD8  
                                  l3848 2A72                                    l3792 289A  
                                  l3776 2856                                    l3784 2876  
                                  l3768 2818                                    l3960 2248  
                                  l3952 2200                                    l3944 2176  
                                  l3936 2124                                    l3928 20EC  
                                  l3880 1FAA                                    l3872 1F7E  
                                  l3696 1F6A                                    l3688 1F4E  
                                  l4592 13FA                                    l4584 13BC  
                                  l4576 1380                                    l4568 1340  
                                  l4496 1104                                    l4488 105C  
                                  l4744 3B42                                    l4736 3AD4  
                                  l4728 3A90                                    l4680 30F2  
                                  l4672 30A2                                    l4664 2FF0  
                                  l4656 2FC0                                    l4648 2F62  
                                  l4912 1A78                                    l4904 1A48  
                                  l4840 166A                                    l4832 15DE  
                                  l5448 1562                                    l4824 1590  
                                  l5296 23E0                                    l5288 23B4  
                                  l4762 42D6                                    l4754 42B4  
                                  l4930 4254                                    l4770 4716  
                                  l4690 3510                                    l3858 2ADC  
                                  l3794 28B4                                    l3786 2886  
                                  l3778 285E                                    l3962 2256  
                                  l3954 221E                                    l3946 2192  
                                  l3938 213E                                    l3890 1FE6  
                                  l3882 1FBA                                    l3874 1F8A  
                                  l3698 1F6C                                    l4594 1402  
                                  l4586 13D6                                    l4578 139C  
                                  l4498 1114                                    l4738 3AEC  
                                  l4682 3108                                    l4674 30BC  
                                  l4658 2FD4                                    l4666 304E  
                                  l4906 1A5C                                    l4850 16F4  
                                  l4842 1678                                    l4834 15EC  
                                  l4826 15B0                                    l4818 1530  
                                  l5298 2406                                    l4764 42D8  
                                  l4756 42B6                                    l4748 42A0  
                                  l4940 426C                                    l4932 4264  
                                  l4780 472E                                    l4772 471A  
                                  l4692 3514                                    l3796 28C4  
                                  l3788 2886                                    l3972 22C0  
                                  l3980 2308                                    l3964 225A  
                                  l3956 2228                                    l3948 21BC  
                                  l3892 1FEC                                    l3884 1FCA  
                                  l3876 1F98                                    l4596 1412  
                                  l4588 13DC                                    l4676 30DC  
                                  l4668 306A                                    l4860 178A  
                                  l4852 1704                                    l4836 1610  
                                  l4828 15B2                                    l4916 1A86  
                                  l4766 42DA                                    l4758 42B8  
                                  l4942 4278                                    l4934 4266  
                                  l4950 409A                                    l4774 4728  
                                  l4694 3530                                    l4686 34F8  
                                  l3798 28D4                                    l3990 237C  
                                  l3982 2322                                    l3974 22CC  
                                  l3966 2268                                    l3958 2236  
                                  l3894 1FFA                                    l3886 1FD0  
                                  l3878 1F9A                                    l4598 1418  
                                  l4678 30E2                                    l4918 1AAA  
                                  l4862 17A0                                    l4870 180A  
                                  l4854 1736                                    l4846 16C0  
                                  l4838 164A                                    l4790 14D4  
                                  l4944 428A                                    l4936 4268  
                                  l4952 409E                                    l4784 47B2  
                                  l4768 4712                                    l4696 3566  
                                  l4688 350C                                    l3992 238A  
                                  l3984 2336                                    l3976 22DA  
                                  l3968 2296                                    l3896 1FFC  
                                  l3888 1FE0                                    l4880 18EC  
                                  l4872 1838                                    l4864 17AE  
                                  l4856 1746                                    l4848 16D2  
                                  l4792 14E2                                    l4946 428C  
                                  l4938 426A                                    l4954 40C2  
                                  l4786 479E                                    l4970 46E2  
                                  l4962 46B4                                    l4698 356A  
                                  l3994 238C                                    l3986 2350  
                                  l3978 2304                                    l3898 200C  
                                  l4890 1978                                    l4866 17DE  
                                  l4858 1778                                    l4794 14F4  
                                  l4948 428E                                    l4956 40C6  
                                  l4980 4524                                    l4972 46E8  
                                  l3988 236C                                    l3996 2392  
                                  l4892 198E                                    l4876 18A6  
                                  l4796 14F8                                    l4788 14B0  
                                  l4982 4534                                    l4966 46BE  
                                  l4958 4690                                    l4990 478A  
                                  l3998 2396                                    l4894 199C  
                                  l4878 18B8                                    l4886 1930  
                                  l4798 1504                                    l4984 453C  
                                  l4896 19DA                                    l4888 1954  
                                  l4992 3F7A                                    l4986 4544  
                                  l4978 4510                                    l4994 3F82  
                                  l4996 3F90                                    l4998 3FB6  
                                  STR_1 0801                                    STR_2 080F  
                                  STR_3 080F                                    STR_4 080F  
                                  STR_5 0854                                    STR_6 0851  
                                  STR_7 0826                                    STR_8 082E  
                                  STR_9 082E                                    u3110 3B78  
                                  u3111 3B74                                    u4000 2350  
                                  u3200 1B64                                    u3120 3B8A  
                                  _LATD 000F8C                                    u4001 234C  
                                  u3201 1B60                                    u3121 3B86  
                                  u4010 238A                                    u3210 1B74  
                                  u3130 3BB2                                    u4011 2386  
                                  u3211 1B70                                    u3131 3BAE  
                                  u4020 3D08                                    u4100 3E00  
                                  u3300 1CBA                                    u3220 1BB0  
                                  u3140 3BE8                                    u4021 3D04  
                                  u4101 3DFC                                    u3301 1CB6  
                                  u3221 1BAC                                    u3141 3BE4  
                                  u4030 3D22                                    u4110 3E1E  
                                  u3310 1CCA                                    u3230 1BBE  
                                  u3150 1AD8                                    u4031 3D1E  
                                  u4111 3E1A                                    u3311 1CC6  
                                  u3231 1BBA                                    u3151 1AD4  
                                  u4040 3D48                                    u4120 3E34  
                                  u4200 383A                                    u3400 1E28  
                                  u3320 1CFC                                    u3240 1C2C  
                                  u3160 1AEA                                    u5000 0FFA  
                                  u4041 3D44                                    u4121 3E30  
                                  u4201 3836                                    u3401 1E24  
                                  u3321 1CF8                                    u3241 1C28  
                                  u3161 1AE6                                    u5001 0FF6  
                                  u4050 3D66                                    u4130 3E58  
                                  u4210 388A                                    u3410 1E44  
                                  u3330 1D0A                                    u3250 1C44  
                                  u3170 1AFA                                    u5010 1048  
                                  u4051 3D62                                    u4131 3E54  
                                  u4211 3886                                    u3411 1E40  
                                  u3331 1D06                                    u3251 1C3E  
                                  u3171 1AF6                                    u5011 1044  
                                  u4060 3D82                                    u4140 3E98  
                                  u4220 45CE                                    u3500 1F1C  
                                  u3420 1E54                                    u3340 1D28  
                                  u3260 1C46                                    u3180 1B3C  
                                  u4300 3C40                                    u5100 1298  
                                  u5020 1070                                    u4061 3D7E  
                                  u4141 3E94                                    u4221 45CA  
                                  u3501 1F18                                    u3421 1E50  
                                  u3341 1D24                                    u3181 1B38  
                                  u4301 3C3C                                    u5101 1294  
                                  u5021 106C                                    u4070 3DA8  
                                  u4150 3ED6                                    u3510 1F3C  
                                  u3430 1E66                                    u3350 1D60  
                                  u3270 1C6E                                    u3190 1B52  
                                  u4230 36A0                                    u4310 3C62  
                                  u5110 12B4                                    u5030 1114  
                                  u4071 3DA4                                    u4151 3ED2  
                                  u3511 1F38                                    u3431 1E62  
                                  u3351 1D5C                                    u3271 1C6A  
                                  u3191 1B4E                                    u4231 369C  
                                  u4311 3C5E                                    u5111 12B0  
                                  u5031 1110                                    u4080 3DCC  
                                  u3600 277E                                    u4160 3F0A  
                                  u3520 1F4E                                    u3440 1E7C  
                                  u3360 1DA6                                    u3280 1C8C  
                                  u4240 36D4                                    u4400 3A7E  
                                  u4320 3CB8                                    u5200 144E  
                                  u5120 12C6                                    u5040 1126  
                                  u6000 2BBE                                    u4081 3DC8  
                                  u3601 277A                                    u4161 3F06  
                                  u3521 1F4A                                    u3441 1E78  
                                  u3361 1DA2                                    u3281 1C88  
                                  u4321 3CB4                                    u5121 12C2  
                                  u5041 1122                                    u6001 2BBA  
                                  u6010 4346                                    u4090 3DE6  
                                  u3610 2790                                    u4170 37BE  
                                  u3530 1F6A                                    u3450 1E92  
                                  u3370 1DDC                                    u3290 1CAC  
                                  u4250 3702                                    u4330 3CC8  
                                  u4410 4140                                    u5210 1464  
                                  u5130 12D4                                    u5050 1138  
                                  u6011 4342                                    u4091 3DE2  
                                  u3611 278C                                    u4171 37BA  
                                  u3531 1F66                                    u3451 1E8E  
                                  u3371 1DD8                                    u3291 1CA8  
                                  u4251 36FE                                    u4331 3CC4  
                                  u5211 1460                                    u5131 12D0  
                                  u5051 1134                                    u6020 437A  
                                  u3700 2948                                    u3620 27A0  
                                  u4180 37FC                                    u3460 1EA6  
                                  u3380 1DEC                                    u4260 3716  
                                  u4340 39D2                                    u4500 3236  
                                  u3540 4490                                    u4420 4152  
                                  u5140 130A                                    u5060 1146  
                                  u5300 2FAA                                    u5220 2E68  
                                  u6100 2694                                    u6021 4376  
                                  u3701 2944                                    u3621 279C  
                                  u4181 37F8                                    u3461 1EA2  
                                  u3381 1DE8                                    u4261 3712  
                                  u4245 36CA                                    u4501 3232  
                                  u3541 448C                                    u4421 414E  
                                  u5141 1306                                    u5061 1142  
                                  u5221 2E64                                    u6101 2690  
                                  u3710 296C                                    u3630 27E4  
                                  u4190 381A                                    u3470 1EC0  
                                  u3390 1E18                                    u4270 373E  
                                  u4350 39F0                                    u4510 325A  
                                  u3550 4650                                    u4430 400C  
                                  u5150 1338                                    u5070 1160  
                                  u5310 2FC0                                    u5230 2E84  
                                  u6110 26C6                                    u6030 246E  
                                  u3711 2968                                    u3631 27E0  
                                  u4191 3816                                    u3471 1EBC  
                                  u3391 1E14                                    u4271 373A  
                                  u4351 39EC                                    u3551 464C  
                                  u4431 4006                                    u5151 1334  
                                  u5071 115C                                    u5311 2FBC  
                                  u5231 2E80                                    u6111 26C2  
                                  u6031 246A                                    u5400 3566  
                                  u3800 2A8C                                    u3720 2982  
                                  u3640 27F6                                    u3480 1EFA  
                                  u4280 375E                                    u4360 3A18  
                                  u4520 3276                                    u3560 45B0  
                                  u4440 400E                                    u5160 13BC  
                                  u5080 116E                                    u4600 4084  
                                  u5320 3028                                    u5240 2EAE  
                                  u6120 26F8                                    u6040 24A0  
                                  u5401 3562                                    u3801 2A88  
                                  u3721 297E                                    u3641 27F2  
                                  u3481 1EF6                                    u4281 375A  
                                  u4361 3A14                                    u4345 39C8  
                                  u4521 3272                                    u4417 4136  
                                  u3561 45AA                                    u5161 13B8  
                                  u5081 116A                                    u4601 4080  
                                  u5241 2EAA                                    u6121 26F4  
                                  u6041 249C                                    u4610 4620  
                                  u5410 3582                                    u3810 2ABC  
                                  u3730 29A0                                    u3650 2806  
                                  u3490 1F0C                                    u4290 376E  
                                  u4370 3A42                                    u4530 32CA  
                                  u3570 45B2                                    u4450 4024  
                                  u5170 13D6                                    u5090 11C6  
                                  u5330 306A                                    u5250 2F12  
                                  u6050 24D2                                    u4611 461A  
                                  u5411 357E                                    u3811 2AB8  
                                  u3731 299C                                    u3651 2802  
                                  u3491 1F08                                    u4291 376A  
                                  u4371 3A3E                                    u4515 3250  
                                  u4451 4020                                    u5171 13D2  
                                  u5091 11C2                                    u5331 3066  
                                  u5251 2F0E                                    u6051 24CE  
                                  u4620 4622                                    u5420 3638  
                                  u3820 2AEA                                    u3740 29C0  
                                  u3660 2846                                    u3900 2062  
                                  u4540 32E6                                    u4460 317A  
                                  u5180 13EE                                    u4700 08DE  
                                  u5500 3B42                                    u3580 4578  
                                  u5340 3088                                    u5260 2F5C  
                                  u6060 2568                                    u5421 3632  
                                  u3821 2AE6                                    u3741 29BC  
                                  u3661 2842                                    u3901 205E  
                                  u4541 32E2                                    u5181 13EA  
                                  u4701 08DA                                    u5501 3B3E  
                                  u3581 4572                                    u5341 3084  
                                  u5325 3016                                    u5261 2F56  
                                  u6061 2564                                    u5510 4728  
                                  u4630 4218                                    u5430 363A  
                                  u3750 29D2                                    u3670 2886  
                                  u3910 21DC                                    u3830 1F98  
                                  u4390 3A7C                                    u4550 3322  
                                  u4470 31A8                                    u5190 144C  
                                  u4710 08F0                                    u3590 457A  
                                  u5350 30A2                                    u5270 2F5E  
                                  u6070 259A                                    u5511 4724  
                                  u4631 4214                                    u3751 29CE  
                                  u3671 2882                                    u3831 1F94  
                                  u4391 3A76                                    u4551 331E  
                                  u4535 32C0                                    u4471 31A4  
                                  u5191 1446                                    u4711 08EC  
                                  u5351 309E                                    u6071 2596  
                                  u5520 47C4                                    u4640 4246  
                                  u5440 3650                                    u3760 2A00  
                                  u3680 28FC                                    u3920 2236  
                                  u3840 1FAA                                    u4480 31CA  
                                  u4800 0AD8                                    u4720 0938  
                                  u4560 4506                                    u5360 30BC  
                                  u5280 2F74                                    u5600 16BC  
                                  u6080 25CC                                    u5521 47C0  
                                  u4641 4242                                    u5441 364C  
                                  u3761 29FC                                    u3681 28F8  
                                  u3921 2232                                    u3841 1FA6  
                                  u4385 3A54                                    u4481 31C6  
                                  u4465 3170                                    u4801 0AD4  
                                  u4721 0934                                    u4561 4500  
                                  u5361 30B8                                    u5281 2F70  
                                  u6081 25C8                                    u4650 4318  
                                  u5530 47B0                                    u5450 3662  
                                  u3770 2A16                                    u3690 291E  
                                  u3930 2256                                    u3850 1FBA  
                                  u4810 0B6C                                    u4730 0968  
                                  u4570 4508                                    u5370 30CC  
                                  u5290 2FA8                                    u5610 16D2  
                                  u6090 25FE                                    u4651 4314  
                                  u5531 47AC                                    u5451 365E  
                                  u3771 2A12                                    u3691 291A  
                                  u3931 2252                                    u3915 21D2  
                                  u3851 1FB6                                    u4811 0B68  
                                  u4731 0962                                    u5371 30C8  
                                  u5291 2FA2                                    u5611 16CE  
                                  u6091 25FA                                    u4660 4332  
                                  u3780 2A2A                                    u3940 2268  
                                  u3860 1FFA                                    u4900 0CEC  
                                  u4820 0BDE                                    u4740 096A  
                                  u5460 3ABA                                    u4580 406C  
                                  u5380 30DC                                    u5700 1978  
                                  u5620 1704                                    u5540 14D4  
                                  _RCEN 007E2B                                    u4661 432E  
                                  u3781 2A26                                    u3941 2264  
                                  u3861 1FF6                                    u4901 0CE8  
                                  u4821 0BDA                                    u5461 3AB6  
                                  u4581 4066                                    u5381 30D8  
                                  u5701 1974                                    u5621 1700  
                                  u5541 14D0                                    u4670 47E8  
                                  u5390 3530                                    u3790 2A44  
                                  u3950 2296                                    u3870 200C  
                                  u4910 0CFE                                    u4830 0C04  
                                  u4750 0980                                    u5470 3AEC  
                                  u4590 406E                                    u5710 1A3A  
                                  u5630 1746                                    u5550 15A2  
                                  u4671 47E4                                    u5391 352C  
                                  u3791 2A40                                    u3951 2292  
                                  u3871 2008                                    u4495 31DE  
                                  u4911 0CFA                                    u4831 0C00  
                                  u4751 097C                                    u5471 3AE8  
                                  u5711 1A36                                    u5631 1742  
                                  u5551 159E                                    u5720 40BE  
                                  u5800 4534                                    u3960 22AC  
                                  u3880 201C                                    u4496 31E8  
                                  u4920 0D0C                                    u4840 0C16  
                                  u4760 0A0C                                    u4680 0880  
                                  u5480 3B08                                    u5640 178A  
                                  u5560 15B0                                    u5801 4530  
                                  u3961 22A8                                    u3881 2018  
                                  u4497 31F8                                    u4921 0D08  
                                  u4841 0C12                                    u4761 0A08  
                                  u4681 087C                                    u5481 3B04  
                                  u5641 1786                                    u5561 15AC  
                                  u5730 40E6                                    u5810 479A  
                                  u3970 22C0                                    u3890 2052  
                                  u4930 0D22                                    u4850 0C38  
                                  u4770 0A3C                                    u4690 08D0  
                                  u5490 3B1A                                    u5650 1838  
                                  u5570 15D6                                    u5811 4796  
                                  u3971 22BC                                    u3891 204E  
                                  u4931 0D1E                                    u4851 0C34  
                                  u4771 0A36                                    u4691 08CC  
                                  u5491 3B16                                    u5651 1834  
                                  u5571 15D2                                    u5740 40F6  
                                  u3980 22DA                                    u4940 0D30  
                                  u4860 0C5E                                    u4780 0A3E  
                                  u5660 18A0                                    u5580 1610  
                                  u5820 3FD2                                    u5900 348E  
                                  u5741 40F2                                    u3981 22D6  
                                  u4941 0D2C                                    u4861 0C5A  
                                  u5661 189A                                    u5581 160C  
                                  u5821 3FCE                                    u5901 348A  
                                  u5830 44A4                                    u5750 46A0  
                                  u3990 2322                                    u4950 0D5A  
                                  u4870 0C74                                    u4790 0A54  
                                  u5670 18A2                                    u5590 16BA  
                                  u5910 349C                                    u5727 40B4  
                                  u5831 44A0                                    u5751 469C  
                                  u3991 231E                                    u4951 0D56  
                                  u4871 0C70                                    u4791 0A50  
                                  u5591 16B4                                    u5911 3498  
                                  u5760 46B0                                    u4960 0EA2  
                                  u4880 0C90                                    u5680 18B8  
                                  u5920 34D6                                    u5840 3356  
                                  u5737 40DC                                    u5761 46AC  
                                  u4961 0E9E                                    u4881 0C8C  
                                  u5681 18B4                                    u5921 34D2  
                                  u5841 3352                                    u5770 46CE  
                                  u4970 0F08                                    u4890 0CC6  
                                  u5690 1954                                    u5930 34E4  
                                  u5850 3364                                    u5771 46CA  
                                  u4971 0F04                                    u4891 0CC2  
                                  u5691 1950                                    u5931 34E0  
                                  u5851 3360                                    u5780 46DE  
                                  u4980 0F50                                    u5860 33C0  
                                  u5940 38DA                                    u5781 46DA  
                                  u4981 0F4C                                    u5861 33BC  
                                  u5941 38D6                                    u5790 4520  
                                  u4990 0F60                                    u5870 3416  
                                  u5950 3F5E                                    u5791 451C  
                                  u4991 0F5C                                    u5871 3412  
                                  u5951 3F5A                                    u5880 3460  
                                  u5961 2B12                                    u5881 345C  
                                  u5890 347E                                    u5891 347A  
                                  u5980 2B7E                                    u5981 2B7A  
                                  u5974 2B56                                    u5975 2B50  
                                  u5994 2B96                                    u5995 2B90  
                                  _RSEN 007E29                                    _Date 0120  
                                  _Year 011C                                    _Sluz 0100  
                                  _dbuf 012A                                    _atoi 34F8  
                                  _main 23A8                         ?_RTC_Read_Clock 0001  
                                  _hour 0124                        __end_of_I2C_Nack 47B2  
                    __size_of_LCD_Clear 0014                                    _prec 00F9  
                      __end_of_I2C_Init 478A                                    _temp 0118  
                      __end_of_I2C_Read 4548                                    _nout 00F5  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr2h 000FDA  
                                  fsr0l 000FE9                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                                    btemp 005F  
                                  _xtoa 2E58                        __end_of_I2C_Stop 479E  
                         ___fpclassifyf 3992                                    prodh 000FF4  
                                  prodl 000FF3                                    start 000E  
                       __end_of_MSdelay 4334                         ___fldiv@new_exp 003F  
                         _LCD_String_xy 4492                            _tolower$1827 000D  
                          ___param_bank 000000                         __end_of_ReadADC 3992  
                       __end_of_ReadLUZ 3F7A                                   ??_ISR 0001  
      RTC_Read_Clock@read_clock_address 0004                                   ??_pad 0017  
                      __end_of_LCD_Char 42EA                        __end_of_LCD_Init 468E  
                         ReadADC@result 0066                           ___fltol@sign1 0060  
                                 ?_atoi 0008                         __end_of___fladd 1F7E  
                                 ?_main 0001                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                         __end_of___fldiv 2AFE  
                       __end_of___awdiv 3DBA                         __end_of___flneg 45F0  
                                 STR_10 0826                                   STR_11 082E  
                                 STR_12 082E                                   STR_20 084A  
                                 STR_21 083A                                   STR_13 082A  
                                 STR_14 082A                                   STR_22 0846  
                                 STR_15 0826                                   STR_31 084E  
                                 STR_23 0816                                   STR_16 0842  
                                 STR_24 081E                                   STR_33 084E  
                                 STR_17 083E                                   STR_18 0836  
                                 STR_19 0832                                   STR_27 081A  
                                 STR_28 0822                         __end_of___awmod 3E6A  
                       __end_of___flmul 23A8                         __end_of___flsub 4408  
                       __end_of___fltol 3790                         ___awdiv@divisor 0003  
                                 ?_xtoa 001C                                   _LATD0 007C60  
                                 _LATD1 007C61                                   _LATE0 007C68  
                                 _LATE1 007C69                                   _LATE2 007C6A  
                                 i2l221 476C                         ___awdiv@counter 0005  
                          vfpfcnvrt@fmt 00A8                            vfpfcnvrt@llu 00B0  
                                 _TMR1H 000FCF                                   _TMR1L 000FCE  
                                 _TRISA 000F92                                   _TRISD 000F95  
                                 _SSPIE 007CEB                                   _TRISE 000F96  
                                 _SSPIF 007CF3                                   _Month 011E  
                                 _Stemp 017A                                   _flags 00FB  
                                 _fputc 3B66                         __end_of_isalpha 450E  
                                 _fputs 444E                         __end_of_isdigit 4628  
                     __end_of_I2C_Ready 47EC                                   atoi@n 0015  
                                 pad@fp 0011                                   atoi@s 0008  
                                 _width 00F7                                   _putch 47EC  
                       __end_of_islower 4580                         __end_of_isspace 4252  
                     __end_of_I2C_Start 46BC                       __end_of_I2C_Write 4732  
                       __end_of_isupper 45B8                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 ttemp5 0060                                   ttemp6 0063  
                                 ttemp7 0067                                   status 000FD8  
                                 wtemp8 0060                     __size_of_LCD_String 005E  
                       __end_of_sprintf 4200                          ?___fpclassifyf 0001  
                       __end_of_tolower 403C                                   xtoa@c 0041  
                                 xtoa@d 001E                                   xtoa@i 003F  
                                 xtoa@n 0037                                   xtoa@p 0033  
                                 xtoa@w 0035                                   xtoa@x 0026  
                       __end_of_strncmp 3B66                         __end_of_toupper 409A  
                        ?_LCD_String_xy 000B                            _toupper$1842 000D  
               __end_of_LCD_Custom_Char 437C                         __initialization 437C  
                          __end_of_atoi 3688                            __end_of_main 2764  
                          __end_of_xtoa 3132                               ??_I2C_Ack 0001  
                                ??_atoi 000A                                  ??_main 005F  
                                ??_xtoa 0027                       __end_of_LCD_Clear 47DA  
                         __activetblptr 000002                                  ?_fputc 0001  
                                ?_fputs 000A                                  _ADRESH 000FC4  
                                _ADRESL 000FC3                        ___awdiv@dividend 0001  
                                ?_putch 0001                        LCD_String_xy@msg 000C  
                      LCD_String_xy@pos 000B                        LCD_String_xy@row 000E  
                             ??_MSdelay 0003                                  i2l3372 4754  
                                i2l3374 4762                                  i2l3376 4764  
                                _OSCCON 000FD3                           vfpfcnvrt@done 00B8  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                      __end_of___xxtofl 34F8                               ??_ReadADC 0064  
                             ??_ReadLUZ 0003                        ??_RTC_Calendario 00DE  
                          vfprintf@cfmt 00CC                                  ___flge 3790  
                                ___fleq 3E6A                               ??___fladd 004F  
                                ___wmul 46EA                               ??___fldiv 0036  
                             ??___awdiv 0005                               ??___flneg 0005  
                             ??___awmod 0005                               ??___flmul 001D  
                             ??___flsub 005F                               ??___fltol 005B  
                                _efgtoa 0858                                  _floorf 3132  
                                clear_0 43A2                                  clear_1 43AE  
                      ___awdiv@quotient 0007                         ___awmod@divisor 0003  
                                isa$std 000001                                  _tempar 00F1  
                       ___awmod@counter 0005                      _I2C_Repeated_Start 46BC  
                                pad@buf 0013                    __size_of_LCD_Command 004C  
                                _strcpy 40F8                                  _strlen 4628  
                                fputc@c 0001                                  fputs@c 000E  
                      LCD_Custom_Char@i 000C                                  fputs@i 000F  
                             ?_I2C_Nack 0001                                  fputs@s 000A  
                             ??_isalpha 0003                               ??_isdigit 0003  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                             ?_I2C_Stop 0001                         ___fpclassifyf@e 0009  
                       ___fpclassifyf@u 000B                         ___fpclassifyf@x 0001  
                             ??_islower 0003                            __mediumconst 0000  
                             ??_isspace 0003                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 3FDC  
                             ??_sprintf 005F                               ??_tolower 0009  
                                xtoa@fp 001C                               ??_strncmp 0007  
                             ??_toupper 0009                              ___flge@ff1 002E  
                            ___flge@ff2 0032                         ??___fpclassifyf 0005  
                          ___xxtofl@arg 0011                            ___xxtofl@exp 0010  
                          ___xxtofl@val 0007                              ___fleq@ff1 0001  
                            ___fleq@ff2 0005                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 43B4  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000E  
                            ___flneg@f1 0001                           ___rparam_used 000001  
                            ___fltol@f1 0057                    ??_I2C_Repeated_Start 0002  
                      ?_LCD_Custom_Char 0009                          __pcstackCOMRAM 0001  
                          __pidataBANK1 4732                           __end_of_fputc 3C30  
                         __end_of_fputs 4492                           __end_of_putch 47EE  
                          ??_LCD_String 000B                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                           ReadLUZ@result 0005  
                      ??_RTC_Read_Clock 0003                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00E5                              __pbssBANK1 0100  
                            ??_LCD_Char 0007                              _character1 01EA  
                            _character2 01E2                              _character3 01DA  
                            ??_LCD_Init 0009                      __end_of_LCD_String 40F8  
                          I2C_Read@flag 0001                                 ?___flge 002E  
                               ?___fleq 0001                          I2C_Read@buffer 0002  
                               ?___wmul 0001                                 ?_efgtoa 0062  
                               ?_floorf 0047                                 _I2C_Ack 47B2  
                               _ACKSTAT 007E2E                                 ?_strcpy 0001  
                               ?_strlen 0001                               ?___xxtofl 0007  
                    __size_of_vfpfcnvrt 060E                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               _MSdelay 42EA                               _I2C_Ready 47DA  
                               _ReadADC 3894                               _I2C_Start 468E  
                               _ReadLUZ 3F14                               _I2C_Write 4710  
                         LCD_String@msg 0009                                 __Hparam 0000  
                               __Lparam 0000                         __size_of___flge 0104  
                       __size_of___fleq 00AA                                 ___fladd 1ABE  
                     _RTC_Read_Calendar 4154                                 ___fldiv 2764  
                               ___awdiv 3CF6                                 ___flneg 45B8  
                               ___awmod 3DBA                                 ___flmul 1F7E  
                               ___flsub 43C2                                 ___fltol 3688  
                       __size_of___wmul 0026                               ?_vfprintf 00C6  
                          __psmallconst 0800                         __size_of_efgtoa 0C58  
                    ?_RTC_Read_Calendar 0001                         __size_of_floorf 0212  
                               __pcinit 437C                                 __ramtop 0800  
                               __ptext0 23A8                                 __ptext1 3F14  
                               __ptext2 3894                                 __ptext3 3344  
                               __ptext4 2AFE                                 __ptext5 41AE  
                               __ptext6 3F7A                                 __ptext7 14B0  
                               __ptext8 2E58                                 __ptext9 403C  
                       __size_of_strcpy 005C                         __size_of_strlen 0036  
                          __size_of_ISR 4768                               _T1CONbits 000FCD  
                          __size_of_pad 00C6                                 _isalpha 44D2  
                               _isdigit 45F0                              ??___xxtofl 000B  
                      ___awmod@dividend 0001                     ??_RTC_Read_Calendar 0003  
                               _islower 4548                                 _isspace 4200  
                               _isupper 4580                                 efgtoa@c 0068  
                               efgtoa@d 0086                                 efgtoa@e 009E  
                               efgtoa@f 0064                                 efgtoa@g 009A  
                               efgtoa@h 0090                                 efgtoa@i 0098  
                               efgtoa@l 0094                                 efgtoa@m 0080  
                               efgtoa@n 00A0                                 efgtoa@p 008A  
                               efgtoa@t 007A                                 efgtoa@u 00A2  
                               efgtoa@w 008C                               _LCD_Clear 47C6  
                               atoi@neg 000E                                 _sprintf 41AE  
                               _tolower 3FDC                                 _strncmp 3A90  
                        __pintcode_body 4752                                 _toupper 403C  
                  end_of_initialization 43B4                                 floorf@e 0055  
                               floorf@m 0051                                 floorf@u 0057  
                               floorf@x 0047                                 fputc@fp 0003  
                        LCD_Command@cmd 0008                           __Lmediumconst 0000  
                               int_func 4752                                 fputs@fp 000C  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 41AE  
                     __end_of_vfpfcnvrt 1ABE                              efgtoa@mode 008F  
                            efgtoa@sign 0088                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005F                                 strcpy@d 0009  
                               strlen@a 0003                                 strcpy@s 0007  
                               strlen@s 0001                             ___fladd@grs 0056  
                         ___xxtofl@sign 000F                               _TRISCbits 000F94  
                            ?_LCD_Clear 0001                       __size_of_I2C_Nack 0014  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 003A  
                           ___fldiv@grs 0041                             ___fldiv@rem 003A  
                     __size_of_I2C_Stop 0014                             ___flmul@grs 0022  
                     __size_of_LCD_Char 004C                       __size_of_LCD_Init 0030  
                         ??_LCD_Command 0007                          __end_of___flge 3894  
                        __end_of___fleq 3F14                             vfpfcnvrt@ap 00AA  
                           vfpfcnvrt@ct 00C2                             vfpfcnvrt@fp 00A6  
                        __end_of___wmul 4710                          __end_of_efgtoa 14B0  
                        __end_of_floorf 3344                              floorf@F527 00E5  
                        __end_of_strcpy 4154                          __end_of_strlen 465E  
                   start_initialization 437C                             __end_of_ISR 4770  
                           __end_of_pad 3CF6    I2C_Repeated_Start@slave_read_address 0002  
                 __end_of___fpclassifyf 3A90                             ??_I2C_Ready 0001  
                           ??_I2C_Start 0002                             ??_I2C_Write 0001  
                 __end_of_LCD_String_xy 44D2              __size_of_RTC_Read_Calendar 005A  
                           vfprintf@fmt 00C8             __size_of_I2C_Repeated_Start 002E  
                              ??___flge 0036                                ??___fleq 0009  
                              ??___wmul 0005                                ??_efgtoa 0069  
                           __pdataBANK1 01D3                                ??_floorf 004B  
                              ?_I2C_Ack 0001                                ??_strcpy 0005  
                              ??_strlen 0003                __size_of_LCD_Custom_Char 0048  
                             ___fladd@a 004B                               ___fladd@b 0047  
              RTC_Calendario@Clock_type 01D1                               ___fldiv@a 0032  
                             ___fldiv@b 002E                 __size_of_RTC_Calendario 035A  
                   __end_of_LCD_Command 429E                               ___flmul@a 0019  
                             ___flmul@b 0015                               ___flsub@a 005B  
                             ___flsub@b 0057                           __pcstackBANK0 0060  
                         __pcstackBANK1 018E                             ??_LCD_Clear 0009  
                     __size_of___xxtofl 01B4                                ?_MSdelay 0001  
                              ?_ReadADC 0062                               _atoi$1723 0010  
                             _atoi$1724 0014                               _atoi$1725 0012  
                              ?_ReadLUZ 0001                             _efgtoa$1653 0072  
                           _efgtoa$1647 006E                             _efgtoa$1648 0070  
                           _efgtoa$1657 0074                             _efgtoa$1658 0076  
                           _efgtoa$1659 0078                               _main$2068 00E1  
                             __pintcode 0008                                ?___fladd 0047  
                              ?___fldiv 002E                                ?___awdiv 0001  
                              ?___flneg 0001                                ?___awmod 0001  
                              ?___flmul 0015                                ?___flsub 0057  
                              ?___fltol 0057                       __size_of_vfprintf 0062  
                           __smallconst 0800                                _I2C_Nack 479E  
                              ?_isalpha 0001                                ?_isdigit 0001  
                              _I2C_Init 4770                                _I2C_Read 450E  
                              _I2C_Stop 478A                                ?_islower 0001  
                              ?_isspace 0001                                ?_isupper 0001  
                 LCD_String_xy@location 000F                                ?_sprintf 00CE  
                              ?_tolower 0007                          __size_of_fputc 00CA  
                        __size_of_fputs 0044                                ?_strncmp 0001  
                              ?_toupper 0007                          __size_of_putch 0002  
                              MSdelay@i 0003                                MSdelay@j 0005  
                              _LCD_Char 429E                                _LCD_Init 465E  
                        ___wmul@product 0005                                _LATCbits 000F8B  
                              _PIE1bits 000F9D                 __size_of_RTC_Read_Clock 0046  
                              i2u307_40 4762                                i2u307_41 475E  
                              _PIR1bits 000F9E                             _LCD_Command 4252  
                             _vfpfcnvrt 14B0                               _xtoa$1670 0031  
                             _xtoa$1669 002F                        __size_of_I2C_Ack 0014  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                       ___wmul@multiplier 0001  
                          _isspace$1763 0007                       ??_LCD_Custom_Char 000B  
                            vfpfcnvrt@c 00C5                              vfpfcnvrt@f 00BE  
                             copy_data0 4390            I2C_Start@slave_write_address 0002  
                      __size_of_MSdelay 004A                        __size_of_ReadADC 00FE  
                      __size_of_ReadLUZ 0066                                __Hrparam 0000  
                            vfprintf@ap 00CA                                __Lrparam 0000  
                            vfprintf@fp 00C6                           I2C_Write@data 0001  
                      __size_of___fladd 04C0                        __size_of___fldiv 039A  
                      __size_of___awdiv 00C4                        __size_of___flneg 0038  
                      __size_of___awmod 00B0                        __size_of___flmul 042A  
                      __size_of___flsub 0046                        __size_of___fltol 0108  
                            ?_vfpfcnvrt 00A6                      ___fpclassifyf@F465 00E9  
                        _RTC_Calendario 2AFE                              sprintf@fmt 00D0  
                              ___xxtofl 3344                        __size_of_isalpha 003C  
                      __size_of_isdigit 0038                        __size_of_islower 0038  
                      __size_of_isspace 0052                                __ptext10 4548  
                              __ptext11 44D2                                __ptext20 3B66  
                              __ptext12 3A90                                __ptext21 47EC  
                              __ptext13 0858                                __ptext30 3E6A  
                              __ptext22 3132                                __ptext14 3FDC  
                              __ptext31 2764                                __ptext23 3992  
                              __ptext15 4580                                __ptext40 478A  
                              __ptext32 3DBA                                __ptext24 3688  
                              __ptext16 40F8                                __ptext41 468E  
                              __ptext33 3CF6                                __ptext25 43C2  
                              __ptext17 3C30                                __ptext50 465E  
                              __ptext42 46BC                                __ptext34 34F8  
                              __ptext26 1ABE                                __ptext18 4628  
                              __ptext51 47C6                                __ptext43 4710  
                              __ptext35 4200                                __ptext27 45B8  
                              __ptext19 444E                                __ptext52 4770  
                              __ptext44 450E                                __ptext36 45F0  
                              __ptext28 1F7E                                __ptext53 4334  
                              __ptext45 47DA                                __ptext37 46EA  
                              __ptext29 3790                                __ptext54 4252  
                              __ptext46 479E                                __ptext38 4408  
                              __ptext55 429E                                __ptext47 47B2  
                              __ptext39 4154                                __ptext56 42EA  
                              __ptext48 4492                                __ptext49 409A  
                      __size_of_isupper 0038                        __size_of_sprintf 0052  
                      __size_of_tolower 0060                              strcpy@dest 0001  
                      __size_of_strncmp 00D6                        __size_of_toupper 005E  
                         __size_of_atoi 0190                           __size_of_main 03BC  
                         __size_of_xtoa 02DA                              MSdelay@val 0001  
                              efgtoa@fp 0062                                efgtoa@ne 007E  
                              efgtoa@pp 007C                                efgtoa@ou 0082  
                              isa$xinst 000000                                int$flags 005F  
                              _vfprintf 3F7A                  __end_of_RTC_Calendario 2E58  
                            _LCD_String 409A                          _vfpfcnvrt$1684 00BA  
                        _vfpfcnvrt$1688 00BC                              _INTCONbits 000FF2  
                              isalpha@c 0001                                isdigit@c 0001  
                    LCD_Custom_Char@loc 000B                      LCD_Custom_Char@msg 0009  
                              intlevel2 0000                               sprintf@ap 00D6  
                              islower@c 0001                                isspace@c 0001  
                             strcpy@src 0003              __end_of_I2C_Repeated_Start 46EA  
                              isupper@c 0001                          _RTC_Read_Clock 4408  
                             strncmp@_l 0001                               strncmp@_r 0003  
                            _OSCCONbits 000FD3                             efgtoa@nmode 008E  
                   RTC_Calendario@F3531 01D3                             ??_vfpfcnvrt 00AC  
                       ?_RTC_Calendario 0001                     RTC_Calendario@AM_PM 01D2  
                           _temperatura 0114                                sprintf@f 00D8  
                              tolower@c 0007                                sprintf@s 00CE  
                __size_of___fpclassifyf 00FE                                strncmp@l 0008  
                              strncmp@n 0005                                strncmp@r 000A  
                              toupper@c 0007                  __size_of_LCD_String_xy 0040  
                   RTC_Calendario@hours 01C7                     RTC_Calendario@month 019F  
                           _SSPCON2bits 000FC5                           ___fladd@signs 0053  
                    RTC_Calendario@date 0195                      RTC_Calendario@days 018E  
                    RTC_Calendario@mins 01BD                      RTC_Calendario@secs 01B3  
                    RTC_Calendario@year 01A9                            ___fladd@aexp 0054  
                          ___fladd@bexp 0055                  __end_of_RTC_Read_Clock 444E  
