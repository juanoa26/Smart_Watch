

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Oct 01 17:13:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82  0000                     
    83                           ; Version 2.20
    84                           ; Generated 12/02/2020 GMT
    85                           ; 
    86                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4550 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK1
   119  0047A2                     __pidataBANK1:
   120                           	callstack 0
   121                           
   122                           ;initializer for RTC_Calendario@F3531
   123  0047A2  53                 	db	83
   124  0047A3  4D                 	db	77
   125  0047A4  54                 	db	84
   126  0047A5  57                 	db	87
   127  0047A6  74                 	db	116
   128  0047A7  46                 	db	70
   129  0047A8  73                 	db	115
   130                           
   131                           ;initializer for _character3
   132  0047A9  00                 	db	0
   133  0047AA  00                 	db	0
   134  0047AB  0E                 	db	14
   135  0047AC  1F                 	db	31
   136  0047AD  0E                 	db	14
   137  0047AE  00                 	db	0
   138  0047AF  00                 	db	0
   139  0047B0  00                 	db	0
   140                           
   141                           ;initializer for _character2
   142  0047B1  15                 	db	21
   143  0047B2  0E                 	db	14
   144  0047B3  11                 	db	17
   145  0047B4  11                 	db	17
   146  0047B5  0E                 	db	14
   147  0047B6  15                 	db	21
   148  0047B7  00                 	db	0
   149  0047B8  00                 	db	0
   150                           
   151                           ;initializer for _character1
   152  0047B9  0E                 	db	14
   153  0047BA  1F                 	db	31
   154  0047BB  1F                 	db	31
   155  0047BC  0E                 	db	14
   156  0047BD  00                 	db	0
   157  0047BE  0A                 	db	10
   158  0047BF  0A                 	db	10
   159  0047C0  00                 	db	0
   160  0000                     _SSPCON2bits	set	4037
   161  0000                     _SSPADD	set	4040
   162  0000                     _SSPCON2	set	4037
   163  0000                     _SSPCON1	set	4038
   164  0000                     _SSPSTAT	set	4039
   165  0000                     _SSPBUF	set	4041
   166  0000                     _SSPSTATbits	set	4039
   167  0000                     _PIE1bits	set	3997
   168  0000                     _PIR1bits	set	3998
   169  0000                     _TMR1L	set	4046
   170  0000                     _TMR1H	set	4047
   171  0000                     _T1CONbits	set	4045
   172  0000                     _TRISDbits	set	3989
   173  0000                     _LATDbits	set	3980
   174  0000                     _INTCONbits	set	4082
   175  0000                     _ADRESL	set	4035
   176  0000                     _ADRESH	set	4036
   177  0000                     _ADCON2bits	set	4032
   178  0000                     _ADCON0bits	set	4034
   179  0000                     _ADCON1bits	set	4033
   180  0000                     _OSCCONbits	set	4051
   181  0000                     _TRISA	set	3986
   182  0000                     _LATD	set	3980
   183  0000                     _TRISD	set	3989
   184  0000                     _TRISE	set	3990
   185  0000                     _OSCCON	set	4051
   186  0000                     _ACKEN	set	32300
   187  0000                     _ACKDT	set	32301
   188  0000                     _PEN	set	32298
   189  0000                     _RSEN	set	32297
   190  0000                     _ACKSTAT	set	32302
   191  0000                     _SSPIF	set	31987
   192  0000                     _SSPIE	set	31979
   193  0000                     _TRISB1	set	31897
   194  0000                     _TRISB0	set	31896
   195  0000                     _RCEN	set	32299
   196  0000                     _LATD1	set	31841
   197  0000                     _LATD0	set	31840
   198  0000                     _LATE2	set	31850
   199  0000                     _LATE1	set	31849
   200  0000                     _LATE0	set	31848
   201                           
   202                           	psect	smallconst
   203  000800                     __psmallconst:
   204                           	callstack 0
   205  000800  00                 	db	0
   206  000801                     STR_1:
   207  000801  20                 	db	32
   208  000802  42                 	db	66	;'B'
   209  000803  75                 	db	117	;'u'
   210  000804  65                 	db	101	;'e'
   211  000805  6E                 	db	110	;'n'
   212  000806  6F                 	db	111	;'o'
   213  000807  73                 	db	115	;'s'
   214  000808  20                 	db	32
   215  000809  44                 	db	68	;'D'
   216  00080A  69                 	db	105	;'i'
   217  00080B  61                 	db	97	;'a'
   218  00080C  73                 	db	115	;'s'
   219  00080D  20                 	db	32
   220  00080E  00                 	db	0
   221  00080F                     STR_2:
   222  00080F  25                 	db	37
   223  000810  30                 	db	48	;'0'
   224  000811  2E                 	db	46
   225  000812  30                 	db	48	;'0'
   226  000813  66                 	db	102	;'f'
   227  000814  43                 	db	67	;'C'
   228  000815  00                 	db	0
   229  000816                     STR_23:
   230  000816  49                 	db	73	;'I'
   231  000817  4E                 	db	78	;'N'
   232  000818  46                 	db	70	;'F'
   233  000819  00                 	db	0
   234  00081A                     STR_27:
   235  00081A  4E                 	db	78	;'N'
   236  00081B  41                 	db	65	;'A'
   237  00081C  4E                 	db	78	;'N'
   238  00081D  00                 	db	0
   239  00081E                     STR_24:
   240  00081E  69                 	db	105	;'i'
   241  00081F  6E                 	db	110	;'n'
   242  000820  66                 	db	102	;'f'
   243  000821  00                 	db	0
   244  000822                     STR_28:
   245  000822  6E                 	db	110	;'n'
   246  000823  61                 	db	97	;'a'
   247  000824  6E                 	db	110	;'n'
   248  000825  00                 	db	0
   249  000826                     STR_7:
   250  000826  25                 	db	37
   251  000827  78                 	db	120	;'x'
   252  000828  20                 	db	32
   253  000829  00                 	db	0
   254  00082A                     STR_13:
   255  00082A  25                 	db	37
   256  00082B  78                 	db	120	;'x'
   257  00082C  2D                 	db	45
   258  00082D  00                 	db	0
   259  00082E                     STR_8:
   260  00082E  25                 	db	37
   261  00082F  78                 	db	120	;'x'
   262  000830  3A                 	db	58	;':'
   263  000831  00                 	db	0
   264  000832                     STR_19:
   265  000832  57                 	db	87	;'W'
   266  000833  65                 	db	101	;'e'
   267  000834  64                 	db	100	;'d'
   268  000835  00                 	db	0
   269  000836                     STR_18:
   270  000836  54                 	db	84	;'T'
   271  000837  75                 	db	117	;'u'
   272  000838  65                 	db	101	;'e'
   273  000839  00                 	db	0
   274  00083A                     STR_21:
   275  00083A  46                 	db	70	;'F'
   276  00083B  72                 	db	114	;'r'
   277  00083C  69                 	db	105	;'i'
   278  00083D  00                 	db	0
   279  00083E                     STR_17:
   280  00083E  4D                 	db	77	;'M'
   281  00083F  6F                 	db	111	;'o'
   282  000840  6E                 	db	110	;'n'
   283  000841  00                 	db	0
   284  000842                     STR_16:
   285  000842  53                 	db	83	;'S'
   286  000843  75                 	db	117	;'u'
   287  000844  6E                 	db	110	;'n'
   288  000845  00                 	db	0
   289  000846                     STR_22:
   290  000846  53                 	db	83	;'S'
   291  000847  61                 	db	97	;'a'
   292  000848  74                 	db	116	;'t'
   293  000849  00                 	db	0
   294  00084A                     STR_20:
   295  00084A  54                 	db	84	;'T'
   296  00084B  68                 	db	104	;'h'
   297  00084C  75                 	db	117	;'u'
   298  00084D  00                 	db	0
   299  00084E                     STR_31:
   300  00084E  6C                 	db	108	;'l'
   301  00084F  66                 	db	102	;'f'
   302  000850  00                 	db	0
   303  000851                     STR_6:
   304  000851  41                 	db	65	;'A'
   305  000852  4D                 	db	77	;'M'
   306  000853  00                 	db	0
   307  000854                     STR_5:
   308  000854  50                 	db	80	;'P'
   309  000855  4D                 	db	77	;'M'
   310  000856  00                 	db	0
   311  000857  00                 	db	0	; dummy byte at the end
   312  0000                     
   313                           ; #config settings
   314                           
   315                           	psect	cinit
   316  0043EC                     __pcinit:
   317                           	callstack 0
   318  0043EC                     start_initialization:
   319                           	callstack 0
   320  0043EC                     __initialization:
   321                           	callstack 0
   322                           
   323                           ; Initialize objects allocated to BANK1 (31 bytes)
   324                           ; load TBLPTR registers with __pidataBANK1
   325  0043EC  0EA2               	movlw	low __pidataBANK1
   326  0043EE  6EF6               	movwf	tblptrl,c
   327  0043F0  0E47               	movlw	high __pidataBANK1
   328  0043F2  6EF7               	movwf	tblptrh,c
   329  0043F4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   330  0043F6  6EF8               	movwf	tblptru,c
   331  0043F8  EE01  F0D3         	lfsr	0,__pdataBANK1
   332  0043FC  EE10 F01F          	lfsr	1,31
   333  004400                     copy_data0:
   334  004400  0009               	tblrd		*+
   335  004402  CFF5 FFEE          	movff	tablat,postinc0
   336  004406  50E5               	movf	postdec1,w,c
   337  004408  50E1               	movf	fsr1l,w,c
   338  00440A  E1FA               	bnz	copy_data0
   339                           
   340                           ; Clear objects allocated to BANK1 (142 bytes)
   341  00440C  EE01  F000         	lfsr	0,__pbssBANK1
   342  004410  0E8E               	movlw	142
   343  004412                     clear_0:
   344  004412  6AEE               	clrf	postinc0,c
   345  004414  06E8               	decf	wreg,f,c
   346  004416  E1FD               	bnz	clear_0
   347                           
   348                           ; Clear objects allocated to BANK0 (25 bytes)
   349  004418  EE00  F0E5         	lfsr	0,__pbssBANK0
   350  00441C  0E19               	movlw	25
   351  00441E                     clear_1:
   352  00441E  6AEE               	clrf	postinc0,c
   353  004420  06E8               	decf	wreg,f,c
   354  004422  E1FD               	bnz	clear_1
   355  004424                     end_of_initialization:
   356                           	callstack 0
   357  004424                     __end_of__initialization:
   358                           	callstack 0
   359  004424  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   360  004426  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   361  004428  0E00               	movlw	low (__Lmediumconst shr (0+16))
   362  00442A  6EF8               	movwf	tblptru,c
   363  00442C  0100               	movlb	0
   364  00442E  EFD4  F011         	goto	_main	;jump to C main() function
   365                           
   366                           	psect	bssBANK0
   367  0000E5                     __pbssBANK0:
   368                           	callstack 0
   369  0000E5                     floorf@F527:
   370                           	callstack 0
   371  0000E5                     	ds	4
   372  0000E9                     ___fpclassifyf@F465:
   373                           	callstack 0
   374  0000E9                     	ds	4
   375  0000ED                     _luz:
   376                           	callstack 0
   377  0000ED                     	ds	4
   378  0000F1                     _tempar:
   379                           	callstack 0
   380  0000F1                     	ds	4
   381  0000F5                     _nout:
   382                           	callstack 0
   383  0000F5                     	ds	2
   384  0000F7                     _width:
   385                           	callstack 0
   386  0000F7                     	ds	2
   387  0000F9                     _prec:
   388                           	callstack 0
   389  0000F9                     	ds	2
   390  0000FB                     _flags:
   391                           	callstack 0
   392  0000FB                     	ds	2
   393  0000FD                     _i:
   394                           	callstack 0
   395  0000FD                     	ds	1
   396                           
   397                           	psect	bssBANK1
   398  000100                     __pbssBANK1:
   399                           	callstack 0
   400  000100                     _Sluz:
   401                           	callstack 0
   402  000100                     	ds	20
   403  000114                     _temperatura:
   404                           	callstack 0
   405  000114                     	ds	4
   406  000118                     _temp:
   407                           	callstack 0
   408  000118                     	ds	4
   409  00011C                     _Year:
   410                           	callstack 0
   411  00011C                     	ds	2
   412  00011E                     _Month:
   413                           	callstack 0
   414  00011E                     	ds	2
   415  000120                     _Date:
   416                           	callstack 0
   417  000120                     	ds	2
   418  000122                     _Day:
   419                           	callstack 0
   420  000122                     	ds	2
   421  000124                     _hour:
   422                           	callstack 0
   423  000124                     	ds	2
   424  000126                     _min:
   425                           	callstack 0
   426  000126                     	ds	2
   427  000128                     _sec:
   428                           	callstack 0
   429  000128                     	ds	2
   430  00012A                     _dbuf:
   431                           	callstack 0
   432  00012A                     	ds	80
   433  00017A                     _Stemp:
   434                           	callstack 0
   435  00017A                     	ds	20
   436                           
   437                           	psect	dataBANK1
   438  0001D3                     __pdataBANK1:
   439                           	callstack 0
   440  0001D3                     RTC_Calendario@F3531:
   441                           	callstack 0
   442  0001D3                     	ds	7
   443  0001DA                     _character3:
   444                           	callstack 0
   445  0001DA                     	ds	8
   446  0001E2                     _character2:
   447                           	callstack 0
   448  0001E2                     	ds	8
   449  0001EA                     _character1:
   450                           	callstack 0
   451  0001EA                     	ds	8
   452                           
   453                           	psect	cstackBANK1
   454  00018E                     __pcstackBANK1:
   455                           	callstack 0
   456  00018E                     RTC_Calendario@days:
   457                           	callstack 0
   458                           
   459                           ; 7 bytes @ 0x0
   460  00018E                     	ds	7
   461  000195                     RTC_Calendario@date:
   462                           	callstack 0
   463                           
   464                           ; 10 bytes @ 0x7
   465  000195                     	ds	10
   466  00019F                     RTC_Calendario@month:
   467                           	callstack 0
   468                           
   469                           ; 10 bytes @ 0x11
   470  00019F                     	ds	10
   471  0001A9                     RTC_Calendario@year:
   472                           	callstack 0
   473                           
   474                           ; 10 bytes @ 0x1B
   475  0001A9                     	ds	10
   476  0001B3                     RTC_Calendario@secs:
   477                           	callstack 0
   478                           
   479                           ; 10 bytes @ 0x25
   480  0001B3                     	ds	10
   481  0001BD                     RTC_Calendario@mins:
   482                           	callstack 0
   483                           
   484                           ; 10 bytes @ 0x2F
   485  0001BD                     	ds	10
   486  0001C7                     RTC_Calendario@hours:
   487                           	callstack 0
   488                           
   489                           ; 10 bytes @ 0x39
   490  0001C7                     	ds	10
   491  0001D1                     RTC_Calendario@Clock_type:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x43
   495  0001D1                     	ds	1
   496  0001D2                     RTC_Calendario@AM_PM:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x44
   500  0001D2                     	ds	1
   501                           
   502                           	psect	cstackBANK0
   503  000060                     __pcstackBANK0:
   504                           	callstack 0
   505  000060                     ___fltol@sign1:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x0
   509  000060                     	ds	1
   510  000061                     ___fltol@exp1:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x1
   514  000061                     	ds	1
   515  000062                     ?_ReadADC:
   516                           	callstack 0
   517  000062                     ?_efgtoa:
   518                           	callstack 0
   519  000062                     efgtoa@fp:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x2
   523  000062                     	ds	2
   524  000064                     ??_ReadADC:
   525  000064                     efgtoa@f:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x4
   529  000064                     	ds	2
   530  000066                     ReadADC@result:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x6
   534  000066                     	ds	2
   535  000068                     efgtoa@c:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x8
   539  000068                     	ds	1
   540  000069                     ??_efgtoa:
   541                           
   542                           ; 1 bytes @ 0x9
   543  000069                     	ds	5
   544  00006E                     _efgtoa$1671:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0xE
   548  00006E                     	ds	2
   549  000070                     _efgtoa$1672:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x10
   553  000070                     	ds	2
   554  000072                     _efgtoa$1677:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x12
   558  000072                     	ds	2
   559  000074                     _efgtoa$1681:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x14
   563  000074                     	ds	2
   564  000076                     _efgtoa$1682:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x16
   568  000076                     	ds	2
   569  000078                     _efgtoa$1683:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x18
   573  000078                     	ds	2
   574  00007A                     efgtoa@t:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x1A
   578  00007A                     	ds	2
   579  00007C                     efgtoa@pp:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x1C
   583  00007C                     	ds	2
   584  00007E                     efgtoa@ne:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x1E
   588  00007E                     	ds	2
   589  000080                     efgtoa@m:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x20
   593  000080                     	ds	2
   594  000082                     efgtoa@ou:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x22
   598  000082                     	ds	4
   599  000086                     efgtoa@d:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x26
   603  000086                     	ds	2
   604  000088                     efgtoa@sign:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x28
   608  000088                     	ds	2
   609  00008A                     efgtoa@p:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x2A
   613  00008A                     	ds	2
   614  00008C                     efgtoa@w:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x2C
   618  00008C                     	ds	2
   619  00008E                     efgtoa@nmode:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x2E
   623  00008E                     	ds	1
   624  00008F                     efgtoa@mode:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x2F
   628  00008F                     	ds	1
   629  000090                     efgtoa@h:
   630                           	callstack 0
   631                           
   632                           ; 4 bytes @ 0x30
   633  000090                     	ds	4
   634  000094                     efgtoa@l:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x34
   638  000094                     	ds	4
   639  000098                     efgtoa@i:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x38
   643  000098                     	ds	2
   644  00009A                     efgtoa@g:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x3A
   648  00009A                     	ds	4
   649  00009E                     efgtoa@e:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x3E
   653  00009E                     	ds	2
   654  0000A0                     efgtoa@n:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x40
   658  0000A0                     	ds	2
   659  0000A2                     efgtoa@u:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x42
   663  0000A2                     	ds	4
   664  0000A6                     ?_vfpfcnvrt:
   665                           	callstack 0
   666  0000A6                     vfpfcnvrt@fp:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x46
   670  0000A6                     	ds	2
   671  0000A8                     vfpfcnvrt@fmt:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x48
   675  0000A8                     	ds	2
   676  0000AA                     vfpfcnvrt@ap:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x4A
   680  0000AA                     	ds	2
   681  0000AC                     ??_vfpfcnvrt:
   682                           
   683                           ; 1 bytes @ 0x4C
   684  0000AC                     	ds	4
   685  0000B0                     vfpfcnvrt@llu:
   686                           	callstack 0
   687                           
   688                           ; 8 bytes @ 0x50
   689  0000B0                     	ds	8
   690  0000B8                     vfpfcnvrt@done:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x58
   694  0000B8                     	ds	2
   695  0000BA                     _vfpfcnvrt$1708:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x5A
   699  0000BA                     	ds	2
   700  0000BC                     _vfpfcnvrt$1712:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x5C
   704  0000BC                     	ds	2
   705  0000BE                     vfpfcnvrt@f:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x5E
   709  0000BE                     	ds	4
   710  0000C2                     vfpfcnvrt@ct:
   711                           	callstack 0
   712                           
   713                           ; 3 bytes @ 0x62
   714  0000C2                     	ds	3
   715  0000C5                     vfpfcnvrt@c:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x65
   719  0000C5                     	ds	1
   720  0000C6                     ?_vfprintf:
   721                           	callstack 0
   722  0000C6                     vfprintf@fp:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x66
   726  0000C6                     	ds	2
   727  0000C8                     vfprintf@fmt:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x68
   731  0000C8                     	ds	2
   732  0000CA                     vfprintf@ap:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x6A
   736  0000CA                     	ds	2
   737  0000CC                     vfprintf@cfmt:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x6C
   741  0000CC                     	ds	2
   742  0000CE                     ?_sprintf:
   743                           	callstack 0
   744  0000CE                     sprintf@s:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x6E
   748  0000CE                     	ds	2
   749  0000D0                     sprintf@fmt:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x70
   753  0000D0                     	ds	6
   754  0000D6                     sprintf@ap:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x76
   758  0000D6                     	ds	2
   759  0000D8                     sprintf@f:
   760                           	callstack 0
   761                           
   762                           ; 6 bytes @ 0x78
   763  0000D8                     	ds	6
   764  0000DE                     ??_RTC_Calendario:
   765                           
   766                           ; 1 bytes @ 0x7E
   767  0000DE                     	ds	3
   768  0000E1                     _main$2089:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x81
   772  0000E1                     	ds	4
   773                           
   774                           	psect	cstackCOMRAM
   775  000001                     __pcstackCOMRAM:
   776                           	callstack 0
   777  000001                     ??_PlayCancion:
   778  000001                     ?_ReadLUZ:
   779                           	callstack 0
   780  000001                     ?_strlen:
   781                           	callstack 0
   782  000001                     ?___fpclassifyf:
   783                           	callstack 0
   784  000001                     ?_isupper:
   785                           	callstack 0
   786  000001                     ?_isalpha:
   787                           	callstack 0
   788  000001                     ?_isdigit:
   789                           	callstack 0
   790  000001                     ?_strncmp:
   791                           	callstack 0
   792  000001                     ?_isspace:
   793                           	callstack 0
   794  000001                     ?_islower:
   795                           	callstack 0
   796  000001                     ?___wmul:
   797                           	callstack 0
   798  000001                     ?___awdiv:
   799                           	callstack 0
   800  000001                     ?___awmod:
   801                           	callstack 0
   802  000001                     ?___flneg:
   803                           	callstack 0
   804  000001                     I2C_Read@flag:
   805                           	callstack 0
   806  000001                     I2C_Write@data:
   807                           	callstack 0
   808  000001                     MSdelay@val:
   809                           	callstack 0
   810  000001                     ___wmul@multiplier:
   811                           	callstack 0
   812  000001                     ___awdiv@dividend:
   813                           	callstack 0
   814  000001                     ___awmod@dividend:
   815                           	callstack 0
   816  000001                     isalpha@c:
   817                           	callstack 0
   818  000001                     isdigit@c:
   819                           	callstack 0
   820  000001                     isspace@c:
   821                           	callstack 0
   822  000001                     isupper@c:
   823                           	callstack 0
   824  000001                     fputc@c:
   825                           	callstack 0
   826  000001                     strcpy@dest:
   827                           	callstack 0
   828  000001                     strlen@s:
   829                           	callstack 0
   830  000001                     strncmp@_l:
   831                           	callstack 0
   832  000001                     islower@c:
   833                           	callstack 0
   834  000001                     ___fleq@ff1:
   835                           	callstack 0
   836  000001                     ___flneg@f1:
   837                           	callstack 0
   838  000001                     ___fpclassifyf@x:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x0
   842  000001                     	ds	1
   843  000002                     PlayCancion@var3seg:
   844                           	callstack 0
   845  000002                     I2C_Read@buffer:
   846                           	callstack 0
   847  000002                     I2C_Start@slave_write_address:
   848                           	callstack 0
   849  000002                     I2C_Repeated_Start@slave_read_address:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x1
   853  000002                     	ds	1
   854  000003                     ??_ReadLUZ:
   855  000003                     ??_isupper:
   856  000003                     ??_isalpha:
   857  000003                     ??_isdigit:
   858  000003                     ??_isspace:
   859  000003                     ??_islower:
   860  000003                     ??_RTC_Read_Clock:
   861  000003                     ??_RTC_Read_Calendar:
   862  000003                     PlayCancion@var3beep:
   863                           	callstack 0
   864  000003                     MSdelay@i:
   865                           	callstack 0
   866  000003                     ___wmul@multiplicand:
   867                           	callstack 0
   868  000003                     ___awdiv@divisor:
   869                           	callstack 0
   870  000003                     ___awmod@divisor:
   871                           	callstack 0
   872  000003                     fputc@fp:
   873                           	callstack 0
   874  000003                     strcpy@src:
   875                           	callstack 0
   876  000003                     strlen@a:
   877                           	callstack 0
   878  000003                     strncmp@_r:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x2
   882  000003                     	ds	1
   883  000004                     RTC_Read_Clock@read_clock_address:
   884                           	callstack 0
   885  000004                     RTC_Read_Calendar@read_calendar_address:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x3
   889  000004                     	ds	1
   890  000005                     ??_fputc:
   891  000005                     ??___fpclassifyf:
   892  000005                     ??_strcpy:
   893  000005                     ___awdiv@counter:
   894                           	callstack 0
   895  000005                     ___awmod@counter:
   896                           	callstack 0
   897  000005                     MSdelay@j:
   898                           	callstack 0
   899  000005                     ReadLUZ@result:
   900                           	callstack 0
   901  000005                     ___wmul@product:
   902                           	callstack 0
   903  000005                     strncmp@n:
   904                           	callstack 0
   905  000005                     ___fleq@ff2:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x4
   909  000005                     	ds	1
   910  000006                     ___awdiv@sign:
   911                           	callstack 0
   912  000006                     ___awmod@sign:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x5
   916  000006                     	ds	1
   917  000007                     ??_LCD_Command:
   918  000007                     ??_LCD_Char:
   919  000007                     ??_strncmp:
   920  000007                     ?_tolower:
   921                           	callstack 0
   922  000007                     ?_toupper:
   923                           	callstack 0
   924  000007                     ?___xxtofl:
   925                           	callstack 0
   926  000007                     _isspace$1787:
   927                           	callstack 0
   928  000007                     ___awdiv@quotient:
   929                           	callstack 0
   930  000007                     strcpy@s:
   931                           	callstack 0
   932  000007                     tolower@c:
   933                           	callstack 0
   934  000007                     toupper@c:
   935                           	callstack 0
   936  000007                     ___xxtofl@val:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x6
   940  000007                     	ds	1
   941  000008                     ?_atoi:
   942                           	callstack 0
   943  000008                     LCD_Command@cmd:
   944                           	callstack 0
   945  000008                     LCD_Char@dat:
   946                           	callstack 0
   947  000008                     atoi@s:
   948                           	callstack 0
   949  000008                     strncmp@l:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x7
   953  000008                     	ds	1
   954  000009                     ??_tolower:
   955  000009                     ??_toupper:
   956  000009                     ??___fleq:
   957  000009                     LCD_String@msg:
   958                           	callstack 0
   959  000009                     LCD_Custom_Char@msg:
   960                           	callstack 0
   961  000009                     ___fpclassifyf@e:
   962                           	callstack 0
   963  000009                     strcpy@d:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x8
   967  000009                     	ds	1
   968  00000A                     ??_atoi:
   969  00000A                     fputs@s:
   970                           	callstack 0
   971  00000A                     strncmp@r:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x9
   975  00000A                     	ds	1
   976  00000B                     ??___xxtofl:
   977  00000B                     LCD_String_xy@pos:
   978                           	callstack 0
   979  00000B                     LCD_Custom_Char@loc:
   980                           	callstack 0
   981  00000B                     ___fpclassifyf@u:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0xA
   985  00000B                     	ds	1
   986  00000C                     LCD_Custom_Char@i:
   987                           	callstack 0
   988  00000C                     LCD_String_xy@msg:
   989                           	callstack 0
   990  00000C                     fputs@fp:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0xB
   994  00000C                     	ds	1
   995  00000D                     _tolower$1851:
   996                           	callstack 0
   997  00000D                     _toupper$1866:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0xC
  1001  00000D                     	ds	1
  1002  00000E                     LCD_String_xy@row:
  1003                           	callstack 0
  1004  00000E                     fputs@c:
  1005                           	callstack 0
  1006  00000E                     atoi@neg:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0xD
  1010  00000E                     	ds	1
  1011  00000F                     LCD_String_xy@location:
  1012                           	callstack 0
  1013  00000F                     ___xxtofl@sign:
  1014                           	callstack 0
  1015  00000F                     fputs@i:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0xE
  1019  00000F                     	ds	1
  1020  000010                     ___xxtofl@exp:
  1021                           	callstack 0
  1022  000010                     _atoi$1747:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0xF
  1026  000010                     	ds	1
  1027  000011                     ?_pad:
  1028                           	callstack 0
  1029  000011                     pad@fp:
  1030                           	callstack 0
  1031  000011                     ___xxtofl@arg:
  1032                           	callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x10
  1035  000011                     	ds	1
  1036  000012                     _atoi$1749:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x11
  1040  000012                     	ds	1
  1041  000013                     pad@buf:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x12
  1045  000013                     	ds	1
  1046  000014                     _atoi$1748:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x13
  1050  000014                     	ds	1
  1051  000015                     ?___flmul:
  1052                           	callstack 0
  1053  000015                     pad@p:
  1054                           	callstack 0
  1055  000015                     atoi@n:
  1056                           	callstack 0
  1057  000015                     ___flmul@b:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x14
  1061  000015                     	ds	2
  1062  000017                     ??_pad:
  1063                           
  1064                           ; 1 bytes @ 0x16
  1065  000017                     	ds	1
  1066  000018                     pad@i:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x17
  1070  000018                     	ds	1
  1071  000019                     ___flmul@a:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x18
  1075  000019                     	ds	1
  1076  00001A                     pad@w:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x19
  1080  00001A                     	ds	2
  1081  00001C                     ?_xtoa:
  1082                           	callstack 0
  1083  00001C                     xtoa@fp:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x1B
  1087  00001C                     	ds	1
  1088  00001D                     ??___flmul:
  1089                           
  1090                           ; 1 bytes @ 0x1C
  1091  00001D                     	ds	1
  1092  00001E                     xtoa@d:
  1093                           	callstack 0
  1094                           
  1095                           ; 8 bytes @ 0x1D
  1096  00001E                     	ds	3
  1097  000021                     ___flmul@sign:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x20
  1101  000021                     	ds	1
  1102  000022                     ___flmul@grs:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x21
  1106  000022                     	ds	4
  1107  000026                     ___flmul@aexp:
  1108                           	callstack 0
  1109  000026                     xtoa@x:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x25
  1113  000026                     	ds	1
  1114  000027                     ??_xtoa:
  1115  000027                     ___flmul@bexp:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x26
  1119  000027                     	ds	1
  1120  000028                     ___flmul@prod:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x27
  1124  000028                     	ds	4
  1125  00002C                     ___flmul@temp:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x2B
  1129  00002C                     	ds	2
  1130  00002E                     ?___fldiv:
  1131                           	callstack 0
  1132  00002E                     ___flge@ff1:
  1133                           	callstack 0
  1134  00002E                     ___fldiv@b:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x2D
  1138  00002E                     	ds	1
  1139  00002F                     _xtoa$1693:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x2E
  1143  00002F                     	ds	2
  1144  000031                     _xtoa$1694:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x30
  1148  000031                     	ds	1
  1149  000032                     ___flge@ff2:
  1150                           	callstack 0
  1151  000032                     ___fldiv@a:
  1152                           	callstack 0
  1153                           
  1154                           ; 4 bytes @ 0x31
  1155  000032                     	ds	1
  1156  000033                     xtoa@p:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x32
  1160  000033                     	ds	2
  1161  000035                     xtoa@w:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x34
  1165  000035                     	ds	1
  1166  000036                     ??___fldiv:
  1167  000036                     ??___flge:
  1168                           
  1169                           ; 1 bytes @ 0x35
  1170  000036                     	ds	1
  1171  000037                     xtoa@n:
  1172                           	callstack 0
  1173                           
  1174                           ; 8 bytes @ 0x36
  1175  000037                     	ds	3
  1176  00003A                     ___fldiv@rem:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x39
  1180  00003A                     	ds	4
  1181  00003E                     ___fldiv@sign:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x3D
  1185  00003E                     	ds	1
  1186  00003F                     ___fldiv@new_exp:
  1187                           	callstack 0
  1188  00003F                     xtoa@i:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x3E
  1192  00003F                     	ds	2
  1193  000041                     xtoa@c:
  1194                           	callstack 0
  1195  000041                     ___fldiv@grs:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x40
  1199  000041                     	ds	4
  1200  000045                     ___fldiv@bexp:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x44
  1204  000045                     	ds	1
  1205  000046                     ___fldiv@aexp:
  1206                           	callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x45
  1209  000046                     	ds	1
  1210  000047                     ?___fladd:
  1211                           	callstack 0
  1212  000047                     ?_floorf:
  1213                           	callstack 0
  1214  000047                     ___fladd@b:
  1215                           	callstack 0
  1216  000047                     floorf@x:
  1217                           	callstack 0
  1218                           
  1219                           ; 4 bytes @ 0x46
  1220  000047                     	ds	4
  1221  00004B                     ??_floorf:
  1222  00004B                     ___fladd@a:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x4A
  1226  00004B                     	ds	4
  1227  00004F                     ??___fladd:
  1228                           
  1229                           ; 1 bytes @ 0x4E
  1230  00004F                     	ds	2
  1231  000051                     floorf@m:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x50
  1235  000051                     	ds	2
  1236  000053                     ___fladd@signs:
  1237                           	callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x52
  1240  000053                     	ds	1
  1241  000054                     ___fladd@aexp:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x53
  1245  000054                     	ds	1
  1246  000055                     ___fladd@bexp:
  1247                           	callstack 0
  1248  000055                     floorf@e:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x54
  1252  000055                     	ds	1
  1253  000056                     ___fladd@grs:
  1254                           	callstack 0
  1255                           
  1256                           ; 1 bytes @ 0x55
  1257  000056                     	ds	1
  1258  000057                     ?___flsub:
  1259                           	callstack 0
  1260  000057                     ?___fltol:
  1261                           	callstack 0
  1262  000057                     ___fltol@f1:
  1263                           	callstack 0
  1264  000057                     ___flsub@b:
  1265                           	callstack 0
  1266  000057                     floorf@u:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x56
  1270  000057                     	ds	4
  1271  00005B                     ??___fltol:
  1272  00005B                     ___flsub@a:
  1273                           	callstack 0
  1274                           
  1275                           ; 4 bytes @ 0x5A
  1276  00005B                     	ds	4
  1277  00005F                     
  1278                           ; 1 bytes @ 0x5E
  1279 ;;
  1280 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1281 ;;
  1282 ;; *************** function _main *****************
  1283 ;; Defined at:
  1284 ;;		line 40 in file "smart_main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0
  1299 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1301 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1302 ;;Total ram usage:        4 bytes
  1303 ;; Hardware stack levels required when called: 10
  1304 ;; This function calls:
  1305 ;;		_I2C_Init
  1306 ;;		_LCD_Char
  1307 ;;		_LCD_Clear
  1308 ;;		_LCD_Command
  1309 ;;		_LCD_Custom_Char
  1310 ;;		_LCD_Init
  1311 ;;		_LCD_String_xy
  1312 ;;		_MSdelay
  1313 ;;		_PlayCancion
  1314 ;;		_RTC_Calendario
  1315 ;;		_ReadADC
  1316 ;;		_ReadLUZ
  1317 ;;		___flge
  1318 ;;		___xxtofl
  1319 ;;		_sprintf
  1320 ;; This function is called by:
  1321 ;;		Startup code after reset
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text0
  1326  0023A8                     __ptext0:
  1327                           	callstack 0
  1328  0023A8                     _main:
  1329                           	callstack 21
  1330  0023A8                     
  1331                           ;smart_main.c: 41:     OSCCON = 0x72;
  1332  0023A8  0E72               	movlw	114
  1333  0023AA  6ED3               	movwf	211,c	;volatile
  1334                           
  1335                           ;smart_main.c: 42:     TRISE = 0x00;
  1336  0023AC  0E00               	movlw	0
  1337  0023AE  6E96               	movwf	150,c	;volatile
  1338  0023B0                     
  1339                           ;smart_main.c: 45:     I2C_Init();
  1340  0023B0  ECF0  F023         	call	_I2C_Init	;wreg free
  1341  0023B4                     
  1342                           ;smart_main.c: 46:     LCD_Init();
  1343  0023B4  EC67  F023         	call	_LCD_Init	;wreg free
  1344  0023B8                     
  1345                           ;smart_main.c: 47:     LCD_String_xy(1, 0, " Buenos Dias ");
  1346  0023B8  0E00               	movlw	0
  1347  0023BA  6E0B               	movwf	LCD_String_xy@pos^0,c
  1348  0023BC  0E01               	movlw	low STR_1
  1349  0023BE  6E0C               	movwf	LCD_String_xy@msg^0,c
  1350  0023C0  0E08               	movlw	high STR_1
  1351  0023C2  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1352  0023C4  0E01               	movlw	1
  1353  0023C6  EC81  F022         	call	_LCD_String_xy
  1354  0023CA                     
  1355                           ;smart_main.c: 48:     LCD_Clear();
  1356  0023CA  EC1B  F024         	call	_LCD_Clear	;wreg free
  1357  0023CE                     l5356:
  1358                           
  1359                           ;smart_main.c: 51:         tempar = ReadADC();
  1360  0023CE  EC42  F01C         	call	_ReadADC	;wreg free
  1361  0023D2  0100               	movlb	0	; () banked
  1362  0023D4  C062  F0E1         	movff	?_ReadADC,_main$2089
  1363  0023D8  C063  F0E2         	movff	?_ReadADC+1,_main$2089+1
  1364  0023DC  6BE3               	clrf	(_main$2089+2)& (0+255),b
  1365  0023DE  6BE4               	clrf	(_main$2089+3)& (0+255),b
  1366  0023E0                     
  1367                           ; BSR set to: 0
  1368                           ;smart_main.c: 51:         tempar = ReadADC();
  1369  0023E0  C0E1  F007         	movff	_main$2089,___xxtofl@val
  1370  0023E4  C0E2  F008         	movff	_main$2089+1,___xxtofl@val+1
  1371  0023E8  C0E3  F009         	movff	_main$2089+2,___xxtofl@val+2
  1372  0023EC  C0E4  F00A         	movff	_main$2089+3,___xxtofl@val+3
  1373  0023F0  0E00               	movlw	0
  1374  0023F2  EC9A  F019         	call	___xxtofl
  1375  0023F6  C007  F0F1         	movff	?___xxtofl,_tempar
  1376  0023FA  C008  F0F2         	movff	?___xxtofl+1,_tempar+1
  1377  0023FE  C009  F0F3         	movff	?___xxtofl+2,_tempar+2
  1378  002402  C00A  F0F4         	movff	?___xxtofl+3,_tempar+3
  1379  002406                     
  1380                           ;smart_main.c: 52:         luz = ReadLUZ();
  1381  002406  ECC2  F01F         	call	_ReadLUZ	;wreg free
  1382  00240A  C001  F007         	movff	?_ReadLUZ,___xxtofl@val
  1383  00240E  C002  F008         	movff	?_ReadLUZ+1,___xxtofl@val+1
  1384  002412  6A09               	clrf	(___xxtofl@val+2)^0,c
  1385  002414  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1386  002416  0E00               	movlw	0
  1387  002418  EC9A  F019         	call	___xxtofl
  1388  00241C  C007  F0ED         	movff	?___xxtofl,_luz
  1389  002420  C008  F0EE         	movff	?___xxtofl+1,_luz+1
  1390  002424  C009  F0EF         	movff	?___xxtofl+2,_luz+2
  1391  002428  C00A  F0F0         	movff	?___xxtofl+3,_luz+3
  1392  00242C                     
  1393                           ;smart_main.c: 53:         RTC_Calendario();
  1394  00242C  EC77  F015         	call	_RTC_Calendario	;wreg free
  1395  002430                     
  1396                           ;smart_main.c: 54:         MSdelay(10);
  1397  002430  0E00               	movlw	0
  1398  002432  6E02               	movwf	(MSdelay@val+1)^0,c
  1399  002434  0E0A               	movlw	10
  1400  002436  6E01               	movwf	MSdelay@val^0,c
  1401  002438  ECAD  F021         	call	_MSdelay	;wreg free
  1402  00243C                     
  1403                           ;smart_main.c: 56:         if (tempar > 15 && (luz > 0 && luz < 400)) {
  1404  00243C  0E00               	movlw	0
  1405  00243E  6E2E               	movwf	___flge@ff1^0,c
  1406  002440  0E00               	movlw	0
  1407  002442  6E2F               	movwf	(___flge@ff1+1)^0,c
  1408  002444  0E70               	movlw	112
  1409  002446  6E30               	movwf	(___flge@ff1+2)^0,c
  1410  002448  0E41               	movlw	65
  1411  00244A  6E31               	movwf	(___flge@ff1+3)^0,c
  1412  00244C  C0F1  F032         	movff	_tempar,___flge@ff2
  1413  002450  C0F2  F033         	movff	_tempar+1,___flge@ff2+1
  1414  002454  C0F3  F034         	movff	_tempar+2,___flge@ff2+2
  1415  002458  C0F4  F035         	movff	_tempar+3,___flge@ff2+3
  1416  00245C  ECC0  F01B         	call	___flge	;wreg free
  1417  002460  B0D8               	btfsc	status,0,c
  1418  002462  EF35  F012         	goto	u6071
  1419  002466  EF37  F012         	goto	u6070
  1420  00246A                     u6071:
  1421  00246A  EF97  F012         	goto	l58
  1422  00246E                     u6070:
  1423  00246E  0E00               	movlw	0
  1424  002470  6E2E               	movwf	___flge@ff1^0,c
  1425  002472  0E00               	movlw	0
  1426  002474  6E2F               	movwf	(___flge@ff1+1)^0,c
  1427  002476  0E00               	movlw	0
  1428  002478  6E30               	movwf	(___flge@ff1+2)^0,c
  1429  00247A  0E00               	movlw	0
  1430  00247C  6E31               	movwf	(___flge@ff1+3)^0,c
  1431  00247E  C0ED  F032         	movff	_luz,___flge@ff2
  1432  002482  C0EE  F033         	movff	_luz+1,___flge@ff2+1
  1433  002486  C0EF  F034         	movff	_luz+2,___flge@ff2+2
  1434  00248A  C0F0  F035         	movff	_luz+3,___flge@ff2+3
  1435  00248E  ECC0  F01B         	call	___flge	;wreg free
  1436  002492  B0D8               	btfsc	status,0,c
  1437  002494  EF4E  F012         	goto	u6081
  1438  002498  EF50  F012         	goto	u6080
  1439  00249C                     u6081:
  1440  00249C  EF97  F012         	goto	l58
  1441  0024A0                     u6080:
  1442  0024A0  C0ED  F02E         	movff	_luz,___flge@ff1
  1443  0024A4  C0EE  F02F         	movff	_luz+1,___flge@ff1+1
  1444  0024A8  C0EF  F030         	movff	_luz+2,___flge@ff1+2
  1445  0024AC  C0F0  F031         	movff	_luz+3,___flge@ff1+3
  1446  0024B0  0E00               	movlw	0
  1447  0024B2  6E32               	movwf	___flge@ff2^0,c
  1448  0024B4  0E00               	movlw	0
  1449  0024B6  6E33               	movwf	(___flge@ff2+1)^0,c
  1450  0024B8  0EC8               	movlw	200
  1451  0024BA  6E34               	movwf	(___flge@ff2+2)^0,c
  1452  0024BC  0E43               	movlw	67
  1453  0024BE  6E35               	movwf	(___flge@ff2+3)^0,c
  1454  0024C0  ECC0  F01B         	call	___flge	;wreg free
  1455  0024C4  B0D8               	btfsc	status,0,c
  1456  0024C6  EF67  F012         	goto	u6091
  1457  0024CA  EF69  F012         	goto	u6090
  1458  0024CE                     u6091:
  1459  0024CE  EF97  F012         	goto	l58
  1460  0024D2                     u6090:
  1461  0024D2                     
  1462                           ;smart_main.c: 57:             LATE0 = 0;
  1463  0024D2  908D               	bcf	3981,0,c	;volatile
  1464                           
  1465                           ;smart_main.c: 58:             LATE1 = 0;
  1466  0024D4  928D               	bcf	3981,1,c	;volatile
  1467                           
  1468                           ;smart_main.c: 59:             LATE2 = 0;
  1469  0024D6  948D               	bcf	3981,2,c	;volatile
  1470  0024D8                     
  1471                           ;smart_main.c: 60:             sprintf(Stemp, "%0.0fC", tempar);
  1472  0024D8  0E7A               	movlw	low _Stemp
  1473  0024DA  0100               	movlb	0	; () banked
  1474  0024DC  6FCE               	movwf	sprintf@s& (0+255),b
  1475  0024DE  0E01               	movlw	high _Stemp
  1476  0024E0  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1477  0024E2  0E0F               	movlw	low STR_2
  1478  0024E4  6FD0               	movwf	sprintf@fmt& (0+255),b
  1479  0024E6  0E08               	movlw	high STR_2
  1480  0024E8  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1481  0024EA  C0F1  F0D2         	movff	_tempar,?_sprintf+4
  1482  0024EE  C0F2  F0D3         	movff	_tempar+1,?_sprintf+5
  1483  0024F2  C0F3  F0D4         	movff	_tempar+2,?_sprintf+6
  1484  0024F6  C0F4  F0D5         	movff	_tempar+3,?_sprintf+7
  1485  0024FA  EC0F  F021         	call	_sprintf	;wreg free
  1486  0024FE                     
  1487                           ;smart_main.c: 61:             LCD_String_xy(1, 0, Stemp);
  1488  0024FE  0E00               	movlw	0
  1489  002500  6E0B               	movwf	LCD_String_xy@pos^0,c
  1490  002502  0E7A               	movlw	low _Stemp
  1491  002504  6E0C               	movwf	LCD_String_xy@msg^0,c
  1492  002506  0E01               	movlw	high _Stemp
  1493  002508  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1494  00250A  0E01               	movlw	1
  1495  00250C  EC81  F022         	call	_LCD_String_xy
  1496  002510                     
  1497                           ;smart_main.c: 62:             LCD_Custom_Char(0, character2);
  1498  002510  0EE2               	movlw	low _character2
  1499  002512  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1500  002514  0E01               	movlw	high _character2
  1501  002516  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1502  002518  0E00               	movlw	0
  1503  00251A  ECD2  F021         	call	_LCD_Custom_Char
  1504                           
  1505                           ;smart_main.c: 63:             LCD_Command(0xc0);
  1506  00251E  0EC0               	movlw	192
  1507  002520  EC61  F021         	call	_LCD_Command
  1508                           
  1509                           ;smart_main.c: 64:             LCD_Char(0);
  1510  002524  0E00               	movlw	0
  1511  002526  EC87  F021         	call	_LCD_Char
  1512                           
  1513                           ;smart_main.c: 65:             PlayCancion();
  1514  00252A  EC82  F01F         	call	_PlayCancion	;wreg free
  1515  00252E                     l58:
  1516                           
  1517                           ;smart_main.c: 67:         if ((tempar >= 12 && tempar <= 15)&&(luz > 400 && luz < 700))
      +                           {
  1518  00252E  C0F1  F02E         	movff	_tempar,___flge@ff1
  1519  002532  C0F2  F02F         	movff	_tempar+1,___flge@ff1+1
  1520  002536  C0F3  F030         	movff	_tempar+2,___flge@ff1+2
  1521  00253A  C0F4  F031         	movff	_tempar+3,___flge@ff1+3
  1522  00253E  0E00               	movlw	0
  1523  002540  6E32               	movwf	___flge@ff2^0,c
  1524  002542  0E00               	movlw	0
  1525  002544  6E33               	movwf	(___flge@ff2+1)^0,c
  1526  002546  0E40               	movlw	64
  1527  002548  6E34               	movwf	(___flge@ff2+2)^0,c
  1528  00254A  0E41               	movlw	65
  1529  00254C  6E35               	movwf	(___flge@ff2+3)^0,c
  1530  00254E  ECC0  F01B         	call	___flge	;wreg free
  1531  002552  A0D8               	btfss	status,0,c
  1532  002554  EFAE  F012         	goto	u6101
  1533  002558  EFB0  F012         	goto	u6100
  1534  00255C                     u6101:
  1535  00255C  EF27  F013         	goto	l59
  1536  002560                     u6100:
  1537  002560  0E00               	movlw	0
  1538  002562  6E2E               	movwf	___flge@ff1^0,c
  1539  002564  0E00               	movlw	0
  1540  002566  6E2F               	movwf	(___flge@ff1+1)^0,c
  1541  002568  0E70               	movlw	112
  1542  00256A  6E30               	movwf	(___flge@ff1+2)^0,c
  1543  00256C  0E41               	movlw	65
  1544  00256E  6E31               	movwf	(___flge@ff1+3)^0,c
  1545  002570  C0F1  F032         	movff	_tempar,___flge@ff2
  1546  002574  C0F2  F033         	movff	_tempar+1,___flge@ff2+1
  1547  002578  C0F3  F034         	movff	_tempar+2,___flge@ff2+2
  1548  00257C  C0F4  F035         	movff	_tempar+3,___flge@ff2+3
  1549  002580  ECC0  F01B         	call	___flge	;wreg free
  1550  002584  A0D8               	btfss	status,0,c
  1551  002586  EFC7  F012         	goto	u6111
  1552  00258A  EFC9  F012         	goto	u6110
  1553  00258E                     u6111:
  1554  00258E  EF27  F013         	goto	l59
  1555  002592                     u6110:
  1556  002592  0E00               	movlw	0
  1557  002594  6E2E               	movwf	___flge@ff1^0,c
  1558  002596  0E00               	movlw	0
  1559  002598  6E2F               	movwf	(___flge@ff1+1)^0,c
  1560  00259A  0EC8               	movlw	200
  1561  00259C  6E30               	movwf	(___flge@ff1+2)^0,c
  1562  00259E  0E43               	movlw	67
  1563  0025A0  6E31               	movwf	(___flge@ff1+3)^0,c
  1564  0025A2  C0ED  F032         	movff	_luz,___flge@ff2
  1565  0025A6  C0EE  F033         	movff	_luz+1,___flge@ff2+1
  1566  0025AA  C0EF  F034         	movff	_luz+2,___flge@ff2+2
  1567  0025AE  C0F0  F035         	movff	_luz+3,___flge@ff2+3
  1568  0025B2  ECC0  F01B         	call	___flge	;wreg free
  1569  0025B6  B0D8               	btfsc	status,0,c
  1570  0025B8  EFE0  F012         	goto	u6121
  1571  0025BC  EFE2  F012         	goto	u6120
  1572  0025C0                     u6121:
  1573  0025C0  EF27  F013         	goto	l59
  1574  0025C4                     u6120:
  1575  0025C4  C0ED  F02E         	movff	_luz,___flge@ff1
  1576  0025C8  C0EE  F02F         	movff	_luz+1,___flge@ff1+1
  1577  0025CC  C0EF  F030         	movff	_luz+2,___flge@ff1+2
  1578  0025D0  C0F0  F031         	movff	_luz+3,___flge@ff1+3
  1579  0025D4  0E00               	movlw	0
  1580  0025D6  6E32               	movwf	___flge@ff2^0,c
  1581  0025D8  0E00               	movlw	0
  1582  0025DA  6E33               	movwf	(___flge@ff2+1)^0,c
  1583  0025DC  0E2F               	movlw	47
  1584  0025DE  6E34               	movwf	(___flge@ff2+2)^0,c
  1585  0025E0  0E44               	movlw	68
  1586  0025E2  6E35               	movwf	(___flge@ff2+3)^0,c
  1587  0025E4  ECC0  F01B         	call	___flge	;wreg free
  1588  0025E8  B0D8               	btfsc	status,0,c
  1589  0025EA  EFF9  F012         	goto	u6131
  1590  0025EE  EFFB  F012         	goto	u6130
  1591  0025F2                     u6131:
  1592  0025F2  EF27  F013         	goto	l59
  1593  0025F6                     u6130:
  1594  0025F6                     
  1595                           ;smart_main.c: 68:             LATE0 = 1;
  1596  0025F6  808D               	bsf	3981,0,c	;volatile
  1597                           
  1598                           ;smart_main.c: 69:             LATE1 = 1;
  1599  0025F8  828D               	bsf	3981,1,c	;volatile
  1600                           
  1601                           ;smart_main.c: 70:             LATE2 = 0;
  1602  0025FA  948D               	bcf	3981,2,c	;volatile
  1603  0025FC                     
  1604                           ;smart_main.c: 71:             sprintf(Stemp, "%0.0fC", tempar);
  1605  0025FC  0E7A               	movlw	low _Stemp
  1606  0025FE  0100               	movlb	0	; () banked
  1607  002600  6FCE               	movwf	sprintf@s& (0+255),b
  1608  002602  0E01               	movlw	high _Stemp
  1609  002604  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1610  002606  0E0F               	movlw	low STR_2
  1611  002608  6FD0               	movwf	sprintf@fmt& (0+255),b
  1612  00260A  0E08               	movlw	high STR_2
  1613  00260C  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1614  00260E  C0F1  F0D2         	movff	_tempar,?_sprintf+4
  1615  002612  C0F2  F0D3         	movff	_tempar+1,?_sprintf+5
  1616  002616  C0F3  F0D4         	movff	_tempar+2,?_sprintf+6
  1617  00261A  C0F4  F0D5         	movff	_tempar+3,?_sprintf+7
  1618  00261E  EC0F  F021         	call	_sprintf	;wreg free
  1619  002622                     
  1620                           ;smart_main.c: 72:             LCD_String_xy(1, 0, Stemp);
  1621  002622  0E00               	movlw	0
  1622  002624  6E0B               	movwf	LCD_String_xy@pos^0,c
  1623  002626  0E7A               	movlw	low _Stemp
  1624  002628  6E0C               	movwf	LCD_String_xy@msg^0,c
  1625  00262A  0E01               	movlw	high _Stemp
  1626  00262C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1627  00262E  0E01               	movlw	1
  1628  002630  EC81  F022         	call	_LCD_String_xy
  1629  002634                     
  1630                           ;smart_main.c: 73:             LCD_Custom_Char(0, character3);
  1631  002634  0EDA               	movlw	low _character3
  1632  002636  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1633  002638  0E01               	movlw	high _character3
  1634  00263A  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1635  00263C  0E00               	movlw	0
  1636  00263E  ECD2  F021         	call	_LCD_Custom_Char
  1637                           
  1638                           ;smart_main.c: 74:             LCD_Command(0xc0);
  1639  002642  0EC0               	movlw	192
  1640  002644  EC61  F021         	call	_LCD_Command
  1641                           
  1642                           ;smart_main.c: 75:             LCD_Char(0);
  1643  002648  0E00               	movlw	0
  1644  00264A  EC87  F021         	call	_LCD_Char
  1645  00264E                     l59:
  1646                           
  1647                           ;smart_main.c: 78:         if (tempar < 12 && (luz > 700 && luz < 1500)) {
  1648  00264E  C0F1  F02E         	movff	_tempar,___flge@ff1
  1649  002652  C0F2  F02F         	movff	_tempar+1,___flge@ff1+1
  1650  002656  C0F3  F030         	movff	_tempar+2,___flge@ff1+2
  1651  00265A  C0F4  F031         	movff	_tempar+3,___flge@ff1+3
  1652  00265E  0E00               	movlw	0
  1653  002660  6E32               	movwf	___flge@ff2^0,c
  1654  002662  0E00               	movlw	0
  1655  002664  6E33               	movwf	(___flge@ff2+1)^0,c
  1656  002666  0E40               	movlw	64
  1657  002668  6E34               	movwf	(___flge@ff2+2)^0,c
  1658  00266A  0E41               	movlw	65
  1659  00266C  6E35               	movwf	(___flge@ff2+3)^0,c
  1660  00266E  ECC0  F01B         	call	___flge	;wreg free
  1661  002672  B0D8               	btfsc	status,0,c
  1662  002674  EF3E  F013         	goto	u6141
  1663  002678  EF40  F013         	goto	u6140
  1664  00267C                     u6141:
  1665  00267C  EF9E  F013         	goto	l60
  1666  002680                     u6140:
  1667  002680  0E00               	movlw	0
  1668  002682  6E2E               	movwf	___flge@ff1^0,c
  1669  002684  0E00               	movlw	0
  1670  002686  6E2F               	movwf	(___flge@ff1+1)^0,c
  1671  002688  0E2F               	movlw	47
  1672  00268A  6E30               	movwf	(___flge@ff1+2)^0,c
  1673  00268C  0E44               	movlw	68
  1674  00268E  6E31               	movwf	(___flge@ff1+3)^0,c
  1675  002690  C0ED  F032         	movff	_luz,___flge@ff2
  1676  002694  C0EE  F033         	movff	_luz+1,___flge@ff2+1
  1677  002698  C0EF  F034         	movff	_luz+2,___flge@ff2+2
  1678  00269C  C0F0  F035         	movff	_luz+3,___flge@ff2+3
  1679  0026A0  ECC0  F01B         	call	___flge	;wreg free
  1680  0026A4  B0D8               	btfsc	status,0,c
  1681  0026A6  EF57  F013         	goto	u6151
  1682  0026AA  EF59  F013         	goto	u6150
  1683  0026AE                     u6151:
  1684  0026AE  EF9E  F013         	goto	l60
  1685  0026B2                     u6150:
  1686  0026B2  C0ED  F02E         	movff	_luz,___flge@ff1
  1687  0026B6  C0EE  F02F         	movff	_luz+1,___flge@ff1+1
  1688  0026BA  C0EF  F030         	movff	_luz+2,___flge@ff1+2
  1689  0026BE  C0F0  F031         	movff	_luz+3,___flge@ff1+3
  1690  0026C2  0E00               	movlw	0
  1691  0026C4  6E32               	movwf	___flge@ff2^0,c
  1692  0026C6  0E80               	movlw	128
  1693  0026C8  6E33               	movwf	(___flge@ff2+1)^0,c
  1694  0026CA  0EBB               	movlw	187
  1695  0026CC  6E34               	movwf	(___flge@ff2+2)^0,c
  1696  0026CE  0E44               	movlw	68
  1697  0026D0  6E35               	movwf	(___flge@ff2+3)^0,c
  1698  0026D2  ECC0  F01B         	call	___flge	;wreg free
  1699  0026D6  B0D8               	btfsc	status,0,c
  1700  0026D8  EF70  F013         	goto	u6161
  1701  0026DC  EF72  F013         	goto	u6160
  1702  0026E0                     u6161:
  1703  0026E0  EF9E  F013         	goto	l60
  1704  0026E4                     u6160:
  1705  0026E4                     
  1706                           ;smart_main.c: 79:             LATE0 = 1;
  1707  0026E4  808D               	bsf	3981,0,c	;volatile
  1708                           
  1709                           ;smart_main.c: 80:             LATE1 = 1;
  1710  0026E6  828D               	bsf	3981,1,c	;volatile
  1711                           
  1712                           ;smart_main.c: 81:             LATE2 = 1;
  1713  0026E8  848D               	bsf	3981,2,c	;volatile
  1714  0026EA                     
  1715                           ;smart_main.c: 82:             sprintf(Stemp, "%0.0fC", tempar);
  1716  0026EA  0E7A               	movlw	low _Stemp
  1717  0026EC  0100               	movlb	0	; () banked
  1718  0026EE  6FCE               	movwf	sprintf@s& (0+255),b
  1719  0026F0  0E01               	movlw	high _Stemp
  1720  0026F2  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1721  0026F4  0E0F               	movlw	low STR_2
  1722  0026F6  6FD0               	movwf	sprintf@fmt& (0+255),b
  1723  0026F8  0E08               	movlw	high STR_2
  1724  0026FA  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1725  0026FC  C0F1  F0D2         	movff	_tempar,?_sprintf+4
  1726  002700  C0F2  F0D3         	movff	_tempar+1,?_sprintf+5
  1727  002704  C0F3  F0D4         	movff	_tempar+2,?_sprintf+6
  1728  002708  C0F4  F0D5         	movff	_tempar+3,?_sprintf+7
  1729  00270C  EC0F  F021         	call	_sprintf	;wreg free
  1730  002710                     
  1731                           ;smart_main.c: 83:             LCD_String_xy(1, 0, Stemp);
  1732  002710  0E00               	movlw	0
  1733  002712  6E0B               	movwf	LCD_String_xy@pos^0,c
  1734  002714  0E7A               	movlw	low _Stemp
  1735  002716  6E0C               	movwf	LCD_String_xy@msg^0,c
  1736  002718  0E01               	movlw	high _Stemp
  1737  00271A  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1738  00271C  0E01               	movlw	1
  1739  00271E  EC81  F022         	call	_LCD_String_xy
  1740  002722                     
  1741                           ;smart_main.c: 84:             LCD_Custom_Char(0, character1);
  1742  002722  0EEA               	movlw	low _character1
  1743  002724  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1744  002726  0E01               	movlw	high _character1
  1745  002728  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1746  00272A  0E00               	movlw	0
  1747  00272C  ECD2  F021         	call	_LCD_Custom_Char
  1748                           
  1749                           ;smart_main.c: 85:             LCD_Command(0xc0);
  1750  002730  0EC0               	movlw	192
  1751  002732  EC61  F021         	call	_LCD_Command
  1752                           
  1753                           ;smart_main.c: 86:             LCD_Char(0);
  1754  002736  0E00               	movlw	0
  1755  002738  EC87  F021         	call	_LCD_Char
  1756  00273C                     l60:
  1757                           
  1758                           ;smart_main.c: 90:         MSdelay(3000);
  1759  00273C  0E0B               	movlw	11
  1760  00273E  6E02               	movwf	(MSdelay@val+1)^0,c
  1761  002740  0EB8               	movlw	184
  1762  002742  6E01               	movwf	MSdelay@val^0,c
  1763  002744  ECAD  F021         	call	_MSdelay	;wreg free
  1764                           
  1765                           ;smart_main.c: 91:         LCD_Clear();
  1766  002748  EC1B  F024         	call	_LCD_Clear	;wreg free
  1767  00274C  EFE7  F011         	goto	l5356
  1768  002750  EF07  F000         	goto	start
  1769  002754                     __end_of_main:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _ReadLUZ *****************
  1773 ;; Defined at:
  1774 ;;		line 12 in file "Sensor_luz.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  result          2    4[COMRAM] unsigned short 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  2    0[COMRAM] unsigned short 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1788 ;;      Params:         2       0       0       0       0       0       0       0       0
  1789 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1790 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1791 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1792 ;;Total ram usage:        6 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 1
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text1
  1803  003F84                     __ptext1:
  1804                           	callstack 0
  1805  003F84                     _ReadLUZ:
  1806                           	callstack 29
  1807  003F84                     
  1808                           ;Sensor_luz.c: 14:     uint16_t result;;Sensor_luz.c: 16:     TRISD = 0x00;
  1809  003F84  0E00               	movlw	0
  1810  003F86  6E95               	movwf	149,c	;volatile
  1811  003F88                     
  1812                           ;Sensor_luz.c: 17:     TRISA = 0xFF;
  1813  003F88  6892               	setf	146,c	;volatile
  1814                           
  1815                           ;Sensor_luz.c: 19:     OSCCONbits.IRCF = 0b111;
  1816  003F8A  0E70               	movlw	112
  1817  003F8C  12D3               	iorwf	211,f,c	;volatile
  1818                           
  1819                           ;Sensor_luz.c: 20:     OSCCONbits.SCS = 0b10;
  1820  003F8E  50D3               	movf	211,w,c	;volatile
  1821  003F90  0BFC               	andlw	-4
  1822  003F92  0902               	iorlw	2
  1823  003F94  6ED3               	movwf	211,c	;volatile
  1824                           
  1825                           ;Sensor_luz.c: 23:     ADCON1bits.PCFG = 0b1101;
  1826  003F96  50C1               	movf	193,w,c	;volatile
  1827  003F98  0BF0               	andlw	-16
  1828  003F9A  090D               	iorlw	13
  1829  003F9C  6EC1               	movwf	193,c	;volatile
  1830                           
  1831                           ;Sensor_luz.c: 24:     ADCON1bits.VCFG = 0b00;
  1832  003F9E  0ECF               	movlw	-49
  1833  003FA0  16C1               	andwf	193,f,c	;volatile
  1834                           
  1835                           ;Sensor_luz.c: 25:     ADCON0bits.CHS = 0b0001;
  1836  003FA2  50C2               	movf	194,w,c	;volatile
  1837  003FA4  0BC3               	andlw	-61
  1838  003FA6  0904               	iorlw	4
  1839  003FA8  6EC2               	movwf	194,c	;volatile
  1840                           
  1841                           ;Sensor_luz.c: 26:     ADCON2bits.ACQT = 0b010;
  1842  003FAA  50C0               	movf	192,w,c	;volatile
  1843  003FAC  0BC7               	andlw	-57
  1844  003FAE  0910               	iorlw	16
  1845  003FB0  6EC0               	movwf	192,c	;volatile
  1846                           
  1847                           ;Sensor_luz.c: 27:     ADCON2bits.ADCS = 0b001;
  1848  003FB2  50C0               	movf	192,w,c	;volatile
  1849  003FB4  0BF8               	andlw	-8
  1850  003FB6  0901               	iorlw	1
  1851  003FB8  6EC0               	movwf	192,c	;volatile
  1852  003FBA                     
  1853                           ;Sensor_luz.c: 28:     ADCON2bits.ADFM = 1;
  1854  003FBA  8EC0               	bsf	192,7,c	;volatile
  1855  003FBC                     
  1856                           ;Sensor_luz.c: 29:     ADCON0bits.ADON = 1;
  1857  003FBC  80C2               	bsf	194,0,c	;volatile
  1858  003FBE                     
  1859                           ;Sensor_luz.c: 44:         ADCON0bits.GO_DONE = 1;
  1860  003FBE  82C2               	bsf	194,1,c	;volatile
  1861  003FC0                     l169:
  1862  003FC0  B2C2               	btfsc	194,1,c	;volatile
  1863  003FC2  EFE5  F01F         	goto	u5951
  1864  003FC6  EFE7  F01F         	goto	u5950
  1865  003FCA                     u5951:
  1866  003FCA  EFE0  F01F         	goto	l169
  1867  003FCE                     u5950:
  1868  003FCE                     
  1869                           ;Sensor_luz.c: 46:         result = ADRESH;
  1870  003FCE  CFC4 F005          	movff	4036,ReadLUZ@result	;volatile
  1871  003FD2  6A06               	clrf	(ReadLUZ@result+1)^0,c
  1872  003FD4                     
  1873                           ;Sensor_luz.c: 47:         result = (result << 8) + ADRESL;
  1874  003FD4  5005               	movf	ReadLUZ@result^0,w,c
  1875  003FD6  6E03               	movwf	??_ReadLUZ^0,c
  1876  003FD8  50C3               	movf	195,w,c	;volatile
  1877  003FDA  6E05               	movwf	ReadLUZ@result^0,c
  1878  003FDC  C003  F006         	movff	??_ReadLUZ,ReadLUZ@result+1
  1879  003FE0                     
  1880                           ;Sensor_luz.c: 49:         return result;
  1881  003FE0  C005  F001         	movff	ReadLUZ@result,?_ReadLUZ
  1882  003FE4  C006  F002         	movff	ReadLUZ@result+1,?_ReadLUZ+1
  1883  003FE8  0012               	return		;funcret
  1884  003FEA                     __end_of_ReadLUZ:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _ReadADC *****************
  1888 ;; Defined at:
  1889 ;;		line 13 in file "Temperatura.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  result          2    6[BANK0 ] unsigned short 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  2    2[BANK0 ] unsigned short 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1903 ;;      Params:         0       2       0       0       0       0       0       0       0
  1904 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1905 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1906 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1907 ;;Total ram usage:        6 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 2
  1910 ;; This function calls:
  1911 ;;		___fladd
  1912 ;;		___fldiv
  1913 ;;		___flmul
  1914 ;;		___fltol
  1915 ;;		___xxtofl
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text2
  1922  003884                     __ptext2:
  1923                           	callstack 0
  1924  003884                     _ReadADC:
  1925                           	callstack 28
  1926  003884                     
  1927                           ;Temperatura.c: 15:     uint16_t result;;Temperatura.c: 17:     TRISD = 0x00;
  1928  003884  0E00               	movlw	0
  1929  003886  6E95               	movwf	149,c	;volatile
  1930  003888                     
  1931                           ;Temperatura.c: 18:     TRISA = 0xFF;
  1932  003888  6892               	setf	146,c	;volatile
  1933                           
  1934                           ;Temperatura.c: 20:     OSCCONbits.IRCF = 0b111;
  1935  00388A  0E70               	movlw	112
  1936  00388C  12D3               	iorwf	211,f,c	;volatile
  1937                           
  1938                           ;Temperatura.c: 21:     OSCCONbits.SCS = 0b10;
  1939  00388E  50D3               	movf	211,w,c	;volatile
  1940  003890  0BFC               	andlw	-4
  1941  003892  0902               	iorlw	2
  1942  003894  6ED3               	movwf	211,c	;volatile
  1943                           
  1944                           ;Temperatura.c: 24:     ADCON1bits.PCFG = 0b1110;
  1945  003896  50C1               	movf	193,w,c	;volatile
  1946  003898  0BF0               	andlw	-16
  1947  00389A  090E               	iorlw	14
  1948  00389C  6EC1               	movwf	193,c	;volatile
  1949                           
  1950                           ;Temperatura.c: 25:     ADCON1bits.VCFG = 0b00;
  1951  00389E  0ECF               	movlw	-49
  1952  0038A0  16C1               	andwf	193,f,c	;volatile
  1953                           
  1954                           ;Temperatura.c: 26:     ADCON0bits.CHS = 0b0000;
  1955  0038A2  0EC3               	movlw	-61
  1956  0038A4  16C2               	andwf	194,f,c	;volatile
  1957                           
  1958                           ;Temperatura.c: 27:     ADCON2bits.ACQT = 0b010;
  1959  0038A6  50C0               	movf	192,w,c	;volatile
  1960  0038A8  0BC7               	andlw	-57
  1961  0038AA  0910               	iorlw	16
  1962  0038AC  6EC0               	movwf	192,c	;volatile
  1963                           
  1964                           ;Temperatura.c: 28:     ADCON2bits.ADCS = 0b001;
  1965  0038AE  50C0               	movf	192,w,c	;volatile
  1966  0038B0  0BF8               	andlw	-8
  1967  0038B2  0901               	iorlw	1
  1968  0038B4  6EC0               	movwf	192,c	;volatile
  1969  0038B6                     
  1970                           ;Temperatura.c: 29:     ADCON2bits.ADFM = 1;
  1971  0038B6  8EC0               	bsf	192,7,c	;volatile
  1972  0038B8                     
  1973                           ;Temperatura.c: 30:     ADCON0bits.ADON = 1;
  1974  0038B8  80C2               	bsf	194,0,c	;volatile
  1975  0038BA                     
  1976                           ;Temperatura.c: 45:         ADCON0bits.GO_DONE = 1;
  1977  0038BA  82C2               	bsf	194,1,c	;volatile
  1978  0038BC                     l144:
  1979  0038BC  B2C2               	btfsc	194,1,c	;volatile
  1980  0038BE  EF63  F01C         	goto	u5941
  1981  0038C2  EF65  F01C         	goto	u5940
  1982  0038C6                     u5941:
  1983  0038C6  EF5E  F01C         	goto	l144
  1984  0038CA                     u5940:
  1985  0038CA                     
  1986                           ;Temperatura.c: 47:         result = ADRESH;
  1987  0038CA  CFC4 F066          	movff	4036,ReadADC@result	;volatile
  1988  0038CE  0100               	movlb	0	; () banked
  1989  0038D0  6B67               	clrf	(ReadADC@result+1)& (0+255),b
  1990  0038D2                     
  1991                           ; BSR set to: 0
  1992                           ;Temperatura.c: 48:         result = (result << 8) + ADRESL;
  1993  0038D2  5166               	movf	ReadADC@result& (0+255),w,b
  1994  0038D4  6F64               	movwf	??_ReadADC& (0+255),b
  1995  0038D6  50C3               	movf	195,w,c	;volatile
  1996  0038D8  6F66               	movwf	ReadADC@result& (0+255),b
  1997  0038DA  C064  F067         	movff	??_ReadADC,ReadADC@result+1
  1998  0038DE                     
  1999                           ; BSR set to: 0
  2000                           ;Temperatura.c: 49:         result = ((result*500.0)/1023.0)-49.5;
  2001  0038DE  0E00               	movlw	0
  2002  0038E0  6E4B               	movwf	___fladd@a^0,c
  2003  0038E2  0E00               	movlw	0
  2004  0038E4  6E4C               	movwf	(___fladd@a+1)^0,c
  2005  0038E6  0E46               	movlw	70
  2006  0038E8  6E4D               	movwf	(___fladd@a+2)^0,c
  2007  0038EA  0EC2               	movlw	194
  2008  0038EC  6E4E               	movwf	(___fladd@a+3)^0,c
  2009  0038EE  0E00               	movlw	0
  2010  0038F0  6E32               	movwf	___fldiv@a^0,c
  2011  0038F2  0EC0               	movlw	192
  2012  0038F4  6E33               	movwf	(___fldiv@a+1)^0,c
  2013  0038F6  0E7F               	movlw	127
  2014  0038F8  6E34               	movwf	(___fldiv@a+2)^0,c
  2015  0038FA  0E44               	movlw	68
  2016  0038FC  6E35               	movwf	(___fldiv@a+3)^0,c
  2017  0038FE  0E00               	movlw	0
  2018  003900  6E19               	movwf	___flmul@a^0,c
  2019  003902  0E00               	movlw	0
  2020  003904  6E1A               	movwf	(___flmul@a+1)^0,c
  2021  003906  0EFA               	movlw	250
  2022  003908  6E1B               	movwf	(___flmul@a+2)^0,c
  2023  00390A  0E43               	movlw	67
  2024  00390C  6E1C               	movwf	(___flmul@a+3)^0,c
  2025  00390E  C066  F007         	movff	ReadADC@result,___xxtofl@val
  2026  003912  C067  F008         	movff	ReadADC@result+1,___xxtofl@val+1
  2027  003916  6A09               	clrf	(___xxtofl@val+2)^0,c
  2028  003918  6A0A               	clrf	(___xxtofl@val+3)^0,c
  2029  00391A  0E00               	movlw	0
  2030  00391C  EC9A  F019         	call	___xxtofl
  2031  003920  C007  F015         	movff	?___xxtofl,___flmul@b
  2032  003924  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  2033  003928  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  2034  00392C  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  2035  003930  ECBF  F00F         	call	___flmul	;wreg free
  2036  003934  C015  F02E         	movff	?___flmul,___fldiv@b
  2037  003938  C016  F02F         	movff	?___flmul+1,___fldiv@b+1
  2038  00393C  C017  F030         	movff	?___flmul+2,___fldiv@b+2
  2039  003940  C018  F031         	movff	?___flmul+3,___fldiv@b+3
  2040  003944  ECAA  F013         	call	___fldiv	;wreg free
  2041  003948  C02E  F047         	movff	?___fldiv,___fladd@b
  2042  00394C  C02F  F048         	movff	?___fldiv+1,___fladd@b+1
  2043  003950  C030  F049         	movff	?___fldiv+2,___fladd@b+2
  2044  003954  C031  F04A         	movff	?___fldiv+3,___fladd@b+3
  2045  003958  EC5F  F00D         	call	___fladd	;wreg free
  2046  00395C  C047  F057         	movff	?___fladd,___fltol@f1
  2047  003960  C048  F058         	movff	?___fladd+1,___fltol@f1+1
  2048  003964  C049  F059         	movff	?___fladd+2,___fltol@f1+2
  2049  003968  C04A  F05A         	movff	?___fladd+3,___fltol@f1+3
  2050  00396C  EC3C  F01B         	call	___fltol	;wreg free
  2051  003970  C057  F066         	movff	?___fltol,ReadADC@result
  2052  003974  C058  F067         	movff	?___fltol+1,ReadADC@result+1
  2053  003978                     
  2054                           ;Temperatura.c: 51:         return result;
  2055  003978  C066  F062         	movff	ReadADC@result,?_ReadADC
  2056  00397C  C067  F063         	movff	ReadADC@result+1,?_ReadADC+1
  2057  003980  0012               	return		;funcret
  2058  003982                     __end_of_ReadADC:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function ___xxtofl *****************
  2062 ;; Defined at:
  2063 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  sign            1    wreg     unsigned char 
  2066 ;;  val             4    6[COMRAM] long 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  sign            1   14[COMRAM] unsigned char 
  2069 ;;  arg             4   16[COMRAM] unsigned long 
  2070 ;;  exp             1   15[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  4    6[COMRAM] unsigned char 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2080 ;;      Params:         4       0       0       0       0       0       0       0       0
  2081 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2082 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2083 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2084 ;;Total ram usage:       14 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;;		_ReadADC
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text3
  2096  003334                     __ptext3:
  2097                           	callstack 0
  2098  003334                     ___xxtofl:
  2099                           	callstack 29
  2100                           
  2101                           ;incstack = 0
  2102                           ;___xxtofl@sign stored from wreg
  2103  003334  6E0F               	movwf	___xxtofl@sign^0,c
  2104  003336  500F               	movf	___xxtofl@sign^0,w,c
  2105  003338  B4D8               	btfsc	status,2,c
  2106  00333A  EFA1  F019         	goto	u5841
  2107  00333E  EFA3  F019         	goto	u5840
  2108  003342                     u5841:
  2109  003342  EFC5  F019         	goto	l1061
  2110  003346                     u5840:
  2111  003346  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  2112  003348  EFAA  F019         	goto	u5850
  2113  00334C  EFA8  F019         	goto	u5851
  2114  003350                     u5851:
  2115  003350  EFC5  F019         	goto	l1061
  2116  003354                     u5850:
  2117  003354  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  2118  003358  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  2119  00335C  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  2120  003360  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  2121  003364  1E0B               	comf	??___xxtofl^0,f,c
  2122  003366  1E0C               	comf	(??___xxtofl+1)^0,f,c
  2123  003368  1E0D               	comf	(??___xxtofl+2)^0,f,c
  2124  00336A  1E0E               	comf	(??___xxtofl+3)^0,f,c
  2125  00336C  2A0B               	incf	??___xxtofl^0,f,c
  2126  00336E  0E00               	movlw	0
  2127  003370  220C               	addwfc	(??___xxtofl+1)^0,f,c
  2128  003372  220D               	addwfc	(??___xxtofl+2)^0,f,c
  2129  003374  220E               	addwfc	(??___xxtofl+3)^0,f,c
  2130  003376  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  2131  00337A  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  2132  00337E  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  2133  003382  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  2134  003386  EFCD  F019         	goto	l5106
  2135  00338A                     l1061:
  2136  00338A  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  2137  00338E  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2138  003392  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2139  003396  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2140  00339A                     l5106:
  2141  00339A  5007               	movf	___xxtofl@val^0,w,c
  2142  00339C  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  2143  00339E  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  2144  0033A0  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  2145  0033A2  A4D8               	btfss	status,2,c
  2146  0033A4  EFD6  F019         	goto	u5861
  2147  0033A8  EFD8  F019         	goto	u5860
  2148  0033AC                     u5861:
  2149  0033AC  EFE2  F019         	goto	l5112
  2150  0033B0                     u5860:
  2151  0033B0  0E00               	movlw	0
  2152  0033B2  6E07               	movwf	?___xxtofl^0,c
  2153  0033B4  0E00               	movlw	0
  2154  0033B6  6E08               	movwf	(?___xxtofl+1)^0,c
  2155  0033B8  0E00               	movlw	0
  2156  0033BA  6E09               	movwf	(?___xxtofl+2)^0,c
  2157  0033BC  0E00               	movlw	0
  2158  0033BE  6E0A               	movwf	(?___xxtofl+3)^0,c
  2159  0033C0  EF73  F01A         	goto	l1064
  2160  0033C4                     l5112:
  2161  0033C4  0E96               	movlw	150
  2162  0033C6  6E10               	movwf	___xxtofl@exp^0,c
  2163  0033C8  EFEC  F019         	goto	l5116
  2164  0033CC                     l5114:
  2165  0033CC  2A10               	incf	___xxtofl@exp^0,f,c
  2166  0033CE  90D8               	bcf	status,0,c
  2167  0033D0  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  2168  0033D2  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  2169  0033D4  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  2170  0033D6  3211               	rrcf	___xxtofl@arg^0,f,c
  2171  0033D8                     l5116:
  2172  0033D8  0E00               	movlw	0
  2173  0033DA  1411               	andwf	___xxtofl@arg^0,w,c
  2174  0033DC  6E0B               	movwf	??___xxtofl^0,c
  2175  0033DE  0E00               	movlw	0
  2176  0033E0  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  2177  0033E2  6E0C               	movwf	(??___xxtofl+1)^0,c
  2178  0033E4  0E00               	movlw	0
  2179  0033E6  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  2180  0033E8  6E0D               	movwf	(??___xxtofl+2)^0,c
  2181  0033EA  0EFE               	movlw	254
  2182  0033EC  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  2183  0033EE  6E0E               	movwf	(??___xxtofl+3)^0,c
  2184  0033F0  500B               	movf	??___xxtofl^0,w,c
  2185  0033F2  100C               	iorwf	(??___xxtofl+1)^0,w,c
  2186  0033F4  100D               	iorwf	(??___xxtofl+2)^0,w,c
  2187  0033F6  100E               	iorwf	(??___xxtofl+3)^0,w,c
  2188  0033F8  A4D8               	btfss	status,2,c
  2189  0033FA  EF01  F01A         	goto	u5871
  2190  0033FE  EF03  F01A         	goto	u5870
  2191  003402                     u5871:
  2192  003402  EFE6  F019         	goto	l5114
  2193  003406                     u5870:
  2194  003406  EF11  F01A         	goto	l1068
  2195  00340A                     l5118:
  2196  00340A  2A10               	incf	___xxtofl@exp^0,f,c
  2197  00340C  0E01               	movlw	1
  2198  00340E  2611               	addwf	___xxtofl@arg^0,f,c
  2199  003410  0E00               	movlw	0
  2200  003412  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  2201  003414  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  2202  003416  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  2203  003418  90D8               	bcf	status,0,c
  2204  00341A  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  2205  00341C  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  2206  00341E  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  2207  003420  3211               	rrcf	___xxtofl@arg^0,f,c
  2208  003422                     l1068:
  2209  003422  0E00               	movlw	0
  2210  003424  1411               	andwf	___xxtofl@arg^0,w,c
  2211  003426  6E0B               	movwf	??___xxtofl^0,c
  2212  003428  0E00               	movlw	0
  2213  00342A  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  2214  00342C  6E0C               	movwf	(??___xxtofl+1)^0,c
  2215  00342E  0E00               	movlw	0
  2216  003430  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  2217  003432  6E0D               	movwf	(??___xxtofl+2)^0,c
  2218  003434  0EFF               	movlw	255
  2219  003436  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  2220  003438  6E0E               	movwf	(??___xxtofl+3)^0,c
  2221  00343A  500B               	movf	??___xxtofl^0,w,c
  2222  00343C  100C               	iorwf	(??___xxtofl+1)^0,w,c
  2223  00343E  100D               	iorwf	(??___xxtofl+2)^0,w,c
  2224  003440  100E               	iorwf	(??___xxtofl+3)^0,w,c
  2225  003442  A4D8               	btfss	status,2,c
  2226  003444  EF26  F01A         	goto	u5881
  2227  003448  EF28  F01A         	goto	u5880
  2228  00344C                     u5881:
  2229  00344C  EF05  F01A         	goto	l5118
  2230  003450                     u5880:
  2231  003450  EF30  F01A         	goto	l5126
  2232  003454                     l5124:
  2233  003454  0610               	decf	___xxtofl@exp^0,f,c
  2234  003456  90D8               	bcf	status,0,c
  2235  003458  3611               	rlcf	___xxtofl@arg^0,f,c
  2236  00345A  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  2237  00345C  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  2238  00345E  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  2239  003460                     l5126:
  2240  003460  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  2241  003462  EF35  F01A         	goto	u5891
  2242  003466  EF37  F01A         	goto	u5890
  2243  00346A                     u5891:
  2244  00346A  EF3F  F01A         	goto	l1075
  2245  00346E                     u5890:
  2246  00346E  0E02               	movlw	2
  2247  003470  6010               	cpfslt	___xxtofl@exp^0,c
  2248  003472  EF3D  F01A         	goto	u5901
  2249  003476  EF3F  F01A         	goto	u5900
  2250  00347A                     u5901:
  2251  00347A  EF2A  F01A         	goto	l5124
  2252  00347E                     u5900:
  2253  00347E                     l1075:
  2254  00347E  B010               	btfsc	___xxtofl@exp^0,0,c
  2255  003480  EF44  F01A         	goto	u5911
  2256  003484  EF46  F01A         	goto	u5910
  2257  003488                     u5911:
  2258  003488  EF47  F01A         	goto	l5132
  2259  00348C                     u5910:
  2260  00348C  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  2261  00348E                     l5132:
  2262  00348E  90D8               	bcf	status,0,c
  2263  003490  3210               	rrcf	___xxtofl@exp^0,f,c
  2264  003492  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  2265  003496  6A0C               	clrf	(??___xxtofl+1)^0,c
  2266  003498  6A0D               	clrf	(??___xxtofl+2)^0,c
  2267  00349A  6A0E               	clrf	(??___xxtofl+3)^0,c
  2268  00349C  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  2269  0034A0  6A0D               	clrf	(??___xxtofl+2)^0,c
  2270  0034A2  6A0C               	clrf	(??___xxtofl+1)^0,c
  2271  0034A4  6A0B               	clrf	??___xxtofl^0,c
  2272  0034A6  500B               	movf	??___xxtofl^0,w,c
  2273  0034A8  1211               	iorwf	___xxtofl@arg^0,f,c
  2274  0034AA  500C               	movf	(??___xxtofl+1)^0,w,c
  2275  0034AC  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  2276  0034AE  500D               	movf	(??___xxtofl+2)^0,w,c
  2277  0034B0  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  2278  0034B2  500E               	movf	(??___xxtofl+3)^0,w,c
  2279  0034B4  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  2280  0034B6  500F               	movf	___xxtofl@sign^0,w,c
  2281  0034B8  B4D8               	btfsc	status,2,c
  2282  0034BA  EF61  F01A         	goto	u5921
  2283  0034BE  EF63  F01A         	goto	u5920
  2284  0034C2                     u5921:
  2285  0034C2  EF6B  F01A         	goto	l5142
  2286  0034C6                     u5920:
  2287  0034C6  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  2288  0034C8  EF6A  F01A         	goto	u5930
  2289  0034CC  EF68  F01A         	goto	u5931
  2290  0034D0                     u5931:
  2291  0034D0  EF6B  F01A         	goto	l5142
  2292  0034D4                     u5930:
  2293  0034D4  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  2294  0034D6                     l5142:
  2295  0034D6  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  2296  0034DA  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  2297  0034DE  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  2298  0034E2  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  2299  0034E6                     l1064:
  2300  0034E6  0012               	return		;funcret
  2301  0034E8                     __end_of___xxtofl:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _RTC_Calendario *****************
  2305 ;; Defined at:
  2306 ;;		line 85 in file "reloj.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  hours          10   57[BANK1 ] unsigned char [10]
  2311 ;;  mins           10   47[BANK1 ] unsigned char [10]
  2312 ;;  secs           10   37[BANK1 ] unsigned char [10]
  2313 ;;  year           10   27[BANK1 ] unsigned char [10]
  2314 ;;  month          10   17[BANK1 ] unsigned char [10]
  2315 ;;  date           10    7[BANK1 ] unsigned char [10]
  2316 ;;  days            7    0[BANK1 ] unsigned char [7]
  2317 ;;  AM_PM           1   68[BANK1 ] unsigned char 
  2318 ;;  Clock_type      1   67[BANK1 ] unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2328 ;;      Params:         0       0       0       0       0       0       0       0       0
  2329 ;;      Locals:         0       0      69       0       0       0       0       0       0
  2330 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2331 ;;      Totals:         0       3      69       0       0       0       0       0       0
  2332 ;;Total ram usage:       72 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 9
  2335 ;; This function calls:
  2336 ;;		_I2C_Init
  2337 ;;		_I2C_Stop
  2338 ;;		_LCD_Clear
  2339 ;;		_LCD_Init
  2340 ;;		_LCD_String
  2341 ;;		_LCD_String_xy
  2342 ;;		_MSdelay
  2343 ;;		_RTC_Read_Calendar
  2344 ;;		_RTC_Read_Clock
  2345 ;;		_sprintf
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text4
  2352  002AEE                     __ptext4:
  2353                           	callstack 0
  2354  002AEE                     _RTC_Calendario:
  2355                           	callstack 21
  2356  002AEE                     
  2357                           ;reloj.c: 88:     char secs[10],mins[10],hours[10];;reloj.c: 89:     char date[10],month
      +                          [10],year[10];;reloj.c: 90:     char Clock_type = 0x06;
  2358  002AEE  0E06               	movlw	6
  2359  002AF0  0101               	movlb	1	; () banked
  2360  002AF2  6FD1               	movwf	RTC_Calendario@Clock_type& (0+255),b
  2361                           
  2362                           ;reloj.c: 91:     char AM_PM = 0x05;
  2363  002AF4  0E05               	movlw	5
  2364  002AF6  6FD2               	movwf	RTC_Calendario@AM_PM& (0+255),b
  2365  002AF8                     
  2366                           ; BSR set to: 1
  2367                           ;reloj.c: 92:     char days[7] = {'S','M','T','W','t','F','s'};
  2368  002AF8  EE21  F0D3         	lfsr	2,RTC_Calendario@F3531
  2369  002AFC  EE11  F08E         	lfsr	1,RTC_Calendario@days
  2370  002B00  0E06               	movlw	6
  2371  002B02                     u5961:
  2372  002B02  CFDB FFE3          	movff	plusw2,plusw1
  2373  002B06  06E8               	decf	wreg,f,c
  2374  002B08  E2FC               	bc	u5961
  2375  002B0A                     
  2376                           ; BSR set to: 1
  2377                           ;reloj.c: 93:     OSCCON=0x72;
  2378  002B0A  0E72               	movlw	114
  2379  002B0C  6ED3               	movwf	211,c	;volatile
  2380  002B0E                     
  2381                           ; BSR set to: 1
  2382                           ;reloj.c: 95:     I2C_Init();
  2383  002B0E  ECF0  F023         	call	_I2C_Init	;wreg free
  2384  002B12                     
  2385                           ;reloj.c: 96:     LCD_Init();
  2386  002B12  EC67  F023         	call	_LCD_Init	;wreg free
  2387  002B16                     
  2388                           ;reloj.c: 97:     LCD_Clear();
  2389  002B16  EC1B  F024         	call	_LCD_Clear	;wreg free
  2390  002B1A                     
  2391                           ;reloj.c: 98:     MSdelay(10);
  2392  002B1A  0E00               	movlw	0
  2393  002B1C  6E02               	movwf	(MSdelay@val+1)^0,c
  2394  002B1E  0E0A               	movlw	10
  2395  002B20  6E01               	movwf	MSdelay@val^0,c
  2396  002B22  ECAD  F021         	call	_MSdelay	;wreg free
  2397  002B26                     l5194:
  2398                           
  2399                           ;reloj.c: 100:     {;reloj.c: 101:         RTC_Read_Clock(0);
  2400  002B26  0E00               	movlw	0
  2401  002B28  EC3C  F022         	call	_RTC_Read_Clock
  2402  002B2C                     
  2403                           ;reloj.c: 102:         if(hour & (1<<Clock_type)){
  2404  002B2C  C1D1  F0DE         	movff	RTC_Calendario@Clock_type,??_RTC_Calendario
  2405  002B30  0E01               	movlw	1
  2406  002B32  0100               	movlb	0	; () banked
  2407  002B34  6FDF               	movwf	(??_RTC_Calendario+1)& (0+255),b
  2408  002B36  0E00               	movlw	0
  2409  002B38  6FE0               	movwf	(??_RTC_Calendario+2)& (0+255),b
  2410  002B3A  2BDE               	incf	??_RTC_Calendario& (0+255),f,b
  2411  002B3C  EFA3  F015         	goto	u5974
  2412  002B40                     u5975:
  2413  002B40  90D8               	bcf	status,0,c
  2414  002B42  37DF               	rlcf	(??_RTC_Calendario+1)& (0+255),f,b
  2415  002B44  37E0               	rlcf	(??_RTC_Calendario+2)& (0+255),f,b
  2416  002B46                     u5974:
  2417  002B46  2FDE               	decfsz	??_RTC_Calendario& (0+255),f,b
  2418  002B48  EFA0  F015         	goto	u5975
  2419  002B4C  0101               	movlb	1	; () banked
  2420  002B4E  5124               	movf	_hour& (0+255),w,b
  2421  002B50  0100               	movlb	0	; () banked
  2422  002B52  17DF               	andwf	(??_RTC_Calendario+1)& (0+255),f,b
  2423  002B54  0101               	movlb	1	; () banked
  2424  002B56  5125               	movf	(_hour+1)& (0+255),w,b
  2425  002B58  0100               	movlb	0	; () banked
  2426  002B5A  17E0               	andwf	(??_RTC_Calendario+2)& (0+255),f,b
  2427  002B5C  51DF               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2428  002B5E  11E0               	iorwf	(??_RTC_Calendario+2)& (0+255),w,b
  2429  002B60  B4D8               	btfsc	status,2,c
  2430  002B62  EFB5  F015         	goto	u5981
  2431  002B66  EFB7  F015         	goto	u5980
  2432  002B6A                     u5981:
  2433  002B6A  EF34  F016         	goto	l5218
  2434  002B6E                     u5980:
  2435  002B6E                     
  2436                           ; BSR set to: 0
  2437                           ;reloj.c: 104:             if(hour & (1<<AM_PM)){
  2438  002B6E  C1D2  F0DE         	movff	RTC_Calendario@AM_PM,??_RTC_Calendario
  2439  002B72  0E01               	movlw	1
  2440  002B74  6FDF               	movwf	(??_RTC_Calendario+1)& (0+255),b
  2441  002B76  0E00               	movlw	0
  2442  002B78  6FE0               	movwf	(??_RTC_Calendario+2)& (0+255),b
  2443  002B7A  2BDE               	incf	??_RTC_Calendario& (0+255),f,b
  2444  002B7C  EFC3  F015         	goto	u5994
  2445  002B80                     u5995:
  2446  002B80  90D8               	bcf	status,0,c
  2447  002B82  37DF               	rlcf	(??_RTC_Calendario+1)& (0+255),f,b
  2448  002B84  37E0               	rlcf	(??_RTC_Calendario+2)& (0+255),f,b
  2449  002B86                     u5994:
  2450  002B86  2FDE               	decfsz	??_RTC_Calendario& (0+255),f,b
  2451  002B88  EFC0  F015         	goto	u5995
  2452  002B8C  0101               	movlb	1	; () banked
  2453  002B8E  5124               	movf	_hour& (0+255),w,b
  2454  002B90  0100               	movlb	0	; () banked
  2455  002B92  17DF               	andwf	(??_RTC_Calendario+1)& (0+255),f,b
  2456  002B94  0101               	movlb	1	; () banked
  2457  002B96  5125               	movf	(_hour+1)& (0+255),w,b
  2458  002B98  0100               	movlb	0	; () banked
  2459  002B9A  17E0               	andwf	(??_RTC_Calendario+2)& (0+255),f,b
  2460  002B9C  51DF               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2461  002B9E  11E0               	iorwf	(??_RTC_Calendario+2)& (0+255),w,b
  2462  002BA0  B4D8               	btfsc	status,2,c
  2463  002BA2  EFD5  F015         	goto	u6001
  2464  002BA6  EFD7  F015         	goto	u6000
  2465  002BAA                     u6001:
  2466  002BAA  EFE2  F015         	goto	l5202
  2467  002BAE                     u6000:
  2468  002BAE                     
  2469                           ; BSR set to: 0
  2470                           ;reloj.c: 105:                 LCD_String_xy(1,14,"PM");
  2471  002BAE  0E0E               	movlw	14
  2472  002BB0  6E0B               	movwf	LCD_String_xy@pos^0,c
  2473  002BB2  0E54               	movlw	low STR_5
  2474  002BB4  6E0C               	movwf	LCD_String_xy@msg^0,c
  2475  002BB6  0E08               	movlw	high STR_5
  2476  002BB8  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2477  002BBA  0E01               	movlw	1
  2478  002BBC  EC81  F022         	call	_LCD_String_xy
  2479                           
  2480                           ;reloj.c: 106:             }
  2481  002BC0  EFEB  F015         	goto	l5204
  2482  002BC4                     l5202:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;reloj.c: 108:                 LCD_String_xy(1,14,"AM");
  2486  002BC4  0E0E               	movlw	14
  2487  002BC6  6E0B               	movwf	LCD_String_xy@pos^0,c
  2488  002BC8  0E51               	movlw	low STR_6
  2489  002BCA  6E0C               	movwf	LCD_String_xy@msg^0,c
  2490  002BCC  0E08               	movlw	high STR_6
  2491  002BCE  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2492  002BD0  0E01               	movlw	1
  2493  002BD2  EC81  F022         	call	_LCD_String_xy
  2494  002BD6                     l5204:
  2495                           
  2496                           ;reloj.c: 111:             hour = hour & (0x1f);
  2497  002BD6  0E1F               	movlw	31
  2498  002BD8  0101               	movlb	1	; () banked
  2499  002BDA  1524               	andwf	_hour& (0+255),w,b
  2500  002BDC  6F24               	movwf	_hour& (0+255),b
  2501  002BDE  6B25               	clrf	(_hour+1)& (0+255),b
  2502  002BE0                     
  2503                           ; BSR set to: 1
  2504                           ;reloj.c: 112:             sprintf(secs,"%x ",sec);
  2505  002BE0  0EB3               	movlw	low RTC_Calendario@secs
  2506  002BE2  0100               	movlb	0	; () banked
  2507  002BE4  6FCE               	movwf	sprintf@s& (0+255),b
  2508  002BE6  0E01               	movlw	high RTC_Calendario@secs
  2509  002BE8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2510  002BEA  0E26               	movlw	low STR_7
  2511  002BEC  6FD0               	movwf	sprintf@fmt& (0+255),b
  2512  002BEE  0E08               	movlw	high STR_7
  2513  002BF0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2514  002BF2  C128  F0D2         	movff	_sec,?_sprintf+4
  2515  002BF6  C129  F0D3         	movff	_sec+1,?_sprintf+5
  2516  002BFA  EC0F  F021         	call	_sprintf	;wreg free
  2517  002BFE                     
  2518                           ;reloj.c: 113:             sprintf(mins,"%x:",min);
  2519  002BFE  0EBD               	movlw	low RTC_Calendario@mins
  2520  002C00  0100               	movlb	0	; () banked
  2521  002C02  6FCE               	movwf	sprintf@s& (0+255),b
  2522  002C04  0E01               	movlw	high RTC_Calendario@mins
  2523  002C06  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2524  002C08  0E2E               	movlw	low STR_8
  2525  002C0A  6FD0               	movwf	sprintf@fmt& (0+255),b
  2526  002C0C  0E08               	movlw	high STR_8
  2527  002C0E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2528  002C10  C126  F0D2         	movff	_min,?_sprintf+4
  2529  002C14  C127  F0D3         	movff	_min+1,?_sprintf+5
  2530  002C18  EC0F  F021         	call	_sprintf	;wreg free
  2531  002C1C                     
  2532                           ;reloj.c: 114:             sprintf(hours,"%x:",hour);
  2533  002C1C  0EC7               	movlw	low RTC_Calendario@hours
  2534  002C1E  0100               	movlb	0	; () banked
  2535  002C20  6FCE               	movwf	sprintf@s& (0+255),b
  2536  002C22  0E01               	movlw	high RTC_Calendario@hours
  2537  002C24  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2538  002C26  0E2E               	movlw	low STR_8
  2539  002C28  6FD0               	movwf	sprintf@fmt& (0+255),b
  2540  002C2A  0E08               	movlw	high STR_8
  2541  002C2C  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2542  002C2E  C124  F0D2         	movff	_hour,?_sprintf+4
  2543  002C32  C125  F0D3         	movff	_hour+1,?_sprintf+5
  2544  002C36  EC0F  F021         	call	_sprintf	;wreg free
  2545  002C3A                     
  2546                           ;reloj.c: 115:             LCD_String_xy(0,4,hours);
  2547  002C3A  0E04               	movlw	4
  2548  002C3C  6E0B               	movwf	LCD_String_xy@pos^0,c
  2549  002C3E  0EC7               	movlw	low RTC_Calendario@hours
  2550  002C40  6E0C               	movwf	LCD_String_xy@msg^0,c
  2551  002C42  0E01               	movlw	high RTC_Calendario@hours
  2552  002C44  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2553  002C46  0E00               	movlw	0
  2554  002C48  EC81  F022         	call	_LCD_String_xy
  2555  002C4C                     l5214:
  2556                           
  2557                           ;reloj.c: 116:             LCD_String(mins);
  2558  002C4C  0EBD               	movlw	low RTC_Calendario@mins
  2559  002C4E  6E09               	movwf	LCD_String@msg^0,c
  2560  002C50  0E01               	movlw	high RTC_Calendario@mins
  2561  002C52  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2562  002C54  EC85  F020         	call	_LCD_String	;wreg free
  2563  002C58                     
  2564                           ;reloj.c: 117:             LCD_String(secs);
  2565  002C58  0EB3               	movlw	low RTC_Calendario@secs
  2566  002C5A  6E09               	movwf	LCD_String@msg^0,c
  2567  002C5C  0E01               	movlw	high RTC_Calendario@secs
  2568  002C5E  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2569  002C60  EC85  F020         	call	_LCD_String	;wreg free
  2570                           
  2571                           ;reloj.c: 118:         }
  2572  002C64  EF71  F016         	goto	l5232
  2573  002C68                     l5218:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;reloj.c: 121:             hour = hour & (0x3f);
  2577  002C68  0E3F               	movlw	63
  2578  002C6A  0101               	movlb	1	; () banked
  2579  002C6C  1524               	andwf	_hour& (0+255),w,b
  2580  002C6E  6F24               	movwf	_hour& (0+255),b
  2581  002C70  6B25               	clrf	(_hour+1)& (0+255),b
  2582  002C72                     
  2583                           ; BSR set to: 1
  2584                           ;reloj.c: 122:             sprintf(secs,"%x ",sec);
  2585  002C72  0EB3               	movlw	low RTC_Calendario@secs
  2586  002C74  0100               	movlb	0	; () banked
  2587  002C76  6FCE               	movwf	sprintf@s& (0+255),b
  2588  002C78  0E01               	movlw	high RTC_Calendario@secs
  2589  002C7A  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2590  002C7C  0E26               	movlw	low STR_7
  2591  002C7E  6FD0               	movwf	sprintf@fmt& (0+255),b
  2592  002C80  0E08               	movlw	high STR_7
  2593  002C82  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2594  002C84  C128  F0D2         	movff	_sec,?_sprintf+4
  2595  002C88  C129  F0D3         	movff	_sec+1,?_sprintf+5
  2596  002C8C  EC0F  F021         	call	_sprintf	;wreg free
  2597  002C90                     
  2598                           ;reloj.c: 123:             sprintf(mins,"%x:",min);
  2599  002C90  0EBD               	movlw	low RTC_Calendario@mins
  2600  002C92  0100               	movlb	0	; () banked
  2601  002C94  6FCE               	movwf	sprintf@s& (0+255),b
  2602  002C96  0E01               	movlw	high RTC_Calendario@mins
  2603  002C98  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2604  002C9A  0E2E               	movlw	low STR_8
  2605  002C9C  6FD0               	movwf	sprintf@fmt& (0+255),b
  2606  002C9E  0E08               	movlw	high STR_8
  2607  002CA0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2608  002CA2  C126  F0D2         	movff	_min,?_sprintf+4
  2609  002CA6  C127  F0D3         	movff	_min+1,?_sprintf+5
  2610  002CAA  EC0F  F021         	call	_sprintf	;wreg free
  2611  002CAE                     
  2612                           ;reloj.c: 124:             sprintf(hours,"%x:",hour);
  2613  002CAE  0EC7               	movlw	low RTC_Calendario@hours
  2614  002CB0  0100               	movlb	0	; () banked
  2615  002CB2  6FCE               	movwf	sprintf@s& (0+255),b
  2616  002CB4  0E01               	movlw	high RTC_Calendario@hours
  2617  002CB6  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2618  002CB8  0E2E               	movlw	low STR_8
  2619  002CBA  6FD0               	movwf	sprintf@fmt& (0+255),b
  2620  002CBC  0E08               	movlw	high STR_8
  2621  002CBE  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2622  002CC0  C124  F0D2         	movff	_hour,?_sprintf+4
  2623  002CC4  C125  F0D3         	movff	_hour+1,?_sprintf+5
  2624  002CC8  EC0F  F021         	call	_sprintf	;wreg free
  2625  002CCC                     
  2626                           ;reloj.c: 125:             LCD_String_xy(0,4,hours);
  2627  002CCC  0E04               	movlw	4
  2628  002CCE  6E0B               	movwf	LCD_String_xy@pos^0,c
  2629  002CD0  0EC7               	movlw	low RTC_Calendario@hours
  2630  002CD2  6E0C               	movwf	LCD_String_xy@msg^0,c
  2631  002CD4  0E01               	movlw	high RTC_Calendario@hours
  2632  002CD6  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2633  002CD8  0E00               	movlw	0
  2634  002CDA  EC81  F022         	call	_LCD_String_xy
  2635  002CDE  EF26  F016         	goto	l5214
  2636  002CE2                     l5232:
  2637                           
  2638                           ;reloj.c: 130:         RTC_Read_Calendar(3);
  2639  002CE2  0E03               	movlw	3
  2640  002CE4  ECE2  F020         	call	_RTC_Read_Calendar
  2641  002CE8                     
  2642                           ;reloj.c: 131:         I2C_Stop();
  2643  002CE8  ECFD  F023         	call	_I2C_Stop	;wreg free
  2644  002CEC                     
  2645                           ;reloj.c: 132:         sprintf(date,"%x-",Date);
  2646  002CEC  0E95               	movlw	low RTC_Calendario@date
  2647  002CEE  0100               	movlb	0	; () banked
  2648  002CF0  6FCE               	movwf	sprintf@s& (0+255),b
  2649  002CF2  0E01               	movlw	high RTC_Calendario@date
  2650  002CF4  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2651  002CF6  0E2A               	movlw	low STR_13
  2652  002CF8  6FD0               	movwf	sprintf@fmt& (0+255),b
  2653  002CFA  0E08               	movlw	high STR_13
  2654  002CFC  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2655  002CFE  C120  F0D2         	movff	_Date,?_sprintf+4
  2656  002D02  C121  F0D3         	movff	_Date+1,?_sprintf+5
  2657  002D06  EC0F  F021         	call	_sprintf	;wreg free
  2658  002D0A                     
  2659                           ;reloj.c: 133:         sprintf(month,"%x-",Month);
  2660  002D0A  0E9F               	movlw	low RTC_Calendario@month
  2661  002D0C  0100               	movlb	0	; () banked
  2662  002D0E  6FCE               	movwf	sprintf@s& (0+255),b
  2663  002D10  0E01               	movlw	high RTC_Calendario@month
  2664  002D12  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2665  002D14  0E2A               	movlw	low STR_13
  2666  002D16  6FD0               	movwf	sprintf@fmt& (0+255),b
  2667  002D18  0E08               	movlw	high STR_13
  2668  002D1A  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2669  002D1C  C11E  F0D2         	movff	_Month,?_sprintf+4
  2670  002D20  C11F  F0D3         	movff	_Month+1,?_sprintf+5
  2671  002D24  EC0F  F021         	call	_sprintf	;wreg free
  2672  002D28                     
  2673                           ;reloj.c: 134:         sprintf(year,"%x ",Year);
  2674  002D28  0EA9               	movlw	low RTC_Calendario@year
  2675  002D2A  0100               	movlb	0	; () banked
  2676  002D2C  6FCE               	movwf	sprintf@s& (0+255),b
  2677  002D2E  0E01               	movlw	high RTC_Calendario@year
  2678  002D30  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  2679  002D32  0E26               	movlw	low STR_7
  2680  002D34  6FD0               	movwf	sprintf@fmt& (0+255),b
  2681  002D36  0E08               	movlw	high STR_7
  2682  002D38  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  2683  002D3A  C11C  F0D2         	movff	_Year,?_sprintf+4
  2684  002D3E  C11D  F0D3         	movff	_Year+1,?_sprintf+5
  2685  002D42  EC0F  F021         	call	_sprintf	;wreg free
  2686  002D46                     
  2687                           ;reloj.c: 135:         LCD_String_xy(2,2,date);
  2688  002D46  0E02               	movlw	2
  2689  002D48  6E0B               	movwf	LCD_String_xy@pos^0,c
  2690  002D4A  0E95               	movlw	low RTC_Calendario@date
  2691  002D4C  6E0C               	movwf	LCD_String_xy@msg^0,c
  2692  002D4E  0E01               	movlw	high RTC_Calendario@date
  2693  002D50  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2694  002D52  0E02               	movlw	2
  2695  002D54  EC81  F022         	call	_LCD_String_xy
  2696  002D58                     
  2697                           ;reloj.c: 136:         LCD_String(month);
  2698  002D58  0E9F               	movlw	low RTC_Calendario@month
  2699  002D5A  6E09               	movwf	LCD_String@msg^0,c
  2700  002D5C  0E01               	movlw	high RTC_Calendario@month
  2701  002D5E  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2702  002D60  EC85  F020         	call	_LCD_String	;wreg free
  2703  002D64                     
  2704                           ;reloj.c: 137:         LCD_String(year);
  2705  002D64  0EA9               	movlw	low RTC_Calendario@year
  2706  002D66  6E09               	movwf	LCD_String@msg^0,c
  2707  002D68  0E01               	movlw	high RTC_Calendario@year
  2708  002D6A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2709  002D6C  EC85  F020         	call	_LCD_String	;wreg free
  2710                           
  2711                           ;reloj.c: 140:         switch(days[Day])
  2712  002D70  EFF2  F016         	goto	l5292
  2713  002D74                     l5248:
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;reloj.c: 143:                         LCD_String("Sun");
  2717  002D74  0E42               	movlw	low STR_16
  2718  002D76  6E09               	movwf	LCD_String@msg^0,c
  2719  002D78  0E08               	movlw	high STR_16
  2720  002D7A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2721  002D7C  EC85  F020         	call	_LCD_String	;wreg free
  2722  002D80  EF23  F017         	goto	l281
  2723  002D84                     l5254:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;reloj.c: 147:                         LCD_String("Mon");
  2727  002D84  0E3E               	movlw	low STR_17
  2728  002D86  6E09               	movwf	LCD_String@msg^0,c
  2729  002D88  0E08               	movlw	high STR_17
  2730  002D8A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2731  002D8C  EC85  F020         	call	_LCD_String	;wreg free
  2732  002D90  EF23  F017         	goto	l281
  2733  002D94                     l5260:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;reloj.c: 151:                         LCD_String("Tue");
  2737  002D94  0E36               	movlw	low STR_18
  2738  002D96  6E09               	movwf	LCD_String@msg^0,c
  2739  002D98  0E08               	movlw	high STR_18
  2740  002D9A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2741  002D9C  EC85  F020         	call	_LCD_String	;wreg free
  2742  002DA0  EF23  F017         	goto	l281
  2743  002DA4                     l5266:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;reloj.c: 155:                         LCD_String("Wed");
  2747  002DA4  0E32               	movlw	low STR_19
  2748  002DA6  6E09               	movwf	LCD_String@msg^0,c
  2749  002DA8  0E08               	movlw	high STR_19
  2750  002DAA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2751  002DAC  EC85  F020         	call	_LCD_String	;wreg free
  2752  002DB0  EF23  F017         	goto	l281
  2753  002DB4                     l5272:
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;reloj.c: 159:                         LCD_String("Thu");
  2757  002DB4  0E4A               	movlw	low STR_20
  2758  002DB6  6E09               	movwf	LCD_String@msg^0,c
  2759  002DB8  0E08               	movlw	high STR_20
  2760  002DBA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2761  002DBC  EC85  F020         	call	_LCD_String	;wreg free
  2762  002DC0  EF23  F017         	goto	l281
  2763  002DC4                     l5278:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;reloj.c: 163:                         LCD_String("Fri");
  2767  002DC4  0E3A               	movlw	low STR_21
  2768  002DC6  6E09               	movwf	LCD_String@msg^0,c
  2769  002DC8  0E08               	movlw	high STR_21
  2770  002DCA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2771  002DCC  EC85  F020         	call	_LCD_String	;wreg free
  2772  002DD0  EF23  F017         	goto	l281
  2773  002DD4                     l5284:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;reloj.c: 167:                         LCD_String("Sat");
  2777  002DD4  0E46               	movlw	low STR_22
  2778  002DD6  6E09               	movwf	LCD_String@msg^0,c
  2779  002DD8  0E08               	movlw	high STR_22
  2780  002DDA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2781  002DDC  EC85  F020         	call	_LCD_String	;wreg free
  2782  002DE0  EF23  F017         	goto	l281
  2783  002DE4                     l5292:
  2784  002DE4  0E8E               	movlw	low RTC_Calendario@days
  2785  002DE6  0101               	movlb	1	; () banked
  2786  002DE8  2522               	addwf	_Day& (0+255),w,b
  2787  002DEA  6ED9               	movwf	fsr2l,c
  2788  002DEC  0E01               	movlw	high RTC_Calendario@days
  2789  002DEE  2123               	addwfc	(_Day+1)& (0+255),w,b
  2790  002DF0  6EDA               	movwf	fsr2h,c
  2791  002DF2  50DF               	movf	indf2,w,c
  2792  002DF4  0100               	movlb	0	; () banked
  2793  002DF6  6FDE               	movwf	??_RTC_Calendario& (0+255),b
  2794  002DF8  6BDF               	clrf	(??_RTC_Calendario+1)& (0+255),b
  2795                           
  2796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2797                           ; Switch size 1, requested type "simple"
  2798                           ; Number of cases is 1, Range of values is 0 to 0
  2799                           ; switch strategies available:
  2800                           ; Name         Instructions Cycles
  2801                           ; simple_byte            4     3 (average)
  2802                           ;	Chosen strategy is simple_byte
  2803  002DFA  51DF               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2804  002DFC  0A00               	xorlw	0	; case 0
  2805  002DFE  B4D8               	btfsc	status,2,c
  2806  002E00  EF04  F017         	goto	l5484
  2807  002E04  EF93  F015         	goto	l5194
  2808  002E08                     l5484:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ; Switch size 1, requested type "simple"
  2812                           ; Number of cases is 7, Range of values is 70 to 116
  2813                           ; switch strategies available:
  2814                           ; Name         Instructions Cycles
  2815                           ; simple_byte           22    12 (average)
  2816                           ;	Chosen strategy is simple_byte
  2817  002E08  51DE               	movf	??_RTC_Calendario& (0+255),w,b
  2818  002E0A  0A46               	xorlw	70	; case 70
  2819  002E0C  B4D8               	btfsc	status,2,c
  2820  002E0E  EFE2  F016         	goto	l5278
  2821  002E12  0A0B               	xorlw	11	; case 77
  2822  002E14  B4D8               	btfsc	status,2,c
  2823  002E16  EFC2  F016         	goto	l5254
  2824  002E1A  0A1E               	xorlw	30	; case 83
  2825  002E1C  B4D8               	btfsc	status,2,c
  2826  002E1E  EFBA  F016         	goto	l5248
  2827  002E22  0A07               	xorlw	7	; case 84
  2828  002E24  B4D8               	btfsc	status,2,c
  2829  002E26  EFCA  F016         	goto	l5260
  2830  002E2A  0A03               	xorlw	3	; case 87
  2831  002E2C  B4D8               	btfsc	status,2,c
  2832  002E2E  EFD2  F016         	goto	l5266
  2833  002E32  0A24               	xorlw	36	; case 115
  2834  002E34  B4D8               	btfsc	status,2,c
  2835  002E36  EFEA  F016         	goto	l5284
  2836  002E3A  0A07               	xorlw	7	; case 116
  2837  002E3C  B4D8               	btfsc	status,2,c
  2838  002E3E  EFDA  F016         	goto	l5272
  2839  002E42  EF93  F015         	goto	l5194
  2840  002E46                     l281:
  2841  002E46  0012               	return		;funcret
  2842  002E48                     __end_of_RTC_Calendario:
  2843                           	callstack 0
  2844                           
  2845 ;; *************** function _sprintf *****************
  2846 ;; Defined at:
  2847 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  s               2  110[BANK0 ] PTR unsigned char 
  2850 ;;		 -> RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), 
  2851 ;;		 -> RTC_Calendario@mins(10), RTC_Calendario@secs(10), Stemp(20), 
  2852 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  2853 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
  2854 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  2855 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  f               6  120[BANK0 ] struct _IO_FILE
  2858 ;;  ap              2  118[BANK0 ] PTR void [1]
  2859 ;;		 -> ?_sprintf(2), 
  2860 ;;  ret             2    0        int 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  2  110[BANK0 ] int 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2870 ;;      Params:         0       8       0       0       0       0       0       0       0
  2871 ;;      Locals:         0       8       0       0       0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2873 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2874 ;;Total ram usage:       16 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 8
  2877 ;; This function calls:
  2878 ;;		_vfprintf
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;;		_RTC_Calendario
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text5
  2886  00421E                     __ptext5:
  2887                           	callstack 0
  2888  00421E                     _sprintf:
  2889                           	callstack 22
  2890  00421E  0ED2               	movlw	low (?_sprintf+4)
  2891  004220  0100               	movlb	0	; () banked
  2892  004222  6FD6               	movwf	sprintf@ap& (0+255),b
  2893  004224  0E00               	movlw	high (?_sprintf+4)
  2894  004226  6FD7               	movwf	(sprintf@ap+1)& (0+255),b
  2895  004228  C0CE  F0D8         	movff	sprintf@s,sprintf@f
  2896  00422C  C0CF  F0D9         	movff	sprintf@s+1,sprintf@f+1
  2897  004230                     
  2898                           ; BSR set to: 0
  2899  004230  0E00               	movlw	0
  2900  004232  6FDB               	movwf	(sprintf@f+3)& (0+255),b
  2901  004234  0E00               	movlw	0
  2902  004236  6FDA               	movwf	(sprintf@f+2)& (0+255),b
  2903  004238                     
  2904                           ; BSR set to: 0
  2905  004238  0E00               	movlw	0
  2906  00423A  6FDD               	movwf	(sprintf@f+5)& (0+255),b
  2907  00423C  0E00               	movlw	0
  2908  00423E  6FDC               	movwf	(sprintf@f+4)& (0+255),b
  2909  004240                     
  2910                           ; BSR set to: 0
  2911  004240  0ED8               	movlw	low sprintf@f
  2912  004242  6FC6               	movwf	vfprintf@fp& (0+255),b
  2913  004244  0E00               	movlw	high sprintf@f
  2914  004246  6FC7               	movwf	(vfprintf@fp+1)& (0+255),b
  2915  004248  C0D0  F0C8         	movff	sprintf@fmt,vfprintf@fmt
  2916  00424C  C0D1  F0C9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2917  004250  0ED6               	movlw	low sprintf@ap
  2918  004252  6FCA               	movwf	vfprintf@ap& (0+255),b
  2919  004254  0E00               	movlw	high sprintf@ap
  2920  004256  6FCB               	movwf	(vfprintf@ap+1)& (0+255),b
  2921  004258  ECF5  F01F         	call	_vfprintf	;wreg free
  2922  00425C  0100               	movlb	0	; () banked
  2923  00425E  51DA               	movf	(sprintf@f+2)& (0+255),w,b
  2924  004260  25CE               	addwf	sprintf@s& (0+255),w,b
  2925  004262  6ED9               	movwf	fsr2l,c
  2926  004264  51DB               	movf	(sprintf@f+3)& (0+255),w,b
  2927  004266  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  2928  004268  6EDA               	movwf	fsr2h,c
  2929  00426A  0E00               	movlw	0
  2930  00426C  6EDF               	movwf	indf2,c
  2931  00426E                     
  2932                           ; BSR set to: 0
  2933  00426E  0012               	return		;funcret
  2934  004270                     __end_of_sprintf:
  2935                           	callstack 0
  2936                           
  2937 ;; *************** function _vfprintf *****************
  2938 ;; Defined at:
  2939 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  fp              2  102[BANK0 ] PTR struct _IO_FILE
  2942 ;;		 -> sprintf@f(6), 
  2943 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  2944 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
  2945 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  2946 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
  2947 ;;  ap              2  106[BANK0 ] PTR PTR void 
  2948 ;;		 -> sprintf@ap(2), 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  2951 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
  2952 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
  2953 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2  102[BANK0 ] int 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2963 ;;      Params:         0       6       0       0       0       0       0       0       0
  2964 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2966 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2967 ;;Total ram usage:        8 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 7
  2970 ;; This function calls:
  2971 ;;		_vfpfcnvrt
  2972 ;; This function is called by:
  2973 ;;		_sprintf
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text6
  2978  003FEA                     __ptext6:
  2979                           	callstack 0
  2980  003FEA                     _vfprintf:
  2981                           	callstack 22
  2982  003FEA                     
  2983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2984  003FEA  C0C8  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  2985  003FEE  C0C9  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2986  003FF2                     
  2987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2988  003FF2  0E00               	movlw	0
  2989  003FF4  0100               	movlb	0	; () banked
  2990  003FF6  6FF6               	movwf	(_nout+1)& (0+255),b
  2991  003FF8  0E00               	movlw	0
  2992  003FFA  6FF5               	movwf	_nout& (0+255),b
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2995  003FFC  EF13  F020         	goto	l5006
  2996  004000                     l5004:
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3000  004000  C0C6  F0A6         	movff	vfprintf@fp,vfpfcnvrt@fp
  3001  004004  C0C7  F0A7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3002  004008  0ECC               	movlw	low vfprintf@cfmt
  3003  00400A  6FA8               	movwf	vfpfcnvrt@fmt& (0+255),b
  3004  00400C  0E00               	movlw	high vfprintf@cfmt
  3005  00400E  6FA9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3006  004010  C0CA  F0AA         	movff	vfprintf@ap,vfpfcnvrt@ap
  3007  004014  C0CB  F0AB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3008  004018  EC58  F00A         	call	_vfpfcnvrt	;wreg free
  3009  00401C  0100               	movlb	0	; () banked
  3010  00401E  51A6               	movf	?_vfpfcnvrt& (0+255),w,b
  3011  004020  27F5               	addwf	_nout& (0+255),f,b
  3012  004022  51A7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3013  004024  23F6               	addwfc	(_nout+1)& (0+255),f,b
  3014  004026                     l5006:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3018  004026  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  3019  00402A  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3020  00402E                     	if	0	;tblptru may be non-zero
  3021  00402E                     	endif
  3022  00402E                     	if	0	;tblptru may be non-zero
  3023  00402E                     	endif
  3024  00402E  0008               	tblrd		*
  3025  004030  50F5               	movf	tablat,w,c
  3026  004032  0900               	iorlw	0
  3027  004034  A4D8               	btfss	status,2,c
  3028  004036  EF1F  F020         	goto	u5821
  3029  00403A  EF21  F020         	goto	u5820
  3030  00403E                     u5821:
  3031  00403E  EF00  F020         	goto	l5004
  3032  004042                     u5820:
  3033  004042                     
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3036  004042  C0F5  F0C6         	movff	_nout,?_vfprintf
  3037  004046  C0F6  F0C7         	movff	_nout+1,?_vfprintf+1
  3038  00404A                     
  3039                           ; BSR set to: 0
  3040  00404A  0012               	return		;funcret
  3041  00404C                     __end_of_vfprintf:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _vfpfcnvrt *****************
  3045 ;; Defined at:
  3046 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  3049 ;;		 -> sprintf@f(6), 
  3050 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  3051 ;;		 -> vfprintf@cfmt(2), 
  3052 ;;  ap              2   74[BANK0 ] PTR PTR void 
  3053 ;;		 -> sprintf@ap(2), 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  llu             8   80[BANK0 ] unsigned long long 
  3056 ;;  ll              8    0        long long 
  3057 ;;  f               4   94[BANK0 ] long long 
  3058 ;;  ct              3   98[BANK0 ] unsigned char [3]
  3059 ;;  vp              3    0        PTR void 
  3060 ;;  cp              3    0        PTR unsigned char 
  3061 ;;  done            2   88[BANK0 ] int 
  3062 ;;  i               2    0        int 
  3063 ;;  c               1  101[BANK0 ] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2   70[BANK0 ] int 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3073 ;;      Params:         0       6       0       0       0       0       0       0       0
  3074 ;;      Locals:         0      22       0       0       0       0       0       0       0
  3075 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3076 ;;      Totals:         0      32       0       0       0       0       0       0       0
  3077 ;;Total ram usage:       32 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; Hardware stack levels required when called: 6
  3080 ;; This function calls:
  3081 ;;		_atoi
  3082 ;;		_efgtoa
  3083 ;;		_fputc
  3084 ;;		_isdigit
  3085 ;;		_isupper
  3086 ;;		_strncmp
  3087 ;;		_tolower
  3088 ;;		_xtoa
  3089 ;; This function is called by:
  3090 ;;		_vfprintf
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text7
  3095  0014B0                     __ptext7:
  3096                           	callstack 0
  3097  0014B0                     _vfpfcnvrt:
  3098                           	callstack 22
  3099  0014B0                     
  3100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3101  0014B0  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3102  0014B4  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3103  0014B8  CFDE FFF6          	movff	postinc2,tblptrl
  3104  0014BC  CFDD FFF7          	movff	postdec2,tblptrh
  3105  0014C0                     	if	0	;tblptru may be non-zero
  3106  0014C0                     	endif
  3107  0014C0                     	if	0	;tblptru may be non-zero
  3108  0014C0                     	endif
  3109  0014C0  0008               	tblrd		*
  3110  0014C2  50F5               	movf	tablat,w,c
  3111  0014C4  0A25               	xorlw	37
  3112  0014C6  A4D8               	btfss	status,2,c
  3113  0014C8  EF68  F00A         	goto	u5541
  3114  0014CC  EF6A  F00A         	goto	u5540
  3115  0014D0                     u5541:
  3116  0014D0  EF43  F00D         	goto	l4924
  3117  0014D4                     u5540:
  3118  0014D4                     
  3119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3120  0014D4  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3121  0014D8  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3122  0014DC  2ADE               	incf	postinc2,f,c
  3123  0014DE  0E00               	movlw	0
  3124  0014E0  22DD               	addwfc	postdec2,f,c
  3125  0014E2                     
  3126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3127  0014E2  0E00               	movlw	0
  3128  0014E4  0100               	movlb	0	; () banked
  3129  0014E6  6FF8               	movwf	(_width+1)& (0+255),b
  3130  0014E8  0E00               	movlw	0
  3131  0014EA  6FF7               	movwf	_width& (0+255),b
  3132  0014EC  C0F7  F0FB         	movff	_width,_flags
  3133  0014F0  C0F8  F0FC         	movff	_width+1,_flags+1
  3134  0014F4                     
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3137  0014F4  69F9               	setf	_prec& (0+255),b
  3138  0014F6  69FA               	setf	(_prec+1)& (0+255),b
  3139  0014F8                     
  3140                           ; BSR set to: 0
  3141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  3142  0014F8  0E00               	movlw	0
  3143  0014FA  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3144  0014FC  0E00               	movlw	0
  3145  0014FE  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3148  001500  EFC8  F00A         	goto	l4832
  3149  001504                     l4806:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  3153  001504  81FB               	bsf	_flags& (0+255),0,b
  3154  001506                     l4808:
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  3158  001506  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3159  00150A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3160  00150E  2ADE               	incf	postinc2,f,c
  3161  001510  0E00               	movlw	0
  3162  001512  22DD               	addwfc	postdec2,f,c
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  3165  001514  EFC8  F00A         	goto	l4832
  3166  001518                     l4810:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  3170  001518  83FB               	bsf	_flags& (0+255),1,b
  3171  00151A  EF83  F00A         	goto	l4808
  3172  00151E                     l4814:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  3176  00151E  85FB               	bsf	_flags& (0+255),2,b
  3177  001520  EF83  F00A         	goto	l4808
  3178  001524                     l4818:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  3182  001524  87FB               	bsf	_flags& (0+255),3,b
  3183  001526  EF83  F00A         	goto	l4808
  3184  00152A                     l4822:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  3188  00152A  89FB               	bsf	_flags& (0+255),4,b
  3189  00152C  EF83  F00A         	goto	l4808
  3190  001530                     l4826:
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  3194  001530  0E00               	movlw	0
  3195  001532  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3196  001534  0E01               	movlw	1
  3197  001536  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  3198                           
  3199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  3200  001538  EFC8  F00A         	goto	l4832
  3201  00153C                     l4830:
  3202                           
  3203                           ; BSR set to: 0
  3204  00153C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3205  001540  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3206  001544  CFDE FFF6          	movff	postinc2,tblptrl
  3207  001548  CFDD FFF7          	movff	postdec2,tblptrh
  3208  00154C                     	if	0	;tblptru may be non-zero
  3209  00154C                     	endif
  3210  00154C                     	if	0	;tblptru may be non-zero
  3211  00154C                     	endif
  3212  00154C  0008               	tblrd		*
  3213  00154E  50F5               	movf	tablat,w,c
  3214  001550  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3215  001552  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3216                           
  3217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3218                           ; Switch size 1, requested type "simple"
  3219                           ; Number of cases is 1, Range of values is 0 to 0
  3220                           ; switch strategies available:
  3221                           ; Name         Instructions Cycles
  3222                           ; simple_byte            4     3 (average)
  3223                           ;	Chosen strategy is simple_byte
  3224  001554  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3225  001556  0A00               	xorlw	0	; case 0
  3226  001558  B4D8               	btfsc	status,2,c
  3227  00155A  EFB1  F00A         	goto	l5486
  3228  00155E  EF98  F00A         	goto	l4826
  3229  001562                     l5486:
  3230                           
  3231                           ; BSR set to: 0
  3232                           ; Switch size 1, requested type "simple"
  3233                           ; Number of cases is 5, Range of values is 32 to 48
  3234                           ; switch strategies available:
  3235                           ; Name         Instructions Cycles
  3236                           ; simple_byte           16     9 (average)
  3237                           ;	Chosen strategy is simple_byte
  3238  001562  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3239  001564  0A20               	xorlw	32	; case 32
  3240  001566  B4D8               	btfsc	status,2,c
  3241  001568  EF92  F00A         	goto	l4818
  3242  00156C  0A03               	xorlw	3	; case 35
  3243  00156E  B4D8               	btfsc	status,2,c
  3244  001570  EF95  F00A         	goto	l4822
  3245  001574  0A08               	xorlw	8	; case 43
  3246  001576  B4D8               	btfsc	status,2,c
  3247  001578  EF8F  F00A         	goto	l4814
  3248  00157C  0A06               	xorlw	6	; case 45
  3249  00157E  B4D8               	btfsc	status,2,c
  3250  001580  EF82  F00A         	goto	l4806
  3251  001584  0A1D               	xorlw	29	; case 48
  3252  001586  B4D8               	btfsc	status,2,c
  3253  001588  EF8C  F00A         	goto	l4810
  3254  00158C  EF98  F00A         	goto	l4826
  3255  001590                     l4832:
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  3259  001590  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  3260  001592  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3261  001594  B4D8               	btfsc	status,2,c
  3262  001596  EFCF  F00A         	goto	u5551
  3263  00159A  EFD1  F00A         	goto	u5550
  3264  00159E                     u5551:
  3265  00159E  EF9E  F00A         	goto	l4830
  3266  0015A2                     u5550:
  3267  0015A2                     
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  3270  0015A2  A1FB               	btfss	_flags& (0+255),0,b
  3271  0015A4  EFD6  F00A         	goto	u5561
  3272  0015A8  EFD8  F00A         	goto	u5560
  3273  0015AC                     u5561:
  3274  0015AC  EFD9  F00A         	goto	l4836
  3275  0015B0                     u5560:
  3276  0015B0                     
  3277                           ; BSR set to: 0
  3278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  3279  0015B0  93FB               	bcf	_flags& (0+255),1,b
  3280  0015B2                     l4836:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  3284  0015B2  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3285  0015B6  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3286  0015BA  CFDE FFF6          	movff	postinc2,tblptrl
  3287  0015BE  CFDD FFF7          	movff	postdec2,tblptrh
  3288  0015C2                     	if	0	;tblptru may be non-zero
  3289  0015C2                     	endif
  3290  0015C2                     	if	0	;tblptru may be non-zero
  3291  0015C2                     	endif
  3292  0015C2  0008               	tblrd		*
  3293  0015C4  50F5               	movf	tablat,w,c
  3294  0015C6  0A2E               	xorlw	46
  3295  0015C8  A4D8               	btfss	status,2,c
  3296  0015CA  EFE9  F00A         	goto	u5571
  3297  0015CE  EFEB  F00A         	goto	u5570
  3298  0015D2                     u5571:
  3299  0015D2  EF69  F00B         	goto	l4856
  3300  0015D6                     u5570:
  3301  0015D6                     
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  3304  0015D6  0E00               	movlw	0
  3305  0015D8  6FFA               	movwf	(_prec+1)& (0+255),b
  3306  0015DA  0E00               	movlw	0
  3307  0015DC  6FF9               	movwf	_prec& (0+255),b
  3308  0015DE                     
  3309                           ; BSR set to: 0
  3310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  3311  0015DE  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3312  0015E2  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3313  0015E6  2ADE               	incf	postinc2,f,c
  3314  0015E8  0E00               	movlw	0
  3315  0015EA  22DD               	addwfc	postdec2,f,c
  3316  0015EC                     
  3317                           ; BSR set to: 0
  3318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  3319  0015EC  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3320  0015F0  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3321  0015F4  CFDE FFF6          	movff	postinc2,tblptrl
  3322  0015F8  CFDD FFF7          	movff	postdec2,tblptrh
  3323  0015FC                     	if	0	;tblptru may be non-zero
  3324  0015FC                     	endif
  3325  0015FC                     	if	0	;tblptru may be non-zero
  3326  0015FC                     	endif
  3327  0015FC  0008               	tblrd		*
  3328  0015FE  50F5               	movf	tablat,w,c
  3329  001600  0A2A               	xorlw	42
  3330  001602  A4D8               	btfss	status,2,c
  3331  001604  EF06  F00B         	goto	u5581
  3332  001608  EF08  F00B         	goto	u5580
  3333  00160C                     u5581:
  3334  00160C  EF25  F00B         	goto	l4846
  3335  001610                     u5580:
  3336  001610                     
  3337                           ; BSR set to: 0
  3338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  3339  001610  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3340  001614  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3341  001618  2ADE               	incf	postinc2,f,c
  3342  00161A  0E00               	movlw	0
  3343  00161C  22DD               	addwfc	postdec2,f,c
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3346  00161E  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3347  001622  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3348  001626  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3349  00162A  0E02               	movlw	2
  3350  00162C  26DE               	addwf	postinc2,f,c
  3351  00162E  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3352  001632  0E00               	movlw	0
  3353  001634  22DD               	addwfc	postdec2,f,c
  3354  001636  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3355  00163A  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3356  00163E  CFDE F0F9          	movff	postinc2,_prec
  3357  001642  CFDD F0FA          	movff	postdec2,_prec+1
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  3360  001646  EF69  F00B         	goto	l4856
  3361  00164A                     l4846:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  3365  00164A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3366  00164E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3367  001652  CFDE F008          	movff	postinc2,atoi@s
  3368  001656  CFDD F009          	movff	postdec2,atoi@s+1
  3369  00165A  EC74  F01A         	call	_atoi	;wreg free
  3370  00165E  C008  F0F9         	movff	?_atoi,_prec
  3371  001662  C009  F0FA         	movff	?_atoi+1,_prec+1
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3374  001666  EF3C  F00B         	goto	l4850
  3375  00166A                     l4848:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  3379  00166A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3380  00166E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3381  001672  2ADE               	incf	postinc2,f,c
  3382  001674  0E00               	movlw	0
  3383  001676  22DD               	addwfc	postdec2,f,c
  3384  001678                     l4850:
  3385  001678  0ED0               	movlw	208
  3386  00167A  0100               	movlb	0	; () banked
  3387  00167C  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3388  00167E  0EFF               	movlw	255
  3389  001680  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3390  001682  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3391  001686  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3392  00168A  CFDE FFF6          	movff	postinc2,tblptrl
  3393  00168E  CFDD FFF7          	movff	postdec2,tblptrh
  3394  001692                     	if	0	;tblptru may be non-zero
  3395  001692                     	endif
  3396  001692                     	if	0	;tblptru may be non-zero
  3397  001692                     	endif
  3398  001692  0008               	tblrd		*
  3399  001694  50F5               	movf	tablat,w,c
  3400  001696  6FAE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3401  001698  6BAF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3402  00169A  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3403  00169C  27AE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3404  00169E  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3405  0016A0  23AF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3406  0016A2  51AF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3407  0016A4  E10A               	bnz	u5590
  3408  0016A6  0E0A               	movlw	10
  3409  0016A8  5DAE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3410  0016AA  A0D8               	btfss	status,0,c
  3411  0016AC  EF5A  F00B         	goto	u5591
  3412  0016B0  EF5D  F00B         	goto	u5590
  3413  0016B4                     u5591:
  3414  0016B4  0E01               	movlw	1
  3415  0016B6  EF5E  F00B         	goto	u5600
  3416  0016BA                     u5590:
  3417  0016BA  0E00               	movlw	0
  3418  0016BC                     u5600:
  3419  0016BC  6FBA               	movwf	_vfpfcnvrt$1708& (0+255),b
  3420  0016BE  6BBB               	clrf	(_vfpfcnvrt$1708+1)& (0+255),b
  3421  0016C0                     
  3422                           ; BSR set to: 0
  3423  0016C0  51BA               	movf	_vfpfcnvrt$1708& (0+255),w,b
  3424  0016C2  11BB               	iorwf	(_vfpfcnvrt$1708+1)& (0+255),w,b
  3425  0016C4  A4D8               	btfss	status,2,c
  3426  0016C6  EF67  F00B         	goto	u5611
  3427  0016CA  EF69  F00B         	goto	u5610
  3428  0016CE                     u5611:
  3429  0016CE  EF35  F00B         	goto	l4848
  3430  0016D2                     u5610:
  3431  0016D2                     l4856:
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3435  0016D2  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3436  0016D6  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3437  0016DA  CFDE FFF6          	movff	postinc2,tblptrl
  3438  0016DE  CFDD FFF7          	movff	postdec2,tblptrh
  3439  0016E2                     	if	0	;tblptru may be non-zero
  3440  0016E2                     	endif
  3441  0016E2                     	if	0	;tblptru may be non-zero
  3442  0016E2                     	endif
  3443  0016E2  0008               	tblrd		*
  3444  0016E4  50F5               	movf	tablat,w,c
  3445  0016E6  6E07               	movwf	tolower@c^0,c
  3446  0016E8  6A08               	clrf	(tolower@c+1)^0,c
  3447  0016EA  EC26  F020         	call	_tolower	;wreg free
  3448  0016EE  5007               	movf	?_tolower^0,w,c
  3449  0016F0  0100               	movlb	0	; () banked
  3450  0016F2  6FC2               	movwf	vfpfcnvrt@ct& (0+255),b
  3451  0016F4                     
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3454  0016F4  51C2               	movf	vfpfcnvrt@ct& (0+255),w,b
  3455  0016F6  B4D8               	btfsc	status,2,c
  3456  0016F8  EF80  F00B         	goto	u5621
  3457  0016FC  EF82  F00B         	goto	u5620
  3458  001700                     u5621:
  3459  001700  EFBC  F00B         	goto	l4866
  3460  001704                     u5620:
  3461  001704                     
  3462                           ; BSR set to: 0
  3463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3464  001704  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3465  001708  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3466  00170C  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  3467  001710  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  3468  001714  0E01               	movlw	1
  3469  001716  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  3470  001718  0E00               	movlw	0
  3471  00171A  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3472  00171C  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3473  001720  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3474  001724                     	if	0	;tblptru may be non-zero
  3475  001724                     	endif
  3476  001724                     	if	0	;tblptru may be non-zero
  3477  001724                     	endif
  3478  001724  0008               	tblrd		*
  3479  001726  50F5               	movf	tablat,w,c
  3480  001728  6E07               	movwf	tolower@c^0,c
  3481  00172A  6A08               	clrf	(tolower@c+1)^0,c
  3482  00172C  EC26  F020         	call	_tolower	;wreg free
  3483  001730  5007               	movf	?_tolower^0,w,c
  3484  001732  0100               	movlb	0	; () banked
  3485  001734  6FC3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3486  001736                     
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3489  001736  51C3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3490  001738  B4D8               	btfsc	status,2,c
  3491  00173A  EFA1  F00B         	goto	u5631
  3492  00173E  EFA3  F00B         	goto	u5630
  3493  001742                     u5631:
  3494  001742  EFBC  F00B         	goto	l4866
  3495  001746                     u5630:
  3496  001746                     
  3497                           ; BSR set to: 0
  3498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3499  001746  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3500  00174A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3501  00174E  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  3502  001752  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  3503  001756  0E02               	movlw	2
  3504  001758  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  3505  00175A  0E00               	movlw	0
  3506  00175C  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3507  00175E  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3508  001762  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3509  001766                     	if	0	;tblptru may be non-zero
  3510  001766                     	endif
  3511  001766                     	if	0	;tblptru may be non-zero
  3512  001766                     	endif
  3513  001766  0008               	tblrd		*
  3514  001768  50F5               	movf	tablat,w,c
  3515  00176A  6E07               	movwf	tolower@c^0,c
  3516  00176C  6A08               	clrf	(tolower@c+1)^0,c
  3517  00176E  EC26  F020         	call	_tolower	;wreg free
  3518  001772  5007               	movf	?_tolower^0,w,c
  3519  001774  0100               	movlb	0	; () banked
  3520  001776  6FC4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3521  001778                     l4866:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3525  001778  0E66               	movlw	102
  3526  00177A  19C2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3527  00177C  A4D8               	btfss	status,2,c
  3528  00177E  EFC3  F00B         	goto	u5641
  3529  001782  EFC5  F00B         	goto	u5640
  3530  001786                     u5641:
  3531  001786  EF05  F00C         	goto	l4878
  3532  00178A                     u5640:
  3533  00178A                     
  3534                           ; BSR set to: 0
  3535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3536  00178A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3537  00178E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3538  001792  CFDE FFF6          	movff	postinc2,tblptrl
  3539  001796  CFDD FFF7          	movff	postdec2,tblptrh
  3540  00179A                     	if	0	;tblptru may be non-zero
  3541  00179A                     	endif
  3542  00179A                     	if	0	;tblptru may be non-zero
  3543  00179A                     	endif
  3544  00179A  0008               	tblrd		*
  3545  00179C  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  3546  0017A0                     
  3547                           ; BSR set to: 0
  3548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3549  0017A0  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3550  0017A4  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3551  0017A8  2ADE               	incf	postinc2,f,c
  3552  0017AA  0E00               	movlw	0
  3553  0017AC  22DD               	addwfc	postdec2,f,c
  3554  0017AE                     
  3555                           ; BSR set to: 0
  3556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3557  0017AE  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3558  0017B2  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3559  0017B6  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3560  0017BA  0E04               	movlw	4
  3561  0017BC  26DE               	addwf	postinc2,f,c
  3562  0017BE  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3563  0017C2  0E00               	movlw	0
  3564  0017C4  22DD               	addwfc	postdec2,f,c
  3565  0017C6  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3566  0017CA  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3567  0017CE  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3568  0017D2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3569  0017D6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3570  0017DA  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3571  0017DE                     l4874:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3575  0017DE  C0A6  F062         	movff	vfpfcnvrt@fp,efgtoa@fp
  3576  0017E2  C0A7  F063         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3577  0017E6  C0BE  F064         	movff	vfpfcnvrt@f,efgtoa@f
  3578  0017EA  C0BF  F065         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3579  0017EE  C0C0  F066         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3580  0017F2  C0C1  F067         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3581  0017F6  C0C5  F068         	movff	vfpfcnvrt@c,efgtoa@c
  3582  0017FA  EC2C  F004         	call	_efgtoa	;wreg free
  3583  0017FE  C062  F0A6         	movff	?_efgtoa,?_vfpfcnvrt
  3584  001802  C063  F0A7         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3585  001806  EF5E  F00D         	goto	l1286
  3586  00180A                     l4878:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3590  00180A  0EC2               	movlw	low vfpfcnvrt@ct
  3591  00180C  6E01               	movwf	strncmp@_l^0,c
  3592  00180E  0E00               	movlw	high vfpfcnvrt@ct
  3593  001810  6E02               	movwf	(strncmp@_l+1)^0,c
  3594  001812  0E4E               	movlw	low STR_31
  3595  001814  6E03               	movwf	strncmp@_r^0,c
  3596  001816  0E08               	movlw	high STR_31
  3597  001818  6E04               	movwf	(strncmp@_r+1)^0,c
  3598  00181A  0E00               	movlw	0
  3599  00181C  6E06               	movwf	(strncmp@n+1)^0,c
  3600  00181E  0E02               	movlw	2
  3601  001820  6E05               	movwf	strncmp@n^0,c
  3602  001822  EC40  F01D         	call	_strncmp	;wreg free
  3603  001826  5001               	movf	?_strncmp^0,w,c
  3604  001828  1002               	iorwf	(?_strncmp+1)^0,w,c
  3605  00182A  A4D8               	btfss	status,2,c
  3606  00182C  EF1A  F00C         	goto	u5651
  3607  001830  EF1C  F00C         	goto	u5650
  3608  001834                     u5651:
  3609  001834  EF98  F00C         	goto	l4894
  3610  001838                     u5650:
  3611  001838                     
  3612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3613  001838  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3614  00183C  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3615  001840  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  3616  001844  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  3617  001848  0E01               	movlw	1
  3618  00184A  0100               	movlb	0	; () banked
  3619  00184C  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  3620  00184E  0E00               	movlw	0
  3621  001850  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3622  001852  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3623  001856  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3624  00185A                     	if	0	;tblptru may be non-zero
  3625  00185A                     	endif
  3626  00185A                     	if	0	;tblptru may be non-zero
  3627  00185A                     	endif
  3628  00185A  0008               	tblrd		*
  3629  00185C  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  3630  001860  0EBF               	movlw	191
  3631  001862  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3632  001864  0EFF               	movlw	255
  3633  001866  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3634  001868  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3635  00186C  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3636  001870  CFDE FFF6          	movff	postinc2,tblptrl
  3637  001874  CFDD FFF7          	movff	postdec2,tblptrh
  3638  001878                     	if	0	;tblptru may be non-zero
  3639  001878                     	endif
  3640  001878                     	if	0	;tblptru may be non-zero
  3641  001878                     	endif
  3642  001878  0008               	tblrd		*
  3643  00187A  50F5               	movf	tablat,w,c
  3644  00187C  6FAE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3645  00187E  6BAF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3646  001880  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3647  001882  27AE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3648  001884  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3649  001886  23AF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3650  001888  51AF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3651  00188A  E10A               	bnz	u5660
  3652  00188C  0E1A               	movlw	26
  3653  00188E  5DAE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3654  001890  A0D8               	btfss	status,0,c
  3655  001892  EF4D  F00C         	goto	u5661
  3656  001896  EF50  F00C         	goto	u5660
  3657  00189A                     u5661:
  3658  00189A  0E01               	movlw	1
  3659  00189C  EF51  F00C         	goto	u5670
  3660  0018A0                     u5660:
  3661  0018A0  0E00               	movlw	0
  3662  0018A2                     u5670:
  3663  0018A2  6FBC               	movwf	_vfpfcnvrt$1712& (0+255),b
  3664  0018A4  6BBD               	clrf	(_vfpfcnvrt$1712+1)& (0+255),b
  3665  0018A6                     
  3666                           ; BSR set to: 0
  3667  0018A6  51BC               	movf	_vfpfcnvrt$1712& (0+255),w,b
  3668  0018A8  11BD               	iorwf	(_vfpfcnvrt$1712+1)& (0+255),w,b
  3669  0018AA  B4D8               	btfsc	status,2,c
  3670  0018AC  EF5A  F00C         	goto	u5681
  3671  0018B0  EF5C  F00C         	goto	u5680
  3672  0018B4                     u5681:
  3673  0018B4  EF76  F00C         	goto	l4888
  3674  0018B8                     u5680:
  3675  0018B8                     
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3678  0018B8  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3679  0018BC  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3680  0018C0  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3681  0018C4  0E04               	movlw	4
  3682  0018C6  26DE               	addwf	postinc2,f,c
  3683  0018C8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3684  0018CC  0E00               	movlw	0
  3685  0018CE  22DD               	addwfc	postdec2,f,c
  3686  0018D0  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3687  0018D4  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3688  0018D8  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3689  0018DC  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3690  0018E0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3691  0018E4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3692                           
  3693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3694  0018E8  EF8E  F00C         	goto	l1293
  3695  0018EC                     l4888:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3699  0018EC  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3700  0018F0  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3701  0018F4  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3702  0018F8  0E04               	movlw	4
  3703  0018FA  26DE               	addwf	postinc2,f,c
  3704  0018FC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3705  001900  0E00               	movlw	0
  3706  001902  22DD               	addwfc	postdec2,f,c
  3707  001904  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3708  001908  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3709  00190C  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  3710  001910  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  3711  001914  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  3712  001918  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  3713  00191C                     l1293:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3717  00191C  0E02               	movlw	2
  3718  00191E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3719  001922  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3720  001926  26DE               	addwf	postinc2,f,c
  3721  001928  0E00               	movlw	0
  3722  00192A  22DD               	addwfc	postdec2,f,c
  3723  00192C  EFEF  F00B         	goto	l4874
  3724  001930                     l4894:
  3725                           
  3726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3727  001930  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3728  001934  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3729  001938  CFDE FFF6          	movff	postinc2,tblptrl
  3730  00193C  CFDD FFF7          	movff	postdec2,tblptrh
  3731  001940                     	if	0	;tblptru may be non-zero
  3732  001940                     	endif
  3733  001940                     	if	0	;tblptru may be non-zero
  3734  001940                     	endif
  3735  001940  0008               	tblrd		*
  3736  001942  50F5               	movf	tablat,w,c
  3737  001944  0A78               	xorlw	120
  3738  001946  B4D8               	btfsc	status,2,c
  3739  001948  EFA8  F00C         	goto	u5691
  3740  00194C  EFAA  F00C         	goto	u5690
  3741  001950                     u5691:
  3742  001950  EFBC  F00C         	goto	l4898
  3743  001954                     u5690:
  3744  001954  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3745  001958  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3746  00195C  CFDE FFF6          	movff	postinc2,tblptrl
  3747  001960  CFDD FFF7          	movff	postdec2,tblptrh
  3748  001964                     	if	0	;tblptru may be non-zero
  3749  001964                     	endif
  3750  001964                     	if	0	;tblptru may be non-zero
  3751  001964                     	endif
  3752  001964  0008               	tblrd		*
  3753  001966  50F5               	movf	tablat,w,c
  3754  001968  0A58               	xorlw	88
  3755  00196A  A4D8               	btfss	status,2,c
  3756  00196C  EFBA  F00C         	goto	u5701
  3757  001970  EFBC  F00C         	goto	u5700
  3758  001974                     u5701:
  3759  001974  EF0B  F00D         	goto	l4908
  3760  001978                     u5700:
  3761  001978                     l4898:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3764  001978  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3765  00197C  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3766  001980  CFDE FFF6          	movff	postinc2,tblptrl
  3767  001984  CFDD FFF7          	movff	postdec2,tblptrh
  3768  001988                     	if	0	;tblptru may be non-zero
  3769  001988                     	endif
  3770  001988                     	if	0	;tblptru may be non-zero
  3771  001988                     	endif
  3772  001988  0008               	tblrd		*
  3773  00198A  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  3774  00198E                     
  3775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3776  00198E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3777  001992  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3778  001996  2ADE               	incf	postinc2,f,c
  3779  001998  0E00               	movlw	0
  3780  00199A  22DD               	addwfc	postdec2,f,c
  3781  00199C                     
  3782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3783  00199C  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3784  0019A0  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3785  0019A4  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3786  0019A8  0E02               	movlw	2
  3787  0019AA  26DE               	addwf	postinc2,f,c
  3788  0019AC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3789  0019B0  0E00               	movlw	0
  3790  0019B2  22DD               	addwfc	postdec2,f,c
  3791  0019B4  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3792  0019B8  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3793  0019BC  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt+2
  3794  0019C0  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+3
  3795  0019C4  C0AE  F0B0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3796  0019C8  C0AF  F0B1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3797  0019CC  0100               	movlb	0	; () banked
  3798  0019CE  6BB2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  3799  0019D0  6BB3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  3800  0019D2  6BB4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  3801  0019D4  6BB5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  3802  0019D6  6BB6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  3803  0019D8  6BB7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  3804  0019DA                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  3807  0019DA  C0A6  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3808  0019DE  C0A7  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3809  0019E2  C0B0  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3810  0019E6  C0B1  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3811  0019EA  C0B2  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3812  0019EE  C0B3  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3813  0019F2  C0B4  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3814  0019F6  C0B5  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3815  0019FA  C0B6  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3816  0019FE  C0B7  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3817  001A02  C0C5  F026         	movff	vfpfcnvrt@c,xtoa@x
  3818  001A06  EC24  F017         	call	_xtoa	;wreg free
  3819  001A0A  C01C  F0A6         	movff	?_xtoa,?_vfpfcnvrt
  3820  001A0E  C01D  F0A7         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3821  001A12  EF5E  F00D         	goto	l1286
  3822  001A16                     l4908:
  3823                           
  3824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3825  001A16  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3826  001A1A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3827  001A1E  CFDE FFF6          	movff	postinc2,tblptrl
  3828  001A22  CFDD FFF7          	movff	postdec2,tblptrh
  3829  001A26                     	if	0	;tblptru may be non-zero
  3830  001A26                     	endif
  3831  001A26                     	if	0	;tblptru may be non-zero
  3832  001A26                     	endif
  3833  001A26  0008               	tblrd		*
  3834  001A28  50F5               	movf	tablat,w,c
  3835  001A2A  0A25               	xorlw	37
  3836  001A2C  A4D8               	btfss	status,2,c
  3837  001A2E  EF1B  F00D         	goto	u5711
  3838  001A32  EF1D  F00D         	goto	u5710
  3839  001A36                     u5711:
  3840  001A36  EF35  F00D         	goto	l4918
  3841  001A3A                     u5710:
  3842  001A3A                     
  3843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3844  001A3A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3845  001A3E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3846  001A42  2ADE               	incf	postinc2,f,c
  3847  001A44  0E00               	movlw	0
  3848  001A46  22DD               	addwfc	postdec2,f,c
  3849  001A48                     
  3850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3851  001A48  0E00               	movlw	0
  3852  001A4A  6E02               	movwf	(fputc@c+1)^0,c
  3853  001A4C  0E25               	movlw	37
  3854  001A4E  6E01               	movwf	fputc@c^0,c
  3855  001A50  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3856  001A54  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3857  001A58  ECAB  F01D         	call	_fputc	;wreg free
  3858  001A5C                     l4914:
  3859                           
  3860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3861  001A5C  0E00               	movlw	0
  3862  001A5E  0100               	movlb	0	; () banked
  3863  001A60  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3864  001A62  0E01               	movlw	1
  3865  001A64  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  3866  001A66  EF5E  F00D         	goto	l1286
  3867  001A6A                     l4918:
  3868                           
  3869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3870  001A6A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3871  001A6E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3872  001A72  2ADE               	incf	postinc2,f,c
  3873  001A74  0E00               	movlw	0
  3874  001A76  22DD               	addwfc	postdec2,f,c
  3875  001A78                     
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3877  001A78  0E00               	movlw	0
  3878  001A7A  0100               	movlb	0	; () banked
  3879  001A7C  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3880  001A7E  0E00               	movlw	0
  3881  001A80  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  3882  001A82  EF5E  F00D         	goto	l1286
  3883  001A86                     l4924:
  3884                           
  3885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3886  001A86  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3887  001A8A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3888  001A8E  CFDE FFF6          	movff	postinc2,tblptrl
  3889  001A92  CFDD FFF7          	movff	postdec2,tblptrh
  3890  001A96                     	if	0	;tblptru may be non-zero
  3891  001A96                     	endif
  3892  001A96                     	if	0	;tblptru may be non-zero
  3893  001A96                     	endif
  3894  001A96  0008               	tblrd		*
  3895  001A98  50F5               	movf	tablat,w,c
  3896  001A9A  6E01               	movwf	fputc@c^0,c
  3897  001A9C  6A02               	clrf	(fputc@c+1)^0,c
  3898  001A9E  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3899  001AA2  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3900  001AA6  ECAB  F01D         	call	_fputc	;wreg free
  3901  001AAA                     
  3902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3903  001AAA  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3904  001AAE  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3905  001AB2  2ADE               	incf	postinc2,f,c
  3906  001AB4  0E00               	movlw	0
  3907  001AB6  22DD               	addwfc	postdec2,f,c
  3908  001AB8  EF2E  F00D         	goto	l4914
  3909  001ABC                     l1286:
  3910  001ABC  0012               	return		;funcret
  3911  001ABE                     __end_of_vfpfcnvrt:
  3912                           	callstack 0
  3913                           
  3914 ;; *************** function _xtoa *****************
  3915 ;; Defined at:
  3916 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3919 ;;		 -> sprintf@f(6), 
  3920 ;;  d               8   29[COMRAM] unsigned long long 
  3921 ;;  x               1   37[COMRAM] unsigned char 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  n               8   54[COMRAM] unsigned long long 
  3924 ;;  c               2   64[COMRAM] int 
  3925 ;;  i               2   62[COMRAM] int 
  3926 ;;  w               2   52[COMRAM] int 
  3927 ;;  p               2   50[COMRAM] int 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  2   27[COMRAM] int 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3937 ;;      Params:        11       0       0       0       0       0       0       0       0
  3938 ;;      Locals:        20       0       0       0       0       0       0       0       0
  3939 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3940 ;;      Totals:        39       0       0       0       0       0       0       0       0
  3941 ;;Total ram usage:       39 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; Hardware stack levels required when called: 5
  3944 ;; This function calls:
  3945 ;;		_isalpha
  3946 ;;		_isupper
  3947 ;;		_pad
  3948 ;;		_toupper
  3949 ;; This function is called by:
  3950 ;;		_vfpfcnvrt
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text8
  3955  002E48                     __ptext8:
  3956                           	callstack 0
  3957  002E48                     _xtoa:
  3958                           	callstack 22
  3959  002E48                     
  3960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3961  002E48  0100               	movlb	0	; () banked
  3962  002E4A  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3963  002E4C  EF2A  F017         	goto	u5221
  3964  002E50  EF2C  F017         	goto	u5220
  3965  002E54                     u5221:
  3966  002E54  EF2D  F017         	goto	l4632
  3967  002E58                     u5220:
  3968  002E58                     
  3969                           ; BSR set to: 0
  3970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3971  002E58  93FB               	bcf	_flags& (0+255),1,b
  3972  002E5A                     l4632:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3976  002E5A  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3977  002E5C  EF3A  F017         	goto	u5230
  3978  002E60  51FA               	movf	(_prec+1)& (0+255),w,b
  3979  002E62  E106               	bnz	u5231
  3980  002E64  05F9               	decf	_prec& (0+255),w,b
  3981  002E66  B0D8               	btfsc	status,0,c
  3982  002E68  EF38  F017         	goto	u5231
  3983  002E6C  EF3A  F017         	goto	u5230
  3984  002E70                     u5231:
  3985  002E70  EF40  F017         	goto	l1232
  3986  002E74                     u5230:
  3987  002E74                     
  3988                           ; BSR set to: 0
  3989  002E74  0E00               	movlw	0
  3990  002E76  6E34               	movwf	(xtoa@p+1)^0,c
  3991  002E78  0E01               	movlw	1
  3992  002E7A  6E33               	movwf	xtoa@p^0,c
  3993  002E7C  EF44  F017         	goto	l1234
  3994  002E80                     l1232:
  3995                           
  3996                           ; BSR set to: 0
  3997  002E80  C0F9  F033         	movff	_prec,xtoa@p
  3998  002E84  C0FA  F034         	movff	_prec+1,xtoa@p+1
  3999  002E88                     l1234:
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  4003  002E88  C0F7  F035         	movff	_width,xtoa@w
  4004  002E8C  C0F8  F036         	movff	_width+1,xtoa@w+1
  4005                           
  4006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4007  002E90  A9FB               	btfss	_flags& (0+255),4,b
  4008  002E92  EF4D  F017         	goto	u5241
  4009  002E96  EF4F  F017         	goto	u5240
  4010  002E9A                     u5241:
  4011  002E9A  EF53  F017         	goto	l4638
  4012  002E9E                     u5240:
  4013  002E9E                     
  4014                           ; BSR set to: 0
  4015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  4016  002E9E  0EFE               	movlw	254
  4017  002EA0  2635               	addwf	xtoa@w^0,f,c
  4018  002EA2  0EFF               	movlw	255
  4019  002EA4  2236               	addwfc	(xtoa@w+1)^0,f,c
  4020  002EA6                     l4638:
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  4024  002EA6  C01E  F037         	movff	xtoa@d,xtoa@n
  4025  002EAA  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4026  002EAE  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4027  002EB2  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4028  002EB6  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4029  002EBA  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4030  002EBE  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4031  002EC2  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4032  002EC6                     
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  4035  002EC6  0E00               	movlw	0
  4036  002EC8  6E40               	movwf	(xtoa@i+1)^0,c
  4037  002ECA  0E4F               	movlw	79
  4038  002ECC  6E3F               	movwf	xtoa@i^0,c
  4039  002ECE                     
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  4042  002ECE  0E00               	movlw	0
  4043  002ED0  0101               	movlb	1	; () banked
  4044  002ED2  6F79               	movwf	(_dbuf+79)& (0+255),b
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4047  002ED4  EF1F  F018         	goto	l4674
  4048  002ED8                     l4644:
  4049                           
  4050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  4051  002ED8  063F               	decf	xtoa@i^0,f,c
  4052  002EDA  A0D8               	btfss	status,0,c
  4053  002EDC  0640               	decf	(xtoa@i+1)^0,f,c
  4054  002EDE                     
  4055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  4056  002EDE  0E0F               	movlw	15
  4057  002EE0  1437               	andwf	xtoa@n^0,w,c
  4058  002EE2  6E41               	movwf	xtoa@c^0,c
  4059  002EE4  6A42               	clrf	(xtoa@c+1)^0,c
  4060  002EE6                     
  4061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4062  002EE6  BE42               	btfsc	(xtoa@c+1)^0,7,c
  4063  002EE8  EF7F  F017         	goto	u5251
  4064  002EEC  5042               	movf	(xtoa@c+1)^0,w,c
  4065  002EEE  E109               	bnz	u5250
  4066  002EF0  0E0A               	movlw	10
  4067  002EF2  5C41               	subwf	xtoa@c^0,w,c
  4068  002EF4  A0D8               	btfss	status,0,c
  4069  002EF6  EF7F  F017         	goto	u5251
  4070  002EFA  EF81  F017         	goto	u5250
  4071  002EFE                     u5251:
  4072  002EFE  EF89  F017         	goto	l4652
  4073  002F02                     u5250:
  4074  002F02  0E57               	movlw	87
  4075  002F04  2441               	addwf	xtoa@c^0,w,c
  4076  002F06  6E41               	movwf	xtoa@c^0,c
  4077  002F08  0E00               	movlw	0
  4078  002F0A  2042               	addwfc	(xtoa@c+1)^0,w,c
  4079  002F0C  6E42               	movwf	(xtoa@c+1)^0,c
  4080  002F0E  EF8F  F017         	goto	l1241
  4081  002F12                     l4652:
  4082  002F12  0E30               	movlw	48
  4083  002F14  2441               	addwf	xtoa@c^0,w,c
  4084  002F16  6E41               	movwf	xtoa@c^0,c
  4085  002F18  0E00               	movlw	0
  4086  002F1A  2042               	addwfc	(xtoa@c+1)^0,w,c
  4087  002F1C  6E42               	movwf	(xtoa@c+1)^0,c
  4088  002F1E                     l1241:
  4089  002F1E  0EBF               	movlw	191
  4090  002F20  6E27               	movwf	??_xtoa^0,c
  4091  002F22  0EFF               	movlw	255
  4092  002F24  6E28               	movwf	(??_xtoa+1)^0,c
  4093  002F26  5026               	movf	xtoa@x^0,w,c
  4094  002F28  6E29               	movwf	(??_xtoa+2)^0,c
  4095  002F2A  6A2A               	clrf	(??_xtoa+3)^0,c
  4096  002F2C  5027               	movf	??_xtoa^0,w,c
  4097  002F2E  2629               	addwf	(??_xtoa+2)^0,f,c
  4098  002F30  5028               	movf	(??_xtoa+1)^0,w,c
  4099  002F32  222A               	addwfc	(??_xtoa+3)^0,f,c
  4100  002F34  502A               	movf	(??_xtoa+3)^0,w,c
  4101  002F36  E10A               	bnz	u5260
  4102  002F38  0E1A               	movlw	26
  4103  002F3A  5C29               	subwf	(??_xtoa+2)^0,w,c
  4104  002F3C  A0D8               	btfss	status,0,c
  4105  002F3E  EFA3  F017         	goto	u5261
  4106  002F42  EFA6  F017         	goto	u5260
  4107  002F46                     u5261:
  4108  002F46  0E01               	movlw	1
  4109  002F48  EFA7  F017         	goto	u5270
  4110  002F4C                     u5260:
  4111  002F4C  0E00               	movlw	0
  4112  002F4E                     u5270:
  4113  002F4E  6E2F               	movwf	_xtoa$1693^0,c
  4114  002F50  6A30               	clrf	(_xtoa$1693+1)^0,c
  4115  002F52  502F               	movf	_xtoa$1693^0,w,c
  4116  002F54  1030               	iorwf	(_xtoa$1693+1)^0,w,c
  4117  002F56  B4D8               	btfsc	status,2,c
  4118  002F58  EFB0  F017         	goto	u5281
  4119  002F5C  EFB2  F017         	goto	u5280
  4120  002F60                     u5281:
  4121  002F60  EFE2  F017         	goto	l4666
  4122  002F64                     u5280:
  4123  002F64  0E9F               	movlw	159
  4124  002F66  6E27               	movwf	??_xtoa^0,c
  4125  002F68  0EFF               	movlw	255
  4126  002F6A  6E28               	movwf	(??_xtoa+1)^0,c
  4127  002F6C  0E20               	movlw	32
  4128  002F6E  1041               	iorwf	xtoa@c^0,w,c
  4129  002F70  6E29               	movwf	(??_xtoa+2)^0,c
  4130  002F72  0E00               	movlw	0
  4131  002F74  1042               	iorwf	(xtoa@c+1)^0,w,c
  4132  002F76  6E2A               	movwf	(??_xtoa+3)^0,c
  4133  002F78  5027               	movf	??_xtoa^0,w,c
  4134  002F7A  2629               	addwf	(??_xtoa+2)^0,f,c
  4135  002F7C  5028               	movf	(??_xtoa+1)^0,w,c
  4136  002F7E  222A               	addwfc	(??_xtoa+3)^0,f,c
  4137  002F80  502A               	movf	(??_xtoa+3)^0,w,c
  4138  002F82  E10A               	bnz	u5290
  4139  002F84  0E1A               	movlw	26
  4140  002F86  5C29               	subwf	(??_xtoa+2)^0,w,c
  4141  002F88  A0D8               	btfss	status,0,c
  4142  002F8A  EFC9  F017         	goto	u5291
  4143  002F8E  EFCC  F017         	goto	u5290
  4144  002F92                     u5291:
  4145  002F92  0E01               	movlw	1
  4146  002F94  EFCD  F017         	goto	u5300
  4147  002F98                     u5290:
  4148  002F98  0E00               	movlw	0
  4149  002F9A                     u5300:
  4150  002F9A  6E31               	movwf	_xtoa$1694^0,c
  4151  002F9C  6A32               	clrf	(_xtoa$1694+1)^0,c
  4152  002F9E  5031               	movf	_xtoa$1694^0,w,c
  4153  002FA0  1032               	iorwf	(_xtoa$1694+1)^0,w,c
  4154  002FA2  B4D8               	btfsc	status,2,c
  4155  002FA4  EFD6  F017         	goto	u5311
  4156  002FA8  EFD8  F017         	goto	u5310
  4157  002FAC                     u5311:
  4158  002FAC  EFE2  F017         	goto	l4666
  4159  002FB0                     u5310:
  4160  002FB0                     
  4161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4162  002FB0  C041  F007         	movff	xtoa@c,toupper@c
  4163  002FB4  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4164  002FB8  EC56  F020         	call	_toupper	;wreg free
  4165  002FBC  C007  F041         	movff	?_toupper,xtoa@c
  4166  002FC0  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4167  002FC4                     l4666:
  4168                           
  4169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4170  002FC4  0E2A               	movlw	low _dbuf
  4171  002FC6  243F               	addwf	xtoa@i^0,w,c
  4172  002FC8  6ED9               	movwf	fsr2l,c
  4173  002FCA  0E01               	movlw	high _dbuf
  4174  002FCC  2040               	addwfc	(xtoa@i+1)^0,w,c
  4175  002FCE  6EDA               	movwf	fsr2h,c
  4176  002FD0  C041  FFDF         	movff	xtoa@c,indf2
  4177  002FD4                     
  4178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  4179  002FD4  0633               	decf	xtoa@p^0,f,c
  4180  002FD6  A0D8               	btfss	status,0,c
  4181  002FD8  0634               	decf	(xtoa@p+1)^0,f,c
  4182  002FDA                     
  4183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  4184  002FDA  0635               	decf	xtoa@w^0,f,c
  4185  002FDC  A0D8               	btfss	status,0,c
  4186  002FDE  0636               	decf	(xtoa@w+1)^0,f,c
  4187  002FE0                     
  4188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4189  002FE0  C037  F027         	movff	xtoa@n,??_xtoa
  4190  002FE4  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4191  002FE8  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4192  002FEC  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4193  002FF0  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4194  002FF4  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4195  002FF8  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4196  002FFC  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4197  003000  0E05               	movlw	5
  4198  003002  EF0C  F018         	goto	u5320
  4199  003006                     u5325:
  4200  003006  90D8               	bcf	status,0,c
  4201  003008  322E               	rrcf	(??_xtoa+7)^0,f,c
  4202  00300A  322D               	rrcf	(??_xtoa+6)^0,f,c
  4203  00300C  322C               	rrcf	(??_xtoa+5)^0,f,c
  4204  00300E  322B               	rrcf	(??_xtoa+4)^0,f,c
  4205  003010  322A               	rrcf	(??_xtoa+3)^0,f,c
  4206  003012  3229               	rrcf	(??_xtoa+2)^0,f,c
  4207  003014  3228               	rrcf	(??_xtoa+1)^0,f,c
  4208  003016  3227               	rrcf	??_xtoa^0,f,c
  4209  003018                     u5320:
  4210  003018  2EE8               	decfsz	wreg,f,c
  4211  00301A  EF03  F018         	goto	u5325
  4212  00301E  C027  F037         	movff	??_xtoa,xtoa@n
  4213  003022  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4214  003026  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4215  00302A  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4216  00302E  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4217  003032  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4218  003036  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4219  00303A  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4220  00303E                     l4674:
  4221                           
  4222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4223  00303E  BE40               	btfsc	(xtoa@i+1)^0,7,c
  4224  003040  EF2B  F018         	goto	u5331
  4225  003044  5040               	movf	(xtoa@i+1)^0,w,c
  4226  003046  E109               	bnz	u5330
  4227  003048  0E02               	movlw	2
  4228  00304A  5C3F               	subwf	xtoa@i^0,w,c
  4229  00304C  A0D8               	btfss	status,0,c
  4230  00304E  EF2B  F018         	goto	u5331
  4231  003052  EF2D  F018         	goto	u5330
  4232  003056                     u5331:
  4233  003056  EF5E  F018         	goto	l1255
  4234  00305A                     u5330:
  4235  00305A  5037               	movf	xtoa@n^0,w,c
  4236  00305C  1038               	iorwf	(xtoa@n+1)^0,w,c
  4237  00305E  1039               	iorwf	(xtoa@n+2)^0,w,c
  4238  003060  103A               	iorwf	(xtoa@n+3)^0,w,c
  4239  003062  103B               	iorwf	(xtoa@n+4)^0,w,c
  4240  003064  103C               	iorwf	(xtoa@n+5)^0,w,c
  4241  003066  103D               	iorwf	(xtoa@n+6)^0,w,c
  4242  003068  103E               	iorwf	(xtoa@n+7)^0,w,c
  4243  00306A  A4D8               	btfss	status,2,c
  4244  00306C  EF3A  F018         	goto	u5341
  4245  003070  EF3C  F018         	goto	u5340
  4246  003074                     u5341:
  4247  003074  EF6C  F017         	goto	l4644
  4248  003078                     u5340:
  4249  003078  BE34               	btfsc	(xtoa@p+1)^0,7,c
  4250  00307A  EF49  F018         	goto	u5350
  4251  00307E  5034               	movf	(xtoa@p+1)^0,w,c
  4252  003080  E106               	bnz	u5351
  4253  003082  0433               	decf	xtoa@p^0,w,c
  4254  003084  B0D8               	btfsc	status,0,c
  4255  003086  EF47  F018         	goto	u5351
  4256  00308A  EF49  F018         	goto	u5350
  4257  00308E                     u5351:
  4258  00308E  EF6C  F017         	goto	l4644
  4259  003092                     u5350:
  4260  003092  BE36               	btfsc	(xtoa@w+1)^0,7,c
  4261  003094  EF54  F018         	goto	u5361
  4262  003098  5036               	movf	(xtoa@w+1)^0,w,c
  4263  00309A  E108               	bnz	u5360
  4264  00309C  0435               	decf	xtoa@w^0,w,c
  4265  00309E  A0D8               	btfss	status,0,c
  4266  0030A0  EF54  F018         	goto	u5361
  4267  0030A4  EF56  F018         	goto	u5360
  4268  0030A8                     u5361:
  4269  0030A8  EF5E  F018         	goto	l1255
  4270  0030AC                     u5360:
  4271  0030AC  0100               	movlb	0	; () banked
  4272  0030AE  B3FB               	btfsc	_flags& (0+255),1,b
  4273  0030B0  EF5C  F018         	goto	u5371
  4274  0030B4  EF5E  F018         	goto	u5370
  4275  0030B8                     u5371:
  4276  0030B8  EF6C  F017         	goto	l4644
  4277  0030BC                     u5370:
  4278  0030BC                     l1255:
  4279                           
  4280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4281  0030BC  0100               	movlb	0	; () banked
  4282  0030BE  A9FB               	btfss	_flags& (0+255),4,b
  4283  0030C0  EF64  F018         	goto	u5381
  4284  0030C4  EF66  F018         	goto	u5380
  4285  0030C8                     u5381:
  4286  0030C8  EF7C  F018         	goto	l4690
  4287  0030CC                     u5380:
  4288  0030CC                     
  4289                           ; BSR set to: 0
  4290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  4291  0030CC  063F               	decf	xtoa@i^0,f,c
  4292  0030CE  A0D8               	btfss	status,0,c
  4293  0030D0  0640               	decf	(xtoa@i+1)^0,f,c
  4294  0030D2                     
  4295                           ; BSR set to: 0
  4296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4297  0030D2  0E2A               	movlw	low _dbuf
  4298  0030D4  243F               	addwf	xtoa@i^0,w,c
  4299  0030D6  6ED9               	movwf	fsr2l,c
  4300  0030D8  0E01               	movlw	high _dbuf
  4301  0030DA  2040               	addwfc	(xtoa@i+1)^0,w,c
  4302  0030DC  6EDA               	movwf	fsr2h,c
  4303  0030DE  C026  FFDF         	movff	xtoa@x,indf2
  4304  0030E2                     
  4305                           ; BSR set to: 0
  4306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  4307  0030E2  063F               	decf	xtoa@i^0,f,c
  4308  0030E4  A0D8               	btfss	status,0,c
  4309  0030E6  0640               	decf	(xtoa@i+1)^0,f,c
  4310                           
  4311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  4312  0030E8  0E2A               	movlw	low _dbuf
  4313  0030EA  243F               	addwf	xtoa@i^0,w,c
  4314  0030EC  6ED9               	movwf	fsr2l,c
  4315  0030EE  0E01               	movlw	high _dbuf
  4316  0030F0  2040               	addwfc	(xtoa@i+1)^0,w,c
  4317  0030F2  6EDA               	movwf	fsr2h,c
  4318  0030F4  0E30               	movlw	48
  4319  0030F6  6EDF               	movwf	indf2,c
  4320  0030F8                     l4690:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  4324  0030F8  C01C  F011         	movff	xtoa@fp,pad@fp
  4325  0030FC  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4326  003100  0E2A               	movlw	low _dbuf
  4327  003102  243F               	addwf	xtoa@i^0,w,c
  4328  003104  6E13               	movwf	pad@buf^0,c
  4329  003106  0E01               	movlw	high _dbuf
  4330  003108  2040               	addwfc	(xtoa@i+1)^0,w,c
  4331  00310A  6E14               	movwf	(pad@buf+1)^0,c
  4332  00310C  C035  F015         	movff	xtoa@w,pad@p
  4333  003110  C036  F016         	movff	xtoa@w+1,pad@p+1
  4334  003114  EC10  F01E         	call	_pad	;wreg free
  4335  003118  C011  F01C         	movff	?_pad,?_xtoa
  4336  00311C  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4337  003120  0012               	return		;funcret
  4338  003122                     __end_of_xtoa:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function _toupper *****************
  4342 ;; Defined at:
  4343 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  c               2    6[COMRAM] int 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  2    6[COMRAM] int 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4357 ;;      Params:         2       0       0       0       0       0       0       0       0
  4358 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4359 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4360 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4361 ;;Total ram usage:        8 bytes
  4362 ;; Hardware stack levels used: 1
  4363 ;; Hardware stack levels required when called: 2
  4364 ;; This function calls:
  4365 ;;		_islower
  4366 ;; This function is called by:
  4367 ;;		_xtoa
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text9
  4372  0040AC                     __ptext9:
  4373                           	callstack 0
  4374  0040AC                     _toupper:
  4375                           	callstack 24
  4376  0040AC  0E9F               	movlw	159
  4377  0040AE  6E09               	movwf	??_toupper^0,c
  4378  0040B0  0EFF               	movlw	255
  4379  0040B2  6E0A               	movwf	(??_toupper+1)^0,c
  4380  0040B4  C007  F00B         	movff	toupper@c,??_toupper+2
  4381  0040B8  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4382  0040BC  5009               	movf	??_toupper^0,w,c
  4383  0040BE  260B               	addwf	(??_toupper+2)^0,f,c
  4384  0040C0  500A               	movf	(??_toupper+1)^0,w,c
  4385  0040C2  220C               	addwfc	(??_toupper+3)^0,f,c
  4386  0040C4  500C               	movf	(??_toupper+3)^0,w,c
  4387  0040C6  E10A               	bnz	u4580
  4388  0040C8  0E1A               	movlw	26
  4389  0040CA  5C0B               	subwf	(??_toupper+2)^0,w,c
  4390  0040CC  A0D8               	btfss	status,0,c
  4391  0040CE  EF6B  F020         	goto	u4581
  4392  0040D2  EF6E  F020         	goto	u4580
  4393  0040D6                     u4581:
  4394  0040D6  0E01               	movlw	1
  4395  0040D8  EF6F  F020         	goto	u4590
  4396  0040DC                     u4580:
  4397  0040DC  0E00               	movlw	0
  4398  0040DE                     u4590:
  4399  0040DE  6E0D               	movwf	_toupper$1866^0,c
  4400  0040E0  6A0E               	clrf	(_toupper$1866+1)^0,c
  4401  0040E2  500D               	movf	_toupper$1866^0,w,c
  4402  0040E4  100E               	iorwf	(_toupper$1866+1)^0,w,c
  4403  0040E6  B4D8               	btfsc	status,2,c
  4404  0040E8  EF78  F020         	goto	u4601
  4405  0040EC  EF7A  F020         	goto	u4600
  4406  0040F0                     u4601:
  4407  0040F0  EF80  F020         	goto	l1446
  4408  0040F4                     u4600:
  4409  0040F4  0E5F               	movlw	95
  4410  0040F6  1407               	andwf	toupper@c^0,w,c
  4411  0040F8  6E07               	movwf	?_toupper^0,c
  4412  0040FA  6A08               	clrf	(?_toupper+1)^0,c
  4413  0040FC  EF84  F020         	goto	l1451
  4414  004100                     l1446:
  4415  004100  C007  F007         	movff	toupper@c,?_toupper
  4416  004104  C008  F008         	movff	toupper@c+1,?_toupper+1
  4417  004108                     l1451:
  4418  004108  0012               	return		;funcret
  4419  00410A                     __end_of_toupper:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function _islower *****************
  4423 ;; Defined at:
  4424 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  c               2    0[COMRAM] int 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;		None
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  2    0[COMRAM] int 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4438 ;;      Params:         2       0       0       0       0       0       0       0       0
  4439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4440 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4441 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4442 ;;Total ram usage:        6 bytes
  4443 ;; Hardware stack levels used: 1
  4444 ;; Hardware stack levels required when called: 1
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_toupper
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text10
  4453  0045B8                     __ptext10:
  4454                           	callstack 0
  4455  0045B8                     _islower:
  4456                           	callstack 24
  4457  0045B8  0E9F               	movlw	159
  4458  0045BA  6E03               	movwf	??_islower^0,c
  4459  0045BC  0EFF               	movlw	255
  4460  0045BE  6E04               	movwf	(??_islower+1)^0,c
  4461  0045C0  C001  F005         	movff	islower@c,??_islower+2
  4462  0045C4  C002  F006         	movff	islower@c+1,??_islower+3
  4463  0045C8  5003               	movf	??_islower^0,w,c
  4464  0045CA  2605               	addwf	(??_islower+2)^0,f,c
  4465  0045CC  5004               	movf	(??_islower+1)^0,w,c
  4466  0045CE  2206               	addwfc	(??_islower+3)^0,f,c
  4467  0045D0  5006               	movf	(??_islower+3)^0,w,c
  4468  0045D2  E10A               	bnz	u3580
  4469  0045D4  0E1A               	movlw	26
  4470  0045D6  5C05               	subwf	(??_islower+2)^0,w,c
  4471  0045D8  A0D8               	btfss	status,0,c
  4472  0045DA  EFF1  F022         	goto	u3581
  4473  0045DE  EFF4  F022         	goto	u3580
  4474  0045E2                     u3581:
  4475  0045E2  0E01               	movlw	1
  4476  0045E4  EFF5  F022         	goto	u3590
  4477  0045E8                     u3580:
  4478  0045E8  0E00               	movlw	0
  4479  0045EA                     u3590:
  4480  0045EA  6E01               	movwf	?_islower^0,c
  4481  0045EC  6A02               	clrf	(?_islower+1)^0,c
  4482  0045EE  0012               	return		;funcret
  4483  0045F0                     __end_of_islower:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _isalpha *****************
  4487 ;; Defined at:
  4488 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  c               2    0[COMRAM] int 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  2    0[COMRAM] int 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4502 ;;      Params:         2       0       0       0       0       0       0       0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4504 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4505 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4506 ;;Total ram usage:        6 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 1
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_xtoa
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text11
  4517  004542                     __ptext11:
  4518                           	callstack 0
  4519  004542                     _isalpha:
  4520                           	callstack 25
  4521  004542  0E9F               	movlw	159
  4522  004544  6E03               	movwf	??_isalpha^0,c
  4523  004546  0EFF               	movlw	255
  4524  004548  6E04               	movwf	(??_isalpha+1)^0,c
  4525  00454A  0E20               	movlw	32
  4526  00454C  1001               	iorwf	isalpha@c^0,w,c
  4527  00454E  6E05               	movwf	(??_isalpha+2)^0,c
  4528  004550  0E00               	movlw	0
  4529  004552  1002               	iorwf	(isalpha@c+1)^0,w,c
  4530  004554  6E06               	movwf	(??_isalpha+3)^0,c
  4531  004556  5003               	movf	??_isalpha^0,w,c
  4532  004558  2605               	addwf	(??_isalpha+2)^0,f,c
  4533  00455A  5004               	movf	(??_isalpha+1)^0,w,c
  4534  00455C  2206               	addwfc	(??_isalpha+3)^0,f,c
  4535  00455E  5006               	movf	(??_isalpha+3)^0,w,c
  4536  004560  E10A               	bnz	u4560
  4537  004562  0E1A               	movlw	26
  4538  004564  5C05               	subwf	(??_isalpha+2)^0,w,c
  4539  004566  A0D8               	btfss	status,0,c
  4540  004568  EFB8  F022         	goto	u4561
  4541  00456C  EFBB  F022         	goto	u4560
  4542  004570                     u4561:
  4543  004570  0E01               	movlw	1
  4544  004572  EFBC  F022         	goto	u4570
  4545  004576                     u4560:
  4546  004576  0E00               	movlw	0
  4547  004578                     u4570:
  4548  004578  6E01               	movwf	?_isalpha^0,c
  4549  00457A  6A02               	clrf	(?_isalpha+1)^0,c
  4550  00457C  0012               	return		;funcret
  4551  00457E                     __end_of_isalpha:
  4552                           	callstack 0
  4553                           
  4554 ;; *************** function _strncmp *****************
  4555 ;; Defined at:
  4556 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4559 ;;		 -> vfpfcnvrt@ct(3), 
  4560 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4561 ;;		 -> STR_33(3), 
  4562 ;;  n               2    4[COMRAM] unsigned int 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4565 ;;		 -> STR_33(3), 
  4566 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4567 ;;		 -> vfpfcnvrt@ct(3), 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  2    0[COMRAM] int 
  4570 ;; Registers used:
  4571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4577 ;;      Params:         6       0       0       0       0       0       0       0       0
  4578 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4579 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4580 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4581 ;;Total ram usage:       11 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_vfpfcnvrt
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text12
  4592  003A80                     __ptext12:
  4593                           	callstack 0
  4594  003A80                     _strncmp:
  4595                           	callstack 26
  4596  003A80  C001  F008         	movff	strncmp@_l,strncmp@l
  4597  003A84  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4598  003A88  C003  F00A         	movff	strncmp@_r,strncmp@r
  4599  003A8C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4600  003A90  0605               	decf	strncmp@n^0,f,c
  4601  003A92  A0D8               	btfss	status,0,c
  4602  003A94  0606               	decf	(strncmp@n+1)^0,f,c
  4603  003A96  2805               	incf	strncmp@n^0,w,c
  4604  003A98  E106               	bnz	u5461
  4605  003A9A  2806               	incf	(strncmp@n+1)^0,w,c
  4606  003A9C  A4D8               	btfss	status,2,c
  4607  003A9E  EF53  F01D         	goto	u5461
  4608  003AA2  EF55  F01D         	goto	u5460
  4609  003AA6                     u5461:
  4610  003AA6  EF62  F01D         	goto	l4744
  4611  003AAA                     u5460:
  4612  003AAA  0E00               	movlw	0
  4613  003AAC  6E02               	movwf	(?_strncmp+1)^0,c
  4614  003AAE  0E00               	movlw	0
  4615  003AB0  6E01               	movwf	?_strncmp^0,c
  4616  003AB2  EFAA  F01D         	goto	l1423
  4617  003AB6                     l4742:
  4618  003AB6  4A08               	infsnz	strncmp@l^0,f,c
  4619  003AB8  2A09               	incf	(strncmp@l+1)^0,f,c
  4620  003ABA  4A0A               	infsnz	strncmp@r^0,f,c
  4621  003ABC  2A0B               	incf	(strncmp@r+1)^0,f,c
  4622  003ABE  0605               	decf	strncmp@n^0,f,c
  4623  003AC0  A0D8               	btfss	status,0,c
  4624  003AC2  0606               	decf	(strncmp@n+1)^0,f,c
  4625  003AC4                     l4744:
  4626  003AC4  C008  FFD9         	movff	strncmp@l,fsr2l
  4627  003AC8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4628  003ACC  50DF               	movf	indf2,w,c
  4629  003ACE  B4D8               	btfsc	status,2,c
  4630  003AD0  EF6C  F01D         	goto	u5471
  4631  003AD4  EF6E  F01D         	goto	u5470
  4632  003AD8                     u5471:
  4633  003AD8  EF99  F01D         	goto	l4752
  4634  003ADC                     u5470:
  4635  003ADC  C00A  FFF6         	movff	strncmp@r,tblptrl
  4636  003AE0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4637  003AE4                     	if	0	;tblptru may be non-zero
  4638  003AE4                     	endif
  4639  003AE4                     	if	0	;tblptru may be non-zero
  4640  003AE4                     	endif
  4641  003AE4  0008               	tblrd		*
  4642  003AE6  50F5               	movf	tablat,w,c
  4643  003AE8  0900               	iorlw	0
  4644  003AEA  B4D8               	btfsc	status,2,c
  4645  003AEC  EF7A  F01D         	goto	u5481
  4646  003AF0  EF7C  F01D         	goto	u5480
  4647  003AF4                     u5481:
  4648  003AF4  EF99  F01D         	goto	l4752
  4649  003AF8                     u5480:
  4650  003AF8  5005               	movf	strncmp@n^0,w,c
  4651  003AFA  1006               	iorwf	(strncmp@n+1)^0,w,c
  4652  003AFC  B4D8               	btfsc	status,2,c
  4653  003AFE  EF83  F01D         	goto	u5491
  4654  003B02  EF85  F01D         	goto	u5490
  4655  003B06                     u5491:
  4656  003B06  EF99  F01D         	goto	l4752
  4657  003B0A                     u5490:
  4658  003B0A  C008  FFD9         	movff	strncmp@l,fsr2l
  4659  003B0E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4660  003B12  50DF               	movf	indf2,w,c
  4661  003B14  6E07               	movwf	??_strncmp^0,c
  4662  003B16  C00A  FFF6         	movff	strncmp@r,tblptrl
  4663  003B1A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4664  003B1E                     	if	0	;tblptru may be non-zero
  4665  003B1E                     	endif
  4666  003B1E                     	if	0	;tblptru may be non-zero
  4667  003B1E                     	endif
  4668  003B1E  0008               	tblrd		*
  4669  003B20  50F5               	movf	tablat,w,c
  4670  003B22  1807               	xorwf	??_strncmp^0,w,c
  4671  003B24  B4D8               	btfsc	status,2,c
  4672  003B26  EF97  F01D         	goto	u5501
  4673  003B2A  EF99  F01D         	goto	u5500
  4674  003B2E                     u5501:
  4675  003B2E  EF5B  F01D         	goto	l4742
  4676  003B32                     u5500:
  4677  003B32                     l4752:
  4678  003B32  C008  FFD9         	movff	strncmp@l,fsr2l
  4679  003B36  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4680  003B3A  50DF               	movf	indf2,w,c
  4681  003B3C  6E07               	movwf	??_strncmp^0,c
  4682  003B3E  C00A  FFF6         	movff	strncmp@r,tblptrl
  4683  003B42  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4684  003B46                     	if	0	;tblptru may be non-zero
  4685  003B46                     	endif
  4686  003B46                     	if	0	;tblptru may be non-zero
  4687  003B46                     	endif
  4688  003B46  0008               	tblrd		*
  4689  003B48  50F5               	movf	tablat,w,c
  4690  003B4A  5C07               	subwf	??_strncmp^0,w,c
  4691  003B4C  6E01               	movwf	?_strncmp^0,c
  4692  003B4E  6A02               	clrf	(?_strncmp+1)^0,c
  4693  003B50  A0D8               	btfss	status,0,c
  4694  003B52  0602               	decf	(?_strncmp+1)^0,f,c
  4695  003B54                     l1423:
  4696  003B54  0012               	return		;funcret
  4697  003B56                     __end_of_strncmp:
  4698                           	callstack 0
  4699                           
  4700 ;; *************** function _efgtoa *****************
  4701 ;; Defined at:
  4702 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4705 ;;		 -> sprintf@f(6), 
  4706 ;;  f               4    4[BANK0 ] PTR struct _IO_FILE
  4707 ;;  c               1    8[BANK0 ] unsigned char 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  u               4   66[BANK0 ] unsigned char 
  4710 ;;  g               4   58[BANK0 ] unsigned char 
  4711 ;;  l               4   52[BANK0 ] unsigned char 
  4712 ;;  h               4   48[BANK0 ] unsigned char 
  4713 ;;  ou              4   34[BANK0 ] unsigned char 
  4714 ;;  n               2   64[BANK0 ] int 
  4715 ;;  e               2   62[BANK0 ] int 
  4716 ;;  i               2   56[BANK0 ] int 
  4717 ;;  w               2   44[BANK0 ] int 
  4718 ;;  p               2   42[BANK0 ] int 
  4719 ;;  sign            2   40[BANK0 ] int 
  4720 ;;  d               2   38[BANK0 ] int 
  4721 ;;  m               2   32[BANK0 ] int 
  4722 ;;  ne              2   30[BANK0 ] int 
  4723 ;;  pp              2   28[BANK0 ] int 
  4724 ;;  t               2   26[BANK0 ] int 
  4725 ;;  mode            1   47[BANK0 ] unsigned char 
  4726 ;;  nmode           1   46[BANK0 ] unsigned char 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  2    2[BANK0 ] int 
  4729 ;; Registers used:
  4730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4736 ;;      Params:         0       7       0       0       0       0       0       0       0
  4737 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4738 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4739 ;;      Totals:         0      68       0       0       0       0       0       0       0
  4740 ;;Total ram usage:       68 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; Hardware stack levels required when called: 5
  4743 ;; This function calls:
  4744 ;;		___awdiv
  4745 ;;		___awmod
  4746 ;;		___fladd
  4747 ;;		___fldiv
  4748 ;;		___fleq
  4749 ;;		___flge
  4750 ;;		___flmul
  4751 ;;		___flneg
  4752 ;;		___flsub
  4753 ;;		___fltol
  4754 ;;		___fpclassifyf
  4755 ;;		_floorf
  4756 ;;		_isupper
  4757 ;;		_pad
  4758 ;;		_strcpy
  4759 ;;		_tolower
  4760 ;; This function is called by:
  4761 ;;		_vfpfcnvrt
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text13
  4766  000858                     __ptext13:
  4767                           	callstack 0
  4768  000858                     _efgtoa:
  4769                           	callstack 22
  4770  000858                     
  4771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4772  000858  0E00               	movlw	0
  4773  00085A  0100               	movlb	0	; () banked
  4774  00085C  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  4775  00085E  0E00               	movlw	0
  4776  000860  6F88               	movwf	efgtoa@sign& (0+255),b
  4777  000862                     
  4778                           ; BSR set to: 0
  4779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4780  000862  C064  F09A         	movff	efgtoa@f,efgtoa@g
  4781  000866  C065  F09B         	movff	efgtoa@f+1,efgtoa@g+1
  4782  00086A  C066  F09C         	movff	efgtoa@f+2,efgtoa@g+2
  4783  00086E  C067  F09D         	movff	efgtoa@f+3,efgtoa@g+3
  4784  000872                     
  4785                           ; BSR set to: 0
  4786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4787  000872  BF9D               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4788  000874  EF40  F004         	goto	u4680
  4789  000878  EF3E  F004         	goto	u4681
  4790  00087C                     u4681:
  4791  00087C  EF56  F004         	goto	l4330
  4792  000880                     u4680:
  4793  000880                     
  4794                           ; BSR set to: 0
  4795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4796  000880  0E00               	movlw	0
  4797  000882  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  4798  000884  0E01               	movlw	1
  4799  000886  6F88               	movwf	efgtoa@sign& (0+255),b
  4800  000888                     
  4801                           ; BSR set to: 0
  4802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4803  000888  C09A  F001         	movff	efgtoa@g,___flneg@f1
  4804  00088C  C09B  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4805  000890  C09C  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4806  000894  C09D  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4807  000898  EC14  F023         	call	___flneg	;wreg free
  4808  00089C  C001  F09A         	movff	?___flneg,efgtoa@g
  4809  0008A0  C002  F09B         	movff	?___flneg+1,efgtoa@g+1
  4810  0008A4  C003  F09C         	movff	?___flneg+2,efgtoa@g+2
  4811  0008A8  C004  F09D         	movff	?___flneg+3,efgtoa@g+3
  4812  0008AC                     l4330:
  4813                           
  4814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4815  0008AC  0E00               	movlw	0
  4816  0008AE  0100               	movlb	0	; () banked
  4817  0008B0  6FA1               	movwf	(efgtoa@n+1)& (0+255),b
  4818  0008B2  0E00               	movlw	0
  4819  0008B4  6FA0               	movwf	efgtoa@n& (0+255),b
  4820  0008B6                     
  4821                           ; BSR set to: 0
  4822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4823  0008B6  C0F7  F08C         	movff	_width,efgtoa@w
  4824  0008BA  C0F8  F08D         	movff	_width+1,efgtoa@w+1
  4825  0008BE                     
  4826                           ; BSR set to: 0
  4827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4828  0008BE  5188               	movf	efgtoa@sign& (0+255),w,b
  4829  0008C0  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4830  0008C2  A4D8               	btfss	status,2,c
  4831  0008C4  EF66  F004         	goto	u4691
  4832  0008C8  EF68  F004         	goto	u4690
  4833  0008CC                     u4691:
  4834  0008CC  EF6F  F004         	goto	l4338
  4835  0008D0                     u4690:
  4836  0008D0                     
  4837                           ; BSR set to: 0
  4838  0008D0  A5FB               	btfss	_flags& (0+255),2,b
  4839  0008D2  EF6D  F004         	goto	u4701
  4840  0008D6  EF6F  F004         	goto	u4700
  4841  0008DA                     u4701:
  4842  0008DA  EF89  F004         	goto	l4350
  4843  0008DE                     u4700:
  4844  0008DE                     l4338:
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4848  0008DE  5188               	movf	efgtoa@sign& (0+255),w,b
  4849  0008E0  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4850  0008E2  A4D8               	btfss	status,2,c
  4851  0008E4  EF76  F004         	goto	u4711
  4852  0008E8  EF78  F004         	goto	u4710
  4853  0008EC                     u4711:
  4854  0008EC  EF7E  F004         	goto	l4342
  4855  0008F0                     u4710:
  4856  0008F0                     
  4857                           ; BSR set to: 0
  4858  0008F0  0E00               	movlw	0
  4859  0008F2  6F6F               	movwf	(_efgtoa$1671+1)& (0+255),b
  4860  0008F4  0E2B               	movlw	43
  4861  0008F6  6F6E               	movwf	_efgtoa$1671& (0+255),b
  4862  0008F8  EF82  F004         	goto	l4344
  4863  0008FC                     l4342:
  4864                           
  4865                           ; BSR set to: 0
  4866  0008FC  0E00               	movlw	0
  4867  0008FE  6F6F               	movwf	(_efgtoa$1671+1)& (0+255),b
  4868  000900  0E2D               	movlw	45
  4869  000902  6F6E               	movwf	_efgtoa$1671& (0+255),b
  4870  000904                     l4344:
  4871                           
  4872                           ; BSR set to: 0
  4873  000904  C06E  F12A         	movff	_efgtoa$1671,_dbuf
  4874  000908                     
  4875                           ; BSR set to: 0
  4876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4877  000908  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  4878  00090A  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  4879  00090C                     
  4880                           ; BSR set to: 0
  4881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4882  00090C  078C               	decf	efgtoa@w& (0+255),f,b
  4883  00090E  A0D8               	btfss	status,0,c
  4884  000910  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  4885  000912                     l4350:
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4889  000912  C09A  F001         	movff	efgtoa@g,___fpclassifyf@x
  4890  000916  C09B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4891  00091A  C09C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4892  00091E  C09D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4893  000922  ECC1  F01C         	call	___fpclassifyf	;wreg free
  4894  000926  0401               	decf	?___fpclassifyf^0,w,c
  4895  000928  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4896  00092A  A4D8               	btfss	status,2,c
  4897  00092C  EF9A  F004         	goto	u4721
  4898  000930  EF9C  F004         	goto	u4720
  4899  000934                     u4721:
  4900  000934  EFF3  F004         	goto	l4368
  4901  000938                     u4720:
  4902  000938  0EBF               	movlw	191
  4903  00093A  0100               	movlb	0	; () banked
  4904  00093C  6F69               	movwf	??_efgtoa& (0+255),b
  4905  00093E  0EFF               	movlw	255
  4906  000940  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  4907  000942  5168               	movf	efgtoa@c& (0+255),w,b
  4908  000944  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  4909  000946  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  4910  000948  5169               	movf	??_efgtoa& (0+255),w,b
  4911  00094A  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  4912  00094C  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  4913  00094E  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4914  000950  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  4915  000952  E10A               	bnz	u4730
  4916  000954  0E1A               	movlw	26
  4917  000956  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  4918  000958  A0D8               	btfss	status,0,c
  4919  00095A  EFB1  F004         	goto	u4731
  4920  00095E  EFB4  F004         	goto	u4730
  4921  000962                     u4731:
  4922  000962  0E01               	movlw	1
  4923  000964  EFB5  F004         	goto	u4740
  4924  000968                     u4730:
  4925  000968  0E00               	movlw	0
  4926  00096A                     u4740:
  4927  00096A  6F70               	movwf	_efgtoa$1672& (0+255),b
  4928  00096C  6B71               	clrf	(_efgtoa$1672+1)& (0+255),b
  4929  00096E                     
  4930                           ; BSR set to: 0
  4931  00096E  5170               	movf	_efgtoa$1672& (0+255),w,b
  4932  000970  1171               	iorwf	(_efgtoa$1672+1)& (0+255),w,b
  4933  000972  B4D8               	btfsc	status,2,c
  4934  000974  EFBE  F004         	goto	u4751
  4935  000978  EFC0  F004         	goto	u4750
  4936  00097C                     u4751:
  4937  00097C  EFCE  F004         	goto	l4360
  4938  000980                     u4750:
  4939  000980                     
  4940                           ; BSR set to: 0
  4941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4942  000980  0E2A               	movlw	low _dbuf
  4943  000982  25A0               	addwf	efgtoa@n& (0+255),w,b
  4944  000984  6E01               	movwf	strcpy@dest^0,c
  4945  000986  0E01               	movlw	high _dbuf
  4946  000988  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4947  00098A  6E02               	movwf	(strcpy@dest+1)^0,c
  4948  00098C  0E16               	movlw	low STR_23
  4949  00098E  6E03               	movwf	strcpy@src^0,c
  4950  000990  0E08               	movlw	high STR_23
  4951  000992  6E04               	movwf	(strcpy@src+1)^0,c
  4952  000994  ECB4  F020         	call	_strcpy	;wreg free
  4953                           
  4954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4955  000998  EFDA  F004         	goto	l4362
  4956  00099C                     l4360:
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4960  00099C  0E2A               	movlw	low _dbuf
  4961  00099E  25A0               	addwf	efgtoa@n& (0+255),w,b
  4962  0009A0  6E01               	movwf	strcpy@dest^0,c
  4963  0009A2  0E01               	movlw	high _dbuf
  4964  0009A4  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4965  0009A6  6E02               	movwf	(strcpy@dest+1)^0,c
  4966  0009A8  0E1E               	movlw	low STR_24
  4967  0009AA  6E03               	movwf	strcpy@src^0,c
  4968  0009AC  0E08               	movlw	high STR_24
  4969  0009AE  6E04               	movwf	(strcpy@src+1)^0,c
  4970  0009B0  ECB4  F020         	call	_strcpy	;wreg free
  4971  0009B4                     l4362:
  4972                           
  4973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4974  0009B4  0100               	movlb	0	; () banked
  4975  0009B6  0EFD               	movlw	253
  4976  0009B8  278C               	addwf	efgtoa@w& (0+255),f,b
  4977  0009BA  0EFF               	movlw	255
  4978  0009BC  238D               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4979  0009BE                     l4364:
  4980                           
  4981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4982  0009BE  C062  F011         	movff	efgtoa@fp,pad@fp
  4983  0009C2  C063  F012         	movff	efgtoa@fp+1,pad@fp+1
  4984  0009C6  0E2A               	movlw	low _dbuf
  4985  0009C8  6E13               	movwf	pad@buf^0,c
  4986  0009CA  0E01               	movlw	high _dbuf
  4987  0009CC  6E14               	movwf	(pad@buf+1)^0,c
  4988  0009CE  C08C  F015         	movff	efgtoa@w,pad@p
  4989  0009D2  C08D  F016         	movff	efgtoa@w+1,pad@p+1
  4990  0009D6  EC10  F01E         	call	_pad	;wreg free
  4991  0009DA  C011  F062         	movff	?_pad,?_efgtoa
  4992  0009DE  C012  F063         	movff	?_pad+1,?_efgtoa+1
  4993  0009E2  EF57  F00A         	goto	l1152
  4994  0009E6                     l4368:
  4995                           
  4996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4997  0009E6  C09A  F001         	movff	efgtoa@g,___fpclassifyf@x
  4998  0009EA  C09B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4999  0009EE  C09C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5000  0009F2  C09D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5001  0009F6  ECC1  F01C         	call	___fpclassifyf	;wreg free
  5002  0009FA  5001               	movf	?___fpclassifyf^0,w,c
  5003  0009FC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5004  0009FE  A4D8               	btfss	status,2,c
  5005  000A00  EF04  F005         	goto	u4761
  5006  000A04  EF06  F005         	goto	u4760
  5007  000A08                     u4761:
  5008  000A08  EF46  F005         	goto	l4386
  5009  000A0C                     u4760:
  5010  000A0C  0EBF               	movlw	191
  5011  000A0E  0100               	movlb	0	; () banked
  5012  000A10  6F69               	movwf	??_efgtoa& (0+255),b
  5013  000A12  0EFF               	movlw	255
  5014  000A14  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  5015  000A16  5168               	movf	efgtoa@c& (0+255),w,b
  5016  000A18  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  5017  000A1A  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  5018  000A1C  5169               	movf	??_efgtoa& (0+255),w,b
  5019  000A1E  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  5020  000A20  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  5021  000A22  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5022  000A24  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  5023  000A26  E10A               	bnz	u4770
  5024  000A28  0E1A               	movlw	26
  5025  000A2A  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  5026  000A2C  A0D8               	btfss	status,0,c
  5027  000A2E  EF1B  F005         	goto	u4771
  5028  000A32  EF1E  F005         	goto	u4770
  5029  000A36                     u4771:
  5030  000A36  0E01               	movlw	1
  5031  000A38  EF1F  F005         	goto	u4780
  5032  000A3C                     u4770:
  5033  000A3C  0E00               	movlw	0
  5034  000A3E                     u4780:
  5035  000A3E  6F72               	movwf	_efgtoa$1677& (0+255),b
  5036  000A40  6B73               	clrf	(_efgtoa$1677+1)& (0+255),b
  5037  000A42                     
  5038                           ; BSR set to: 0
  5039  000A42  5172               	movf	_efgtoa$1677& (0+255),w,b
  5040  000A44  1173               	iorwf	(_efgtoa$1677+1)& (0+255),w,b
  5041  000A46  B4D8               	btfsc	status,2,c
  5042  000A48  EF28  F005         	goto	u4791
  5043  000A4C  EF2A  F005         	goto	u4790
  5044  000A50                     u4791:
  5045  000A50  EF38  F005         	goto	l4378
  5046  000A54                     u4790:
  5047  000A54                     
  5048                           ; BSR set to: 0
  5049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  5050  000A54  0E2A               	movlw	low _dbuf
  5051  000A56  25A0               	addwf	efgtoa@n& (0+255),w,b
  5052  000A58  6E01               	movwf	strcpy@dest^0,c
  5053  000A5A  0E01               	movlw	high _dbuf
  5054  000A5C  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5055  000A5E  6E02               	movwf	(strcpy@dest+1)^0,c
  5056  000A60  0E1A               	movlw	low STR_27
  5057  000A62  6E03               	movwf	strcpy@src^0,c
  5058  000A64  0E08               	movlw	high STR_27
  5059  000A66  6E04               	movwf	(strcpy@src+1)^0,c
  5060  000A68  ECB4  F020         	call	_strcpy	;wreg free
  5061                           
  5062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  5063  000A6C  EFDA  F004         	goto	l4362
  5064  000A70                     l4378:
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  5068  000A70  0E2A               	movlw	low _dbuf
  5069  000A72  25A0               	addwf	efgtoa@n& (0+255),w,b
  5070  000A74  6E01               	movwf	strcpy@dest^0,c
  5071  000A76  0E01               	movlw	high _dbuf
  5072  000A78  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5073  000A7A  6E02               	movwf	(strcpy@dest+1)^0,c
  5074  000A7C  0E22               	movlw	low STR_28
  5075  000A7E  6E03               	movwf	strcpy@src^0,c
  5076  000A80  0E08               	movlw	high STR_28
  5077  000A82  6E04               	movwf	(strcpy@src+1)^0,c
  5078  000A84  ECB4  F020         	call	_strcpy	;wreg free
  5079  000A88  EFDA  F004         	goto	l4362
  5080  000A8C                     l4386:
  5081                           
  5082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5083  000A8C  0E00               	movlw	0
  5084  000A8E  0100               	movlb	0	; () banked
  5085  000A90  6FA2               	movwf	efgtoa@u& (0+255),b
  5086  000A92  0E00               	movlw	0
  5087  000A94  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  5088  000A96  0E80               	movlw	128
  5089  000A98  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  5090  000A9A  0E3F               	movlw	63
  5091  000A9C  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  5092                           
  5093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5094  000A9E  0E00               	movlw	0
  5095  000AA0  6F9F               	movwf	(efgtoa@e+1)& (0+255),b
  5096  000AA2  0E00               	movlw	0
  5097  000AA4  6F9E               	movwf	efgtoa@e& (0+255),b
  5098  000AA6                     
  5099                           ; BSR set to: 0
  5100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5101  000AA6  C09A  F001         	movff	efgtoa@g,___fleq@ff1
  5102  000AAA  C09B  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5103  000AAE  C09C  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5104  000AB2  C09D  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5105  000AB6  0E00               	movlw	0
  5106  000AB8  6E05               	movwf	___fleq@ff2^0,c
  5107  000ABA  0E00               	movlw	0
  5108  000ABC  6E06               	movwf	(___fleq@ff2+1)^0,c
  5109  000ABE  0E00               	movlw	0
  5110  000AC0  6E07               	movwf	(___fleq@ff2+2)^0,c
  5111  000AC2  0E00               	movlw	0
  5112  000AC4  6E08               	movwf	(___fleq@ff2+3)^0,c
  5113  000AC6  EC2D  F01F         	call	___fleq	;wreg free
  5114  000ACA  B0D8               	btfsc	status,0,c
  5115  000ACC  EF6A  F005         	goto	u4801
  5116  000AD0  EF6C  F005         	goto	u4800
  5117  000AD4                     u4801:
  5118  000AD4  EFEF  F005         	goto	l4404
  5119  000AD8                     u4800:
  5120  000AD8  EF8B  F005         	goto	l4396
  5121  000ADC                     l4392:
  5122                           
  5123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5124  000ADC  C0A2  F015         	movff	efgtoa@u,___flmul@b
  5125  000AE0  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  5126  000AE4  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  5127  000AE8  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  5128  000AEC  0E00               	movlw	0
  5129  000AEE  6E19               	movwf	___flmul@a^0,c
  5130  000AF0  0E00               	movlw	0
  5131  000AF2  6E1A               	movwf	(___flmul@a+1)^0,c
  5132  000AF4  0E20               	movlw	32
  5133  000AF6  6E1B               	movwf	(___flmul@a+2)^0,c
  5134  000AF8  0E41               	movlw	65
  5135  000AFA  6E1C               	movwf	(___flmul@a+3)^0,c
  5136  000AFC  ECBF  F00F         	call	___flmul	;wreg free
  5137  000B00  C015  F0A2         	movff	?___flmul,efgtoa@u
  5138  000B04  C016  F0A3         	movff	?___flmul+1,efgtoa@u+1
  5139  000B08  C017  F0A4         	movff	?___flmul+2,efgtoa@u+2
  5140  000B0C  C018  F0A5         	movff	?___flmul+3,efgtoa@u+3
  5141  000B10                     
  5142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5143  000B10  0100               	movlb	0	; () banked
  5144  000B12  4B9E               	infsnz	efgtoa@e& (0+255),f,b
  5145  000B14  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  5146  000B16                     l4396:
  5147                           
  5148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5149  000B16  C09A  F02E         	movff	efgtoa@g,___flge@ff1
  5150  000B1A  C09B  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  5151  000B1E  C09C  F030         	movff	efgtoa@g+2,___flge@ff1+2
  5152  000B22  C09D  F031         	movff	efgtoa@g+3,___flge@ff1+3
  5153  000B26  0E00               	movlw	0
  5154  000B28  6E19               	movwf	___flmul@a^0,c
  5155  000B2A  0E00               	movlw	0
  5156  000B2C  6E1A               	movwf	(___flmul@a+1)^0,c
  5157  000B2E  0E20               	movlw	32
  5158  000B30  6E1B               	movwf	(___flmul@a+2)^0,c
  5159  000B32  0E41               	movlw	65
  5160  000B34  6E1C               	movwf	(___flmul@a+3)^0,c
  5161  000B36  C0A2  F015         	movff	efgtoa@u,___flmul@b
  5162  000B3A  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  5163  000B3E  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  5164  000B42  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  5165  000B46  ECBF  F00F         	call	___flmul	;wreg free
  5166  000B4A  C015  F032         	movff	?___flmul,___flge@ff2
  5167  000B4E  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  5168  000B52  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  5169  000B56  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  5170  000B5A  ECC0  F01B         	call	___flge	;wreg free
  5171  000B5E  B0D8               	btfsc	status,0,c
  5172  000B60  EFB4  F005         	goto	u4811
  5173  000B64  EFB6  F005         	goto	u4810
  5174  000B68                     u4811:
  5175  000B68  EF6E  F005         	goto	l4392
  5176  000B6C                     u4810:
  5177  000B6C  EFD6  F005         	goto	l4402
  5178  000B70                     l4398:
  5179                           
  5180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5181  000B70  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  5182  000B74  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  5183  000B78  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  5184  000B7C  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  5185  000B80  0E00               	movlw	0
  5186  000B82  6E32               	movwf	___fldiv@a^0,c
  5187  000B84  0E00               	movlw	0
  5188  000B86  6E33               	movwf	(___fldiv@a+1)^0,c
  5189  000B88  0E20               	movlw	32
  5190  000B8A  6E34               	movwf	(___fldiv@a+2)^0,c
  5191  000B8C  0E41               	movlw	65
  5192  000B8E  6E35               	movwf	(___fldiv@a+3)^0,c
  5193  000B90  ECAA  F013         	call	___fldiv	;wreg free
  5194  000B94  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  5195  000B98  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  5196  000B9C  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  5197  000BA0  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  5198  000BA4                     
  5199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5200  000BA4  0100               	movlb	0	; () banked
  5201  000BA6  079E               	decf	efgtoa@e& (0+255),f,b
  5202  000BA8  A0D8               	btfss	status,0,c
  5203  000BAA  079F               	decf	(efgtoa@e+1)& (0+255),f,b
  5204  000BAC                     l4402:
  5205                           
  5206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5207  000BAC  C09A  F02E         	movff	efgtoa@g,___flge@ff1
  5208  000BB0  C09B  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  5209  000BB4  C09C  F030         	movff	efgtoa@g+2,___flge@ff1+2
  5210  000BB8  C09D  F031         	movff	efgtoa@g+3,___flge@ff1+3
  5211  000BBC  C0A2  F032         	movff	efgtoa@u,___flge@ff2
  5212  000BC0  C0A3  F033         	movff	efgtoa@u+1,___flge@ff2+1
  5213  000BC4  C0A4  F034         	movff	efgtoa@u+2,___flge@ff2+2
  5214  000BC8  C0A5  F035         	movff	efgtoa@u+3,___flge@ff2+3
  5215  000BCC  ECC0  F01B         	call	___flge	;wreg free
  5216  000BD0  A0D8               	btfss	status,0,c
  5217  000BD2  EFED  F005         	goto	u4821
  5218  000BD6  EFEF  F005         	goto	u4820
  5219  000BDA                     u4821:
  5220  000BDA  EFB8  F005         	goto	l4398
  5221  000BDE                     u4820:
  5222  000BDE                     l4404:
  5223                           
  5224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5225  000BDE  C068  F007         	movff	efgtoa@c,tolower@c
  5226  000BE2  6A08               	clrf	(tolower@c+1)^0,c
  5227  000BE4  EC26  F020         	call	_tolower	;wreg free
  5228  000BE8  5007               	movf	?_tolower^0,w,c
  5229  000BEA  0100               	movlb	0	; () banked
  5230  000BEC  6F8F               	movwf	efgtoa@mode& (0+255),b
  5231  000BEE                     
  5232                           ; BSR set to: 0
  5233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5234  000BEE  C08F  F08E         	movff	efgtoa@mode,efgtoa@nmode
  5235  000BF2                     
  5236                           ; BSR set to: 0
  5237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5238  000BF2  0E67               	movlw	103
  5239  000BF4  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5240  000BF6  A4D8               	btfss	status,2,c
  5241  000BF8  EF00  F006         	goto	u4831
  5242  000BFC  EF02  F006         	goto	u4830
  5243  000C00                     u4831:
  5244  000C00  EF28  F006         	goto	l4418
  5245  000C04                     u4830:
  5246  000C04                     
  5247                           ; BSR set to: 0
  5248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5249  000C04  51F9               	movf	_prec& (0+255),w,b
  5250  000C06  11FA               	iorwf	(_prec+1)& (0+255),w,b
  5251  000C08  A4D8               	btfss	status,2,c
  5252  000C0A  EF09  F006         	goto	u4841
  5253  000C0E  EF0B  F006         	goto	u4840
  5254  000C12                     u4841:
  5255  000C12  EF0F  F006         	goto	l4414
  5256  000C16                     u4840:
  5257  000C16                     
  5258                           ; BSR set to: 0
  5259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5260  000C16  0E00               	movlw	0
  5261  000C18  6FFA               	movwf	(_prec+1)& (0+255),b
  5262  000C1A  0E01               	movlw	1
  5263  000C1C  6FF9               	movwf	_prec& (0+255),b
  5264  000C1E                     l4414:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5268  000C1E  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  5269  000C20  EF1C  F006         	goto	u4850
  5270  000C24  51FA               	movf	(_prec+1)& (0+255),w,b
  5271  000C26  E106               	bnz	u4851
  5272  000C28  05F9               	decf	_prec& (0+255),w,b
  5273  000C2A  B0D8               	btfsc	status,0,c
  5274  000C2C  EF1A  F006         	goto	u4851
  5275  000C30  EF1C  F006         	goto	u4850
  5276  000C34                     u4851:
  5277  000C34  EF22  F006         	goto	l1170
  5278  000C38                     u4850:
  5279  000C38                     l4416:
  5280                           
  5281                           ; BSR set to: 0
  5282  000C38  0E00               	movlw	0
  5283  000C3A  6F8B               	movwf	(efgtoa@p+1)& (0+255),b
  5284  000C3C  0E06               	movlw	6
  5285  000C3E  6F8A               	movwf	efgtoa@p& (0+255),b
  5286  000C40  EF31  F006         	goto	l4424
  5287  000C44                     l1170:
  5288                           
  5289                           ; BSR set to: 0
  5290  000C44  C0F9  F08A         	movff	_prec,efgtoa@p
  5291  000C48  C0FA  F08B         	movff	_prec+1,efgtoa@p+1
  5292  000C4C  EF31  F006         	goto	l4424
  5293  000C50                     l4418:
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5297  000C50  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  5298  000C52  EF2D  F006         	goto	u4861
  5299  000C56  EF2F  F006         	goto	u4860
  5300  000C5A                     u4861:
  5301  000C5A  EF1C  F006         	goto	l4416
  5302  000C5E                     u4860:
  5303  000C5E  EF22  F006         	goto	l1170
  5304  000C62                     l4424:
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5308  000C62  0E67               	movlw	103
  5309  000C64  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5310  000C66  A4D8               	btfss	status,2,c
  5311  000C68  EF38  F006         	goto	u4871
  5312  000C6C  EF3A  F006         	goto	u4870
  5313  000C70                     u4871:
  5314  000C70  EF69  F006         	goto	l4434
  5315  000C74                     u4870:
  5316  000C74                     
  5317                           ; BSR set to: 0
  5318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5319  000C74  AF9F               	btfss	(efgtoa@e+1)& (0+255),7,b
  5320  000C76  EF48  F006         	goto	u4880
  5321  000C7A  0EFC               	movlw	252
  5322  000C7C  5D9E               	subwf	efgtoa@e& (0+255),w,b
  5323  000C7E  0EFF               	movlw	255
  5324  000C80  599F               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5325  000C82  A0D8               	btfss	status,0,c
  5326  000C84  EF46  F006         	goto	u4881
  5327  000C88  EF48  F006         	goto	u4880
  5328  000C8C                     u4881:
  5329  000C8C  EF67  F006         	goto	l4432
  5330  000C90                     u4880:
  5331  000C90                     
  5332                           ; BSR set to: 0
  5333  000C90  0EFF               	movlw	255
  5334  000C92  6F69               	movwf	??_efgtoa& (0+255),b
  5335  000C94  0EFF               	movlw	255
  5336  000C96  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  5337  000C98  C08A  F06B         	movff	efgtoa@p,??_efgtoa+2
  5338  000C9C  C08B  F06C         	movff	efgtoa@p+1,??_efgtoa+3
  5339  000CA0  5169               	movf	??_efgtoa& (0+255),w,b
  5340  000CA2  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  5341  000CA4  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  5342  000CA6  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5343  000CA8  519E               	movf	efgtoa@e& (0+255),w,b
  5344  000CAA  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  5345  000CAC  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  5346  000CAE  0A80               	xorlw	128
  5347  000CB0  6F6D               	movwf	(??_efgtoa+4)& (0+255),b
  5348  000CB2  519F               	movf	(efgtoa@e+1)& (0+255),w,b
  5349  000CB4  0A80               	xorlw	128
  5350  000CB6  596D               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5351  000CB8  A0D8               	btfss	status,0,c
  5352  000CBA  EF61  F006         	goto	u4891
  5353  000CBE  EF63  F006         	goto	u4890
  5354  000CC2                     u4891:
  5355  000CC2  EF67  F006         	goto	l4432
  5356  000CC6                     u4890:
  5357  000CC6                     
  5358                           ; BSR set to: 0
  5359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5360  000CC6  0E66               	movlw	102
  5361  000CC8  6F8E               	movwf	efgtoa@nmode& (0+255),b
  5362                           
  5363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5364  000CCA  EF69  F006         	goto	l4434
  5365  000CCE                     l4432:
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5369  000CCE  0E65               	movlw	101
  5370  000CD0  6F8E               	movwf	efgtoa@nmode& (0+255),b
  5371  000CD2                     l4434:
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5375  000CD2  C08A  F080         	movff	efgtoa@p,efgtoa@m
  5376  000CD6  C08B  F081         	movff	efgtoa@p+1,efgtoa@m+1
  5377  000CDA                     
  5378                           ; BSR set to: 0
  5379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5380  000CDA  0E67               	movlw	103
  5381  000CDC  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5382  000CDE  A4D8               	btfss	status,2,c
  5383  000CE0  EF74  F006         	goto	u4901
  5384  000CE4  EF76  F006         	goto	u4900
  5385  000CE8                     u4901:
  5386  000CE8  EF86  F006         	goto	l4442
  5387  000CEC                     u4900:
  5388  000CEC                     
  5389                           ; BSR set to: 0
  5390  000CEC  0E66               	movlw	102
  5391  000CEE  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5392  000CF0  A4D8               	btfss	status,2,c
  5393  000CF2  EF7D  F006         	goto	u4911
  5394  000CF6  EF7F  F006         	goto	u4910
  5395  000CFA                     u4911:
  5396  000CFA  EF88  F006         	goto	l4444
  5397  000CFE                     u4910:
  5398  000CFE                     
  5399                           ; BSR set to: 0
  5400  000CFE  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5401  000D00  EF86  F006         	goto	u4920
  5402  000D04  EF84  F006         	goto	u4921
  5403  000D08                     u4921:
  5404  000D08  EF88  F006         	goto	l4444
  5405  000D0C                     u4920:
  5406  000D0C                     l4442:
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5410  000D0C  4B80               	infsnz	efgtoa@m& (0+255),f,b
  5411  000D0E  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  5412  000D10                     l4444:
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5416  000D10  0E66               	movlw	102
  5417  000D12  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5418  000D14  A4D8               	btfss	status,2,c
  5419  000D16  EF8F  F006         	goto	u4931
  5420  000D1A  EF91  F006         	goto	u4930
  5421  000D1E                     u4931:
  5422  000D1E  EFB1  F006         	goto	l4454
  5423  000D22                     u4930:
  5424  000D22                     
  5425                           ; BSR set to: 0
  5426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5427  000D22  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5428  000D24  EF98  F006         	goto	u4940
  5429  000D28  EF96  F006         	goto	u4941
  5430  000D2C                     u4941:
  5431  000D2C  EFA4  F006         	goto	l4450
  5432  000D30                     u4940:
  5433  000D30                     
  5434                           ; BSR set to: 0
  5435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5436  000D30  0E00               	movlw	0
  5437  000D32  6FA2               	movwf	efgtoa@u& (0+255),b
  5438  000D34  0E00               	movlw	0
  5439  000D36  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  5440  000D38  0E80               	movlw	128
  5441  000D3A  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  5442  000D3C  0E3F               	movlw	63
  5443  000D3E  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  5444                           
  5445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5446  000D40  0E00               	movlw	0
  5447  000D42  6F9F               	movwf	(efgtoa@e+1)& (0+255),b
  5448  000D44  0E00               	movlw	0
  5449  000D46  6F9E               	movwf	efgtoa@e& (0+255),b
  5450  000D48                     l4450:
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5454  000D48  0E67               	movlw	103
  5455  000D4A  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5456  000D4C  B4D8               	btfsc	status,2,c
  5457  000D4E  EFAB  F006         	goto	u4951
  5458  000D52  EFAD  F006         	goto	u4950
  5459  000D56                     u4951:
  5460  000D56  EFB1  F006         	goto	l4454
  5461  000D5A                     u4950:
  5462  000D5A                     
  5463                           ; BSR set to: 0
  5464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5465  000D5A  519E               	movf	efgtoa@e& (0+255),w,b
  5466  000D5C  2780               	addwf	efgtoa@m& (0+255),f,b
  5467  000D5E  519F               	movf	(efgtoa@e+1)& (0+255),w,b
  5468  000D60  2381               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5469  000D62                     l4454:
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5473  000D62  0E00               	movlw	0
  5474  000D64  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  5475  000D66  0E00               	movlw	0
  5476  000D68  6F98               	movwf	efgtoa@i& (0+255),b
  5477  000D6A                     
  5478                           ; BSR set to: 0
  5479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5480  000D6A  C09A  F090         	movff	efgtoa@g,efgtoa@h
  5481  000D6E  C09B  F091         	movff	efgtoa@g+1,efgtoa@h+1
  5482  000D72  C09C  F092         	movff	efgtoa@g+2,efgtoa@h+2
  5483  000D76  C09D  F093         	movff	efgtoa@g+3,efgtoa@h+3
  5484  000D7A                     
  5485                           ; BSR set to: 0
  5486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5487  000D7A  C0A2  F082         	movff	efgtoa@u,efgtoa@ou
  5488  000D7E  C0A3  F083         	movff	efgtoa@u+1,efgtoa@ou+1
  5489  000D82  C0A4  F084         	movff	efgtoa@u+2,efgtoa@ou+2
  5490  000D86  C0A5  F085         	movff	efgtoa@u+3,efgtoa@ou+3
  5491                           
  5492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5493  000D8A  EF42  F007         	goto	l4468
  5494  000D8E                     l4460:
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5498  000D8E  C090  F02E         	movff	efgtoa@h,___fldiv@b
  5499  000D92  C091  F02F         	movff	efgtoa@h+1,___fldiv@b+1
  5500  000D96  C092  F030         	movff	efgtoa@h+2,___fldiv@b+2
  5501  000D9A  C093  F031         	movff	efgtoa@h+3,___fldiv@b+3
  5502  000D9E  C0A2  F032         	movff	efgtoa@u,___fldiv@a
  5503  000DA2  C0A3  F033         	movff	efgtoa@u+1,___fldiv@a+1
  5504  000DA6  C0A4  F034         	movff	efgtoa@u+2,___fldiv@a+2
  5505  000DAA  C0A5  F035         	movff	efgtoa@u+3,___fldiv@a+3
  5506  000DAE  ECAA  F013         	call	___fldiv	;wreg free
  5507  000DB2  C02E  F047         	movff	?___fldiv,floorf@x
  5508  000DB6  C02F  F048         	movff	?___fldiv+1,floorf@x+1
  5509  000DBA  C030  F049         	movff	?___fldiv+2,floorf@x+2
  5510  000DBE  C031  F04A         	movff	?___fldiv+3,floorf@x+3
  5511  000DC2  EC91  F018         	call	_floorf	;wreg free
  5512  000DC6  C047  F094         	movff	?_floorf,efgtoa@l
  5513  000DCA  C048  F095         	movff	?_floorf+1,efgtoa@l+1
  5514  000DCE  C049  F096         	movff	?_floorf+2,efgtoa@l+2
  5515  000DD2  C04A  F097         	movff	?_floorf+3,efgtoa@l+3
  5516                           
  5517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5518  000DD6  C094  F057         	movff	efgtoa@l,___fltol@f1
  5519  000DDA  C095  F058         	movff	efgtoa@l+1,___fltol@f1+1
  5520  000DDE  C096  F059         	movff	efgtoa@l+2,___fltol@f1+2
  5521  000DE2  C097  F05A         	movff	efgtoa@l+3,___fltol@f1+3
  5522  000DE6  EC3C  F01B         	call	___fltol	;wreg free
  5523  000DEA  C057  F086         	movff	?___fltol,efgtoa@d
  5524  000DEE  C058  F087         	movff	?___fltol+1,efgtoa@d+1
  5525  000DF2                     
  5526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5527  000DF2  C090  F057         	movff	efgtoa@h,___flsub@b
  5528  000DF6  C091  F058         	movff	efgtoa@h+1,___flsub@b+1
  5529  000DFA  C092  F059         	movff	efgtoa@h+2,___flsub@b+2
  5530  000DFE  C093  F05A         	movff	efgtoa@h+3,___flsub@b+3
  5531  000E02  C0A2  F019         	movff	efgtoa@u,___flmul@a
  5532  000E06  C0A3  F01A         	movff	efgtoa@u+1,___flmul@a+1
  5533  000E0A  C0A4  F01B         	movff	efgtoa@u+2,___flmul@a+2
  5534  000E0E  C0A5  F01C         	movff	efgtoa@u+3,___flmul@a+3
  5535  000E12  C094  F015         	movff	efgtoa@l,___flmul@b
  5536  000E16  C095  F016         	movff	efgtoa@l+1,___flmul@b+1
  5537  000E1A  C096  F017         	movff	efgtoa@l+2,___flmul@b+2
  5538  000E1E  C097  F018         	movff	efgtoa@l+3,___flmul@b+3
  5539  000E22  ECBF  F00F         	call	___flmul	;wreg free
  5540  000E26  C015  F05B         	movff	?___flmul,___flsub@a
  5541  000E2A  C016  F05C         	movff	?___flmul+1,___flsub@a+1
  5542  000E2E  C017  F05D         	movff	?___flmul+2,___flsub@a+2
  5543  000E32  C018  F05E         	movff	?___flmul+3,___flsub@a+3
  5544  000E36  EC19  F022         	call	___flsub	;wreg free
  5545  000E3A  C057  F090         	movff	?___flsub,efgtoa@h
  5546  000E3E  C058  F091         	movff	?___flsub+1,efgtoa@h+1
  5547  000E42  C059  F092         	movff	?___flsub+2,efgtoa@h+2
  5548  000E46  C05A  F093         	movff	?___flsub+3,efgtoa@h+3
  5549  000E4A                     
  5550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5551  000E4A  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  5552  000E4E  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  5553  000E52  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  5554  000E56  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  5555  000E5A  0E00               	movlw	0
  5556  000E5C  6E32               	movwf	___fldiv@a^0,c
  5557  000E5E  0E00               	movlw	0
  5558  000E60  6E33               	movwf	(___fldiv@a+1)^0,c
  5559  000E62  0E20               	movlw	32
  5560  000E64  6E34               	movwf	(___fldiv@a+2)^0,c
  5561  000E66  0E41               	movlw	65
  5562  000E68  6E35               	movwf	(___fldiv@a+3)^0,c
  5563  000E6A  ECAA  F013         	call	___fldiv	;wreg free
  5564  000E6E  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  5565  000E72  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  5566  000E76  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  5567  000E7A  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  5568  000E7E                     
  5569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5570  000E7E  0100               	movlb	0	; () banked
  5571  000E80  4B98               	infsnz	efgtoa@i& (0+255),f,b
  5572  000E82  2B99               	incf	(efgtoa@i+1)& (0+255),f,b
  5573  000E84                     l4468:
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5577  000E84  5180               	movf	efgtoa@m& (0+255),w,b
  5578  000E86  5D98               	subwf	efgtoa@i& (0+255),w,b
  5579  000E88  5199               	movf	(efgtoa@i+1)& (0+255),w,b
  5580  000E8A  0A80               	xorlw	128
  5581  000E8C  6F69               	movwf	??_efgtoa& (0+255),b
  5582  000E8E  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  5583  000E90  0A80               	xorlw	128
  5584  000E92  5969               	subwfb	??_efgtoa& (0+255),w,b
  5585  000E94  A0D8               	btfss	status,0,c
  5586  000E96  EF4F  F007         	goto	u4961
  5587  000E9A  EF51  F007         	goto	u4960
  5588  000E9E                     u4961:
  5589  000E9E  EFC7  F006         	goto	l4460
  5590  000EA2                     u4960:
  5591  000EA2                     
  5592                           ; BSR set to: 0
  5593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5594  000EA2  C0A2  F015         	movff	efgtoa@u,___flmul@b
  5595  000EA6  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  5596  000EAA  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  5597  000EAE  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  5598  000EB2  0E00               	movlw	0
  5599  000EB4  6E19               	movwf	___flmul@a^0,c
  5600  000EB6  0E00               	movlw	0
  5601  000EB8  6E1A               	movwf	(___flmul@a+1)^0,c
  5602  000EBA  0EA0               	movlw	160
  5603  000EBC  6E1B               	movwf	(___flmul@a+2)^0,c
  5604  000EBE  0E40               	movlw	64
  5605  000EC0  6E1C               	movwf	(___flmul@a+3)^0,c
  5606  000EC2  ECBF  F00F         	call	___flmul	;wreg free
  5607  000EC6  C015  F094         	movff	?___flmul,efgtoa@l
  5608  000ECA  C016  F095         	movff	?___flmul+1,efgtoa@l+1
  5609  000ECE  C017  F096         	movff	?___flmul+2,efgtoa@l+2
  5610  000ED2  C018  F097         	movff	?___flmul+3,efgtoa@l+3
  5611  000ED6                     
  5612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5613  000ED6  C090  F02E         	movff	efgtoa@h,___flge@ff1
  5614  000EDA  C091  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  5615  000EDE  C092  F030         	movff	efgtoa@h+2,___flge@ff1+2
  5616  000EE2  C093  F031         	movff	efgtoa@h+3,___flge@ff1+3
  5617  000EE6  C094  F032         	movff	efgtoa@l,___flge@ff2
  5618  000EEA  C095  F033         	movff	efgtoa@l+1,___flge@ff2+1
  5619  000EEE  C096  F034         	movff	efgtoa@l+2,___flge@ff2+2
  5620  000EF2  C097  F035         	movff	efgtoa@l+3,___flge@ff2+3
  5621  000EF6  ECC0  F01B         	call	___flge	;wreg free
  5622  000EFA  B0D8               	btfsc	status,0,c
  5623  000EFC  EF82  F007         	goto	u4971
  5624  000F00  EF84  F007         	goto	u4970
  5625  000F04                     u4971:
  5626  000F04  EF8F  F007         	goto	l4476
  5627  000F08                     u4970:
  5628  000F08                     
  5629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5630  000F08  0E00               	movlw	0
  5631  000F0A  0100               	movlb	0	; () banked
  5632  000F0C  6F94               	movwf	efgtoa@l& (0+255),b
  5633  000F0E  0E00               	movlw	0
  5634  000F10  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  5635  000F12  0E00               	movlw	0
  5636  000F14  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  5637  000F16  0E00               	movlw	0
  5638  000F18  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  5639                           
  5640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5641  000F1A  EFB8  F007         	goto	l4482
  5642  000F1E                     l4476:
  5643                           
  5644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5645  000F1E  C090  F001         	movff	efgtoa@h,___fleq@ff1
  5646  000F22  C091  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5647  000F26  C092  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5648  000F2A  C093  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5649  000F2E  C094  F005         	movff	efgtoa@l,___fleq@ff2
  5650  000F32  C095  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5651  000F36  C096  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5652  000F3A  C097  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5653  000F3E  EC2D  F01F         	call	___fleq	;wreg free
  5654  000F42  A0D8               	btfss	status,0,c
  5655  000F44  EFA6  F007         	goto	u4981
  5656  000F48  EFA8  F007         	goto	u4980
  5657  000F4C                     u4981:
  5658  000F4C  EFB8  F007         	goto	l4482
  5659  000F50                     u4980:
  5660  000F50  0100               	movlb	0	; () banked
  5661  000F52  B186               	btfsc	efgtoa@d& (0+255),0,b
  5662  000F54  EFAE  F007         	goto	u4991
  5663  000F58  EFB0  F007         	goto	u4990
  5664  000F5C                     u4991:
  5665  000F5C  EFB8  F007         	goto	l4482
  5666  000F60                     u4990:
  5667  000F60                     
  5668                           ; BSR set to: 0
  5669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5670  000F60  0E00               	movlw	0
  5671  000F62  6F94               	movwf	efgtoa@l& (0+255),b
  5672  000F64  0E00               	movlw	0
  5673  000F66  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  5674  000F68  0E00               	movlw	0
  5675  000F6A  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  5676  000F6C  0E00               	movlw	0
  5677  000F6E  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  5678  000F70                     l4482:
  5679                           
  5680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5681  000F70  C09A  F047         	movff	efgtoa@g,___fladd@b
  5682  000F74  C09B  F048         	movff	efgtoa@g+1,___fladd@b+1
  5683  000F78  C09C  F049         	movff	efgtoa@g+2,___fladd@b+2
  5684  000F7C  C09D  F04A         	movff	efgtoa@g+3,___fladd@b+3
  5685  000F80  C094  F04B         	movff	efgtoa@l,___fladd@a
  5686  000F84  C095  F04C         	movff	efgtoa@l+1,___fladd@a+1
  5687  000F88  C096  F04D         	movff	efgtoa@l+2,___fladd@a+2
  5688  000F8C  C097  F04E         	movff	efgtoa@l+3,___fladd@a+3
  5689  000F90  EC5F  F00D         	call	___fladd	;wreg free
  5690  000F94  C047  F090         	movff	?___fladd,efgtoa@h
  5691  000F98  C048  F091         	movff	?___fladd+1,efgtoa@h+1
  5692  000F9C  C049  F092         	movff	?___fladd+2,efgtoa@h+2
  5693  000FA0  C04A  F093         	movff	?___fladd+3,efgtoa@h+3
  5694  000FA4                     
  5695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5696  000FA4  C090  F02E         	movff	efgtoa@h,___flge@ff1
  5697  000FA8  C091  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  5698  000FAC  C092  F030         	movff	efgtoa@h+2,___flge@ff1+2
  5699  000FB0  C093  F031         	movff	efgtoa@h+3,___flge@ff1+3
  5700  000FB4  0E00               	movlw	0
  5701  000FB6  6E19               	movwf	___flmul@a^0,c
  5702  000FB8  0E00               	movlw	0
  5703  000FBA  6E1A               	movwf	(___flmul@a+1)^0,c
  5704  000FBC  0E20               	movlw	32
  5705  000FBE  6E1B               	movwf	(___flmul@a+2)^0,c
  5706  000FC0  0E41               	movlw	65
  5707  000FC2  6E1C               	movwf	(___flmul@a+3)^0,c
  5708  000FC4  C082  F015         	movff	efgtoa@ou,___flmul@b
  5709  000FC8  C083  F016         	movff	efgtoa@ou+1,___flmul@b+1
  5710  000FCC  C084  F017         	movff	efgtoa@ou+2,___flmul@b+2
  5711  000FD0  C085  F018         	movff	efgtoa@ou+3,___flmul@b+3
  5712  000FD4  ECBF  F00F         	call	___flmul	;wreg free
  5713  000FD8  C015  F032         	movff	?___flmul,___flge@ff2
  5714  000FDC  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  5715  000FE0  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  5716  000FE4  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  5717  000FE8  ECC0  F01B         	call	___flge	;wreg free
  5718  000FEC  A0D8               	btfss	status,0,c
  5719  000FEE  EFFB  F007         	goto	u5001
  5720  000FF2  EFFD  F007         	goto	u5000
  5721  000FF6                     u5001:
  5722  000FF6  EF26  F008         	goto	l4494
  5723  000FFA                     u5000:
  5724  000FFA                     
  5725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5726  000FFA  0100               	movlb	0	; () banked
  5727  000FFC  4B9E               	infsnz	efgtoa@e& (0+255),f,b
  5728  000FFE  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  5729  001000                     
  5730                           ; BSR set to: 0
  5731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5732  001000  C082  F015         	movff	efgtoa@ou,___flmul@b
  5733  001004  C083  F016         	movff	efgtoa@ou+1,___flmul@b+1
  5734  001008  C084  F017         	movff	efgtoa@ou+2,___flmul@b+2
  5735  00100C  C085  F018         	movff	efgtoa@ou+3,___flmul@b+3
  5736  001010  0E00               	movlw	0
  5737  001012  6E19               	movwf	___flmul@a^0,c
  5738  001014  0E00               	movlw	0
  5739  001016  6E1A               	movwf	(___flmul@a+1)^0,c
  5740  001018  0E20               	movlw	32
  5741  00101A  6E1B               	movwf	(___flmul@a+2)^0,c
  5742  00101C  0E41               	movlw	65
  5743  00101E  6E1C               	movwf	(___flmul@a+3)^0,c
  5744  001020  ECBF  F00F         	call	___flmul	;wreg free
  5745  001024  C015  F082         	movff	?___flmul,efgtoa@ou
  5746  001028  C016  F083         	movff	?___flmul+1,efgtoa@ou+1
  5747  00102C  C017  F084         	movff	?___flmul+2,efgtoa@ou+2
  5748  001030  C018  F085         	movff	?___flmul+3,efgtoa@ou+3
  5749  001034                     
  5750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5751  001034  0E66               	movlw	102
  5752  001036  0100               	movlb	0	; () banked
  5753  001038  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5754  00103A  A4D8               	btfss	status,2,c
  5755  00103C  EF22  F008         	goto	u5011
  5756  001040  EF24  F008         	goto	u5010
  5757  001044                     u5011:
  5758  001044  EF26  F008         	goto	l4494
  5759  001048                     u5010:
  5760  001048                     
  5761                           ; BSR set to: 0
  5762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5763  001048  4B80               	infsnz	efgtoa@m& (0+255),f,b
  5764  00104A  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  5765  00104C                     l4494:
  5766                           
  5767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5768  00104C  C082  F0A2         	movff	efgtoa@ou,efgtoa@u
  5769  001050  C083  F0A3         	movff	efgtoa@ou+1,efgtoa@u+1
  5770  001054  C084  F0A4         	movff	efgtoa@ou+2,efgtoa@u+2
  5771  001058  C085  F0A5         	movff	efgtoa@ou+3,efgtoa@u+3
  5772  00105C                     
  5773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5774  00105C  0E65               	movlw	101
  5775  00105E  0100               	movlb	0	; () banked
  5776  001060  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  5777  001062  B4D8               	btfsc	status,2,c
  5778  001064  EF36  F008         	goto	u5021
  5779  001068  EF38  F008         	goto	u5020
  5780  00106C                     u5021:
  5781  00106C  EF3E  F008         	goto	l4500
  5782  001070                     u5020:
  5783  001070                     
  5784                           ; BSR set to: 0
  5785  001070  C09E  F07E         	movff	efgtoa@e,efgtoa@ne
  5786  001074  C09F  F07F         	movff	efgtoa@e+1,efgtoa@ne+1
  5787  001078  EF42  F008         	goto	l1198
  5788  00107C                     l4500:
  5789                           
  5790                           ; BSR set to: 0
  5791  00107C  0E00               	movlw	0
  5792  00107E  6F7F               	movwf	(efgtoa@ne+1)& (0+255),b
  5793  001080  0E00               	movlw	0
  5794  001082  6F7E               	movwf	efgtoa@ne& (0+255),b
  5795  001084                     l1198:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5799  001084  0E00               	movlw	0
  5800  001086  6F7D               	movwf	(efgtoa@pp+1)& (0+255),b
  5801  001088  0E00               	movlw	0
  5802  00108A  6F7C               	movwf	efgtoa@pp& (0+255),b
  5803                           
  5804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5805  00108C  0E00               	movlw	0
  5806  00108E  6F7B               	movwf	(efgtoa@t+1)& (0+255),b
  5807  001090  0E00               	movlw	0
  5808  001092  6F7A               	movwf	efgtoa@t& (0+255),b
  5809                           
  5810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5811  001094  0E00               	movlw	0
  5812  001096  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  5813  001098  0E00               	movlw	0
  5814  00109A  6F98               	movwf	efgtoa@i& (0+255),b
  5815                           
  5816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5817  00109C  EF3D  F009         	goto	l4550
  5818  0010A0                     l4502:
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5822  0010A0  C090  F02E         	movff	efgtoa@h,___fldiv@b
  5823  0010A4  C091  F02F         	movff	efgtoa@h+1,___fldiv@b+1
  5824  0010A8  C092  F030         	movff	efgtoa@h+2,___fldiv@b+2
  5825  0010AC  C093  F031         	movff	efgtoa@h+3,___fldiv@b+3
  5826  0010B0  C0A2  F032         	movff	efgtoa@u,___fldiv@a
  5827  0010B4  C0A3  F033         	movff	efgtoa@u+1,___fldiv@a+1
  5828  0010B8  C0A4  F034         	movff	efgtoa@u+2,___fldiv@a+2
  5829  0010BC  C0A5  F035         	movff	efgtoa@u+3,___fldiv@a+3
  5830  0010C0  ECAA  F013         	call	___fldiv	;wreg free
  5831  0010C4  C02E  F047         	movff	?___fldiv,floorf@x
  5832  0010C8  C02F  F048         	movff	?___fldiv+1,floorf@x+1
  5833  0010CC  C030  F049         	movff	?___fldiv+2,floorf@x+2
  5834  0010D0  C031  F04A         	movff	?___fldiv+3,floorf@x+3
  5835  0010D4  EC91  F018         	call	_floorf	;wreg free
  5836  0010D8  C047  F094         	movff	?_floorf,efgtoa@l
  5837  0010DC  C048  F095         	movff	?_floorf+1,efgtoa@l+1
  5838  0010E0  C049  F096         	movff	?_floorf+2,efgtoa@l+2
  5839  0010E4  C04A  F097         	movff	?_floorf+3,efgtoa@l+3
  5840                           
  5841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5842  0010E8  C094  F057         	movff	efgtoa@l,___fltol@f1
  5843  0010EC  C095  F058         	movff	efgtoa@l+1,___fltol@f1+1
  5844  0010F0  C096  F059         	movff	efgtoa@l+2,___fltol@f1+2
  5845  0010F4  C097  F05A         	movff	efgtoa@l+3,___fltol@f1+3
  5846  0010F8  EC3C  F01B         	call	___fltol	;wreg free
  5847  0010FC  C057  F086         	movff	?___fltol,efgtoa@d
  5848  001100  C058  F087         	movff	?___fltol+1,efgtoa@d+1
  5849  001104                     
  5850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5851  001104  0100               	movlb	0	; () banked
  5852  001106  B9FB               	btfsc	_flags& (0+255),4,b
  5853  001108  EF88  F008         	goto	u5031
  5854  00110C  EF8A  F008         	goto	u5030
  5855  001110                     u5031:
  5856  001110  EFA7  F008         	goto	l4514
  5857  001114                     u5030:
  5858  001114                     
  5859                           ; BSR set to: 0
  5860  001114  5186               	movf	efgtoa@d& (0+255),w,b
  5861  001116  1187               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5862  001118  A4D8               	btfss	status,2,c
  5863  00111A  EF91  F008         	goto	u5041
  5864  00111E  EF93  F008         	goto	u5040
  5865  001122                     u5041:
  5866  001122  EFA7  F008         	goto	l4514
  5867  001126                     u5040:
  5868  001126                     
  5869                           ; BSR set to: 0
  5870  001126  0E67               	movlw	103
  5871  001128  198F               	xorwf	efgtoa@mode& (0+255),w,b
  5872  00112A  A4D8               	btfss	status,2,c
  5873  00112C  EF9A  F008         	goto	u5051
  5874  001130  EF9C  F008         	goto	u5050
  5875  001134                     u5051:
  5876  001134  EFA7  F008         	goto	l4514
  5877  001138                     u5050:
  5878  001138                     
  5879                           ; BSR set to: 0
  5880  001138  BF7F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5881  00113A  EFA3  F008         	goto	u5060
  5882  00113E  EFA1  F008         	goto	u5061
  5883  001142                     u5061:
  5884  001142  EFA7  F008         	goto	l4514
  5885  001146                     u5060:
  5886  001146                     
  5887                           ; BSR set to: 0
  5888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5889  001146  4B7A               	infsnz	efgtoa@t& (0+255),f,b
  5890  001148  2B7B               	incf	(efgtoa@t+1)& (0+255),f,b
  5891                           
  5892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5893  00114A  EFF1  F008         	goto	l4542
  5894  00114E                     l4514:
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5898  00114E  517C               	movf	efgtoa@pp& (0+255),w,b
  5899  001150  117D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5900  001152  A4D8               	btfss	status,2,c
  5901  001154  EFAE  F008         	goto	u5071
  5902  001158  EFB0  F008         	goto	u5070
  5903  00115C                     u5071:
  5904  00115C  EFDA  F008         	goto	l4534
  5905  001160                     u5070:
  5906  001160                     
  5907                           ; BSR set to: 0
  5908  001160  BF7F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5909  001162  EFB7  F008         	goto	u5080
  5910  001166  EFB5  F008         	goto	u5081
  5911  00116A                     u5081:
  5912  00116A  EFDA  F008         	goto	l4534
  5913  00116E                     u5080:
  5914  00116E                     
  5915                           ; BSR set to: 0
  5916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5917  00116E  0E2A               	movlw	low _dbuf
  5918  001170  25A0               	addwf	efgtoa@n& (0+255),w,b
  5919  001172  6ED9               	movwf	fsr2l,c
  5920  001174  0E01               	movlw	high _dbuf
  5921  001176  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5922  001178  6EDA               	movwf	fsr2h,c
  5923  00117A  0E2E               	movlw	46
  5924  00117C  6EDF               	movwf	indf2,c
  5925  00117E                     
  5926                           ; BSR set to: 0
  5927  00117E  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  5928  001180  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  5929  001182                     
  5930                           ; BSR set to: 0
  5931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5932  001182  078C               	decf	efgtoa@w& (0+255),f,b
  5933  001184  A0D8               	btfss	status,0,c
  5934  001186  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  5935  001188                     
  5936                           ; BSR set to: 0
  5937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5938  001188  0E00               	movlw	0
  5939  00118A  6F7D               	movwf	(efgtoa@pp+1)& (0+255),b
  5940  00118C  0E01               	movlw	1
  5941  00118E  6F7C               	movwf	efgtoa@pp& (0+255),b
  5942  001190  EFDA  F008         	goto	l4534
  5943  001194                     l4526:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5947  001194  0E2A               	movlw	low _dbuf
  5948  001196  25A0               	addwf	efgtoa@n& (0+255),w,b
  5949  001198  6ED9               	movwf	fsr2l,c
  5950  00119A  0E01               	movlw	high _dbuf
  5951  00119C  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5952  00119E  6EDA               	movwf	fsr2h,c
  5953  0011A0  0E30               	movlw	48
  5954  0011A2  6EDF               	movwf	indf2,c
  5955  0011A4                     
  5956                           ; BSR set to: 0
  5957  0011A4  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  5958  0011A6  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  5959  0011A8                     
  5960                           ; BSR set to: 0
  5961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5962  0011A8  078C               	decf	efgtoa@w& (0+255),f,b
  5963  0011AA  A0D8               	btfss	status,0,c
  5964  0011AC  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  5965  0011AE                     
  5966                           ; BSR set to: 0
  5967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5968  0011AE  077A               	decf	efgtoa@t& (0+255),f,b
  5969  0011B0  A0D8               	btfss	status,0,c
  5970  0011B2  077B               	decf	(efgtoa@t+1)& (0+255),f,b
  5971  0011B4                     l4534:
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5975  0011B4  517A               	movf	efgtoa@t& (0+255),w,b
  5976  0011B6  117B               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5977  0011B8  A4D8               	btfss	status,2,c
  5978  0011BA  EFE1  F008         	goto	u5091
  5979  0011BE  EFE3  F008         	goto	u5090
  5980  0011C2                     u5091:
  5981  0011C2  EFCA  F008         	goto	l4526
  5982  0011C6                     u5090:
  5983  0011C6                     
  5984                           ; BSR set to: 0
  5985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5986  0011C6  0E2A               	movlw	low _dbuf
  5987  0011C8  25A0               	addwf	efgtoa@n& (0+255),w,b
  5988  0011CA  6ED9               	movwf	fsr2l,c
  5989  0011CC  0E01               	movlw	high _dbuf
  5990  0011CE  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5991  0011D0  6EDA               	movwf	fsr2h,c
  5992  0011D2  5186               	movf	efgtoa@d& (0+255),w,b
  5993  0011D4  0F30               	addlw	48
  5994  0011D6  6EDF               	movwf	indf2,c
  5995  0011D8                     
  5996                           ; BSR set to: 0
  5997  0011D8  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  5998  0011DA  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  5999  0011DC                     
  6000                           ; BSR set to: 0
  6001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  6002  0011DC  078C               	decf	efgtoa@w& (0+255),f,b
  6003  0011DE  A0D8               	btfss	status,0,c
  6004  0011E0  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6005  0011E2                     l4542:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  6009  0011E2  C090  F057         	movff	efgtoa@h,___flsub@b
  6010  0011E6  C091  F058         	movff	efgtoa@h+1,___flsub@b+1
  6011  0011EA  C092  F059         	movff	efgtoa@h+2,___flsub@b+2
  6012  0011EE  C093  F05A         	movff	efgtoa@h+3,___flsub@b+3
  6013  0011F2  C0A2  F019         	movff	efgtoa@u,___flmul@a
  6014  0011F6  C0A3  F01A         	movff	efgtoa@u+1,___flmul@a+1
  6015  0011FA  C0A4  F01B         	movff	efgtoa@u+2,___flmul@a+2
  6016  0011FE  C0A5  F01C         	movff	efgtoa@u+3,___flmul@a+3
  6017  001202  C094  F015         	movff	efgtoa@l,___flmul@b
  6018  001206  C095  F016         	movff	efgtoa@l+1,___flmul@b+1
  6019  00120A  C096  F017         	movff	efgtoa@l+2,___flmul@b+2
  6020  00120E  C097  F018         	movff	efgtoa@l+3,___flmul@b+3
  6021  001212  ECBF  F00F         	call	___flmul	;wreg free
  6022  001216  C015  F05B         	movff	?___flmul,___flsub@a
  6023  00121A  C016  F05C         	movff	?___flmul+1,___flsub@a+1
  6024  00121E  C017  F05D         	movff	?___flmul+2,___flsub@a+2
  6025  001222  C018  F05E         	movff	?___flmul+3,___flsub@a+3
  6026  001226  EC19  F022         	call	___flsub	;wreg free
  6027  00122A  C057  F090         	movff	?___flsub,efgtoa@h
  6028  00122E  C058  F091         	movff	?___flsub+1,efgtoa@h+1
  6029  001232  C059  F092         	movff	?___flsub+2,efgtoa@h+2
  6030  001236  C05A  F093         	movff	?___flsub+3,efgtoa@h+3
  6031  00123A                     
  6032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  6033  00123A  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  6034  00123E  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  6035  001242  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  6036  001246  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  6037  00124A  0E00               	movlw	0
  6038  00124C  6E32               	movwf	___fldiv@a^0,c
  6039  00124E  0E00               	movlw	0
  6040  001250  6E33               	movwf	(___fldiv@a+1)^0,c
  6041  001252  0E20               	movlw	32
  6042  001254  6E34               	movwf	(___fldiv@a+2)^0,c
  6043  001256  0E41               	movlw	65
  6044  001258  6E35               	movwf	(___fldiv@a+3)^0,c
  6045  00125A  ECAA  F013         	call	___fldiv	;wreg free
  6046  00125E  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  6047  001262  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  6048  001266  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  6049  00126A  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  6050  00126E                     
  6051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  6052  00126E  0100               	movlb	0	; () banked
  6053  001270  077E               	decf	efgtoa@ne& (0+255),f,b
  6054  001272  A0D8               	btfss	status,0,c
  6055  001274  077F               	decf	(efgtoa@ne+1)& (0+255),f,b
  6056  001276                     
  6057                           ; BSR set to: 0
  6058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  6059  001276  4B98               	infsnz	efgtoa@i& (0+255),f,b
  6060  001278  2B99               	incf	(efgtoa@i+1)& (0+255),f,b
  6061  00127A                     l4550:
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6065  00127A  5180               	movf	efgtoa@m& (0+255),w,b
  6066  00127C  5D98               	subwf	efgtoa@i& (0+255),w,b
  6067  00127E  5199               	movf	(efgtoa@i+1)& (0+255),w,b
  6068  001280  0A80               	xorlw	128
  6069  001282  6F69               	movwf	??_efgtoa& (0+255),b
  6070  001284  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  6071  001286  0A80               	xorlw	128
  6072  001288  5969               	subwfb	??_efgtoa& (0+255),w,b
  6073  00128A  B0D8               	btfsc	status,0,c
  6074  00128C  EF4A  F009         	goto	u5101
  6075  001290  EF4C  F009         	goto	u5100
  6076  001294                     u5101:
  6077  001294  EF5A  F009         	goto	l4554
  6078  001298                     u5100:
  6079  001298                     
  6080                           ; BSR set to: 0
  6081  001298  BFA1               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6082  00129A  EF58  F009         	goto	u5111
  6083  00129E  51A1               	movf	(efgtoa@n+1)& (0+255),w,b
  6084  0012A0  E109               	bnz	u5110
  6085  0012A2  0E4B               	movlw	75
  6086  0012A4  5DA0               	subwf	efgtoa@n& (0+255),w,b
  6087  0012A6  A0D8               	btfss	status,0,c
  6088  0012A8  EF58  F009         	goto	u5111
  6089  0012AC  EF5A  F009         	goto	u5110
  6090  0012B0                     u5111:
  6091  0012B0  EF50  F008         	goto	l4502
  6092  0012B4                     u5110:
  6093  0012B4                     l4554:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6097  0012B4  517C               	movf	efgtoa@pp& (0+255),w,b
  6098  0012B6  117D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6099  0012B8  A4D8               	btfss	status,2,c
  6100  0012BA  EF61  F009         	goto	u5121
  6101  0012BE  EF63  F009         	goto	u5120
  6102  0012C2                     u5121:
  6103  0012C2  EF74  F009         	goto	l4562
  6104  0012C6                     u5120:
  6105  0012C6                     
  6106                           ; BSR set to: 0
  6107  0012C6  A9FB               	btfss	_flags& (0+255),4,b
  6108  0012C8  EF68  F009         	goto	u5131
  6109  0012CC  EF6A  F009         	goto	u5130
  6110  0012D0                     u5131:
  6111  0012D0  EF74  F009         	goto	l4562
  6112  0012D4                     u5130:
  6113  0012D4                     
  6114                           ; BSR set to: 0
  6115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6116  0012D4  0E2A               	movlw	low _dbuf
  6117  0012D6  25A0               	addwf	efgtoa@n& (0+255),w,b
  6118  0012D8  6ED9               	movwf	fsr2l,c
  6119  0012DA  0E01               	movlw	high _dbuf
  6120  0012DC  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6121  0012DE  6EDA               	movwf	fsr2h,c
  6122  0012E0  0E2E               	movlw	46
  6123  0012E2  6EDF               	movwf	indf2,c
  6124  0012E4                     
  6125                           ; BSR set to: 0
  6126  0012E4  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  6127  0012E6  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  6128  0012E8                     l4562:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6132  0012E8  0E2A               	movlw	low _dbuf
  6133  0012EA  25A0               	addwf	efgtoa@n& (0+255),w,b
  6134  0012EC  6ED9               	movwf	fsr2l,c
  6135  0012EE  0E01               	movlw	high _dbuf
  6136  0012F0  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6137  0012F2  6EDA               	movwf	fsr2h,c
  6138  0012F4  0E00               	movlw	0
  6139  0012F6  6EDF               	movwf	indf2,c
  6140  0012F8                     
  6141                           ; BSR set to: 0
  6142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6143  0012F8  0E65               	movlw	101
  6144  0012FA  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  6145  0012FC  A4D8               	btfss	status,2,c
  6146  0012FE  EF83  F009         	goto	u5141
  6147  001302  EF85  F009         	goto	u5140
  6148  001306                     u5141:
  6149  001306  EFDF  F004         	goto	l4364
  6150  00130A                     u5140:
  6151  00130A                     
  6152                           ; BSR set to: 0
  6153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6154  00130A  0E00               	movlw	0
  6155  00130C  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  6156  00130E  0E4F               	movlw	79
  6157  001310  6F98               	movwf	efgtoa@i& (0+255),b
  6158  001312                     
  6159                           ; BSR set to: 0
  6160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6161  001312  0E2A               	movlw	low _dbuf
  6162  001314  2598               	addwf	efgtoa@i& (0+255),w,b
  6163  001316  6ED9               	movwf	fsr2l,c
  6164  001318  0E01               	movlw	high _dbuf
  6165  00131A  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6166  00131C  6EDA               	movwf	fsr2h,c
  6167  00131E  0E00               	movlw	0
  6168  001320  6EDF               	movwf	indf2,c
  6169  001322                     
  6170                           ; BSR set to: 0
  6171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6172  001322  0E00               	movlw	0
  6173  001324  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  6174  001326  0E00               	movlw	0
  6175  001328  6F88               	movwf	efgtoa@sign& (0+255),b
  6176  00132A                     
  6177                           ; BSR set to: 0
  6178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6179  00132A  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6180  00132C  EF9C  F009         	goto	u5150
  6181  001330  EF9A  F009         	goto	u5151
  6182  001334                     u5151:
  6183  001334  EFA4  F009         	goto	l4578
  6184  001338                     u5150:
  6185  001338                     
  6186                           ; BSR set to: 0
  6187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6188  001338  0E00               	movlw	0
  6189  00133A  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  6190  00133C  0E01               	movlw	1
  6191  00133E  6F88               	movwf	efgtoa@sign& (0+255),b
  6192  001340                     
  6193                           ; BSR set to: 0
  6194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6195  001340  6D9E               	negf	efgtoa@e& (0+255),b
  6196  001342  1F9F               	comf	(efgtoa@e+1)& (0+255),f,b
  6197  001344  B0D8               	btfsc	status,0,c
  6198  001346  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  6199  001348                     l4578:
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6203  001348  0E00               	movlw	0
  6204  00134A  6F8B               	movwf	(efgtoa@p+1)& (0+255),b
  6205  00134C  0E02               	movlw	2
  6206  00134E  6F8A               	movwf	efgtoa@p& (0+255),b
  6207                           
  6208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6209  001350  EFD5  F009         	goto	l4590
  6210  001354                     l4580:
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6214  001354  0798               	decf	efgtoa@i& (0+255),f,b
  6215  001356  A0D8               	btfss	status,0,c
  6216  001358  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  6217  00135A                     
  6218                           ; BSR set to: 0
  6219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6220  00135A  0E2A               	movlw	low _dbuf
  6221  00135C  2598               	addwf	efgtoa@i& (0+255),w,b
  6222  00135E  6ED9               	movwf	fsr2l,c
  6223  001360  0E01               	movlw	high _dbuf
  6224  001362  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6225  001364  6EDA               	movwf	fsr2h,c
  6226  001366  C09E  F001         	movff	efgtoa@e,___awmod@dividend
  6227  00136A  C09F  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6228  00136E  0E00               	movlw	0
  6229  001370  6E04               	movwf	(___awmod@divisor+1)^0,c
  6230  001372  0E0A               	movlw	10
  6231  001374  6E03               	movwf	___awmod@divisor^0,c
  6232  001376  ECD5  F01E         	call	___awmod	;wreg free
  6233  00137A  5001               	movf	?___awmod^0,w,c
  6234  00137C  0F30               	addlw	48
  6235  00137E  6EDF               	movwf	indf2,c
  6236  001380                     
  6237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6238  001380  C09E  F001         	movff	efgtoa@e,___awdiv@dividend
  6239  001384  C09F  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  6240  001388  0E00               	movlw	0
  6241  00138A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6242  00138C  0E0A               	movlw	10
  6243  00138E  6E03               	movwf	___awdiv@divisor^0,c
  6244  001390  EC73  F01E         	call	___awdiv	;wreg free
  6245  001394  C001  F09E         	movff	?___awdiv,efgtoa@e
  6246  001398  C002  F09F         	movff	?___awdiv+1,efgtoa@e+1
  6247  00139C                     
  6248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6249  00139C  0100               	movlb	0	; () banked
  6250  00139E  078A               	decf	efgtoa@p& (0+255),f,b
  6251  0013A0  A0D8               	btfss	status,0,c
  6252  0013A2  078B               	decf	(efgtoa@p+1)& (0+255),f,b
  6253  0013A4                     
  6254                           ; BSR set to: 0
  6255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6256  0013A4  078C               	decf	efgtoa@w& (0+255),f,b
  6257  0013A6  A0D8               	btfss	status,0,c
  6258  0013A8  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6259  0013AA                     l4590:
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6263  0013AA  519E               	movf	efgtoa@e& (0+255),w,b
  6264  0013AC  119F               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6265  0013AE  A4D8               	btfss	status,2,c
  6266  0013B0  EFDC  F009         	goto	u5161
  6267  0013B4  EFDE  F009         	goto	u5160
  6268  0013B8                     u5161:
  6269  0013B8  EFAA  F009         	goto	l4580
  6270  0013BC                     u5160:
  6271  0013BC                     
  6272                           ; BSR set to: 0
  6273  0013BC  BF8B               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6274  0013BE  EFEB  F009         	goto	u5170
  6275  0013C2  518B               	movf	(efgtoa@p+1)& (0+255),w,b
  6276  0013C4  E106               	bnz	u5171
  6277  0013C6  058A               	decf	efgtoa@p& (0+255),w,b
  6278  0013C8  B0D8               	btfsc	status,0,c
  6279  0013CA  EFE9  F009         	goto	u5171
  6280  0013CE  EFEB  F009         	goto	u5170
  6281  0013D2                     u5171:
  6282  0013D2  EFAA  F009         	goto	l4580
  6283  0013D6                     u5170:
  6284  0013D6                     
  6285                           ; BSR set to: 0
  6286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6287  0013D6  0798               	decf	efgtoa@i& (0+255),f,b
  6288  0013D8  A0D8               	btfss	status,0,c
  6289  0013DA  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  6290  0013DC                     
  6291                           ; BSR set to: 0
  6292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6293  0013DC  5188               	movf	efgtoa@sign& (0+255),w,b
  6294  0013DE  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6295  0013E0  A4D8               	btfss	status,2,c
  6296  0013E2  EFF5  F009         	goto	u5181
  6297  0013E6  EFF7  F009         	goto	u5180
  6298  0013EA                     u5181:
  6299  0013EA  EFFD  F009         	goto	l4600
  6300  0013EE                     u5180:
  6301  0013EE                     
  6302                           ; BSR set to: 0
  6303  0013EE  0E00               	movlw	0
  6304  0013F0  6F75               	movwf	(_efgtoa$1681+1)& (0+255),b
  6305  0013F2  0E2B               	movlw	43
  6306  0013F4  6F74               	movwf	_efgtoa$1681& (0+255),b
  6307  0013F6  EF01  F00A         	goto	l4602
  6308  0013FA                     l4600:
  6309                           
  6310                           ; BSR set to: 0
  6311  0013FA  0E00               	movlw	0
  6312  0013FC  6F75               	movwf	(_efgtoa$1681+1)& (0+255),b
  6313  0013FE  0E2D               	movlw	45
  6314  001400  6F74               	movwf	_efgtoa$1681& (0+255),b
  6315  001402                     l4602:
  6316                           
  6317                           ; BSR set to: 0
  6318  001402  0E2A               	movlw	low _dbuf
  6319  001404  2598               	addwf	efgtoa@i& (0+255),w,b
  6320  001406  6ED9               	movwf	fsr2l,c
  6321  001408  0E01               	movlw	high _dbuf
  6322  00140A  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6323  00140C  6EDA               	movwf	fsr2h,c
  6324  00140E  C074  FFDF         	movff	_efgtoa$1681,indf2
  6325  001412                     
  6326                           ; BSR set to: 0
  6327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6328  001412  078C               	decf	efgtoa@w& (0+255),f,b
  6329  001414  A0D8               	btfss	status,0,c
  6330  001416  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6331  001418                     
  6332                           ; BSR set to: 0
  6333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6334  001418  0798               	decf	efgtoa@i& (0+255),f,b
  6335  00141A  A0D8               	btfss	status,0,c
  6336  00141C  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  6337  00141E                     
  6338                           ; BSR set to: 0
  6339  00141E  0EBF               	movlw	191
  6340  001420  6F69               	movwf	??_efgtoa& (0+255),b
  6341  001422  0EFF               	movlw	255
  6342  001424  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  6343  001426  5168               	movf	efgtoa@c& (0+255),w,b
  6344  001428  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  6345  00142A  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  6346  00142C  5169               	movf	??_efgtoa& (0+255),w,b
  6347  00142E  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  6348  001430  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  6349  001432  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6350  001434  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  6351  001436  E10A               	bnz	u5190
  6352  001438  0E1A               	movlw	26
  6353  00143A  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  6354  00143C  A0D8               	btfss	status,0,c
  6355  00143E  EF23  F00A         	goto	u5191
  6356  001442  EF26  F00A         	goto	u5190
  6357  001446                     u5191:
  6358  001446  0E01               	movlw	1
  6359  001448  EF27  F00A         	goto	u5200
  6360  00144C                     u5190:
  6361  00144C  0E00               	movlw	0
  6362  00144E                     u5200:
  6363  00144E  6F78               	movwf	_efgtoa$1683& (0+255),b
  6364  001450  6B79               	clrf	(_efgtoa$1683+1)& (0+255),b
  6365  001452                     
  6366                           ; BSR set to: 0
  6367  001452  5178               	movf	_efgtoa$1683& (0+255),w,b
  6368  001454  1179               	iorwf	(_efgtoa$1683+1)& (0+255),w,b
  6369  001456  A4D8               	btfss	status,2,c
  6370  001458  EF30  F00A         	goto	u5211
  6371  00145C  EF32  F00A         	goto	u5210
  6372  001460                     u5211:
  6373  001460  EF38  F00A         	goto	l4616
  6374  001464                     u5210:
  6375  001464                     
  6376                           ; BSR set to: 0
  6377  001464  0E00               	movlw	0
  6378  001466  6F77               	movwf	(_efgtoa$1682+1)& (0+255),b
  6379  001468  0E65               	movlw	101
  6380  00146A  6F76               	movwf	_efgtoa$1682& (0+255),b
  6381  00146C  EF3C  F00A         	goto	l4618
  6382  001470                     l4616:
  6383                           
  6384                           ; BSR set to: 0
  6385  001470  0E00               	movlw	0
  6386  001472  6F77               	movwf	(_efgtoa$1682+1)& (0+255),b
  6387  001474  0E45               	movlw	69
  6388  001476  6F76               	movwf	_efgtoa$1682& (0+255),b
  6389  001478                     l4618:
  6390                           
  6391                           ; BSR set to: 0
  6392  001478  0E2A               	movlw	low _dbuf
  6393  00147A  2598               	addwf	efgtoa@i& (0+255),w,b
  6394  00147C  6ED9               	movwf	fsr2l,c
  6395  00147E  0E01               	movlw	high _dbuf
  6396  001480  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6397  001482  6EDA               	movwf	fsr2h,c
  6398  001484  C076  FFDF         	movff	_efgtoa$1682,indf2
  6399  001488                     
  6400                           ; BSR set to: 0
  6401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6402  001488  078C               	decf	efgtoa@w& (0+255),f,b
  6403  00148A  A0D8               	btfss	status,0,c
  6404  00148C  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  6405  00148E                     
  6406                           ; BSR set to: 0
  6407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6408  00148E  0E2A               	movlw	low _dbuf
  6409  001490  25A0               	addwf	efgtoa@n& (0+255),w,b
  6410  001492  6E01               	movwf	strcpy@dest^0,c
  6411  001494  0E01               	movlw	high _dbuf
  6412  001496  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6413  001498  6E02               	movwf	(strcpy@dest+1)^0,c
  6414  00149A  0E2A               	movlw	low _dbuf
  6415  00149C  2598               	addwf	efgtoa@i& (0+255),w,b
  6416  00149E  6E03               	movwf	strcpy@src^0,c
  6417  0014A0  0E01               	movlw	high _dbuf
  6418  0014A2  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6419  0014A4  6E04               	movwf	(strcpy@src+1)^0,c
  6420  0014A6  ECB4  F020         	call	_strcpy	;wreg free
  6421  0014AA  EFDF  F004         	goto	l4364
  6422  0014AE                     l1152:
  6423  0014AE  0012               	return		;funcret
  6424  0014B0                     __end_of_efgtoa:
  6425                           	callstack 0
  6426                           
  6427 ;; *************** function _tolower *****************
  6428 ;; Defined at:
  6429 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  c               2    6[COMRAM] int 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  2    6[COMRAM] int 
  6436 ;; Registers used:
  6437 ;;		wreg, status,2, status,0
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6443 ;;      Params:         2       0       0       0       0       0       0       0       0
  6444 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6445 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6446 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6447 ;;Total ram usage:        8 bytes
  6448 ;; Hardware stack levels used: 1
  6449 ;; Hardware stack levels required when called: 2
  6450 ;; This function calls:
  6451 ;;		_isupper
  6452 ;; This function is called by:
  6453 ;;		_efgtoa
  6454 ;;		_vfpfcnvrt
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text14
  6459  00404C                     __ptext14:
  6460                           	callstack 0
  6461  00404C                     _tolower:
  6462                           	callstack 25
  6463  00404C  0EBF               	movlw	191
  6464  00404E  6E09               	movwf	??_tolower^0,c
  6465  004050  0EFF               	movlw	255
  6466  004052  6E0A               	movwf	(??_tolower+1)^0,c
  6467  004054  C007  F00B         	movff	tolower@c,??_tolower+2
  6468  004058  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6469  00405C  5009               	movf	??_tolower^0,w,c
  6470  00405E  260B               	addwf	(??_tolower+2)^0,f,c
  6471  004060  500A               	movf	(??_tolower+1)^0,w,c
  6472  004062  220C               	addwfc	(??_tolower+3)^0,f,c
  6473  004064  500C               	movf	(??_tolower+3)^0,w,c
  6474  004066  E10A               	bnz	u4430
  6475  004068  0E1A               	movlw	26
  6476  00406A  5C0B               	subwf	(??_tolower+2)^0,w,c
  6477  00406C  A0D8               	btfss	status,0,c
  6478  00406E  EF3B  F020         	goto	u4431
  6479  004072  EF3E  F020         	goto	u4430
  6480  004076                     u4431:
  6481  004076  0E01               	movlw	1
  6482  004078  EF3F  F020         	goto	u4440
  6483  00407C                     u4430:
  6484  00407C  0E00               	movlw	0
  6485  00407E                     u4440:
  6486  00407E  6E0D               	movwf	_tolower$1851^0,c
  6487  004080  6A0E               	clrf	(_tolower$1851+1)^0,c
  6488  004082  500D               	movf	_tolower$1851^0,w,c
  6489  004084  100E               	iorwf	(_tolower$1851+1)^0,w,c
  6490  004086  B4D8               	btfsc	status,2,c
  6491  004088  EF48  F020         	goto	u4451
  6492  00408C  EF4A  F020         	goto	u4450
  6493  004090                     u4451:
  6494  004090  EF51  F020         	goto	l1433
  6495  004094                     u4450:
  6496  004094  0E20               	movlw	32
  6497  004096  1007               	iorwf	tolower@c^0,w,c
  6498  004098  6E07               	movwf	?_tolower^0,c
  6499  00409A  5008               	movf	(tolower@c+1)^0,w,c
  6500  00409C  6E08               	movwf	(?_tolower+1)^0,c
  6501  00409E  EF55  F020         	goto	l1438
  6502  0040A2                     l1433:
  6503  0040A2  C007  F007         	movff	tolower@c,?_tolower
  6504  0040A6  C008  F008         	movff	tolower@c+1,?_tolower+1
  6505  0040AA                     l1438:
  6506  0040AA  0012               	return		;funcret
  6507  0040AC                     __end_of_tolower:
  6508                           	callstack 0
  6509                           
  6510 ;; *************** function _isupper *****************
  6511 ;; Defined at:
  6512 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  c               2    0[COMRAM] int 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  2    0[COMRAM] int 
  6519 ;; Registers used:
  6520 ;;		wreg, status,2, status,0
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6526 ;;      Params:         2       0       0       0       0       0       0       0       0
  6527 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6528 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6529 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6530 ;;Total ram usage:        6 bytes
  6531 ;; Hardware stack levels used: 1
  6532 ;; Hardware stack levels required when called: 1
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_efgtoa
  6537 ;;		_xtoa
  6538 ;;		_vfpfcnvrt
  6539 ;;		_tolower
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text15
  6544  0045F0                     __ptext15:
  6545                           	callstack 0
  6546  0045F0                     _isupper:
  6547                           	callstack 25
  6548  0045F0  0EBF               	movlw	191
  6549  0045F2  6E03               	movwf	??_isupper^0,c
  6550  0045F4  0EFF               	movlw	255
  6551  0045F6  6E04               	movwf	(??_isupper+1)^0,c
  6552  0045F8  C001  F005         	movff	isupper@c,??_isupper+2
  6553  0045FC  C002  F006         	movff	isupper@c+1,??_isupper+3
  6554  004600  5003               	movf	??_isupper^0,w,c
  6555  004602  2605               	addwf	(??_isupper+2)^0,f,c
  6556  004604  5004               	movf	(??_isupper+1)^0,w,c
  6557  004606  2206               	addwfc	(??_isupper+3)^0,f,c
  6558  004608  5006               	movf	(??_isupper+3)^0,w,c
  6559  00460A  E10A               	bnz	u3560
  6560  00460C  0E1A               	movlw	26
  6561  00460E  5C05               	subwf	(??_isupper+2)^0,w,c
  6562  004610  A0D8               	btfss	status,0,c
  6563  004612  EF0D  F023         	goto	u3561
  6564  004616  EF10  F023         	goto	u3560
  6565  00461A                     u3561:
  6566  00461A  0E01               	movlw	1
  6567  00461C  EF11  F023         	goto	u3570
  6568  004620                     u3560:
  6569  004620  0E00               	movlw	0
  6570  004622                     u3570:
  6571  004622  6E01               	movwf	?_isupper^0,c
  6572  004624  6A02               	clrf	(?_isupper+1)^0,c
  6573  004626  0012               	return		;funcret
  6574  004628                     __end_of_isupper:
  6575                           	callstack 0
  6576                           
  6577 ;; *************** function _strcpy *****************
  6578 ;; Defined at:
  6579 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6582 ;;		 -> dbuf(80), 
  6583 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6584 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  6585 ;;		 -> dbuf(80), 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  d               2    8[COMRAM] PTR unsigned char 
  6588 ;;		 -> dbuf(80), 
  6589 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6590 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  6591 ;;		 -> dbuf(80), 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  2    0[COMRAM] PTR unsigned char 
  6594 ;; Registers used:
  6595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6601 ;;      Params:         4       0       0       0       0       0       0       0       0
  6602 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6603 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6604 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6605 ;;Total ram usage:       10 bytes
  6606 ;; Hardware stack levels used: 1
  6607 ;; Hardware stack levels required when called: 1
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_efgtoa
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text16
  6616  004168                     __ptext16:
  6617                           	callstack 0
  6618  004168                     _strcpy:
  6619                           	callstack 25
  6620  004168  C003  F007         	movff	strcpy@src,strcpy@s
  6621  00416C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6622  004170  C001  F009         	movff	strcpy@dest,strcpy@d
  6623  004174  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6624  004178                     l4232:
  6625  004178  5007               	movf	strcpy@s^0,w,c
  6626  00417A  6E05               	movwf	??_strcpy^0,c
  6627  00417C  5008               	movf	(strcpy@s+1)^0,w,c
  6628  00417E  6E06               	movwf	(??_strcpy+1)^0,c
  6629  004180  4A07               	infsnz	strcpy@s^0,f,c
  6630  004182  2A08               	incf	(strcpy@s+1)^0,f,c
  6631  004184  C005  FFF6         	movff	??_strcpy,tblptrl
  6632  004188  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6633  00418C  6AF8               	clrf	tblptru,c
  6634  00418E  C009  FFD9         	movff	strcpy@d,fsr2l
  6635  004192  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6636  004196  4A09               	infsnz	strcpy@d^0,f,c
  6637  004198  2A0A               	incf	(strcpy@d+1)^0,f,c
  6638  00419A  0E07               	movlw	(high __ramtop+-1)
  6639  00419C  64F7               	cpfsgt	tblptrh,c
  6640  00419E  D003               	bra	u4417
  6641  0041A0  0008               	tblrd		*
  6642  0041A2  50F5               	movf	tablat,w,c
  6643  0041A4  D005               	bra	u4410
  6644  0041A6                     u4417:
  6645  0041A6  CFF6 FFE1          	movff	tblptrl,fsr1l
  6646  0041AA  CFF7 FFE2          	movff	tblptrh,fsr1h
  6647  0041AE  50E7               	movf	indf1,w,c
  6648  0041B0                     u4410:
  6649  0041B0  6EDF               	movwf	indf2,c
  6650  0041B2  50DF               	movf	indf2,w,c
  6651  0041B4  A4D8               	btfss	status,2,c
  6652  0041B6  EFDF  F020         	goto	u4421
  6653  0041BA  EFE1  F020         	goto	u4420
  6654  0041BE                     u4421:
  6655  0041BE  EFBC  F020         	goto	l4232
  6656  0041C2                     u4420:
  6657  0041C2  0012               	return		;funcret
  6658  0041C4                     __end_of_strcpy:
  6659                           	callstack 0
  6660                           
  6661 ;; *************** function _pad *****************
  6662 ;; Defined at:
  6663 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6666 ;;		 -> sprintf@f(6), 
  6667 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6668 ;;		 -> dbuf(80), 
  6669 ;;  p               2   20[COMRAM] int 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  w               2   25[COMRAM] int 
  6672 ;;  i               2   23[COMRAM] int 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  2   16[COMRAM] int 
  6675 ;; Registers used:
  6676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6682 ;;      Params:         6       0       0       0       0       0       0       0       0
  6683 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6684 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6685 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6686 ;;Total ram usage:       11 bytes
  6687 ;; Hardware stack levels used: 1
  6688 ;; Hardware stack levels required when called: 4
  6689 ;; This function calls:
  6690 ;;		_fputc
  6691 ;;		_fputs
  6692 ;;		_strlen
  6693 ;; This function is called by:
  6694 ;;		_efgtoa
  6695 ;;		_xtoa
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text17
  6700  003C20                     __ptext17:
  6701                           	callstack 0
  6702  003C20                     _pad:
  6703                           	callstack 22
  6704  003C20                     
  6705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6706  003C20  0100               	movlb	0	; () banked
  6707  003C22  A1FB               	btfss	_flags& (0+255),0,b
  6708  003C24  EF16  F01E         	goto	u4301
  6709  003C28  EF18  F01E         	goto	u4300
  6710  003C2C                     u4301:
  6711  003C2C  EF22  F01E         	goto	l4190
  6712  003C30                     u4300:
  6713  003C30                     
  6714                           ; BSR set to: 0
  6715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6716  003C30  C013  F00A         	movff	pad@buf,fputs@s
  6717  003C34  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6718  003C38  C011  F00C         	movff	pad@fp,fputs@fp
  6719  003C3C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6720  003C40  EC5F  F022         	call	_fputs	;wreg free
  6721  003C44                     l4190:
  6722                           
  6723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6724  003C44  BE16               	btfsc	(pad@p+1)^0,7,c
  6725  003C46  EF27  F01E         	goto	u4311
  6726  003C4A  EF29  F01E         	goto	u4310
  6727  003C4E                     u4311:
  6728  003C4E  EF2F  F01E         	goto	l4194
  6729  003C52                     u4310:
  6730  003C52  C015  F01A         	movff	pad@p,pad@w
  6731  003C56  C016  F01B         	movff	pad@p+1,pad@w+1
  6732  003C5A  EF33  F01E         	goto	l1129
  6733  003C5E                     l4194:
  6734  003C5E  0E00               	movlw	0
  6735  003C60  6E1B               	movwf	(pad@w+1)^0,c
  6736  003C62  0E00               	movlw	0
  6737  003C64  6E1A               	movwf	pad@w^0,c
  6738  003C66                     l1129:
  6739                           
  6740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6741  003C66  0E00               	movlw	0
  6742  003C68  6E19               	movwf	(pad@i+1)^0,c
  6743  003C6A  0E00               	movlw	0
  6744  003C6C  6E18               	movwf	pad@i^0,c
  6745                           
  6746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6747  003C6E  EF45  F01E         	goto	l4200
  6748  003C72                     l4196:
  6749                           
  6750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6751  003C72  0E00               	movlw	0
  6752  003C74  6E02               	movwf	(fputc@c+1)^0,c
  6753  003C76  0E20               	movlw	32
  6754  003C78  6E01               	movwf	fputc@c^0,c
  6755  003C7A  C011  F003         	movff	pad@fp,fputc@fp
  6756  003C7E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6757  003C82  ECAB  F01D         	call	_fputc	;wreg free
  6758  003C86                     
  6759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6760  003C86  4A18               	infsnz	pad@i^0,f,c
  6761  003C88  2A19               	incf	(pad@i+1)^0,f,c
  6762  003C8A                     l4200:
  6763                           
  6764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6765  003C8A  501A               	movf	pad@w^0,w,c
  6766  003C8C  5C18               	subwf	pad@i^0,w,c
  6767  003C8E  5019               	movf	(pad@i+1)^0,w,c
  6768  003C90  0A80               	xorlw	128
  6769  003C92  6E17               	movwf	??_pad^0,c
  6770  003C94  501B               	movf	(pad@w+1)^0,w,c
  6771  003C96  0A80               	xorlw	128
  6772  003C98  5817               	subwfb	??_pad^0,w,c
  6773  003C9A  A0D8               	btfss	status,0,c
  6774  003C9C  EF52  F01E         	goto	u4321
  6775  003CA0  EF54  F01E         	goto	u4320
  6776  003CA4                     u4321:
  6777  003CA4  EF39  F01E         	goto	l4196
  6778  003CA8                     u4320:
  6779  003CA8                     
  6780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6781  003CA8  0100               	movlb	0	; () banked
  6782  003CAA  B1FB               	btfsc	_flags& (0+255),0,b
  6783  003CAC  EF5A  F01E         	goto	u4331
  6784  003CB0  EF5C  F01E         	goto	u4330
  6785  003CB4                     u4331:
  6786  003CB4  EF66  F01E         	goto	l4204
  6787  003CB8                     u4330:
  6788  003CB8                     
  6789                           ; BSR set to: 0
  6790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6791  003CB8  C013  F00A         	movff	pad@buf,fputs@s
  6792  003CBC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6793  003CC0  C011  F00C         	movff	pad@fp,fputs@fp
  6794  003CC4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6795  003CC8  EC5F  F022         	call	_fputs	;wreg free
  6796  003CCC                     l4204:
  6797                           
  6798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6799  003CCC  C013  F001         	movff	pad@buf,strlen@s
  6800  003CD0  C014  F002         	movff	pad@buf+1,strlen@s+1
  6801  003CD4  EC4C  F023         	call	_strlen	;wreg free
  6802  003CD8  501A               	movf	pad@w^0,w,c
  6803  003CDA  2401               	addwf	?_strlen^0,w,c
  6804  003CDC  6E11               	movwf	?_pad^0,c
  6805  003CDE  501B               	movf	(pad@w+1)^0,w,c
  6806  003CE0  2002               	addwfc	(?_strlen+1)^0,w,c
  6807  003CE2  6E12               	movwf	(?_pad+1)^0,c
  6808  003CE4  0012               	return		;funcret
  6809  003CE6                     __end_of_pad:
  6810                           	callstack 0
  6811                           
  6812 ;; *************** function _strlen *****************
  6813 ;; Defined at:
  6814 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6817 ;;		 -> dbuf(80), 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6820 ;;		 -> dbuf(80), 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  2    0[COMRAM] unsigned int 
  6823 ;; Registers used:
  6824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6830 ;;      Params:         2       0       0       0       0       0       0       0       0
  6831 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6833 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6834 ;;Total ram usage:        4 bytes
  6835 ;; Hardware stack levels used: 1
  6836 ;; Hardware stack levels required when called: 1
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		_pad
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text18
  6845  004698                     __ptext18:
  6846                           	callstack 0
  6847  004698                     _strlen:
  6848                           	callstack 24
  6849  004698  C001  F003         	movff	strlen@s,strlen@a
  6850  00469C  C002  F004         	movff	strlen@s+1,strlen@a+1
  6851  0046A0  EF54  F023         	goto	l3722
  6852  0046A4                     l3720:
  6853  0046A4  4A01               	infsnz	strlen@s^0,f,c
  6854  0046A6  2A02               	incf	(strlen@s+1)^0,f,c
  6855  0046A8                     l3722:
  6856  0046A8  C001  FFD9         	movff	strlen@s,fsr2l
  6857  0046AC  C002  FFDA         	movff	strlen@s+1,fsr2h
  6858  0046B0  50DF               	movf	indf2,w,c
  6859  0046B2  A4D8               	btfss	status,2,c
  6860  0046B4  EF5E  F023         	goto	u3551
  6861  0046B8  EF60  F023         	goto	u3550
  6862  0046BC                     u3551:
  6863  0046BC  EF52  F023         	goto	l3720
  6864  0046C0                     u3550:
  6865  0046C0  5003               	movf	strlen@a^0,w,c
  6866  0046C2  5C01               	subwf	strlen@s^0,w,c
  6867  0046C4  6E01               	movwf	?_strlen^0,c
  6868  0046C6  5004               	movf	(strlen@a+1)^0,w,c
  6869  0046C8  5802               	subwfb	(strlen@s+1)^0,w,c
  6870  0046CA  6E02               	movwf	(?_strlen+1)^0,c
  6871  0046CC  0012               	return		;funcret
  6872  0046CE                     __end_of_strlen:
  6873                           	callstack 0
  6874                           
  6875 ;; *************** function _fputs *****************
  6876 ;; Defined at:
  6877 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6880 ;;		 -> dbuf(80), 
  6881 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6882 ;;		 -> sprintf@f(6), 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  i               2   14[COMRAM] int 
  6885 ;;  c               1   13[COMRAM] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  2    9[COMRAM] int 
  6888 ;; Registers used:
  6889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6895 ;;      Params:         4       0       0       0       0       0       0       0       0
  6896 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6897 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6898 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6899 ;;Total ram usage:        7 bytes
  6900 ;; Hardware stack levels used: 1
  6901 ;; Hardware stack levels required when called: 3
  6902 ;; This function calls:
  6903 ;;		_fputc
  6904 ;; This function is called by:
  6905 ;;		_pad
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text19
  6910  0044BE                     __ptext19:
  6911                           	callstack 0
  6912  0044BE                     _fputs:
  6913                           	callstack 22
  6914  0044BE  0E00               	movlw	0
  6915  0044C0  6E10               	movwf	(fputs@i+1)^0,c
  6916  0044C2  0E00               	movlw	0
  6917  0044C4  6E0F               	movwf	fputs@i^0,c
  6918  0044C6  EF70  F022         	goto	l3716
  6919  0044CA                     l3712:
  6920  0044CA  C00E  F001         	movff	fputs@c,fputc@c
  6921  0044CE  6A02               	clrf	(fputc@c+1)^0,c
  6922  0044D0  C00C  F003         	movff	fputs@fp,fputc@fp
  6923  0044D4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6924  0044D8  ECAB  F01D         	call	_fputc	;wreg free
  6925  0044DC  4A0F               	infsnz	fputs@i^0,f,c
  6926  0044DE  2A10               	incf	(fputs@i+1)^0,f,c
  6927  0044E0                     l3716:
  6928  0044E0  500F               	movf	fputs@i^0,w,c
  6929  0044E2  240A               	addwf	fputs@s^0,w,c
  6930  0044E4  6ED9               	movwf	fsr2l,c
  6931  0044E6  5010               	movf	(fputs@i+1)^0,w,c
  6932  0044E8  200B               	addwfc	(fputs@s+1)^0,w,c
  6933  0044EA  6EDA               	movwf	fsr2h,c
  6934  0044EC  50DF               	movf	indf2,w,c
  6935  0044EE  6E0E               	movwf	fputs@c^0,c
  6936  0044F0  500E               	movf	fputs@c^0,w,c
  6937  0044F2  A4D8               	btfss	status,2,c
  6938  0044F4  EF7E  F022         	goto	u3541
  6939  0044F8  EF80  F022         	goto	u3540
  6940  0044FC                     u3541:
  6941  0044FC  EF65  F022         	goto	l3712
  6942  004500                     u3540:
  6943  004500  0012               	return		;funcret
  6944  004502                     __end_of_fputs:
  6945                           	callstack 0
  6946                           
  6947 ;; *************** function _fputc *****************
  6948 ;; Defined at:
  6949 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  c               2    0[COMRAM] int 
  6952 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6953 ;;		 -> sprintf@f(6), 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  2    0[COMRAM] int 
  6958 ;; Registers used:
  6959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6965 ;;      Params:         4       0       0       0       0       0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6967 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6968 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6969 ;;Total ram usage:        9 bytes
  6970 ;; Hardware stack levels used: 1
  6971 ;; Hardware stack levels required when called: 2
  6972 ;; This function calls:
  6973 ;;		_putch
  6974 ;; This function is called by:
  6975 ;;		_pad
  6976 ;;		_vfpfcnvrt
  6977 ;;		_fputs
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text20
  6982  003B56                     __ptext20:
  6983                           	callstack 0
  6984  003B56                     _fputc:
  6985                           	callstack 22
  6986  003B56  5003               	movf	fputc@fp^0,w,c
  6987  003B58  1004               	iorwf	(fputc@fp+1)^0,w,c
  6988  003B5A  B4D8               	btfsc	status,2,c
  6989  003B5C  EFB2  F01D         	goto	u3111
  6990  003B60  EFB4  F01D         	goto	u3110
  6991  003B64                     u3111:
  6992  003B64  EFBD  F01D         	goto	l3498
  6993  003B68                     u3110:
  6994  003B68  5003               	movf	fputc@fp^0,w,c
  6995  003B6A  1004               	iorwf	(fputc@fp+1)^0,w,c
  6996  003B6C  A4D8               	btfss	status,2,c
  6997  003B6E  EFBB  F01D         	goto	u3121
  6998  003B72  EFBD  F01D         	goto	u3120
  6999  003B76                     u3121:
  7000  003B76  EFC2  F01D         	goto	l3500
  7001  003B7A                     u3120:
  7002  003B7A                     l3498:
  7003  003B7A  5001               	movf	fputc@c^0,w,c
  7004  003B7C  EC46  F024         	call	_putch
  7005  003B80  EF0F  F01E         	goto	l1396
  7006  003B84                     l3500:
  7007  003B84  EE20 F004          	lfsr	2,4
  7008  003B88  5003               	movf	fputc@fp^0,w,c
  7009  003B8A  26D9               	addwf	fsr2l,f,c
  7010  003B8C  5004               	movf	(fputc@fp+1)^0,w,c
  7011  003B8E  22DA               	addwfc	fsr2h,f,c
  7012  003B90  50DE               	movf	postinc2,w,c
  7013  003B92  10DE               	iorwf	postinc2,w,c
  7014  003B94  B4D8               	btfsc	status,2,c
  7015  003B96  EFCF  F01D         	goto	u3131
  7016  003B9A  EFD1  F01D         	goto	u3130
  7017  003B9E                     u3131:
  7018  003B9E  EFEC  F01D         	goto	l3504
  7019  003BA2                     u3130:
  7020  003BA2  EE20 F004          	lfsr	2,4
  7021  003BA6  5003               	movf	fputc@fp^0,w,c
  7022  003BA8  26D9               	addwf	fsr2l,f,c
  7023  003BAA  5004               	movf	(fputc@fp+1)^0,w,c
  7024  003BAC  22DA               	addwfc	fsr2h,f,c
  7025  003BAE  EE10 F002          	lfsr	1,2
  7026  003BB2  5003               	movf	fputc@fp^0,w,c
  7027  003BB4  26E1               	addwf	fsr1l,f,c
  7028  003BB6  5004               	movf	(fputc@fp+1)^0,w,c
  7029  003BB8  22E2               	addwfc	fsr1h,f,c
  7030  003BBA  50DE               	movf	postinc2,w,c
  7031  003BBC  5CE6               	subwf	postinc1,w,c
  7032  003BBE  50E6               	movf	postinc1,w,c
  7033  003BC0  0A80               	xorlw	128
  7034  003BC2  6E09               	movwf	(??_fputc+4)^0,c
  7035  003BC4  50DE               	movf	postinc2,w,c
  7036  003BC6  0A80               	xorlw	128
  7037  003BC8  5809               	subwfb	(??_fputc+4)^0,w,c
  7038  003BCA  B0D8               	btfsc	status,0,c
  7039  003BCC  EFEA  F01D         	goto	u3141
  7040  003BD0  EFEC  F01D         	goto	u3140
  7041  003BD4                     u3141:
  7042  003BD4  EF0F  F01E         	goto	l1396
  7043  003BD8                     u3140:
  7044  003BD8                     l3504:
  7045  003BD8  EE20 F002          	lfsr	2,2
  7046  003BDC  5003               	movf	fputc@fp^0,w,c
  7047  003BDE  26D9               	addwf	fsr2l,f,c
  7048  003BE0  5004               	movf	(fputc@fp+1)^0,w,c
  7049  003BE2  22DA               	addwfc	fsr2h,f,c
  7050  003BE4  CFDE F005          	movff	postinc2,??_fputc
  7051  003BE8  CFDD F006          	movff	postdec2,??_fputc+1
  7052  003BEC  C003  FFD9         	movff	fputc@fp,fsr2l
  7053  003BF0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7054  003BF4  CFDE F007          	movff	postinc2,??_fputc+2
  7055  003BF8  CFDD F008          	movff	postdec2,??_fputc+3
  7056  003BFC  5005               	movf	??_fputc^0,w,c
  7057  003BFE  2407               	addwf	(??_fputc+2)^0,w,c
  7058  003C00  6ED9               	movwf	fsr2l,c
  7059  003C02  5006               	movf	(??_fputc+1)^0,w,c
  7060  003C04  2008               	addwfc	(??_fputc+3)^0,w,c
  7061  003C06  6EDA               	movwf	fsr2h,c
  7062  003C08  C001  FFDF         	movff	fputc@c,indf2
  7063  003C0C  EE20 F002          	lfsr	2,2
  7064  003C10  5003               	movf	fputc@fp^0,w,c
  7065  003C12  26D9               	addwf	fsr2l,f,c
  7066  003C14  5004               	movf	(fputc@fp+1)^0,w,c
  7067  003C16  22DA               	addwfc	fsr2h,f,c
  7068  003C18  2ADE               	incf	postinc2,f,c
  7069  003C1A  0E00               	movlw	0
  7070  003C1C  22DD               	addwfc	postdec2,f,c
  7071  003C1E                     l1396:
  7072  003C1E  0012               	return		;funcret
  7073  003C20                     __end_of_fputc:
  7074                           	callstack 0
  7075                           
  7076 ;; *************** function _putch *****************
  7077 ;; Defined at:
  7078 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;  c               1    wreg     unsigned char 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  c               1    0[COMRAM] unsigned char 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      void 
  7085 ;; Registers used:
  7086 ;;		wreg
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7092 ;;      Params:         0       0       0       0       0       0       0       0       0
  7093 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7094 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7095 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7096 ;;Total ram usage:        0 bytes
  7097 ;; Hardware stack levels used: 1
  7098 ;; Hardware stack levels required when called: 1
  7099 ;; This function calls:
  7100 ;;		Nothing
  7101 ;; This function is called by:
  7102 ;;		_fputc
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text21
  7107  00488C                     __ptext21:
  7108                           	callstack 0
  7109  00488C                     _putch:
  7110                           	callstack 22
  7111  00488C  0012               	return		;funcret
  7112  00488E                     __end_of_putch:
  7113                           	callstack 0
  7114                           
  7115 ;; *************** function _floorf *****************
  7116 ;; Defined at:
  7117 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  x               4   70[COMRAM] float 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  u               4   86[COMRAM] struct .
  7122 ;;  m               4   80[COMRAM] unsigned long 
  7123 ;;  e               2   84[COMRAM] int 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  4   70[COMRAM] float 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7133 ;;      Params:         4       0       0       0       0       0       0       0       0
  7134 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7135 ;;      Temps:          6       0       0       0       0       0       0       0       0
  7136 ;;      Totals:        20       0       0       0       0       0       0       0       0
  7137 ;;Total ram usage:       20 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; Hardware stack levels required when called: 1
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_efgtoa
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text22
  7148  003122                     __ptext22:
  7149                           	callstack 0
  7150  003122                     _floorf:
  7151                           	callstack 25
  7152  003122  C0E5  F057         	movff	floorf@F527,floorf@u
  7153  003126  C0E6  F058         	movff	floorf@F527+1,floorf@u+1
  7154  00312A  C0E7  F059         	movff	floorf@F527+2,floorf@u+2
  7155  00312E  C0E8  F05A         	movff	floorf@F527+3,floorf@u+3
  7156  003132  C047  F057         	movff	floorf@x,floorf@u
  7157  003136  C048  F058         	movff	floorf@x+1,floorf@u+1
  7158  00313A  C049  F059         	movff	floorf@x+2,floorf@u+2
  7159  00313E  C04A  F05A         	movff	floorf@x+3,floorf@u+3
  7160  003142  0E81               	movlw	129
  7161  003144  6E4B               	movwf	??_floorf^0,c
  7162  003146  0EFF               	movlw	255
  7163  003148  6E4C               	movwf	(??_floorf+1)^0,c
  7164  00314A  C057  F04D         	movff	floorf@u,??_floorf+2
  7165  00314E  C058  F04E         	movff	floorf@u+1,??_floorf+3
  7166  003152  C059  F04F         	movff	floorf@u+2,??_floorf+4
  7167  003156  C05A  F050         	movff	floorf@u+3,??_floorf+5
  7168  00315A  0E18               	movlw	24
  7169  00315C  EFB5  F018         	goto	u4460
  7170  003160                     u4465:
  7171  003160  90D8               	bcf	status,0,c
  7172  003162  3250               	rrcf	(??_floorf+5)^0,f,c
  7173  003164  324F               	rrcf	(??_floorf+4)^0,f,c
  7174  003166  324E               	rrcf	(??_floorf+3)^0,f,c
  7175  003168  324D               	rrcf	(??_floorf+2)^0,f,c
  7176  00316A                     u4460:
  7177  00316A  2EE8               	decfsz	wreg,f,c
  7178  00316C  EFB0  F018         	goto	u4465
  7179  003170  504D               	movf	(??_floorf+2)^0,w,c
  7180  003172  244B               	addwf	??_floorf^0,w,c
  7181  003174  6E55               	movwf	floorf@e^0,c
  7182  003176  0E00               	movlw	0
  7183  003178  204C               	addwfc	(??_floorf+1)^0,w,c
  7184  00317A  6E56               	movwf	(floorf@e+1)^0,c
  7185  00317C  BE56               	btfsc	(floorf@e+1)^0,7,c
  7186  00317E  EFCA  F018         	goto	u4471
  7187  003182  5056               	movf	(floorf@e+1)^0,w,c
  7188  003184  E109               	bnz	u4470
  7189  003186  0E17               	movlw	23
  7190  003188  5C55               	subwf	floorf@e^0,w,c
  7191  00318A  A0D8               	btfss	status,0,c
  7192  00318C  EFCA  F018         	goto	u4471
  7193  003190  EFCC  F018         	goto	u4470
  7194  003194                     u4471:
  7195  003194  EFD6  F018         	goto	l4250
  7196  003198                     u4470:
  7197  003198                     l4248:
  7198  003198  C047  F047         	movff	floorf@x,?_floorf
  7199  00319C  C048  F048         	movff	floorf@x+1,?_floorf+1
  7200  0031A0  C049  F049         	movff	floorf@x+2,?_floorf+2
  7201  0031A4  C04A  F04A         	movff	floorf@x+3,?_floorf+3
  7202  0031A8  EF99  F019         	goto	l1351
  7203  0031AC                     l4250:
  7204  0031AC  BE56               	btfsc	(floorf@e+1)^0,7,c
  7205  0031AE  EFDB  F018         	goto	u4481
  7206  0031B2  EFDD  F018         	goto	u4480
  7207  0031B6                     u4481:
  7208  0031B6  EF4D  F019         	goto	l4260
  7209  0031BA                     u4480:
  7210  0031BA  C055  F04B         	movff	floorf@e,??_floorf
  7211  0031BE  0EFF               	movlw	255
  7212  0031C0  6E4C               	movwf	(??_floorf+1)^0,c
  7213  0031C2  0EFF               	movlw	255
  7214  0031C4  6E4D               	movwf	(??_floorf+2)^0,c
  7215  0031C6  0E7F               	movlw	127
  7216  0031C8  6E4E               	movwf	(??_floorf+3)^0,c
  7217  0031CA  0E00               	movlw	0
  7218  0031CC  6E4F               	movwf	(??_floorf+4)^0,c
  7219  0031CE                     u4495:
  7220  0031CE  664B               	tstfsz	??_floorf^0,c
  7221  0031D0  EFEC  F018         	goto	u4496
  7222  0031D4  EFF4  F018         	goto	u4497
  7223  0031D8                     u4496:
  7224  0031D8  344F               	rlcf	(??_floorf+4)^0,w,c
  7225  0031DA  324F               	rrcf	(??_floorf+4)^0,f,c
  7226  0031DC  324E               	rrcf	(??_floorf+3)^0,f,c
  7227  0031DE  324D               	rrcf	(??_floorf+2)^0,f,c
  7228  0031E0  324C               	rrcf	(??_floorf+1)^0,f,c
  7229  0031E2  2E4B               	decfsz	??_floorf^0,f,c
  7230  0031E4  EFE7  F018         	goto	u4495
  7231  0031E8                     u4497:
  7232  0031E8  C04C  F051         	movff	??_floorf+1,floorf@m
  7233  0031EC  C04D  F052         	movff	??_floorf+2,floorf@m+1
  7234  0031F0  C04E  F053         	movff	??_floorf+3,floorf@m+2
  7235  0031F4  C04F  F054         	movff	??_floorf+4,floorf@m+3
  7236  0031F8  5051               	movf	floorf@m^0,w,c
  7237  0031FA  1457               	andwf	floorf@u^0,w,c
  7238  0031FC  6E4B               	movwf	??_floorf^0,c
  7239  0031FE  5052               	movf	(floorf@m+1)^0,w,c
  7240  003200  1458               	andwf	(floorf@u+1)^0,w,c
  7241  003202  6E4C               	movwf	(??_floorf+1)^0,c
  7242  003204  5053               	movf	(floorf@m+2)^0,w,c
  7243  003206  1459               	andwf	(floorf@u+2)^0,w,c
  7244  003208  6E4D               	movwf	(??_floorf+2)^0,c
  7245  00320A  5054               	movf	(floorf@m+3)^0,w,c
  7246  00320C  145A               	andwf	(floorf@u+3)^0,w,c
  7247  00320E  6E4E               	movwf	(??_floorf+3)^0,c
  7248  003210  504B               	movf	??_floorf^0,w,c
  7249  003212  104C               	iorwf	(??_floorf+1)^0,w,c
  7250  003214  104D               	iorwf	(??_floorf+2)^0,w,c
  7251  003216  104E               	iorwf	(??_floorf+3)^0,w,c
  7252  003218  A4D8               	btfss	status,2,c
  7253  00321A  EF11  F019         	goto	u4501
  7254  00321E  EF13  F019         	goto	u4500
  7255  003222                     u4501:
  7256  003222  EF15  F019         	goto	l4256
  7257  003226                     u4500:
  7258  003226  EFCC  F018         	goto	l4248
  7259  00322A                     l4256:
  7260  00322A  C057  F04B         	movff	floorf@u,??_floorf
  7261  00322E  C058  F04C         	movff	floorf@u+1,??_floorf+1
  7262  003232  C059  F04D         	movff	floorf@u+2,??_floorf+2
  7263  003236  C05A  F04E         	movff	floorf@u+3,??_floorf+3
  7264  00323A  0E20               	movlw	32
  7265  00323C  EF25  F019         	goto	u4510
  7266  003240                     u4515:
  7267  003240  90D8               	bcf	status,0,c
  7268  003242  324E               	rrcf	(??_floorf+3)^0,f,c
  7269  003244  324D               	rrcf	(??_floorf+2)^0,f,c
  7270  003246  324C               	rrcf	(??_floorf+1)^0,f,c
  7271  003248  324B               	rrcf	??_floorf^0,f,c
  7272  00324A                     u4510:
  7273  00324A  2EE8               	decfsz	wreg,f,c
  7274  00324C  EF20  F019         	goto	u4515
  7275  003250  504B               	movf	??_floorf^0,w,c
  7276  003252  104C               	iorwf	(??_floorf+1)^0,w,c
  7277  003254  104D               	iorwf	(??_floorf+2)^0,w,c
  7278  003256  104E               	iorwf	(??_floorf+3)^0,w,c
  7279  003258  B4D8               	btfsc	status,2,c
  7280  00325A  EF31  F019         	goto	u4521
  7281  00325E  EF33  F019         	goto	u4520
  7282  003262                     u4521:
  7283  003262  EF3B  F019         	goto	l1354
  7284  003266                     u4520:
  7285  003266  5051               	movf	floorf@m^0,w,c
  7286  003268  2657               	addwf	floorf@u^0,f,c
  7287  00326A  5052               	movf	(floorf@m+1)^0,w,c
  7288  00326C  2258               	addwfc	(floorf@u+1)^0,f,c
  7289  00326E  5053               	movf	(floorf@m+2)^0,w,c
  7290  003270  2259               	addwfc	(floorf@u+2)^0,f,c
  7291  003272  5054               	movf	(floorf@m+3)^0,w,c
  7292  003274  225A               	addwfc	(floorf@u+3)^0,f,c
  7293  003276                     l1354:
  7294  003276  1C51               	comf	floorf@m^0,w,c
  7295  003278  6E4B               	movwf	??_floorf^0,c
  7296  00327A  1C52               	comf	(floorf@m+1)^0,w,c
  7297  00327C  6E4C               	movwf	(??_floorf+1)^0,c
  7298  00327E  1C53               	comf	(floorf@m+2)^0,w,c
  7299  003280  6E4D               	movwf	(??_floorf+2)^0,c
  7300  003282  1C54               	comf	(floorf@m+3)^0,w,c
  7301  003284  6E4E               	movwf	(??_floorf+3)^0,c
  7302  003286  504B               	movf	??_floorf^0,w,c
  7303  003288  1657               	andwf	floorf@u^0,f,c
  7304  00328A  504C               	movf	(??_floorf+1)^0,w,c
  7305  00328C  1658               	andwf	(floorf@u+1)^0,f,c
  7306  00328E  504D               	movf	(??_floorf+2)^0,w,c
  7307  003290  1659               	andwf	(floorf@u+2)^0,f,c
  7308  003292  504E               	movf	(??_floorf+3)^0,w,c
  7309  003294  165A               	andwf	(floorf@u+3)^0,f,c
  7310  003296  EF91  F019         	goto	l4268
  7311  00329A                     l4260:
  7312  00329A  C057  F04B         	movff	floorf@u,??_floorf
  7313  00329E  C058  F04C         	movff	floorf@u+1,??_floorf+1
  7314  0032A2  C059  F04D         	movff	floorf@u+2,??_floorf+2
  7315  0032A6  C05A  F04E         	movff	floorf@u+3,??_floorf+3
  7316  0032AA  0E20               	movlw	32
  7317  0032AC  EF5D  F019         	goto	u4530
  7318  0032B0                     u4535:
  7319  0032B0  90D8               	bcf	status,0,c
  7320  0032B2  324E               	rrcf	(??_floorf+3)^0,f,c
  7321  0032B4  324D               	rrcf	(??_floorf+2)^0,f,c
  7322  0032B6  324C               	rrcf	(??_floorf+1)^0,f,c
  7323  0032B8  324B               	rrcf	??_floorf^0,f,c
  7324  0032BA                     u4530:
  7325  0032BA  2EE8               	decfsz	wreg,f,c
  7326  0032BC  EF58  F019         	goto	u4535
  7327  0032C0  504B               	movf	??_floorf^0,w,c
  7328  0032C2  104C               	iorwf	(??_floorf+1)^0,w,c
  7329  0032C4  104D               	iorwf	(??_floorf+2)^0,w,c
  7330  0032C6  104E               	iorwf	(??_floorf+3)^0,w,c
  7331  0032C8  A4D8               	btfss	status,2,c
  7332  0032CA  EF69  F019         	goto	u4541
  7333  0032CE  EF6B  F019         	goto	u4540
  7334  0032D2                     u4541:
  7335  0032D2  EF75  F019         	goto	l4264
  7336  0032D6                     u4540:
  7337  0032D6  0E00               	movlw	0
  7338  0032D8  6E57               	movwf	floorf@u^0,c
  7339  0032DA  0E00               	movlw	0
  7340  0032DC  6E58               	movwf	(floorf@u+1)^0,c
  7341  0032DE  0E00               	movlw	0
  7342  0032E0  6E59               	movwf	(floorf@u+2)^0,c
  7343  0032E2  0E00               	movlw	0
  7344  0032E4  6E5A               	movwf	(floorf@u+3)^0,c
  7345  0032E6  EF91  F019         	goto	l4268
  7346  0032EA                     l4264:
  7347  0032EA  90D8               	bcf	status,0,c
  7348  0032EC  3457               	rlcf	floorf@u^0,w,c
  7349  0032EE  6E4B               	movwf	??_floorf^0,c
  7350  0032F0  3458               	rlcf	(floorf@u+1)^0,w,c
  7351  0032F2  6E4C               	movwf	(??_floorf+1)^0,c
  7352  0032F4  3459               	rlcf	(floorf@u+2)^0,w,c
  7353  0032F6  6E4D               	movwf	(??_floorf+2)^0,c
  7354  0032F8  345A               	rlcf	(floorf@u+3)^0,w,c
  7355  0032FA  6E4E               	movwf	(??_floorf+3)^0,c
  7356  0032FC  504B               	movf	??_floorf^0,w,c
  7357  0032FE  104C               	iorwf	(??_floorf+1)^0,w,c
  7358  003300  104D               	iorwf	(??_floorf+2)^0,w,c
  7359  003302  104E               	iorwf	(??_floorf+3)^0,w,c
  7360  003304  B4D8               	btfsc	status,2,c
  7361  003306  EF87  F019         	goto	u4551
  7362  00330A  EF89  F019         	goto	u4550
  7363  00330E                     u4551:
  7364  00330E  EF91  F019         	goto	l4268
  7365  003312                     u4550:
  7366  003312  0E00               	movlw	0
  7367  003314  6E57               	movwf	floorf@u^0,c
  7368  003316  0E00               	movlw	0
  7369  003318  6E58               	movwf	(floorf@u+1)^0,c
  7370  00331A  0E80               	movlw	128
  7371  00331C  6E59               	movwf	(floorf@u+2)^0,c
  7372  00331E  0EBF               	movlw	191
  7373  003320  6E5A               	movwf	(floorf@u+3)^0,c
  7374  003322                     l4268:
  7375  003322  C057  F047         	movff	floorf@u,?_floorf
  7376  003326  C058  F048         	movff	floorf@u+1,?_floorf+1
  7377  00332A  C059  F049         	movff	floorf@u+2,?_floorf+2
  7378  00332E  C05A  F04A         	movff	floorf@u+3,?_floorf+3
  7379  003332                     l1351:
  7380  003332  0012               	return		;funcret
  7381  003334                     __end_of_floorf:
  7382                           	callstack 0
  7383                           
  7384 ;; *************** function ___fpclassifyf *****************
  7385 ;; Defined at:
  7386 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;  x               4    0[COMRAM] float 
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  u               4   10[COMRAM] struct .
  7391 ;;  e               2    8[COMRAM] int 
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  2    0[COMRAM] int 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2, status,0
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7401 ;;      Params:         4       0       0       0       0       0       0       0       0
  7402 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7403 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7404 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7405 ;;Total ram usage:       14 bytes
  7406 ;; Hardware stack levels used: 1
  7407 ;; Hardware stack levels required when called: 1
  7408 ;; This function calls:
  7409 ;;		Nothing
  7410 ;; This function is called by:
  7411 ;;		_efgtoa
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           	psect	text23
  7416  003982                     __ptext23:
  7417                           	callstack 0
  7418  003982                     ___fpclassifyf:
  7419                           	callstack 25
  7420  003982  C0E9  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7421  003986  C0EA  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7422  00398A  C0EB  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7423  00398E  C0EC  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7424  003992  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  7425  003996  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7426  00399A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7427  00399E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7428  0039A2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7429  0039A6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7430  0039AA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7431  0039AE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7432  0039B2  0E18               	movlw	24
  7433  0039B4  EFE1  F01C         	goto	u4340
  7434  0039B8                     u4345:
  7435  0039B8  90D8               	bcf	status,0,c
  7436  0039BA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7437  0039BC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7438  0039BE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7439  0039C0  3205               	rrcf	??___fpclassifyf^0,f,c
  7440  0039C2                     u4340:
  7441  0039C2  2EE8               	decfsz	wreg,f,c
  7442  0039C4  EFDC  F01C         	goto	u4345
  7443  0039C8  5005               	movf	??___fpclassifyf^0,w,c
  7444  0039CA  6E09               	movwf	___fpclassifyf@e^0,c
  7445  0039CC  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7446  0039CE  5009               	movf	___fpclassifyf@e^0,w,c
  7447  0039D0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7448  0039D2  A4D8               	btfss	status,2,c
  7449  0039D4  EFEE  F01C         	goto	u4351
  7450  0039D8  EFF0  F01C         	goto	u4350
  7451  0039DC                     u4351:
  7452  0039DC  EF10  F01D         	goto	l4220
  7453  0039E0                     u4350:
  7454  0039E0  90D8               	bcf	status,0,c
  7455  0039E2  340B               	rlcf	___fpclassifyf@u^0,w,c
  7456  0039E4  6E05               	movwf	??___fpclassifyf^0,c
  7457  0039E6  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7458  0039E8  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7459  0039EA  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7460  0039EC  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7461  0039EE  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7462  0039F0  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7463  0039F2  5005               	movf	??___fpclassifyf^0,w,c
  7464  0039F4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7465  0039F6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7466  0039F8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7467  0039FA  A4D8               	btfss	status,2,c
  7468  0039FC  EF02  F01D         	goto	u4361
  7469  003A00  EF04  F01D         	goto	u4360
  7470  003A04                     u4361:
  7471  003A04  EF0A  F01D         	goto	l4216
  7472  003A08                     u4360:
  7473  003A08  0E00               	movlw	0
  7474  003A0A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7475  003A0C  0E02               	movlw	2
  7476  003A0E  6E01               	movwf	?___fpclassifyf^0,c
  7477  003A10  EF3F  F01D         	goto	l1313
  7478  003A14                     l4216:
  7479  003A14  0E00               	movlw	0
  7480  003A16  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7481  003A18  0E03               	movlw	3
  7482  003A1A  6E01               	movwf	?___fpclassifyf^0,c
  7483  003A1C  EF3F  F01D         	goto	l1313
  7484  003A20                     l4220:
  7485  003A20  2809               	incf	___fpclassifyf@e^0,w,c
  7486  003A22  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7487  003A24  A4D8               	btfss	status,2,c
  7488  003A26  EF17  F01D         	goto	u4371
  7489  003A2A  EF19  F01D         	goto	u4370
  7490  003A2E                     u4371:
  7491  003A2E  EF3B  F01D         	goto	l4226
  7492  003A32                     u4370:
  7493  003A32  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7494  003A36  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7495  003A3A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7496  003A3E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7497  003A42  0E09               	movlw	9
  7498  003A44                     u4385:
  7499  003A44  90D8               	bcf	status,0,c
  7500  003A46  3605               	rlcf	??___fpclassifyf^0,f,c
  7501  003A48  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7502  003A4A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7503  003A4C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7504  003A4E  2EE8               	decfsz	wreg,f,c
  7505  003A50  EF22  F01D         	goto	u4385
  7506  003A54  5005               	movf	??___fpclassifyf^0,w,c
  7507  003A56  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7508  003A58  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7509  003A5A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7510  003A5C  B4D8               	btfsc	status,2,c
  7511  003A5E  EF33  F01D         	goto	u4391
  7512  003A62  EF36  F01D         	goto	u4390
  7513  003A66                     u4391:
  7514  003A66  0E01               	movlw	1
  7515  003A68  EF37  F01D         	goto	u4400
  7516  003A6C                     u4390:
  7517  003A6C  0E00               	movlw	0
  7518  003A6E                     u4400:
  7519  003A6E  6E01               	movwf	?___fpclassifyf^0,c
  7520  003A70  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7521  003A72  EF3F  F01D         	goto	l1313
  7522  003A76                     l4226:
  7523  003A76  0E00               	movlw	0
  7524  003A78  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7525  003A7A  0E04               	movlw	4
  7526  003A7C  6E01               	movwf	?___fpclassifyf^0,c
  7527  003A7E                     l1313:
  7528  003A7E  0012               	return		;funcret
  7529  003A80                     __end_of___fpclassifyf:
  7530                           	callstack 0
  7531                           
  7532 ;; *************** function ___fltol *****************
  7533 ;; Defined at:
  7534 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;  f1              4   86[COMRAM] int 
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;  exp1            1    1[BANK0 ] unsigned char 
  7539 ;;  sign1           1    0[BANK0 ] unsigned char 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  4   86[COMRAM] long 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7549 ;;      Params:         4       0       0       0       0       0       0       0       0
  7550 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7551 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7552 ;;      Totals:         8       2       0       0       0       0       0       0       0
  7553 ;;Total ram usage:       10 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 1
  7556 ;; This function calls:
  7557 ;;		Nothing
  7558 ;; This function is called by:
  7559 ;;		_ReadADC
  7560 ;;		_efgtoa
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564                           	psect	text24
  7565  003678                     __ptext24:
  7566                           	callstack 0
  7567  003678                     ___fltol:
  7568                           	callstack 25
  7569  003678  3459               	rlcf	(___fltol@f1+2)^0,w,c
  7570  00367A  345A               	rlcf	(___fltol@f1+3)^0,w,c
  7571  00367C  0100               	movlb	0	; () banked
  7572  00367E  6F61               	movwf	___fltol@exp1& (0+255),b
  7573  003680  5161               	movf	___fltol@exp1& (0+255),w,b
  7574  003682  A4D8               	btfss	status,2,c
  7575  003684  EF46  F01B         	goto	u4231
  7576  003688  EF48  F01B         	goto	u4230
  7577  00368C                     u4231:
  7578  00368C  EF52  F01B         	goto	l4148
  7579  003690                     u4230:
  7580  003690                     l4144:
  7581                           
  7582                           ; BSR set to: 0
  7583  003690  0E00               	movlw	0
  7584  003692  6E57               	movwf	?___fltol^0,c
  7585  003694  0E00               	movlw	0
  7586  003696  6E58               	movwf	(?___fltol+1)^0,c
  7587  003698  0E00               	movlw	0
  7588  00369A  6E59               	movwf	(?___fltol+2)^0,c
  7589  00369C  0E00               	movlw	0
  7590  00369E  6E5A               	movwf	(?___fltol+3)^0,c
  7591  0036A0  EFBF  F01B         	goto	l703
  7592  0036A4                     l4148:
  7593                           
  7594                           ; BSR set to: 0
  7595  0036A4  C057  F05B         	movff	___fltol@f1,??___fltol
  7596  0036A8  C058  F05C         	movff	___fltol@f1+1,??___fltol+1
  7597  0036AC  C059  F05D         	movff	___fltol@f1+2,??___fltol+2
  7598  0036B0  C05A  F05E         	movff	___fltol@f1+3,??___fltol+3
  7599  0036B4  0E20               	movlw	32
  7600  0036B6  EF62  F01B         	goto	u4240
  7601  0036BA                     u4245:
  7602  0036BA  90D8               	bcf	status,0,c
  7603  0036BC  325E               	rrcf	(??___fltol+3)^0,f,c
  7604  0036BE  325D               	rrcf	(??___fltol+2)^0,f,c
  7605  0036C0  325C               	rrcf	(??___fltol+1)^0,f,c
  7606  0036C2  325B               	rrcf	??___fltol^0,f,c
  7607  0036C4                     u4240:
  7608  0036C4  2EE8               	decfsz	wreg,f,c
  7609  0036C6  EF5D  F01B         	goto	u4245
  7610  0036CA  505B               	movf	??___fltol^0,w,c
  7611  0036CC  6F60               	movwf	___fltol@sign1& (0+255),b
  7612  0036CE                     
  7613                           ; BSR set to: 0
  7614  0036CE  8E59               	bsf	(___fltol@f1+2)^0,7,c
  7615  0036D0                     
  7616                           ; BSR set to: 0
  7617  0036D0  0EFF               	movlw	255
  7618  0036D2  1657               	andwf	___fltol@f1^0,f,c
  7619  0036D4  0EFF               	movlw	255
  7620  0036D6  1658               	andwf	(___fltol@f1+1)^0,f,c
  7621  0036D8  0EFF               	movlw	255
  7622  0036DA  1659               	andwf	(___fltol@f1+2)^0,f,c
  7623  0036DC  0E00               	movlw	0
  7624  0036DE  165A               	andwf	(___fltol@f1+3)^0,f,c
  7625  0036E0                     
  7626                           ; BSR set to: 0
  7627  0036E0  0E96               	movlw	150
  7628  0036E2  5F61               	subwf	___fltol@exp1& (0+255),f,b
  7629  0036E4                     
  7630                           ; BSR set to: 0
  7631  0036E4  BF61               	btfsc	___fltol@exp1& (0+255),7,b
  7632  0036E6  EF79  F01B         	goto	u4250
  7633  0036EA  EF77  F01B         	goto	u4251
  7634  0036EE                     u4251:
  7635  0036EE  EF8F  F01B         	goto	l4168
  7636  0036F2                     u4250:
  7637  0036F2                     
  7638                           ; BSR set to: 0
  7639  0036F2  5161               	movf	___fltol@exp1& (0+255),w,b
  7640  0036F4  0A80               	xorlw	128
  7641  0036F6  0F97               	addlw	151
  7642  0036F8  B0D8               	btfsc	status,0,c
  7643  0036FA  EF81  F01B         	goto	u4261
  7644  0036FE  EF83  F01B         	goto	u4260
  7645  003702                     u4261:
  7646  003702  EF85  F01B         	goto	l4164
  7647  003706                     u4260:
  7648  003706  EF48  F01B         	goto	l4144
  7649  00370A                     l4164:
  7650                           
  7651                           ; BSR set to: 0
  7652  00370A  90D8               	bcf	status,0,c
  7653  00370C  325A               	rrcf	(___fltol@f1+3)^0,f,c
  7654  00370E  3259               	rrcf	(___fltol@f1+2)^0,f,c
  7655  003710  3258               	rrcf	(___fltol@f1+1)^0,f,c
  7656  003712  3257               	rrcf	___fltol@f1^0,f,c
  7657  003714                     
  7658                           ; BSR set to: 0
  7659  003714  3F61               	incfsz	___fltol@exp1& (0+255),f,b
  7660  003716  EF85  F01B         	goto	l4164
  7661  00371A  EFA7  F01B         	goto	l4178
  7662  00371E                     l4168:
  7663                           
  7664                           ; BSR set to: 0
  7665  00371E  0E1F               	movlw	31
  7666  003720  6561               	cpfsgt	___fltol@exp1& (0+255),b
  7667  003722  EF95  F01B         	goto	u4271
  7668  003726  EF97  F01B         	goto	u4270
  7669  00372A                     u4271:
  7670  00372A  EF9F  F01B         	goto	l4176
  7671  00372E                     u4270:
  7672  00372E  EF48  F01B         	goto	l4144
  7673  003732                     l4174:
  7674                           
  7675                           ; BSR set to: 0
  7676  003732  90D8               	bcf	status,0,c
  7677  003734  3657               	rlcf	___fltol@f1^0,f,c
  7678  003736  3658               	rlcf	(___fltol@f1+1)^0,f,c
  7679  003738  3659               	rlcf	(___fltol@f1+2)^0,f,c
  7680  00373A  365A               	rlcf	(___fltol@f1+3)^0,f,c
  7681  00373C  0761               	decf	___fltol@exp1& (0+255),f,b
  7682  00373E                     l4176:
  7683                           
  7684                           ; BSR set to: 0
  7685  00373E  5161               	movf	___fltol@exp1& (0+255),w,b
  7686  003740  A4D8               	btfss	status,2,c
  7687  003742  EFA5  F01B         	goto	u4281
  7688  003746  EFA7  F01B         	goto	u4280
  7689  00374A                     u4281:
  7690  00374A  EF99  F01B         	goto	l4174
  7691  00374E                     u4280:
  7692  00374E                     l4178:
  7693                           
  7694                           ; BSR set to: 0
  7695  00374E  5160               	movf	___fltol@sign1& (0+255),w,b
  7696  003750  B4D8               	btfsc	status,2,c
  7697  003752  EFAD  F01B         	goto	u4291
  7698  003756  EFAF  F01B         	goto	u4290
  7699  00375A                     u4291:
  7700  00375A  EFB7  F01B         	goto	l4182
  7701  00375E                     u4290:
  7702  00375E                     
  7703                           ; BSR set to: 0
  7704  00375E  1E5A               	comf	(___fltol@f1+3)^0,f,c
  7705  003760  1E59               	comf	(___fltol@f1+2)^0,f,c
  7706  003762  1E58               	comf	(___fltol@f1+1)^0,f,c
  7707  003764  6C57               	negf	___fltol@f1^0,c
  7708  003766  0E00               	movlw	0
  7709  003768  2258               	addwfc	(___fltol@f1+1)^0,f,c
  7710  00376A  2259               	addwfc	(___fltol@f1+2)^0,f,c
  7711  00376C  225A               	addwfc	(___fltol@f1+3)^0,f,c
  7712  00376E                     l4182:
  7713                           
  7714                           ; BSR set to: 0
  7715  00376E  C057  F057         	movff	___fltol@f1,?___fltol
  7716  003772  C058  F058         	movff	___fltol@f1+1,?___fltol+1
  7717  003776  C059  F059         	movff	___fltol@f1+2,?___fltol+2
  7718  00377A  C05A  F05A         	movff	___fltol@f1+3,?___fltol+3
  7719  00377E                     l703:
  7720                           
  7721                           ; BSR set to: 0
  7722  00377E  0012               	return		;funcret
  7723  003780                     __end_of___fltol:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function ___flsub *****************
  7727 ;; Defined at:
  7728 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  b               4   86[COMRAM] long 
  7731 ;;  a               4   90[COMRAM] long 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  4   86[COMRAM] long 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7743 ;;      Params:         8       0       0       0       0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7746 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7747 ;;Total ram usage:        8 bytes
  7748 ;; Hardware stack levels used: 1
  7749 ;; Hardware stack levels required when called: 2
  7750 ;; This function calls:
  7751 ;;		___fladd
  7752 ;; This function is called by:
  7753 ;;		_efgtoa
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text25
  7758  004432                     __ptext25:
  7759                           	callstack 0
  7760  004432                     ___flsub:
  7761                           	callstack 24
  7762  004432  0E00               	movlw	0
  7763  004434  1A5B               	xorwf	___flsub@a^0,f,c
  7764  004436  0E00               	movlw	0
  7765  004438  1A5C               	xorwf	(___flsub@a+1)^0,f,c
  7766  00443A  0E00               	movlw	0
  7767  00443C  1A5D               	xorwf	(___flsub@a+2)^0,f,c
  7768  00443E  0E80               	movlw	128
  7769  004440  1A5E               	xorwf	(___flsub@a+3)^0,f,c
  7770  004442  C057  F047         	movff	___flsub@b,___fladd@b
  7771  004446  C058  F048         	movff	___flsub@b+1,___fladd@b+1
  7772  00444A  C059  F049         	movff	___flsub@b+2,___fladd@b+2
  7773  00444E  C05A  F04A         	movff	___flsub@b+3,___fladd@b+3
  7774  004452  C05B  F04B         	movff	___flsub@a,___fladd@a
  7775  004456  C05C  F04C         	movff	___flsub@a+1,___fladd@a+1
  7776  00445A  C05D  F04D         	movff	___flsub@a+2,___fladd@a+2
  7777  00445E  C05E  F04E         	movff	___flsub@a+3,___fladd@a+3
  7778  004462  EC5F  F00D         	call	___fladd	;wreg free
  7779  004466  C047  F057         	movff	?___fladd,?___flsub
  7780  00446A  C048  F058         	movff	?___fladd+1,?___flsub+1
  7781  00446E  C049  F059         	movff	?___fladd+2,?___flsub+2
  7782  004472  C04A  F05A         	movff	?___fladd+3,?___flsub+3
  7783  004476  0012               	return		;funcret
  7784  004478                     __end_of___flsub:
  7785                           	callstack 0
  7786                           
  7787 ;; *************** function ___fladd *****************
  7788 ;; Defined at:
  7789 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  b               4   70[COMRAM] long 
  7792 ;;  a               4   74[COMRAM] long 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  grs             1   85[COMRAM] unsigned char 
  7795 ;;  bexp            1   84[COMRAM] unsigned char 
  7796 ;;  aexp            1   83[COMRAM] unsigned char 
  7797 ;;  signs           1   82[COMRAM] unsigned char 
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  4   70[COMRAM] unsigned char 
  7800 ;; Registers used:
  7801 ;;		wreg, status,2, status,0
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7807 ;;      Params:         8       0       0       0       0       0       0       0       0
  7808 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7809 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7810 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7811 ;;Total ram usage:       16 bytes
  7812 ;; Hardware stack levels used: 1
  7813 ;; Hardware stack levels required when called: 1
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_ReadADC
  7818 ;;		___flsub
  7819 ;;		_efgtoa
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           	psect	text26
  7824  001ABE                     __ptext26:
  7825                           	callstack 0
  7826  001ABE                     ___fladd:
  7827                           	callstack 24
  7828  001ABE  504A               	movf	(___fladd@b+3)^0,w,c
  7829  001AC0  0B80               	andlw	128
  7830  001AC2  6E53               	movwf	___fladd@signs^0,c
  7831  001AC4  504A               	movf	(___fladd@b+3)^0,w,c
  7832  001AC6  244A               	addwf	(___fladd@b+3)^0,w,c
  7833  001AC8  6E55               	movwf	___fladd@bexp^0,c
  7834  001ACA  AE49               	btfss	(___fladd@b+2)^0,7,c
  7835  001ACC  EF6A  F00D         	goto	u3151
  7836  001AD0  EF6C  F00D         	goto	u3150
  7837  001AD4                     u3151:
  7838  001AD4  EF6D  F00D         	goto	l3514
  7839  001AD8                     u3150:
  7840  001AD8  8055               	bsf	___fladd@bexp^0,0,c
  7841  001ADA                     l3514:
  7842  001ADA  5055               	movf	___fladd@bexp^0,w,c
  7843  001ADC  B4D8               	btfsc	status,2,c
  7844  001ADE  EF73  F00D         	goto	u3161
  7845  001AE2  EF75  F00D         	goto	u3160
  7846  001AE6                     u3161:
  7847  001AE6  EF8A  F00D         	goto	l3524
  7848  001AEA                     u3160:
  7849  001AEA  2855               	incf	___fladd@bexp^0,w,c
  7850  001AEC  A4D8               	btfss	status,2,c
  7851  001AEE  EF7B  F00D         	goto	u3171
  7852  001AF2  EF7D  F00D         	goto	u3170
  7853  001AF6                     u3171:
  7854  001AF6  EF85  F00D         	goto	l3520
  7855  001AFA                     u3170:
  7856  001AFA  0E00               	movlw	0
  7857  001AFC  6E47               	movwf	___fladd@b^0,c
  7858  001AFE  0E00               	movlw	0
  7859  001B00  6E48               	movwf	(___fladd@b+1)^0,c
  7860  001B02  0E00               	movlw	0
  7861  001B04  6E49               	movwf	(___fladd@b+2)^0,c
  7862  001B06  0E00               	movlw	0
  7863  001B08  6E4A               	movwf	(___fladd@b+3)^0,c
  7864  001B0A                     l3520:
  7865  001B0A  8E49               	bsf	(___fladd@b+2)^0,7,c
  7866  001B0C  0E00               	movlw	0
  7867  001B0E  6E4A               	movwf	(___fladd@b+3)^0,c
  7868  001B10  EF92  F00D         	goto	l3526
  7869  001B14                     l3524:
  7870  001B14  0E00               	movlw	0
  7871  001B16  6E47               	movwf	___fladd@b^0,c
  7872  001B18  0E00               	movlw	0
  7873  001B1A  6E48               	movwf	(___fladd@b+1)^0,c
  7874  001B1C  0E00               	movlw	0
  7875  001B1E  6E49               	movwf	(___fladd@b+2)^0,c
  7876  001B20  0E00               	movlw	0
  7877  001B22  6E4A               	movwf	(___fladd@b+3)^0,c
  7878  001B24                     l3526:
  7879  001B24  504E               	movf	(___fladd@a+3)^0,w,c
  7880  001B26  0B80               	andlw	128
  7881  001B28  6E54               	movwf	___fladd@aexp^0,c
  7882  001B2A  5053               	movf	___fladd@signs^0,w,c
  7883  001B2C  1854               	xorwf	___fladd@aexp^0,w,c
  7884  001B2E  B4D8               	btfsc	status,2,c
  7885  001B30  EF9C  F00D         	goto	u3181
  7886  001B34  EF9E  F00D         	goto	u3180
  7887  001B38                     u3181:
  7888  001B38  EF9F  F00D         	goto	l3532
  7889  001B3C                     u3180:
  7890  001B3C  8C53               	bsf	___fladd@signs^0,6,c
  7891  001B3E                     l3532:
  7892  001B3E  504E               	movf	(___fladd@a+3)^0,w,c
  7893  001B40  244E               	addwf	(___fladd@a+3)^0,w,c
  7894  001B42  6E54               	movwf	___fladd@aexp^0,c
  7895  001B44  AE4D               	btfss	(___fladd@a+2)^0,7,c
  7896  001B46  EFA7  F00D         	goto	u3191
  7897  001B4A  EFA9  F00D         	goto	u3190
  7898  001B4E                     u3191:
  7899  001B4E  EFAA  F00D         	goto	l3538
  7900  001B52                     u3190:
  7901  001B52  8054               	bsf	___fladd@aexp^0,0,c
  7902  001B54                     l3538:
  7903  001B54  5054               	movf	___fladd@aexp^0,w,c
  7904  001B56  B4D8               	btfsc	status,2,c
  7905  001B58  EFB0  F00D         	goto	u3201
  7906  001B5C  EFB2  F00D         	goto	u3200
  7907  001B60                     u3201:
  7908  001B60  EFC7  F00D         	goto	l3548
  7909  001B64                     u3200:
  7910  001B64  2854               	incf	___fladd@aexp^0,w,c
  7911  001B66  A4D8               	btfss	status,2,c
  7912  001B68  EFB8  F00D         	goto	u3211
  7913  001B6C  EFBA  F00D         	goto	u3210
  7914  001B70                     u3211:
  7915  001B70  EFC2  F00D         	goto	l3544
  7916  001B74                     u3210:
  7917  001B74  0E00               	movlw	0
  7918  001B76  6E4B               	movwf	___fladd@a^0,c
  7919  001B78  0E00               	movlw	0
  7920  001B7A  6E4C               	movwf	(___fladd@a+1)^0,c
  7921  001B7C  0E00               	movlw	0
  7922  001B7E  6E4D               	movwf	(___fladd@a+2)^0,c
  7923  001B80  0E00               	movlw	0
  7924  001B82  6E4E               	movwf	(___fladd@a+3)^0,c
  7925  001B84                     l3544:
  7926  001B84  8E4D               	bsf	(___fladd@a+2)^0,7,c
  7927  001B86  0E00               	movlw	0
  7928  001B88  6E4E               	movwf	(___fladd@a+3)^0,c
  7929  001B8A  EFCF  F00D         	goto	l3550
  7930  001B8E                     l3548:
  7931  001B8E  0E00               	movlw	0
  7932  001B90  6E4B               	movwf	___fladd@a^0,c
  7933  001B92  0E00               	movlw	0
  7934  001B94  6E4C               	movwf	(___fladd@a+1)^0,c
  7935  001B96  0E00               	movlw	0
  7936  001B98  6E4D               	movwf	(___fladd@a+2)^0,c
  7937  001B9A  0E00               	movlw	0
  7938  001B9C  6E4E               	movwf	(___fladd@a+3)^0,c
  7939  001B9E                     l3550:
  7940  001B9E  5055               	movf	___fladd@bexp^0,w,c
  7941  001BA0  5C54               	subwf	___fladd@aexp^0,w,c
  7942  001BA2  B0D8               	btfsc	status,0,c
  7943  001BA4  EFD6  F00D         	goto	u3221
  7944  001BA8  EFD8  F00D         	goto	u3220
  7945  001BAC                     u3221:
  7946  001BAC  EFFF  F00D         	goto	l3586
  7947  001BB0                     u3220:
  7948  001BB0  AC53               	btfss	___fladd@signs^0,6,c
  7949  001BB2  EFDD  F00D         	goto	u3231
  7950  001BB6  EFDF  F00D         	goto	u3230
  7951  001BBA                     u3231:
  7952  001BBA  EFE1  F00D         	goto	l3556
  7953  001BBE                     u3230:
  7954  001BBE  0E80               	movlw	128
  7955  001BC0  1A53               	xorwf	___fladd@signs^0,f,c
  7956  001BC2                     l3556:
  7957  001BC2  C055  F056         	movff	___fladd@bexp,___fladd@grs
  7958  001BC6  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  7959  001BCA  C056  F054         	movff	___fladd@grs,___fladd@aexp
  7960  001BCE  C047  F056         	movff	___fladd@b,___fladd@grs
  7961  001BD2  C04B  F047         	movff	___fladd@a,___fladd@b
  7962  001BD6  C056  F04B         	movff	___fladd@grs,___fladd@a
  7963  001BDA  C048  F056         	movff	___fladd@b+1,___fladd@grs
  7964  001BDE  C04C  F048         	movff	___fladd@a+1,___fladd@b+1
  7965  001BE2  C056  F04C         	movff	___fladd@grs,___fladd@a+1
  7966  001BE6  C049  F056         	movff	___fladd@b+2,___fladd@grs
  7967  001BEA  C04D  F049         	movff	___fladd@a+2,___fladd@b+2
  7968  001BEE  C056  F04D         	movff	___fladd@grs,___fladd@a+2
  7969  001BF2  C04A  F056         	movff	___fladd@b+3,___fladd@grs
  7970  001BF6  C04E  F04A         	movff	___fladd@a+3,___fladd@b+3
  7971  001BFA  C056  F04E         	movff	___fladd@grs,___fladd@a+3
  7972  001BFE                     l3586:
  7973  001BFE  0E00               	movlw	0
  7974  001C00  6E56               	movwf	___fladd@grs^0,c
  7975  001C02  5055               	movf	___fladd@bexp^0,w,c
  7976  001C04  C054  F04F         	movff	___fladd@aexp,??___fladd
  7977  001C08  6A50               	clrf	(??___fladd+1)^0,c
  7978  001C0A  5E4F               	subwf	??___fladd^0,f,c
  7979  001C0C  0E00               	movlw	0
  7980  001C0E  5A50               	subwfb	(??___fladd+1)^0,f,c
  7981  001C10  BE50               	btfsc	(??___fladd+1)^0,7,c
  7982  001C12  EF14  F00E         	goto	u3241
  7983  001C16  5050               	movf	(??___fladd+1)^0,w,c
  7984  001C18  E109               	bnz	u3240
  7985  001C1A  0E1A               	movlw	26
  7986  001C1C  5C4F               	subwf	??___fladd^0,w,c
  7987  001C1E  A0D8               	btfss	status,0,c
  7988  001C20  EF14  F00E         	goto	u3241
  7989  001C24  EF16  F00E         	goto	u3240
  7990  001C28                     u3241:
  7991  001C28  EF4D  F00E         	goto	l935
  7992  001C2C                     u3240:
  7993  001C2C  5047               	movf	___fladd@b^0,w,c
  7994  001C2E  1048               	iorwf	(___fladd@b+1)^0,w,c
  7995  001C30  1049               	iorwf	(___fladd@b+2)^0,w,c
  7996  001C32  104A               	iorwf	(___fladd@b+3)^0,w,c
  7997  001C34  A4D8               	btfss	status,2,c
  7998  001C36  EF1F  F00E         	goto	u3251
  7999  001C3A  EF22  F00E         	goto	u3250
  8000  001C3E                     u3251:
  8001  001C3E  0E01               	movlw	1
  8002  001C40  EF23  F00E         	goto	u3260
  8003  001C44                     u3250:
  8004  001C44  0E00               	movlw	0
  8005  001C46                     u3260:
  8006  001C46  6E56               	movwf	___fladd@grs^0,c
  8007  001C48  0E00               	movlw	0
  8008  001C4A  6E47               	movwf	___fladd@b^0,c
  8009  001C4C  0E00               	movlw	0
  8010  001C4E  6E48               	movwf	(___fladd@b+1)^0,c
  8011  001C50  0E00               	movlw	0
  8012  001C52  6E49               	movwf	(___fladd@b+2)^0,c
  8013  001C54  0E00               	movlw	0
  8014  001C56  6E4A               	movwf	(___fladd@b+3)^0,c
  8015  001C58  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  8016  001C5C  EF56  F00E         	goto	l934
  8017  001C60                     l936:
  8018  001C60  A056               	btfss	___fladd@grs^0,0,c
  8019  001C62  EF35  F00E         	goto	u3271
  8020  001C66  EF37  F00E         	goto	u3270
  8021  001C6A                     u3271:
  8022  001C6A  EF3D  F00E         	goto	l3598
  8023  001C6E                     u3270:
  8024  001C6E  90D8               	bcf	status,0,c
  8025  001C70  3056               	rrcf	___fladd@grs^0,w,c
  8026  001C72  0901               	iorlw	1
  8027  001C74  6E56               	movwf	___fladd@grs^0,c
  8028  001C76  EF3F  F00E         	goto	l3600
  8029  001C7A                     l3598:
  8030  001C7A  90D8               	bcf	status,0,c
  8031  001C7C  3256               	rrcf	___fladd@grs^0,f,c
  8032  001C7E                     l3600:
  8033  001C7E  A047               	btfss	___fladd@b^0,0,c
  8034  001C80  EF44  F00E         	goto	u3281
  8035  001C84  EF46  F00E         	goto	u3280
  8036  001C88                     u3281:
  8037  001C88  EF47  F00E         	goto	l3604
  8038  001C8C                     u3280:
  8039  001C8C  8E56               	bsf	___fladd@grs^0,7,c
  8040  001C8E                     l3604:
  8041  001C8E  344A               	rlcf	(___fladd@b+3)^0,w,c
  8042  001C90  324A               	rrcf	(___fladd@b+3)^0,f,c
  8043  001C92  3249               	rrcf	(___fladd@b+2)^0,f,c
  8044  001C94  3248               	rrcf	(___fladd@b+1)^0,f,c
  8045  001C96  3247               	rrcf	___fladd@b^0,f,c
  8046  001C98  2A55               	incf	___fladd@bexp^0,f,c
  8047  001C9A                     l935:
  8048  001C9A  5054               	movf	___fladd@aexp^0,w,c
  8049  001C9C  5C55               	subwf	___fladd@bexp^0,w,c
  8050  001C9E  A0D8               	btfss	status,0,c
  8051  001CA0  EF54  F00E         	goto	u3291
  8052  001CA4  EF56  F00E         	goto	u3290
  8053  001CA8                     u3291:
  8054  001CA8  EF30  F00E         	goto	l936
  8055  001CAC                     u3290:
  8056  001CAC                     l934:
  8057  001CAC  BC53               	btfsc	___fladd@signs^0,6,c
  8058  001CAE  EF5B  F00E         	goto	u3301
  8059  001CB2  EF5D  F00E         	goto	u3300
  8060  001CB6                     u3301:
  8061  001CB6  EF9D  F00E         	goto	l3632
  8062  001CBA                     u3300:
  8063  001CBA  5055               	movf	___fladd@bexp^0,w,c
  8064  001CBC  A4D8               	btfss	status,2,c
  8065  001CBE  EF63  F00E         	goto	u3311
  8066  001CC2  EF65  F00E         	goto	u3310
  8067  001CC6                     u3311:
  8068  001CC6  EF6F  F00E         	goto	l3614
  8069  001CCA                     u3310:
  8070  001CCA  0E00               	movlw	0
  8071  001CCC  6E47               	movwf	?___fladd^0,c
  8072  001CCE  0E00               	movlw	0
  8073  001CD0  6E48               	movwf	(?___fladd+1)^0,c
  8074  001CD2  0E00               	movlw	0
  8075  001CD4  6E49               	movwf	(?___fladd+2)^0,c
  8076  001CD6  0E00               	movlw	0
  8077  001CD8  6E4A               	movwf	(?___fladd+3)^0,c
  8078  001CDA  EFBE  F00F         	goto	l943
  8079  001CDE                     l3614:
  8080  001CDE  504B               	movf	___fladd@a^0,w,c
  8081  001CE0  2647               	addwf	___fladd@b^0,f,c
  8082  001CE2  504C               	movf	(___fladd@a+1)^0,w,c
  8083  001CE4  2248               	addwfc	(___fladd@b+1)^0,f,c
  8084  001CE6  504D               	movf	(___fladd@a+2)^0,w,c
  8085  001CE8  2249               	addwfc	(___fladd@b+2)^0,f,c
  8086  001CEA  504E               	movf	(___fladd@a+3)^0,w,c
  8087  001CEC  224A               	addwfc	(___fladd@b+3)^0,f,c
  8088  001CEE  A04A               	btfss	(___fladd@b+3)^0,0,c
  8089  001CF0  EF7C  F00E         	goto	u3321
  8090  001CF4  EF7E  F00E         	goto	u3320
  8091  001CF8                     u3321:
  8092  001CF8  EF2A  F00F         	goto	l3668
  8093  001CFC                     u3320:
  8094  001CFC  A056               	btfss	___fladd@grs^0,0,c
  8095  001CFE  EF83  F00E         	goto	u3331
  8096  001D02  EF85  F00E         	goto	u3330
  8097  001D06                     u3331:
  8098  001D06  EF8B  F00E         	goto	l3622
  8099  001D0A                     u3330:
  8100  001D0A  90D8               	bcf	status,0,c
  8101  001D0C  3056               	rrcf	___fladd@grs^0,w,c
  8102  001D0E  0901               	iorlw	1
  8103  001D10  6E56               	movwf	___fladd@grs^0,c
  8104  001D12  EF8D  F00E         	goto	l3624
  8105  001D16                     l3622:
  8106  001D16  90D8               	bcf	status,0,c
  8107  001D18  3256               	rrcf	___fladd@grs^0,f,c
  8108  001D1A                     l3624:
  8109  001D1A  A047               	btfss	___fladd@b^0,0,c
  8110  001D1C  EF92  F00E         	goto	u3341
  8111  001D20  EF94  F00E         	goto	u3340
  8112  001D24                     u3341:
  8113  001D24  EF95  F00E         	goto	l3628
  8114  001D28                     u3340:
  8115  001D28  8E56               	bsf	___fladd@grs^0,7,c
  8116  001D2A                     l3628:
  8117  001D2A  344A               	rlcf	(___fladd@b+3)^0,w,c
  8118  001D2C  324A               	rrcf	(___fladd@b+3)^0,f,c
  8119  001D2E  3249               	rrcf	(___fladd@b+2)^0,f,c
  8120  001D30  3248               	rrcf	(___fladd@b+1)^0,f,c
  8121  001D32  3247               	rrcf	___fladd@b^0,f,c
  8122  001D34  2A55               	incf	___fladd@bexp^0,f,c
  8123  001D36  EF2A  F00F         	goto	l3668
  8124  001D3A                     l3632:
  8125  001D3A  504B               	movf	___fladd@a^0,w,c
  8126  001D3C  5C47               	subwf	___fladd@b^0,w,c
  8127  001D3E  504C               	movf	(___fladd@a+1)^0,w,c
  8128  001D40  5848               	subwfb	(___fladd@b+1)^0,w,c
  8129  001D42  504D               	movf	(___fladd@a+2)^0,w,c
  8130  001D44  5849               	subwfb	(___fladd@b+2)^0,w,c
  8131  001D46  504A               	movf	(___fladd@b+3)^0,w,c
  8132  001D48  0A80               	xorlw	128
  8133  001D4A  6E4F               	movwf	??___fladd^0,c
  8134  001D4C  504E               	movf	(___fladd@a+3)^0,w,c
  8135  001D4E  0A80               	xorlw	128
  8136  001D50  584F               	subwfb	??___fladd^0,w,c
  8137  001D52  B0D8               	btfsc	status,0,c
  8138  001D54  EFAE  F00E         	goto	u3351
  8139  001D58  EFB0  F00E         	goto	u3350
  8140  001D5C                     u3351:
  8141  001D5C  EFDB  F00E         	goto	l3642
  8142  001D60                     u3350:
  8143  001D60  5047               	movf	___fladd@b^0,w,c
  8144  001D62  5C4B               	subwf	___fladd@a^0,w,c
  8145  001D64  6E4F               	movwf	??___fladd^0,c
  8146  001D66  5048               	movf	(___fladd@b+1)^0,w,c
  8147  001D68  584C               	subwfb	(___fladd@a+1)^0,w,c
  8148  001D6A  6E50               	movwf	(??___fladd+1)^0,c
  8149  001D6C  5049               	movf	(___fladd@b+2)^0,w,c
  8150  001D6E  584D               	subwfb	(___fladd@a+2)^0,w,c
  8151  001D70  6E51               	movwf	(??___fladd+2)^0,c
  8152  001D72  504A               	movf	(___fladd@b+3)^0,w,c
  8153  001D74  584E               	subwfb	(___fladd@a+3)^0,w,c
  8154  001D76  6E52               	movwf	(??___fladd+3)^0,c
  8155  001D78  0EFF               	movlw	255
  8156  001D7A  244F               	addwf	??___fladd^0,w,c
  8157  001D7C  6E47               	movwf	___fladd@b^0,c
  8158  001D7E  0EFF               	movlw	255
  8159  001D80  2050               	addwfc	(??___fladd+1)^0,w,c
  8160  001D82  6E48               	movwf	(___fladd@b+1)^0,c
  8161  001D84  0EFF               	movlw	255
  8162  001D86  2051               	addwfc	(??___fladd+2)^0,w,c
  8163  001D88  6E49               	movwf	(___fladd@b+2)^0,c
  8164  001D8A  0EFF               	movlw	255
  8165  001D8C  2052               	addwfc	(??___fladd+3)^0,w,c
  8166  001D8E  6E4A               	movwf	(___fladd@b+3)^0,c
  8167  001D90  0E80               	movlw	128
  8168  001D92  1A53               	xorwf	___fladd@signs^0,f,c
  8169  001D94  6C56               	negf	___fladd@grs^0,c
  8170  001D96  5056               	movf	___fladd@grs^0,w,c
  8171  001D98  A4D8               	btfss	status,2,c
  8172  001D9A  EFD1  F00E         	goto	u3361
  8173  001D9E  EFD3  F00E         	goto	u3360
  8174  001DA2                     u3361:
  8175  001DA2  EFE3  F00E         	goto	l951
  8176  001DA6                     u3360:
  8177  001DA6  0E01               	movlw	1
  8178  001DA8  2647               	addwf	___fladd@b^0,f,c
  8179  001DAA  0E00               	movlw	0
  8180  001DAC  2248               	addwfc	(___fladd@b+1)^0,f,c
  8181  001DAE  2249               	addwfc	(___fladd@b+2)^0,f,c
  8182  001DB0  224A               	addwfc	(___fladd@b+3)^0,f,c
  8183  001DB2  EFE3  F00E         	goto	l951
  8184  001DB6                     l3642:
  8185  001DB6  504B               	movf	___fladd@a^0,w,c
  8186  001DB8  5E47               	subwf	___fladd@b^0,f,c
  8187  001DBA  504C               	movf	(___fladd@a+1)^0,w,c
  8188  001DBC  5A48               	subwfb	(___fladd@b+1)^0,f,c
  8189  001DBE  504D               	movf	(___fladd@a+2)^0,w,c
  8190  001DC0  5A49               	subwfb	(___fladd@b+2)^0,f,c
  8191  001DC2  504E               	movf	(___fladd@a+3)^0,w,c
  8192  001DC4  5A4A               	subwfb	(___fladd@b+3)^0,f,c
  8193  001DC6                     l951:
  8194  001DC6  5047               	movf	___fladd@b^0,w,c
  8195  001DC8  1048               	iorwf	(___fladd@b+1)^0,w,c
  8196  001DCA  1049               	iorwf	(___fladd@b+2)^0,w,c
  8197  001DCC  104A               	iorwf	(___fladd@b+3)^0,w,c
  8198  001DCE  A4D8               	btfss	status,2,c
  8199  001DD0  EFEC  F00E         	goto	u3371
  8200  001DD4  EFEE  F00E         	goto	u3370
  8201  001DD8                     u3371:
  8202  001DD8  EF23  F00F         	goto	l3666
  8203  001DDC                     u3370:
  8204  001DDC  5056               	movf	___fladd@grs^0,w,c
  8205  001DDE  A4D8               	btfss	status,2,c
  8206  001DE0  EFF4  F00E         	goto	u3381
  8207  001DE4  EFF6  F00E         	goto	u3380
  8208  001DE8                     u3381:
  8209  001DE8  EF23  F00F         	goto	l3666
  8210  001DEC                     u3380:
  8211  001DEC  0E00               	movlw	0
  8212  001DEE  6E47               	movwf	?___fladd^0,c
  8213  001DF0  0E00               	movlw	0
  8214  001DF2  6E48               	movwf	(?___fladd+1)^0,c
  8215  001DF4  0E00               	movlw	0
  8216  001DF6  6E49               	movwf	(?___fladd+2)^0,c
  8217  001DF8  0E00               	movlw	0
  8218  001DFA  6E4A               	movwf	(?___fladd+3)^0,c
  8219  001DFC  EFBE  F00F         	goto	l943
  8220  001E00                     l3650:
  8221  001E00  90D8               	bcf	status,0,c
  8222  001E02  3647               	rlcf	___fladd@b^0,f,c
  8223  001E04  3648               	rlcf	(___fladd@b+1)^0,f,c
  8224  001E06  3649               	rlcf	(___fladd@b+2)^0,f,c
  8225  001E08  364A               	rlcf	(___fladd@b+3)^0,f,c
  8226  001E0A  AE56               	btfss	___fladd@grs^0,7,c
  8227  001E0C  EF0A  F00F         	goto	u3391
  8228  001E10  EF0C  F00F         	goto	u3390
  8229  001E14                     u3391:
  8230  001E14  EF0D  F00F         	goto	l3656
  8231  001E18                     u3390:
  8232  001E18  8047               	bsf	___fladd@b^0,0,c
  8233  001E1A                     l3656:
  8234  001E1A  A056               	btfss	___fladd@grs^0,0,c
  8235  001E1C  EF12  F00F         	goto	u3401
  8236  001E20  EF14  F00F         	goto	u3400
  8237  001E24                     u3401:
  8238  001E24  EF18  F00F         	goto	l3660
  8239  001E28                     u3400:
  8240  001E28  80D8               	bsf	status,0,c
  8241  001E2A  3656               	rlcf	___fladd@grs^0,f,c
  8242  001E2C  EF1A  F00F         	goto	l3662
  8243  001E30                     l3660:
  8244  001E30  90D8               	bcf	status,0,c
  8245  001E32  3656               	rlcf	___fladd@grs^0,f,c
  8246  001E34                     l3662:
  8247  001E34  5055               	movf	___fladd@bexp^0,w,c
  8248  001E36  B4D8               	btfsc	status,2,c
  8249  001E38  EF20  F00F         	goto	u3411
  8250  001E3C  EF22  F00F         	goto	u3410
  8251  001E40                     u3411:
  8252  001E40  EF23  F00F         	goto	l3666
  8253  001E44                     u3410:
  8254  001E44  0655               	decf	___fladd@bexp^0,f,c
  8255  001E46                     l3666:
  8256  001E46  AE49               	btfss	(___fladd@b+2)^0,7,c
  8257  001E48  EF28  F00F         	goto	u3421
  8258  001E4C  EF2A  F00F         	goto	u3420
  8259  001E50                     u3421:
  8260  001E50  EF00  F00F         	goto	l3650
  8261  001E54                     u3420:
  8262  001E54                     l3668:
  8263  001E54  0E00               	movlw	0
  8264  001E56  6E54               	movwf	___fladd@aexp^0,c
  8265  001E58  AE56               	btfss	___fladd@grs^0,7,c
  8266  001E5A  EF31  F00F         	goto	u3431
  8267  001E5E  EF33  F00F         	goto	u3430
  8268  001E62                     u3431:
  8269  001E62  EF4B  F00F         	goto	l960
  8270  001E66                     u3430:
  8271  001E66  C056  F04F         	movff	___fladd@grs,??___fladd
  8272  001E6A  0E7F               	movlw	127
  8273  001E6C  164F               	andwf	??___fladd^0,f,c
  8274  001E6E  B4D8               	btfsc	status,2,c
  8275  001E70  EF3C  F00F         	goto	u3441
  8276  001E74  EF3E  F00F         	goto	u3440
  8277  001E78                     u3441:
  8278  001E78  EF42  F00F         	goto	l961
  8279  001E7C                     u3440:
  8280  001E7C                     l3674:
  8281  001E7C  0E01               	movlw	1
  8282  001E7E  6E54               	movwf	___fladd@aexp^0,c
  8283  001E80  EF4B  F00F         	goto	l960
  8284  001E84                     l961:
  8285  001E84  A047               	btfss	___fladd@b^0,0,c
  8286  001E86  EF47  F00F         	goto	u3451
  8287  001E8A  EF49  F00F         	goto	u3450
  8288  001E8E                     u3451:
  8289  001E8E  EF4B  F00F         	goto	l960
  8290  001E92                     u3450:
  8291  001E92  EF3E  F00F         	goto	l3674
  8292  001E96                     l960:
  8293  001E96  5054               	movf	___fladd@aexp^0,w,c
  8294  001E98  B4D8               	btfsc	status,2,c
  8295  001E9A  EF51  F00F         	goto	u3461
  8296  001E9E  EF53  F00F         	goto	u3460
  8297  001EA2                     u3461:
  8298  001EA2  EF7E  F00F         	goto	l3686
  8299  001EA6                     u3460:
  8300  001EA6  0E01               	movlw	1
  8301  001EA8  2647               	addwf	___fladd@b^0,f,c
  8302  001EAA  0E00               	movlw	0
  8303  001EAC  2248               	addwfc	(___fladd@b+1)^0,f,c
  8304  001EAE  2249               	addwfc	(___fladd@b+2)^0,f,c
  8305  001EB0  224A               	addwfc	(___fladd@b+3)^0,f,c
  8306  001EB2  A04A               	btfss	(___fladd@b+3)^0,0,c
  8307  001EB4  EF5E  F00F         	goto	u3471
  8308  001EB8  EF60  F00F         	goto	u3470
  8309  001EBC                     u3471:
  8310  001EBC  EF7E  F00F         	goto	l3686
  8311  001EC0                     u3470:
  8312  001EC0  C047  F04F         	movff	___fladd@b,??___fladd
  8313  001EC4  C048  F050         	movff	___fladd@b+1,??___fladd+1
  8314  001EC8  C049  F051         	movff	___fladd@b+2,??___fladd+2
  8315  001ECC  C04A  F052         	movff	___fladd@b+3,??___fladd+3
  8316  001ED0  3452               	rlcf	(??___fladd+3)^0,w,c
  8317  001ED2  3252               	rrcf	(??___fladd+3)^0,f,c
  8318  001ED4  3251               	rrcf	(??___fladd+2)^0,f,c
  8319  001ED6  3250               	rrcf	(??___fladd+1)^0,f,c
  8320  001ED8  324F               	rrcf	??___fladd^0,f,c
  8321  001EDA  C04F  F047         	movff	??___fladd,___fladd@b
  8322  001EDE  C050  F048         	movff	??___fladd+1,___fladd@b+1
  8323  001EE2  C051  F049         	movff	??___fladd+2,___fladd@b+2
  8324  001EE6  C052  F04A         	movff	??___fladd+3,___fladd@b+3
  8325  001EEA  2855               	incf	___fladd@bexp^0,w,c
  8326  001EEC  B4D8               	btfsc	status,2,c
  8327  001EEE  EF7B  F00F         	goto	u3481
  8328  001EF2  EF7D  F00F         	goto	u3480
  8329  001EF6                     u3481:
  8330  001EF6  EF7E  F00F         	goto	l3686
  8331  001EFA                     u3480:
  8332  001EFA  2A55               	incf	___fladd@bexp^0,f,c
  8333  001EFC                     l3686:
  8334  001EFC  2855               	incf	___fladd@bexp^0,w,c
  8335  001EFE  B4D8               	btfsc	status,2,c
  8336  001F00  EF84  F00F         	goto	u3491
  8337  001F04  EF86  F00F         	goto	u3490
  8338  001F08                     u3491:
  8339  001F08  EF8E  F00F         	goto	l3690
  8340  001F0C                     u3490:
  8341  001F0C  5055               	movf	___fladd@bexp^0,w,c
  8342  001F0E  A4D8               	btfss	status,2,c
  8343  001F10  EF8C  F00F         	goto	u3501
  8344  001F14  EF8E  F00F         	goto	u3500
  8345  001F18                     u3501:
  8346  001F18  EFA0  F00F         	goto	l3694
  8347  001F1C                     u3500:
  8348  001F1C                     l3690:
  8349  001F1C  0E00               	movlw	0
  8350  001F1E  6E47               	movwf	___fladd@b^0,c
  8351  001F20  0E00               	movlw	0
  8352  001F22  6E48               	movwf	(___fladd@b+1)^0,c
  8353  001F24  0E00               	movlw	0
  8354  001F26  6E49               	movwf	(___fladd@b+2)^0,c
  8355  001F28  0E00               	movlw	0
  8356  001F2A  6E4A               	movwf	(___fladd@b+3)^0,c
  8357  001F2C  5055               	movf	___fladd@bexp^0,w,c
  8358  001F2E  A4D8               	btfss	status,2,c
  8359  001F30  EF9C  F00F         	goto	u3511
  8360  001F34  EF9E  F00F         	goto	u3510
  8361  001F38                     u3511:
  8362  001F38  EFA0  F00F         	goto	l3694
  8363  001F3C                     u3510:
  8364  001F3C  0E00               	movlw	0
  8365  001F3E  6E53               	movwf	___fladd@signs^0,c
  8366  001F40                     l3694:
  8367  001F40  A055               	btfss	___fladd@bexp^0,0,c
  8368  001F42  EFA5  F00F         	goto	u3521
  8369  001F46  EFA7  F00F         	goto	u3520
  8370  001F4A                     u3521:
  8371  001F4A  EFAA  F00F         	goto	l3698
  8372  001F4E                     u3520:
  8373  001F4E  8E49               	bsf	(___fladd@b+2)^0,7,c
  8374  001F50  EFAB  F00F         	goto	l3700
  8375  001F54                     l3698:
  8376  001F54  9E49               	bcf	(___fladd@b+2)^0,7,c
  8377  001F56                     l3700:
  8378  001F56  90D8               	bcf	status,0,c
  8379  001F58  3055               	rrcf	___fladd@bexp^0,w,c
  8380  001F5A  6E4A               	movwf	(___fladd@b+3)^0,c
  8381  001F5C  AE53               	btfss	___fladd@signs^0,7,c
  8382  001F5E  EFB3  F00F         	goto	u3531
  8383  001F62  EFB5  F00F         	goto	u3530
  8384  001F66                     u3531:
  8385  001F66  EFB6  F00F         	goto	l3706
  8386  001F6A                     u3530:
  8387  001F6A  8E4A               	bsf	(___fladd@b+3)^0,7,c
  8388  001F6C                     l3706:
  8389  001F6C  C047  F047         	movff	___fladd@b,?___fladd
  8390  001F70  C048  F048         	movff	___fladd@b+1,?___fladd+1
  8391  001F74  C049  F049         	movff	___fladd@b+2,?___fladd+2
  8392  001F78  C04A  F04A         	movff	___fladd@b+3,?___fladd+3
  8393  001F7C                     l943:
  8394  001F7C  0012               	return		;funcret
  8395  001F7E                     __end_of___fladd:
  8396                           	callstack 0
  8397                           
  8398 ;; *************** function ___flneg *****************
  8399 ;; Defined at:
  8400 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;  f1              4    0[COMRAM] unsigned char 
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;		None
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  4    0[COMRAM] unsigned char 
  8407 ;; Registers used:
  8408 ;;		wreg, status,2, status,0
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8414 ;;      Params:         4       0       0       0       0       0       0       0       0
  8415 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8417 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8418 ;;Total ram usage:        4 bytes
  8419 ;; Hardware stack levels used: 1
  8420 ;; Hardware stack levels required when called: 1
  8421 ;; This function calls:
  8422 ;;		Nothing
  8423 ;; This function is called by:
  8424 ;;		_efgtoa
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text27
  8429  004628                     __ptext27:
  8430                           	callstack 0
  8431  004628                     ___flneg:
  8432                           	callstack 25
  8433  004628  5001               	movf	___flneg@f1^0,w,c
  8434  00462A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8435  00462C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8436  00462E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8437  004630  B4D8               	btfsc	status,2,c
  8438  004632  EF1D  F023         	goto	u4221
  8439  004636  EF1F  F023         	goto	u4220
  8440  00463A                     u4221:
  8441  00463A  EF27  F023         	goto	l4138
  8442  00463E                     u4220:
  8443  00463E  0E00               	movlw	0
  8444  004640  1A01               	xorwf	___flneg@f1^0,f,c
  8445  004642  0E00               	movlw	0
  8446  004644  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8447  004646  0E00               	movlw	0
  8448  004648  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8449  00464A  0E80               	movlw	128
  8450  00464C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8451  00464E                     l4138:
  8452  00464E  C001  F001         	movff	___flneg@f1,?___flneg
  8453  004652  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8454  004656  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8455  00465A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8456  00465E  0012               	return		;funcret
  8457  004660                     __end_of___flneg:
  8458                           	callstack 0
  8459                           
  8460 ;; *************** function ___flmul *****************
  8461 ;; Defined at:
  8462 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;  b               4   20[COMRAM] unsigned char 
  8465 ;;  a               4   24[COMRAM] unsigned char 
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  prod            4   39[COMRAM] struct .
  8468 ;;  grs             4   33[COMRAM] unsigned long 
  8469 ;;  temp            2   43[COMRAM] struct .
  8470 ;;  bexp            1   38[COMRAM] unsigned char 
  8471 ;;  aexp            1   37[COMRAM] unsigned char 
  8472 ;;  sign            1   32[COMRAM] unsigned char 
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  4   20[COMRAM] unsigned char 
  8475 ;; Registers used:
  8476 ;;		wreg, status,2, status,0, prodl, prodh
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8482 ;;      Params:         8       0       0       0       0       0       0       0       0
  8483 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8484 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8485 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8486 ;;Total ram usage:       25 bytes
  8487 ;; Hardware stack levels used: 1
  8488 ;; Hardware stack levels required when called: 1
  8489 ;; This function calls:
  8490 ;;		Nothing
  8491 ;; This function is called by:
  8492 ;;		_ReadADC
  8493 ;;		_efgtoa
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           	psect	text28
  8498  001F7E                     __ptext28:
  8499                           	callstack 0
  8500  001F7E                     ___flmul:
  8501                           	callstack 25
  8502  001F7E  5018               	movf	(___flmul@b+3)^0,w,c
  8503  001F80  0B80               	andlw	128
  8504  001F82  6E21               	movwf	___flmul@sign^0,c
  8505  001F84  5018               	movf	(___flmul@b+3)^0,w,c
  8506  001F86  2418               	addwf	(___flmul@b+3)^0,w,c
  8507  001F88  6E27               	movwf	___flmul@bexp^0,c
  8508  001F8A  AE17               	btfss	(___flmul@b+2)^0,7,c
  8509  001F8C  EFCA  F00F         	goto	u3831
  8510  001F90  EFCC  F00F         	goto	u3830
  8511  001F94                     u3831:
  8512  001F94  EFCD  F00F         	goto	l3886
  8513  001F98                     u3830:
  8514  001F98  8027               	bsf	___flmul@bexp^0,0,c
  8515  001F9A                     l3886:
  8516  001F9A  5027               	movf	___flmul@bexp^0,w,c
  8517  001F9C  B4D8               	btfsc	status,2,c
  8518  001F9E  EFD3  F00F         	goto	u3841
  8519  001FA2  EFD5  F00F         	goto	u3840
  8520  001FA6                     u3841:
  8521  001FA6  EFE8  F00F         	goto	l3894
  8522  001FAA                     u3840:
  8523  001FAA  2827               	incf	___flmul@bexp^0,w,c
  8524  001FAC  A4D8               	btfss	status,2,c
  8525  001FAE  EFDB  F00F         	goto	u3851
  8526  001FB2  EFDD  F00F         	goto	u3850
  8527  001FB6                     u3851:
  8528  001FB6  EFE5  F00F         	goto	l3892
  8529  001FBA                     u3850:
  8530  001FBA  0E00               	movlw	0
  8531  001FBC  6E15               	movwf	___flmul@b^0,c
  8532  001FBE  0E00               	movlw	0
  8533  001FC0  6E16               	movwf	(___flmul@b+1)^0,c
  8534  001FC2  0E00               	movlw	0
  8535  001FC4  6E17               	movwf	(___flmul@b+2)^0,c
  8536  001FC6  0E00               	movlw	0
  8537  001FC8  6E18               	movwf	(___flmul@b+3)^0,c
  8538  001FCA                     l3892:
  8539  001FCA  8E17               	bsf	(___flmul@b+2)^0,7,c
  8540  001FCC  EFF0  F00F         	goto	l3896
  8541  001FD0                     l3894:
  8542  001FD0  0E00               	movlw	0
  8543  001FD2  6E15               	movwf	___flmul@b^0,c
  8544  001FD4  0E00               	movlw	0
  8545  001FD6  6E16               	movwf	(___flmul@b+1)^0,c
  8546  001FD8  0E00               	movlw	0
  8547  001FDA  6E17               	movwf	(___flmul@b+2)^0,c
  8548  001FDC  0E00               	movlw	0
  8549  001FDE  6E18               	movwf	(___flmul@b+3)^0,c
  8550  001FE0                     l3896:
  8551  001FE0  501C               	movf	(___flmul@a+3)^0,w,c
  8552  001FE2  0B80               	andlw	128
  8553  001FE4  1A21               	xorwf	___flmul@sign^0,f,c
  8554  001FE6  501C               	movf	(___flmul@a+3)^0,w,c
  8555  001FE8  241C               	addwf	(___flmul@a+3)^0,w,c
  8556  001FEA  6E26               	movwf	___flmul@aexp^0,c
  8557  001FEC  AE1B               	btfss	(___flmul@a+2)^0,7,c
  8558  001FEE  EFFB  F00F         	goto	u3861
  8559  001FF2  EFFD  F00F         	goto	u3860
  8560  001FF6                     u3861:
  8561  001FF6  EFFE  F00F         	goto	l3904
  8562  001FFA                     u3860:
  8563  001FFA  8026               	bsf	___flmul@aexp^0,0,c
  8564  001FFC                     l3904:
  8565  001FFC  5026               	movf	___flmul@aexp^0,w,c
  8566  001FFE  B4D8               	btfsc	status,2,c
  8567  002000  EF04  F010         	goto	u3871
  8568  002004  EF06  F010         	goto	u3870
  8569  002008                     u3871:
  8570  002008  EF19  F010         	goto	l3912
  8571  00200C                     u3870:
  8572  00200C  2826               	incf	___flmul@aexp^0,w,c
  8573  00200E  A4D8               	btfss	status,2,c
  8574  002010  EF0C  F010         	goto	u3881
  8575  002014  EF0E  F010         	goto	u3880
  8576  002018                     u3881:
  8577  002018  EF16  F010         	goto	l3910
  8578  00201C                     u3880:
  8579  00201C  0E00               	movlw	0
  8580  00201E  6E19               	movwf	___flmul@a^0,c
  8581  002020  0E00               	movlw	0
  8582  002022  6E1A               	movwf	(___flmul@a+1)^0,c
  8583  002024  0E00               	movlw	0
  8584  002026  6E1B               	movwf	(___flmul@a+2)^0,c
  8585  002028  0E00               	movlw	0
  8586  00202A  6E1C               	movwf	(___flmul@a+3)^0,c
  8587  00202C                     l3910:
  8588  00202C  8E1B               	bsf	(___flmul@a+2)^0,7,c
  8589  00202E  EF21  F010         	goto	l1020
  8590  002032                     l3912:
  8591  002032  0E00               	movlw	0
  8592  002034  6E19               	movwf	___flmul@a^0,c
  8593  002036  0E00               	movlw	0
  8594  002038  6E1A               	movwf	(___flmul@a+1)^0,c
  8595  00203A  0E00               	movlw	0
  8596  00203C  6E1B               	movwf	(___flmul@a+2)^0,c
  8597  00203E  0E00               	movlw	0
  8598  002040  6E1C               	movwf	(___flmul@a+3)^0,c
  8599  002042                     l1020:
  8600  002042  5026               	movf	___flmul@aexp^0,w,c
  8601  002044  B4D8               	btfsc	status,2,c
  8602  002046  EF27  F010         	goto	u3891
  8603  00204A  EF29  F010         	goto	u3890
  8604  00204E                     u3891:
  8605  00204E  EF31  F010         	goto	l3916
  8606  002052                     u3890:
  8607  002052  5027               	movf	___flmul@bexp^0,w,c
  8608  002054  A4D8               	btfss	status,2,c
  8609  002056  EF2F  F010         	goto	u3901
  8610  00205A  EF31  F010         	goto	u3900
  8611  00205E                     u3901:
  8612  00205E  EF3B  F010         	goto	l3920
  8613  002062                     u3900:
  8614  002062                     l3916:
  8615  002062  0E00               	movlw	0
  8616  002064  6E15               	movwf	?___flmul^0,c
  8617  002066  0E00               	movlw	0
  8618  002068  6E16               	movwf	(?___flmul+1)^0,c
  8619  00206A  0E00               	movlw	0
  8620  00206C  6E17               	movwf	(?___flmul+2)^0,c
  8621  00206E  0E00               	movlw	0
  8622  002070  6E18               	movwf	(?___flmul+3)^0,c
  8623  002072  EFD3  F011         	goto	l1024
  8624  002076                     l3920:
  8625  002076  501B               	movf	(___flmul@a+2)^0,w,c
  8626  002078  0215               	mulwf	___flmul@b^0,c
  8627  00207A  CFF3 F02C          	movff	prodl,___flmul@temp
  8628  00207E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8629  002082  502C               	movf	___flmul@temp^0,w,c
  8630  002084  6E22               	movwf	___flmul@grs^0,c
  8631  002086  6A23               	clrf	(___flmul@grs+1)^0,c
  8632  002088  6A24               	clrf	(___flmul@grs+2)^0,c
  8633  00208A  6A25               	clrf	(___flmul@grs+3)^0,c
  8634  00208C  502D               	movf	(___flmul@temp+1)^0,w,c
  8635  00208E  6E28               	movwf	___flmul@prod^0,c
  8636  002090  6A29               	clrf	(___flmul@prod+1)^0,c
  8637  002092  6A2A               	clrf	(___flmul@prod+2)^0,c
  8638  002094  6A2B               	clrf	(___flmul@prod+3)^0,c
  8639  002096  501A               	movf	(___flmul@a+1)^0,w,c
  8640  002098  0216               	mulwf	(___flmul@b+1)^0,c
  8641  00209A  CFF3 F02C          	movff	prodl,___flmul@temp
  8642  00209E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8643  0020A2  502C               	movf	___flmul@temp^0,w,c
  8644  0020A4  2622               	addwf	___flmul@grs^0,f,c
  8645  0020A6  0E00               	movlw	0
  8646  0020A8  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8647  0020AA  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8648  0020AC  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8649  0020AE  502D               	movf	(___flmul@temp+1)^0,w,c
  8650  0020B0  2628               	addwf	___flmul@prod^0,f,c
  8651  0020B2  0E00               	movlw	0
  8652  0020B4  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8653  0020B6  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8654  0020B8  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8655  0020BA  5019               	movf	___flmul@a^0,w,c
  8656  0020BC  0217               	mulwf	(___flmul@b+2)^0,c
  8657  0020BE  CFF3 F02C          	movff	prodl,___flmul@temp
  8658  0020C2  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8659  0020C6  502C               	movf	___flmul@temp^0,w,c
  8660  0020C8  2622               	addwf	___flmul@grs^0,f,c
  8661  0020CA  0E00               	movlw	0
  8662  0020CC  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8663  0020CE  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8664  0020D0  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8665  0020D2  502D               	movf	(___flmul@temp+1)^0,w,c
  8666  0020D4  2628               	addwf	___flmul@prod^0,f,c
  8667  0020D6  0E00               	movlw	0
  8668  0020D8  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8669  0020DA  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8670  0020DC  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8671  0020DE  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8672  0020E2  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8673  0020E6  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8674  0020EA  6A22               	clrf	___flmul@grs^0,c
  8675  0020EC  5019               	movf	___flmul@a^0,w,c
  8676  0020EE  0216               	mulwf	(___flmul@b+1)^0,c
  8677  0020F0  CFF3 F02C          	movff	prodl,___flmul@temp
  8678  0020F4  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8679  0020F8  502C               	movf	___flmul@temp^0,w,c
  8680  0020FA  2622               	addwf	___flmul@grs^0,f,c
  8681  0020FC  502D               	movf	(___flmul@temp+1)^0,w,c
  8682  0020FE  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8683  002100  0E00               	movlw	0
  8684  002102  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8685  002104  0E00               	movlw	0
  8686  002106  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8687  002108  501A               	movf	(___flmul@a+1)^0,w,c
  8688  00210A  0215               	mulwf	___flmul@b^0,c
  8689  00210C  CFF3 F02C          	movff	prodl,___flmul@temp
  8690  002110  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8691  002114  502C               	movf	___flmul@temp^0,w,c
  8692  002116  2622               	addwf	___flmul@grs^0,f,c
  8693  002118  502D               	movf	(___flmul@temp+1)^0,w,c
  8694  00211A  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8695  00211C  0E00               	movlw	0
  8696  00211E  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8697  002120  0E00               	movlw	0
  8698  002122  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8699  002124  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8700  002128  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8701  00212C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8702  002130  6A22               	clrf	___flmul@grs^0,c
  8703  002132  5019               	movf	___flmul@a^0,w,c
  8704  002134  0215               	mulwf	___flmul@b^0,c
  8705  002136  CFF3 F02C          	movff	prodl,___flmul@temp
  8706  00213A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8707  00213E  502C               	movf	___flmul@temp^0,w,c
  8708  002140  2622               	addwf	___flmul@grs^0,f,c
  8709  002142  502D               	movf	(___flmul@temp+1)^0,w,c
  8710  002144  2223               	addwfc	(___flmul@grs+1)^0,f,c
  8711  002146  0E00               	movlw	0
  8712  002148  2224               	addwfc	(___flmul@grs+2)^0,f,c
  8713  00214A  0E00               	movlw	0
  8714  00214C  2225               	addwfc	(___flmul@grs+3)^0,f,c
  8715  00214E  501B               	movf	(___flmul@a+2)^0,w,c
  8716  002150  0216               	mulwf	(___flmul@b+1)^0,c
  8717  002152  CFF3 F02C          	movff	prodl,___flmul@temp
  8718  002156  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8719  00215A  502C               	movf	___flmul@temp^0,w,c
  8720  00215C  2628               	addwf	___flmul@prod^0,f,c
  8721  00215E  502D               	movf	(___flmul@temp+1)^0,w,c
  8722  002160  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8723  002162  0E00               	movlw	0
  8724  002164  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8725  002166  0E00               	movlw	0
  8726  002168  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8727  00216A  501A               	movf	(___flmul@a+1)^0,w,c
  8728  00216C  0217               	mulwf	(___flmul@b+2)^0,c
  8729  00216E  CFF3 F02C          	movff	prodl,___flmul@temp
  8730  002172  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8731  002176  502C               	movf	___flmul@temp^0,w,c
  8732  002178  2628               	addwf	___flmul@prod^0,f,c
  8733  00217A  502D               	movf	(___flmul@temp+1)^0,w,c
  8734  00217C  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8735  00217E  0E00               	movlw	0
  8736  002180  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8737  002182  0E00               	movlw	0
  8738  002184  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8739  002186  501B               	movf	(___flmul@a+2)^0,w,c
  8740  002188  0217               	mulwf	(___flmul@b+2)^0,c
  8741  00218A  CFF3 F02C          	movff	prodl,___flmul@temp
  8742  00218E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  8743  002192  502C               	movf	___flmul@temp^0,w,c
  8744  002194  6E1D               	movwf	??___flmul^0,c
  8745  002196  502D               	movf	(___flmul@temp+1)^0,w,c
  8746  002198  6E1E               	movwf	(??___flmul+1)^0,c
  8747  00219A  6A1F               	clrf	(??___flmul+2)^0,c
  8748  00219C  6A20               	clrf	(??___flmul+3)^0,c
  8749  00219E  C01F  F020         	movff	??___flmul+2,??___flmul+3
  8750  0021A2  C01E  F01F         	movff	??___flmul+1,??___flmul+2
  8751  0021A6  C01D  F01E         	movff	??___flmul,??___flmul+1
  8752  0021AA  6A1D               	clrf	??___flmul^0,c
  8753  0021AC  501D               	movf	??___flmul^0,w,c
  8754  0021AE  2628               	addwf	___flmul@prod^0,f,c
  8755  0021B0  501E               	movf	(??___flmul+1)^0,w,c
  8756  0021B2  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8757  0021B4  501F               	movf	(??___flmul+2)^0,w,c
  8758  0021B6  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8759  0021B8  5020               	movf	(??___flmul+3)^0,w,c
  8760  0021BA  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8761  0021BC  C022  F01D         	movff	___flmul@grs,??___flmul
  8762  0021C0  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
  8763  0021C4  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
  8764  0021C8  C025  F020         	movff	___flmul@grs+3,??___flmul+3
  8765  0021CC  0E19               	movlw	25
  8766  0021CE  EFEE  F010         	goto	u3910
  8767  0021D2                     u3915:
  8768  0021D2  90D8               	bcf	status,0,c
  8769  0021D4  3220               	rrcf	(??___flmul+3)^0,f,c
  8770  0021D6  321F               	rrcf	(??___flmul+2)^0,f,c
  8771  0021D8  321E               	rrcf	(??___flmul+1)^0,f,c
  8772  0021DA  321D               	rrcf	??___flmul^0,f,c
  8773  0021DC                     u3910:
  8774  0021DC  2EE8               	decfsz	wreg,f,c
  8775  0021DE  EFE9  F010         	goto	u3915
  8776  0021E2  501D               	movf	??___flmul^0,w,c
  8777  0021E4  2628               	addwf	___flmul@prod^0,f,c
  8778  0021E6  501E               	movf	(??___flmul+1)^0,w,c
  8779  0021E8  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8780  0021EA  501F               	movf	(??___flmul+2)^0,w,c
  8781  0021EC  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8782  0021EE  5020               	movf	(??___flmul+3)^0,w,c
  8783  0021F0  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8784  0021F2  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  8785  0021F6  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  8786  0021FA  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  8787  0021FE  6A22               	clrf	___flmul@grs^0,c
  8788  002200  5026               	movf	___flmul@aexp^0,w,c
  8789  002202  C027  F01D         	movff	___flmul@bexp,??___flmul
  8790  002206  6A1E               	clrf	(??___flmul+1)^0,c
  8791  002208  261D               	addwf	??___flmul^0,f,c
  8792  00220A  0E00               	movlw	0
  8793  00220C  221E               	addwfc	(??___flmul+1)^0,f,c
  8794  00220E  0E82               	movlw	130
  8795  002210  241D               	addwf	??___flmul^0,w,c
  8796  002212  6E2C               	movwf	___flmul@temp^0,c
  8797  002214  0EFF               	movlw	255
  8798  002216  201E               	addwfc	(??___flmul+1)^0,w,c
  8799  002218  6E2D               	movwf	(___flmul@temp+1)^0,c
  8800  00221A  EF24  F011         	goto	l3968
  8801  00221E                     l3962:
  8802  00221E  90D8               	bcf	status,0,c
  8803  002220  3628               	rlcf	___flmul@prod^0,f,c
  8804  002222  3629               	rlcf	(___flmul@prod+1)^0,f,c
  8805  002224  362A               	rlcf	(___flmul@prod+2)^0,f,c
  8806  002226  362B               	rlcf	(___flmul@prod+3)^0,f,c
  8807  002228  AE25               	btfss	(___flmul@grs+3)^0,7,c
  8808  00222A  EF19  F011         	goto	u3921
  8809  00222E  EF1B  F011         	goto	u3920
  8810  002232                     u3921:
  8811  002232  EF1C  F011         	goto	l1027
  8812  002236                     u3920:
  8813  002236  8028               	bsf	___flmul@prod^0,0,c
  8814  002238                     l1027:
  8815  002238  90D8               	bcf	status,0,c
  8816  00223A  3622               	rlcf	___flmul@grs^0,f,c
  8817  00223C  3623               	rlcf	(___flmul@grs+1)^0,f,c
  8818  00223E  3624               	rlcf	(___flmul@grs+2)^0,f,c
  8819  002240  3625               	rlcf	(___flmul@grs+3)^0,f,c
  8820  002242  062C               	decf	___flmul@temp^0,f,c
  8821  002244  A0D8               	btfss	status,0,c
  8822  002246  062D               	decf	(___flmul@temp+1)^0,f,c
  8823  002248                     l3968:
  8824  002248  AE2A               	btfss	(___flmul@prod+2)^0,7,c
  8825  00224A  EF29  F011         	goto	u3931
  8826  00224E  EF2B  F011         	goto	u3930
  8827  002252                     u3931:
  8828  002252  EF0F  F011         	goto	l3962
  8829  002256                     u3930:
  8830  002256  0E00               	movlw	0
  8831  002258  6E26               	movwf	___flmul@aexp^0,c
  8832  00225A  AE25               	btfss	(___flmul@grs+3)^0,7,c
  8833  00225C  EF32  F011         	goto	u3941
  8834  002260  EF34  F011         	goto	u3940
  8835  002264                     u3941:
  8836  002264  EF58  F011         	goto	l1029
  8837  002268                     u3940:
  8838  002268  0EFF               	movlw	255
  8839  00226A  1422               	andwf	___flmul@grs^0,w,c
  8840  00226C  6E1D               	movwf	??___flmul^0,c
  8841  00226E  0EFF               	movlw	255
  8842  002270  1423               	andwf	(___flmul@grs+1)^0,w,c
  8843  002272  6E1E               	movwf	(??___flmul+1)^0,c
  8844  002274  0EFF               	movlw	255
  8845  002276  1424               	andwf	(___flmul@grs+2)^0,w,c
  8846  002278  6E1F               	movwf	(??___flmul+2)^0,c
  8847  00227A  0E7F               	movlw	127
  8848  00227C  1425               	andwf	(___flmul@grs+3)^0,w,c
  8849  00227E  6E20               	movwf	(??___flmul+3)^0,c
  8850  002280  501D               	movf	??___flmul^0,w,c
  8851  002282  101E               	iorwf	(??___flmul+1)^0,w,c
  8852  002284  101F               	iorwf	(??___flmul+2)^0,w,c
  8853  002286  1020               	iorwf	(??___flmul+3)^0,w,c
  8854  002288  B4D8               	btfsc	status,2,c
  8855  00228A  EF49  F011         	goto	u3951
  8856  00228E  EF4B  F011         	goto	u3950
  8857  002292                     u3951:
  8858  002292  EF4F  F011         	goto	l1030
  8859  002296                     u3950:
  8860  002296                     l3976:
  8861  002296  0E01               	movlw	1
  8862  002298  6E26               	movwf	___flmul@aexp^0,c
  8863  00229A  EF58  F011         	goto	l1029
  8864  00229E                     l1030:
  8865  00229E  A028               	btfss	___flmul@prod^0,0,c
  8866  0022A0  EF54  F011         	goto	u3961
  8867  0022A4  EF56  F011         	goto	u3960
  8868  0022A8                     u3961:
  8869  0022A8  EF58  F011         	goto	l1029
  8870  0022AC                     u3960:
  8871  0022AC  EF4B  F011         	goto	l3976
  8872  0022B0                     l1029:
  8873  0022B0  5026               	movf	___flmul@aexp^0,w,c
  8874  0022B2  B4D8               	btfsc	status,2,c
  8875  0022B4  EF5E  F011         	goto	u3971
  8876  0022B8  EF60  F011         	goto	u3970
  8877  0022BC                     u3971:
  8878  0022BC  EF84  F011         	goto	l3988
  8879  0022C0                     u3970:
  8880  0022C0  0E01               	movlw	1
  8881  0022C2  2628               	addwf	___flmul@prod^0,f,c
  8882  0022C4  0E00               	movlw	0
  8883  0022C6  2229               	addwfc	(___flmul@prod+1)^0,f,c
  8884  0022C8  222A               	addwfc	(___flmul@prod+2)^0,f,c
  8885  0022CA  222B               	addwfc	(___flmul@prod+3)^0,f,c
  8886  0022CC  A02B               	btfss	(___flmul@prod+3)^0,0,c
  8887  0022CE  EF6B  F011         	goto	u3981
  8888  0022D2  EF6D  F011         	goto	u3980
  8889  0022D6                     u3981:
  8890  0022D6  EF84  F011         	goto	l3988
  8891  0022DA                     u3980:
  8892  0022DA  C028  F01D         	movff	___flmul@prod,??___flmul
  8893  0022DE  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
  8894  0022E2  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
  8895  0022E6  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
  8896  0022EA  3420               	rlcf	(??___flmul+3)^0,w,c
  8897  0022EC  3220               	rrcf	(??___flmul+3)^0,f,c
  8898  0022EE  321F               	rrcf	(??___flmul+2)^0,f,c
  8899  0022F0  321E               	rrcf	(??___flmul+1)^0,f,c
  8900  0022F2  321D               	rrcf	??___flmul^0,f,c
  8901  0022F4  C01D  F028         	movff	??___flmul,___flmul@prod
  8902  0022F8  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
  8903  0022FC  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
  8904  002300  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
  8905  002304  4A2C               	infsnz	___flmul@temp^0,f,c
  8906  002306  2A2D               	incf	(___flmul@temp+1)^0,f,c
  8907  002308                     l3988:
  8908  002308  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  8909  00230A  EF8F  F011         	goto	u3991
  8910  00230E  502D               	movf	(___flmul@temp+1)^0,w,c
  8911  002310  E108               	bnz	u3990
  8912  002312  282C               	incf	___flmul@temp^0,w,c
  8913  002314  A0D8               	btfss	status,0,c
  8914  002316  EF8F  F011         	goto	u3991
  8915  00231A  EF91  F011         	goto	u3990
  8916  00231E                     u3991:
  8917  00231E  EF9B  F011         	goto	l3992
  8918  002322                     u3990:
  8919  002322  0E00               	movlw	0
  8920  002324  6E28               	movwf	___flmul@prod^0,c
  8921  002326  0E00               	movlw	0
  8922  002328  6E29               	movwf	(___flmul@prod+1)^0,c
  8923  00232A  0E80               	movlw	128
  8924  00232C  6E2A               	movwf	(___flmul@prod+2)^0,c
  8925  00232E  0E7F               	movlw	127
  8926  002330  6E2B               	movwf	(___flmul@prod+3)^0,c
  8927  002332  EFC9  F011         	goto	l4004
  8928  002336                     l3992:
  8929  002336  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  8930  002338  EFA8  F011         	goto	u4000
  8931  00233C  502D               	movf	(___flmul@temp+1)^0,w,c
  8932  00233E  E106               	bnz	u4001
  8933  002340  042C               	decf	___flmul@temp^0,w,c
  8934  002342  B0D8               	btfsc	status,0,c
  8935  002344  EFA6  F011         	goto	u4001
  8936  002348  EFA8  F011         	goto	u4000
  8937  00234C                     u4001:
  8938  00234C  EFB4  F011         	goto	l1037
  8939  002350                     u4000:
  8940  002350  0E00               	movlw	0
  8941  002352  6E28               	movwf	___flmul@prod^0,c
  8942  002354  0E00               	movlw	0
  8943  002356  6E29               	movwf	(___flmul@prod+1)^0,c
  8944  002358  0E00               	movlw	0
  8945  00235A  6E2A               	movwf	(___flmul@prod+2)^0,c
  8946  00235C  0E00               	movlw	0
  8947  00235E  6E2B               	movwf	(___flmul@prod+3)^0,c
  8948  002360  0E00               	movlw	0
  8949  002362  6E21               	movwf	___flmul@sign^0,c
  8950  002364  EFC9  F011         	goto	l4004
  8951  002368                     l1037:
  8952  002368  C02C  F027         	movff	___flmul@temp,___flmul@bexp
  8953  00236C  0EFF               	movlw	255
  8954  00236E  1628               	andwf	___flmul@prod^0,f,c
  8955  002370  0EFF               	movlw	255
  8956  002372  1629               	andwf	(___flmul@prod+1)^0,f,c
  8957  002374  0E7F               	movlw	127
  8958  002376  162A               	andwf	(___flmul@prod+2)^0,f,c
  8959  002378  0E00               	movlw	0
  8960  00237A  162B               	andwf	(___flmul@prod+3)^0,f,c
  8961  00237C  A027               	btfss	___flmul@bexp^0,0,c
  8962  00237E  EFC3  F011         	goto	u4011
  8963  002382  EFC5  F011         	goto	u4010
  8964  002386                     u4011:
  8965  002386  EFC6  F011         	goto	l4002
  8966  00238A                     u4010:
  8967  00238A  8E2A               	bsf	(___flmul@prod+2)^0,7,c
  8968  00238C                     l4002:
  8969  00238C  90D8               	bcf	status,0,c
  8970  00238E  3027               	rrcf	___flmul@bexp^0,w,c
  8971  002390  6E2B               	movwf	(___flmul@prod+3)^0,c
  8972  002392                     l4004:
  8973  002392  5021               	movf	___flmul@sign^0,w,c
  8974  002394  122B               	iorwf	(___flmul@prod+3)^0,f,c
  8975  002396  C028  F015         	movff	___flmul@prod,?___flmul
  8976  00239A  C029  F016         	movff	___flmul@prod+1,?___flmul+1
  8977  00239E  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
  8978  0023A2  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
  8979  0023A6                     l1024:
  8980  0023A6  0012               	return		;funcret
  8981  0023A8                     __end_of___flmul:
  8982                           	callstack 0
  8983                           
  8984 ;; *************** function ___flge *****************
  8985 ;; Defined at:
  8986 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  ff1             4   45[COMRAM] unsigned char 
  8989 ;;  ff2             4   49[COMRAM] unsigned char 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;		None
  8992 ;; Return value:  Size  Location     Type
  8993 ;;		None               void
  8994 ;; Registers used:
  8995 ;;		wreg, status,2, status,0
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9001 ;;      Params:         8       0       0       0       0       0       0       0       0
  9002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9003 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9004 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9005 ;;Total ram usage:       12 bytes
  9006 ;; Hardware stack levels used: 1
  9007 ;; Hardware stack levels required when called: 1
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_main
  9012 ;;		_efgtoa
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           	psect	text29
  9017  003780                     __ptext29:
  9018                           	callstack 0
  9019  003780                     ___flge:
  9020                           	callstack 25
  9021  003780  0E00               	movlw	0
  9022  003782  142E               	andwf	___flge@ff1^0,w,c
  9023  003784  6E36               	movwf	??___flge^0,c
  9024  003786  0E00               	movlw	0
  9025  003788  142F               	andwf	(___flge@ff1+1)^0,w,c
  9026  00378A  6E37               	movwf	(??___flge+1)^0,c
  9027  00378C  0E80               	movlw	128
  9028  00378E  1430               	andwf	(___flge@ff1+2)^0,w,c
  9029  003790  6E38               	movwf	(??___flge+2)^0,c
  9030  003792  0E7F               	movlw	127
  9031  003794  1431               	andwf	(___flge@ff1+3)^0,w,c
  9032  003796  6E39               	movwf	(??___flge+3)^0,c
  9033  003798  5036               	movf	??___flge^0,w,c
  9034  00379A  1037               	iorwf	(??___flge+1)^0,w,c
  9035  00379C  1038               	iorwf	(??___flge+2)^0,w,c
  9036  00379E  1039               	iorwf	(??___flge+3)^0,w,c
  9037  0037A0  A4D8               	btfss	status,2,c
  9038  0037A2  EFD5  F01B         	goto	u4171
  9039  0037A6  EFD7  F01B         	goto	u4170
  9040  0037AA                     u4171:
  9041  0037AA  EFDF  F01B         	goto	l4116
  9042  0037AE                     u4170:
  9043  0037AE  0E00               	movlw	0
  9044  0037B0  6E2E               	movwf	___flge@ff1^0,c
  9045  0037B2  0E00               	movlw	0
  9046  0037B4  6E2F               	movwf	(___flge@ff1+1)^0,c
  9047  0037B6  0E00               	movlw	0
  9048  0037B8  6E30               	movwf	(___flge@ff1+2)^0,c
  9049  0037BA  0E00               	movlw	0
  9050  0037BC  6E31               	movwf	(___flge@ff1+3)^0,c
  9051  0037BE                     l4116:
  9052  0037BE  0E00               	movlw	0
  9053  0037C0  1432               	andwf	___flge@ff2^0,w,c
  9054  0037C2  6E36               	movwf	??___flge^0,c
  9055  0037C4  0E00               	movlw	0
  9056  0037C6  1433               	andwf	(___flge@ff2+1)^0,w,c
  9057  0037C8  6E37               	movwf	(??___flge+1)^0,c
  9058  0037CA  0E80               	movlw	128
  9059  0037CC  1434               	andwf	(___flge@ff2+2)^0,w,c
  9060  0037CE  6E38               	movwf	(??___flge+2)^0,c
  9061  0037D0  0E7F               	movlw	127
  9062  0037D2  1435               	andwf	(___flge@ff2+3)^0,w,c
  9063  0037D4  6E39               	movwf	(??___flge+3)^0,c
  9064  0037D6  5036               	movf	??___flge^0,w,c
  9065  0037D8  1037               	iorwf	(??___flge+1)^0,w,c
  9066  0037DA  1038               	iorwf	(??___flge+2)^0,w,c
  9067  0037DC  1039               	iorwf	(??___flge+3)^0,w,c
  9068  0037DE  A4D8               	btfss	status,2,c
  9069  0037E0  EFF4  F01B         	goto	u4181
  9070  0037E4  EFF6  F01B         	goto	u4180
  9071  0037E8                     u4181:
  9072  0037E8  EFFE  F01B         	goto	l4120
  9073  0037EC                     u4180:
  9074  0037EC  0E00               	movlw	0
  9075  0037EE  6E32               	movwf	___flge@ff2^0,c
  9076  0037F0  0E00               	movlw	0
  9077  0037F2  6E33               	movwf	(___flge@ff2+1)^0,c
  9078  0037F4  0E00               	movlw	0
  9079  0037F6  6E34               	movwf	(___flge@ff2+2)^0,c
  9080  0037F8  0E00               	movlw	0
  9081  0037FA  6E35               	movwf	(___flge@ff2+3)^0,c
  9082  0037FC                     l4120:
  9083  0037FC  AE31               	btfss	(___flge@ff1+3)^0,7,c
  9084  0037FE  EF03  F01C         	goto	u4191
  9085  003802  EF05  F01C         	goto	u4190
  9086  003806                     u4191:
  9087  003806  EF0E  F01C         	goto	l4124
  9088  00380A                     u4190:
  9089  00380A  6C2E               	negf	___flge@ff1^0,c
  9090  00380C  1E2F               	comf	(___flge@ff1+1)^0,f,c
  9091  00380E  B0D8               	btfsc	status,0,c
  9092  003810  2A2F               	incf	(___flge@ff1+1)^0,f,c
  9093  003812  1E30               	comf	(___flge@ff1+2)^0,f,c
  9094  003814  B0D8               	btfsc	status,0,c
  9095  003816  2A30               	incf	(___flge@ff1+2)^0,f,c
  9096  003818  0E80               	movlw	128
  9097  00381A  5631               	subfwb	(___flge@ff1+3)^0,f,c
  9098  00381C                     l4124:
  9099  00381C  AE35               	btfss	(___flge@ff2+3)^0,7,c
  9100  00381E  EF13  F01C         	goto	u4201
  9101  003822  EF15  F01C         	goto	u4200
  9102  003826                     u4201:
  9103  003826  EF1E  F01C         	goto	l671
  9104  00382A                     u4200:
  9105  00382A  6C32               	negf	___flge@ff2^0,c
  9106  00382C  1E33               	comf	(___flge@ff2+1)^0,f,c
  9107  00382E  B0D8               	btfsc	status,0,c
  9108  003830  2A33               	incf	(___flge@ff2+1)^0,f,c
  9109  003832  1E34               	comf	(___flge@ff2+2)^0,f,c
  9110  003834  B0D8               	btfsc	status,0,c
  9111  003836  2A34               	incf	(___flge@ff2+2)^0,f,c
  9112  003838  0E80               	movlw	128
  9113  00383A  5635               	subfwb	(___flge@ff2+3)^0,f,c
  9114  00383C                     l671:
  9115  00383C  0E00               	movlw	0
  9116  00383E  1A2E               	xorwf	___flge@ff1^0,f,c
  9117  003840  0E00               	movlw	0
  9118  003842  1A2F               	xorwf	(___flge@ff1+1)^0,f,c
  9119  003844  0E00               	movlw	0
  9120  003846  1A30               	xorwf	(___flge@ff1+2)^0,f,c
  9121  003848  0E80               	movlw	128
  9122  00384A  1A31               	xorwf	(___flge@ff1+3)^0,f,c
  9123  00384C  0E00               	movlw	0
  9124  00384E  1A32               	xorwf	___flge@ff2^0,f,c
  9125  003850  0E00               	movlw	0
  9126  003852  1A33               	xorwf	(___flge@ff2+1)^0,f,c
  9127  003854  0E00               	movlw	0
  9128  003856  1A34               	xorwf	(___flge@ff2+2)^0,f,c
  9129  003858  0E80               	movlw	128
  9130  00385A  1A35               	xorwf	(___flge@ff2+3)^0,f,c
  9131  00385C  5032               	movf	___flge@ff2^0,w,c
  9132  00385E  5C2E               	subwf	___flge@ff1^0,w,c
  9133  003860  5033               	movf	(___flge@ff2+1)^0,w,c
  9134  003862  582F               	subwfb	(___flge@ff1+1)^0,w,c
  9135  003864  5034               	movf	(___flge@ff2+2)^0,w,c
  9136  003866  5830               	subwfb	(___flge@ff1+2)^0,w,c
  9137  003868  5035               	movf	(___flge@ff2+3)^0,w,c
  9138  00386A  5831               	subwfb	(___flge@ff1+3)^0,w,c
  9139  00386C  B0D8               	btfsc	status,0,c
  9140  00386E  EF3B  F01C         	goto	u4211
  9141  003872  EF3D  F01C         	goto	u4210
  9142  003876                     u4211:
  9143  003876  EF40  F01C         	goto	l4130
  9144  00387A                     u4210:
  9145  00387A  90D8               	bcf	status,0,c
  9146  00387C  EF41  F01C         	goto	l676
  9147  003880                     l4130:
  9148  003880  80D8               	bsf	status,0,c
  9149  003882                     l676:
  9150  003882  0012               	return		;funcret
  9151  003884                     __end_of___flge:
  9152                           	callstack 0
  9153                           
  9154 ;; *************** function ___fleq *****************
  9155 ;; Defined at:
  9156 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;  ff1             4    0[COMRAM] unsigned char 
  9159 ;;  ff2             4    4[COMRAM] unsigned char 
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;		None               void
  9164 ;; Registers used:
  9165 ;;		wreg, status,2, status,0
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9171 ;;      Params:         8       0       0       0       0       0       0       0       0
  9172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9173 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9174 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9175 ;;Total ram usage:       12 bytes
  9176 ;; Hardware stack levels used: 1
  9177 ;; Hardware stack levels required when called: 1
  9178 ;; This function calls:
  9179 ;;		Nothing
  9180 ;; This function is called by:
  9181 ;;		_efgtoa
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           	psect	text30
  9186  003E5A                     __ptext30:
  9187                           	callstack 0
  9188  003E5A                     ___fleq:
  9189                           	callstack 25
  9190  003E5A  0E00               	movlw	0
  9191  003E5C  1401               	andwf	___fleq@ff1^0,w,c
  9192  003E5E  6E09               	movwf	??___fleq^0,c
  9193  003E60  0E00               	movlw	0
  9194  003E62  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9195  003E64  6E0A               	movwf	(??___fleq+1)^0,c
  9196  003E66  0E80               	movlw	128
  9197  003E68  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9198  003E6A  6E0B               	movwf	(??___fleq+2)^0,c
  9199  003E6C  0E7F               	movlw	127
  9200  003E6E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9201  003E70  6E0C               	movwf	(??___fleq+3)^0,c
  9202  003E72  5009               	movf	??___fleq^0,w,c
  9203  003E74  100A               	iorwf	(??___fleq+1)^0,w,c
  9204  003E76  100B               	iorwf	(??___fleq+2)^0,w,c
  9205  003E78  100C               	iorwf	(??___fleq+3)^0,w,c
  9206  003E7A  A4D8               	btfss	status,2,c
  9207  003E7C  EF42  F01F         	goto	u4141
  9208  003E80  EF44  F01F         	goto	u4140
  9209  003E84                     u4141:
  9210  003E84  EF4C  F01F         	goto	l4100
  9211  003E88                     u4140:
  9212  003E88  0E00               	movlw	0
  9213  003E8A  6E01               	movwf	___fleq@ff1^0,c
  9214  003E8C  0E00               	movlw	0
  9215  003E8E  6E02               	movwf	(___fleq@ff1+1)^0,c
  9216  003E90  0E00               	movlw	0
  9217  003E92  6E03               	movwf	(___fleq@ff1+2)^0,c
  9218  003E94  0E00               	movlw	0
  9219  003E96  6E04               	movwf	(___fleq@ff1+3)^0,c
  9220  003E98                     l4100:
  9221  003E98  0E00               	movlw	0
  9222  003E9A  1405               	andwf	___fleq@ff2^0,w,c
  9223  003E9C  6E09               	movwf	??___fleq^0,c
  9224  003E9E  0E00               	movlw	0
  9225  003EA0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9226  003EA2  6E0A               	movwf	(??___fleq+1)^0,c
  9227  003EA4  0E80               	movlw	128
  9228  003EA6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9229  003EA8  6E0B               	movwf	(??___fleq+2)^0,c
  9230  003EAA  0E7F               	movlw	127
  9231  003EAC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9232  003EAE  6E0C               	movwf	(??___fleq+3)^0,c
  9233  003EB0  5009               	movf	??___fleq^0,w,c
  9234  003EB2  100A               	iorwf	(??___fleq+1)^0,w,c
  9235  003EB4  100B               	iorwf	(??___fleq+2)^0,w,c
  9236  003EB6  100C               	iorwf	(??___fleq+3)^0,w,c
  9237  003EB8  A4D8               	btfss	status,2,c
  9238  003EBA  EF61  F01F         	goto	u4151
  9239  003EBE  EF63  F01F         	goto	u4150
  9240  003EC2                     u4151:
  9241  003EC2  EF6B  F01F         	goto	l4104
  9242  003EC6                     u4150:
  9243  003EC6  0E00               	movlw	0
  9244  003EC8  6E05               	movwf	___fleq@ff2^0,c
  9245  003ECA  0E00               	movlw	0
  9246  003ECC  6E06               	movwf	(___fleq@ff2+1)^0,c
  9247  003ECE  0E00               	movlw	0
  9248  003ED0  6E07               	movwf	(___fleq@ff2+2)^0,c
  9249  003ED2  0E00               	movlw	0
  9250  003ED4  6E08               	movwf	(___fleq@ff2+3)^0,c
  9251  003ED6                     l4104:
  9252  003ED6  5005               	movf	___fleq@ff2^0,w,c
  9253  003ED8  1801               	xorwf	___fleq@ff1^0,w,c
  9254  003EDA  E10F               	bnz	u4160
  9255  003EDC  5006               	movf	(___fleq@ff2+1)^0,w,c
  9256  003EDE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9257  003EE0  E10C               	bnz	u4160
  9258  003EE2  5007               	movf	(___fleq@ff2+2)^0,w,c
  9259  003EE4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9260  003EE6  E109               	bnz	u4160
  9261  003EE8  5008               	movf	(___fleq@ff2+3)^0,w,c
  9262  003EEA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9263  003EEC  B4D8               	btfsc	status,2,c
  9264  003EEE  EF7B  F01F         	goto	u4161
  9265  003EF2  EF7D  F01F         	goto	u4160
  9266  003EF6                     u4161:
  9267  003EF6  EF80  F01F         	goto	l4108
  9268  003EFA                     u4160:
  9269  003EFA  90D8               	bcf	status,0,c
  9270  003EFC  EF81  F01F         	goto	l665
  9271  003F00                     l4108:
  9272  003F00  80D8               	bsf	status,0,c
  9273  003F02                     l665:
  9274  003F02  0012               	return		;funcret
  9275  003F04                     __end_of___fleq:
  9276                           	callstack 0
  9277                           
  9278 ;; *************** function ___fldiv *****************
  9279 ;; Defined at:
  9280 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;  b               4   45[COMRAM] unsigned char 
  9283 ;;  a               4   49[COMRAM] unsigned char 
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;  grs             4   64[COMRAM] unsigned long 
  9286 ;;  rem             4   57[COMRAM] unsigned long 
  9287 ;;  new_exp         2   62[COMRAM] short 
  9288 ;;  aexp            1   69[COMRAM] unsigned char 
  9289 ;;  bexp            1   68[COMRAM] unsigned char 
  9290 ;;  sign            1   61[COMRAM] unsigned char 
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  4   45[COMRAM] unsigned char 
  9293 ;; Registers used:
  9294 ;;		wreg, status,2, status,0
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9300 ;;      Params:         8       0       0       0       0       0       0       0       0
  9301 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9302 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9303 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9304 ;;Total ram usage:       25 bytes
  9305 ;; Hardware stack levels used: 1
  9306 ;; Hardware stack levels required when called: 1
  9307 ;; This function calls:
  9308 ;;		Nothing
  9309 ;; This function is called by:
  9310 ;;		_ReadADC
  9311 ;;		_efgtoa
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           	psect	text31
  9316  002754                     __ptext31:
  9317                           	callstack 0
  9318  002754                     ___fldiv:
  9319                           	callstack 25
  9320  002754  5031               	movf	(___fldiv@b+3)^0,w,c
  9321  002756  0B80               	andlw	128
  9322  002758  6E3E               	movwf	___fldiv@sign^0,c
  9323  00275A  5031               	movf	(___fldiv@b+3)^0,w,c
  9324  00275C  2431               	addwf	(___fldiv@b+3)^0,w,c
  9325  00275E  6E45               	movwf	___fldiv@bexp^0,c
  9326  002760  AE30               	btfss	(___fldiv@b+2)^0,7,c
  9327  002762  EFB5  F013         	goto	u3601
  9328  002766  EFB7  F013         	goto	u3600
  9329  00276A                     u3601:
  9330  00276A  EFB8  F013         	goto	l3748
  9331  00276E                     u3600:
  9332  00276E  8045               	bsf	___fldiv@bexp^0,0,c
  9333  002770                     l3748:
  9334  002770  5045               	movf	___fldiv@bexp^0,w,c
  9335  002772  B4D8               	btfsc	status,2,c
  9336  002774  EFBE  F013         	goto	u3611
  9337  002778  EFC0  F013         	goto	u3610
  9338  00277C                     u3611:
  9339  00277C  EFD5  F013         	goto	l3758
  9340  002780                     u3610:
  9341  002780  2845               	incf	___fldiv@bexp^0,w,c
  9342  002782  A4D8               	btfss	status,2,c
  9343  002784  EFC6  F013         	goto	u3621
  9344  002788  EFC8  F013         	goto	u3620
  9345  00278C                     u3621:
  9346  00278C  EFD0  F013         	goto	l3754
  9347  002790                     u3620:
  9348  002790  0E00               	movlw	0
  9349  002792  6E2E               	movwf	___fldiv@b^0,c
  9350  002794  0E00               	movlw	0
  9351  002796  6E2F               	movwf	(___fldiv@b+1)^0,c
  9352  002798  0E00               	movlw	0
  9353  00279A  6E30               	movwf	(___fldiv@b+2)^0,c
  9354  00279C  0E00               	movlw	0
  9355  00279E  6E31               	movwf	(___fldiv@b+3)^0,c
  9356  0027A0                     l3754:
  9357  0027A0  8E30               	bsf	(___fldiv@b+2)^0,7,c
  9358  0027A2  0E00               	movlw	0
  9359  0027A4  6E31               	movwf	(___fldiv@b+3)^0,c
  9360  0027A6  EFDD  F013         	goto	l3760
  9361  0027AA                     l3758:
  9362  0027AA  0E00               	movlw	0
  9363  0027AC  6E2E               	movwf	___fldiv@b^0,c
  9364  0027AE  0E00               	movlw	0
  9365  0027B0  6E2F               	movwf	(___fldiv@b+1)^0,c
  9366  0027B2  0E00               	movlw	0
  9367  0027B4  6E30               	movwf	(___fldiv@b+2)^0,c
  9368  0027B6  0E00               	movlw	0
  9369  0027B8  6E31               	movwf	(___fldiv@b+3)^0,c
  9370  0027BA                     l3760:
  9371  0027BA  5035               	movf	(___fldiv@a+3)^0,w,c
  9372  0027BC  0B80               	andlw	128
  9373  0027BE  1A3E               	xorwf	___fldiv@sign^0,f,c
  9374  0027C0  5035               	movf	(___fldiv@a+3)^0,w,c
  9375  0027C2  2435               	addwf	(___fldiv@a+3)^0,w,c
  9376  0027C4  6E46               	movwf	___fldiv@aexp^0,c
  9377  0027C6  AE34               	btfss	(___fldiv@a+2)^0,7,c
  9378  0027C8  EFE8  F013         	goto	u3631
  9379  0027CC  EFEA  F013         	goto	u3630
  9380  0027D0                     u3631:
  9381  0027D0  EFEB  F013         	goto	l3768
  9382  0027D4                     u3630:
  9383  0027D4  8046               	bsf	___fldiv@aexp^0,0,c
  9384  0027D6                     l3768:
  9385  0027D6  5046               	movf	___fldiv@aexp^0,w,c
  9386  0027D8  B4D8               	btfsc	status,2,c
  9387  0027DA  EFF1  F013         	goto	u3641
  9388  0027DE  EFF3  F013         	goto	u3640
  9389  0027E2                     u3641:
  9390  0027E2  EF08  F014         	goto	l3778
  9391  0027E6                     u3640:
  9392  0027E6  2846               	incf	___fldiv@aexp^0,w,c
  9393  0027E8  A4D8               	btfss	status,2,c
  9394  0027EA  EFF9  F013         	goto	u3651
  9395  0027EE  EFFB  F013         	goto	u3650
  9396  0027F2                     u3651:
  9397  0027F2  EF03  F014         	goto	l3774
  9398  0027F6                     u3650:
  9399  0027F6  0E00               	movlw	0
  9400  0027F8  6E32               	movwf	___fldiv@a^0,c
  9401  0027FA  0E00               	movlw	0
  9402  0027FC  6E33               	movwf	(___fldiv@a+1)^0,c
  9403  0027FE  0E00               	movlw	0
  9404  002800  6E34               	movwf	(___fldiv@a+2)^0,c
  9405  002802  0E00               	movlw	0
  9406  002804  6E35               	movwf	(___fldiv@a+3)^0,c
  9407  002806                     l3774:
  9408  002806  8E34               	bsf	(___fldiv@a+2)^0,7,c
  9409  002808  0E00               	movlw	0
  9410  00280A  6E35               	movwf	(___fldiv@a+3)^0,c
  9411  00280C  EF10  F014         	goto	l3780
  9412  002810                     l3778:
  9413  002810  0E00               	movlw	0
  9414  002812  6E32               	movwf	___fldiv@a^0,c
  9415  002814  0E00               	movlw	0
  9416  002816  6E33               	movwf	(___fldiv@a+1)^0,c
  9417  002818  0E00               	movlw	0
  9418  00281A  6E34               	movwf	(___fldiv@a+2)^0,c
  9419  00281C  0E00               	movlw	0
  9420  00281E  6E35               	movwf	(___fldiv@a+3)^0,c
  9421  002820                     l3780:
  9422  002820  5032               	movf	___fldiv@a^0,w,c
  9423  002822  1033               	iorwf	(___fldiv@a+1)^0,w,c
  9424  002824  1034               	iorwf	(___fldiv@a+2)^0,w,c
  9425  002826  1035               	iorwf	(___fldiv@a+3)^0,w,c
  9426  002828  A4D8               	btfss	status,2,c
  9427  00282A  EF19  F014         	goto	u3661
  9428  00282E  EF1B  F014         	goto	u3660
  9429  002832                     u3661:
  9430  002832  EF33  F014         	goto	l3792
  9431  002836                     u3660:
  9432  002836  0E00               	movlw	0
  9433  002838  6E2E               	movwf	___fldiv@b^0,c
  9434  00283A  0E00               	movlw	0
  9435  00283C  6E2F               	movwf	(___fldiv@b+1)^0,c
  9436  00283E  0E00               	movlw	0
  9437  002840  6E30               	movwf	(___fldiv@b+2)^0,c
  9438  002842  0E00               	movlw	0
  9439  002844  6E31               	movwf	(___fldiv@b+3)^0,c
  9440  002846  0E80               	movlw	128
  9441  002848  1230               	iorwf	(___fldiv@b+2)^0,f,c
  9442  00284A  0E7F               	movlw	127
  9443  00284C  1231               	iorwf	(___fldiv@b+3)^0,f,c
  9444  00284E                     l3786:
  9445  00284E  503E               	movf	___fldiv@sign^0,w,c
  9446  002850  1231               	iorwf	(___fldiv@b+3)^0,f,c
  9447  002852  C02E  F02E         	movff	___fldiv@b,?___fldiv
  9448  002856  C02F  F02F         	movff	___fldiv@b+1,?___fldiv+1
  9449  00285A  C030  F030         	movff	___fldiv@b+2,?___fldiv+2
  9450  00285E  C031  F031         	movff	___fldiv@b+3,?___fldiv+3
  9451  002862  EF76  F015         	goto	l988
  9452  002866                     l3792:
  9453  002866  5045               	movf	___fldiv@bexp^0,w,c
  9454  002868  A4D8               	btfss	status,2,c
  9455  00286A  EF39  F014         	goto	u3671
  9456  00286E  EF3B  F014         	goto	u3670
  9457  002872                     u3671:
  9458  002872  EF45  F014         	goto	l3800
  9459  002876                     u3670:
  9460  002876  0E00               	movlw	0
  9461  002878  6E2E               	movwf	?___fldiv^0,c
  9462  00287A  0E00               	movlw	0
  9463  00287C  6E2F               	movwf	(?___fldiv+1)^0,c
  9464  00287E  0E00               	movlw	0
  9465  002880  6E30               	movwf	(?___fldiv+2)^0,c
  9466  002882  0E00               	movlw	0
  9467  002884  6E31               	movwf	(?___fldiv+3)^0,c
  9468  002886  EF76  F015         	goto	l988
  9469  00288A                     l3800:
  9470  00288A  5046               	movf	___fldiv@aexp^0,w,c
  9471  00288C  C045  F036         	movff	___fldiv@bexp,??___fldiv
  9472  002890  6A37               	clrf	(??___fldiv+1)^0,c
  9473  002892  5E36               	subwf	??___fldiv^0,f,c
  9474  002894  0E00               	movlw	0
  9475  002896  5A37               	subwfb	(??___fldiv+1)^0,f,c
  9476  002898  0E7F               	movlw	127
  9477  00289A  2436               	addwf	??___fldiv^0,w,c
  9478  00289C  6E3F               	movwf	___fldiv@new_exp^0,c
  9479  00289E  0E00               	movlw	0
  9480  0028A0  2037               	addwfc	(??___fldiv+1)^0,w,c
  9481  0028A2  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  9482  0028A4  C02E  F03A         	movff	___fldiv@b,___fldiv@rem
  9483  0028A8  C02F  F03B         	movff	___fldiv@b+1,___fldiv@rem+1
  9484  0028AC  C030  F03C         	movff	___fldiv@b+2,___fldiv@rem+2
  9485  0028B0  C031  F03D         	movff	___fldiv@b+3,___fldiv@rem+3
  9486  0028B4  0E00               	movlw	0
  9487  0028B6  6E2E               	movwf	___fldiv@b^0,c
  9488  0028B8  0E00               	movlw	0
  9489  0028BA  6E2F               	movwf	(___fldiv@b+1)^0,c
  9490  0028BC  0E00               	movlw	0
  9491  0028BE  6E30               	movwf	(___fldiv@b+2)^0,c
  9492  0028C0  0E00               	movlw	0
  9493  0028C2  6E31               	movwf	(___fldiv@b+3)^0,c
  9494  0028C4  0E00               	movlw	0
  9495  0028C6  6E41               	movwf	___fldiv@grs^0,c
  9496  0028C8  0E00               	movlw	0
  9497  0028CA  6E42               	movwf	(___fldiv@grs+1)^0,c
  9498  0028CC  0E00               	movlw	0
  9499  0028CE  6E43               	movwf	(___fldiv@grs+2)^0,c
  9500  0028D0  0E00               	movlw	0
  9501  0028D2  6E44               	movwf	(___fldiv@grs+3)^0,c
  9502  0028D4  0E00               	movlw	0
  9503  0028D6  6E46               	movwf	___fldiv@aexp^0,c
  9504  0028D8  EFA6  F014         	goto	l990
  9505  0028DC                     l3810:
  9506  0028DC  5046               	movf	___fldiv@aexp^0,w,c
  9507  0028DE  B4D8               	btfsc	status,2,c
  9508  0028E0  EF74  F014         	goto	u3681
  9509  0028E4  EF76  F014         	goto	u3680
  9510  0028E8                     u3681:
  9511  0028E8  EF8D  F014         	goto	l3818
  9512  0028EC                     u3680:
  9513  0028EC  90D8               	bcf	status,0,c
  9514  0028EE  363A               	rlcf	___fldiv@rem^0,f,c
  9515  0028F0  363B               	rlcf	(___fldiv@rem+1)^0,f,c
  9516  0028F2  363C               	rlcf	(___fldiv@rem+2)^0,f,c
  9517  0028F4  363D               	rlcf	(___fldiv@rem+3)^0,f,c
  9518  0028F6  90D8               	bcf	status,0,c
  9519  0028F8  362E               	rlcf	___fldiv@b^0,f,c
  9520  0028FA  362F               	rlcf	(___fldiv@b+1)^0,f,c
  9521  0028FC  3630               	rlcf	(___fldiv@b+2)^0,f,c
  9522  0028FE  3631               	rlcf	(___fldiv@b+3)^0,f,c
  9523  002900  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  9524  002902  EF85  F014         	goto	u3691
  9525  002906  EF87  F014         	goto	u3690
  9526  00290A                     u3691:
  9527  00290A  EF88  F014         	goto	l993
  9528  00290E                     u3690:
  9529  00290E  802E               	bsf	___fldiv@b^0,0,c
  9530  002910                     l993:
  9531  002910  90D8               	bcf	status,0,c
  9532  002912  3641               	rlcf	___fldiv@grs^0,f,c
  9533  002914  3642               	rlcf	(___fldiv@grs+1)^0,f,c
  9534  002916  3643               	rlcf	(___fldiv@grs+2)^0,f,c
  9535  002918  3644               	rlcf	(___fldiv@grs+3)^0,f,c
  9536  00291A                     l3818:
  9537  00291A  5032               	movf	___fldiv@a^0,w,c
  9538  00291C  5C3A               	subwf	___fldiv@rem^0,w,c
  9539  00291E  5033               	movf	(___fldiv@a+1)^0,w,c
  9540  002920  583B               	subwfb	(___fldiv@rem+1)^0,w,c
  9541  002922  5034               	movf	(___fldiv@a+2)^0,w,c
  9542  002924  583C               	subwfb	(___fldiv@rem+2)^0,w,c
  9543  002926  5035               	movf	(___fldiv@a+3)^0,w,c
  9544  002928  583D               	subwfb	(___fldiv@rem+3)^0,w,c
  9545  00292A  A0D8               	btfss	status,0,c
  9546  00292C  EF9A  F014         	goto	u3701
  9547  002930  EF9C  F014         	goto	u3700
  9548  002934                     u3701:
  9549  002934  EFA5  F014         	goto	l3824
  9550  002938                     u3700:
  9551  002938  8C44               	bsf	(___fldiv@grs+3)^0,6,c
  9552  00293A  5032               	movf	___fldiv@a^0,w,c
  9553  00293C  5E3A               	subwf	___fldiv@rem^0,f,c
  9554  00293E  5033               	movf	(___fldiv@a+1)^0,w,c
  9555  002940  5A3B               	subwfb	(___fldiv@rem+1)^0,f,c
  9556  002942  5034               	movf	(___fldiv@a+2)^0,w,c
  9557  002944  5A3C               	subwfb	(___fldiv@rem+2)^0,f,c
  9558  002946  5035               	movf	(___fldiv@a+3)^0,w,c
  9559  002948  5A3D               	subwfb	(___fldiv@rem+3)^0,f,c
  9560  00294A                     l3824:
  9561  00294A  2A46               	incf	___fldiv@aexp^0,f,c
  9562  00294C                     l990:
  9563  00294C  0E19               	movlw	25
  9564  00294E  6446               	cpfsgt	___fldiv@aexp^0,c
  9565  002950  EFAC  F014         	goto	u3711
  9566  002954  EFAE  F014         	goto	u3710
  9567  002958                     u3711:
  9568  002958  EF6E  F014         	goto	l3810
  9569  00295C                     u3710:
  9570  00295C  503A               	movf	___fldiv@rem^0,w,c
  9571  00295E  103B               	iorwf	(___fldiv@rem+1)^0,w,c
  9572  002960  103C               	iorwf	(___fldiv@rem+2)^0,w,c
  9573  002962  103D               	iorwf	(___fldiv@rem+3)^0,w,c
  9574  002964  B4D8               	btfsc	status,2,c
  9575  002966  EFB7  F014         	goto	u3721
  9576  00296A  EFB9  F014         	goto	u3720
  9577  00296E                     u3721:
  9578  00296E  EFD1  F014         	goto	l3836
  9579  002972                     u3720:
  9580  002972  8041               	bsf	___fldiv@grs^0,0,c
  9581  002974  EFD1  F014         	goto	l3836
  9582  002978                     l3830:
  9583  002978  90D8               	bcf	status,0,c
  9584  00297A  362E               	rlcf	___fldiv@b^0,f,c
  9585  00297C  362F               	rlcf	(___fldiv@b+1)^0,f,c
  9586  00297E  3630               	rlcf	(___fldiv@b+2)^0,f,c
  9587  002980  3631               	rlcf	(___fldiv@b+3)^0,f,c
  9588  002982  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  9589  002984  EFC6  F014         	goto	u3731
  9590  002988  EFC8  F014         	goto	u3730
  9591  00298C                     u3731:
  9592  00298C  EFC9  F014         	goto	l999
  9593  002990                     u3730:
  9594  002990  802E               	bsf	___fldiv@b^0,0,c
  9595  002992                     l999:
  9596  002992  90D8               	bcf	status,0,c
  9597  002994  3641               	rlcf	___fldiv@grs^0,f,c
  9598  002996  3642               	rlcf	(___fldiv@grs+1)^0,f,c
  9599  002998  3643               	rlcf	(___fldiv@grs+2)^0,f,c
  9600  00299A  3644               	rlcf	(___fldiv@grs+3)^0,f,c
  9601  00299C  063F               	decf	___fldiv@new_exp^0,f,c
  9602  00299E  A0D8               	btfss	status,0,c
  9603  0029A0  0640               	decf	(___fldiv@new_exp+1)^0,f,c
  9604  0029A2                     l3836:
  9605  0029A2  AE30               	btfss	(___fldiv@b+2)^0,7,c
  9606  0029A4  EFD6  F014         	goto	u3741
  9607  0029A8  EFD8  F014         	goto	u3740
  9608  0029AC                     u3741:
  9609  0029AC  EFBC  F014         	goto	l3830
  9610  0029B0                     u3740:
  9611  0029B0  0E00               	movlw	0
  9612  0029B2  6E46               	movwf	___fldiv@aexp^0,c
  9613  0029B4  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  9614  0029B6  EFDF  F014         	goto	u3751
  9615  0029BA  EFE1  F014         	goto	u3750
  9616  0029BE                     u3751:
  9617  0029BE  EF05  F015         	goto	l1001
  9618  0029C2                     u3750:
  9619  0029C2  0EFF               	movlw	255
  9620  0029C4  1441               	andwf	___fldiv@grs^0,w,c
  9621  0029C6  6E36               	movwf	??___fldiv^0,c
  9622  0029C8  0EFF               	movlw	255
  9623  0029CA  1442               	andwf	(___fldiv@grs+1)^0,w,c
  9624  0029CC  6E37               	movwf	(??___fldiv+1)^0,c
  9625  0029CE  0EFF               	movlw	255
  9626  0029D0  1443               	andwf	(___fldiv@grs+2)^0,w,c
  9627  0029D2  6E38               	movwf	(??___fldiv+2)^0,c
  9628  0029D4  0E7F               	movlw	127
  9629  0029D6  1444               	andwf	(___fldiv@grs+3)^0,w,c
  9630  0029D8  6E39               	movwf	(??___fldiv+3)^0,c
  9631  0029DA  5036               	movf	??___fldiv^0,w,c
  9632  0029DC  1037               	iorwf	(??___fldiv+1)^0,w,c
  9633  0029DE  1038               	iorwf	(??___fldiv+2)^0,w,c
  9634  0029E0  1039               	iorwf	(??___fldiv+3)^0,w,c
  9635  0029E2  B4D8               	btfsc	status,2,c
  9636  0029E4  EFF6  F014         	goto	u3761
  9637  0029E8  EFF8  F014         	goto	u3760
  9638  0029EC                     u3761:
  9639  0029EC  EFFC  F014         	goto	l1002
  9640  0029F0                     u3760:
  9641  0029F0                     l3844:
  9642  0029F0  0E01               	movlw	1
  9643  0029F2  6E46               	movwf	___fldiv@aexp^0,c
  9644  0029F4  EF05  F015         	goto	l1001
  9645  0029F8                     l1002:
  9646  0029F8  A02E               	btfss	___fldiv@b^0,0,c
  9647  0029FA  EF01  F015         	goto	u3771
  9648  0029FE  EF03  F015         	goto	u3770
  9649  002A02                     u3771:
  9650  002A02  EF05  F015         	goto	l1001
  9651  002A06                     u3770:
  9652  002A06  EFF8  F014         	goto	l3844
  9653  002A0A                     l1001:
  9654  002A0A  5046               	movf	___fldiv@aexp^0,w,c
  9655  002A0C  B4D8               	btfsc	status,2,c
  9656  002A0E  EF0B  F015         	goto	u3781
  9657  002A12  EF0D  F015         	goto	u3780
  9658  002A16                     u3781:
  9659  002A16  EF31  F015         	goto	l3856
  9660  002A1A                     u3780:
  9661  002A1A  0E01               	movlw	1
  9662  002A1C  262E               	addwf	___fldiv@b^0,f,c
  9663  002A1E  0E00               	movlw	0
  9664  002A20  222F               	addwfc	(___fldiv@b+1)^0,f,c
  9665  002A22  2230               	addwfc	(___fldiv@b+2)^0,f,c
  9666  002A24  2231               	addwfc	(___fldiv@b+3)^0,f,c
  9667  002A26  A031               	btfss	(___fldiv@b+3)^0,0,c
  9668  002A28  EF18  F015         	goto	u3791
  9669  002A2C  EF1A  F015         	goto	u3790
  9670  002A30                     u3791:
  9671  002A30  EF31  F015         	goto	l3856
  9672  002A34                     u3790:
  9673  002A34  C02E  F036         	movff	___fldiv@b,??___fldiv
  9674  002A38  C02F  F037         	movff	___fldiv@b+1,??___fldiv+1
  9675  002A3C  C030  F038         	movff	___fldiv@b+2,??___fldiv+2
  9676  002A40  C031  F039         	movff	___fldiv@b+3,??___fldiv+3
  9677  002A44  3439               	rlcf	(??___fldiv+3)^0,w,c
  9678  002A46  3239               	rrcf	(??___fldiv+3)^0,f,c
  9679  002A48  3238               	rrcf	(??___fldiv+2)^0,f,c
  9680  002A4A  3237               	rrcf	(??___fldiv+1)^0,f,c
  9681  002A4C  3236               	rrcf	??___fldiv^0,f,c
  9682  002A4E  C036  F02E         	movff	??___fldiv,___fldiv@b
  9683  002A52  C037  F02F         	movff	??___fldiv+1,___fldiv@b+1
  9684  002A56  C038  F030         	movff	??___fldiv+2,___fldiv@b+2
  9685  002A5A  C039  F031         	movff	??___fldiv+3,___fldiv@b+3
  9686  002A5E  4A3F               	infsnz	___fldiv@new_exp^0,f,c
  9687  002A60  2A40               	incf	(___fldiv@new_exp+1)^0,f,c
  9688  002A62                     l3856:
  9689  002A62  BE40               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9690  002A64  EF3C  F015         	goto	u3801
  9691  002A68  5040               	movf	(___fldiv@new_exp+1)^0,w,c
  9692  002A6A  E108               	bnz	u3800
  9693  002A6C  283F               	incf	___fldiv@new_exp^0,w,c
  9694  002A6E  A0D8               	btfss	status,0,c
  9695  002A70  EF3C  F015         	goto	u3801
  9696  002A74  EF3E  F015         	goto	u3800
  9697  002A78                     u3801:
  9698  002A78  EF49  F015         	goto	l3860
  9699  002A7C                     u3800:
  9700  002A7C  0E00               	movlw	0
  9701  002A7E  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  9702  002A80  683F               	setf	___fldiv@new_exp^0,c
  9703  002A82  0E00               	movlw	0
  9704  002A84  6E2E               	movwf	___fldiv@b^0,c
  9705  002A86  0E00               	movlw	0
  9706  002A88  6E2F               	movwf	(___fldiv@b+1)^0,c
  9707  002A8A  0E00               	movlw	0
  9708  002A8C  6E30               	movwf	(___fldiv@b+2)^0,c
  9709  002A8E  0E00               	movlw	0
  9710  002A90  6E31               	movwf	(___fldiv@b+3)^0,c
  9711  002A92                     l3860:
  9712  002A92  BE40               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9713  002A94  EF56  F015         	goto	u3810
  9714  002A98  5040               	movf	(___fldiv@new_exp+1)^0,w,c
  9715  002A9A  E106               	bnz	u3811
  9716  002A9C  043F               	decf	___fldiv@new_exp^0,w,c
  9717  002A9E  B0D8               	btfsc	status,0,c
  9718  002AA0  EF54  F015         	goto	u3811
  9719  002AA4  EF56  F015         	goto	u3810
  9720  002AA8                     u3811:
  9721  002AA8  EF64  F015         	goto	l3864
  9722  002AAC                     u3810:
  9723  002AAC  0E00               	movlw	0
  9724  002AAE  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  9725  002AB0  0E00               	movlw	0
  9726  002AB2  6E3F               	movwf	___fldiv@new_exp^0,c
  9727  002AB4  0E00               	movlw	0
  9728  002AB6  6E2E               	movwf	___fldiv@b^0,c
  9729  002AB8  0E00               	movlw	0
  9730  002ABA  6E2F               	movwf	(___fldiv@b+1)^0,c
  9731  002ABC  0E00               	movlw	0
  9732  002ABE  6E30               	movwf	(___fldiv@b+2)^0,c
  9733  002AC0  0E00               	movlw	0
  9734  002AC2  6E31               	movwf	(___fldiv@b+3)^0,c
  9735  002AC4  0E00               	movlw	0
  9736  002AC6  6E3E               	movwf	___fldiv@sign^0,c
  9737  002AC8                     l3864:
  9738  002AC8  C03F  F045         	movff	___fldiv@new_exp,___fldiv@bexp
  9739  002ACC  A045               	btfss	___fldiv@bexp^0,0,c
  9740  002ACE  EF6B  F015         	goto	u3821
  9741  002AD2  EF6D  F015         	goto	u3820
  9742  002AD6                     u3821:
  9743  002AD6  EF70  F015         	goto	l3870
  9744  002ADA                     u3820:
  9745  002ADA  8E30               	bsf	(___fldiv@b+2)^0,7,c
  9746  002ADC  EF71  F015         	goto	l3872
  9747  002AE0                     l3870:
  9748  002AE0  9E30               	bcf	(___fldiv@b+2)^0,7,c
  9749  002AE2                     l3872:
  9750  002AE2  90D8               	bcf	status,0,c
  9751  002AE4  3045               	rrcf	___fldiv@bexp^0,w,c
  9752  002AE6  6E31               	movwf	(___fldiv@b+3)^0,c
  9753  002AE8  EF27  F014         	goto	l3786
  9754  002AEC                     l988:
  9755  002AEC  0012               	return		;funcret
  9756  002AEE                     __end_of___fldiv:
  9757                           	callstack 0
  9758                           
  9759 ;; *************** function ___awmod *****************
  9760 ;; Defined at:
  9761 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;  dividend        2    0[COMRAM] int 
  9764 ;;  divisor         2    2[COMRAM] int 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  sign            1    5[COMRAM] unsigned char 
  9767 ;;  counter         1    4[COMRAM] unsigned char 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  2    0[COMRAM] int 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2, status,0
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9777 ;;      Params:         4       0       0       0       0       0       0       0       0
  9778 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9780 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9781 ;;Total ram usage:        6 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; Hardware stack levels required when called: 1
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_efgtoa
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text32
  9792  003DAA                     __ptext32:
  9793                           	callstack 0
  9794  003DAA                     ___awmod:
  9795                           	callstack 25
  9796  003DAA  0E00               	movlw	0
  9797  003DAC  6E06               	movwf	___awmod@sign^0,c
  9798  003DAE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9799  003DB0  EFDE  F01E         	goto	u4080
  9800  003DB4  EFDC  F01E         	goto	u4081
  9801  003DB8                     u4081:
  9802  003DB8  EFE4  F01E         	goto	l4068
  9803  003DBC                     u4080:
  9804  003DBC  6C01               	negf	___awmod@dividend^0,c
  9805  003DBE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9806  003DC0  B0D8               	btfsc	status,0,c
  9807  003DC2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9808  003DC4  0E01               	movlw	1
  9809  003DC6  6E06               	movwf	___awmod@sign^0,c
  9810  003DC8                     l4068:
  9811  003DC8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9812  003DCA  EFEB  F01E         	goto	u4090
  9813  003DCE  EFE9  F01E         	goto	u4091
  9814  003DD2                     u4091:
  9815  003DD2  EFEF  F01E         	goto	l4072
  9816  003DD6                     u4090:
  9817  003DD6  6C03               	negf	___awmod@divisor^0,c
  9818  003DD8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9819  003DDA  B0D8               	btfsc	status,0,c
  9820  003DDC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9821  003DDE                     l4072:
  9822  003DDE  5003               	movf	___awmod@divisor^0,w,c
  9823  003DE0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9824  003DE2  B4D8               	btfsc	status,2,c
  9825  003DE4  EFF6  F01E         	goto	u4101
  9826  003DE8  EFF8  F01E         	goto	u4100
  9827  003DEC                     u4101:
  9828  003DEC  EF1C  F01F         	goto	l4088
  9829  003DF0                     u4100:
  9830  003DF0  0E01               	movlw	1
  9831  003DF2  6E05               	movwf	___awmod@counter^0,c
  9832  003DF4  EF00  F01F         	goto	l4078
  9833  003DF8                     l4076:
  9834  003DF8  90D8               	bcf	status,0,c
  9835  003DFA  3603               	rlcf	___awmod@divisor^0,f,c
  9836  003DFC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9837  003DFE  2A05               	incf	___awmod@counter^0,f,c
  9838  003E00                     l4078:
  9839  003E00  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9840  003E02  EF05  F01F         	goto	u4111
  9841  003E06  EF07  F01F         	goto	u4110
  9842  003E0A                     u4111:
  9843  003E0A  EFFC  F01E         	goto	l4076
  9844  003E0E                     u4110:
  9845  003E0E                     l4080:
  9846  003E0E  5003               	movf	___awmod@divisor^0,w,c
  9847  003E10  5C01               	subwf	___awmod@dividend^0,w,c
  9848  003E12  5004               	movf	(___awmod@divisor+1)^0,w,c
  9849  003E14  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9850  003E16  A0D8               	btfss	status,0,c
  9851  003E18  EF10  F01F         	goto	u4121
  9852  003E1C  EF12  F01F         	goto	u4120
  9853  003E20                     u4121:
  9854  003E20  EF16  F01F         	goto	l4084
  9855  003E24                     u4120:
  9856  003E24  5003               	movf	___awmod@divisor^0,w,c
  9857  003E26  5E01               	subwf	___awmod@dividend^0,f,c
  9858  003E28  5004               	movf	(___awmod@divisor+1)^0,w,c
  9859  003E2A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9860  003E2C                     l4084:
  9861  003E2C  90D8               	bcf	status,0,c
  9862  003E2E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9863  003E30  3203               	rrcf	___awmod@divisor^0,f,c
  9864  003E32  2E05               	decfsz	___awmod@counter^0,f,c
  9865  003E34  EF07  F01F         	goto	l4080
  9866  003E38                     l4088:
  9867  003E38  5006               	movf	___awmod@sign^0,w,c
  9868  003E3A  B4D8               	btfsc	status,2,c
  9869  003E3C  EF22  F01F         	goto	u4131
  9870  003E40  EF24  F01F         	goto	u4130
  9871  003E44                     u4131:
  9872  003E44  EF28  F01F         	goto	l4092
  9873  003E48                     u4130:
  9874  003E48  6C01               	negf	___awmod@dividend^0,c
  9875  003E4A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9876  003E4C  B0D8               	btfsc	status,0,c
  9877  003E4E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9878  003E50                     l4092:
  9879  003E50  C001  F001         	movff	___awmod@dividend,?___awmod
  9880  003E54  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9881  003E58  0012               	return		;funcret
  9882  003E5A                     __end_of___awmod:
  9883                           	callstack 0
  9884                           
  9885 ;; *************** function ___awdiv *****************
  9886 ;; Defined at:
  9887 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;  dividend        2    0[COMRAM] int 
  9890 ;;  divisor         2    2[COMRAM] int 
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  quotient        2    6[COMRAM] int 
  9893 ;;  sign            1    5[COMRAM] unsigned char 
  9894 ;;  counter         1    4[COMRAM] unsigned char 
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  2    0[COMRAM] int 
  9897 ;; Registers used:
  9898 ;;		wreg, status,2, status,0
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9904 ;;      Params:         4       0       0       0       0       0       0       0       0
  9905 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9907 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9908 ;;Total ram usage:        8 bytes
  9909 ;; Hardware stack levels used: 1
  9910 ;; Hardware stack levels required when called: 1
  9911 ;; This function calls:
  9912 ;;		Nothing
  9913 ;; This function is called by:
  9914 ;;		_efgtoa
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           	psect	text33
  9919  003CE6                     __ptext33:
  9920                           	callstack 0
  9921  003CE6                     ___awdiv:
  9922                           	callstack 25
  9923  003CE6  0E00               	movlw	0
  9924  003CE8  6E06               	movwf	___awdiv@sign^0,c
  9925  003CEA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9926  003CEC  EF7C  F01E         	goto	u4020
  9927  003CF0  EF7A  F01E         	goto	u4021
  9928  003CF4                     u4021:
  9929  003CF4  EF82  F01E         	goto	l4024
  9930  003CF8                     u4020:
  9931  003CF8  6C03               	negf	___awdiv@divisor^0,c
  9932  003CFA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9933  003CFC  B0D8               	btfsc	status,0,c
  9934  003CFE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9935  003D00  0E01               	movlw	1
  9936  003D02  6E06               	movwf	___awdiv@sign^0,c
  9937  003D04                     l4024:
  9938  003D04  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9939  003D06  EF89  F01E         	goto	u4030
  9940  003D0A  EF87  F01E         	goto	u4031
  9941  003D0E                     u4031:
  9942  003D0E  EF8F  F01E         	goto	l4030
  9943  003D12                     u4030:
  9944  003D12  6C01               	negf	___awdiv@dividend^0,c
  9945  003D14  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9946  003D16  B0D8               	btfsc	status,0,c
  9947  003D18  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9948  003D1A  0E01               	movlw	1
  9949  003D1C  1A06               	xorwf	___awdiv@sign^0,f,c
  9950  003D1E                     l4030:
  9951  003D1E  0E00               	movlw	0
  9952  003D20  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9953  003D22  0E00               	movlw	0
  9954  003D24  6E07               	movwf	___awdiv@quotient^0,c
  9955  003D26  5003               	movf	___awdiv@divisor^0,w,c
  9956  003D28  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9957  003D2A  B4D8               	btfsc	status,2,c
  9958  003D2C  EF9A  F01E         	goto	u4041
  9959  003D30  EF9C  F01E         	goto	u4040
  9960  003D34                     u4041:
  9961  003D34  EFC4  F01E         	goto	l4052
  9962  003D38                     u4040:
  9963  003D38  0E01               	movlw	1
  9964  003D3A  6E05               	movwf	___awdiv@counter^0,c
  9965  003D3C  EFA4  F01E         	goto	l4038
  9966  003D40                     l4036:
  9967  003D40  90D8               	bcf	status,0,c
  9968  003D42  3603               	rlcf	___awdiv@divisor^0,f,c
  9969  003D44  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9970  003D46  2A05               	incf	___awdiv@counter^0,f,c
  9971  003D48                     l4038:
  9972  003D48  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9973  003D4A  EFA9  F01E         	goto	u4051
  9974  003D4E  EFAB  F01E         	goto	u4050
  9975  003D52                     u4051:
  9976  003D52  EFA0  F01E         	goto	l4036
  9977  003D56                     u4050:
  9978  003D56                     l4040:
  9979  003D56  90D8               	bcf	status,0,c
  9980  003D58  3607               	rlcf	___awdiv@quotient^0,f,c
  9981  003D5A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9982  003D5C  5003               	movf	___awdiv@divisor^0,w,c
  9983  003D5E  5C01               	subwf	___awdiv@dividend^0,w,c
  9984  003D60  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9985  003D62  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9986  003D64  A0D8               	btfss	status,0,c
  9987  003D66  EFB7  F01E         	goto	u4061
  9988  003D6A  EFB9  F01E         	goto	u4060
  9989  003D6E                     u4061:
  9990  003D6E  EFBE  F01E         	goto	l4048
  9991  003D72                     u4060:
  9992  003D72  5003               	movf	___awdiv@divisor^0,w,c
  9993  003D74  5E01               	subwf	___awdiv@dividend^0,f,c
  9994  003D76  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9995  003D78  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9996  003D7A  8007               	bsf	___awdiv@quotient^0,0,c
  9997  003D7C                     l4048:
  9998  003D7C  90D8               	bcf	status,0,c
  9999  003D7E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10000  003D80  3203               	rrcf	___awdiv@divisor^0,f,c
 10001  003D82  2E05               	decfsz	___awdiv@counter^0,f,c
 10002  003D84  EFAB  F01E         	goto	l4040
 10003  003D88                     l4052:
 10004  003D88  5006               	movf	___awdiv@sign^0,w,c
 10005  003D8A  B4D8               	btfsc	status,2,c
 10006  003D8C  EFCA  F01E         	goto	u4071
 10007  003D90  EFCC  F01E         	goto	u4070
 10008  003D94                     u4071:
 10009  003D94  EFD0  F01E         	goto	l4056
 10010  003D98                     u4070:
 10011  003D98  6C07               	negf	___awdiv@quotient^0,c
 10012  003D9A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10013  003D9C  B0D8               	btfsc	status,0,c
 10014  003D9E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10015  003DA0                     l4056:
 10016  003DA0  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10017  003DA4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10018  003DA8  0012               	return		;funcret
 10019  003DAA                     __end_of___awdiv:
 10020                           	callstack 0
 10021                           
 10022 ;; *************** function _atoi *****************
 10023 ;; Defined at:
 10024 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10027 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
 10028 ;;		 -> STR_11(4), STR_10(4), STR_9(4), STR_8(4), 
 10029 ;;		 -> STR_7(4), STR_4(7), STR_3(7), STR_2(7), 
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;  n               2   20[COMRAM] int 
 10032 ;;  neg             2   13[COMRAM] int 
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  2    7[COMRAM] int 
 10035 ;; Registers used:
 10036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10042 ;;      Params:         2       0       0       0       0       0       0       0       0
 10043 ;;      Locals:         9       0       0       0       0       0       0       0       0
 10044 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10045 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10046 ;;Total ram usage:       15 bytes
 10047 ;; Hardware stack levels used: 1
 10048 ;; Hardware stack levels required when called: 2
 10049 ;; This function calls:
 10050 ;;		___wmul
 10051 ;;		_isdigit
 10052 ;;		_isspace
 10053 ;; This function is called by:
 10054 ;;		_vfpfcnvrt
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text34
 10059  0034E8                     __ptext34:
 10060                           	callstack 0
 10061  0034E8                     _atoi:
 10062                           	callstack 25
 10063  0034E8  0E00               	movlw	0
 10064  0034EA  6E16               	movwf	(atoi@n+1)^0,c
 10065  0034EC  0E00               	movlw	0
 10066  0034EE  6E15               	movwf	atoi@n^0,c
 10067  0034F0  0E00               	movlw	0
 10068  0034F2  6E0F               	movwf	(atoi@neg+1)^0,c
 10069  0034F4  0E00               	movlw	0
 10070  0034F6  6E0E               	movwf	atoi@neg^0,c
 10071  0034F8  EF80  F01A         	goto	l4698
 10072  0034FC                     l4696:
 10073  0034FC  4A08               	infsnz	atoi@s^0,f,c
 10074  0034FE  2A09               	incf	(atoi@s+1)^0,f,c
 10075  003500                     l4698:
 10076  003500  0E01               	movlw	1
 10077  003502  6E14               	movwf	_atoi$1748^0,c
 10078  003504  C008  FFF6         	movff	atoi@s,tblptrl
 10079  003508  C009  FFF7         	movff	atoi@s+1,tblptrh
 10080  00350C                     	if	0	;tblptru may be non-zero
 10081  00350C                     	endif
 10082  00350C                     	if	0	;tblptru may be non-zero
 10083  00350C                     	endif
 10084  00350C  0008               	tblrd		*
 10085  00350E  50F5               	movf	tablat,w,c
 10086  003510  0A20               	xorlw	32
 10087  003512  B4D8               	btfsc	status,2,c
 10088  003514  EF8E  F01A         	goto	u5391
 10089  003518  EF90  F01A         	goto	u5390
 10090  00351C                     u5391:
 10091  00351C  EFAD  F01A         	goto	l4706
 10092  003520                     u5390:
 10093  003520  0EF7               	movlw	247
 10094  003522  6E0A               	movwf	??_atoi^0,c
 10095  003524  0EFF               	movlw	255
 10096  003526  6E0B               	movwf	(??_atoi+1)^0,c
 10097  003528  C008  FFF6         	movff	atoi@s,tblptrl
 10098  00352C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10099  003530                     	if	0	;tblptru may be non-zero
 10100  003530                     	endif
 10101  003530                     	if	0	;tblptru may be non-zero
 10102  003530                     	endif
 10103  003530  0008               	tblrd		*
 10104  003532  50F5               	movf	tablat,w,c
 10105  003534  6E0C               	movwf	(??_atoi+2)^0,c
 10106  003536  6A0D               	clrf	(??_atoi+3)^0,c
 10107  003538  500A               	movf	??_atoi^0,w,c
 10108  00353A  260C               	addwf	(??_atoi+2)^0,f,c
 10109  00353C  500B               	movf	(??_atoi+1)^0,w,c
 10110  00353E  220D               	addwfc	(??_atoi+3)^0,f,c
 10111  003540  500D               	movf	(??_atoi+3)^0,w,c
 10112  003542  E109               	bnz	u5400
 10113  003544  0E05               	movlw	5
 10114  003546  5C0C               	subwf	(??_atoi+2)^0,w,c
 10115  003548  A0D8               	btfss	status,0,c
 10116  00354A  EFA9  F01A         	goto	u5401
 10117  00354E  EFAB  F01A         	goto	u5400
 10118  003552                     u5401:
 10119  003552  EFAD  F01A         	goto	l4706
 10120  003556                     u5400:
 10121  003556  0E00               	movlw	0
 10122  003558  6E14               	movwf	_atoi$1748^0,c
 10123  00355A                     l4706:
 10124  00355A  C014  F010         	movff	_atoi$1748,_atoi$1747
 10125  00355E  6A11               	clrf	(_atoi$1747+1)^0,c
 10126  003560  5010               	movf	_atoi$1747^0,w,c
 10127  003562  1011               	iorwf	(_atoi$1747+1)^0,w,c
 10128  003564  A4D8               	btfss	status,2,c
 10129  003566  EFB7  F01A         	goto	u5411
 10130  00356A  EFB9  F01A         	goto	u5410
 10131  00356E                     u5411:
 10132  00356E  EF7E  F01A         	goto	l4696
 10133  003572                     u5410:
 10134  003572  EFC3  F01A         	goto	l4716
 10135  003576                     l4712:
 10136  003576  0E00               	movlw	0
 10137  003578  6E0F               	movwf	(atoi@neg+1)^0,c
 10138  00357A  0E01               	movlw	1
 10139  00357C  6E0E               	movwf	atoi@neg^0,c
 10140  00357E                     l4714:
 10141  00357E  4A08               	infsnz	atoi@s^0,f,c
 10142  003580  2A09               	incf	(atoi@s+1)^0,f,c
 10143  003582  EFF8  F01A         	goto	l4722
 10144  003586                     l4716:
 10145  003586  C008  FFF6         	movff	atoi@s,tblptrl
 10146  00358A  C009  FFF7         	movff	atoi@s+1,tblptrh
 10147  00358E                     	if	0	;tblptru may be non-zero
 10148  00358E                     	endif
 10149  00358E                     	if	0	;tblptru may be non-zero
 10150  00358E                     	endif
 10151  00358E  0008               	tblrd		*
 10152  003590  50F5               	movf	tablat,w,c
 10153  003592  6E0A               	movwf	??_atoi^0,c
 10154  003594  6A0B               	clrf	(??_atoi+1)^0,c
 10155                           
 10156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10157                           ; Switch size 1, requested type "simple"
 10158                           ; Number of cases is 1, Range of values is 0 to 0
 10159                           ; switch strategies available:
 10160                           ; Name         Instructions Cycles
 10161                           ; simple_byte            4     3 (average)
 10162                           ;	Chosen strategy is simple_byte
 10163  003596  500B               	movf	(??_atoi+1)^0,w,c
 10164  003598  0A00               	xorlw	0	; case 0
 10165  00359A  B4D8               	btfsc	status,2,c
 10166  00359C  EFD2  F01A         	goto	l5488
 10167  0035A0  EFF8  F01A         	goto	l4722
 10168  0035A4                     l5488:
 10169                           
 10170                           ; Switch size 1, requested type "simple"
 10171                           ; Number of cases is 2, Range of values is 43 to 45
 10172                           ; switch strategies available:
 10173                           ; Name         Instructions Cycles
 10174                           ; simple_byte            7     4 (average)
 10175                           ;	Chosen strategy is simple_byte
 10176  0035A4  500A               	movf	??_atoi^0,w,c
 10177  0035A6  0A2B               	xorlw	43	; case 43
 10178  0035A8  B4D8               	btfsc	status,2,c
 10179  0035AA  EFBF  F01A         	goto	l4714
 10180  0035AE  0A06               	xorlw	6	; case 45
 10181  0035B0  B4D8               	btfsc	status,2,c
 10182  0035B2  EFBB  F01A         	goto	l4712
 10183  0035B6  EFF8  F01A         	goto	l4722
 10184  0035BA                     l4718:
 10185  0035BA  C015  F001         	movff	atoi@n,___wmul@multiplier
 10186  0035BE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10187  0035C2  0E00               	movlw	0
 10188  0035C4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10189  0035C6  0E0A               	movlw	10
 10190  0035C8  6E03               	movwf	___wmul@multiplicand^0,c
 10191  0035CA  ECAD  F023         	call	___wmul	;wreg free
 10192  0035CE  C008  FFF6         	movff	atoi@s,tblptrl
 10193  0035D2  C009  FFF7         	movff	atoi@s+1,tblptrh
 10194  0035D6                     	if	0	;tblptru may be non-zero
 10195  0035D6                     	endif
 10196  0035D6                     	if	0	;tblptru may be non-zero
 10197  0035D6                     	endif
 10198  0035D6  0008               	tblrd		*
 10199  0035D8  50F5               	movf	tablat,w,c
 10200  0035DA  5E01               	subwf	?___wmul^0,f,c
 10201  0035DC  0E00               	movlw	0
 10202  0035DE  5A02               	subwfb	(?___wmul+1)^0,f,c
 10203  0035E0  0E30               	movlw	48
 10204  0035E2  2401               	addwf	?___wmul^0,w,c
 10205  0035E4  6E15               	movwf	atoi@n^0,c
 10206  0035E6  0E00               	movlw	0
 10207  0035E8  2002               	addwfc	(?___wmul+1)^0,w,c
 10208  0035EA  6E16               	movwf	(atoi@n+1)^0,c
 10209  0035EC  EFBF  F01A         	goto	l4714
 10210  0035F0                     l4722:
 10211  0035F0  0ED0               	movlw	208
 10212  0035F2  6E0A               	movwf	??_atoi^0,c
 10213  0035F4  0EFF               	movlw	255
 10214  0035F6  6E0B               	movwf	(??_atoi+1)^0,c
 10215  0035F8  C008  FFF6         	movff	atoi@s,tblptrl
 10216  0035FC  C009  FFF7         	movff	atoi@s+1,tblptrh
 10217  003600                     	if	0	;tblptru may be non-zero
 10218  003600                     	endif
 10219  003600                     	if	0	;tblptru may be non-zero
 10220  003600                     	endif
 10221  003600  0008               	tblrd		*
 10222  003602  50F5               	movf	tablat,w,c
 10223  003604  6E0C               	movwf	(??_atoi+2)^0,c
 10224  003606  6A0D               	clrf	(??_atoi+3)^0,c
 10225  003608  500A               	movf	??_atoi^0,w,c
 10226  00360A  260C               	addwf	(??_atoi+2)^0,f,c
 10227  00360C  500B               	movf	(??_atoi+1)^0,w,c
 10228  00360E  220D               	addwfc	(??_atoi+3)^0,f,c
 10229  003610  500D               	movf	(??_atoi+3)^0,w,c
 10230  003612  E10A               	bnz	u5420
 10231  003614  0E0A               	movlw	10
 10232  003616  5C0C               	subwf	(??_atoi+2)^0,w,c
 10233  003618  A0D8               	btfss	status,0,c
 10234  00361A  EF11  F01B         	goto	u5421
 10235  00361E  EF14  F01B         	goto	u5420
 10236  003622                     u5421:
 10237  003622  0E01               	movlw	1
 10238  003624  EF15  F01B         	goto	u5430
 10239  003628                     u5420:
 10240  003628  0E00               	movlw	0
 10241  00362A                     u5430:
 10242  00362A  6E12               	movwf	_atoi$1749^0,c
 10243  00362C  6A13               	clrf	(_atoi$1749+1)^0,c
 10244  00362E  5012               	movf	_atoi$1749^0,w,c
 10245  003630  1013               	iorwf	(_atoi$1749+1)^0,w,c
 10246  003632  A4D8               	btfss	status,2,c
 10247  003634  EF1E  F01B         	goto	u5441
 10248  003638  EF20  F01B         	goto	u5440
 10249  00363C                     u5441:
 10250  00363C  EFDD  F01A         	goto	l4718
 10251  003640                     u5440:
 10252  003640  500E               	movf	atoi@neg^0,w,c
 10253  003642  100F               	iorwf	(atoi@neg+1)^0,w,c
 10254  003644  A4D8               	btfss	status,2,c
 10255  003646  EF27  F01B         	goto	u5451
 10256  00364A  EF29  F01B         	goto	u5450
 10257  00364E                     u5451:
 10258  00364E  EF37  F01B         	goto	l1342
 10259  003652                     u5450:
 10260  003652  C015  F00A         	movff	atoi@n,??_atoi
 10261  003656  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10262  00365A  1E0A               	comf	??_atoi^0,f,c
 10263  00365C  1E0B               	comf	(??_atoi+1)^0,f,c
 10264  00365E  4A0A               	infsnz	??_atoi^0,f,c
 10265  003660  2A0B               	incf	(??_atoi+1)^0,f,c
 10266  003662  C00A  F008         	movff	??_atoi,?_atoi
 10267  003666  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10268  00366A  EF3B  F01B         	goto	l1345
 10269  00366E                     l1342:
 10270  00366E  C015  F008         	movff	atoi@n,?_atoi
 10271  003672  C016  F009         	movff	atoi@n+1,?_atoi+1
 10272  003676                     l1345:
 10273  003676  0012               	return		;funcret
 10274  003678                     __end_of_atoi:
 10275                           	callstack 0
 10276                           
 10277 ;; *************** function _isspace *****************
 10278 ;; Defined at:
 10279 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;  c               2    0[COMRAM] int 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  2    0[COMRAM] int 
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10293 ;;      Params:         2       0       0       0       0       0       0       0       0
 10294 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10295 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10296 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10297 ;;Total ram usage:        7 bytes
 10298 ;; Hardware stack levels used: 1
 10299 ;; Hardware stack levels required when called: 1
 10300 ;; This function calls:
 10301 ;;		Nothing
 10302 ;; This function is called by:
 10303 ;;		_atoi
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307                           	psect	text35
 10308  004270                     __ptext35:
 10309                           	callstack 0
 10310  004270                     _isspace:
 10311                           	callstack 25
 10312  004270  0E01               	movlw	1
 10313  004272  6E07               	movwf	_isspace$1787^0,c
 10314  004274  0E20               	movlw	32
 10315  004276  1801               	xorwf	isspace@c^0,w,c
 10316  004278  1002               	iorwf	(isspace@c+1)^0,w,c
 10317  00427A  B4D8               	btfsc	status,2,c
 10318  00427C  EF42  F021         	goto	u4631
 10319  004280  EF44  F021         	goto	u4630
 10320  004284                     u4631:
 10321  004284  EF5D  F021         	goto	l4298
 10322  004288                     u4630:
 10323  004288  0EF7               	movlw	247
 10324  00428A  6E03               	movwf	??_isspace^0,c
 10325  00428C  0EFF               	movlw	255
 10326  00428E  6E04               	movwf	(??_isspace+1)^0,c
 10327  004290  C001  F005         	movff	isspace@c,??_isspace+2
 10328  004294  C002  F006         	movff	isspace@c+1,??_isspace+3
 10329  004298  5003               	movf	??_isspace^0,w,c
 10330  00429A  2605               	addwf	(??_isspace+2)^0,f,c
 10331  00429C  5004               	movf	(??_isspace+1)^0,w,c
 10332  00429E  2206               	addwfc	(??_isspace+3)^0,f,c
 10333  0042A0  5006               	movf	(??_isspace+3)^0,w,c
 10334  0042A2  E109               	bnz	u4640
 10335  0042A4  0E05               	movlw	5
 10336  0042A6  5C05               	subwf	(??_isspace+2)^0,w,c
 10337  0042A8  A0D8               	btfss	status,0,c
 10338  0042AA  EF59  F021         	goto	u4641
 10339  0042AE  EF5B  F021         	goto	u4640
 10340  0042B2                     u4641:
 10341  0042B2  EF5D  F021         	goto	l4298
 10342  0042B6                     u4640:
 10343  0042B6  0E00               	movlw	0
 10344  0042B8  6E07               	movwf	_isspace$1787^0,c
 10345  0042BA                     l4298:
 10346  0042BA  C007  F001         	movff	_isspace$1787,?_isspace
 10347  0042BE  6A02               	clrf	(?_isspace+1)^0,c
 10348  0042C0  0012               	return		;funcret
 10349  0042C2                     __end_of_isspace:
 10350                           	callstack 0
 10351                           
 10352 ;; *************** function _isdigit *****************
 10353 ;; Defined at:
 10354 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10355 ;; Parameters:    Size  Location     Type
 10356 ;;  c               2    0[COMRAM] int 
 10357 ;; Auto vars:     Size  Location     Type
 10358 ;;		None
 10359 ;; Return value:  Size  Location     Type
 10360 ;;                  2    0[COMRAM] int 
 10361 ;; Registers used:
 10362 ;;		wreg, status,2, status,0
 10363 ;; Tracked objects:
 10364 ;;		On entry : 0/0
 10365 ;;		On exit  : 0/0
 10366 ;;		Unchanged: 0/0
 10367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10368 ;;      Params:         2       0       0       0       0       0       0       0       0
 10369 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10370 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10371 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10372 ;;Total ram usage:        6 bytes
 10373 ;; Hardware stack levels used: 1
 10374 ;; Hardware stack levels required when called: 1
 10375 ;; This function calls:
 10376 ;;		Nothing
 10377 ;; This function is called by:
 10378 ;;		_vfpfcnvrt
 10379 ;;		_atoi
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           	psect	text36
 10384  004660                     __ptext36:
 10385                           	callstack 0
 10386  004660                     _isdigit:
 10387                           	callstack 26
 10388  004660  0ED0               	movlw	208
 10389  004662  6E03               	movwf	??_isdigit^0,c
 10390  004664  0EFF               	movlw	255
 10391  004666  6E04               	movwf	(??_isdigit+1)^0,c
 10392  004668  C001  F005         	movff	isdigit@c,??_isdigit+2
 10393  00466C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10394  004670  5003               	movf	??_isdigit^0,w,c
 10395  004672  2605               	addwf	(??_isdigit+2)^0,f,c
 10396  004674  5004               	movf	(??_isdigit+1)^0,w,c
 10397  004676  2206               	addwfc	(??_isdigit+3)^0,f,c
 10398  004678  5006               	movf	(??_isdigit+3)^0,w,c
 10399  00467A  E10A               	bnz	u4610
 10400  00467C  0E0A               	movlw	10
 10401  00467E  5C05               	subwf	(??_isdigit+2)^0,w,c
 10402  004680  A0D8               	btfss	status,0,c
 10403  004682  EF45  F023         	goto	u4611
 10404  004686  EF48  F023         	goto	u4610
 10405  00468A                     u4611:
 10406  00468A  0E01               	movlw	1
 10407  00468C  EF49  F023         	goto	u4620
 10408  004690                     u4610:
 10409  004690  0E00               	movlw	0
 10410  004692                     u4620:
 10411  004692  6E01               	movwf	?_isdigit^0,c
 10412  004694  6A02               	clrf	(?_isdigit+1)^0,c
 10413  004696  0012               	return		;funcret
 10414  004698                     __end_of_isdigit:
 10415                           	callstack 0
 10416                           
 10417 ;; *************** function ___wmul *****************
 10418 ;; Defined at:
 10419 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  multiplier      2    0[COMRAM] unsigned int 
 10422 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10423 ;; Auto vars:     Size  Location     Type
 10424 ;;  product         2    4[COMRAM] unsigned int 
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  2    0[COMRAM] unsigned int 
 10427 ;; Registers used:
 10428 ;;		wreg, status,2, status,0, prodl, prodh
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10434 ;;      Params:         4       0       0       0       0       0       0       0       0
 10435 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10436 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10437 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10438 ;;Total ram usage:        6 bytes
 10439 ;; Hardware stack levels used: 1
 10440 ;; Hardware stack levels required when called: 1
 10441 ;; This function calls:
 10442 ;;		Nothing
 10443 ;; This function is called by:
 10444 ;;		_atoi
 10445 ;; This function uses a non-reentrant model
 10446 ;;
 10447                           
 10448                           	psect	text37
 10449  00475A                     __ptext37:
 10450                           	callstack 0
 10451  00475A                     ___wmul:
 10452                           	callstack 25
 10453  00475A  5001               	movf	___wmul@multiplier^0,w,c
 10454  00475C  0203               	mulwf	___wmul@multiplicand^0,c
 10455  00475E  CFF3 F005          	movff	prodl,___wmul@product
 10456  004762  CFF4 F006          	movff	prodh,___wmul@product+1
 10457  004766  5001               	movf	___wmul@multiplier^0,w,c
 10458  004768  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10459  00476A  50F3               	movf	243,w,c
 10460  00476C  2606               	addwf	(___wmul@product+1)^0,f,c
 10461  00476E  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10462  004770  0203               	mulwf	___wmul@multiplicand^0,c
 10463  004772  50F3               	movf	243,w,c
 10464  004774  2606               	addwf	(___wmul@product+1)^0,f,c
 10465  004776  C005  F001         	movff	___wmul@product,?___wmul
 10466  00477A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10467  00477E  0012               	return		;funcret
 10468  004780                     __end_of___wmul:
 10469                           	callstack 0
 10470                           
 10471 ;; *************** function _RTC_Read_Clock *****************
 10472 ;; Defined at:
 10473 ;;		line 34 in file "reloj.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  read_clock_a    1    wreg     unsigned char 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  read_clock_a    1    3[COMRAM] unsigned char 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  1    wreg      void 
 10480 ;; Registers used:
 10481 ;;		wreg, status,2, status,0, cstack
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10487 ;;      Params:         0       0       0       0       0       0       0       0       0
 10488 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10489 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10490 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10491 ;;Total ram usage:        2 bytes
 10492 ;; Hardware stack levels used: 1
 10493 ;; Hardware stack levels required when called: 4
 10494 ;; This function calls:
 10495 ;;		_I2C_Read
 10496 ;;		_I2C_Repeated_Start
 10497 ;;		_I2C_Start
 10498 ;;		_I2C_Write
 10499 ;; This function is called by:
 10500 ;;		_RTC_Calendario
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text38
 10505  004478                     __ptext38:
 10506                           	callstack 0
 10507  004478                     _RTC_Read_Clock:
 10508                           	callstack 25
 10509                           
 10510                           ;incstack = 0
 10511                           ;RTC_Read_Clock@read_clock_address stored from wreg
 10512  004478  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
 10513  00447A                     
 10514                           ;reloj.c: 34: void RTC_Read_Clock(char read_clock_address);reloj.c: 35: {;reloj.c: 36:  
      +                             I2C_Start(0xD0);
 10515  00447A  0ED0               	movlw	208
 10516  00447C  EC7F  F023         	call	_I2C_Start
 10517                           
 10518                           ;reloj.c: 37:     I2C_Write(read_clock_address);
 10519  004480  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
 10520  004482  ECC0  F023         	call	_I2C_Write
 10521                           
 10522                           ;reloj.c: 38:     I2C_Repeated_Start(0xD1);
 10523  004486  0ED1               	movlw	209
 10524  004488  EC96  F023         	call	_I2C_Repeated_Start
 10525  00448C                     
 10526                           ;reloj.c: 39:     sec = I2C_Read(0);
 10527  00448C  0E00               	movlw	0
 10528  00448E  ECBF  F022         	call	_I2C_Read
 10529  004492  6E03               	movwf	??_RTC_Read_Clock^0,c
 10530  004494  5003               	movf	??_RTC_Read_Clock^0,w,c
 10531  004496  0101               	movlb	1	; () banked
 10532  004498  6F28               	movwf	_sec& (0+255),b
 10533  00449A  6B29               	clrf	(_sec+1)& (0+255),b
 10534  00449C                     
 10535                           ; BSR set to: 1
 10536                           ;reloj.c: 40:     min = I2C_Read(0);
 10537  00449C  0E00               	movlw	0
 10538  00449E  ECBF  F022         	call	_I2C_Read
 10539  0044A2  6E03               	movwf	??_RTC_Read_Clock^0,c
 10540  0044A4  5003               	movf	??_RTC_Read_Clock^0,w,c
 10541  0044A6  0101               	movlb	1	; () banked
 10542  0044A8  6F26               	movwf	_min& (0+255),b
 10543  0044AA  6B27               	clrf	(_min+1)& (0+255),b
 10544  0044AC                     
 10545                           ; BSR set to: 1
 10546                           ;reloj.c: 41:     hour= I2C_Read(1);
 10547  0044AC  0E01               	movlw	1
 10548  0044AE  ECBF  F022         	call	_I2C_Read
 10549  0044B2  6E03               	movwf	??_RTC_Read_Clock^0,c
 10550  0044B4  5003               	movf	??_RTC_Read_Clock^0,w,c
 10551  0044B6  0101               	movlb	1	; () banked
 10552  0044B8  6F24               	movwf	_hour& (0+255),b
 10553  0044BA  6B25               	clrf	(_hour+1)& (0+255),b
 10554  0044BC                     
 10555                           ; BSR set to: 1
 10556  0044BC  0012               	return		;funcret
 10557  0044BE                     __end_of_RTC_Read_Clock:
 10558                           	callstack 0
 10559                           
 10560 ;; *************** function _RTC_Read_Calendar *****************
 10561 ;; Defined at:
 10562 ;;		line 57 in file "reloj.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  read_calenda    1    wreg     unsigned char 
 10565 ;; Auto vars:     Size  Location     Type
 10566 ;;  read_calenda    1    3[COMRAM] unsigned char 
 10567 ;; Return value:  Size  Location     Type
 10568 ;;                  1    wreg      void 
 10569 ;; Registers used:
 10570 ;;		wreg, status,2, status,0, cstack
 10571 ;; Tracked objects:
 10572 ;;		On entry : 0/0
 10573 ;;		On exit  : 0/0
 10574 ;;		Unchanged: 0/0
 10575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10576 ;;      Params:         0       0       0       0       0       0       0       0       0
 10577 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10578 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10579 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10580 ;;Total ram usage:        2 bytes
 10581 ;; Hardware stack levels used: 1
 10582 ;; Hardware stack levels required when called: 4
 10583 ;; This function calls:
 10584 ;;		_I2C_Read
 10585 ;;		_I2C_Repeated_Start
 10586 ;;		_I2C_Start
 10587 ;;		_I2C_Stop
 10588 ;;		_I2C_Write
 10589 ;; This function is called by:
 10590 ;;		_RTC_Calendario
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           	psect	text39
 10595  0041C4                     __ptext39:
 10596                           	callstack 0
 10597  0041C4                     _RTC_Read_Calendar:
 10598                           	callstack 25
 10599                           
 10600                           ; BSR set to: 1
 10601                           ;incstack = 0
 10602                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
 10603  0041C4  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
 10604  0041C6                     
 10605                           ;reloj.c: 57: void RTC_Read_Calendar(char read_calendar_address);reloj.c: 58: {;reloj.c:
      +                           59:     I2C_Start(0xD0);
 10606  0041C6  0ED0               	movlw	208
 10607  0041C8  EC7F  F023         	call	_I2C_Start
 10608                           
 10609                           ;reloj.c: 60:     I2C_Write(read_calendar_address);
 10610  0041CC  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
 10611  0041CE  ECC0  F023         	call	_I2C_Write
 10612                           
 10613                           ;reloj.c: 61:     I2C_Repeated_Start(0xD1);
 10614  0041D2  0ED1               	movlw	209
 10615  0041D4  EC96  F023         	call	_I2C_Repeated_Start
 10616  0041D8                     
 10617                           ;reloj.c: 62:     Day = I2C_Read(0);
 10618  0041D8  0E00               	movlw	0
 10619  0041DA  ECBF  F022         	call	_I2C_Read
 10620  0041DE  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10621  0041E0  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10622  0041E2  0101               	movlb	1	; () banked
 10623  0041E4  6F22               	movwf	_Day& (0+255),b
 10624  0041E6  6B23               	clrf	(_Day+1)& (0+255),b
 10625  0041E8                     
 10626                           ; BSR set to: 1
 10627                           ;reloj.c: 63:     Date = I2C_Read(0);
 10628  0041E8  0E00               	movlw	0
 10629  0041EA  ECBF  F022         	call	_I2C_Read
 10630  0041EE  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10631  0041F0  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10632  0041F2  0101               	movlb	1	; () banked
 10633  0041F4  6F20               	movwf	_Date& (0+255),b
 10634  0041F6  6B21               	clrf	(_Date+1)& (0+255),b
 10635  0041F8                     
 10636                           ; BSR set to: 1
 10637                           ;reloj.c: 64:     Month = I2C_Read(0);
 10638  0041F8  0E00               	movlw	0
 10639  0041FA  ECBF  F022         	call	_I2C_Read
 10640  0041FE  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10641  004200  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10642  004202  0101               	movlb	1	; () banked
 10643  004204  6F1E               	movwf	_Month& (0+255),b
 10644  004206  6B1F               	clrf	(_Month+1)& (0+255),b
 10645  004208                     
 10646                           ; BSR set to: 1
 10647                           ;reloj.c: 65:     Year = I2C_Read(1);
 10648  004208  0E01               	movlw	1
 10649  00420A  ECBF  F022         	call	_I2C_Read
 10650  00420E  6E03               	movwf	??_RTC_Read_Calendar^0,c
 10651  004210  5003               	movf	??_RTC_Read_Calendar^0,w,c
 10652  004212  0101               	movlb	1	; () banked
 10653  004214  6F1C               	movwf	_Year& (0+255),b
 10654  004216  6B1D               	clrf	(_Year+1)& (0+255),b
 10655  004218                     
 10656                           ; BSR set to: 1
 10657                           ;reloj.c: 66:     I2C_Stop();
 10658  004218  ECFD  F023         	call	_I2C_Stop	;wreg free
 10659  00421C  0012               	return		;funcret
 10660  00421E                     __end_of_RTC_Read_Calendar:
 10661                           	callstack 0
 10662                           
 10663 ;; *************** function _I2C_Stop *****************
 10664 ;; Defined at:
 10665 ;;		line 93 in file "Reloj_ar.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;		None
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;		None
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      unsigned char 
 10672 ;; Registers used:
 10673 ;;		wreg
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10679 ;;      Params:         0       0       0       0       0       0       0       0       0
 10680 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10681 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10682 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10683 ;;Total ram usage:        0 bytes
 10684 ;; Hardware stack levels used: 1
 10685 ;; Hardware stack levels required when called: 1
 10686 ;; This function calls:
 10687 ;;		Nothing
 10688 ;; This function is called by:
 10689 ;;		_RTC_Read_Calendar
 10690 ;;		_RTC_Calendario
 10691 ;;		_I2C_Start_Wait
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           
 10695                           	psect	text40
 10696  0047FA                     __ptext40:
 10697                           	callstack 0
 10698  0047FA                     _I2C_Stop:
 10699                           	callstack 27
 10700  0047FA                     
 10701                           ;Reloj_ar.c: 95:     PEN = 1;
 10702  0047FA  84C5               	bsf	4037,2,c	;volatile
 10703  0047FC                     l382:
 10704  0047FC  B4C5               	btfsc	4037,2,c	;volatile
 10705  0047FE  EF03  F024         	goto	u5811
 10706  004802  EF05  F024         	goto	u5810
 10707  004806                     u5811:
 10708  004806  EFFE  F023         	goto	l382
 10709  00480A                     u5810:
 10710  00480A                     
 10711                           ;Reloj_ar.c: 97:     if(!SSPSTATbits.P);
 10712  00480A  50C7               	movf	199,w,c	;volatile
 10713  00480C  0012               	return		;funcret
 10714  00480E                     __end_of_I2C_Stop:
 10715                           	callstack 0
 10716                           
 10717 ;; *************** function _I2C_Start *****************
 10718 ;; Defined at:
 10719 ;;		line 68 in file "Reloj_ar.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;  slave_write_    1    wreg     unsigned char 
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;  slave_write_    1    1[COMRAM] unsigned char 
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  1    wreg      unsigned char 
 10726 ;; Registers used:
 10727 ;;		wreg, status,2, cstack
 10728 ;; Tracked objects:
 10729 ;;		On entry : 0/0
 10730 ;;		On exit  : 0/0
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10733 ;;      Params:         0       0       0       0       0       0       0       0       0
 10734 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10735 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10736 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10737 ;;Total ram usage:        1 bytes
 10738 ;; Hardware stack levels used: 1
 10739 ;; Hardware stack levels required when called: 3
 10740 ;; This function calls:
 10741 ;;		_I2C_Write
 10742 ;; This function is called by:
 10743 ;;		_RTC_Read_Clock
 10744 ;;		_RTC_Read_Calendar
 10745 ;; This function uses a non-reentrant model
 10746 ;;
 10747                           
 10748                           	psect	text41
 10749  0046FE                     __ptext41:
 10750                           	callstack 0
 10751  0046FE                     _I2C_Start:
 10752                           	callstack 25
 10753                           
 10754                           ;incstack = 0
 10755                           ;I2C_Start@slave_write_address stored from wreg
 10756  0046FE  6E02               	movwf	I2C_Start@slave_write_address^0,c
 10757  004700                     
 10758                           ;Reloj_ar.c: 68: char I2C_Start(char slave_write_address);Reloj_ar.c: 69: {;Reloj_ar.c: 
      +                          70:     SSPCON2bits.SEN=1;
 10759  004700  80C5               	bsf	197,0,c	;volatile
 10760  004702                     l366:
 10761  004702  B0C5               	btfsc	197,0,c	;volatile
 10762  004704  EF86  F023         	goto	u5751
 10763  004708  EF88  F023         	goto	u5750
 10764  00470C                     u5751:
 10765  00470C  EF81  F023         	goto	l366
 10766  004710                     u5750:
 10767  004710                     
 10768                           ;Reloj_ar.c: 72:  SSPIF=0;
 10769  004710  969E               	bcf	3998,3,c	;volatile
 10770                           
 10771                           ;Reloj_ar.c: 73:     if(!SSPSTATbits.S)
 10772  004712  B6C7               	btfsc	199,3,c	;volatile
 10773  004714  EF8E  F023         	goto	u5761
 10774  004718  EF90  F023         	goto	u5760
 10775  00471C                     u5761:
 10776  00471C  EF92  F023         	goto	l4970
 10777  004720                     u5760:
 10778  004720  EF95  F023         	goto	l370
 10779  004724                     l4970:
 10780                           
 10781                           ;Reloj_ar.c: 75:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Star
      +                          t is never used
 10782  004724  5002               	movf	I2C_Start@slave_write_address^0,w,c
 10783  004726  ECC0  F023         	call	_I2C_Write
 10784  00472A                     l370:
 10785  00472A  0012               	return		;funcret
 10786  00472C                     __end_of_I2C_Start:
 10787                           	callstack 0
 10788                           
 10789 ;; *************** function _I2C_Repeated_Start *****************
 10790 ;; Defined at:
 10791 ;;		line 79 in file "Reloj_ar.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  slave_read_a    1    wreg     unsigned char 
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;  slave_read_a    1    1[COMRAM] unsigned char 
 10796 ;; Return value:  Size  Location     Type
 10797 ;;                  1    wreg      unsigned char 
 10798 ;; Registers used:
 10799 ;;		wreg, status,2, cstack
 10800 ;; Tracked objects:
 10801 ;;		On entry : 0/0
 10802 ;;		On exit  : 0/0
 10803 ;;		Unchanged: 0/0
 10804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10805 ;;      Params:         0       0       0       0       0       0       0       0       0
 10806 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10807 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10808 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10809 ;;Total ram usage:        1 bytes
 10810 ;; Hardware stack levels used: 1
 10811 ;; Hardware stack levels required when called: 3
 10812 ;; This function calls:
 10813 ;;		_I2C_Write
 10814 ;; This function is called by:
 10815 ;;		_RTC_Read_Clock
 10816 ;;		_RTC_Read_Calendar
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           	psect	text42
 10821  00472C                     __ptext42:
 10822                           	callstack 0
 10823  00472C                     _I2C_Repeated_Start:
 10824                           	callstack 25
 10825                           
 10826                           ;incstack = 0
 10827                           ;I2C_Repeated_Start@slave_read_address stored from wreg
 10828  00472C  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
 10829  00472E                     
 10830                           ;Reloj_ar.c: 79: char I2C_Repeated_Start(char slave_read_address);Reloj_ar.c: 80: {;Relo
      +                          j_ar.c: 81:     RSEN = 1;
 10831  00472E  82C5               	bsf	4037,1,c	;volatile
 10832  004730                     l373:
 10833  004730  B2C5               	btfsc	4037,1,c	;volatile
 10834  004732  EF9D  F023         	goto	u5771
 10835  004736  EF9F  F023         	goto	u5770
 10836  00473A                     u5771:
 10837  00473A  EF98  F023         	goto	l373
 10838  00473E                     u5770:
 10839  00473E                     
 10840                           ;Reloj_ar.c: 83:     SSPIF = 0;
 10841  00473E  969E               	bcf	3998,3,c	;volatile
 10842                           
 10843                           ;Reloj_ar.c: 84:  if(!SSPSTATbits.S)
 10844  004740  B6C7               	btfsc	199,3,c	;volatile
 10845  004742  EFA5  F023         	goto	u5781
 10846  004746  EFA7  F023         	goto	u5780
 10847  00474A                     u5781:
 10848  00474A  EFA9  F023         	goto	l4978
 10849  00474E                     u5780:
 10850  00474E  EFAC  F023         	goto	l377
 10851  004752                     l4978:
 10852                           
 10853                           ;Reloj_ar.c: 86:     I2C_Write(slave_read_address);
 10854  004752  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
 10855  004754  ECC0  F023         	call	_I2C_Write
 10856  004758                     l377:
 10857  004758  0012               	return		;funcret
 10858  00475A                     __end_of_I2C_Repeated_Start:
 10859                           	callstack 0
 10860                           
 10861 ;; *************** function _I2C_Write *****************
 10862 ;; Defined at:
 10863 ;;		line 101 in file "Reloj_ar.c"
 10864 ;; Parameters:    Size  Location     Type
 10865 ;;  data            1    wreg     unsigned char 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;  data            1    0[COMRAM] unsigned char 
 10868 ;; Return value:  Size  Location     Type
 10869 ;;                  1    wreg      unsigned char 
 10870 ;; Registers used:
 10871 ;;		wreg, cstack
 10872 ;; Tracked objects:
 10873 ;;		On entry : 0/0
 10874 ;;		On exit  : 0/0
 10875 ;;		Unchanged: 0/0
 10876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10877 ;;      Params:         0       0       0       0       0       0       0       0       0
 10878 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10879 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10880 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10881 ;;Total ram usage:        1 bytes
 10882 ;; Hardware stack levels used: 1
 10883 ;; Hardware stack levels required when called: 2
 10884 ;; This function calls:
 10885 ;;		_I2C_Ready
 10886 ;; This function is called by:
 10887 ;;		_RTC_Read_Clock
 10888 ;;		_RTC_Read_Calendar
 10889 ;;		_I2C_Start
 10890 ;;		_I2C_Repeated_Start
 10891 ;;		_I2C_Start_Wait
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           	psect	text43
 10896  004780                     __ptext43:
 10897                           	callstack 0
 10898  004780                     _I2C_Write:
 10899                           	callstack 26
 10900                           
 10901                           ;incstack = 0
 10902                           ;I2C_Write@data stored from wreg
 10903  004780  6E01               	movwf	I2C_Write@data^0,c
 10904  004782                     
 10905                           ;Reloj_ar.c: 101: char I2C_Write(unsigned char data);Reloj_ar.c: 102: {;Reloj_ar.c: 103:
      +                                 SSPBUF = data;
 10906  004782  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
 10907  004786                     
 10908                           ;Reloj_ar.c: 104:       I2C_Ready();
 10909  004786  EC2F  F024         	call	_I2C_Ready	;wreg free
 10910  00478A                     
 10911                           ;Reloj_ar.c: 105:       if (ACKSTAT)
 10912  00478A  ACC5               	btfss	4037,6,c	;volatile
 10913  00478C  EFCA  F023         	goto	u5511
 10914  004790  EFCC  F023         	goto	u5510
 10915  004794                     u5511:
 10916  004794  EFCF  F023         	goto	l4788
 10917  004798                     u5510:
 10918  004798                     
 10919                           ;Reloj_ar.c: 106:         return 1;
 10920  004798  0E01               	movlw	1
 10921  00479A  EFD0  F023         	goto	l390
 10922  00479E                     l4788:
 10923                           
 10924                           ;Reloj_ar.c: 108:         return 2;
 10925  00479E  0E02               	movlw	2
 10926  0047A0                     l390:
 10927  0047A0  0012               	return		;funcret
 10928  0047A2                     __end_of_I2C_Write:
 10929                           	callstack 0
 10930                           
 10931 ;; *************** function _I2C_Read *****************
 10932 ;; Defined at:
 10933 ;;		line 12 in file "Reloj_ar.c"
 10934 ;; Parameters:    Size  Location     Type
 10935 ;;  flag            1    wreg     unsigned char 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  flag            1    0[COMRAM] unsigned char 
 10938 ;;  buffer          1    1[COMRAM] unsigned char 
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  1    wreg      unsigned char 
 10941 ;; Registers used:
 10942 ;;		wreg, status,2, cstack
 10943 ;; Tracked objects:
 10944 ;;		On entry : 0/0
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10948 ;;      Params:         0       0       0       0       0       0       0       0       0
 10949 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10950 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10951 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10952 ;;Total ram usage:        2 bytes
 10953 ;; Hardware stack levels used: 1
 10954 ;; Hardware stack levels required when called: 2
 10955 ;; This function calls:
 10956 ;;		_I2C_Ack
 10957 ;;		_I2C_Nack
 10958 ;;		_I2C_Ready
 10959 ;; This function is called by:
 10960 ;;		_RTC_Read_Clock
 10961 ;;		_RTC_Read_Calendar
 10962 ;; This function uses a non-reentrant model
 10963 ;;
 10964                           
 10965                           	psect	text44
 10966  00457E                     __ptext44:
 10967                           	callstack 0
 10968  00457E                     _I2C_Read:
 10969                           	callstack 26
 10970                           
 10971                           ;incstack = 0
 10972                           ;I2C_Read@flag stored from wreg
 10973  00457E  6E01               	movwf	I2C_Read@flag^0,c
 10974  004580                     
 10975                           ;Reloj_ar.c: 12: char I2C_Read(char flag);Reloj_ar.c: 14: {;Reloj_ar.c: 15:         char
      +                           buffer;;Reloj_ar.c: 16:         RCEN = 1;
 10976  004580  86C5               	bsf	4037,3,c	;volatile
 10977  004582                     l338:
 10978  004582  A0C7               	btfss	199,0,c	;volatile
 10979  004584  EFC6  F022         	goto	u5791
 10980  004588  EFC8  F022         	goto	u5790
 10981  00458C                     u5791:
 10982  00458C  EFC1  F022         	goto	l338
 10983  004590                     u5790:
 10984  004590                     
 10985                           ;Reloj_ar.c: 19:         buffer = SSPBUF;
 10986  004590  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
 10987  004594                     
 10988                           ;Reloj_ar.c: 21:         if(flag==0)
 10989  004594  5001               	movf	I2C_Read@flag^0,w,c
 10990  004596  A4D8               	btfss	status,2,c
 10991  004598  EFD0  F022         	goto	u5801
 10992  00459C  EFD2  F022         	goto	u5800
 10993  0045A0                     u5801:
 10994  0045A0  EFD6  F022         	goto	l4992
 10995  0045A4                     u5800:
 10996  0045A4                     
 10997                           ;Reloj_ar.c: 22:             I2C_Ack();
 10998  0045A4  EC11  F024         	call	_I2C_Ack	;wreg free
 10999  0045A8  EFD8  F022         	goto	l342
 11000  0045AC                     l4992:
 11001                           
 11002                           ;Reloj_ar.c: 24:             I2C_Nack();
 11003  0045AC  EC07  F024         	call	_I2C_Nack	;wreg free
 11004  0045B0                     l342:
 11005                           
 11006                           ;Reloj_ar.c: 25:         I2C_Ready();
 11007  0045B0  EC2F  F024         	call	_I2C_Ready	;wreg free
 11008  0045B4                     
 11009                           ;Reloj_ar.c: 26:         return(buffer);
 11010  0045B4  5002               	movf	I2C_Read@buffer^0,w,c
 11011  0045B6  0012               	return		;funcret
 11012  0045B8                     __end_of_I2C_Read:
 11013                           	callstack 0
 11014                           
 11015 ;; *************** function _I2C_Ready *****************
 11016 ;; Defined at:
 11017 ;;		line 43 in file "Reloj_ar.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;		None
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;		None
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  1    wreg      void 
 11024 ;; Registers used:
 11025 ;;		None
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11031 ;;      Params:         0       0       0       0       0       0       0       0       0
 11032 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11033 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11034 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11035 ;;Total ram usage:        0 bytes
 11036 ;; Hardware stack levels used: 1
 11037 ;; Hardware stack levels required when called: 1
 11038 ;; This function calls:
 11039 ;;		Nothing
 11040 ;; This function is called by:
 11041 ;;		_I2C_Read
 11042 ;;		_I2C_Write
 11043 ;; This function uses a non-reentrant model
 11044 ;;
 11045                           
 11046                           	psect	text45
 11047  00485E                     __ptext45:
 11048                           	callstack 0
 11049  00485E                     _I2C_Ready:
 11050                           	callstack 26
 11051  00485E                     l349:
 11052  00485E  A69E               	btfss	3998,3,c	;volatile
 11053  004860  EF34  F024         	goto	u4671
 11054  004864  EF36  F024         	goto	u4670
 11055  004868                     u4671:
 11056  004868  EF2F  F024         	goto	l349
 11057  00486C                     u4670:
 11058  00486C                     
 11059                           ;Reloj_ar.c: 46:     SSPIF=0;
 11060  00486C  969E               	bcf	3998,3,c	;volatile
 11061  00486E  0012               	return		;funcret
 11062  004870                     __end_of_I2C_Ready:
 11063                           	callstack 0
 11064                           
 11065 ;; *************** function _I2C_Nack *****************
 11066 ;; Defined at:
 11067 ;;		line 118 in file "Reloj_ar.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;		None
 11070 ;; Auto vars:     Size  Location     Type
 11071 ;;		None
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  1    wreg      void 
 11074 ;; Registers used:
 11075 ;;		None
 11076 ;; Tracked objects:
 11077 ;;		On entry : 0/0
 11078 ;;		On exit  : 0/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11081 ;;      Params:         0       0       0       0       0       0       0       0       0
 11082 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11084 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11085 ;;Total ram usage:        0 bytes
 11086 ;; Hardware stack levels used: 1
 11087 ;; Hardware stack levels required when called: 1
 11088 ;; This function calls:
 11089 ;;		Nothing
 11090 ;; This function is called by:
 11091 ;;		_I2C_Read
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095                           	psect	text46
 11096  00480E                     __ptext46:
 11097                           	callstack 0
 11098  00480E                     _I2C_Nack:
 11099                           	callstack 26
 11100  00480E                     
 11101                           ;Reloj_ar.c: 120:     ACKDT=1;
 11102  00480E  8AC5               	bsf	4037,5,c	;volatile
 11103                           
 11104                           ;Reloj_ar.c: 121:  ACKEN=1;
 11105  004810  88C5               	bsf	4037,4,c	;volatile
 11106  004812                     l400:
 11107  004812  B8C5               	btfsc	4037,4,c	;volatile
 11108  004814  EF0E  F024         	goto	u5531
 11109  004818  EF10  F024         	goto	u5530
 11110  00481C                     u5531:
 11111  00481C  EF09  F024         	goto	l400
 11112  004820                     u5530:
 11113  004820  0012               	return		;funcret
 11114  004822                     __end_of_I2C_Nack:
 11115                           	callstack 0
 11116                           
 11117 ;; *************** function _I2C_Ack *****************
 11118 ;; Defined at:
 11119 ;;		line 111 in file "Reloj_ar.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;		None
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;		None
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  1    wreg      void 
 11126 ;; Registers used:
 11127 ;;		None
 11128 ;; Tracked objects:
 11129 ;;		On entry : 0/0
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11133 ;;      Params:         0       0       0       0       0       0       0       0       0
 11134 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11135 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11136 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11137 ;;Total ram usage:        0 bytes
 11138 ;; Hardware stack levels used: 1
 11139 ;; Hardware stack levels required when called: 1
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_I2C_Read
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text47
 11148  004822                     __ptext47:
 11149                           	callstack 0
 11150  004822                     _I2C_Ack:
 11151                           	callstack 26
 11152  004822                     
 11153                           ;Reloj_ar.c: 113:     ACKDT=0;
 11154  004822  9AC5               	bcf	4037,5,c	;volatile
 11155                           
 11156                           ;Reloj_ar.c: 114:  ACKEN=1;
 11157  004824  88C5               	bsf	4037,4,c	;volatile
 11158  004826                     l394:
 11159  004826  B8C5               	btfsc	4037,4,c	;volatile
 11160  004828  EF18  F024         	goto	u5521
 11161  00482C  EF1A  F024         	goto	u5520
 11162  004830                     u5521:
 11163  004830  EF13  F024         	goto	l394
 11164  004834                     u5520:
 11165  004834  0012               	return		;funcret
 11166  004836                     __end_of_I2C_Ack:
 11167                           	callstack 0
 11168                           
 11169 ;; *************** function _LCD_String_xy *****************
 11170 ;; Defined at:
 11171 ;;		line 75 in file "LCD_caracter.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;  row             1    wreg     unsigned char 
 11174 ;;  pos             1   10[COMRAM] unsigned char 
 11175 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 11176 ;;		 -> RTC_Calendario@date(10), RTC_Calendario@hours(10), STR_6(3), STR_5(3), 
 11177 ;;		 -> Stemp(20), STR_1(14), 
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;  row             1   13[COMRAM] unsigned char 
 11180 ;;  location        1   14[COMRAM] unsigned char 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      void 
 11183 ;; Registers used:
 11184 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11190 ;;      Params:         3       0       0       0       0       0       0       0       0
 11191 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11193 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11194 ;;Total ram usage:        5 bytes
 11195 ;; Hardware stack levels used: 1
 11196 ;; Hardware stack levels required when called: 4
 11197 ;; This function calls:
 11198 ;;		_LCD_Command
 11199 ;;		_LCD_String
 11200 ;; This function is called by:
 11201 ;;		_main
 11202 ;;		_RTC_Calendario
 11203 ;; This function uses a non-reentrant model
 11204 ;;
 11205                           
 11206                           	psect	text48
 11207  004502                     __ptext48:
 11208                           	callstack 0
 11209  004502                     _LCD_String_xy:
 11210                           	callstack 25
 11211                           
 11212                           ;incstack = 0
 11213                           ;LCD_String_xy@row stored from wreg
 11214  004502  6E0E               	movwf	LCD_String_xy@row^0,c
 11215  004504                     
 11216                           ;LCD_caracter.c: 78:     if(row<=1)
 11217  004504  0E02               	movlw	2
 11218  004506  600E               	cpfslt	LCD_String_xy@row^0,c
 11219  004508  EF88  F022         	goto	u5831
 11220  00450C  EF8A  F022         	goto	u5830
 11221  004510                     u5831:
 11222  004510  EF93  F022         	goto	l5038
 11223  004514                     u5830:
 11224  004514                     
 11225                           ;LCD_caracter.c: 79:     {;LCD_caracter.c: 80:         location=(0x80) | ((pos) & 0x0f);
 11226  004514  500B               	movf	LCD_String_xy@pos^0,w,c
 11227  004516  0B0F               	andlw	15
 11228  004518  0980               	iorlw	128
 11229  00451A  6E0F               	movwf	LCD_String_xy@location^0,c
 11230  00451C                     
 11231                           ;LCD_caracter.c: 81:         LCD_Command(location);
 11232  00451C  500F               	movf	LCD_String_xy@location^0,w,c
 11233  00451E  EC61  F021         	call	_LCD_Command
 11234                           
 11235                           ;LCD_caracter.c: 82:     }
 11236  004522  EF9A  F022         	goto	l5042
 11237  004526                     l5038:
 11238                           
 11239                           ;LCD_caracter.c: 84:     {;LCD_caracter.c: 85:         location=(0xC0) | ((pos) & 0x0f);
 11240  004526  500B               	movf	LCD_String_xy@pos^0,w,c
 11241  004528  0B0F               	andlw	15
 11242  00452A  09C0               	iorlw	192
 11243  00452C  6E0F               	movwf	LCD_String_xy@location^0,c
 11244  00452E                     
 11245                           ;LCD_caracter.c: 86:         LCD_Command(location);
 11246  00452E  500F               	movf	LCD_String_xy@location^0,w,c
 11247  004530  EC61  F021         	call	_LCD_Command
 11248  004534                     l5042:
 11249                           
 11250                           ;LCD_caracter.c: 90:     LCD_String(msg);
 11251  004534  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 11252  004538  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 11253  00453C  EC85  F020         	call	_LCD_String	;wreg free
 11254  004540  0012               	return		;funcret
 11255  004542                     __end_of_LCD_String_xy:
 11256                           	callstack 0
 11257                           
 11258 ;; *************** function _LCD_String *****************
 11259 ;; Defined at:
 11260 ;;		line 66 in file "LCD_caracter.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 11263 ;;		 -> STR_22(4), STR_21(4), STR_20(4), STR_19(4), 
 11264 ;;		 -> STR_18(4), STR_17(4), STR_16(4), RTC_Calendario@year(10), 
 11265 ;;		 -> RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), RTC_Calendario@mins(10), 
 11266 ;;		 -> RTC_Calendario@secs(10), STR_6(3), STR_5(3), Stemp(20), 
 11267 ;;		 -> STR_1(14), 
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;		None
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  1    wreg      void 
 11272 ;; Registers used:
 11273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11279 ;;      Params:         2       0       0       0       0       0       0       0       0
 11280 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11281 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11282 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11283 ;;Total ram usage:        2 bytes
 11284 ;; Hardware stack levels used: 1
 11285 ;; Hardware stack levels required when called: 3
 11286 ;; This function calls:
 11287 ;;		_LCD_Char
 11288 ;; This function is called by:
 11289 ;;		_LCD_String_xy
 11290 ;;		_RTC_Calendario
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           	psect	text49
 11295  00410A                     __ptext49:
 11296                           	callstack 0
 11297  00410A                     _LCD_String:
 11298                           	callstack 25
 11299  00410A                     
 11300                           ;LCD_caracter.c: 66: void LCD_String(const char *msg);LCD_caracter.c: 67: {;LCD_caracter
      +                          .c: 68:  while((*msg)!=0)
 11301  00410A  EF9B  F020         	goto	l4964
 11302  00410E                     l4960:
 11303                           
 11304                           ;LCD_caracter.c: 69:  {;LCD_caracter.c: 70:    LCD_Char(*msg);
 11305  00410E  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11306  004112  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11307  004116  6AF8               	clrf	tblptru,c
 11308  004118  0E07               	movlw	(high __ramtop+-1)
 11309  00411A  64F7               	cpfsgt	tblptrh,c
 11310  00411C  D003               	bra	u5727
 11311  00411E  0008               	tblrd		*
 11312  004120  50F5               	movf	tablat,w,c
 11313  004122  D005               	bra	u5720
 11314  004124                     u5727:
 11315  004124  CFF6 FFE1          	movff	tblptrl,fsr1l
 11316  004128  CFF7 FFE2          	movff	tblptrh,fsr1h
 11317  00412C  50E7               	movf	indf1,w,c
 11318  00412E                     u5720:
 11319  00412E  EC87  F021         	call	_LCD_Char
 11320  004132                     
 11321                           ;LCD_caracter.c: 71:    msg++;
 11322  004132  4A09               	infsnz	LCD_String@msg^0,f,c
 11323  004134  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 11324  004136                     l4964:
 11325                           
 11326                           ;LCD_caracter.c: 68:  while((*msg)!=0)
 11327  004136  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11328  00413A  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11329  00413E  6AF8               	clrf	tblptru,c
 11330  004140  0E07               	movlw	(high __ramtop+-1)
 11331  004142  64F7               	cpfsgt	tblptrh,c
 11332  004144  D003               	bra	u5737
 11333  004146  0008               	tblrd		*
 11334  004148  50F5               	movf	tablat,w,c
 11335  00414A  D005               	bra	u5730
 11336  00414C                     u5737:
 11337  00414C  CFF6 FFE1          	movff	tblptrl,fsr1l
 11338  004150  CFF7 FFE2          	movff	tblptrh,fsr1h
 11339  004154  50E7               	movf	indf1,w,c
 11340  004156                     u5730:
 11341  004156  0900               	iorlw	0
 11342  004158  A4D8               	btfss	status,2,c
 11343  00415A  EFB1  F020         	goto	u5741
 11344  00415E  EFB3  F020         	goto	u5740
 11345  004162                     u5741:
 11346  004162  EF87  F020         	goto	l4960
 11347  004166                     u5740:
 11348  004166  0012               	return		;funcret
 11349  004168                     __end_of_LCD_String:
 11350                           	callstack 0
 11351                           
 11352 ;; *************** function _LCD_Init *****************
 11353 ;; Defined at:
 11354 ;;		line 23 in file "LCD_caracter.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;		None
 11357 ;; Auto vars:     Size  Location     Type
 11358 ;;		None
 11359 ;; Return value:  Size  Location     Type
 11360 ;;                  1    wreg      void 
 11361 ;; Registers used:
 11362 ;;		wreg, status,2, status,0, cstack
 11363 ;; Tracked objects:
 11364 ;;		On entry : 0/0
 11365 ;;		On exit  : 0/0
 11366 ;;		Unchanged: 0/0
 11367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11368 ;;      Params:         0       0       0       0       0       0       0       0       0
 11369 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11370 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11371 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11372 ;;Total ram usage:        0 bytes
 11373 ;; Hardware stack levels used: 1
 11374 ;; Hardware stack levels required when called: 3
 11375 ;; This function calls:
 11376 ;;		_LCD_Command
 11377 ;;		_MSdelay
 11378 ;; This function is called by:
 11379 ;;		_main
 11380 ;;		_RTC_Calendario
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text50
 11385  0046CE                     __ptext50:
 11386                           	callstack 0
 11387  0046CE                     _LCD_Init:
 11388                           	callstack 26
 11389  0046CE                     
 11390                           ;LCD_caracter.c: 25:     TRISD = 0;
 11391  0046CE  0E00               	movlw	0
 11392  0046D0  6E95               	movwf	149,c	;volatile
 11393  0046D2                     
 11394                           ;LCD_caracter.c: 26:     MSdelay(15);
 11395  0046D2  0E00               	movlw	0
 11396  0046D4  6E02               	movwf	(MSdelay@val+1)^0,c
 11397  0046D6  0E0F               	movlw	15
 11398  0046D8  6E01               	movwf	MSdelay@val^0,c
 11399  0046DA  ECAD  F021         	call	_MSdelay	;wreg free
 11400  0046DE                     
 11401                           ;LCD_caracter.c: 27:     LCD_Command(0x02);
 11402  0046DE  0E02               	movlw	2
 11403  0046E0  EC61  F021         	call	_LCD_Command
 11404  0046E4                     
 11405                           ;LCD_caracter.c: 29:     LCD_Command(0x28);
 11406  0046E4  0E28               	movlw	40
 11407  0046E6  EC61  F021         	call	_LCD_Command
 11408  0046EA                     
 11409                           ;LCD_caracter.c: 31:  LCD_Command(0x01);
 11410  0046EA  0E01               	movlw	1
 11411  0046EC  EC61  F021         	call	_LCD_Command
 11412  0046F0                     
 11413                           ;LCD_caracter.c: 32:     LCD_Command(0x0c);
 11414  0046F0  0E0C               	movlw	12
 11415  0046F2  EC61  F021         	call	_LCD_Command
 11416  0046F6                     
 11417                           ;LCD_caracter.c: 33:  LCD_Command(0x06);
 11418  0046F6  0E06               	movlw	6
 11419  0046F8  EC61  F021         	call	_LCD_Command
 11420  0046FC  0012               	return		;funcret
 11421  0046FE                     __end_of_LCD_Init:
 11422                           	callstack 0
 11423                           
 11424 ;; *************** function _LCD_Clear *****************
 11425 ;; Defined at:
 11426 ;;		line 93 in file "LCD_caracter.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;		None
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;		None
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  1    wreg      void 
 11433 ;; Registers used:
 11434 ;;		wreg, status,2, status,0, cstack
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11440 ;;      Params:         0       0       0       0       0       0       0       0       0
 11441 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11443 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11444 ;;Total ram usage:        0 bytes
 11445 ;; Hardware stack levels used: 1
 11446 ;; Hardware stack levels required when called: 3
 11447 ;; This function calls:
 11448 ;;		_LCD_Command
 11449 ;;		_MSdelay
 11450 ;; This function is called by:
 11451 ;;		_main
 11452 ;;		_RTC_Calendario
 11453 ;; This function uses a non-reentrant model
 11454 ;;
 11455                           
 11456                           	psect	text51
 11457  004836                     __ptext51:
 11458                           	callstack 0
 11459  004836                     _LCD_Clear:
 11460                           	callstack 26
 11461  004836                     
 11462                           ;LCD_caracter.c: 95:     LCD_Command(0x01);
 11463  004836  0E01               	movlw	1
 11464  004838  EC61  F021         	call	_LCD_Command
 11465                           
 11466                           ;LCD_caracter.c: 96:     MSdelay(3);
 11467  00483C  0E00               	movlw	0
 11468  00483E  6E02               	movwf	(MSdelay@val+1)^0,c
 11469  004840  0E03               	movlw	3
 11470  004842  6E01               	movwf	MSdelay@val^0,c
 11471  004844  ECAD  F021         	call	_MSdelay	;wreg free
 11472  004848  0012               	return		;funcret
 11473  00484A                     __end_of_LCD_Clear:
 11474                           	callstack 0
 11475                           
 11476 ;; *************** function _I2C_Init *****************
 11477 ;; Defined at:
 11478 ;;		line 29 in file "Reloj_ar.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;		None
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;		None
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  1    wreg      void 
 11485 ;; Registers used:
 11486 ;;		wreg, status,2
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11492 ;;      Params:         0       0       0       0       0       0       0       0       0
 11493 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11494 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11495 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11496 ;;Total ram usage:        0 bytes
 11497 ;; Hardware stack levels used: 1
 11498 ;; Hardware stack levels required when called: 1
 11499 ;; This function calls:
 11500 ;;		Nothing
 11501 ;; This function is called by:
 11502 ;;		_main
 11503 ;;		_RTC_Calendario
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text52
 11508  0047E0                     __ptext52:
 11509                           	callstack 0
 11510  0047E0                     _I2C_Init:
 11511                           	callstack 28
 11512  0047E0                     
 11513                           ;Reloj_ar.c: 31:     TRISB0=1;
 11514  0047E0  8093               	bsf	3987,0,c	;volatile
 11515                           
 11516                           ;Reloj_ar.c: 32:  TRISB1=1;
 11517  0047E2  8293               	bsf	3987,1,c	;volatile
 11518  0047E4                     
 11519                           ;Reloj_ar.c: 33:  SSPSTAT=80;
 11520  0047E4  0E50               	movlw	80
 11521  0047E6  6EC7               	movwf	199,c	;volatile
 11522                           
 11523                           ;Reloj_ar.c: 34:     SSPCON1=0x28;
 11524  0047E8  0E28               	movlw	40
 11525  0047EA  6EC6               	movwf	198,c	;volatile
 11526                           
 11527                           ;Reloj_ar.c: 36:  SSPCON2=0;
 11528  0047EC  0E00               	movlw	0
 11529  0047EE  6EC5               	movwf	197,c	;volatile
 11530                           
 11531                           ;Reloj_ar.c: 37:     SSPADD=((8000000/(4*100000))-1);
 11532  0047F0  0E13               	movlw	19
 11533  0047F2  6EC8               	movwf	200,c	;volatile
 11534  0047F4                     
 11535                           ;Reloj_ar.c: 38:     SSPIE=1;
 11536  0047F4  869D               	bsf	3997,3,c	;volatile
 11537  0047F6                     
 11538                           ;Reloj_ar.c: 39:     SSPIF=0;
 11539  0047F6  969E               	bcf	3998,3,c	;volatile
 11540  0047F8  0012               	return		;funcret
 11541  0047FA                     __end_of_I2C_Init:
 11542                           	callstack 0
 11543                           
 11544 ;; *************** function _PlayCancion *****************
 11545 ;; Defined at:
 11546 ;;		line 32 in file "Melodia2.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;		None
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;  var3beep        1    2[COMRAM] unsigned char 
 11551 ;;  var3seg         1    1[COMRAM] unsigned char 
 11552 ;; Return value:  Size  Location     Type
 11553 ;;                  1    wreg      void 
 11554 ;; Registers used:
 11555 ;;		wreg, status,2, status,0, cstack
 11556 ;; Tracked objects:
 11557 ;;		On entry : 0/0
 11558 ;;		On exit  : 0/0
 11559 ;;		Unchanged: 0/0
 11560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11561 ;;      Params:         0       0       0       0       0       0       0       0       0
 11562 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11563 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11564 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11565 ;;Total ram usage:        3 bytes
 11566 ;; Hardware stack levels used: 1
 11567 ;; Hardware stack levels required when called: 2
 11568 ;; This function calls:
 11569 ;;		_conf_CLK
 11570 ;;		_conf_IO
 11571 ;;		_conf_TA1
 11572 ;; This function is called by:
 11573 ;;		_main
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           	psect	text53
 11578  003F04                     __ptext53:
 11579                           	callstack 0
 11580  003F04                     _PlayCancion:
 11581                           	callstack 28
 11582  003F04                     
 11583                           ;Melodia2.c: 34:     uint8_t var3seg = 0;
 11584  003F04  0E00               	movlw	0
 11585  003F06  6E02               	movwf	PlayCancion@var3seg^0,c
 11586                           
 11587                           ;Melodia2.c: 35:     uint8_t var3beep = 0;
 11588  003F08  0E00               	movlw	0
 11589  003F0A  6E03               	movwf	PlayCancion@var3beep^0,c
 11590  003F0C                     
 11591                           ;Melodia2.c: 38:     conf_CLK ();
 11592  003F0C  EC38  F024         	call	_conf_CLK	;wreg free
 11593  003F10                     
 11594                           ;Melodia2.c: 39:     conf_IO ();
 11595  003F10  EC41  F024         	call	_conf_IO	;wreg free
 11596  003F14                     
 11597                           ;Melodia2.c: 40:     conf_TA1 ();
 11598  003F14  EC25  F024         	call	_conf_TA1	;wreg free
 11599  003F18                     
 11600                           ;Melodia2.c: 43:     INTCONbits.PEIE = 1;
 11601  003F18  8CF2               	bsf	242,6,c	;volatile
 11602  003F1A                     
 11603                           ;Melodia2.c: 44:     (INTCONbits.GIE = 1);
 11604  003F1A  8EF2               	bsf	242,7,c	;volatile
 11605  003F1C                     l5326:
 11606                           
 11607                           ;Melodia2.c: 50:         if ( var3seg == 60 && var3beep < 6 )
 11608  003F1C  0E3C               	movlw	60
 11609  003F1E  1802               	xorwf	PlayCancion@var3seg^0,w,c
 11610  003F20  A4D8               	btfss	status,2,c
 11611  003F22  EF95  F01F         	goto	u6031
 11612  003F26  EF97  F01F         	goto	u6030
 11613  003F2A                     u6031:
 11614  003F2A  EFB4  F01F         	goto	l5338
 11615  003F2E                     u6030:
 11616  003F2E  0E06               	movlw	6
 11617  003F30  6003               	cpfslt	PlayCancion@var3beep^0,c
 11618  003F32  EF9D  F01F         	goto	u6041
 11619  003F36  EF9F  F01F         	goto	u6040
 11620  003F3A                     u6041:
 11621  003F3A  EFB4  F01F         	goto	l5338
 11622  003F3E                     u6040:
 11623  003F3E                     
 11624                           ;Melodia2.c: 51:         {;Melodia2.c: 53:             LATDbits.LD2 = ~LATDbits.LD2;
 11625  003F3E  B48C               	btfsc	140,2,c	;volatile
 11626  003F40  EFA4  F01F         	goto	u6051
 11627  003F44  EFA7  F01F         	goto	u6050
 11628  003F48                     u6051:
 11629  003F48  0E01               	movlw	1
 11630  003F4A  EFA8  F01F         	goto	u6056
 11631  003F4E                     u6050:
 11632  003F4E  0E00               	movlw	0
 11633  003F50                     u6056:
 11634  003F50  0AFF               	xorlw	255
 11635  003F52  6E01               	movwf	??_PlayCancion^0,c
 11636  003F54  4601               	rlncf	??_PlayCancion^0,f,c
 11637  003F56  4601               	rlncf	??_PlayCancion^0,f,c
 11638  003F58  508C               	movf	140,w,c	;volatile
 11639  003F5A  1801               	xorwf	??_PlayCancion^0,w,c
 11640  003F5C  0BFB               	andlw	-5
 11641  003F5E  1801               	xorwf	??_PlayCancion^0,w,c
 11642  003F60  6E8C               	movwf	140,c	;volatile
 11643  003F62                     
 11644                           ;Melodia2.c: 54:             var3beep++;
 11645  003F62  2A03               	incf	PlayCancion@var3beep^0,f,c
 11646  003F64  EFC1  F01F         	goto	l205
 11647  003F68                     l5338:
 11648                           
 11649                           ;Melodia2.c: 58:         {;Melodia2.c: 59:             if ( var3beep > 5 )
 11650  003F68  0E05               	movlw	5
 11651  003F6A  6403               	cpfsgt	PlayCancion@var3beep^0,c
 11652  003F6C  EFBA  F01F         	goto	u6061
 11653  003F70  EFBC  F01F         	goto	u6060
 11654  003F74                     u6061:
 11655  003F74  EFBE  F01F         	goto	l5344
 11656  003F78                     u6060:
 11657  003F78  EFC1  F01F         	goto	l205
 11658  003F7C                     l5344:
 11659                           
 11660                           ;Melodia2.c: 67:             var3seg++;
 11661  003F7C  2A02               	incf	PlayCancion@var3seg^0,f,c
 11662  003F7E  EF8E  F01F         	goto	l5326
 11663  003F82                     l205:
 11664  003F82  0012               	return		;funcret
 11665  003F84                     __end_of_PlayCancion:
 11666                           	callstack 0
 11667                           
 11668 ;; *************** function _conf_TA1 *****************
 11669 ;; Defined at:
 11670 ;;		line 131 in file "Melodia2.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;		None
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;		None
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  1    wreg      void 
 11677 ;; Registers used:
 11678 ;;		wreg, status,2
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11684 ;;      Params:         0       0       0       0       0       0       0       0       0
 11685 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11686 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11687 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11688 ;;Total ram usage:        0 bytes
 11689 ;; Hardware stack levels used: 1
 11690 ;; Hardware stack levels required when called: 1
 11691 ;; This function calls:
 11692 ;;		Nothing
 11693 ;; This function is called by:
 11694 ;;		_PlayCancion
 11695 ;; This function uses a non-reentrant model
 11696 ;;
 11697                           
 11698                           	psect	text54
 11699  00484A                     __ptext54:
 11700                           	callstack 0
 11701  00484A                     _conf_TA1:
 11702                           	callstack 28
 11703  00484A                     
 11704                           ;Melodia2.c: 132:     T1CONbits.T1CKPS0 = 1;
 11705  00484A  88CD               	bsf	205,4,c	;volatile
 11706                           
 11707                           ;Melodia2.c: 133:     T1CONbits.T1CKPS1 = 1;
 11708  00484C  8ACD               	bsf	205,5,c	;volatile
 11709  00484E                     
 11710                           ;Melodia2.c: 135:     TMR1H = 0xCF;
 11711  00484E  0ECF               	movlw	207
 11712  004850  6ECF               	movwf	207,c	;volatile
 11713                           
 11714                           ;Melodia2.c: 136:     TMR1L = 0x2C;
 11715  004852  0E2C               	movlw	44
 11716  004854  6ECE               	movwf	206,c	;volatile
 11717  004856                     
 11718                           ;Melodia2.c: 138:     PIR1bits.TMR1IF = 0;
 11719  004856  909E               	bcf	158,0,c	;volatile
 11720  004858                     
 11721                           ;Melodia2.c: 139:     PIE1bits.TMR1IE = 1;
 11722  004858  809D               	bsf	157,0,c	;volatile
 11723  00485A                     
 11724                           ;Melodia2.c: 141:     T1CONbits.TMR1ON = 1;
 11725  00485A  80CD               	bsf	205,0,c	;volatile
 11726  00485C  0012               	return		;funcret
 11727  00485E                     __end_of_conf_TA1:
 11728                           	callstack 0
 11729                           
 11730 ;; *************** function _conf_IO *****************
 11731 ;; Defined at:
 11732 ;;		line 96 in file "Melodia2.c"
 11733 ;; Parameters:    Size  Location     Type
 11734 ;;		None
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;		None
 11737 ;; Return value:  Size  Location     Type
 11738 ;;                  1    wreg      void 
 11739 ;; Registers used:
 11740 ;;		wreg, status,2
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11746 ;;      Params:         0       0       0       0       0       0       0       0       0
 11747 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11748 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11749 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11750 ;;Total ram usage:        0 bytes
 11751 ;; Hardware stack levels used: 1
 11752 ;; Hardware stack levels required when called: 1
 11753 ;; This function calls:
 11754 ;;		Nothing
 11755 ;; This function is called by:
 11756 ;;		_PlayCancion
 11757 ;; This function uses a non-reentrant model
 11758 ;;
 11759                           
 11760                           	psect	text55
 11761  004882                     __ptext55:
 11762                           	callstack 0
 11763  004882                     _conf_IO:
 11764                           	callstack 28
 11765  004882                     
 11766                           ;Melodia2.c: 97:     ADCON1bits.PCFG = 0b1111;
 11767  004882  0E0F               	movlw	15
 11768  004884  12C1               	iorwf	193,f,c	;volatile
 11769  004886                     
 11770                           ;Melodia2.c: 99:     TRISDbits.RD2 = 0;
 11771  004886  9495               	bcf	149,2,c	;volatile
 11772  004888                     
 11773                           ;Melodia2.c: 101:     LATDbits.LD2 = 0;
 11774  004888  948C               	bcf	140,2,c	;volatile
 11775  00488A  0012               	return		;funcret
 11776  00488C                     __end_of_conf_IO:
 11777                           	callstack 0
 11778                           
 11779 ;; *************** function _conf_CLK *****************
 11780 ;; Defined at:
 11781 ;;		line 72 in file "Melodia2.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;		None
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;		None
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  1    wreg      void 
 11788 ;; Registers used:
 11789 ;;		wreg, status,2
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11795 ;;      Params:         0       0       0       0       0       0       0       0       0
 11796 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11797 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11798 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11799 ;;Total ram usage:        0 bytes
 11800 ;; Hardware stack levels used: 1
 11801 ;; Hardware stack levels required when called: 1
 11802 ;; This function calls:
 11803 ;;		Nothing
 11804 ;; This function is called by:
 11805 ;;		_PlayCancion
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	text56
 11810  004870                     __ptext56:
 11811                           	callstack 0
 11812  004870                     _conf_CLK:
 11813                           	callstack 28
 11814  004870                     
 11815                           ;Melodia2.c: 73:     OSCCONbits.IRCF0 = 1;
 11816  004870  88D3               	bsf	211,4,c	;volatile
 11817                           
 11818                           ;Melodia2.c: 74:     OSCCONbits.IRCF1 = 1;
 11819  004872  8AD3               	bsf	211,5,c	;volatile
 11820                           
 11821                           ;Melodia2.c: 75:     OSCCONbits.IRCF2 = 1;
 11822  004874  8CD3               	bsf	211,6,c	;volatile
 11823  004876                     
 11824                           ;Melodia2.c: 77:     OSCCONbits.SCS = 0b10;
 11825  004876  50D3               	movf	211,w,c	;volatile
 11826  004878  0BFC               	andlw	-4
 11827  00487A  0902               	iorlw	2
 11828  00487C  6ED3               	movwf	211,c	;volatile
 11829  00487E                     
 11830                           ;Melodia2.c: 79:     OSCCONbits.IDLEN = 0;
 11831  00487E  9ED3               	bcf	211,7,c	;volatile
 11832  004880  0012               	return		;funcret
 11833  004882                     __end_of_conf_CLK:
 11834                           	callstack 0
 11835                           
 11836 ;; *************** function _LCD_Custom_Char *****************
 11837 ;; Defined at:
 11838 ;;		line 99 in file "LCD_caracter.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;  loc             1    wreg     unsigned char 
 11841 ;;  msg             2    8[COMRAM] PTR unsigned char 
 11842 ;;		 -> character1(8), character3(8), character2(8), 
 11843 ;; Auto vars:     Size  Location     Type
 11844 ;;  loc             1   10[COMRAM] unsigned char 
 11845 ;;  i               1   11[COMRAM] unsigned char 
 11846 ;; Return value:  Size  Location     Type
 11847 ;;                  1    wreg      void 
 11848 ;; Registers used:
 11849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11850 ;; Tracked objects:
 11851 ;;		On entry : 0/0
 11852 ;;		On exit  : 0/0
 11853 ;;		Unchanged: 0/0
 11854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11855 ;;      Params:         2       0       0       0       0       0       0       0       0
 11856 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11857 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11858 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11859 ;;Total ram usage:        4 bytes
 11860 ;; Hardware stack levels used: 1
 11861 ;; Hardware stack levels required when called: 3
 11862 ;; This function calls:
 11863 ;;		_LCD_Char
 11864 ;;		_LCD_Command
 11865 ;; This function is called by:
 11866 ;;		_main
 11867 ;; This function uses a non-reentrant model
 11868 ;;
 11869                           
 11870                           	psect	text57
 11871  0043A4                     __ptext57:
 11872                           	callstack 0
 11873  0043A4                     _LCD_Custom_Char:
 11874                           	callstack 27
 11875                           
 11876                           ;incstack = 0
 11877                           ;LCD_Custom_Char@loc stored from wreg
 11878  0043A4  6E0B               	movwf	LCD_Custom_Char@loc^0,c
 11879  0043A6                     
 11880                           ;LCD_caracter.c: 99: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_c
      +                          aracter.c: 100: {;LCD_caracter.c: 101:     unsigned char i;;LCD_caracter.c: 102:     if 
      +                          (loc< 8 )
 11881  0043A6  0E08               	movlw	8
 11882  0043A8  600B               	cpfslt	LCD_Custom_Char@loc^0,c
 11883  0043AA  EFD9  F021         	goto	u6011
 11884  0043AE  EFDB  F021         	goto	u6010
 11885  0043B2                     u6011:
 11886  0043B2  EFF5  F021         	goto	l112
 11887  0043B6                     u6010:
 11888  0043B6                     
 11889                           ;LCD_caracter.c: 103:     {;LCD_caracter.c: 104:      LCD_Command ( 0x40 +(loc* 8 ));
 11890  0043B6  500B               	movf	LCD_Custom_Char@loc^0,w,c
 11891  0043B8  0D08               	mullw	8
 11892  0043BA  50F3               	movf	243,w,c
 11893  0043BC  0F40               	addlw	64
 11894  0043BE  EC61  F021         	call	_LCD_Command
 11895  0043C2                     
 11896                           ;LCD_caracter.c: 105:        for (i= 0 ;i< 8 ;i++)
 11897  0043C2  0E00               	movlw	0
 11898  0043C4  6E0C               	movwf	LCD_Custom_Char@i^0,c
 11899  0043C6                     l5308:
 11900                           
 11901                           ;LCD_caracter.c: 106:            LCD_Char (msg[i]);
 11902  0043C6  500C               	movf	LCD_Custom_Char@i^0,w,c
 11903  0043C8  2409               	addwf	LCD_Custom_Char@msg^0,w,c
 11904  0043CA  6ED9               	movwf	fsr2l,c
 11905  0043CC  0E00               	movlw	0
 11906  0043CE  200A               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
 11907  0043D0  6EDA               	movwf	fsr2h,c
 11908  0043D2  50DF               	movf	indf2,w,c
 11909  0043D4  EC87  F021         	call	_LCD_Char
 11910  0043D8  2A0C               	incf	LCD_Custom_Char@i^0,f,c
 11911  0043DA  0E07               	movlw	7
 11912  0043DC  640C               	cpfsgt	LCD_Custom_Char@i^0,c
 11913  0043DE  EFF3  F021         	goto	u6021
 11914  0043E2  EFF5  F021         	goto	u6020
 11915  0043E6                     u6021:
 11916  0043E6  EFE3  F021         	goto	l5308
 11917  0043EA                     u6020:
 11918  0043EA                     l112:
 11919  0043EA  0012               	return		;funcret
 11920  0043EC                     __end_of_LCD_Custom_Char:
 11921                           	callstack 0
 11922                           
 11923 ;; *************** function _LCD_Command *****************
 11924 ;; Defined at:
 11925 ;;		line 36 in file "LCD_caracter.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;  cmd             1    wreg     unsigned char 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  cmd             1    7[COMRAM] unsigned char 
 11930 ;; Return value:  Size  Location     Type
 11931 ;;                  1    wreg      void 
 11932 ;; Registers used:
 11933 ;;		wreg, status,2, status,0, cstack
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11939 ;;      Params:         0       0       0       0       0       0       0       0       0
 11940 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11941 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11942 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11943 ;;Total ram usage:        2 bytes
 11944 ;; Hardware stack levels used: 1
 11945 ;; Hardware stack levels required when called: 2
 11946 ;; This function calls:
 11947 ;;		_MSdelay
 11948 ;; This function is called by:
 11949 ;;		_main
 11950 ;;		_LCD_Init
 11951 ;;		_LCD_String_xy
 11952 ;;		_LCD_Clear
 11953 ;;		_LCD_Custom_Char
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           	psect	text58
 11958  0042C2                     __ptext58:
 11959                           	callstack 0
 11960  0042C2                     _LCD_Command:
 11961                           	callstack 26
 11962                           
 11963                           ;incstack = 0
 11964                           ;LCD_Command@cmd stored from wreg
 11965  0042C2  6E08               	movwf	LCD_Command@cmd^0,c
 11966  0042C4                     
 11967                           ;LCD_caracter.c: 36: void LCD_Command(unsigned char cmd );LCD_caracter.c: 37: {;LCD_cara
      +                          cter.c: 38:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 11968  0042C4  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11969  0042C8  0EF0               	movlw	240
 11970  0042CA  1607               	andwf	??_LCD_Command^0,f,c
 11971  0042CC  508C               	movf	140,w,c	;volatile
 11972  0042CE  0B0F               	andlw	15
 11973  0042D0  1007               	iorwf	??_LCD_Command^0,w,c
 11974  0042D2  6E8C               	movwf	140,c	;volatile
 11975  0042D4                     
 11976                           ;LCD_caracter.c: 39:  LATD0 = 0;
 11977  0042D4  908C               	bcf	3980,0,c	;volatile
 11978  0042D6                     
 11979                           ;LCD_caracter.c: 40:  LATD1 = 1;
 11980  0042D6  828C               	bsf	3980,1,c	;volatile
 11981  0042D8                     
 11982                           ;LCD_caracter.c: 41:  __nop();
 11983  0042D8  F000               	nop	
 11984  0042DA                     
 11985                           ;LCD_caracter.c: 42:  LATD1 = 0;
 11986  0042DA  928C               	bcf	3980,1,c	;volatile
 11987  0042DC                     
 11988                           ;LCD_caracter.c: 43:  MSdelay(1);
 11989  0042DC  0E00               	movlw	0
 11990  0042DE  6E02               	movwf	(MSdelay@val+1)^0,c
 11991  0042E0  0E01               	movlw	1
 11992  0042E2  6E01               	movwf	MSdelay@val^0,c
 11993  0042E4  ECAD  F021         	call	_MSdelay	;wreg free
 11994  0042E8                     
 11995                           ;LCD_caracter.c: 44:     LATD = (LATD & 0x0f) | (cmd<<4);
 11996  0042E8  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11997  0042EC  3A07               	swapf	??_LCD_Command^0,f,c
 11998  0042EE  0EF0               	movlw	240
 11999  0042F0  1607               	andwf	??_LCD_Command^0,f,c
 12000  0042F2  508C               	movf	140,w,c	;volatile
 12001  0042F4  0B0F               	andlw	15
 12002  0042F6  1007               	iorwf	??_LCD_Command^0,w,c
 12003  0042F8  6E8C               	movwf	140,c	;volatile
 12004  0042FA                     
 12005                           ;LCD_caracter.c: 45:  LATD1 = 1;
 12006  0042FA  828C               	bsf	3980,1,c	;volatile
 12007  0042FC                     
 12008                           ;LCD_caracter.c: 46:  __nop();
 12009  0042FC  F000               	nop	
 12010  0042FE                     
 12011                           ;LCD_caracter.c: 47:  LATD1 = 0;
 12012  0042FE  928C               	bcf	3980,1,c	;volatile
 12013                           
 12014                           ;LCD_caracter.c: 48:  MSdelay(3);
 12015  004300  0E00               	movlw	0
 12016  004302  6E02               	movwf	(MSdelay@val+1)^0,c
 12017  004304  0E03               	movlw	3
 12018  004306  6E01               	movwf	MSdelay@val^0,c
 12019  004308  ECAD  F021         	call	_MSdelay	;wreg free
 12020  00430C  0012               	return		;funcret
 12021  00430E                     __end_of_LCD_Command:
 12022                           	callstack 0
 12023                           
 12024 ;; *************** function _LCD_Char *****************
 12025 ;; Defined at:
 12026 ;;		line 52 in file "LCD_caracter.c"
 12027 ;; Parameters:    Size  Location     Type
 12028 ;;  dat             1    wreg     unsigned char 
 12029 ;; Auto vars:     Size  Location     Type
 12030 ;;  dat             1    7[COMRAM] unsigned char 
 12031 ;; Return value:  Size  Location     Type
 12032 ;;                  1    wreg      void 
 12033 ;; Registers used:
 12034 ;;		wreg, status,2, status,0, cstack
 12035 ;; Tracked objects:
 12036 ;;		On entry : 0/0
 12037 ;;		On exit  : 0/0
 12038 ;;		Unchanged: 0/0
 12039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12040 ;;      Params:         0       0       0       0       0       0       0       0       0
 12041 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12042 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12043 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12044 ;;Total ram usage:        2 bytes
 12045 ;; Hardware stack levels used: 1
 12046 ;; Hardware stack levels required when called: 2
 12047 ;; This function calls:
 12048 ;;		_MSdelay
 12049 ;; This function is called by:
 12050 ;;		_main
 12051 ;;		_LCD_String
 12052 ;;		_LCD_Custom_Char
 12053 ;; This function uses a non-reentrant model
 12054 ;;
 12055                           
 12056                           	psect	text59
 12057  00430E                     __ptext59:
 12058                           	callstack 0
 12059  00430E                     _LCD_Char:
 12060                           	callstack 25
 12061                           
 12062                           ;incstack = 0
 12063                           ;LCD_Char@dat stored from wreg
 12064  00430E  6E08               	movwf	LCD_Char@dat^0,c
 12065  004310                     
 12066                           ;LCD_caracter.c: 52: void LCD_Char(unsigned char dat);LCD_caracter.c: 53: {;LCD_caracter
      +                          .c: 54:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 12067  004310  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12068  004314  0EF0               	movlw	240
 12069  004316  1607               	andwf	??_LCD_Char^0,f,c
 12070  004318  508C               	movf	140,w,c	;volatile
 12071  00431A  0B0F               	andlw	15
 12072  00431C  1007               	iorwf	??_LCD_Char^0,w,c
 12073  00431E  6E8C               	movwf	140,c	;volatile
 12074  004320                     
 12075                           ;LCD_caracter.c: 55:  LATD0 = 1;
 12076  004320  808C               	bsf	3980,0,c	;volatile
 12077  004322                     
 12078                           ;LCD_caracter.c: 56:  LATD1 = 1;
 12079  004322  828C               	bsf	3980,1,c	;volatile
 12080  004324                     
 12081                           ;LCD_caracter.c: 57:  __nop();
 12082  004324  F000               	nop	
 12083  004326                     
 12084                           ;LCD_caracter.c: 58:  LATD1 = 0;
 12085  004326  928C               	bcf	3980,1,c	;volatile
 12086  004328                     
 12087                           ;LCD_caracter.c: 59:  MSdelay(1);
 12088  004328  0E00               	movlw	0
 12089  00432A  6E02               	movwf	(MSdelay@val+1)^0,c
 12090  00432C  0E01               	movlw	1
 12091  00432E  6E01               	movwf	MSdelay@val^0,c
 12092  004330  ECAD  F021         	call	_MSdelay	;wreg free
 12093  004334                     
 12094                           ;LCD_caracter.c: 60:     LATD = (LATD & 0x0f) | (dat<<4);
 12095  004334  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12096  004338  3A07               	swapf	??_LCD_Char^0,f,c
 12097  00433A  0EF0               	movlw	240
 12098  00433C  1607               	andwf	??_LCD_Char^0,f,c
 12099  00433E  508C               	movf	140,w,c	;volatile
 12100  004340  0B0F               	andlw	15
 12101  004342  1007               	iorwf	??_LCD_Char^0,w,c
 12102  004344  6E8C               	movwf	140,c	;volatile
 12103  004346                     
 12104                           ;LCD_caracter.c: 61:  LATD1 = 1;
 12105  004346  828C               	bsf	3980,1,c	;volatile
 12106  004348                     
 12107                           ;LCD_caracter.c: 62:  __nop();
 12108  004348  F000               	nop	
 12109  00434A                     
 12110                           ;LCD_caracter.c: 63:  LATD1 = 0;
 12111  00434A  928C               	bcf	3980,1,c	;volatile
 12112                           
 12113                           ;LCD_caracter.c: 64:  MSdelay(3);
 12114  00434C  0E00               	movlw	0
 12115  00434E  6E02               	movwf	(MSdelay@val+1)^0,c
 12116  004350  0E03               	movlw	3
 12117  004352  6E01               	movwf	MSdelay@val^0,c
 12118  004354  ECAD  F021         	call	_MSdelay	;wreg free
 12119  004358  0012               	return		;funcret
 12120  00435A                     __end_of_LCD_Char:
 12121                           	callstack 0
 12122                           
 12123 ;; *************** function _MSdelay *****************
 12124 ;; Defined at:
 12125 ;;		line 111 in file "LCD_caracter.c"
 12126 ;; Parameters:    Size  Location     Type
 12127 ;;  val             2    0[COMRAM] unsigned int 
 12128 ;; Auto vars:     Size  Location     Type
 12129 ;;  j               2    4[COMRAM] unsigned int 
 12130 ;;  i               2    2[COMRAM] unsigned int 
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  1    wreg      void 
 12133 ;; Registers used:
 12134 ;;		wreg, status,2, status,0
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12140 ;;      Params:         2       0       0       0       0       0       0       0       0
 12141 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12142 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12143 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12144 ;;Total ram usage:        6 bytes
 12145 ;; Hardware stack levels used: 1
 12146 ;; Hardware stack levels required when called: 1
 12147 ;; This function calls:
 12148 ;;		Nothing
 12149 ;; This function is called by:
 12150 ;;		_main
 12151 ;;		_LCD_Init
 12152 ;;		_LCD_Command
 12153 ;;		_LCD_Char
 12154 ;;		_LCD_Clear
 12155 ;;		_RTC_Calendario
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text60
 12160  00435A                     __ptext60:
 12161                           	callstack 0
 12162  00435A                     _MSdelay:
 12163                           	callstack 28
 12164  00435A                     
 12165                           ;LCD_caracter.c: 111: void MSdelay(unsigned int val);LCD_caracter.c: 112: {;LCD_caracter
      +                          .c: 113:  unsigned int i,j;;LCD_caracter.c: 114:  for(i=0;i<val;i++)
 12166  00435A  0E00               	movlw	0
 12167  00435C  6E04               	movwf	(MSdelay@i+1)^0,c
 12168  00435E  0E00               	movlw	0
 12169  004360  6E03               	movwf	MSdelay@i^0,c
 12170  004362  EFC6  F021         	goto	l4316
 12171  004366                     l4304:
 12172                           
 12173                           ;LCD_caracter.c: 115:      for(j=0;j<165;j++);
 12174  004366  0E00               	movlw	0
 12175  004368  6E06               	movwf	(MSdelay@j+1)^0,c
 12176  00436A  0E00               	movlw	0
 12177  00436C  6E05               	movwf	MSdelay@j^0,c
 12178  00436E                     l4310:
 12179  00436E  4A05               	infsnz	MSdelay@j^0,f,c
 12180  004370  2A06               	incf	(MSdelay@j+1)^0,f,c
 12181  004372  5006               	movf	(MSdelay@j+1)^0,w,c
 12182  004374  E109               	bnz	u4650
 12183  004376  0EA5               	movlw	165
 12184  004378  5C05               	subwf	MSdelay@j^0,w,c
 12185  00437A  A0D8               	btfss	status,0,c
 12186  00437C  EFC2  F021         	goto	u4651
 12187  004380  EFC4  F021         	goto	u4650
 12188  004384                     u4651:
 12189  004384  EFB7  F021         	goto	l4310
 12190  004388                     u4650:
 12191  004388  4A03               	infsnz	MSdelay@i^0,f,c
 12192  00438A  2A04               	incf	(MSdelay@i+1)^0,f,c
 12193  00438C                     l4316:
 12194  00438C  5001               	movf	MSdelay@val^0,w,c
 12195  00438E  5C03               	subwf	MSdelay@i^0,w,c
 12196  004390  5002               	movf	(MSdelay@val+1)^0,w,c
 12197  004392  5804               	subwfb	(MSdelay@i+1)^0,w,c
 12198  004394  A0D8               	btfss	status,0,c
 12199  004396  EFCF  F021         	goto	u4661
 12200  00439A  EFD1  F021         	goto	u4660
 12201  00439E                     u4661:
 12202  00439E  EFB3  F021         	goto	l4304
 12203  0043A2                     u4660:
 12204  0043A2  0012               	return		;funcret
 12205  0043A4                     __end_of_MSdelay:
 12206                           	callstack 0
 12207                           
 12208 ;; *************** function _ISR *****************
 12209 ;; Defined at:
 12210 ;;		line 144 in file "Melodia2.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;		None
 12213 ;; Auto vars:     Size  Location     Type
 12214 ;;		None
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      void 
 12217 ;; Registers used:
 12218 ;;		wreg, status,2
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12224 ;;      Params:         0       0       0       0       0       0       0       0       0
 12225 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12226 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12227 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12228 ;;Total ram usage:        0 bytes
 12229 ;; Hardware stack levels used: 1
 12230 ;; This function calls:
 12231 ;;		Nothing
 12232 ;; This function is called by:
 12233 ;;		Interrupt level 2
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237                           	psect	intcode
 12238  000008                     __pintcode:
 12239                           	callstack 0
 12240  000008                     _ISR:
 12241                           	callstack 21
 12242                           
 12243                           ;incstack = 0
 12244  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12245  00000A  EDE1  F023         	call	int_func,f	;refresh shadow registers
 12246                           
 12247                           	psect	intcode_body
 12248  0047C2                     __pintcode_body:
 12249                           	callstack 21
 12250  0047C2                     int_func:
 12251                           	callstack 21
 12252  0047C2  0006               	pop		; remove dummy address from shadow register refresh
 12253  0047C4                     
 12254                           ;Melodia2.c: 146:     if ( PIR1bits.TMR1IF == 1 )
 12255  0047C4  A09E               	btfss	158,0,c	;volatile
 12256  0047C6  EFE7  F023         	goto	i2u307_41
 12257  0047CA  EFE9  F023         	goto	i2u307_40
 12258  0047CE                     i2u307_41:
 12259  0047CE  EFEE  F023         	goto	i2l223
 12260  0047D2                     i2u307_40:
 12261  0047D2                     
 12262                           ;Melodia2.c: 147:     {;Melodia2.c: 150:         TMR1H = 0xCF;
 12263  0047D2  0ECF               	movlw	207
 12264  0047D4  6ECF               	movwf	207,c	;volatile
 12265                           
 12266                           ;Melodia2.c: 151:         TMR1L = 0x2C;
 12267  0047D6  0E2C               	movlw	44
 12268  0047D8  6ECE               	movwf	206,c	;volatile
 12269  0047DA                     
 12270                           ;Melodia2.c: 153:         PIR1bits.TMR1IF = 0;
 12271  0047DA  909E               	bcf	158,0,c	;volatile
 12272  0047DC                     i2l223:
 12273  0047DC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12274  0047DE  0011               	retfie		f
 12275  0047E0                     __end_of_ISR:
 12276                           	callstack 0
 12277                           
 12278                           	psect	rparam
 12279  0000                     
 12280                           	psect	temp
 12281  00005F                     btemp:
 12282                           	callstack 0
 12283  00005F                     	ds	1
 12284  0000                     int$flags	set	btemp
 12285  0000                     wtemp8	set	btemp+1
 12286  0000                     ttemp5	set	btemp+1
 12287  0000                     ttemp6	set	btemp+4
 12288  0000                     ttemp7	set	btemp+8
 12289                           
 12290                           	psect	idloc
 12291                           
 12292                           ;Config register IDLOC0 @ 0x200000
 12293                           ;	unspecified, using default values
 12294  200000                     	org	2097152
 12295  200000  FF                 	db	255
 12296                           
 12297                           ;Config register IDLOC1 @ 0x200001
 12298                           ;	unspecified, using default values
 12299  200001                     	org	2097153
 12300  200001  FF                 	db	255
 12301                           
 12302                           ;Config register IDLOC2 @ 0x200002
 12303                           ;	unspecified, using default values
 12304  200002                     	org	2097154
 12305  200002  FF                 	db	255
 12306                           
 12307                           ;Config register IDLOC3 @ 0x200003
 12308                           ;	unspecified, using default values
 12309  200003                     	org	2097155
 12310  200003  FF                 	db	255
 12311                           
 12312                           ;Config register IDLOC4 @ 0x200004
 12313                           ;	unspecified, using default values
 12314  200004                     	org	2097156
 12315  200004  FF                 	db	255
 12316                           
 12317                           ;Config register IDLOC5 @ 0x200005
 12318                           ;	unspecified, using default values
 12319  200005                     	org	2097157
 12320  200005  FF                 	db	255
 12321                           
 12322                           ;Config register IDLOC6 @ 0x200006
 12323                           ;	unspecified, using default values
 12324  200006                     	org	2097158
 12325  200006  FF                 	db	255
 12326                           
 12327                           ;Config register IDLOC7 @ 0x200007
 12328                           ;	unspecified, using default values
 12329  200007                     	org	2097159
 12330  200007  FF                 	db	255
 12331                           
 12332                           	psect	config
 12333                           
 12334                           ;Config register CONFIG1L @ 0x300000
 12335                           ;	PLL Prescaler Selection bits
 12336                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12337                           ;	System Clock Postscaler Selection bits
 12338                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12339                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12340                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12341  300000                     	org	3145728
 12342  300000  00                 	db	0
 12343                           
 12344                           ;Config register CONFIG1H @ 0x300001
 12345                           ;	Oscillator Selection bits
 12346                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12347                           ;	Fail-Safe Clock Monitor Enable bit
 12348                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12349                           ;	Internal/External Oscillator Switchover bit
 12350                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12351  300001                     	org	3145729
 12352  300001  09                 	db	9
 12353                           
 12354                           ;Config register CONFIG2L @ 0x300002
 12355                           ;	Power-up Timer Enable bit
 12356                           ;	PWRT = ON, PWRT enabled
 12357                           ;	Brown-out Reset Enable bits
 12358                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12359                           ;	Brown-out Reset Voltage bits
 12360                           ;	BORV = 3, Minimum setting 2.05V
 12361                           ;	USB Voltage Regulator Enable bit
 12362                           ;	VREGEN = OFF, USB voltage regulator disabled
 12363  300002                     	org	3145730
 12364  300002  18                 	db	24
 12365                           
 12366                           ;Config register CONFIG2H @ 0x300003
 12367                           ;	Watchdog Timer Enable bit
 12368                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12369                           ;	Watchdog Timer Postscale Select bits
 12370                           ;	WDTPS = 32768, 1:32768
 12371  300003                     	org	3145731
 12372  300003  1E                 	db	30
 12373                           
 12374                           ; Padding undefined space
 12375  300004                     	org	3145732
 12376  300004  FF                 	db	255
 12377                           
 12378                           ;Config register CONFIG3H @ 0x300005
 12379                           ;	CCP2 MUX bit
 12380                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12381                           ;	PORTB A/D Enable bit
 12382                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12383                           ;	Low-Power Timer 1 Oscillator Enable bit
 12384                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12385                           ;	MCLR Pin Enable bit
 12386                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12387  300005                     	org	3145733
 12388  300005  81                 	db	129
 12389                           
 12390                           ;Config register CONFIG4L @ 0x300006
 12391                           ;	Stack Full/Underflow Reset Enable bit
 12392                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12393                           ;	Single-Supply ICSP Enable bit
 12394                           ;	LVP = OFF, Single-Supply ICSP disabled
 12395                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12396                           ;	ICPRT = OFF, ICPORT disabled
 12397                           ;	Extended Instruction Set Enable bit
 12398                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12399                           ;	Background Debugger Enable bit
 12400                           ;	DEBUG = 0x1, unprogrammed default
 12401  300006                     	org	3145734
 12402  300006  80                 	db	128
 12403                           
 12404                           ; Padding undefined space
 12405  300007                     	org	3145735
 12406  300007  FF                 	db	255
 12407                           
 12408                           ;Config register CONFIG5L @ 0x300008
 12409                           ;	Code Protection bit
 12410                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12411                           ;	Code Protection bit
 12412                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12413                           ;	Code Protection bit
 12414                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12415                           ;	Code Protection bit
 12416                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12417  300008                     	org	3145736
 12418  300008  0F                 	db	15
 12419                           
 12420                           ;Config register CONFIG5H @ 0x300009
 12421                           ;	Boot Block Code Protection bit
 12422                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12423                           ;	Data EEPROM Code Protection bit
 12424                           ;	CPD = OFF, Data EEPROM is not code-protected
 12425  300009                     	org	3145737
 12426  300009  C0                 	db	192
 12427                           
 12428                           ;Config register CONFIG6L @ 0x30000A
 12429                           ;	Write Protection bit
 12430                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12431                           ;	Write Protection bit
 12432                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12433                           ;	Write Protection bit
 12434                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12435                           ;	Write Protection bit
 12436                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12437  30000A                     	org	3145738
 12438  30000A  0F                 	db	15
 12439                           
 12440                           ;Config register CONFIG6H @ 0x30000B
 12441                           ;	Configuration Register Write Protection bit
 12442                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12443                           ;	Boot Block Write Protection bit
 12444                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12445                           ;	Data EEPROM Write Protection bit
 12446                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12447  30000B                     	org	3145739
 12448  30000B  E0                 	db	224
 12449                           
 12450                           ;Config register CONFIG7L @ 0x30000C
 12451                           ;	Table Read Protection bit
 12452                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12453                           ;	Table Read Protection bit
 12454                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12455                           ;	Table Read Protection bit
 12456                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12457                           ;	Table Read Protection bit
 12458                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12459  30000C                     	org	3145740
 12460  30000C  0F                 	db	15
 12461                           
 12462                           ;Config register CONFIG7H @ 0x30000D
 12463                           ;	Boot Block Table Read Protection bit
 12464                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12465  30000D                     	org	3145741
 12466  30000D  40                 	db	64
 12467                           tosu	equ	0xFFF
 12468                           tosh	equ	0xFFE
 12469                           tosl	equ	0xFFD
 12470                           stkptr	equ	0xFFC
 12471                           pclatu	equ	0xFFB
 12472                           pclath	equ	0xFFA
 12473                           pcl	equ	0xFF9
 12474                           tblptru	equ	0xFF8
 12475                           tblptrh	equ	0xFF7
 12476                           tblptrl	equ	0xFF6
 12477                           tablat	equ	0xFF5
 12478                           prodh	equ	0xFF4
 12479                           prodl	equ	0xFF3
 12480                           indf0	equ	0xFEF
 12481                           postinc0	equ	0xFEE
 12482                           postdec0	equ	0xFED
 12483                           preinc0	equ	0xFEC
 12484                           plusw0	equ	0xFEB
 12485                           fsr0h	equ	0xFEA
 12486                           fsr0l	equ	0xFE9
 12487                           wreg	equ	0xFE8
 12488                           indf1	equ	0xFE7
 12489                           postinc1	equ	0xFE6
 12490                           postdec1	equ	0xFE5
 12491                           preinc1	equ	0xFE4
 12492                           plusw1	equ	0xFE3
 12493                           fsr1h	equ	0xFE2
 12494                           fsr1l	equ	0xFE1
 12495                           bsr	equ	0xFE0
 12496                           indf2	equ	0xFDF
 12497                           postinc2	equ	0xFDE
 12498                           postdec2	equ	0xFDD
 12499                           preinc2	equ	0xFDC
 12500                           plusw2	equ	0xFDB
 12501                           fsr2h	equ	0xFDA
 12502                           fsr2l	equ	0xFD9
 12503                           status	equ	0xFD8

Data Sizes:
    Strings     86
    Constant    0
    Data        31
    BSS         167
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    133     158
    BANK1           256     69     242
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1536_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), Stemp(BANK1[20]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character3(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> Stemp(BANK1[20]), STR_1(CODE[14]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), RTC_Calendario@year(BANK1[10]), 
		 -> RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), 
		 -> RTC_Calendario@secs(BANK1[10]), STR_6(CODE[3]), STR_5(CODE[3]), Stemp(BANK1[20]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___flsub
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_MSdelay
    _LCD_Char->_MSdelay

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RTC_Calendario
    _ReadADC->___fltol
    _RTC_Calendario->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_RTC_Calendario

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  111067
                                            129 BANK0      4     4      0
                           _I2C_Init
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                    _LCD_Custom_Char
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                        _PlayCancion
                     _RTC_Calendario
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ReadLUZ                                              6     4      2      46
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              6     4      2    8609
                                              2 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              6 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendario                                      72    72      0   49300
                                            126 BANK0      3     3      0
                                              0 BANK1     69    69      0
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   38295
                                            110 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   36264
                                            102 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   35876
                                             70 BANK0     32    26      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5327
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   24672
                                              2 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             70 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             86 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             86 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             70 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    2310
                                             45 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             45 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    4252
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    1929
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1596
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1596
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PlayCancion                                          3     3      0      72
                                              0 COMRAM     3     3      0
                           _conf_CLK
                            _conf_IO
                           _conf_TA1
 ---------------------------------------------------------------------------------
 (2) _conf_TA1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_IO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_CLK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Custom_Char                                      4     2      2    2002
                                              8 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     820
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0     820
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     776
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _LCD_Char
     _MSdelay
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Command
   _LCD_Custom_Char
     _LCD_Char
     _LCD_Command
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _MSdelay
   _PlayCancion
     _conf_CLK
     _conf_IO
     _conf_TA1
   _RTC_Calendario
     _I2C_Init
     _I2C_Stop
     _LCD_Clear
     _LCD_Init
     _LCD_String
     _LCD_String_xy
     _MSdelay
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ReadLUZ (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _ReadADC
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _ReadLUZ
   ___flge
   ___xxtofl
   _sprintf

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EE      20        0.0%
DATA                 0      0     1EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Oct 01 17:13:10 2021

                          ___fldiv@aexp 0046                            ___fldiv@bexp 0045  
                                     _i 00FD                      __size_of_I2C_Ready 0012  
                          ___fldiv@sign 003E                      __size_of_I2C_Start 002E  
                          ?_LCD_Command 0001                             _SSPSTATbits 000FC7  
                    __size_of_I2C_Write 0022                                      l60 273C  
                                    l58 252E                                      l59 264E  
                                    l92 4358                                      l86 46FC  
                                    l89 430C                                      l98 4166  
                          ___awdiv@sign 0006                     ___wmul@multiplicand 0003  
                           ?_LCD_String 0009                         _LCD_Custom_Char 43A4  
RTC_Read_Calendar@read_calendar_address 0004                                     l103 4540  
                                   l120 43A2                                     l112 43EA  
                                   l106 4848                                     l211 4880  
                                   l205 3F82                                     l214 488A  
                                   l400 4812                                     l144 38BC  
                                   l217 485C                                     l146 38CA  
                                   l403 4820                                     l147 3980  
                                   l171 3FCE                                     l340 4590  
                                   l172 3FE8                                     l342 45B0  
                                   l406 477E                                     l351 486C  
                                   l343 45B6                                     l352 486E  
                                   l281 2E46                                     l169 3FC0  
                                   l346 47F8                                     l338 4582  
                                   l370 472A                                     l266 44BC  
                                   l349 485E                                     l373 4730  
                                   l269 421C                                     l390 47A0  
                                   l366 4702                                     l382 47FC  
                                   l375 473E                                     l703 377E  
                                   l368 4710                                     l384 480A  
                                   l377 4758                                     l394 4826  
                                   l386 480C                                     l650 3E58  
                                   l397 4834                                     l637 3DA8  
                                   l671 383C                                     l680 465E  
                                   l665 3F02                                     l676 3882  
                                   l934 1CAC                                     l951 1DC6  
                                   l943 1F7C                                     l935 1C9A  
                                   l960 1E96                                     l936 1C60  
                                   l961 1E84                                     l990 294C  
                                   l976 4476                                     l993 2910  
                                   l988 2AEC                                     l999 2992  
                                   _PEN 007E2A                                     _ISR 0008  
                                   _Day 0122                         __end_of_I2C_Ack 4836  
                                   _pad 3C20                                     _min 0126  
                                   _sec 0128                                     _luz 00ED  
                          ___awmod@sign 0006                                     wreg 000FE8  
                          ___flmul@aexp 0026                            ___flmul@bexp 0027  
                          ___flmul@sign 0021                            ___flmul@temp 002C  
                          ___flmul@prod 0028                                    ?_ISR 0001  
                           LCD_Char@dat 0008                            ___fltol@exp1 0061  
                                  l1001 2A0A                                    l1002 29F8  
                                  l1020 2042                                    l1030 229E  
                                  l1024 23A6                                    l1027 2238  
                                  l1132 3CA8                                    l1037 2368  
                                  l1029 22B0                                    l1061 338A  
                                  l1134 3CE4                                    l1302 4042  
                                  l1303 404A                                    l1152 14AE  
                                  l1232 2E80                                    l1064 34E6  
                                  l1313 3A7E                                    l1129 3C66  
                                  l1241 2F1E                                    l1170 0C44  
                                  l1234 2E88                                    l1075 347E  
                                  l1404 4500                                    l1084 426E  
                                  l1068 3422                                    l1413 41C2  
                                  l1342 366E                                    l1351 3332  
                                  l1407 488C                                    l1423 3B54  
                                  l1255 30BC                                    l1271 15A2  
                                  l4000 238A                                    l1345 3676  
                                  l1433 40A2                                    l1361 457C  
                                  l1257 3120                                    l4002 238C  
                                  l4010 4432                                    l1354 3276  
                                  l1419 46CC                                    l1451 4108  
                                  l4020 3CF8                                    l4100 3E98  
                                  l4004 2392                                    l4012 4442  
                                  l1381 4626                                    l1293 191C  
                                  l4030 3D1E                                    l4022 3D00  
                                  l4102 3EC6                                    l4006 2396  
                                  l1438 40AA                                    l1198 1084  
                                  l1446 4100                                    l1286 1ABC  
                                  l1367 4696                                    l1375 42C0  
                                  l4040 3D56                                    l4032 3D26  
                                  l4024 3D04                                    l4016 3CE6  
                                  l4104 3ED6                                    l4120 37FC  
                                  l4112 3780                                    l4200 3C8A  
                                  l5000 3FEA                                    l1457 45EE  
                                  l5010 47E4                                    l4050 3D82  
                                  l4042 3D5C                                    l4034 3D38  
                                  l4026 3D12                                    l4018 3CEA  
                                  l4106 3EFA                                    l4130 3880  
                                  l4122 380A                                    l4114 37AE  
                                  l4210 39A2                                    l4202 3CB8  
                                  l5002 3FF2                                    l5012 47F4  
                                  l5020 46DE                                    l4044 3D72  
                                  l4036 3D40                                    l4052 3D88  
                                  l4028 3D1A                                    l4060 3DAA  
                                  l4108 3F00                                    l4124 381C  
                                  l4116 37BE                                    l4212 39E0  
                                  l4220 3A20                                    l1396 3C1E  
                                  l3500 3B84                                    l4204 3CCC  
                                  l5004 4000                                    l5100 3336  
                                  l4310 436E                                    l4302 435A  
                                  l5014 47F6                                    l5022 46E4  
                                  l5030 4504                                    l4054 3D98  
                                  l4046 3D7A                                    l4038 3D48  
                                  l4070 3DD6                                    l4062 3DAE  
                                  l4126 382A                                    l4118 37EC  
                                  l4134 4628                                    l3510 1ACA  
                                  l4150 36CE                                    l4142 3678  
                                  l4222 3A32                                    l4214 3A08  
                                  l3502 3BA2                                    l4230 4168  
                                  l5006 4026                                    l5102 3346  
                                  l4312 4372                                    l4304 4366  
                                  l5008 47E0                                    l5024 46EA  
                                  l5016 46CE                                    l5040 452E  
                                  l5032 4504                                    l4056 3DA0  
                                  l4048 3D7C                                    l4080 3E0E  
                                  l4072 3DDE                                    l4064 3DBC  
                                  l4128 387A                                    l4136 463E  
                                  l3600 1C7E                                    l3520 1B0A  
                                  l3512 1AD8                                    l4152 36D0  
                                  l4144 3690                                    l4216 3A14  
                                  l4208 3982                                    l3504 3BD8  
                                  l4232 4178                                    l4240 4094  
                                  l4400 0BA4                                    l4320 0858  
                                  l5200 2BAE                                    l5120 340C  
                                  l5112 33C4                                    l5104 3354  
                                  l4314 4388                                    l5026 46F0  
                                  l5018 46D2                                    l5042 4534  
                                  l5034 4514                                    l4090 3E48  
                                  l4082 3E24                                    l4074 3DF0  
                                  l4066 3DC4                                    l4138 464E  
                                  l3610 1CCA                                    l3602 1C8C  
                                  l3530 1B3C                                    l3522 1B0C  
                                  l3514 1ADA                                    l4154 36E0  
                                  l4226 3A76                                    l4250 31AC  
                                  l4234 404C                                    l4410 0C04  
                                  l4402 0BAC                                    l4330 08AC  
                                  l4322 0862                                    l5050 4238  
                                  l5210 2C1C                                    l5202 2BC4  
                                  l5130 348C                                    l5122 3418  
                                  l5114 33CC                                    l5106 339A  
                                  l4316 438C                                    l5300 43B6  
                                  l5060 4876                                    l5044 4836  
                                  l5028 46F6                                    l5036 451C  
                                  l4092 3E50                                    l4084 3E2C  
                                  l4076 3DF8                                    l4068 3DC8  
                                  l3700 1F56                                    l3620 1D0A  
                                  l3604 1C8E                                    l3540 1B64  
                                  l3532 1B3E                                    l3516 1AEA  
                                  l3524 1B14                                    l3508 1ABE  
                                  l4180 375E                                    l4164 370A  
                                  l4156 36E4                                    l4148 36A4  
                                  l4252 31BA                                    l4260 329A  
                                  l4244 3122                                    l4500 107C  
                                  l4412 0C16                                    l4404 0BDE  
                                  l4340 08F0                                    l4332 08B6  
                                  l4324 0872                                    l5052 4240  
                                  l5220 2C72                                    l5212 2C3A  
                                  l5204 2BD6                                    l5140 34D4  
                                  l5132 348E                                    l5124 3454  
                                  l5116 33D8                                    l5108 33B0  
                                  l5310 43D8                                    l5302 43C2  
                                  l5062 487E                                    l5070 484A  
                                  l5038 4526                                    l4318 485E  
                                  l4086 3E32                                    l4078 3E00  
                                  l3702 1F5C                                    l3630 1D34  
                                  l3622 1D16                                    l3614 1CDE  
                                  l3606 1C98                                    l3550 1B9E  
                                  l3542 1B74                                    l3534 1B44  
                                  l3526 1B24                                    l3518 1AFA  
                                  l4182 376E                                    l4174 3732  
                                  l4166 3714                                    l4158 36F2  
                                  l4262 32D6                                    l4246 3142  
                                  l3710 44BE                                    l4190 3C44  
                                  l4238 4082                                    l4510 1138  
                                  l4502 10A0                                    l4430 0CC6  
                                  l4414 0C1E                                    l4406 0BEE  
                                  l4342 08FC                                    l4350 0912  
                                  l4334 08BE                                    l4326 0880  
                                  l5054 425C                                    l5046 421E  
                                  l5222 2C90                                    l5214 2C4C  
                                  l5206 2BE0                                    l5142 34D6  
                                  l5134 3492                                    l5126 3460  
                                  l5118 340A                                    l5150 38B6  
                                  l5312 43DA                                    l5064 4882  
                                  l5072 484E                                    l5320 3F14  
                                  l5080 447A                                    l4088 3E38  
                                  l3800 288A                                    l4096 3E5A  
                                  l3704 1F6A                                    l3640 1DA6  
                                  l3624 1D1A                                    l3616 1CEE  
                                  l3608 1CBA                                    l3632 1D3A  
                                  l3560 1BCA                                    l3552 1BB0  
                                  l3544 1B84                                    l3536 1B52  
                                  l3528 1B2A                                    l4176 373E  
                                  l4168 371E                                    l4264 32EA  
                                  l4256 322A                                    l4248 3198  
                                  l3712 44CA                                    l3720 46A4  
                                  l4192 3C52                                    l4600 13FA  
                                  l4520 117E                                    l4512 1146  
                                  l4504 1104                                    l4440 0CFE  
                                  l4432 0CCE                                    l4424 0C62  
                                  l4416 0C38                                    l4408 0BF2  
                                  l4360 099C                                    l4352 0938  
                                  l4344 0904                                    l4336 08D0  
                                  l4328 0888                                    l4272 4542  
                                  l4280 40E2                                    l5048 4230  
                                  l5240 2D28                                    l5224 2CAE  
                                  l5232 2CE2                                    l5216 2C58  
                                  l5208 2BFE                                    l5136 34B6  
                                  l5128 346E                                    l5160 3978  
                                  l5152 38B8                                    l5400 26EA  
                                  l5058 4870                                    l5066 4886  
                                  l5074 4856                                    l5330 3F3E  
                                  l5322 3F18                                    l5314 3F04  
                                  l5090 41D8                                    l5082 448C  
                                  l4290 4270                                    l3810 28DC  
                                  l3802 28A4                                    l4098 3E88  
                                  l3706 1F6C                                    l3650 1E00  
                                  l3634 1D60                                    l3642 1DB6  
                                  l3626 1D28                                    l3618 1CFC  
                                  l3570 1BDE                                    l3562 1BCE  
                                  l3554 1BBE                                    l3546 1B86  
                                  l3538 1B54                                    l4178 374E  
                                  l4266 3312                                    l4258 3266  
                                  l3714 44DC                                    l3722 46A8  
                                  l4194 3C5E                                    l4186 3C20  
                                  l4602 1402                                    l4530 11A8  
                                  l4522 1182                                    l4506 1114  
                                  l4514 114E                                    l4450 0D48  
                                  l4442 0D0C                                    l4426 0C74  
                                  l4434 0CD2                                    l4418 0C50  
                                  l4370 0A0C                                    l4362 09B4  
                                  l4346 0908                                    l4338 08DE  
                                  l4282 40F4                                    l5242 2D46  
                                  l5234 2CE8                                    l5226 2CCC  
                                  l5218 2C68                                    l5138 34C6  
                                  l5154 38BA                                    l5146 3884  
                                  l5170 3FBC                                    l5402 2710  
                                  l5308 43C6                                    l5068 4888  
                                  l5076 4858                                    l5340 3F78  
                                  l5332 3F62                                    l5324 3F1A  
                                  l5316 3F0C                                    l5092 41E8  
                                  l5084 449C                                    l4292 4274  
                                  l4700 3504                                    l3820 2938  
                                  l3812 28EC                                    l3804 28B4  
                                  l3900 1FEC                                    l3660 1E30  
                                  l3652 1E0A                                    l3644 1DDC  
                                  l3636 1D94                                    l3628 1D2A  
                                  l3580 1BF2                                    l3572 1BE2  
                                  l3564 1BD2                                    l3556 1BC2  
                                  l3548 1B8E                                    l4268 3322  
                                  l3716 44E0                                    l3724 46C0  
                                  l4196 3C72                                    l4188 3C30  
                                  l4620 1488                                    l4612 1452  
                                  l4604 1412                                    l4540 11DC  
                                  l4532 11AE                                    l4524 1188  
                                  l4516 1160                                    l4508 1126  
                                  l4460 0D8E                                    l4452 0D5A  
                                  l4444 0D10                                    l4436 0CDA  
                                  l4428 0C90                                    l4364 09BE  
                                  l4356 096E                                    l4348 090C  
                                  l3732 45B8                                    l4276 40AC  
                                  l5260 2D94                                    l5244 2D58  
                                  l5236 2CEC                                    l5180 2AEE  
                                  l5156 38D2                                    l5148 3888  
                                  l5172 3FBE                                    l5164 3F84  
                                  l5404 2722                                    l5078 485A  
                                  l5326 3F1C                                    l5318 3F10  
                                  l5094 41F8                                    l5086 44AC  
                                  l4286 4660                                    l4294 4288  
                                  l4710 3560                                    l4702 3520  
                                  l3830 2978                                    l3822 293A  
                                  l3814 2900                                    l3806 28C4  
                                  l3750 2780                                    l3742 2754  
                                  l3910 202C                                    l3902 1FFA  
                                  l3670 1E58                                    l3662 1E34  
                                  l3654 1E18                                    l3646 1DEC  
                                  l3638 1D96                                    l3590 1C2C  
                                  l3582 1BF6                                    l3574 1BE6  
                                  l3566 1BD6                                    l3558 1BC6  
                                  l3494 3B56                                    l3718 4698  
                                  l4198 3C86                                    l4622 148E  
                                  l4614 1464                                    l4606 1418  
                                  l4526 1194                                    l4518 116E  
                                  l4534 11B4                                    l4542 11E2  
                                  l4550 127A                                    l4470 0EA2  
                                  l4462 0DF2                                    l4446 0D22  
                                  l4454 0D62                                    l4438 0CEC  
                                  l4374 0A42                                    l4358 0980  
                                  l4630 2E58                                    l5254 2D84  
                                  l5246 2D64                                    l5238 2D0A  
                                  l5190 2B16                                    l5182 2AF8  
                                  l5158 38DE                                    l5174 3FD4  
                                  l5166 3F88                                    l5350 23B4  
                                  ?_pad 0011                                    l5344 3F7C  
                                  l5328 3F2E                                    l5096 4208  
                                  l5088 41C6                                    l3736 475A  
                                  l4296 42B6                                    l4712 3576  
                                  l4704 3556                                    l3840 29B4  
                                  l3832 2982                                    l3824 294A  
                                  l3816 290E                                    l3808 28D4  
                                  l3760 27BA                                    l3752 2790  
                                  l3744 2760                                    l3920 2076  
                                  l3912 2032                                    l3904 1FFC  
                                  l3680 1EB2                                    l3672 1E66  
                                  l3664 1E44                                    l3656 1E1A  
                                  l3592 1C48                                    l3584 1BFA  
                                  l3576 1BEA                                    l3568 1BDA  
                                  l3496 3B68                                    l3728 45F0  
                                  l4616 1470                                    l4608 141E  
                                  l4560 12E4                                    l4552 1298  
                                  l4544 123A                                    l4536 11C6  
                                  l4528 11A4                                    l4480 0F60  
                                  l4472 0ED6                                    l4464 0E4A  
                                  l4456 0D6A                                    l4448 0D30  
                                  l4392 0ADC                                    l4376 0A54  
                                  l4368 09E6                                    l4640 2EC6  
                                  l4632 2E5A                                    l4800 14E2  
                                  l5272 2DB4                                    l5248 2D74  
                                  l5192 2B1A                                    l5184 2B0A  
                                  l5176 3FE0                                    l5168 3FBA  
                                  l5360 2406                                    l5352 23B8  
                                  l5338 3F68                                    l5098 4218  
                                  l3738 4776                                    l4298 42BA  
                                  l4730 3652                                    l4722 35F0  
                                  l4714 357E                                    l4706 355A  
                                  l3850 2A26                                    l3842 29C2  
                                  l3834 2990                                    l3826 295C  
                                  l3818 291A                                    l3770 27E6  
                                  l3762 27C0                                    l3754 27A0  
                                  l3746 276E                                    l3930 20C6  
                                  l3922 2082                                    l3914 2052  
                                  l3906 200C                                    l3690 1F1C  
                                  l3682 1EC0                                    l3674 1E7C  
                                  l3658 1E28                                    l3666 1E46  
                                  l3594 1C58                                    l3578 1BEE  
                                  l3586 1BFE                                    l3498 3B7A  
                                  l4618 1478                                    l4570 1322  
                                  l4562 12E8                                    l4554 12B4  
                                  l4546 126E                                    l4538 11D8  
                                  l4490 1034                                    l4482 0F70  
                                  l4474 0F08                                    l4466 0E7E  
                                  l4458 0D7A                                    l4394 0B10  
                                  l4378 0A70                                    l4386 0A8C  
                                  l4650 2F02                                    l4642 2ECE  
                                  l4634 2E74                                    l4810 1518  
                                  l4802 14F4                                    l5266 2DA4  
                                  l5194 2B26                                    l5186 2B0E  
                                  l5370 24A0                                    l5362 242C  
                                  l5354 23CA                                    l5346 23A8  
                                  l4716 3586                                    l3860 2A92  
                                  l3852 2A34                                    l3844 29F0  
                                  l3828 2972                                    l3836 29A2  
                                  l3780 2820                                    l3772 27F6  
                                  l3764 27C6                                    l3756 27A2  
                                  l3748 2770                                    l3940 2108  
                                  l3932 20D2                                    l3924 208C  
                                  l3916 2062                                    l3908 201C  
                                  l3692 1F3C                                    l3684 1EFA  
                                  l3668 1E54                                    l3596 1C6E  
                                  l3588 1C02                                    l4580 1354  
                                  l4572 132A                                    l4564 12F8  
                                  l4556 12C6                                    l4548 1276  
                                  l4492 1048                                    l4484 0FA4  
                                  l4476 0F1E                                    l4468 0E84  
                                  l4396 0B16                                    l4388 0AA6  
                                  l4652 2F12                                    l4644 2ED8  
                                  l4636 2E9E                                    l4628 2E48  
                                  l4900 198E                                    l4804 14F8  
                                  l5284 2DD4                                    l5292 2DE4  
                                  l5196 2B2C                                    l5188 2B12  
                                  l5380 2560                                    l5372 24D2  
                                  l5364 2430                                    l5356 23CE  
                                  l5348 23B0                                    l4726 362E  
                                  l4718 35BA                                    l3870 2AE0  
                                  l3862 2AAC                                    l3854 2A5E  
                                  l3838 29B0                                    l3782 2836  
                                  l3774 2806                                    l3766 27D4  
                                  l3758 27AA                                    l3950 216A  
                                  l3942 2114                                    l3934 20DE  
                                  l3926 20A2                                    l3694 1F40  
                                  l3678 1EA6                                    l3686 1EFC  
                                  l3598 1C7A                                    l4582 135A  
                                  l4590 13AA                                    l4574 1338  
                                  l4566 130A                                    l4558 12D4  
                                  l4486 0FFA                                    l4494 104C  
                                  l4478 0F50                                    l4398 0B70  
                                  l4750 3B0A                                    l4742 3AB6  
                                  l4670 2FDA                                    l4662 2F9E  
                                  l4646 2EDE                                    l4638 2EA6  
                                  l4910 1A3A                                    l4902 199C  
                                  l4830 153C                                    l4822 152A  
                                  l4814 151E                                    l4806 1504  
                                  l5278 2DC4                                    l5198 2B6E  
                                  l5390 2622                                    l5382 2592  
                                  l5374 24D8                                    l5366 243C  
                                  l5358 23E0                                    l4760 4322  
                                  l4728 3640                                    l3872 2AE2  
                                  l3864 2AC8                                    l3848 2A1A  
                                  l3856 2A62                                    l3784 2846  
                                  l3792 2866                                    l3776 2808  
                                  l3768 27D6                                    l3960 2200  
                                  l3952 2176                                    l3944 2124  
                                  l3936 20EC                                    l3928 20AE  
                                  l3880 1F7E                                    l3696 1F4E  
                                  l3688 1F0C                                    l4592 13BC  
                                  l4584 1380                                    l4576 1340  
                                  l4568 1312                                    l4496 105C  
                                  l4488 1000                                    l4752 3B32  
                                  l4744 3AC4                                    l4736 3A80  
                                  l4680 3092                                    l4672 2FE0  
                                  l4664 2FB0                                    l4656 2F52  
                                  l4648 2EE6                                    l4920 1A78  
                                  l4912 1A48                                    l4904 19DA  
                                  l4840 15DE                                    l4808 1506  
                                  l4832 1590                                    l5392 2634  
                                  l5384 25C4                                    l5376 24FE  
                                  l5368 246E                                    l4770 4346  
                                  l4762 4324                                    l5298 43A6  
                                  l3866 2ACC                                    l3858 2A7C  
                                  l3794 2876                                    l3786 284E  
                                  l3778 2810                                    l3970 2256  
                                  l3962 221E                                    l3954 2192  
                                  l3946 213E                                    l3938 20F8  
                                  l3890 1FBA                                    l3882 1F8A  
                                  l3698 1F54                                    l4594 13D6  
                                  l4586 139C                                    l4578 1348  
                                  l4498 1070                                    l4746 3ADC  
                                  l4738 3AAA                                    l4690 30F8  
                                  l4682 30AC                                    l4658 2F64  
                                  l4666 2FC4                                    l4674 303E  
                                  l4914 1A5C                                    l4850 1678  
                                  l4842 15EC                                    l4834 15B0  
                                  l4826 1530                                    l4818 1524  
                                  l5394 2680                                    l5386 25F6  
                                  l5378 2510                                    l4772 4348  
                                  l4764 4326                                    l4756 4310  
                                  l4940 42D4                                    l4780 478A  
                                  l3868 2ADA                                    l3796 2876  
                                  l3788 2852                                    l3980 22C0  
                                  l3972 225A                                    l3964 2228  
                                  l3956 21BC                                    l3948 214E  
                                  l3892 1FCA                                    l3884 1F98  
                                  l4596 13DC                                    l4588 13A4  
                                  l4748 3AF8                                    l4684 30CC  
                                  l4676 305A                                    l4668 2FD4  
                                  l4908 1A16                                    l4860 1704  
                                  l4844 1610                                    l4836 15B2  
                                  l4924 1A86                                    l5484 2E08  
                                  l5396 26B2                                    l5388 25FC  
                                  l4774 434A                                    l4766 4328  
                                  l4758 4320                                    l4950 42E8  
                                  l4942 42D6                                    l4782 4798  
                                  l4694 34E8                                    l3990 2322  
                                  l3982 22CC                                    l3974 2268  
                                  l3966 2236                                    l3958 21F2  
                                  l3894 1FD0                                    l3886 1F9A  
                                  l4598 13EE                                    l4686 30D2  
                                  l4678 3078                                    l4926 1AAA  
                                  l4918 1A6A                                    l4870 17A0  
                                  l4862 1736                                    l4854 16C0  
                                  l4846 164A                                    l4838 15D6  
                                  l5486 1562                                    l5398 26E4  
                                  l4768 4334                                    l4952 42FA  
                                  l4944 42D8                                    l4960 410E  
                                  l4792 4822                                    l4776 4782  
                                  l5488 35A4                                    l4696 34FC  
                                  l3992 2336                                    l3984 22DA  
                                  l3976 2296                                    l3968 2248  
                                  l3896 1FE0                                    l3888 1FAA  
                                  l4688 30E2                                    l4880 1838  
                                  l4872 17AE                                    l4864 1746  
                                  l4848 166A                                    l4856 16D2  
                                  l4954 42FC                                    l4946 42DA  
                                  l4938 42C4                                    l4962 4132  
                                  l4794 480E                                    l4778 4786  
                                  l4970 4724                                    l4698 3500  
                                  l3994 2350                                    l3986 2304  
                                  l3898 1FE6                                    l4874 17DE  
                                  l4866 1778                                    l4858 16F4  
                                  l4956 42FE                                    l4948 42DC  
                                  l4964 4136                                    l4788 479E  
                                  l4980 4758                                    l3996 236C  
                                  l3988 2308                                    l4884 18A6  
                                  l4868 178A                                    l4796 14B0  
                                  l4958 410A                                    l4990 45A4  
                                  l4974 472E                                    l4966 4700  
                                  l3998 237C                                    l4886 18B8  
                                  l4894 1930                                    l4878 180A  
                                  l4798 14D4                                    l4992 45AC  
                                  l4896 1954                                    l4888 18EC  
                                  l4994 45B4                                    l4986 4580  
                                  l4978 4752                                    l4898 1978  
                                  l4988 4594                                    l4998 47FA  
                                  STR_1 0801                                    STR_2 080F  
                                  STR_3 080F                                    STR_4 080F  
                                  STR_5 0854                                    STR_6 0851  
                                  STR_7 0826                                    STR_8 082E  
                                  STR_9 082E                                    u3110 3B68  
                                  u3111 3B64                                    u4000 2350  
                                  u3200 1B64                                    u3120 3B7A  
                                  _LATD 000F8C                                    u4001 234C  
                                  u3201 1B60                                    u3121 3B76  
                                  u4010 238A                                    u3210 1B74  
                                  u3130 3BA2                                    u4011 2386  
                                  u3211 1B70                                    u3131 3B9E  
                                  u4020 3CF8                                    u4100 3DF0  
                                  u3300 1CBA                                    u3220 1BB0  
                                  u3140 3BD8                                    u4021 3CF4  
                                  u4101 3DEC                                    u3301 1CB6  
                                  u3221 1BAC                                    u3141 3BD4  
                                  u4030 3D12                                    u4110 3E0E  
                                  u3310 1CCA                                    u3230 1BBE  
                                  u3150 1AD8                                    u4031 3D0E  
                                  u4111 3E0A                                    u3311 1CC6  
                                  u3231 1BBA                                    u3151 1AD4  
                                  u4040 3D38                                    u4120 3E24  
                                  u4200 382A                                    u3400 1E28  
                                  u3320 1CFC                                    u3240 1C2C  
                                  u3160 1AEA                                    u5000 0FFA  
                                  u4041 3D34                                    u4121 3E20  
                                  u4201 3826                                    u3401 1E24  
                                  u3321 1CF8                                    u3241 1C28  
                                  u3161 1AE6                                    u5001 0FF6  
                                  u4050 3D56                                    u4130 3E48  
                                  u4210 387A                                    u3410 1E44  
                                  u3330 1D0A                                    u3250 1C44  
                                  u3170 1AFA                                    u5010 1048  
                                  u4051 3D52                                    u4131 3E44  
                                  u4211 3876                                    u3411 1E40  
                                  u3331 1D06                                    u3251 1C3E  
                                  u3171 1AF6                                    u5011 1044  
                                  u4060 3D72                                    u4140 3E88  
                                  u4220 463E                                    u3500 1F1C  
                                  u3420 1E54                                    u3340 1D28  
                                  u3260 1C46                                    u3180 1B3C  
                                  u4300 3C30                                    u5100 1298  
                                  u5020 1070                                    u4061 3D6E  
                                  u4141 3E84                                    u4221 463A  
                                  u3501 1F18                                    u3421 1E50  
                                  u3341 1D24                                    u3181 1B38  
                                  u4301 3C2C                                    u5101 1294  
                                  u5021 106C                                    u4070 3D98  
                                  u4150 3EC6                                    u3510 1F3C  
                                  u3430 1E66                                    u3350 1D60  
                                  u3270 1C6E                                    u3190 1B52  
                                  u4230 3690                                    u4310 3C52  
                                  u5110 12B4                                    u5030 1114  
                                  u4071 3D94                                    u4151 3EC2  
                                  u3511 1F38                                    u3431 1E62  
                                  u3351 1D5C                                    u3271 1C6A  
                                  u3191 1B4E                                    u4231 368C  
                                  u4311 3C4E                                    u5111 12B0  
                                  u5031 1110                                    u4080 3DBC  
                                  u3600 276E                                    u4160 3EFA  
                                  u3520 1F4E                                    u3440 1E7C  
                                  u3360 1DA6                                    u3280 1C8C  
                                  u4240 36C4                                    u4400 3A6E  
                                  u4320 3CA8                                    u5200 144E  
                                  u5120 12C6                                    u5040 1126  
                                  u6000 2BAE                                    u4081 3DB8  
                                  u3601 276A                                    u4161 3EF6  
                                  u3521 1F4A                                    u3441 1E78  
                                  u3361 1DA2                                    u3281 1C88  
                                  u4321 3CA4                                    u5121 12C2  
                                  u5041 1122                                    u6001 2BAA  
                                  u6010 43B6                                    u4090 3DD6  
                                  u3610 2780                                    u4170 37AE  
                                  u3530 1F6A                                    u3450 1E92  
                                  u3370 1DDC                                    u3290 1CAC  
                                  u4250 36F2                                    u4330 3CB8  
                                  u4410 41B0                                    u5210 1464  
                                  u5130 12D4                                    u5050 1138  
                                  u6011 43B2                                    u4091 3DD2  
                                  u3611 277C                                    u4171 37AA  
                                  u3531 1F66                                    u3451 1E8E  
                                  u3371 1DD8                                    u3291 1CA8  
                                  u4251 36EE                                    u4331 3CB4  
                                  u5211 1460                                    u5131 12D0  
                                  u5051 1134                                    u6020 43EA  
                                  u3700 2938                                    u3620 2790  
                                  u4180 37EC                                    u3460 1EA6  
                                  u3380 1DEC                                    u4260 3706  
                                  u4340 39C2                                    u4500 3226  
                                  u3540 4500                                    u4420 41C2  
                                  u5140 130A                                    u5060 1146  
                                  u5300 2F9A                                    u5220 2E58  
                                  u6100 2560                                    u6021 43E6  
                                  u3701 2934                                    u3621 278C  
                                  u4181 37E8                                    u3461 1EA2  
                                  u3381 1DE8                                    u4261 3702  
                                  u4245 36BA                                    u4501 3222  
                                  u3541 44FC                                    u4421 41BE  
                                  u5141 1306                                    u5061 1142  
                                  u5221 2E54                                    u6101 255C  
                                  u6030 3F2E                                    u3710 295C  
                                  u3630 27D4                                    u4190 380A  
                                  u3470 1EC0                                    u3390 1E18  
                                  u4270 372E                                    u4350 39E0  
                                  u4510 324A                                    u3550 46C0  
                                  u4430 407C                                    u5150 1338  
                                  u5070 1160                                    u5310 2FB0  
                                  u5230 2E74                                    u6110 2592  
                                  u6031 3F2A                                    u3711 2958  
                                  u3631 27D0                                    u4191 3806  
                                  u3471 1EBC                                    u3391 1E14  
                                  u4271 372A                                    u4351 39DC  
                                  u3551 46BC                                    u4431 4076  
                                  u5151 1334                                    u5071 115C  
                                  u5311 2FAC                                    u5231 2E70  
                                  u6111 258E                                    u6040 3F3E  
                                  u5400 3556                                    u3800 2A7C  
                                  u3720 2972                                    u3640 27E6  
                                  u3480 1EFA                                    u4280 374E  
                                  u4360 3A08                                    u4520 3266  
                                  u3560 4620                                    u4440 407E  
                                  u5160 13BC                                    u5080 116E  
                                  u4600 40F4                                    u5320 3018  
                                  u5240 2E9E                                    u6120 25C4  
                                  u6041 3F3A                                    u5401 3552  
                                  u3801 2A78                                    u3721 296E  
                                  u3641 27E2                                    u3481 1EF6  
                                  u4281 374A                                    u4361 3A04  
                                  u4345 39B8                                    u4521 3262  
                                  u4417 41A6                                    u3561 461A  
                                  u5161 13B8                                    u5081 116A  
                                  u4601 40F0                                    u5241 2E9A  
                                  u6121 25C0                                    u6050 3F4E  
                                  u4610 4690                                    u5410 3572  
                                  u3810 2AAC                                    u3730 2990  
                                  u3650 27F6                                    u3490 1F0C  
                                  u4290 375E                                    u4370 3A32  
                                  u4530 32BA                                    u3570 4622  
                                  u4450 4094                                    u5170 13D6  
                                  u5090 11C6                                    u5330 305A  
                                  u5250 2F02                                    u6130 25F6  
                                  u6051 3F48                                    u4611 468A  
                                  u5411 356E                                    u3811 2AA8  
                                  u3731 298C                                    u3651 27F2  
                                  u3491 1F08                                    u4291 375A  
                                  u4371 3A2E                                    u4515 3240  
                                  u4451 4090                                    u5171 13D2  
                                  u5091 11C2                                    u5331 3056  
                                  u5251 2EFE                                    u6131 25F2  
                                  u6060 3F78                                    u4620 4692  
                                  u5420 3628                                    u3820 2ADA  
                                  u3740 29B0                                    u3660 2836  
                                  u3900 2062                                    u4540 32D6  
                                  u4460 316A                                    u5180 13EE  
                                  u4700 08DE                                    u5500 3B32  
                                  u3580 45E8                                    u5340 3078  
                                  u5260 2F4C                                    u6140 2680  
                                  u6061 3F74                                    u5421 3622  
                                  u3821 2AD6                                    u3741 29AC  
                                  u3661 2832                                    u3901 205E  
                                  u4541 32D2                                    u5181 13EA  
                                  u4701 08DA                                    u5501 3B2E  
                                  u3581 45E2                                    u5341 3074  
                                  u5325 3006                                    u5261 2F46  
                                  u6141 267C                                    u5510 4798  
                                  u4630 4288                                    u5430 362A  
                                  u3750 29C2                                    u3670 2876  
                                  u3910 21DC                                    u3830 1F98  
                                  u4390 3A6C                                    u4550 3312  
                                  u4470 3198                                    u5190 144C  
                                  u4710 08F0                                    u3590 45EA  
                                  u5350 3092                                    u5270 2F4E  
                                  u6150 26B2                                    u6070 246E  
                                  u5511 4794                                    u4631 4284  
                                  u3751 29BE                                    u3671 2872  
                                  u3831 1F94                                    u4391 3A66  
                                  u4551 330E                                    u4535 32B0  
                                  u4471 3194                                    u5191 1446  
                                  u4711 08EC                                    u5351 308E  
                                  u6151 26AE                                    u6071 246A  
                                  u6056 3F50                                    u5520 4834  
                                  u4640 42B6                                    u5440 3640  
                                  u3760 29F0                                    u3680 28EC  
                                  u3920 2236                                    u3840 1FAA  
                                  u4480 31BA                                    u4800 0AD8  
                                  u4720 0938                                    u4560 4576  
                                  u5360 30AC                                    u5280 2F64  
                                  u5600 16BC                                    u6160 26E4  
                                  u6080 24A0                                    u5521 4830  
                                  u4641 42B2                                    u5441 363C  
                                  u3761 29EC                                    u3681 28E8  
                                  u3921 2232                                    u3841 1FA6  
                                  u4385 3A44                                    u4481 31B6  
                                  u4465 3160                                    u4801 0AD4  
                                  u4721 0934                                    u4561 4570  
                                  u5361 30A8                                    u5281 2F60  
                                  u6161 26E0                                    u6081 249C  
                                  u4650 4388                                    u5530 4820  
                                  u5450 3652                                    u3770 2A06  
                                  u3690 290E                                    u3930 2256  
                                  u3850 1FBA                                    u4810 0B6C  
                                  u4730 0968                                    u4570 4578  
                                  u5370 30BC                                    u5290 2F98  
                                  u5610 16D2                                    u6090 24D2  
                                  u4651 4384                                    u5531 481C  
                                  u5451 364E                                    u3771 2A02  
                                  u3691 290A                                    u3931 2252  
                                  u3915 21D2                                    u3851 1FB6  
                                  u4811 0B68                                    u4731 0962  
                                  u5371 30B8                                    u5291 2F92  
                                  u5611 16CE                                    u6091 24CE  
                                  u4660 43A2                                    u3780 2A1A  
                                  u3940 2268                                    u3860 1FFA  
                                  u4900 0CEC                                    u4820 0BDE  
                                  u4740 096A                                    u5460 3AAA  
                                  u4580 40DC                                    u5380 30CC  
                                  u5700 1978                                    u5620 1704  
                                  u5540 14D4                                    _RCEN 007E2B  
                                  u4661 439E                                    u3781 2A16  
                                  u3941 2264                                    u3861 1FF6  
                                  u4901 0CE8                                    u4821 0BDA  
                                  u5461 3AA6                                    u4581 40D6  
                                  u5381 30C8                                    u5701 1974  
                                  u5621 1700                                    u5541 14D0  
                                  u4670 486C                                    u5390 3520  
                                  u3790 2A34                                    u3950 2296  
                                  u3870 200C                                    u4910 0CFE  
                                  u4830 0C04                                    u4750 0980  
                                  u5470 3ADC                                    u4590 40DE  
                                  u5710 1A3A                                    u5630 1746  
                                  u5550 15A2                                    u4671 4868  
                                  u5391 351C                                    u3791 2A30  
                                  u3951 2292                                    u3871 2008  
                                  u4495 31CE                                    u4911 0CFA  
                                  u4831 0C00                                    u4751 097C  
                                  u5471 3AD8                                    u5711 1A36  
                                  u5631 1742                                    u5551 159E  
                                  u5720 412E                                    u5800 45A4  
                                  u3960 22AC                                    u3880 201C  
                                  u4496 31D8                                    u4920 0D0C  
                                  u4840 0C16                                    u4760 0A0C  
                                  u4680 0880                                    u5480 3AF8  
                                  u5640 178A                                    u5560 15B0  
                                  u5801 45A0                                    u3961 22A8  
                                  u3881 2018                                    u4497 31E8  
                                  u4921 0D08                                    u4841 0C12  
                                  u4761 0A08                                    u4681 087C  
                                  u5481 3AF4                                    u5641 1786  
                                  u5561 15AC                                    u5730 4156  
                                  u5810 480A                                    u3970 22C0  
                                  u3890 2052                                    u4930 0D22  
                                  u4850 0C38                                    u4770 0A3C  
                                  u4690 08D0                                    u5490 3B0A  
                                  u5650 1838                                    u5570 15D6  
                                  u5811 4806                                    u3971 22BC  
                                  u3891 204E                                    u4931 0D1E  
                                  u4851 0C34                                    u4771 0A36  
                                  u4691 08CC                                    u5491 3B06  
                                  u5651 1834                                    u5571 15D2  
                                  u5740 4166                                    u3980 22DA  
                                  u4940 0D30                                    u4860 0C5E  
                                  u4780 0A3E                                    u5660 18A0  
                                  u5580 1610                                    u5820 4042  
                                  u5900 347E                                    u5741 4162  
                                  u3981 22D6                                    u4941 0D2C  
                                  u4861 0C5A                                    u5661 189A  
                                  u5581 160C                                    u5821 403E  
                                  u5901 347A                                    u5830 4514  
                                  u5750 4710                                    u3990 2322  
                                  u4950 0D5A                                    u4870 0C74  
                                  u4790 0A54                                    u5670 18A2  
                                  u5590 16BA                                    u5910 348C  
                                  u5727 4124                                    u5831 4510  
                                  u5751 470C                                    u3991 231E  
                                  u4951 0D56                                    u4871 0C70  
                                  u4791 0A50                                    u5591 16B4  
                                  u5911 3488                                    u5760 4720  
                                  u4960 0EA2                                    u4880 0C90  
                                  u5680 18B8                                    u5920 34C6  
                                  u5840 3346                                    u5737 414C  
                                  u5761 471C                                    u4961 0E9E  
                                  u4881 0C8C                                    u5681 18B4  
                                  u5921 34C2                                    u5841 3342  
                                  u5770 473E                                    u4970 0F08  
                                  u4890 0CC6                                    u5690 1954  
                                  u5930 34D4                                    u5850 3354  
                                  u5771 473A                                    u4971 0F04  
                                  u4891 0CC2                                    u5691 1950  
                                  u5931 34D0                                    u5851 3350  
                                  u5780 474E                                    u4980 0F50  
                                  u5860 33B0                                    u5940 38CA  
                                  u5781 474A                                    u4981 0F4C  
                                  u5861 33AC                                    u5941 38C6  
                                  u5790 4590                                    u4990 0F60  
                                  u5870 3406                                    u5950 3FCE  
                                  u5791 458C                                    u4991 0F5C  
                                  u5871 3402                                    u5951 3FCA  
                                  u5880 3450                                    u5961 2B02  
                                  u5881 344C                                    u5890 346E  
                                  u5891 346A                                    u5980 2B6E  
                                  u5981 2B6A                                    u5974 2B46  
                                  u5975 2B40                                    u5994 2B86  
                                  u5995 2B80                                    _RSEN 007E29  
                                  _Date 0120                                    _Year 011C  
                                  _Sluz 0100                                    _dbuf 012A  
                                  _atoi 34E8                                    _main 23A8  
                       ?_RTC_Read_Clock 0001                                    _hour 0124  
                      __end_of_I2C_Nack 4822                      __size_of_LCD_Clear 0014  
                                  _prec 00F9                        __end_of_I2C_Init 47FA  
                                  _temp 0118                        __end_of_I2C_Read 45B8  
                                  _nout 00F5                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  btemp 005F                                    _xtoa 2E48  
                      __end_of_I2C_Stop 480E                           ___fpclassifyf 3982  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 000E                         __end_of_MSdelay 43A4  
                       ___fldiv@new_exp 003F                           _LCD_String_xy 4502  
                          _tolower$1851 000D                            ___param_bank 000000  
                       __end_of_ReadADC 3982                         __end_of_ReadLUZ 3FEA  
                                 ??_ISR 0001        RTC_Read_Clock@read_clock_address 0004  
                                 ??_pad 0017                        __end_of_LCD_Char 435A  
                      __end_of_LCD_Init 46FE                           ReadADC@result 0066  
                         ___fltol@sign1 0060                                   ?_atoi 0008  
                       __end_of___fladd 1F7E                                   ?_main 0001  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                       __end_of___fldiv 2AEE                         __end_of___awdiv 3DAA  
                       __end_of___flneg 4660                                   STR_10 0826  
                                 STR_11 082E                                   STR_12 082E  
                                 STR_20 084A                                   STR_21 083A  
                                 STR_13 082A                                   STR_14 082A  
                                 STR_22 0846                                   STR_15 0826  
                                 STR_31 084E                                   STR_23 0816  
                                 STR_16 0842                                   STR_24 081E  
                                 STR_33 084E                                   STR_17 083E  
                                 STR_18 0836                                   STR_19 0832  
                                 STR_27 081A                                   STR_28 0822  
                       __end_of___awmod 3E5A                         __end_of___flmul 23A8  
                       __end_of___flsub 4478                         __end_of___fltol 3780  
                       ___awdiv@divisor 0003                                   ?_xtoa 001C  
                                 _LATD0 007C60                                   _LATD1 007C61  
                                 _LATE0 007C68                                   _LATE1 007C69  
                                 _LATE2 007C6A                                   i2l223 47DC  
                       ___awdiv@counter 0005                            vfpfcnvrt@fmt 00A8  
                          vfpfcnvrt@llu 00B0                                   _TMR1H 000FCF  
                                 _TMR1L 000FCE                                   _TRISA 000F92  
                                 _TRISD 000F95                                   _SSPIE 007CEB  
                                 _TRISE 000F96                                   _SSPIF 007CF3  
                       __end_of_conf_IO 488C                                   _Month 011E  
                                 _Stemp 017A                                   _flags 00FB  
                                 _fputc 3B56                         __end_of_isalpha 457E  
                                 _fputs 44BE                         __end_of_isdigit 4698  
                     __end_of_I2C_Ready 4870                                   atoi@n 0015  
                                 pad@fp 0011                                   atoi@s 0008  
                                 _width 00F7                                   _putch 488C  
                       __end_of_islower 45F0                         __end_of_isspace 42C2  
                     __end_of_I2C_Start 472C                       __end_of_I2C_Write 47A2  
                       __end_of_isupper 4628                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 ttemp5 0060                                   ttemp6 0063  
                                 ttemp7 0067                                   status 000FD8  
                                 wtemp8 0060                     __size_of_LCD_String 005E  
                       __end_of_sprintf 4270                          ?___fpclassifyf 0001  
                       __end_of_tolower 40AC                                   xtoa@c 0041  
                                 xtoa@d 001E                                   xtoa@i 003F  
                                 xtoa@n 0037                                   xtoa@p 0033  
                                 xtoa@w 0035                                   xtoa@x 0026  
                       __end_of_strncmp 3B56                         __end_of_toupper 410A  
                         ??_PlayCancion 0001                          ?_LCD_String_xy 000B  
                          _toupper$1866 000D                 __end_of_LCD_Custom_Char 43EC  
                       __initialization 43EC                            __end_of_atoi 3678  
                          __end_of_main 2754                            __end_of_xtoa 3122  
                             ??_I2C_Ack 0001                                  ??_atoi 000A  
                                ??_main 005F                                  ??_xtoa 0027  
                     __end_of_LCD_Clear 484A                           __activetblptr 000002  
                                ?_fputc 0001                                  ?_fputs 000A  
                                _ADRESH 000FC4                                  _ADRESL 000FC3  
                      ___awdiv@dividend 0001                                  ?_putch 0001  
                      LCD_String_xy@msg 000C                        LCD_String_xy@pos 000B  
                      LCD_String_xy@row 000E                               ??_MSdelay 0003  
                                i2l3380 47C4                                  i2l3382 47D2  
                                i2l3384 47DA                                  _OSCCON 000FD3  
                         vfpfcnvrt@done 00B8                                  _SSPADD 000FC8  
                                _TRISB0 007C98                                  _TRISB1 007C99  
                                _SSPBUF 000FC9                        __end_of___xxtofl 34E8  
                             ??_ReadADC 0064                               ??_ReadLUZ 0003  
                      __end_of_conf_CLK 4882                        __end_of_conf_TA1 485E  
                      ??_RTC_Calendario 00DE                            vfprintf@cfmt 00CC  
                                ___flge 3780                                  ___fleq 3E5A  
                             ??___fladd 004F                                  ___wmul 475A  
                             ??___fldiv 0036                               ??___awdiv 0005  
                             ??___flneg 0005                               ??___awmod 0005  
                             ??___flmul 001D                               ??___flsub 005F  
                             ??___fltol 005B                                  _efgtoa 0858  
                   __end_of_PlayCancion 3F84                                  _floorf 3122  
                                clear_0 4412                                  clear_1 441E  
                      ___awdiv@quotient 0007                         ___awmod@divisor 0003  
                                isa$std 000001                                  _tempar 00F1  
                       ___awmod@counter 0005                      _I2C_Repeated_Start 472C  
                                pad@buf 0013                               ??_conf_IO 0001  
                  __size_of_LCD_Command 004C                                  _strcpy 4168  
                                _strlen 4698                                  fputc@c 0001  
                                fputs@c 000E                        LCD_Custom_Char@i 000C  
                                fputs@i 000F                               ?_I2C_Nack 0001  
                                fputs@s 000A                               ??_isalpha 0003  
                             ??_isdigit 0003                               ?_I2C_Init 0001  
                             ?_I2C_Read 0001                               ?_I2C_Stop 0001  
                       ___fpclassifyf@e 0009                         ___fpclassifyf@u 000B  
                       ___fpclassifyf@x 0001                               ??_islower 0003  
                          __mediumconst 0000                               ??_isspace 0003  
                                tblptrh 000FF7                               ??_isupper 0003  
                                tblptrl 000FF6                                  tblptru 000FF8  
                   ?_I2C_Repeated_Start 0001                                  putch@c 0001  
                      __end_of_vfprintf 404C                               ??_sprintf 005F  
                             ??_tolower 0009                                  xtoa@fp 001C  
                             ??_strncmp 0007                               ??_toupper 0009  
                            ___flge@ff1 002E                              ___flge@ff2 0032  
                       ??___fpclassifyf 0005                            ___xxtofl@arg 0011  
                          ___xxtofl@exp 0010                            ___xxtofl@val 0007  
                            ___fleq@ff1 0001                              ___fleq@ff2 0005  
                             ?_LCD_Char 0001                              __accesstop 0060  
               __end_of__initialization 4424                               ?_LCD_Init 0001  
                       ??_LCD_String_xy 000E                              ___flneg@f1 0001  
                         ___rparam_used 000001                              ___fltol@f1 0057  
                  ??_I2C_Repeated_Start 0002                        ?_LCD_Custom_Char 0009  
                        __pcstackCOMRAM 0001                            __pidataBANK1 47A2  
                         __end_of_fputc 3C20                           __end_of_fputs 4502  
                         __end_of_putch 488E                            ??_LCD_String 000B  
                            ??_I2C_Nack 0001                              ??_I2C_Init 0001  
                            ??_I2C_Read 0001                              ??_I2C_Stop 0001  
                         ReadLUZ@result 0005                        ??_RTC_Read_Clock 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00E5  
                            __pbssBANK1 0100                              ??_LCD_Char 0007  
                            _character1 01EA                              _character2 01E2  
                            _character3 01DA                              ??_LCD_Init 0009  
                    __end_of_LCD_String 4168                             _PlayCancion 3F04  
                          I2C_Read@flag 0001                                 ?___flge 002E  
                               ?___fleq 0001                          I2C_Read@buffer 0002  
                               ?___wmul 0001                                 ?_efgtoa 0062  
                               ?_floorf 0047                                 _I2C_Ack 4822  
                               _ACKSTAT 007E2E                                 ?_strcpy 0001  
                               ?_strlen 0001                               ?___xxtofl 0007  
                    __size_of_vfpfcnvrt 060E                               ?_conf_CLK 0001  
                             ?_conf_TA1 0001                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               _MSdelay 435A                               _I2C_Ready 485E  
                               _ReadADC 3884                               _I2C_Start 46FE  
                               _ReadLUZ 3F84                               _I2C_Write 4780  
                         LCD_String@msg 0009                                 __Hparam 0000  
                               __Lparam 0000                         __size_of___flge 0104  
                       __size_of___fleq 00AA                                 ___fladd 1ABE  
                     _RTC_Read_Calendar 41C4                                 ___fldiv 2754  
                               ___awdiv 3CE6                                 ___flneg 4628  
                               ___awmod 3DAA                                 ___flmul 1F7E  
                               ___flsub 4432                                 ___fltol 3678  
                       __size_of___wmul 0026                               ?_vfprintf 00C6  
                          __psmallconst 0800                         __size_of_efgtoa 0C58  
                    ?_RTC_Read_Calendar 0001                         __size_of_floorf 0212  
                               __pcinit 43EC                                 __ramtop 0800  
                               _conf_IO 4882                                 __ptext0 23A8  
                               __ptext1 3F84                                 __ptext2 3884  
                               __ptext3 3334                                 __ptext4 2AEE  
                               __ptext5 421E                                 __ptext6 3FEA  
                               __ptext7 14B0                                 __ptext8 2E48  
                               __ptext9 40AC                         __size_of_strcpy 005C  
                       __size_of_strlen 0036                            __size_of_ISR 47D8  
                             _T1CONbits 000FCD                            __size_of_pad 00C6  
                               _isalpha 4542                                 _isdigit 4660  
                            ??___xxtofl 000B                        ___awmod@dividend 0001  
                   ??_RTC_Read_Calendar 0003                                 _islower 45B8  
                               _isspace 4270                                 _isupper 45F0  
                               efgtoa@c 0068                                 efgtoa@d 0086  
                               efgtoa@e 009E                                 efgtoa@f 0064  
                               efgtoa@g 009A                                 efgtoa@h 0090  
                               efgtoa@i 0098                                 efgtoa@l 0094  
                               efgtoa@m 0080                                 efgtoa@n 00A0  
                               efgtoa@p 008A                                 efgtoa@t 007A  
                               efgtoa@u 00A2                                 efgtoa@w 008C  
                             _LCD_Clear 4836                              ??_conf_CLK 0001  
                            ??_conf_TA1 0001                                 atoi@neg 000E  
                               _sprintf 421E                                 _tolower 404C  
                               _strncmp 3A80                          __pintcode_body 47C2  
                               _toupper 40AC                    end_of_initialization 4424  
                               floorf@e 0055                                 floorf@m 0051  
                               floorf@u 0057                                 floorf@x 0047  
                               fputc@fp 0003                          LCD_Command@cmd 0008  
                         __Lmediumconst 0000                                 int_func 47C2  
                               fputs@fp 000C                              ?_I2C_Ready 0001  
                            ?_I2C_Start 0001                              ?_I2C_Write 0001  
             __end_of_RTC_Read_Calendar 421E                       __end_of_vfpfcnvrt 1ABE  
                            efgtoa@mode 008F                              efgtoa@sign 0088  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                              ??_vfprintf 005F  
                               strcpy@d 0009                                 strlen@a 0003  
                               strcpy@s 0007                                 strlen@s 0001  
                           ___fladd@grs 0056                           ___xxtofl@sign 000F  
                             _TRISDbits 000F95                              ?_LCD_Clear 0001  
                     __size_of_I2C_Nack 0014                       __size_of_I2C_Init 001A  
                     __size_of_I2C_Read 003A                             ___fldiv@grs 0041  
                           ___fldiv@rem 003A                       __size_of_I2C_Stop 0014  
                           ___flmul@grs 0022                       __size_of_LCD_Char 004C  
                     __size_of_LCD_Init 0030                           ??_LCD_Command 0007  
                        __end_of___flge 3884                          __end_of___fleq 3F04  
                           vfpfcnvrt@ap 00AA                             vfpfcnvrt@ct 00C2  
                           vfpfcnvrt@fp 00A6                          __end_of___wmul 4780  
                        __end_of_efgtoa 14B0                          __end_of_floorf 3334  
                            floorf@F527 00E5                          __end_of_strcpy 41C4  
                        __end_of_strlen 46CE                     start_initialization 43EC  
                           __end_of_ISR 47E0                             __end_of_pad 3CE6  
  I2C_Repeated_Start@slave_read_address 0002                   __end_of___fpclassifyf 3A80  
                           ??_I2C_Ready 0001                             ??_I2C_Start 0002  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 4542  
                          ?_PlayCancion 0001              __size_of_RTC_Read_Calendar 005A  
                           vfprintf@fmt 00C8             __size_of_I2C_Repeated_Start 002E  
                              ??___flge 0036                                ??___fleq 0009  
                              ??___wmul 0005                                ??_efgtoa 0069  
                           __pdataBANK1 01D3                                ??_floorf 004B  
                              ?_I2C_Ack 0001                                ??_strcpy 0005  
                              ??_strlen 0003                __size_of_LCD_Custom_Char 0048  
                             ___fladd@a 004B                               ___fladd@b 0047  
              RTC_Calendario@Clock_type 01D1                               ___fldiv@a 0032  
                             ___fldiv@b 002E                 __size_of_RTC_Calendario 035A  
                   __end_of_LCD_Command 430E                               ___flmul@a 0019  
                             ___flmul@b 0015                               ___flsub@a 005B  
                             ___flsub@b 0057                           __pcstackBANK0 0060  
                         __pcstackBANK1 018E                             ??_LCD_Clear 0009  
                     __size_of___xxtofl 01B4                       __size_of_conf_CLK 0012  
                     __size_of_conf_TA1 0014                                ?_MSdelay 0001  
                              ?_ReadADC 0062                               _atoi$1747 0010  
                             _atoi$1748 0014                               _atoi$1749 0012  
                              ?_ReadLUZ 0001                             _efgtoa$1671 006E  
                           _efgtoa$1672 0070                             _efgtoa$1681 0074  
                           _efgtoa$1682 0076                             _efgtoa$1683 0078  
                           _efgtoa$1677 0072                               _main$2089 00E1  
                             __pintcode 0008                                ?___fladd 0047  
                              ?___fldiv 002E                                ?___awdiv 0001  
                              ?___flneg 0001                                ?___awmod 0001  
                              ?___flmul 0015                                ?___flsub 0057  
                              ?___fltol 0057                                ?_conf_IO 0001  
                     __size_of_vfprintf 0062                             __smallconst 0800  
                              _I2C_Nack 480E                                ?_isalpha 0001  
                              ?_isdigit 0001                                _I2C_Init 47E0  
                              _I2C_Read 457E                                _I2C_Stop 47FA  
                              ?_islower 0001                                ?_isspace 0001  
                              ?_isupper 0001                   LCD_String_xy@location 000F  
                              ?_sprintf 00CE                                ?_tolower 0007  
                        __size_of_fputc 00CA                          __size_of_fputs 0044  
                              ?_strncmp 0001                                ?_toupper 0007  
                        __size_of_putch 0002                                MSdelay@i 0003  
                              MSdelay@j 0005                                _LCD_Char 430E  
                              _LCD_Init 46CE                          ___wmul@product 0005  
                              _LATDbits 000F8C                                _PIE1bits 000F9D  
               __size_of_RTC_Read_Clock 0046                                i2u307_40 47D2  
                              i2u307_41 47CE                                _PIR1bits 000F9E  
                           _LCD_Command 42C2                               _vfpfcnvrt 14B0  
                             _xtoa$1693 002F                               _xtoa$1694 0031  
                      __size_of_I2C_Ack 0014                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 0001                            _isspace$1787 0007  
                     ??_LCD_Custom_Char 000B                              vfpfcnvrt@c 00C5  
                            vfpfcnvrt@f 00BE                               copy_data0 4400  
          I2C_Start@slave_write_address 0002                        __size_of_MSdelay 004A  
                      __size_of_ReadADC 00FE                        __size_of_ReadLUZ 0066  
                              __Hrparam 0000                              vfprintf@ap 00CA  
                              __Lrparam 0000                              vfprintf@fp 00C6  
                  __size_of_PlayCancion 0080                           I2C_Write@data 0001  
                      __size_of___fladd 04C0                        __size_of___fldiv 039A  
                      __size_of___awdiv 00C4                        __size_of___flneg 0038  
                      __size_of___awmod 00B0                        __size_of___flmul 042A  
                      __size_of___flsub 0046                        __size_of___fltol 0108  
                            ?_vfpfcnvrt 00A6                      ___fpclassifyf@F465 00E9  
                        _RTC_Calendario 2AEE                        __size_of_conf_IO 000A  
                            sprintf@fmt 00D0                                ___xxtofl 3334  
                      __size_of_isalpha 003C                        __size_of_isdigit 0038  
                      __size_of_islower 0038                        __size_of_isspace 0052  
                              _conf_CLK 4870                                _conf_TA1 484A  
                              __ptext10 45B8                                __ptext11 4542  
                              __ptext20 3B56                                __ptext12 3A80  
                              __ptext21 488C                                __ptext13 0858  
                              __ptext30 3E5A                                __ptext22 3122  
                              __ptext14 404C                                __ptext31 2754  
                              __ptext23 3982                                __ptext15 45F0  
                              __ptext40 47FA                                __ptext32 3DAA  
                              __ptext24 3678                                __ptext16 4168  
                              __ptext41 46FE                                __ptext33 3CE6  
                              __ptext25 4432                                __ptext17 3C20  
                              __ptext50 46CE                                __ptext42 472C  
                              __ptext34 34E8                                __ptext26 1ABE  
                              __ptext18 4698                                __ptext51 4836  
                              __ptext43 4780                                __ptext35 4270  
                              __ptext27 4628                                __ptext19 44BE  
                              __ptext60 435A                                __ptext52 47E0  
                              __ptext44 457E                                __ptext36 4660  
                              __ptext28 1F7E                                __ptext53 3F04  
                              __ptext45 485E                                __ptext37 475A  
                              __ptext29 3780                                __ptext54 484A  
                              __ptext46 480E                                __ptext38 4478  
                              __ptext55 4882                                __ptext47 4822  
                              __ptext39 41C4                                __ptext56 4870  
                              __ptext48 4502                                __ptext57 43A4  
                              __ptext49 410A                                __ptext58 42C2  
                              __ptext59 430E                        __size_of_isupper 0038  
                      __size_of_sprintf 0052                        __size_of_tolower 0060  
                            strcpy@dest 0001                        __size_of_strncmp 00D6  
                      __size_of_toupper 005E                           __size_of_atoi 0190  
                         __size_of_main 03AC                           __size_of_xtoa 02DA  
                            MSdelay@val 0001                                efgtoa@fp 0062  
                              efgtoa@ne 007E                                efgtoa@pp 007C  
                              efgtoa@ou 0082                                isa$xinst 000000  
                              int$flags 005F                                _vfprintf 3FEA  
                   PlayCancion@var3beep 0003                  __end_of_RTC_Calendario 2E48  
                            _LCD_String 410A                          _vfpfcnvrt$1712 00BC  
                        _vfpfcnvrt$1708 00BA                              _INTCONbits 000FF2  
                              isalpha@c 0001                                isdigit@c 0001  
                    LCD_Custom_Char@loc 000B                      LCD_Custom_Char@msg 0009  
                              intlevel2 0000                               sprintf@ap 00D6  
                              islower@c 0001                                isspace@c 0001  
                             strcpy@src 0003              __end_of_I2C_Repeated_Start 475A  
                              isupper@c 0001                          _RTC_Read_Clock 4478  
                             strncmp@_l 0001                               strncmp@_r 0003  
                            _OSCCONbits 000FD3                             efgtoa@nmode 008E  
                    PlayCancion@var3seg 0002                     RTC_Calendario@F3531 01D3  
                           ??_vfpfcnvrt 00AC                         ?_RTC_Calendario 0001  
                   RTC_Calendario@AM_PM 01D2                             _temperatura 0114  
                              sprintf@f 00D8                                tolower@c 0007  
                              sprintf@s 00CE                  __size_of___fpclassifyf 00FE  
                              strncmp@l 0008                                strncmp@n 0005  
                              strncmp@r 000A                                toupper@c 0007  
                __size_of_LCD_String_xy 0040                     RTC_Calendario@hours 01C7  
                   RTC_Calendario@month 019F                             _SSPCON2bits 000FC5  
                         ___fladd@signs 0053                      RTC_Calendario@date 0195  
                    RTC_Calendario@days 018E                      RTC_Calendario@mins 01BD  
                    RTC_Calendario@secs 01B3                      RTC_Calendario@year 01A9  
                          ___fladd@aexp 0054                            ___fladd@bexp 0055  
                __end_of_RTC_Read_Clock 44BE  
