

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Oct 08 11:21:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    87                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    88  0000                     
    89                           ; Version 2.20
    90                           ; Generated 12/02/2020 GMT
    91                           ; 
    92                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18F4550 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124                           	psect	idataBANK1
   125  0048F6                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _FreqNota
   129  0048F6  3BB9               	dw	15289
   130  0048F8  385E               	dw	14430
   131  0048FA  3534               	dw	13620
   132  0048FC  3238               	dw	12856
   133  0048FE  2F66               	dw	12134
   134  004900  2CBD               	dw	11453
   135  004902  2A3A               	dw	10810
   136  004904  27DC               	dw	10204
   137  004906  259F               	dw	9631
   138  004908  2382               	dw	9090
   139  00490A  2184               	dw	8580
   140  00490C  1FA3               	dw	8099
   141                           
   142                           ;initializer for RTC_Calendario@F3580
   143  00490E  53                 	db	83
   144  00490F  4D                 	db	77
   145  004910  54                 	db	84
   146  004911  57                 	db	87
   147  004912  74                 	db	116
   148  004913  46                 	db	70
   149  004914  73                 	db	115
   150                           
   151                           ;initializer for _character3
   152  004915  00                 	db	0
   153  004916  08                 	db	8
   154  004917  16                 	db	22
   155  004918  1F                 	db	31
   156  004919  1F                 	db	31
   157  00491A  16                 	db	22
   158  00491B  08                 	db	8
   159  00491C  00                 	db	0
   160                           
   161                           ;initializer for _character2
   162  00491D  15                 	db	21
   163  00491E  0E                 	db	14
   164  00491F  11                 	db	17
   165  004920  11                 	db	17
   166  004921  0E                 	db	14
   167  004922  15                 	db	21
   168  004923  00                 	db	0
   169  004924  00                 	db	0
   170                           
   171                           ;initializer for _character1
   172  004925  0E                 	db	14
   173  004926  1F                 	db	31
   174  004927  1F                 	db	31
   175  004928  0E                 	db	14
   176  004929  00                 	db	0
   177  00492A  0A                 	db	10
   178  00492B  0A                 	db	10
   179  00492C  00                 	db	0
   180  0000                     _RCREG	set	4014
   181  0000                     _TXREG	set	4013
   182  0000                     _RCSTA	set	4011
   183  0000                     _TXSTA	set	4012
   184  0000                     _SPBRG	set	4015
   185  0000                     _SSPCON2bits	set	4037
   186  0000                     _SSPADD	set	4040
   187  0000                     _SSPCON2	set	4037
   188  0000                     _SSPCON1	set	4038
   189  0000                     _SSPSTAT	set	4039
   190  0000                     _SSPBUF	set	4041
   191  0000                     _SSPSTATbits	set	4039
   192  0000                     _LATCbits	set	3979
   193  0000                     _TRISCbits	set	3988
   194  0000                     _ADRESL	set	4035
   195  0000                     _ADRESH	set	4036
   196  0000                     _ADCON2bits	set	4032
   197  0000                     _ADCON0bits	set	4034
   198  0000                     _ADCON1bits	set	4033
   199  0000                     _OSCCONbits	set	4051
   200  0000                     _TRISA	set	3986
   201  0000                     _LATD	set	3980
   202  0000                     _TRISD	set	3989
   203  0000                     _TRISE	set	3990
   204  0000                     _OSCCON	set	4051
   205  0000                     _RCIF	set	31989
   206  0000                     _TXIF	set	31988
   207  0000                     _TRISC7	set	31911
   208  0000                     _TRISC6	set	31910
   209  0000                     _LATE2	set	31850
   210  0000                     _LATE1	set	31849
   211  0000                     _LATE0	set	31848
   212  0000                     _ACKEN	set	32300
   213  0000                     _ACKDT	set	32301
   214  0000                     _PEN	set	32298
   215  0000                     _RSEN	set	32297
   216  0000                     _ACKSTAT	set	32302
   217  0000                     _SSPIF	set	31987
   218  0000                     _SSPIE	set	31979
   219  0000                     _TRISB1	set	31897
   220  0000                     _TRISB0	set	31896
   221  0000                     _RCEN	set	32299
   222  0000                     _LATD1	set	31841
   223  0000                     _LATD0	set	31840
   224                           
   225                           	psect	smallconst
   226  000800                     __psmallconst:
   227                           	callstack 0
   228  000800  00                 	db	0
   229  000801                     STR_22:
   230  000801  42                 	db	66	;'B'
   231  000802  75                 	db	117	;'u'
   232  000803  65                 	db	101	;'e'
   233  000804  6E                 	db	110	;'n'
   234  000805  6F                 	db	111	;'o'
   235  000806  73                 	db	115	;'s'
   236  000807  20                 	db	32
   237  000808  44                 	db	68	;'D'
   238  000809  69                 	db	105	;'i'
   239  00080A  61                 	db	97	;'a'
   240  00080B  73                 	db	115	;'s'
   241  00080C  00                 	db	0
   242  00080D                     STR_19:
   243  00080D  25                 	db	37
   244  00080E  30                 	db	48	;'0'
   245  00080F  2E                 	db	46
   246  000810  30                 	db	48	;'0'
   247  000811  66                 	db	102	;'f'
   248  000812  43                 	db	67	;'C'
   249  000813  00                 	db	0
   250  000814                     STR_23:
   251  000814  49                 	db	73	;'I'
   252  000815  4E                 	db	78	;'N'
   253  000816  46                 	db	70	;'F'
   254  000817  00                 	db	0
   255  000818                     STR_27:
   256  000818  4E                 	db	78	;'N'
   257  000819  41                 	db	65	;'A'
   258  00081A  4E                 	db	78	;'N'
   259  00081B  00                 	db	0
   260  00081C                     STR_24:
   261  00081C  69                 	db	105	;'i'
   262  00081D  6E                 	db	110	;'n'
   263  00081E  66                 	db	102	;'f'
   264  00081F  00                 	db	0
   265  000820                     STR_28:
   266  000820  6E                 	db	110	;'n'
   267  000821  61                 	db	97	;'a'
   268  000822  6E                 	db	110	;'n'
   269  000823  00                 	db	0
   270  000824                     STR_3:
   271  000824  25                 	db	37
   272  000825  78                 	db	120	;'x'
   273  000826  20                 	db	32
   274  000827  00                 	db	0
   275  000828                     STR_9:
   276  000828  25                 	db	37
   277  000829  78                 	db	120	;'x'
   278  00082A  2D                 	db	45
   279  00082B  00                 	db	0
   280  00082C                     STR_4:
   281  00082C  25                 	db	37
   282  00082D  78                 	db	120	;'x'
   283  00082E  3A                 	db	58	;':'
   284  00082F  00                 	db	0
   285  000830                     STR_15:
   286  000830  57                 	db	87	;'W'
   287  000831  65                 	db	101	;'e'
   288  000832  64                 	db	100	;'d'
   289  000833  00                 	db	0
   290  000834                     STR_14:
   291  000834  54                 	db	84	;'T'
   292  000835  75                 	db	117	;'u'
   293  000836  65                 	db	101	;'e'
   294  000837  00                 	db	0
   295  000838                     STR_17:
   296  000838  46                 	db	70	;'F'
   297  000839  72                 	db	114	;'r'
   298  00083A  69                 	db	105	;'i'
   299  00083B  00                 	db	0
   300  00083C                     STR_13:
   301  00083C  4D                 	db	77	;'M'
   302  00083D  6F                 	db	111	;'o'
   303  00083E  6E                 	db	110	;'n'
   304  00083F  00                 	db	0
   305  000840                     STR_12:
   306  000840  53                 	db	83	;'S'
   307  000841  75                 	db	117	;'u'
   308  000842  6E                 	db	110	;'n'
   309  000843  00                 	db	0
   310  000844                     STR_18:
   311  000844  53                 	db	83	;'S'
   312  000845  61                 	db	97	;'a'
   313  000846  74                 	db	116	;'t'
   314  000847  00                 	db	0
   315  000848                     STR_16:
   316  000848  54                 	db	84	;'T'
   317  000849  68                 	db	104	;'h'
   318  00084A  75                 	db	117	;'u'
   319  00084B  00                 	db	0
   320  00084C                     STR_31:
   321  00084C  6C                 	db	108	;'l'
   322  00084D  66                 	db	102	;'f'
   323  00084E  00                 	db	0
   324  00084F                     STR_2:
   325  00084F  41                 	db	65	;'A'
   326  000850  4D                 	db	77	;'M'
   327  000851  00                 	db	0
   328  000852                     STR_1:
   329  000852  50                 	db	80	;'P'
   330  000853  4D                 	db	77	;'M'
   331  000854  00                 	db	0
   332  000855  00                 	db	0	; dummy byte at the end
   333  0000                     
   334                           ; #config settings
   335                           
   336                           	psect	cinit
   337  004516                     __pcinit:
   338                           	callstack 0
   339  004516                     start_initialization:
   340                           	callstack 0
   341  004516                     __initialization:
   342                           	callstack 0
   343                           
   344                           ; Initialize objects allocated to BANK1 (55 bytes)
   345                           ; load TBLPTR registers with __pidataBANK1
   346  004516  0EF6               	movlw	low __pidataBANK1
   347  004518  6EF6               	movwf	tblptrl,c
   348  00451A  0E48               	movlw	high __pidataBANK1
   349  00451C  6EF7               	movwf	tblptrh,c
   350  00451E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   351  004520  6EF8               	movwf	tblptru,c
   352  004522  EE01  F0B6         	lfsr	0,__pdataBANK1
   353  004526  EE10 F037          	lfsr	1,55
   354  00452A                     copy_data0:
   355  00452A  0009               	tblrd		*+
   356  00452C  CFF5 FFEE          	movff	tablat,postinc0
   357  004530  50E5               	movf	postdec1,w,c
   358  004532  50E1               	movf	fsr1l,w,c
   359  004534  E1FA               	bnz	copy_data0
   360                           
   361                           ; Clear objects allocated to BANK2 (20 bytes)
   362  004536  EE02  F000         	lfsr	0,__pbssBANK2
   363  00453A  0E14               	movlw	20
   364  00453C                     clear_0:
   365  00453C  6AEE               	clrf	postinc0,c
   366  00453E  06E8               	decf	wreg,f,c
   367  004540  E1FD               	bnz	clear_0
   368                           
   369                           ; Clear objects allocated to BANK1 (114 bytes)
   370  004542  EE01  F000         	lfsr	0,__pbssBANK1
   371  004546  0E72               	movlw	114
   372  004548                     clear_1:
   373  004548  6AEE               	clrf	postinc0,c
   374  00454A  06E8               	decf	wreg,f,c
   375  00454C  E1FD               	bnz	clear_1
   376                           
   377                           ; Clear objects allocated to BANK0 (27 bytes)
   378  00454E  EE00  F0E2         	lfsr	0,__pbssBANK0
   379  004552  0E1B               	movlw	27
   380  004554                     clear_2:
   381  004554  6AEE               	clrf	postinc0,c
   382  004556  06E8               	decf	wreg,f,c
   383  004558  E1FD               	bnz	clear_2
   384                           
   385                           ; Clear objects allocated to COMRAM (1 bytes)
   386  00455A  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   387  00455C                     end_of_initialization:
   388                           	callstack 0
   389  00455C                     __end_of__initialization:
   390                           	callstack 0
   391  00455C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   392  00455E  6EF8               	movwf	tblptru,c
   393  004560  0100               	movlb	0
   394  004562  EF15  F01F         	goto	_main	;jump to C main() function
   395                           
   396                           	psect	bssCOMRAM
   397  00005F                     __pbssCOMRAM:
   398                           	callstack 0
   399  00005F                     _i:
   400                           	callstack 0
   401  00005F                     	ds	1
   402                           
   403                           	psect	bssBANK0
   404  0000E2                     __pbssBANK0:
   405                           	callstack 0
   406  0000E2                     floorf@F527:
   407                           	callstack 0
   408  0000E2                     	ds	4
   409  0000E6                     ___fpclassifyf@F465:
   410                           	callstack 0
   411  0000E6                     	ds	4
   412  0000EA                     _luz:
   413                           	callstack 0
   414  0000EA                     	ds	4
   415  0000EE                     _tempar:
   416                           	callstack 0
   417  0000EE                     	ds	4
   418  0000F2                     _nout:
   419                           	callstack 0
   420  0000F2                     	ds	2
   421  0000F4                     _width:
   422                           	callstack 0
   423  0000F4                     	ds	2
   424  0000F6                     _prec:
   425                           	callstack 0
   426  0000F6                     	ds	2
   427  0000F8                     _flags:
   428                           	callstack 0
   429  0000F8                     	ds	2
   430  0000FA                     _result:
   431                           	callstack 0
   432  0000FA                     	ds	2
   433  0000FC                     _data_in:
   434                           	callstack 0
   435  0000FC                     	ds	1
   436                           
   437                           	psect	bssBANK1
   438  000100                     __pbssBANK1:
   439                           	callstack 0
   440  000100                     _Year:
   441                           	callstack 0
   442  000100                     	ds	2
   443  000102                     _Month:
   444                           	callstack 0
   445  000102                     	ds	2
   446  000104                     _Date:
   447                           	callstack 0
   448  000104                     	ds	2
   449  000106                     _Day:
   450                           	callstack 0
   451  000106                     	ds	2
   452  000108                     _hour:
   453                           	callstack 0
   454  000108                     	ds	2
   455  00010A                     _min:
   456                           	callstack 0
   457  00010A                     	ds	2
   458  00010C                     _sec:
   459                           	callstack 0
   460  00010C                     	ds	2
   461  00010E                     _dbuf:
   462                           	callstack 0
   463  00010E                     	ds	80
   464  00015E                     _Stemp:
   465                           	callstack 0
   466  00015E                     	ds	20
   467                           
   468                           	psect	dataBANK1
   469  0001B6                     __pdataBANK1:
   470                           	callstack 0
   471  0001B6                     _FreqNota:
   472                           	callstack 0
   473  0001B6                     	ds	24
   474  0001CE                     RTC_Calendario@F3580:
   475                           	callstack 0
   476  0001CE                     	ds	7
   477  0001D5                     _character3:
   478                           	callstack 0
   479  0001D5                     	ds	8
   480  0001DD                     _character2:
   481                           	callstack 0
   482  0001DD                     	ds	8
   483  0001E5                     _character1:
   484                           	callstack 0
   485  0001E5                     	ds	8
   486                           
   487                           	psect	bssBANK2
   488  000200                     __pbssBANK2:
   489                           	callstack 0
   490  000200                     _Sluz:
   491                           	callstack 0
   492  000200                     	ds	20
   493                           
   494                           	psect	cstackBANK1
   495  000172                     __pcstackBANK1:
   496                           	callstack 0
   497  000172                     RTC_Calendario@days:
   498                           	callstack 0
   499                           
   500                           ; 7 bytes @ 0x0
   501  000172                     	ds	7
   502  000179                     RTC_Calendario@date:
   503                           	callstack 0
   504                           
   505                           ; 10 bytes @ 0x7
   506  000179                     	ds	10
   507  000183                     RTC_Calendario@month:
   508                           	callstack 0
   509                           
   510                           ; 10 bytes @ 0x11
   511  000183                     	ds	10
   512  00018D                     RTC_Calendario@year:
   513                           	callstack 0
   514                           
   515                           ; 10 bytes @ 0x1B
   516  00018D                     	ds	10
   517  000197                     RTC_Calendario@secs:
   518                           	callstack 0
   519                           
   520                           ; 10 bytes @ 0x25
   521  000197                     	ds	10
   522  0001A1                     RTC_Calendario@mins:
   523                           	callstack 0
   524                           
   525                           ; 10 bytes @ 0x2F
   526  0001A1                     	ds	10
   527  0001AB                     RTC_Calendario@hours:
   528                           	callstack 0
   529                           
   530                           ; 10 bytes @ 0x39
   531  0001AB                     	ds	10
   532  0001B5                     RTC_Calendario@AM_PM:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x43
   536  0001B5                     	ds	1
   537                           
   538                           	psect	cstackBANK0
   539  000060                     __pcstackBANK0:
   540                           	callstack 0
   541  000060                     ?_ReadADC:
   542                           	callstack 0
   543  000060                     ?_efgtoa:
   544                           	callstack 0
   545  000060                     efgtoa@fp:
   546                           	callstack 0
   547  000060                     USART_Init@baud_rate:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x0
   551  000060                     	ds	2
   552  000062                     ??_ReadADC:
   553  000062                     efgtoa@f:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x2
   557  000062                     	ds	2
   558  000064                     ReadADC@result:
   559                           	callstack 0
   560  000064                     USART_Init@temp:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x4
   564  000064                     	ds	2
   565  000066                     ?_Estados:
   566                           	callstack 0
   567  000066                     efgtoa@c:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x6
   571  000066                     	ds	1
   572  000067                     ??_efgtoa:
   573                           
   574                           ; 1 bytes @ 0x7
   575  000067                     	ds	1
   576  000068                     _Estados$1937:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x8
   580  000068                     	ds	4
   581  00006C                     _efgtoa$1501:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0xC
   585  00006C                     	ds	2
   586  00006E                     _efgtoa$1502:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xE
   590  00006E                     	ds	2
   591  000070                     _efgtoa$1507:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x10
   595  000070                     	ds	2
   596  000072                     _efgtoa$1511:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x12
   600  000072                     	ds	2
   601  000074                     _efgtoa$1512:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x14
   605  000074                     	ds	2
   606  000076                     _efgtoa$1513:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x16
   610  000076                     	ds	2
   611  000078                     efgtoa@t:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x18
   615  000078                     	ds	2
   616  00007A                     efgtoa@pp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x1A
   620  00007A                     	ds	2
   621  00007C                     efgtoa@ne:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x1C
   625  00007C                     	ds	2
   626  00007E                     efgtoa@m:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x1E
   630  00007E                     	ds	2
   631  000080                     efgtoa@ou:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x20
   635  000080                     	ds	4
   636  000084                     efgtoa@d:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x24
   640  000084                     	ds	2
   641  000086                     efgtoa@sign:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x26
   645  000086                     	ds	2
   646  000088                     efgtoa@p:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x28
   650  000088                     	ds	2
   651  00008A                     efgtoa@w:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x2A
   655  00008A                     	ds	2
   656  00008C                     efgtoa@nmode:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x2C
   660  00008C                     	ds	1
   661  00008D                     efgtoa@mode:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x2D
   665  00008D                     	ds	1
   666  00008E                     efgtoa@h:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x2E
   670  00008E                     	ds	4
   671  000092                     efgtoa@l:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x32
   675  000092                     	ds	4
   676  000096                     efgtoa@i:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x36
   680  000096                     	ds	2
   681  000098                     efgtoa@g:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x38
   685  000098                     	ds	4
   686  00009C                     efgtoa@e:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x3C
   690  00009C                     	ds	2
   691  00009E                     efgtoa@n:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x3E
   695  00009E                     	ds	2
   696  0000A0                     efgtoa@u:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x40
   700  0000A0                     	ds	4
   701  0000A4                     ?_vfpfcnvrt:
   702                           	callstack 0
   703  0000A4                     vfpfcnvrt@fp:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x44
   707  0000A4                     	ds	2
   708  0000A6                     vfpfcnvrt@fmt:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x46
   712  0000A6                     	ds	2
   713  0000A8                     vfpfcnvrt@ap:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x48
   717  0000A8                     	ds	2
   718  0000AA                     ??_vfpfcnvrt:
   719                           
   720                           ; 1 bytes @ 0x4A
   721  0000AA                     	ds	4
   722  0000AE                     vfpfcnvrt@llu:
   723                           	callstack 0
   724                           
   725                           ; 8 bytes @ 0x4E
   726  0000AE                     	ds	8
   727  0000B6                     vfpfcnvrt@done:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x56
   731  0000B6                     	ds	2
   732  0000B8                     _vfpfcnvrt$1538:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x58
   736  0000B8                     	ds	2
   737  0000BA                     _vfpfcnvrt$1542:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x5A
   741  0000BA                     	ds	2
   742  0000BC                     vfpfcnvrt@f:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x5C
   746  0000BC                     	ds	4
   747  0000C0                     vfpfcnvrt@ct:
   748                           	callstack 0
   749                           
   750                           ; 3 bytes @ 0x60
   751  0000C0                     	ds	3
   752  0000C3                     vfpfcnvrt@c:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x63
   756  0000C3                     	ds	1
   757  0000C4                     ?_vfprintf:
   758                           	callstack 0
   759  0000C4                     vfprintf@fp:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x64
   763  0000C4                     	ds	2
   764  0000C6                     vfprintf@fmt:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x66
   768  0000C6                     	ds	2
   769  0000C8                     vfprintf@ap:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x68
   773  0000C8                     	ds	2
   774  0000CA                     vfprintf@cfmt:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x6A
   778  0000CA                     	ds	2
   779  0000CC                     ?_sprintf:
   780                           	callstack 0
   781  0000CC                     sprintf@s:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x6C
   785  0000CC                     	ds	2
   786  0000CE                     sprintf@fmt:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x6E
   790  0000CE                     	ds	6
   791  0000D4                     sprintf@ap:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x74
   795  0000D4                     	ds	2
   796  0000D6                     sprintf@f:
   797                           	callstack 0
   798                           
   799                           ; 6 bytes @ 0x76
   800  0000D6                     	ds	6
   801  0000DC                     ??_RTC_Calendario:
   802                           
   803                           ; 1 bytes @ 0x7C
   804  0000DC                     	ds	2
   805  0000DE                     ??_main:
   806                           
   807                           ; 1 bytes @ 0x7E
   808  0000DE                     	ds	2
   809  0000E0                     main@caso:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x80
   813  0000E0                     	ds	2
   814                           
   815                           	psect	cstackCOMRAM
   816  000001                     __pcstackCOMRAM:
   817                           	callstack 0
   818  000001                     ?_strlen:
   819                           	callstack 0
   820  000001                     ?___fpclassifyf:
   821                           	callstack 0
   822  000001                     ?_isupper:
   823                           	callstack 0
   824  000001                     ?_isalpha:
   825                           	callstack 0
   826  000001                     ?_isdigit:
   827                           	callstack 0
   828  000001                     ?_strncmp:
   829                           	callstack 0
   830  000001                     ?_isspace:
   831                           	callstack 0
   832  000001                     ?_islower:
   833                           	callstack 0
   834  000001                     ?_ReadLUZ:
   835                           	callstack 0
   836  000001                     ?___wmul:
   837                           	callstack 0
   838  000001                     ?___awdiv:
   839                           	callstack 0
   840  000001                     ?___awmod:
   841                           	callstack 0
   842  000001                     ?___flneg:
   843                           	callstack 0
   844  000001                     I2C_Read@flag:
   845                           	callstack 0
   846  000001                     I2C_Write@data:
   847                           	callstack 0
   848  000001                     USART_TransmitChar@out:
   849                           	callstack 0
   850  000001                     LCD_MSdelay@val:
   851                           	callstack 0
   852  000001                     delay_us@nota:
   853                           	callstack 0
   854  000001                     ___wmul@multiplier:
   855                           	callstack 0
   856  000001                     ___awdiv@dividend:
   857                           	callstack 0
   858  000001                     ___awmod@dividend:
   859                           	callstack 0
   860  000001                     isalpha@c:
   861                           	callstack 0
   862  000001                     isdigit@c:
   863                           	callstack 0
   864  000001                     isspace@c:
   865                           	callstack 0
   866  000001                     isupper@c:
   867                           	callstack 0
   868  000001                     fputc@c:
   869                           	callstack 0
   870  000001                     strcpy@dest:
   871                           	callstack 0
   872  000001                     strlen@s:
   873                           	callstack 0
   874  000001                     strncmp@_l:
   875                           	callstack 0
   876  000001                     islower@c:
   877                           	callstack 0
   878  000001                     ___fleq@ff1:
   879                           	callstack 0
   880  000001                     ___flneg@f1:
   881                           	callstack 0
   882  000001                     ___fpclassifyf@x:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x0
   886  000001                     	ds	1
   887  000002                     I2C_Read@buffer:
   888                           	callstack 0
   889  000002                     I2C_Start@slave_write_address:
   890                           	callstack 0
   891  000002                     I2C_Repeated_Start@slave_read_address:
   892                           	callstack 0
   893  000002                     USART_SendString@out:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x1
   897  000002                     	ds	1
   898  000003                     ??_isupper:
   899  000003                     ??_isalpha:
   900  000003                     ??_isdigit:
   901  000003                     ??_isspace:
   902  000003                     ??_islower:
   903  000003                     ??_ReadLUZ:
   904  000003                     ??_delay_us:
   905  000003                     ??_RTC_Read_Clock:
   906  000003                     ??_RTC_Read_Calendar:
   907  000003                     LCD_MSdelay@i:
   908                           	callstack 0
   909  000003                     ___wmul@multiplicand:
   910                           	callstack 0
   911  000003                     ___awdiv@divisor:
   912                           	callstack 0
   913  000003                     ___awmod@divisor:
   914                           	callstack 0
   915  000003                     fputc@fp:
   916                           	callstack 0
   917  000003                     strcpy@src:
   918                           	callstack 0
   919  000003                     strlen@a:
   920                           	callstack 0
   921  000003                     strncmp@_r:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x2
   925  000003                     	ds	1
   926  000004                     RTC_Read_Clock@read_clock_address:
   927                           	callstack 0
   928  000004                     RTC_Read_Calendar@read_calendar_address:
   929                           	callstack 0
   930  000004                     delay_us@i:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x3
   934  000004                     	ds	1
   935  000005                     ??_fputc:
   936  000005                     ??___fpclassifyf:
   937  000005                     ??_strcpy:
   938  000005                     ?___xxtofl:
   939                           	callstack 0
   940  000005                     ___awdiv@counter:
   941                           	callstack 0
   942  000005                     ___awmod@counter:
   943                           	callstack 0
   944  000005                     LCD_MSdelay@j:
   945                           	callstack 0
   946  000005                     ___wmul@product:
   947                           	callstack 0
   948  000005                     strncmp@n:
   949                           	callstack 0
   950  000005                     ___fleq@ff2:
   951                           	callstack 0
   952  000005                     ___xxtofl@val:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x4
   956  000005                     	ds	1
   957  000006                     ___awdiv@sign:
   958                           	callstack 0
   959  000006                     ___awmod@sign:
   960                           	callstack 0
   961  000006                     play@nota:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x5
   965  000006                     	ds	1
   966  000007                     ??_LCD_Command:
   967  000007                     ??_strncmp:
   968  000007                     ??_LCD_Char:
   969  000007                     ?_tolower:
   970                           	callstack 0
   971  000007                     ?_toupper:
   972                           	callstack 0
   973  000007                     _isspace$1617:
   974                           	callstack 0
   975  000007                     ___awdiv@quotient:
   976                           	callstack 0
   977  000007                     strcpy@s:
   978                           	callstack 0
   979  000007                     tolower@c:
   980                           	callstack 0
   981  000007                     toupper@c:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x6
   985  000007                     	ds	1
   986  000008                     ?_atoi:
   987                           	callstack 0
   988  000008                     LCD_Command@cmd:
   989                           	callstack 0
   990  000008                     LCD_Char@dat:
   991                           	callstack 0
   992  000008                     play@octava:
   993                           	callstack 0
   994  000008                     atoi@s:
   995                           	callstack 0
   996  000008                     strncmp@l:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x7
  1000  000008                     	ds	1
  1001  000009                     ??_tolower:
  1002  000009                     ??_toupper:
  1003  000009                     ??___fleq:
  1004  000009                     ??___xxtofl:
  1005  000009                     LCD_String@msg:
  1006                           	callstack 0
  1007  000009                     LCD_Custom_Char@msg:
  1008                           	callstack 0
  1009  000009                     ___fpclassifyf@e:
  1010                           	callstack 0
  1011  000009                     strcpy@d:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x8
  1015  000009                     	ds	1
  1016  00000A                     ??_atoi:
  1017  00000A                     play@duracion:
  1018                           	callstack 0
  1019  00000A                     fputs@s:
  1020                           	callstack 0
  1021  00000A                     strncmp@r:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x9
  1025  00000A                     	ds	1
  1026  00000B                     LCD_String_xy@pos:
  1027                           	callstack 0
  1028  00000B                     LCD_Custom_Char@loc:
  1029                           	callstack 0
  1030  00000B                     ___fpclassifyf@u:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0xA
  1034  00000B                     	ds	1
  1035  00000C                     ??_play:
  1036  00000C                     LCD_Custom_Char@i:
  1037                           	callstack 0
  1038  00000C                     LCD_String_xy@msg:
  1039                           	callstack 0
  1040  00000C                     fputs@fp:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xB
  1044  00000C                     	ds	1
  1045  00000D                     ___xxtofl@sign:
  1046                           	callstack 0
  1047  00000D                     play@mS_Transcurridos:
  1048                           	callstack 0
  1049  00000D                     _tolower$1681:
  1050                           	callstack 0
  1051  00000D                     _toupper$1696:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0xC
  1055  00000D                     	ds	1
  1056  00000E                     LCD_String_xy@row:
  1057                           	callstack 0
  1058  00000E                     ___xxtofl@exp:
  1059                           	callstack 0
  1060  00000E                     fputs@c:
  1061                           	callstack 0
  1062  00000E                     atoi@neg:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0xD
  1066  00000E                     	ds	1
  1067  00000F                     LCD_String_xy@location:
  1068                           	callstack 0
  1069  00000F                     play@CiclosL:
  1070                           	callstack 0
  1071  00000F                     fputs@i:
  1072                           	callstack 0
  1073  00000F                     ___xxtofl@arg:
  1074                           	callstack 0
  1075                           
  1076                           ; 4 bytes @ 0xE
  1077  00000F                     	ds	1
  1078  000010                     _atoi$1577:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0xF
  1082  000010                     	ds	1
  1083  000011                     ?_pad:
  1084                           	callstack 0
  1085  000011                     play@fn:
  1086                           	callstack 0
  1087  000011                     pad@fp:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x10
  1091  000011                     	ds	1
  1092  000012                     _atoi$1579:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x11
  1096  000012                     	ds	1
  1097  000013                     ??_PlayCancion:
  1098  000013                     ?___flmul:
  1099                           	callstack 0
  1100  000013                     pad@buf:
  1101                           	callstack 0
  1102  000013                     ___flmul@b:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x12
  1106  000013                     	ds	1
  1107  000014                     _atoi$1578:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x13
  1111  000014                     	ds	1
  1112  000015                     pad@p:
  1113                           	callstack 0
  1114  000015                     atoi@n:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x14
  1118  000015                     	ds	2
  1119  000017                     ??_pad:
  1120  000017                     ___flmul@a:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x16
  1124  000017                     	ds	1
  1125  000018                     pad@i:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x17
  1129  000018                     	ds	2
  1130  00001A                     pad@w:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x19
  1134  00001A                     	ds	1
  1135  00001B                     ??___flmul:
  1136                           
  1137                           ; 1 bytes @ 0x1A
  1138  00001B                     	ds	1
  1139  00001C                     ?_xtoa:
  1140                           	callstack 0
  1141  00001C                     xtoa@fp:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x1B
  1145  00001C                     	ds	2
  1146  00001E                     xtoa@d:
  1147                           	callstack 0
  1148                           
  1149                           ; 8 bytes @ 0x1D
  1150  00001E                     	ds	1
  1151  00001F                     ___flmul@sign:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x1E
  1155  00001F                     	ds	1
  1156  000020                     ___flmul@grs:
  1157                           	callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x1F
  1160  000020                     	ds	4
  1161  000024                     ___flmul@aexp:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x23
  1165  000024                     	ds	1
  1166  000025                     ___flmul@bexp:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x24
  1170  000025                     	ds	1
  1171  000026                     xtoa@x:
  1172                           	callstack 0
  1173  000026                     ___flmul@prod:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x25
  1177  000026                     	ds	1
  1178  000027                     ??_xtoa:
  1179                           
  1180                           ; 1 bytes @ 0x26
  1181  000027                     	ds	3
  1182  00002A                     ___flmul@temp:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x29
  1186  00002A                     	ds	2
  1187  00002C                     ?___fldiv:
  1188                           	callstack 0
  1189  00002C                     ___flge@ff1:
  1190                           	callstack 0
  1191  00002C                     ___fldiv@b:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x2B
  1195  00002C                     	ds	3
  1196  00002F                     _xtoa$1523:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x2E
  1200  00002F                     	ds	1
  1201  000030                     ___flge@ff2:
  1202                           	callstack 0
  1203  000030                     ___fldiv@a:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x2F
  1207  000030                     	ds	1
  1208  000031                     _xtoa$1524:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x30
  1212  000031                     	ds	2
  1213  000033                     xtoa@p:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x32
  1217  000033                     	ds	1
  1218  000034                     ??___fldiv:
  1219  000034                     ??___flge:
  1220                           
  1221                           ; 1 bytes @ 0x33
  1222  000034                     	ds	1
  1223  000035                     xtoa@w:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x34
  1227  000035                     	ds	2
  1228  000037                     xtoa@n:
  1229                           	callstack 0
  1230                           
  1231                           ; 8 bytes @ 0x36
  1232  000037                     	ds	1
  1233  000038                     ___fldiv@rem:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x37
  1237  000038                     	ds	4
  1238  00003C                     ___fldiv@sign:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x3B
  1242  00003C                     	ds	1
  1243  00003D                     ___fldiv@new_exp:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x3C
  1247  00003D                     	ds	2
  1248  00003F                     xtoa@i:
  1249                           	callstack 0
  1250  00003F                     ___fldiv@grs:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x3E
  1254  00003F                     	ds	2
  1255  000041                     xtoa@c:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x40
  1259  000041                     	ds	2
  1260  000043                     ___fldiv@bexp:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x42
  1264  000043                     	ds	1
  1265  000044                     ___fldiv@aexp:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x43
  1269  000044                     	ds	1
  1270  000045                     ?___fladd:
  1271                           	callstack 0
  1272  000045                     ?_floorf:
  1273                           	callstack 0
  1274  000045                     ___fladd@b:
  1275                           	callstack 0
  1276  000045                     floorf@x:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x44
  1280  000045                     	ds	4
  1281  000049                     ??_floorf:
  1282  000049                     ___fladd@a:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x48
  1286  000049                     	ds	4
  1287  00004D                     ??___fladd:
  1288                           
  1289                           ; 1 bytes @ 0x4C
  1290  00004D                     	ds	2
  1291  00004F                     floorf@m:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x4E
  1295  00004F                     	ds	2
  1296  000051                     ___fladd@signs:
  1297                           	callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x50
  1300  000051                     	ds	1
  1301  000052                     ___fladd@aexp:
  1302                           	callstack 0
  1303                           
  1304                           ; 1 bytes @ 0x51
  1305  000052                     	ds	1
  1306  000053                     ___fladd@bexp:
  1307                           	callstack 0
  1308  000053                     floorf@e:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x52
  1312  000053                     	ds	1
  1313  000054                     ___fladd@grs:
  1314                           	callstack 0
  1315                           
  1316                           ; 1 bytes @ 0x53
  1317  000054                     	ds	1
  1318  000055                     ?___flsub:
  1319                           	callstack 0
  1320  000055                     ?___fltol:
  1321                           	callstack 0
  1322  000055                     ___fltol@f1:
  1323                           	callstack 0
  1324  000055                     ___flsub@b:
  1325                           	callstack 0
  1326  000055                     floorf@u:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x54
  1330  000055                     	ds	4
  1331  000059                     ??___fltol:
  1332  000059                     ___flsub@a:
  1333                           	callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x58
  1336  000059                     	ds	4
  1337  00005D                     ___fltol@sign1:
  1338                           	callstack 0
  1339                           
  1340                           ; 1 bytes @ 0x5C
  1341  00005D                     	ds	1
  1342  00005E                     ___fltol@exp1:
  1343                           	callstack 0
  1344                           
  1345                           ; 1 bytes @ 0x5D
  1346  00005E                     	ds	1
  1347  00005F                     
  1348                           ; 1 bytes @ 0x5E
  1349 ;;
  1350 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1351 ;;
  1352 ;; *************** function _main *****************
  1353 ;; Defined at:
  1354 ;;		line 26 in file "smart_main.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  caso            2  128[BANK0 ] int 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1368 ;;      Params:         0       0       0       0       0       0       0       0       0
  1369 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1370 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1371 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1372 ;;Total ram usage:        4 bytes
  1373 ;; Hardware stack levels required when called: 9
  1374 ;; This function calls:
  1375 ;;		_Alarm_Status
  1376 ;;		_Cloudy_State
  1377 ;;		_Estados
  1378 ;;		_I2C_Init
  1379 ;;		_LCD_Clear
  1380 ;;		_LCD_Init
  1381 ;;		_LCD_MSdelay
  1382 ;;		_RTC_Calendario
  1383 ;;		_Rainy_State
  1384 ;;		_Sunny_State
  1385 ;;		_USART_Init
  1386 ;; This function is called by:
  1387 ;;		Startup code after reset
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text0
  1392  003E2A                     __ptext0:
  1393                           	callstack 0
  1394  003E2A                     _main:
  1395                           	callstack 22
  1396  003E2A                     
  1397                           ;smart_main.c: 27:     OSCCON = 0x72;
  1398  003E2A  0E72               	movlw	114
  1399  003E2C  6ED3               	movwf	211,c	;volatile
  1400                           
  1401                           ;smart_main.c: 28:     TRISE = 0x00;
  1402  003E2E  0E00               	movlw	0
  1403  003E30  6E96               	movwf	150,c	;volatile
  1404  003E32                     
  1405                           ;smart_main.c: 31:     I2C_Init();
  1406  003E32  EC50  F025         	call	_I2C_Init	;wreg free
  1407  003E36                     
  1408                           ;smart_main.c: 32:     USART_Init(9600);
  1409  003E36  0E80               	movlw	128
  1410  003E38  0100               	movlb	0	; () banked
  1411  003E3A  6F60               	movwf	USART_Init@baud_rate& (0+255),b
  1412  003E3C  0E25               	movlw	37
  1413  003E3E  6F61               	movwf	(USART_Init@baud_rate+1)& (0+255),b
  1414  003E40  0E00               	movlw	0
  1415  003E42  6F62               	movwf	(USART_Init@baud_rate+2)& (0+255),b
  1416  003E44  0E00               	movlw	0
  1417  003E46  6F63               	movwf	(USART_Init@baud_rate+3)& (0+255),b
  1418  003E48  EC1A  F020         	call	_USART_Init	;wreg free
  1419  003E4C                     
  1420                           ;smart_main.c: 33:     LCD_Init();
  1421  003E4C  ECE6  F024         	call	_LCD_Init	;wreg free
  1422  003E50                     l5754:
  1423                           
  1424                           ;smart_main.c: 36:         RTC_Calendario();
  1425  003E50  ECA0  F013         	call	_RTC_Calendario	;wreg free
  1426  003E54                     
  1427                           ;smart_main.c: 37:         int caso = Estados();
  1428  003E54  EC85  F016         	call	_Estados	;wreg free
  1429  003E58  C066  F0E0         	movff	?_Estados,main@caso
  1430  003E5C  C067  F0E1         	movff	?_Estados+1,main@caso+1
  1431                           
  1432                           ;smart_main.c: 38:         switch (caso) {
  1433  003E60  EF42  F01F         	goto	l5768
  1434  003E64                     l5758:
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;smart_main.c: 40:                 Sunny_State();
  1438  003E64  EC85  F021         	call	_Sunny_State	;wreg free
  1439                           
  1440                           ;smart_main.c: 41:                 break;
  1441  003E68  EF61  F01F         	goto	l5770
  1442  003E6C                     l5760:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;smart_main.c: 44:                 Cloudy_State();
  1446  003E6C  EC0C  F022         	call	_Cloudy_State	;wreg free
  1447                           
  1448                           ;smart_main.c: 45:                 break;
  1449  003E70  EF61  F01F         	goto	l5770
  1450  003E74                     l5762:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;smart_main.c: 48:                 Rainy_State();
  1454  003E74  ECB2  F021         	call	_Rainy_State	;wreg free
  1455                           
  1456                           ;smart_main.c: 49:                 break;
  1457  003E78  EF61  F01F         	goto	l5770
  1458  003E7C                     l5764:
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;smart_main.c: 52:                 Alarm_Status();
  1462  003E7C  EC99  F025         	call	_Alarm_Status	;wreg free
  1463                           
  1464                           ;smart_main.c: 53:                 break;
  1465  003E80  EF61  F01F         	goto	l5770
  1466  003E84                     l5768:
  1467  003E84  C0E0  F0DE         	movff	main@caso,??_main
  1468  003E88  C0E1  F0DF         	movff	main@caso+1,??_main+1
  1469                           
  1470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1471                           ; Switch size 1, requested type "simple"
  1472                           ; Number of cases is 1, Range of values is 0 to 0
  1473                           ; switch strategies available:
  1474                           ; Name         Instructions Cycles
  1475                           ; simple_byte            4     3 (average)
  1476                           ;	Chosen strategy is simple_byte
  1477  003E8C  0100               	movlb	0	; () banked
  1478  003E8E  51DF               	movf	(??_main+1)& (0+255),w,b
  1479  003E90  0A00               	xorlw	0	; case 0
  1480  003E92  B4D8               	btfsc	status,2,c
  1481  003E94  EF4E  F01F         	goto	l5874
  1482  003E98  EF61  F01F         	goto	l5770
  1483  003E9C                     l5874:
  1484                           
  1485                           ; BSR set to: 0
  1486                           ; Switch size 1, requested type "simple"
  1487                           ; Number of cases is 4, Range of values is 1 to 4
  1488                           ; switch strategies available:
  1489                           ; Name         Instructions Cycles
  1490                           ; simple_byte           13     7 (average)
  1491                           ;	Chosen strategy is simple_byte
  1492  003E9C  51DE               	movf	??_main& (0+255),w,b
  1493  003E9E  0A01               	xorlw	1	; case 1
  1494  003EA0  B4D8               	btfsc	status,2,c
  1495  003EA2  EF32  F01F         	goto	l5758
  1496  003EA6  0A03               	xorlw	3	; case 2
  1497  003EA8  B4D8               	btfsc	status,2,c
  1498  003EAA  EF36  F01F         	goto	l5760
  1499  003EAE  0A01               	xorlw	1	; case 3
  1500  003EB0  B4D8               	btfsc	status,2,c
  1501  003EB2  EF3A  F01F         	goto	l5762
  1502  003EB6  0A07               	xorlw	7	; case 4
  1503  003EB8  B4D8               	btfsc	status,2,c
  1504  003EBA  EF3E  F01F         	goto	l5764
  1505  003EBE  EF61  F01F         	goto	l5770
  1506  003EC2                     l5770:
  1507                           
  1508                           ;smart_main.c: 59:         LCD_MSdelay(3000);
  1509  003EC2  0E0B               	movlw	11
  1510  003EC4  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1511  003EC6  0EB8               	movlw	184
  1512  003EC8  6E01               	movwf	LCD_MSdelay@val^0,c
  1513  003ECA  ECFF  F022         	call	_LCD_MSdelay	;wreg free
  1514                           
  1515                           ;smart_main.c: 60:         LCD_Clear();
  1516  003ECE  EC86  F025         	call	_LCD_Clear	;wreg free
  1517  003ED2  EF28  F01F         	goto	l5754
  1518  003ED6  EF00  F000         	goto	start
  1519  003EDA                     __end_of_main:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _USART_Init *****************
  1523 ;; Defined at:
  1524 ;;		line 37 in file "Bluetooth.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  baud_rate       4    0[BANK0 ] long 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  temp            4    4[BANK0 ] float 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         0       4       0       0       0       0       0       0       0
  1539 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        8 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 1
  1545 ;; This function calls:
  1546 ;;		___fladd
  1547 ;;		___fldiv
  1548 ;;		___fltol
  1549 ;;		___xxtofl
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text1
  1556  004034                     __ptext1:
  1557                           	callstack 0
  1558  004034                     _USART_Init:
  1559                           	callstack 29
  1560  004034                     
  1561                           ;Bluetooth.c: 38:     float temp;;Bluetooth.c: 39:     TRISC6 = 0;
  1562  004034  9C94               	bcf	3988,6,c	;volatile
  1563                           
  1564                           ;Bluetooth.c: 40:     TRISC7 = 1;
  1565  004036  8E94               	bsf	3988,7,c	;volatile
  1566  004038                     
  1567                           ;Bluetooth.c: 41:     temp = (((float)(8000000/64)/(float)baud_rate)-1);
  1568  004038  C060  F005         	movff	USART_Init@baud_rate,___xxtofl@val
  1569  00403C  C061  F006         	movff	USART_Init@baud_rate+1,___xxtofl@val+1
  1570  004040  C062  F007         	movff	USART_Init@baud_rate+2,___xxtofl@val+2
  1571  004044  C063  F008         	movff	USART_Init@baud_rate+3,___xxtofl@val+3
  1572  004048  0E01               	movlw	1
  1573  00404A  ECCD  F018         	call	___xxtofl
  1574  00404E  C005  F030         	movff	?___xxtofl,___fldiv@a
  1575  004052  C006  F031         	movff	?___xxtofl+1,___fldiv@a+1
  1576  004056  C007  F032         	movff	?___xxtofl+2,___fldiv@a+2
  1577  00405A  C008  F033         	movff	?___xxtofl+3,___fldiv@a+3
  1578  00405E  0E00               	movlw	0
  1579  004060  6E2C               	movwf	___fldiv@b^0,c
  1580  004062  0E24               	movlw	36
  1581  004064  6E2D               	movwf	(___fldiv@b+1)^0,c
  1582  004066  0EF4               	movlw	244
  1583  004068  6E2E               	movwf	(___fldiv@b+2)^0,c
  1584  00406A  0E47               	movlw	71
  1585  00406C  6E2F               	movwf	(___fldiv@b+3)^0,c
  1586  00406E  ECD3  F011         	call	___fldiv	;wreg free
  1587  004072  C02C  F045         	movff	?___fldiv,___fladd@b
  1588  004076  C02D  F046         	movff	?___fldiv+1,___fladd@b+1
  1589  00407A  C02E  F047         	movff	?___fldiv+2,___fladd@b+2
  1590  00407E  C02F  F048         	movff	?___fldiv+3,___fladd@b+3
  1591  004082  0E00               	movlw	0
  1592  004084  6E49               	movwf	___fladd@a^0,c
  1593  004086  0E00               	movlw	0
  1594  004088  6E4A               	movwf	(___fladd@a+1)^0,c
  1595  00408A  0E80               	movlw	128
  1596  00408C  6E4B               	movwf	(___fladd@a+2)^0,c
  1597  00408E  0EBF               	movlw	191
  1598  004090  6E4C               	movwf	(___fladd@a+3)^0,c
  1599  004092  EC5E  F00D         	call	___fladd	;wreg free
  1600  004096  C045  F064         	movff	?___fladd,USART_Init@temp
  1601  00409A  C046  F065         	movff	?___fladd+1,USART_Init@temp+1
  1602  00409E  C047  F066         	movff	?___fladd+2,USART_Init@temp+2
  1603  0040A2  C048  F067         	movff	?___fladd+3,USART_Init@temp+3
  1604                           
  1605                           ;Bluetooth.c: 42:     SPBRG = (int) temp;
  1606  0040A6  C064  F055         	movff	USART_Init@temp,___fltol@f1
  1607  0040AA  C065  F056         	movff	USART_Init@temp+1,___fltol@f1+1
  1608  0040AE  C066  F057         	movff	USART_Init@temp+2,___fltol@f1+2
  1609  0040B2  C067  F058         	movff	USART_Init@temp+3,___fltol@f1+3
  1610  0040B6  EC1B  F01B         	call	___fltol	;wreg free
  1611  0040BA  5055               	movf	?___fltol^0,w,c
  1612  0040BC  6EAF               	movwf	175,c	;volatile
  1613  0040BE                     
  1614                           ;Bluetooth.c: 43:     TXSTA = 0x20;
  1615  0040BE  0E20               	movlw	32
  1616  0040C0  6EAC               	movwf	172,c	;volatile
  1617  0040C2                     
  1618                           ;Bluetooth.c: 44:     RCSTA = 0x90;
  1619  0040C2  0E90               	movlw	144
  1620  0040C4  6EAB               	movwf	171,c	;volatile
  1621  0040C6  0012               	return		;funcret
  1622  0040C8                     __end_of_USART_Init:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _Sunny_State *****************
  1626 ;; Defined at:
  1627 ;;		line 56 in file "Estados.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 8
  1648 ;; This function calls:
  1649 ;;		_LCD_Char
  1650 ;;		_LCD_Command
  1651 ;;		_LCD_Custom_Char
  1652 ;;		_LCD_String_xy
  1653 ;;		_sprintf
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text2
  1660  00430A                     __ptext2:
  1661                           	callstack 0
  1662  00430A                     _Sunny_State:
  1663                           	callstack 22
  1664  00430A                     
  1665                           ;Estados.c: 57:     LATE0 = 0;
  1666  00430A  908D               	bcf	3981,0,c	;volatile
  1667                           
  1668                           ;Estados.c: 58:     LATE1 = 0;
  1669  00430C  928D               	bcf	3981,1,c	;volatile
  1670                           
  1671                           ;Estados.c: 59:     LATE2 = 0;
  1672  00430E  948D               	bcf	3981,2,c	;volatile
  1673  004310                     
  1674                           ;Estados.c: 60:     sprintf(Stemp, "%0.0fC", tempar);
  1675  004310  0E5E               	movlw	low _Stemp
  1676  004312  0100               	movlb	0	; () banked
  1677  004314  6FCC               	movwf	sprintf@s& (0+255),b
  1678  004316  0E01               	movlw	high _Stemp
  1679  004318  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1680  00431A  0E0D               	movlw	low STR_19
  1681  00431C  6FCE               	movwf	sprintf@fmt& (0+255),b
  1682  00431E  0E08               	movlw	high STR_19
  1683  004320  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1684  004322  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  1685  004326  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  1686  00432A  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  1687  00432E  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  1688  004332  EC39  F022         	call	_sprintf	;wreg free
  1689  004336                     
  1690                           ;Estados.c: 61:     LCD_String_xy(1, 0, Stemp);
  1691  004336  0E00               	movlw	0
  1692  004338  6E0B               	movwf	LCD_String_xy@pos^0,c
  1693  00433A  0E5E               	movlw	low _Stemp
  1694  00433C  6E0C               	movwf	LCD_String_xy@msg^0,c
  1695  00433E  0E01               	movlw	high _Stemp
  1696  004340  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1697  004342  0E01               	movlw	1
  1698  004344  ECB0  F023         	call	_LCD_String_xy
  1699  004348                     
  1700                           ;Estados.c: 62:     LCD_Custom_Char(0, character2);
  1701  004348  0EDD               	movlw	low _character2
  1702  00434A  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1703  00434C  0E01               	movlw	high _character2
  1704  00434E  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1705  004350  0E00               	movlw	0
  1706  004352  EC24  F023         	call	_LCD_Custom_Char
  1707                           
  1708                           ;Estados.c: 63:     LCD_Command(0xc0);
  1709  004356  0EC0               	movlw	192
  1710  004358  ECB3  F022         	call	_LCD_Command
  1711                           
  1712                           ;Estados.c: 64:     LCD_Char(0);
  1713  00435C  0E00               	movlw	0
  1714  00435E  ECD9  F022         	call	_LCD_Char
  1715  004362  0012               	return		;funcret
  1716  004364                     __end_of_Sunny_State:
  1717                           	callstack 0
  1718                           
  1719 ;; *************** function _Rainy_State *****************
  1720 ;; Defined at:
  1721 ;;		line 107 in file "Estados.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;		None
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1735 ;;      Params:         0       0       0       0       0       0       0       0       0
  1736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1739 ;;Total ram usage:        0 bytes
  1740 ;; Hardware stack levels used: 1
  1741 ;; Hardware stack levels required when called: 8
  1742 ;; This function calls:
  1743 ;;		_LCD_Char
  1744 ;;		_LCD_Command
  1745 ;;		_LCD_Custom_Char
  1746 ;;		_LCD_String_xy
  1747 ;;		_sprintf
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text3
  1754  004364                     __ptext3:
  1755                           	callstack 0
  1756  004364                     _Rainy_State:
  1757                           	callstack 22
  1758  004364                     
  1759                           ;Estados.c: 108:     LATE0 = 1;
  1760  004364  808D               	bsf	3981,0,c	;volatile
  1761                           
  1762                           ;Estados.c: 109:     LATE1 = 1;
  1763  004366  828D               	bsf	3981,1,c	;volatile
  1764                           
  1765                           ;Estados.c: 110:     LATE2 = 1;
  1766  004368  848D               	bsf	3981,2,c	;volatile
  1767  00436A                     
  1768                           ;Estados.c: 111:     sprintf(Stemp, "%0.0fC", tempar);
  1769  00436A  0E5E               	movlw	low _Stemp
  1770  00436C  0100               	movlb	0	; () banked
  1771  00436E  6FCC               	movwf	sprintf@s& (0+255),b
  1772  004370  0E01               	movlw	high _Stemp
  1773  004372  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1774  004374  0E0D               	movlw	low STR_19
  1775  004376  6FCE               	movwf	sprintf@fmt& (0+255),b
  1776  004378  0E08               	movlw	high STR_19
  1777  00437A  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1778  00437C  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  1779  004380  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  1780  004384  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  1781  004388  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  1782  00438C  EC39  F022         	call	_sprintf	;wreg free
  1783  004390                     
  1784                           ;Estados.c: 112:     LCD_String_xy(1, 0, Stemp);
  1785  004390  0E00               	movlw	0
  1786  004392  6E0B               	movwf	LCD_String_xy@pos^0,c
  1787  004394  0E5E               	movlw	low _Stemp
  1788  004396  6E0C               	movwf	LCD_String_xy@msg^0,c
  1789  004398  0E01               	movlw	high _Stemp
  1790  00439A  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1791  00439C  0E01               	movlw	1
  1792  00439E  ECB0  F023         	call	_LCD_String_xy
  1793  0043A2                     
  1794                           ;Estados.c: 113:     LCD_Custom_Char(0, character1);
  1795  0043A2  0EE5               	movlw	low _character1
  1796  0043A4  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1797  0043A6  0E01               	movlw	high _character1
  1798  0043A8  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1799  0043AA  0E00               	movlw	0
  1800  0043AC  EC24  F023         	call	_LCD_Custom_Char
  1801                           
  1802                           ;Estados.c: 114:     LCD_Command(0xc0);
  1803  0043B0  0EC0               	movlw	192
  1804  0043B2  ECB3  F022         	call	_LCD_Command
  1805                           
  1806                           ;Estados.c: 115:     LCD_Char(0);
  1807  0043B6  0E00               	movlw	0
  1808  0043B8  ECD9  F022         	call	_LCD_Char
  1809  0043BC  0012               	return		;funcret
  1810  0043BE                     __end_of_Rainy_State:
  1811                           	callstack 0
  1812                           
  1813 ;; *************** function _RTC_Calendario *****************
  1814 ;; Defined at:
  1815 ;;		line 79 in file "reloj.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  hours          10   57[BANK1 ] unsigned char [10]
  1820 ;;  mins           10   47[BANK1 ] unsigned char [10]
  1821 ;;  secs           10   37[BANK1 ] unsigned char [10]
  1822 ;;  year           10   27[BANK1 ] unsigned char [10]
  1823 ;;  month          10   17[BANK1 ] unsigned char [10]
  1824 ;;  date           10    7[BANK1 ] unsigned char [10]
  1825 ;;  days            7    0[BANK1 ] unsigned char [7]
  1826 ;;  AM_PM           1   67[BANK1 ] unsigned char 
  1827 ;;  Clock_type      1    0        unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0
  1838 ;;      Locals:         0       0      68       0       0       0       0       0       0
  1839 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1840 ;;      Totals:         0       2      68       0       0       0       0       0       0
  1841 ;;Total ram usage:       70 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 8
  1844 ;; This function calls:
  1845 ;;		_I2C_Init
  1846 ;;		_I2C_Stop
  1847 ;;		_LCD_Clear
  1848 ;;		_LCD_Init
  1849 ;;		_LCD_MSdelay
  1850 ;;		_LCD_String
  1851 ;;		_LCD_String_xy
  1852 ;;		_RTC_Read_Calendar
  1853 ;;		_RTC_Read_Clock
  1854 ;;		_sprintf
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text4
  1861  002740                     __ptext4:
  1862                           	callstack 0
  1863  002740                     _RTC_Calendario:
  1864                           	callstack 22
  1865  002740                     
  1866                           ;reloj.c: 85:     char AM_PM = 0x05;
  1867  002740  0E05               	movlw	5
  1868  002742  0101               	movlb	1	; () banked
  1869  002744  6FB5               	movwf	RTC_Calendario@AM_PM& (0+255),b
  1870  002746                     
  1871                           ; BSR set to: 1
  1872                           ;reloj.c: 86:     char days[7] = {'S','M','T','W','t','F','s'};
  1873  002746  EE21  F0CE         	lfsr	2,RTC_Calendario@F3580
  1874  00274A  EE11  F072         	lfsr	1,RTC_Calendario@days
  1875  00274E  0E06               	movlw	6
  1876  002750                     u6041:
  1877  002750  CFDB FFE3          	movff	plusw2,plusw1
  1878  002754  06E8               	decf	wreg,f,c
  1879  002756  E2FC               	bc	u6041
  1880  002758                     
  1881                           ; BSR set to: 1
  1882                           ;reloj.c: 87:     OSCCON=0x72;
  1883  002758  0E72               	movlw	114
  1884  00275A  6ED3               	movwf	211,c	;volatile
  1885  00275C                     
  1886                           ; BSR set to: 1
  1887                           ;reloj.c: 89:     I2C_Init();
  1888  00275C  EC50  F025         	call	_I2C_Init	;wreg free
  1889  002760                     
  1890                           ;reloj.c: 90:     LCD_Init();
  1891  002760  ECE6  F024         	call	_LCD_Init	;wreg free
  1892  002764                     
  1893                           ;reloj.c: 91:     LCD_Clear();
  1894  002764  EC86  F025         	call	_LCD_Clear	;wreg free
  1895  002768                     
  1896                           ;reloj.c: 92:     LCD_MSdelay(10);
  1897  002768  0E00               	movlw	0
  1898  00276A  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1899  00276C  0E0A               	movlw	10
  1900  00276E  6E01               	movwf	LCD_MSdelay@val^0,c
  1901  002770  ECFF  F022         	call	_LCD_MSdelay	;wreg free
  1902  002774                     
  1903                           ;reloj.c: 94:     {;reloj.c: 95:         RTC_Read_Clock(0);
  1904  002774  0E00               	movlw	0
  1905  002776  EC48  F023         	call	_RTC_Read_Clock
  1906  00277A                     
  1907                           ;reloj.c: 96:         if(hour & (1<<Clock_type)){
  1908  00277A  0101               	movlb	1	; () banked
  1909  00277C  AD08               	btfss	_hour& (0+255),6,b
  1910  00277E  EFC3  F013         	goto	u6051
  1911  002782  EFC5  F013         	goto	u6050
  1912  002786                     u6051:
  1913  002786  EF29  F014         	goto	l5584
  1914  00278A                     u6050:
  1915  00278A                     
  1916                           ; BSR set to: 1
  1917                           ;reloj.c: 98:             if(hour & (1<<AM_PM)){
  1918  00278A  AB08               	btfss	_hour& (0+255),5,b
  1919  00278C  EFCA  F013         	goto	u6061
  1920  002790  EFCC  F013         	goto	u6060
  1921  002794                     u6061:
  1922  002794  EFD7  F013         	goto	l5568
  1923  002798                     u6060:
  1924  002798                     
  1925                           ; BSR set to: 1
  1926                           ;reloj.c: 99:                 LCD_String_xy(1,14,"PM");
  1927  002798  0E0E               	movlw	14
  1928  00279A  6E0B               	movwf	LCD_String_xy@pos^0,c
  1929  00279C  0E52               	movlw	low STR_1
  1930  00279E  6E0C               	movwf	LCD_String_xy@msg^0,c
  1931  0027A0  0E08               	movlw	high STR_1
  1932  0027A2  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1933  0027A4  0E01               	movlw	1
  1934  0027A6  ECB0  F023         	call	_LCD_String_xy
  1935                           
  1936                           ;reloj.c: 100:             }
  1937  0027AA  EFE0  F013         	goto	l5570
  1938  0027AE                     l5568:
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;reloj.c: 102:                 LCD_String_xy(1,14,"AM");
  1942  0027AE  0E0E               	movlw	14
  1943  0027B0  6E0B               	movwf	LCD_String_xy@pos^0,c
  1944  0027B2  0E4F               	movlw	low STR_2
  1945  0027B4  6E0C               	movwf	LCD_String_xy@msg^0,c
  1946  0027B6  0E08               	movlw	high STR_2
  1947  0027B8  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1948  0027BA  0E01               	movlw	1
  1949  0027BC  ECB0  F023         	call	_LCD_String_xy
  1950  0027C0                     l5570:
  1951                           
  1952                           ;reloj.c: 105:             hour = hour & (0x1f);
  1953  0027C0  0E1F               	movlw	31
  1954  0027C2  0101               	movlb	1	; () banked
  1955  0027C4  1508               	andwf	_hour& (0+255),w,b
  1956  0027C6  6F08               	movwf	_hour& (0+255),b
  1957  0027C8  6B09               	clrf	(_hour+1)& (0+255),b
  1958  0027CA                     
  1959                           ; BSR set to: 1
  1960                           ;reloj.c: 106:             sprintf(secs,"%x ",sec);
  1961  0027CA  0E97               	movlw	low RTC_Calendario@secs
  1962  0027CC  0100               	movlb	0	; () banked
  1963  0027CE  6FCC               	movwf	sprintf@s& (0+255),b
  1964  0027D0  0E01               	movlw	high RTC_Calendario@secs
  1965  0027D2  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1966  0027D4  0E24               	movlw	low STR_3
  1967  0027D6  6FCE               	movwf	sprintf@fmt& (0+255),b
  1968  0027D8  0E08               	movlw	high STR_3
  1969  0027DA  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1970  0027DC  C10C  F0D0         	movff	_sec,?_sprintf+4
  1971  0027E0  C10D  F0D1         	movff	_sec+1,?_sprintf+5
  1972  0027E4  EC39  F022         	call	_sprintf	;wreg free
  1973  0027E8                     
  1974                           ;reloj.c: 107:             sprintf(mins,"%x:",min);
  1975  0027E8  0EA1               	movlw	low RTC_Calendario@mins
  1976  0027EA  0100               	movlb	0	; () banked
  1977  0027EC  6FCC               	movwf	sprintf@s& (0+255),b
  1978  0027EE  0E01               	movlw	high RTC_Calendario@mins
  1979  0027F0  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1980  0027F2  0E2C               	movlw	low STR_4
  1981  0027F4  6FCE               	movwf	sprintf@fmt& (0+255),b
  1982  0027F6  0E08               	movlw	high STR_4
  1983  0027F8  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1984  0027FA  C10A  F0D0         	movff	_min,?_sprintf+4
  1985  0027FE  C10B  F0D1         	movff	_min+1,?_sprintf+5
  1986  002802  EC39  F022         	call	_sprintf	;wreg free
  1987  002806                     
  1988                           ;reloj.c: 108:             sprintf(hours,"%x:",hour);
  1989  002806  0EAB               	movlw	low RTC_Calendario@hours
  1990  002808  0100               	movlb	0	; () banked
  1991  00280A  6FCC               	movwf	sprintf@s& (0+255),b
  1992  00280C  0E01               	movlw	high RTC_Calendario@hours
  1993  00280E  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1994  002810  0E2C               	movlw	low STR_4
  1995  002812  6FCE               	movwf	sprintf@fmt& (0+255),b
  1996  002814  0E08               	movlw	high STR_4
  1997  002816  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1998  002818  C108  F0D0         	movff	_hour,?_sprintf+4
  1999  00281C  C109  F0D1         	movff	_hour+1,?_sprintf+5
  2000  002820  EC39  F022         	call	_sprintf	;wreg free
  2001  002824                     
  2002                           ;reloj.c: 109:             LCD_String_xy(0,4,hours);
  2003  002824  0E04               	movlw	4
  2004  002826  6E0B               	movwf	LCD_String_xy@pos^0,c
  2005  002828  0EAB               	movlw	low RTC_Calendario@hours
  2006  00282A  6E0C               	movwf	LCD_String_xy@msg^0,c
  2007  00282C  0E01               	movlw	high RTC_Calendario@hours
  2008  00282E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2009  002830  0E00               	movlw	0
  2010  002832  ECB0  F023         	call	_LCD_String_xy
  2011  002836                     l5580:
  2012                           
  2013                           ;reloj.c: 110:             LCD_String(mins);
  2014  002836  0EA1               	movlw	low RTC_Calendario@mins
  2015  002838  6E09               	movwf	LCD_String@msg^0,c
  2016  00283A  0E01               	movlw	high RTC_Calendario@mins
  2017  00283C  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2018  00283E  EC28  F021         	call	_LCD_String	;wreg free
  2019  002842                     
  2020                           ;reloj.c: 111:             LCD_String(secs);
  2021  002842  0E97               	movlw	low RTC_Calendario@secs
  2022  002844  6E09               	movwf	LCD_String@msg^0,c
  2023  002846  0E01               	movlw	high RTC_Calendario@secs
  2024  002848  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2025  00284A  EC28  F021         	call	_LCD_String	;wreg free
  2026                           
  2027                           ;reloj.c: 112:         }
  2028  00284E  EF65  F014         	goto	l5598
  2029  002852                     l5584:
  2030                           
  2031                           ; BSR set to: 1
  2032                           ;reloj.c: 115:             hour = hour & (0x3f);
  2033  002852  0E3F               	movlw	63
  2034  002854  1508               	andwf	_hour& (0+255),w,b
  2035  002856  6F08               	movwf	_hour& (0+255),b
  2036  002858  6B09               	clrf	(_hour+1)& (0+255),b
  2037  00285A                     
  2038                           ; BSR set to: 1
  2039                           ;reloj.c: 116:             sprintf(secs,"%x ",sec);
  2040  00285A  0E97               	movlw	low RTC_Calendario@secs
  2041  00285C  0100               	movlb	0	; () banked
  2042  00285E  6FCC               	movwf	sprintf@s& (0+255),b
  2043  002860  0E01               	movlw	high RTC_Calendario@secs
  2044  002862  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2045  002864  0E24               	movlw	low STR_3
  2046  002866  6FCE               	movwf	sprintf@fmt& (0+255),b
  2047  002868  0E08               	movlw	high STR_3
  2048  00286A  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2049  00286C  C10C  F0D0         	movff	_sec,?_sprintf+4
  2050  002870  C10D  F0D1         	movff	_sec+1,?_sprintf+5
  2051  002874  EC39  F022         	call	_sprintf	;wreg free
  2052  002878                     
  2053                           ;reloj.c: 117:             sprintf(mins,"%x:",min);
  2054  002878  0EA1               	movlw	low RTC_Calendario@mins
  2055  00287A  0100               	movlb	0	; () banked
  2056  00287C  6FCC               	movwf	sprintf@s& (0+255),b
  2057  00287E  0E01               	movlw	high RTC_Calendario@mins
  2058  002880  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2059  002882  0E2C               	movlw	low STR_4
  2060  002884  6FCE               	movwf	sprintf@fmt& (0+255),b
  2061  002886  0E08               	movlw	high STR_4
  2062  002888  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2063  00288A  C10A  F0D0         	movff	_min,?_sprintf+4
  2064  00288E  C10B  F0D1         	movff	_min+1,?_sprintf+5
  2065  002892  EC39  F022         	call	_sprintf	;wreg free
  2066  002896                     
  2067                           ;reloj.c: 118:             sprintf(hours,"%x:",hour);
  2068  002896  0EAB               	movlw	low RTC_Calendario@hours
  2069  002898  0100               	movlb	0	; () banked
  2070  00289A  6FCC               	movwf	sprintf@s& (0+255),b
  2071  00289C  0E01               	movlw	high RTC_Calendario@hours
  2072  00289E  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2073  0028A0  0E2C               	movlw	low STR_4
  2074  0028A2  6FCE               	movwf	sprintf@fmt& (0+255),b
  2075  0028A4  0E08               	movlw	high STR_4
  2076  0028A6  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2077  0028A8  C108  F0D0         	movff	_hour,?_sprintf+4
  2078  0028AC  C109  F0D1         	movff	_hour+1,?_sprintf+5
  2079  0028B0  EC39  F022         	call	_sprintf	;wreg free
  2080  0028B4                     
  2081                           ;reloj.c: 119:             LCD_String_xy(0,4,hours);
  2082  0028B4  0E04               	movlw	4
  2083  0028B6  6E0B               	movwf	LCD_String_xy@pos^0,c
  2084  0028B8  0EAB               	movlw	low RTC_Calendario@hours
  2085  0028BA  6E0C               	movwf	LCD_String_xy@msg^0,c
  2086  0028BC  0E01               	movlw	high RTC_Calendario@hours
  2087  0028BE  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2088  0028C0  0E00               	movlw	0
  2089  0028C2  ECB0  F023         	call	_LCD_String_xy
  2090  0028C6  EF1B  F014         	goto	l5580
  2091  0028CA                     l5598:
  2092                           
  2093                           ;reloj.c: 124:         RTC_Read_Calendar(3);
  2094  0028CA  0E03               	movlw	3
  2095  0028CC  ECDF  F021         	call	_RTC_Read_Calendar
  2096  0028D0                     
  2097                           ;reloj.c: 125:         I2C_Stop();
  2098  0028D0  EC68  F025         	call	_I2C_Stop	;wreg free
  2099  0028D4                     
  2100                           ;reloj.c: 126:         sprintf(date,"%x-",Date);
  2101  0028D4  0E79               	movlw	low RTC_Calendario@date
  2102  0028D6  0100               	movlb	0	; () banked
  2103  0028D8  6FCC               	movwf	sprintf@s& (0+255),b
  2104  0028DA  0E01               	movlw	high RTC_Calendario@date
  2105  0028DC  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2106  0028DE  0E28               	movlw	low STR_9
  2107  0028E0  6FCE               	movwf	sprintf@fmt& (0+255),b
  2108  0028E2  0E08               	movlw	high STR_9
  2109  0028E4  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2110  0028E6  C104  F0D0         	movff	_Date,?_sprintf+4
  2111  0028EA  C105  F0D1         	movff	_Date+1,?_sprintf+5
  2112  0028EE  EC39  F022         	call	_sprintf	;wreg free
  2113  0028F2                     
  2114                           ;reloj.c: 127:         sprintf(month,"%x-",Month);
  2115  0028F2  0E83               	movlw	low RTC_Calendario@month
  2116  0028F4  0100               	movlb	0	; () banked
  2117  0028F6  6FCC               	movwf	sprintf@s& (0+255),b
  2118  0028F8  0E01               	movlw	high RTC_Calendario@month
  2119  0028FA  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2120  0028FC  0E28               	movlw	low STR_9
  2121  0028FE  6FCE               	movwf	sprintf@fmt& (0+255),b
  2122  002900  0E08               	movlw	high STR_9
  2123  002902  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2124  002904  C102  F0D0         	movff	_Month,?_sprintf+4
  2125  002908  C103  F0D1         	movff	_Month+1,?_sprintf+5
  2126  00290C  EC39  F022         	call	_sprintf	;wreg free
  2127  002910                     
  2128                           ;reloj.c: 128:         sprintf(year,"%x ",Year);
  2129  002910  0E8D               	movlw	low RTC_Calendario@year
  2130  002912  0100               	movlb	0	; () banked
  2131  002914  6FCC               	movwf	sprintf@s& (0+255),b
  2132  002916  0E01               	movlw	high RTC_Calendario@year
  2133  002918  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2134  00291A  0E24               	movlw	low STR_3
  2135  00291C  6FCE               	movwf	sprintf@fmt& (0+255),b
  2136  00291E  0E08               	movlw	high STR_3
  2137  002920  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2138  002922  C100  F0D0         	movff	_Year,?_sprintf+4
  2139  002926  C101  F0D1         	movff	_Year+1,?_sprintf+5
  2140  00292A  EC39  F022         	call	_sprintf	;wreg free
  2141  00292E                     
  2142                           ;reloj.c: 129:         LCD_String_xy(2,2,date);
  2143  00292E  0E02               	movlw	2
  2144  002930  6E0B               	movwf	LCD_String_xy@pos^0,c
  2145  002932  0E79               	movlw	low RTC_Calendario@date
  2146  002934  6E0C               	movwf	LCD_String_xy@msg^0,c
  2147  002936  0E01               	movlw	high RTC_Calendario@date
  2148  002938  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2149  00293A  0E02               	movlw	2
  2150  00293C  ECB0  F023         	call	_LCD_String_xy
  2151  002940                     
  2152                           ;reloj.c: 130:         LCD_String(month);
  2153  002940  0E83               	movlw	low RTC_Calendario@month
  2154  002942  6E09               	movwf	LCD_String@msg^0,c
  2155  002944  0E01               	movlw	high RTC_Calendario@month
  2156  002946  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2157  002948  EC28  F021         	call	_LCD_String	;wreg free
  2158  00294C                     
  2159                           ;reloj.c: 131:         LCD_String(year);
  2160  00294C  0E8D               	movlw	low RTC_Calendario@year
  2161  00294E  6E09               	movwf	LCD_String@msg^0,c
  2162  002950  0E01               	movlw	high RTC_Calendario@year
  2163  002952  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2164  002954  EC28  F021         	call	_LCD_String	;wreg free
  2165                           
  2166                           ;reloj.c: 134:         switch(days[Day])
  2167  002958  EFE6  F014         	goto	l5658
  2168  00295C                     l5614:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;reloj.c: 137:                         LCD_String("Sun");
  2172  00295C  0E40               	movlw	low STR_12
  2173  00295E  6E09               	movwf	LCD_String@msg^0,c
  2174  002960  0E08               	movlw	high STR_12
  2175  002962  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2176  002964  EC28  F021         	call	_LCD_String	;wreg free
  2177  002968  EF17  F015         	goto	l345
  2178  00296C                     l5620:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;reloj.c: 141:                         LCD_String("Mon");
  2182  00296C  0E3C               	movlw	low STR_13
  2183  00296E  6E09               	movwf	LCD_String@msg^0,c
  2184  002970  0E08               	movlw	high STR_13
  2185  002972  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2186  002974  EC28  F021         	call	_LCD_String	;wreg free
  2187  002978  EF17  F015         	goto	l345
  2188  00297C                     l5626:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;reloj.c: 145:                         LCD_String("Tue");
  2192  00297C  0E34               	movlw	low STR_14
  2193  00297E  6E09               	movwf	LCD_String@msg^0,c
  2194  002980  0E08               	movlw	high STR_14
  2195  002982  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2196  002984  EC28  F021         	call	_LCD_String	;wreg free
  2197  002988  EF17  F015         	goto	l345
  2198  00298C                     l5632:
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;reloj.c: 149:                         LCD_String("Wed");
  2202  00298C  0E30               	movlw	low STR_15
  2203  00298E  6E09               	movwf	LCD_String@msg^0,c
  2204  002990  0E08               	movlw	high STR_15
  2205  002992  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2206  002994  EC28  F021         	call	_LCD_String	;wreg free
  2207  002998  EF17  F015         	goto	l345
  2208  00299C                     l5638:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;reloj.c: 153:                         LCD_String("Thu");
  2212  00299C  0E48               	movlw	low STR_16
  2213  00299E  6E09               	movwf	LCD_String@msg^0,c
  2214  0029A0  0E08               	movlw	high STR_16
  2215  0029A2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2216  0029A4  EC28  F021         	call	_LCD_String	;wreg free
  2217  0029A8  EF17  F015         	goto	l345
  2218  0029AC                     l5644:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;reloj.c: 157:                         LCD_String("Fri");
  2222  0029AC  0E38               	movlw	low STR_17
  2223  0029AE  6E09               	movwf	LCD_String@msg^0,c
  2224  0029B0  0E08               	movlw	high STR_17
  2225  0029B2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2226  0029B4  EC28  F021         	call	_LCD_String	;wreg free
  2227  0029B8  EF17  F015         	goto	l345
  2228  0029BC                     l5650:
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;reloj.c: 161:                         LCD_String("Sat");
  2232  0029BC  0E44               	movlw	low STR_18
  2233  0029BE  6E09               	movwf	LCD_String@msg^0,c
  2234  0029C0  0E08               	movlw	high STR_18
  2235  0029C2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2236  0029C4  EC28  F021         	call	_LCD_String	;wreg free
  2237  0029C8  EF17  F015         	goto	l345
  2238  0029CC                     l5658:
  2239  0029CC  0E72               	movlw	low RTC_Calendario@days
  2240  0029CE  0101               	movlb	1	; () banked
  2241  0029D0  2506               	addwf	_Day& (0+255),w,b
  2242  0029D2  6ED9               	movwf	fsr2l,c
  2243  0029D4  0E01               	movlw	high RTC_Calendario@days
  2244  0029D6  2107               	addwfc	(_Day+1)& (0+255),w,b
  2245  0029D8  6EDA               	movwf	fsr2h,c
  2246  0029DA  50DF               	movf	indf2,w,c
  2247  0029DC  0100               	movlb	0	; () banked
  2248  0029DE  6FDC               	movwf	??_RTC_Calendario& (0+255),b
  2249  0029E0  6BDD               	clrf	(??_RTC_Calendario+1)& (0+255),b
  2250                           
  2251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2252                           ; Switch size 1, requested type "simple"
  2253                           ; Number of cases is 1, Range of values is 0 to 0
  2254                           ; switch strategies available:
  2255                           ; Name         Instructions Cycles
  2256                           ; simple_byte            4     3 (average)
  2257                           ;	Chosen strategy is simple_byte
  2258  0029E2  51DD               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2259  0029E4  0A00               	xorlw	0	; case 0
  2260  0029E6  B4D8               	btfsc	status,2,c
  2261  0029E8  EFF8  F014         	goto	l5876
  2262  0029EC  EF17  F015         	goto	l345
  2263  0029F0                     l5876:
  2264                           
  2265                           ; BSR set to: 0
  2266                           ; Switch size 1, requested type "simple"
  2267                           ; Number of cases is 7, Range of values is 70 to 116
  2268                           ; switch strategies available:
  2269                           ; Name         Instructions Cycles
  2270                           ; simple_byte           22    12 (average)
  2271                           ;	Chosen strategy is simple_byte
  2272  0029F0  51DC               	movf	??_RTC_Calendario& (0+255),w,b
  2273  0029F2  0A46               	xorlw	70	; case 70
  2274  0029F4  B4D8               	btfsc	status,2,c
  2275  0029F6  EFD6  F014         	goto	l5644
  2276  0029FA  0A0B               	xorlw	11	; case 77
  2277  0029FC  B4D8               	btfsc	status,2,c
  2278  0029FE  EFB6  F014         	goto	l5620
  2279  002A02  0A1E               	xorlw	30	; case 83
  2280  002A04  B4D8               	btfsc	status,2,c
  2281  002A06  EFAE  F014         	goto	l5614
  2282  002A0A  0A07               	xorlw	7	; case 84
  2283  002A0C  B4D8               	btfsc	status,2,c
  2284  002A0E  EFBE  F014         	goto	l5626
  2285  002A12  0A03               	xorlw	3	; case 87
  2286  002A14  B4D8               	btfsc	status,2,c
  2287  002A16  EFC6  F014         	goto	l5632
  2288  002A1A  0A24               	xorlw	36	; case 115
  2289  002A1C  B4D8               	btfsc	status,2,c
  2290  002A1E  EFDE  F014         	goto	l5650
  2291  002A22  0A07               	xorlw	7	; case 116
  2292  002A24  B4D8               	btfsc	status,2,c
  2293  002A26  EFCE  F014         	goto	l5638
  2294  002A2A  EF17  F015         	goto	l345
  2295  002A2E                     l345:
  2296  002A2E  0012               	return		;funcret
  2297  002A30                     __end_of_RTC_Calendario:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _RTC_Read_Clock *****************
  2301 ;; Defined at:
  2302 ;;		line 28 in file "reloj.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  read_clock_a    1    wreg     unsigned char 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0
  2317 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2318 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2319 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2320 ;;Total ram usage:        2 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 3
  2323 ;; This function calls:
  2324 ;;		_I2C_Read
  2325 ;;		_I2C_Repeated_Start
  2326 ;;		_I2C_Start
  2327 ;;		_I2C_Write
  2328 ;; This function is called by:
  2329 ;;		_RTC_Calendario
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text5
  2334  004690                     __ptext5:
  2335                           	callstack 0
  2336  004690                     _RTC_Read_Clock:
  2337                           	callstack 26
  2338                           
  2339                           ;incstack = 0
  2340                           ;RTC_Read_Clock@read_clock_address stored from wreg
  2341  004690  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  2342  004692                     
  2343                           ;reloj.c: 28: void RTC_Read_Clock(char read_clock_address);reloj.c: 29: {;reloj.c: 30:  
      +                             I2C_Start(0xD0);
  2344  004692  0ED0               	movlw	208
  2345  004694  ECFE  F024         	call	_I2C_Start
  2346                           
  2347                           ;reloj.c: 31:     I2C_Write(read_clock_address);
  2348  004698  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  2349  00469A  EC3F  F025         	call	_I2C_Write
  2350                           
  2351                           ;reloj.c: 32:     I2C_Repeated_Start(0xD1);
  2352  00469E  0ED1               	movlw	209
  2353  0046A0  EC15  F025         	call	_I2C_Repeated_Start
  2354  0046A4                     
  2355                           ;reloj.c: 33:     sec = I2C_Read(0);
  2356  0046A4  0E00               	movlw	0
  2357  0046A6  ECEE  F023         	call	_I2C_Read
  2358  0046AA  6E03               	movwf	??_RTC_Read_Clock^0,c
  2359  0046AC  5003               	movf	??_RTC_Read_Clock^0,w,c
  2360  0046AE  0101               	movlb	1	; () banked
  2361  0046B0  6F0C               	movwf	_sec& (0+255),b
  2362  0046B2  6B0D               	clrf	(_sec+1)& (0+255),b
  2363  0046B4                     
  2364                           ; BSR set to: 1
  2365                           ;reloj.c: 34:     min = I2C_Read(0);
  2366  0046B4  0E00               	movlw	0
  2367  0046B6  ECEE  F023         	call	_I2C_Read
  2368  0046BA  6E03               	movwf	??_RTC_Read_Clock^0,c
  2369  0046BC  5003               	movf	??_RTC_Read_Clock^0,w,c
  2370  0046BE  0101               	movlb	1	; () banked
  2371  0046C0  6F0A               	movwf	_min& (0+255),b
  2372  0046C2  6B0B               	clrf	(_min+1)& (0+255),b
  2373  0046C4                     
  2374                           ; BSR set to: 1
  2375                           ;reloj.c: 35:     hour= I2C_Read(1);
  2376  0046C4  0E01               	movlw	1
  2377  0046C6  ECEE  F023         	call	_I2C_Read
  2378  0046CA  6E03               	movwf	??_RTC_Read_Clock^0,c
  2379  0046CC  5003               	movf	??_RTC_Read_Clock^0,w,c
  2380  0046CE  0101               	movlb	1	; () banked
  2381  0046D0  6F08               	movwf	_hour& (0+255),b
  2382  0046D2  6B09               	clrf	(_hour+1)& (0+255),b
  2383  0046D4                     
  2384                           ; BSR set to: 1
  2385  0046D4  0012               	return		;funcret
  2386  0046D6                     __end_of_RTC_Read_Clock:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _RTC_Read_Calendar *****************
  2390 ;; Defined at:
  2391 ;;		line 51 in file "reloj.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  read_calenda    1    wreg     unsigned char 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  read_calenda    1    3[COMRAM] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2405 ;;      Params:         0       0       0       0       0       0       0       0       0
  2406 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2407 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2408 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2409 ;;Total ram usage:        2 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 3
  2412 ;; This function calls:
  2413 ;;		_I2C_Read
  2414 ;;		_I2C_Repeated_Start
  2415 ;;		_I2C_Start
  2416 ;;		_I2C_Stop
  2417 ;;		_I2C_Write
  2418 ;; This function is called by:
  2419 ;;		_RTC_Calendario
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text6
  2424  0043BE                     __ptext6:
  2425                           	callstack 0
  2426  0043BE                     _RTC_Read_Calendar:
  2427                           	callstack 26
  2428                           
  2429                           ; BSR set to: 1
  2430                           ;incstack = 0
  2431                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  2432  0043BE  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  2433  0043C0                     
  2434                           ;reloj.c: 51: void RTC_Read_Calendar(char read_calendar_address);reloj.c: 52: {;reloj.c:
      +                           53:     I2C_Start(0xD0);
  2435  0043C0  0ED0               	movlw	208
  2436  0043C2  ECFE  F024         	call	_I2C_Start
  2437                           
  2438                           ;reloj.c: 54:     I2C_Write(read_calendar_address);
  2439  0043C6  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  2440  0043C8  EC3F  F025         	call	_I2C_Write
  2441                           
  2442                           ;reloj.c: 55:     I2C_Repeated_Start(0xD1);
  2443  0043CC  0ED1               	movlw	209
  2444  0043CE  EC15  F025         	call	_I2C_Repeated_Start
  2445  0043D2                     
  2446                           ;reloj.c: 56:     Day = I2C_Read(0);
  2447  0043D2  0E00               	movlw	0
  2448  0043D4  ECEE  F023         	call	_I2C_Read
  2449  0043D8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2450  0043DA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2451  0043DC  0101               	movlb	1	; () banked
  2452  0043DE  6F06               	movwf	_Day& (0+255),b
  2453  0043E0  6B07               	clrf	(_Day+1)& (0+255),b
  2454  0043E2                     
  2455                           ; BSR set to: 1
  2456                           ;reloj.c: 57:     Date = I2C_Read(0);
  2457  0043E2  0E00               	movlw	0
  2458  0043E4  ECEE  F023         	call	_I2C_Read
  2459  0043E8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2460  0043EA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2461  0043EC  0101               	movlb	1	; () banked
  2462  0043EE  6F04               	movwf	_Date& (0+255),b
  2463  0043F0  6B05               	clrf	(_Date+1)& (0+255),b
  2464  0043F2                     
  2465                           ; BSR set to: 1
  2466                           ;reloj.c: 58:     Month = I2C_Read(0);
  2467  0043F2  0E00               	movlw	0
  2468  0043F4  ECEE  F023         	call	_I2C_Read
  2469  0043F8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2470  0043FA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2471  0043FC  0101               	movlb	1	; () banked
  2472  0043FE  6F02               	movwf	_Month& (0+255),b
  2473  004400  6B03               	clrf	(_Month+1)& (0+255),b
  2474  004402                     
  2475                           ; BSR set to: 1
  2476                           ;reloj.c: 59:     Year = I2C_Read(1);
  2477  004402  0E01               	movlw	1
  2478  004404  ECEE  F023         	call	_I2C_Read
  2479  004408  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2480  00440A  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2481  00440C  0101               	movlb	1	; () banked
  2482  00440E  6F00               	movwf	_Year& (0+255),b
  2483  004410  6B01               	clrf	(_Year+1)& (0+255),b
  2484  004412                     
  2485                           ; BSR set to: 1
  2486                           ;reloj.c: 60:     I2C_Stop();
  2487  004412  EC68  F025         	call	_I2C_Stop	;wreg free
  2488  004416  0012               	return		;funcret
  2489  004418                     __end_of_RTC_Read_Calendar:
  2490                           	callstack 0
  2491                           
  2492 ;; *************** function _I2C_Stop *****************
  2493 ;; Defined at:
  2494 ;;		line 186 in file "Reloj_ar.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      unsigned char 
  2501 ;; Registers used:
  2502 ;;		wreg
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2508 ;;      Params:         0       0       0       0       0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2511 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_RTC_Read_Calendar
  2518 ;;		_RTC_Calendario
  2519 ;;		_I2C_Start_Wait
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text7
  2524  004AD0                     __ptext7:
  2525                           	callstack 0
  2526  004AD0                     _I2C_Stop:
  2527                           	callstack 28
  2528  004AD0                     
  2529                           ;Reloj_ar.c: 188:     PEN = 1;
  2530  004AD0  84C5               	bsf	4037,2,c	;volatile
  2531  004AD2                     l446:
  2532  004AD2  B4C5               	btfsc	4037,2,c	;volatile
  2533  004AD4  EF6E  F025         	goto	u5851
  2534  004AD8  EF70  F025         	goto	u5850
  2535  004ADC                     u5851:
  2536  004ADC  EF69  F025         	goto	l446
  2537  004AE0                     u5850:
  2538  004AE0                     
  2539                           ;Reloj_ar.c: 190:     if(!SSPSTATbits.P);
  2540  004AE0  50C7               	movf	199,w,c	;volatile
  2541  004AE2  0012               	return		;funcret
  2542  004AE4                     __end_of_I2C_Stop:
  2543                           	callstack 0
  2544                           
  2545 ;; *************** function _I2C_Start *****************
  2546 ;; Defined at:
  2547 ;;		line 134 in file "Reloj_ar.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  slave_write_    1    wreg     unsigned char 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  slave_write_    1    1[COMRAM] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      unsigned char 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2561 ;;      Params:         0       0       0       0       0       0       0       0       0
  2562 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2564 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2565 ;;Total ram usage:        1 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 2
  2568 ;; This function calls:
  2569 ;;		_I2C_Write
  2570 ;; This function is called by:
  2571 ;;		_RTC_Read_Clock
  2572 ;;		_RTC_Read_Calendar
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text8
  2577  0049FC                     __ptext8:
  2578                           	callstack 0
  2579  0049FC                     _I2C_Start:
  2580                           	callstack 26
  2581                           
  2582                           ;incstack = 0
  2583                           ;I2C_Start@slave_write_address stored from wreg
  2584  0049FC  6E02               	movwf	I2C_Start@slave_write_address^0,c
  2585  0049FE                     
  2586                           ;Reloj_ar.c: 134: char I2C_Start(char slave_write_address);Reloj_ar.c: 135: {;Reloj_ar.c
      +                          : 136:     SSPCON2bits.SEN=1;
  2587  0049FE  80C5               	bsf	197,0,c	;volatile
  2588  004A00                     l430:
  2589  004A00  B0C5               	btfsc	197,0,c	;volatile
  2590  004A02  EF05  F025         	goto	u5791
  2591  004A06  EF07  F025         	goto	u5790
  2592  004A0A                     u5791:
  2593  004A0A  EF00  F025         	goto	l430
  2594  004A0E                     u5790:
  2595  004A0E                     
  2596                           ;Reloj_ar.c: 138:  SSPIF=0;
  2597  004A0E  969E               	bcf	3998,3,c	;volatile
  2598                           
  2599                           ;Reloj_ar.c: 139:     if(!SSPSTATbits.S)
  2600  004A10  B6C7               	btfsc	199,3,c	;volatile
  2601  004A12  EF0D  F025         	goto	u5801
  2602  004A16  EF0F  F025         	goto	u5800
  2603  004A1A                     u5801:
  2604  004A1A  EF11  F025         	goto	l5298
  2605  004A1E                     u5800:
  2606  004A1E  EF14  F025         	goto	l434
  2607  004A22                     l5298:
  2608                           
  2609                           ;Reloj_ar.c: 141:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Sta
      +                          rt is never used
  2610  004A22  5002               	movf	I2C_Start@slave_write_address^0,w,c
  2611  004A24  EC3F  F025         	call	_I2C_Write
  2612  004A28                     l434:
  2613  004A28  0012               	return		;funcret
  2614  004A2A                     __end_of_I2C_Start:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function _I2C_Repeated_Start *****************
  2618 ;; Defined at:
  2619 ;;		line 159 in file "Reloj_ar.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  slave_read_a    1    wreg     unsigned char 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      unsigned char 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0
  2634 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2636 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2637 ;;Total ram usage:        1 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 2
  2640 ;; This function calls:
  2641 ;;		_I2C_Write
  2642 ;; This function is called by:
  2643 ;;		_RTC_Read_Clock
  2644 ;;		_RTC_Read_Calendar
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text9
  2649  004A2A                     __ptext9:
  2650                           	callstack 0
  2651  004A2A                     _I2C_Repeated_Start:
  2652                           	callstack 26
  2653                           
  2654                           ;incstack = 0
  2655                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  2656  004A2A  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  2657  004A2C                     
  2658                           ;Reloj_ar.c: 159: char I2C_Repeated_Start(char slave_read_address);Reloj_ar.c: 160: {;Re
      +                          loj_ar.c: 161:     RSEN = 1;
  2659  004A2C  82C5               	bsf	4037,1,c	;volatile
  2660  004A2E                     l437:
  2661  004A2E  B2C5               	btfsc	4037,1,c	;volatile
  2662  004A30  EF1C  F025         	goto	u5811
  2663  004A34  EF1E  F025         	goto	u5810
  2664  004A38                     u5811:
  2665  004A38  EF17  F025         	goto	l437
  2666  004A3C                     u5810:
  2667  004A3C                     
  2668                           ;Reloj_ar.c: 163:     SSPIF = 0;
  2669  004A3C  969E               	bcf	3998,3,c	;volatile
  2670                           
  2671                           ;Reloj_ar.c: 164:  if(!SSPSTATbits.S)
  2672  004A3E  B6C7               	btfsc	199,3,c	;volatile
  2673  004A40  EF24  F025         	goto	u5821
  2674  004A44  EF26  F025         	goto	u5820
  2675  004A48                     u5821:
  2676  004A48  EF28  F025         	goto	l5306
  2677  004A4C                     u5820:
  2678  004A4C  EF2B  F025         	goto	l441
  2679  004A50                     l5306:
  2680                           
  2681                           ;Reloj_ar.c: 166:     I2C_Write(slave_read_address);
  2682  004A50  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  2683  004A52  EC3F  F025         	call	_I2C_Write
  2684  004A56                     l441:
  2685  004A56  0012               	return		;funcret
  2686  004A58                     __end_of_I2C_Repeated_Start:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function _I2C_Write *****************
  2690 ;; Defined at:
  2691 ;;		line 208 in file "Reloj_ar.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  data            1    wreg     unsigned char 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  data            1    0[COMRAM] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      unsigned char 
  2698 ;; Registers used:
  2699 ;;		wreg, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0
  2706 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2708 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2709 ;;Total ram usage:        1 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 1
  2712 ;; This function calls:
  2713 ;;		_I2C_Ready
  2714 ;; This function is called by:
  2715 ;;		_RTC_Read_Clock
  2716 ;;		_RTC_Read_Calendar
  2717 ;;		_I2C_Start
  2718 ;;		_I2C_Repeated_Start
  2719 ;;		_I2C_Start_Wait
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text10
  2724  004A7E                     __ptext10:
  2725                           	callstack 0
  2726  004A7E                     _I2C_Write:
  2727                           	callstack 27
  2728                           
  2729                           ;incstack = 0
  2730                           ;I2C_Write@data stored from wreg
  2731  004A7E  6E01               	movwf	I2C_Write@data^0,c
  2732  004A80                     
  2733                           ;Reloj_ar.c: 208: char I2C_Write(unsigned char data);Reloj_ar.c: 209: {;Reloj_ar.c: 210:
      +                                 SSPBUF = data;
  2734  004A80  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  2735  004A84                     
  2736                           ;Reloj_ar.c: 211:       I2C_Ready();
  2737  004A84  EC90  F025         	call	_I2C_Ready	;wreg free
  2738  004A88                     
  2739                           ;Reloj_ar.c: 212:       if (ACKSTAT)
  2740  004A88  ACC5               	btfss	4037,6,c	;volatile
  2741  004A8A  EF49  F025         	goto	u5521
  2742  004A8E  EF4B  F025         	goto	u5520
  2743  004A92                     u5521:
  2744  004A92  EF4E  F025         	goto	l5084
  2745  004A96                     u5520:
  2746  004A96                     
  2747                           ;Reloj_ar.c: 213:         return 1;
  2748  004A96  0E01               	movlw	1
  2749  004A98  EF4F  F025         	goto	l454
  2750  004A9C                     l5084:
  2751                           
  2752                           ;Reloj_ar.c: 215:         return 2;
  2753  004A9C  0E02               	movlw	2
  2754  004A9E                     l454:
  2755  004A9E  0012               	return		;funcret
  2756  004AA0                     __end_of_I2C_Write:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _I2C_Read *****************
  2760 ;; Defined at:
  2761 ;;		line 27 in file "Reloj_ar.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  flag            1    wreg     unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  flag            1    0[COMRAM] unsigned char 
  2766 ;;  buffer          1    1[COMRAM] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      unsigned char 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0
  2777 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2779 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2780 ;;Total ram usage:        2 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 1
  2783 ;; This function calls:
  2784 ;;		_I2C_Ack
  2785 ;;		_I2C_Nack
  2786 ;;		_I2C_Ready
  2787 ;; This function is called by:
  2788 ;;		_RTC_Read_Clock
  2789 ;;		_RTC_Read_Calendar
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text11
  2794  0047DC                     __ptext11:
  2795                           	callstack 0
  2796  0047DC                     _I2C_Read:
  2797                           	callstack 27
  2798                           
  2799                           ;incstack = 0
  2800                           ;I2C_Read@flag stored from wreg
  2801  0047DC  6E01               	movwf	I2C_Read@flag^0,c
  2802  0047DE                     
  2803                           ;Reloj_ar.c: 27: char I2C_Read(char flag);Reloj_ar.c: 29: {;Reloj_ar.c: 30:         char
      +                           buffer;;Reloj_ar.c: 31:         RCEN = 1;
  2804  0047DE  86C5               	bsf	4037,3,c	;volatile
  2805  0047E0                     l402:
  2806  0047E0  A0C7               	btfss	199,0,c	;volatile
  2807  0047E2  EFF5  F023         	goto	u5831
  2808  0047E6  EFF7  F023         	goto	u5830
  2809  0047EA                     u5831:
  2810  0047EA  EFF0  F023         	goto	l402
  2811  0047EE                     u5830:
  2812  0047EE                     
  2813                           ;Reloj_ar.c: 34:         buffer = SSPBUF;
  2814  0047EE  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  2815  0047F2                     
  2816                           ;Reloj_ar.c: 36:         if(flag==0)
  2817  0047F2  5001               	movf	I2C_Read@flag^0,w,c
  2818  0047F4  A4D8               	btfss	status,2,c
  2819  0047F6  EFFF  F023         	goto	u5841
  2820  0047FA  EF01  F024         	goto	u5840
  2821  0047FE                     u5841:
  2822  0047FE  EF05  F024         	goto	l5320
  2823  004802                     u5840:
  2824  004802                     
  2825                           ;Reloj_ar.c: 37:             I2C_Ack();
  2826  004802  EC7C  F025         	call	_I2C_Ack	;wreg free
  2827  004806  EF07  F024         	goto	l406
  2828  00480A                     l5320:
  2829                           
  2830                           ;Reloj_ar.c: 39:             I2C_Nack();
  2831  00480A  EC72  F025         	call	_I2C_Nack	;wreg free
  2832  00480E                     l406:
  2833                           
  2834                           ;Reloj_ar.c: 40:         I2C_Ready();
  2835  00480E  EC90  F025         	call	_I2C_Ready	;wreg free
  2836  004812                     
  2837                           ;Reloj_ar.c: 41:         return(buffer);
  2838  004812  5002               	movf	I2C_Read@buffer^0,w,c
  2839  004814  0012               	return		;funcret
  2840  004816                     __end_of_I2C_Read:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _I2C_Ready *****************
  2844 ;; Defined at:
  2845 ;;		line 83 in file "Reloj_ar.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		None
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_I2C_Read
  2869 ;;		_I2C_Write
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text12
  2874  004B20                     __ptext12:
  2875                           	callstack 0
  2876  004B20                     _I2C_Ready:
  2877                           	callstack 27
  2878  004B20                     l413:
  2879  004B20  A69E               	btfss	3998,3,c	;volatile
  2880  004B22  EF95  F025         	goto	u4671
  2881  004B26  EF97  F025         	goto	u4670
  2882  004B2A                     u4671:
  2883  004B2A  EF90  F025         	goto	l413
  2884  004B2E                     u4670:
  2885  004B2E                     
  2886                           ;Reloj_ar.c: 86:     SSPIF=0;
  2887  004B2E  969E               	bcf	3998,3,c	;volatile
  2888  004B30  0012               	return		;funcret
  2889  004B32                     __end_of_I2C_Ready:
  2890                           	callstack 0
  2891                           
  2892 ;; *************** function _I2C_Nack *****************
  2893 ;; Defined at:
  2894 ;;		line 250 in file "Reloj_ar.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		None
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2908 ;;      Params:         0       0       0       0       0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2911 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2912 ;;Total ram usage:        0 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_I2C_Read
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text13
  2922  004AE4                     __ptext13:
  2923                           	callstack 0
  2924  004AE4                     _I2C_Nack:
  2925                           	callstack 27
  2926  004AE4                     
  2927                           ;Reloj_ar.c: 252:     ACKDT=1;
  2928  004AE4  8AC5               	bsf	4037,5,c	;volatile
  2929                           
  2930                           ;Reloj_ar.c: 253:  ACKEN=1;
  2931  004AE6  88C5               	bsf	4037,4,c	;volatile
  2932  004AE8                     l464:
  2933  004AE8  B8C5               	btfsc	4037,4,c	;volatile
  2934  004AEA  EF79  F025         	goto	u5541
  2935  004AEE  EF7B  F025         	goto	u5540
  2936  004AF2                     u5541:
  2937  004AF2  EF74  F025         	goto	l464
  2938  004AF6                     u5540:
  2939  004AF6  0012               	return		;funcret
  2940  004AF8                     __end_of_I2C_Nack:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _I2C_Ack *****************
  2944 ;; Defined at:
  2945 ;;		line 230 in file "Reloj_ar.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;		None
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;		None
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		None
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2959 ;;      Params:         0       0       0       0       0       0       0       0       0
  2960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2962 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2963 ;;Total ram usage:        0 bytes
  2964 ;; Hardware stack levels used: 1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_I2C_Read
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text14
  2973  004AF8                     __ptext14:
  2974                           	callstack 0
  2975  004AF8                     _I2C_Ack:
  2976                           	callstack 27
  2977  004AF8                     
  2978                           ;Reloj_ar.c: 232:     ACKDT=0;
  2979  004AF8  9AC5               	bcf	4037,5,c	;volatile
  2980                           
  2981                           ;Reloj_ar.c: 233:  ACKEN=1;
  2982  004AFA  88C5               	bsf	4037,4,c	;volatile
  2983  004AFC                     l458:
  2984  004AFC  B8C5               	btfsc	4037,4,c	;volatile
  2985  004AFE  EF83  F025         	goto	u5531
  2986  004B02  EF85  F025         	goto	u5530
  2987  004B06                     u5531:
  2988  004B06  EF7E  F025         	goto	l458
  2989  004B0A                     u5530:
  2990  004B0A  0012               	return		;funcret
  2991  004B0C                     __end_of_I2C_Ack:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _LCD_Init *****************
  2995 ;; Defined at:
  2996 ;;		line 23 in file "LCD_caracter.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3013 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 2
  3017 ;; This function calls:
  3018 ;;		_LCD_Command
  3019 ;;		_LCD_MSdelay
  3020 ;; This function is called by:
  3021 ;;		_main
  3022 ;;		_RTC_Calendario
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text15
  3027  0049CC                     __ptext15:
  3028                           	callstack 0
  3029  0049CC                     _LCD_Init:
  3030                           	callstack 27
  3031  0049CC                     
  3032                           ;LCD_caracter.c: 25:     TRISD = 0;
  3033  0049CC  0E00               	movlw	0
  3034  0049CE  6E95               	movwf	149,c	;volatile
  3035  0049D0                     
  3036                           ;LCD_caracter.c: 26:     LCD_MSdelay(15);
  3037  0049D0  0E00               	movlw	0
  3038  0049D2  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  3039  0049D4  0E0F               	movlw	15
  3040  0049D6  6E01               	movwf	LCD_MSdelay@val^0,c
  3041  0049D8  ECFF  F022         	call	_LCD_MSdelay	;wreg free
  3042  0049DC                     
  3043                           ;LCD_caracter.c: 27:     LCD_Command(0x02);
  3044  0049DC  0E02               	movlw	2
  3045  0049DE  ECB3  F022         	call	_LCD_Command
  3046  0049E2                     
  3047                           ;LCD_caracter.c: 29:     LCD_Command(0x28);
  3048  0049E2  0E28               	movlw	40
  3049  0049E4  ECB3  F022         	call	_LCD_Command
  3050  0049E8                     
  3051                           ;LCD_caracter.c: 31:  LCD_Command(0x01);
  3052  0049E8  0E01               	movlw	1
  3053  0049EA  ECB3  F022         	call	_LCD_Command
  3054  0049EE                     
  3055                           ;LCD_caracter.c: 32:     LCD_Command(0x0c);
  3056  0049EE  0E0C               	movlw	12
  3057  0049F0  ECB3  F022         	call	_LCD_Command
  3058  0049F4                     
  3059                           ;LCD_caracter.c: 33:  LCD_Command(0x06);
  3060  0049F4  0E06               	movlw	6
  3061  0049F6  ECB3  F022         	call	_LCD_Command
  3062  0049FA  0012               	return		;funcret
  3063  0049FC                     __end_of_LCD_Init:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _LCD_Clear *****************
  3067 ;; Defined at:
  3068 ;;		line 155 in file "LCD_caracter.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 2
  3089 ;; This function calls:
  3090 ;;		_LCD_Command
  3091 ;;		_LCD_MSdelay
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;;		_RTC_Calendario
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text16
  3099  004B0C                     __ptext16:
  3100                           	callstack 0
  3101  004B0C                     _LCD_Clear:
  3102                           	callstack 27
  3103  004B0C                     
  3104                           ;LCD_caracter.c: 157:     LCD_Command(0x01);
  3105  004B0C  0E01               	movlw	1
  3106  004B0E  ECB3  F022         	call	_LCD_Command
  3107                           
  3108                           ;LCD_caracter.c: 158:     LCD_MSdelay(3);
  3109  004B12  0E00               	movlw	0
  3110  004B14  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  3111  004B16  0E03               	movlw	3
  3112  004B18  6E01               	movwf	LCD_MSdelay@val^0,c
  3113  004B1A  ECFF  F022         	call	_LCD_MSdelay	;wreg free
  3114  004B1E  0012               	return		;funcret
  3115  004B20                     __end_of_LCD_Clear:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _I2C_Init *****************
  3119 ;; Defined at:
  3120 ;;		line 57 in file "Reloj_ar.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3137 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3138 ;;Total ram usage:        0 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_main
  3144 ;;		_RTC_Calendario
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text17
  3149  004AA0                     __ptext17:
  3150                           	callstack 0
  3151  004AA0                     _I2C_Init:
  3152                           	callstack 29
  3153  004AA0                     
  3154                           ;Reloj_ar.c: 59:     TRISB0=1;
  3155  004AA0  8093               	bsf	3987,0,c	;volatile
  3156                           
  3157                           ;Reloj_ar.c: 60:  TRISB1=1;
  3158  004AA2  8293               	bsf	3987,1,c	;volatile
  3159  004AA4                     
  3160                           ;Reloj_ar.c: 61:  SSPSTAT=80;
  3161  004AA4  0E50               	movlw	80
  3162  004AA6  6EC7               	movwf	199,c	;volatile
  3163                           
  3164                           ;Reloj_ar.c: 62:     SSPCON1=0x28;
  3165  004AA8  0E28               	movlw	40
  3166  004AAA  6EC6               	movwf	198,c	;volatile
  3167                           
  3168                           ;Reloj_ar.c: 64:  SSPCON2=0;
  3169  004AAC  0E00               	movlw	0
  3170  004AAE  6EC5               	movwf	197,c	;volatile
  3171                           
  3172                           ;Reloj_ar.c: 65:     SSPADD=((8000000/(4*100000))-1);
  3173  004AB0  0E13               	movlw	19
  3174  004AB2  6EC8               	movwf	200,c	;volatile
  3175  004AB4                     
  3176                           ;Reloj_ar.c: 66:     SSPIE=1;
  3177  004AB4  869D               	bsf	3997,3,c	;volatile
  3178  004AB6                     
  3179                           ;Reloj_ar.c: 67:     SSPIF=0;
  3180  004AB6  969E               	bcf	3998,3,c	;volatile
  3181  004AB8  0012               	return		;funcret
  3182  004ABA                     __end_of_I2C_Init:
  3183                           	callstack 0
  3184                           
  3185 ;; *************** function _Estados *****************
  3186 ;; Defined at:
  3187 ;;		line 25 in file "Estados.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  2    6[BANK0 ] int 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3201 ;;      Params:         0       2       0       0       0       0       0       0       0
  3202 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3204 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3205 ;;Total ram usage:        6 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 2
  3208 ;; This function calls:
  3209 ;;		_ReadADC
  3210 ;;		_ReadLUZ
  3211 ;;		___flge
  3212 ;;		___xxtofl
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text18
  3219  002D0A                     __ptext18:
  3220                           	callstack 0
  3221  002D0A                     _Estados:
  3222                           	callstack 28
  3223  002D0A                     
  3224                           ;Estados.c: 26:     tempar = ReadADC();
  3225  002D0A  EC20  F01C         	call	_ReadADC	;wreg free
  3226  002D0E  0100               	movlb	0	; () banked
  3227  002D10  C060  F068         	movff	?_ReadADC,_Estados$1937
  3228  002D14  C061  F069         	movff	?_ReadADC+1,_Estados$1937+1
  3229  002D18  6B6A               	clrf	(_Estados$1937+2)& (0+255),b
  3230  002D1A  6B6B               	clrf	(_Estados$1937+3)& (0+255),b
  3231  002D1C                     
  3232                           ; BSR set to: 0
  3233                           ;Estados.c: 26:     tempar = ReadADC();
  3234  002D1C  C068  F005         	movff	_Estados$1937,___xxtofl@val
  3235  002D20  C069  F006         	movff	_Estados$1937+1,___xxtofl@val+1
  3236  002D24  C06A  F007         	movff	_Estados$1937+2,___xxtofl@val+2
  3237  002D28  C06B  F008         	movff	_Estados$1937+3,___xxtofl@val+3
  3238  002D2C  0E00               	movlw	0
  3239  002D2E  ECCD  F018         	call	___xxtofl
  3240  002D32  C005  F0EE         	movff	?___xxtofl,_tempar
  3241  002D36  C006  F0EF         	movff	?___xxtofl+1,_tempar+1
  3242  002D3A  C007  F0F0         	movff	?___xxtofl+2,_tempar+2
  3243  002D3E  C008  F0F1         	movff	?___xxtofl+3,_tempar+3
  3244  002D42                     
  3245                           ;Estados.c: 27:     luz = ReadLUZ();
  3246  002D42  EC64  F020         	call	_ReadLUZ	;wreg free
  3247  002D46  C001  F005         	movff	?_ReadLUZ,___xxtofl@val
  3248  002D4A  C002  F006         	movff	?_ReadLUZ+1,___xxtofl@val+1
  3249  002D4E  6A07               	clrf	(___xxtofl@val+2)^0,c
  3250  002D50  6A08               	clrf	(___xxtofl@val+3)^0,c
  3251  002D52  0E00               	movlw	0
  3252  002D54  ECCD  F018         	call	___xxtofl
  3253  002D58  C005  F0EA         	movff	?___xxtofl,_luz
  3254  002D5C  C006  F0EB         	movff	?___xxtofl+1,_luz+1
  3255  002D60  C007  F0EC         	movff	?___xxtofl+2,_luz+2
  3256  002D64  C008  F0ED         	movff	?___xxtofl+3,_luz+3
  3257  002D68                     
  3258                           ;Estados.c: 30:     if (tempar > 15 && (luz > 0 && luz < 400)) {
  3259  002D68  0E00               	movlw	0
  3260  002D6A  6E2C               	movwf	___flge@ff1^0,c
  3261  002D6C  0E00               	movlw	0
  3262  002D6E  6E2D               	movwf	(___flge@ff1+1)^0,c
  3263  002D70  0E70               	movlw	112
  3264  002D72  6E2E               	movwf	(___flge@ff1+2)^0,c
  3265  002D74  0E41               	movlw	65
  3266  002D76  6E2F               	movwf	(___flge@ff1+3)^0,c
  3267  002D78  C0EE  F030         	movff	_tempar,___flge@ff2
  3268  002D7C  C0EF  F031         	movff	_tempar+1,___flge@ff2+1
  3269  002D80  C0F0  F032         	movff	_tempar+2,___flge@ff2+2
  3270  002D84  C0F1  F033         	movff	_tempar+3,___flge@ff2+3
  3271  002D88  EC9E  F01B         	call	___flge	;wreg free
  3272  002D8C  B0D8               	btfsc	status,0,c
  3273  002D8E  EFCB  F016         	goto	u6071
  3274  002D92  EFCD  F016         	goto	u6070
  3275  002D96                     u6071:
  3276  002D96  EF08  F017         	goto	l5682
  3277  002D9A                     u6070:
  3278  002D9A  0E00               	movlw	0
  3279  002D9C  6E2C               	movwf	___flge@ff1^0,c
  3280  002D9E  0E00               	movlw	0
  3281  002DA0  6E2D               	movwf	(___flge@ff1+1)^0,c
  3282  002DA2  0E00               	movlw	0
  3283  002DA4  6E2E               	movwf	(___flge@ff1+2)^0,c
  3284  002DA6  0E00               	movlw	0
  3285  002DA8  6E2F               	movwf	(___flge@ff1+3)^0,c
  3286  002DAA  C0EA  F030         	movff	_luz,___flge@ff2
  3287  002DAE  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3288  002DB2  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3289  002DB6  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3290  002DBA  EC9E  F01B         	call	___flge	;wreg free
  3291  002DBE  B0D8               	btfsc	status,0,c
  3292  002DC0  EFE4  F016         	goto	u6081
  3293  002DC4  EFE6  F016         	goto	u6080
  3294  002DC8                     u6081:
  3295  002DC8  EF08  F017         	goto	l5682
  3296  002DCC                     u6080:
  3297  002DCC  C0EA  F02C         	movff	_luz,___flge@ff1
  3298  002DD0  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3299  002DD4  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3300  002DD8  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3301  002DDC  0E00               	movlw	0
  3302  002DDE  6E30               	movwf	___flge@ff2^0,c
  3303  002DE0  0E00               	movlw	0
  3304  002DE2  6E31               	movwf	(___flge@ff2+1)^0,c
  3305  002DE4  0EC8               	movlw	200
  3306  002DE6  6E32               	movwf	(___flge@ff2+2)^0,c
  3307  002DE8  0E43               	movlw	67
  3308  002DEA  6E33               	movwf	(___flge@ff2+3)^0,c
  3309  002DEC  EC9E  F01B         	call	___flge	;wreg free
  3310  002DF0  B0D8               	btfsc	status,0,c
  3311  002DF2  EFFD  F016         	goto	u6091
  3312  002DF6  EFFF  F016         	goto	u6090
  3313  002DFA                     u6091:
  3314  002DFA  EF08  F017         	goto	l5682
  3315  002DFE                     u6090:
  3316  002DFE                     
  3317                           ;Estados.c: 31:         return 1;
  3318  002DFE  0E00               	movlw	0
  3319  002E00  0100               	movlb	0	; () banked
  3320  002E02  6F67               	movwf	(?_Estados+1)& (0+255),b
  3321  002E04  0E01               	movlw	1
  3322  002E06  6F66               	movwf	?_Estados& (0+255),b
  3323  002E08  EFC3  F017         	goto	l517
  3324  002E0C                     l5678:
  3325  002E0C  EFC3  F017         	goto	l517
  3326  002E10                     l5682:
  3327  002E10  C0EE  F02C         	movff	_tempar,___flge@ff1
  3328  002E14  C0EF  F02D         	movff	_tempar+1,___flge@ff1+1
  3329  002E18  C0F0  F02E         	movff	_tempar+2,___flge@ff1+2
  3330  002E1C  C0F1  F02F         	movff	_tempar+3,___flge@ff1+3
  3331  002E20  0E00               	movlw	0
  3332  002E22  6E30               	movwf	___flge@ff2^0,c
  3333  002E24  0E00               	movlw	0
  3334  002E26  6E31               	movwf	(___flge@ff2+1)^0,c
  3335  002E28  0E40               	movlw	64
  3336  002E2A  6E32               	movwf	(___flge@ff2+2)^0,c
  3337  002E2C  0E41               	movlw	65
  3338  002E2E  6E33               	movwf	(___flge@ff2+3)^0,c
  3339  002E30  EC9E  F01B         	call	___flge	;wreg free
  3340  002E34  A0D8               	btfss	status,0,c
  3341  002E36  EF1F  F017         	goto	u6101
  3342  002E3A  EF21  F017         	goto	u6100
  3343  002E3E                     u6101:
  3344  002E3E  EF73  F017         	goto	l5696
  3345  002E42                     u6100:
  3346  002E42  0E00               	movlw	0
  3347  002E44  6E2C               	movwf	___flge@ff1^0,c
  3348  002E46  0E00               	movlw	0
  3349  002E48  6E2D               	movwf	(___flge@ff1+1)^0,c
  3350  002E4A  0E70               	movlw	112
  3351  002E4C  6E2E               	movwf	(___flge@ff1+2)^0,c
  3352  002E4E  0E41               	movlw	65
  3353  002E50  6E2F               	movwf	(___flge@ff1+3)^0,c
  3354  002E52  C0EE  F030         	movff	_tempar,___flge@ff2
  3355  002E56  C0EF  F031         	movff	_tempar+1,___flge@ff2+1
  3356  002E5A  C0F0  F032         	movff	_tempar+2,___flge@ff2+2
  3357  002E5E  C0F1  F033         	movff	_tempar+3,___flge@ff2+3
  3358  002E62  EC9E  F01B         	call	___flge	;wreg free
  3359  002E66  A0D8               	btfss	status,0,c
  3360  002E68  EF38  F017         	goto	u6111
  3361  002E6C  EF3A  F017         	goto	u6110
  3362  002E70                     u6111:
  3363  002E70  EF73  F017         	goto	l5696
  3364  002E74                     u6110:
  3365  002E74  0E00               	movlw	0
  3366  002E76  6E2C               	movwf	___flge@ff1^0,c
  3367  002E78  0E00               	movlw	0
  3368  002E7A  6E2D               	movwf	(___flge@ff1+1)^0,c
  3369  002E7C  0EC8               	movlw	200
  3370  002E7E  6E2E               	movwf	(___flge@ff1+2)^0,c
  3371  002E80  0E43               	movlw	67
  3372  002E82  6E2F               	movwf	(___flge@ff1+3)^0,c
  3373  002E84  C0EA  F030         	movff	_luz,___flge@ff2
  3374  002E88  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3375  002E8C  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3376  002E90  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3377  002E94  EC9E  F01B         	call	___flge	;wreg free
  3378  002E98  B0D8               	btfsc	status,0,c
  3379  002E9A  EF51  F017         	goto	u6121
  3380  002E9E  EF53  F017         	goto	u6120
  3381  002EA2                     u6121:
  3382  002EA2  EF73  F017         	goto	l5696
  3383  002EA6                     u6120:
  3384  002EA6  C0EA  F02C         	movff	_luz,___flge@ff1
  3385  002EAA  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3386  002EAE  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3387  002EB2  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3388  002EB6  0E00               	movlw	0
  3389  002EB8  6E30               	movwf	___flge@ff2^0,c
  3390  002EBA  0E00               	movlw	0
  3391  002EBC  6E31               	movwf	(___flge@ff2+1)^0,c
  3392  002EBE  0E2F               	movlw	47
  3393  002EC0  6E32               	movwf	(___flge@ff2+2)^0,c
  3394  002EC2  0E44               	movlw	68
  3395  002EC4  6E33               	movwf	(___flge@ff2+3)^0,c
  3396  002EC6  EC9E  F01B         	call	___flge	;wreg free
  3397  002ECA  B0D8               	btfsc	status,0,c
  3398  002ECC  EF6A  F017         	goto	u6131
  3399  002ED0  EF6C  F017         	goto	u6130
  3400  002ED4                     u6131:
  3401  002ED4  EF73  F017         	goto	l5696
  3402  002ED8                     u6130:
  3403  002ED8                     
  3404                           ;Estados.c: 33:         return 2;
  3405  002ED8  0E00               	movlw	0
  3406  002EDA  0100               	movlb	0	; () banked
  3407  002EDC  6F67               	movwf	(?_Estados+1)& (0+255),b
  3408  002EDE  0E02               	movlw	2
  3409  002EE0  6F66               	movwf	?_Estados& (0+255),b
  3410  002EE2  EFC3  F017         	goto	l517
  3411  002EE6                     l5696:
  3412  002EE6  C0EE  F02C         	movff	_tempar,___flge@ff1
  3413  002EEA  C0EF  F02D         	movff	_tempar+1,___flge@ff1+1
  3414  002EEE  C0F0  F02E         	movff	_tempar+2,___flge@ff1+2
  3415  002EF2  C0F1  F02F         	movff	_tempar+3,___flge@ff1+3
  3416  002EF6  0E00               	movlw	0
  3417  002EF8  6E30               	movwf	___flge@ff2^0,c
  3418  002EFA  0E00               	movlw	0
  3419  002EFC  6E31               	movwf	(___flge@ff2+1)^0,c
  3420  002EFE  0E40               	movlw	64
  3421  002F00  6E32               	movwf	(___flge@ff2+2)^0,c
  3422  002F02  0E41               	movlw	65
  3423  002F04  6E33               	movwf	(___flge@ff2+3)^0,c
  3424  002F06  EC9E  F01B         	call	___flge	;wreg free
  3425  002F0A  B0D8               	btfsc	status,0,c
  3426  002F0C  EF8A  F017         	goto	u6141
  3427  002F10  EF8C  F017         	goto	u6140
  3428  002F14                     u6141:
  3429  002F14  EF06  F017         	goto	l5678
  3430  002F18                     u6140:
  3431  002F18  0E00               	movlw	0
  3432  002F1A  6E2C               	movwf	___flge@ff1^0,c
  3433  002F1C  0E00               	movlw	0
  3434  002F1E  6E2D               	movwf	(___flge@ff1+1)^0,c
  3435  002F20  0E2F               	movlw	47
  3436  002F22  6E2E               	movwf	(___flge@ff1+2)^0,c
  3437  002F24  0E44               	movlw	68
  3438  002F26  6E2F               	movwf	(___flge@ff1+3)^0,c
  3439  002F28  C0EA  F030         	movff	_luz,___flge@ff2
  3440  002F2C  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3441  002F30  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3442  002F34  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3443  002F38  EC9E  F01B         	call	___flge	;wreg free
  3444  002F3C  B0D8               	btfsc	status,0,c
  3445  002F3E  EFA3  F017         	goto	u6151
  3446  002F42  EFA5  F017         	goto	u6150
  3447  002F46                     u6151:
  3448  002F46  EF06  F017         	goto	l5678
  3449  002F4A                     u6150:
  3450  002F4A  C0EA  F02C         	movff	_luz,___flge@ff1
  3451  002F4E  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3452  002F52  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3453  002F56  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3454  002F5A  0E00               	movlw	0
  3455  002F5C  6E30               	movwf	___flge@ff2^0,c
  3456  002F5E  0E80               	movlw	128
  3457  002F60  6E31               	movwf	(___flge@ff2+1)^0,c
  3458  002F62  0EBB               	movlw	187
  3459  002F64  6E32               	movwf	(___flge@ff2+2)^0,c
  3460  002F66  0E44               	movlw	68
  3461  002F68  6E33               	movwf	(___flge@ff2+3)^0,c
  3462  002F6A  EC9E  F01B         	call	___flge	;wreg free
  3463  002F6E  B0D8               	btfsc	status,0,c
  3464  002F70  EFBC  F017         	goto	u6161
  3465  002F74  EFBE  F017         	goto	u6160
  3466  002F78                     u6161:
  3467  002F78  EF06  F017         	goto	l5678
  3468  002F7C                     u6160:
  3469  002F7C                     
  3470                           ;Estados.c: 36:         return 3;
  3471  002F7C  0E00               	movlw	0
  3472  002F7E  0100               	movlb	0	; () banked
  3473  002F80  6F67               	movwf	(?_Estados+1)& (0+255),b
  3474  002F82  0E03               	movlw	3
  3475  002F84  6F66               	movwf	?_Estados& (0+255),b
  3476  002F86                     l517:
  3477  002F86  0012               	return		;funcret
  3478  002F88                     __end_of_Estados:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _ReadLUZ *****************
  3482 ;; Defined at:
  3483 ;;		line 21 in file "Sensor_luz.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  2    0[COMRAM] unsigned short 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3497 ;;      Params:         2       0       0       0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3499 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3500 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3501 ;;Total ram usage:        4 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_Estados
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text19
  3511  0040C8                     __ptext19:
  3512                           	callstack 0
  3513  0040C8                     _ReadLUZ:
  3514                           	callstack 29
  3515  0040C8                     
  3516                           ;Sensor_luz.c: 23:     TRISD = 0x00;
  3517  0040C8  0E00               	movlw	0
  3518  0040CA  6E95               	movwf	149,c	;volatile
  3519  0040CC                     
  3520                           ;Sensor_luz.c: 24:     TRISA = 0xFF;
  3521  0040CC  6892               	setf	146,c	;volatile
  3522                           
  3523                           ;Sensor_luz.c: 26:     OSCCONbits.IRCF = 0b111;
  3524  0040CE  0E70               	movlw	112
  3525  0040D0  12D3               	iorwf	211,f,c	;volatile
  3526                           
  3527                           ;Sensor_luz.c: 27:     OSCCONbits.SCS = 0b10;
  3528  0040D2  50D3               	movf	211,w,c	;volatile
  3529  0040D4  0BFC               	andlw	-4
  3530  0040D6  0902               	iorlw	2
  3531  0040D8  6ED3               	movwf	211,c	;volatile
  3532                           
  3533                           ;Sensor_luz.c: 30:     ADCON1bits.PCFG = 0b1101;
  3534  0040DA  50C1               	movf	193,w,c	;volatile
  3535  0040DC  0BF0               	andlw	-16
  3536  0040DE  090D               	iorlw	13
  3537  0040E0  6EC1               	movwf	193,c	;volatile
  3538                           
  3539                           ;Sensor_luz.c: 31:     ADCON1bits.VCFG = 0b00;
  3540  0040E2  0ECF               	movlw	-49
  3541  0040E4  16C1               	andwf	193,f,c	;volatile
  3542                           
  3543                           ;Sensor_luz.c: 32:     ADCON0bits.CHS = 0b0001;
  3544  0040E6  50C2               	movf	194,w,c	;volatile
  3545  0040E8  0BC3               	andlw	-61
  3546  0040EA  0904               	iorlw	4
  3547  0040EC  6EC2               	movwf	194,c	;volatile
  3548                           
  3549                           ;Sensor_luz.c: 33:     ADCON2bits.ACQT = 0b010;
  3550  0040EE  50C0               	movf	192,w,c	;volatile
  3551  0040F0  0BC7               	andlw	-57
  3552  0040F2  0910               	iorlw	16
  3553  0040F4  6EC0               	movwf	192,c	;volatile
  3554                           
  3555                           ;Sensor_luz.c: 34:     ADCON2bits.ADCS = 0b001;
  3556  0040F6  50C0               	movf	192,w,c	;volatile
  3557  0040F8  0BF8               	andlw	-8
  3558  0040FA  0901               	iorlw	1
  3559  0040FC  6EC0               	movwf	192,c	;volatile
  3560  0040FE                     
  3561                           ;Sensor_luz.c: 35:     ADCON2bits.ADFM = 1;
  3562  0040FE  8EC0               	bsf	192,7,c	;volatile
  3563  004100                     
  3564                           ;Sensor_luz.c: 36:     ADCON0bits.ADON = 1;
  3565  004100  80C2               	bsf	194,0,c	;volatile
  3566  004102                     
  3567                           ;Sensor_luz.c: 39:         ADCON0bits.GO_DONE = 1;
  3568  004102  82C2               	bsf	194,1,c	;volatile
  3569  004104                     l217:
  3570  004104  B2C2               	btfsc	194,1,c	;volatile
  3571  004106  EF87  F020         	goto	u6021
  3572  00410A  EF89  F020         	goto	u6020
  3573  00410E                     u6021:
  3574  00410E  EF82  F020         	goto	l217
  3575  004112                     u6020:
  3576  004112                     
  3577                           ;Sensor_luz.c: 41:         result = ADRESH;
  3578  004112  CFC4 F0FA          	movff	4036,_result	;volatile
  3579  004116  0100               	movlb	0	; () banked
  3580  004118  6BFB               	clrf	(_result+1)& (0+255),b
  3581  00411A                     
  3582                           ; BSR set to: 0
  3583                           ;Sensor_luz.c: 42:         result = (result << 8) + ADRESL;
  3584  00411A  51FA               	movf	_result& (0+255),w,b
  3585  00411C  6E03               	movwf	??_ReadLUZ^0,c
  3586  00411E  50C3               	movf	195,w,c	;volatile
  3587  004120  6FFA               	movwf	_result& (0+255),b
  3588  004122  C003  F0FB         	movff	??_ReadLUZ,_result+1
  3589  004126                     
  3590                           ; BSR set to: 0
  3591                           ;Sensor_luz.c: 44:         return result;
  3592  004126  C0FA  F001         	movff	_result,?_ReadLUZ
  3593  00412A  C0FB  F002         	movff	_result+1,?_ReadLUZ+1
  3594  00412E                     
  3595                           ; BSR set to: 0
  3596  00412E  0012               	return		;funcret
  3597  004130                     __end_of_ReadLUZ:
  3598                           	callstack 0
  3599                           
  3600 ;; *************** function _ReadADC *****************
  3601 ;; Defined at:
  3602 ;;		line 22 in file "Temperatura.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  result          2    4[BANK0 ] unsigned short 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  2    0[BANK0 ] unsigned short 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3616 ;;      Params:         0       2       0       0       0       0       0       0       0
  3617 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3618 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3619 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3620 ;;Total ram usage:        6 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 1
  3623 ;; This function calls:
  3624 ;;		___fladd
  3625 ;;		___fldiv
  3626 ;;		___flmul
  3627 ;;		___fltol
  3628 ;;		___xxtofl
  3629 ;; This function is called by:
  3630 ;;		_Estados
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text20
  3635  003840                     __ptext20:
  3636                           	callstack 0
  3637  003840                     _ReadADC:
  3638                           	callstack 28
  3639  003840                     
  3640                           ;Temperatura.c: 24:     uint16_t result;;Temperatura.c: 26:     TRISD = 0x00;
  3641  003840  0E00               	movlw	0
  3642  003842  6E95               	movwf	149,c	;volatile
  3643  003844                     
  3644                           ;Temperatura.c: 27:     TRISA = 0xFF;
  3645  003844  6892               	setf	146,c	;volatile
  3646                           
  3647                           ;Temperatura.c: 29:     OSCCONbits.IRCF = 0b111;
  3648  003846  0E70               	movlw	112
  3649  003848  12D3               	iorwf	211,f,c	;volatile
  3650                           
  3651                           ;Temperatura.c: 30:     OSCCONbits.SCS = 0b10;
  3652  00384A  50D3               	movf	211,w,c	;volatile
  3653  00384C  0BFC               	andlw	-4
  3654  00384E  0902               	iorlw	2
  3655  003850  6ED3               	movwf	211,c	;volatile
  3656                           
  3657                           ;Temperatura.c: 33:     ADCON1bits.PCFG = 0b1110;
  3658  003852  50C1               	movf	193,w,c	;volatile
  3659  003854  0BF0               	andlw	-16
  3660  003856  090E               	iorlw	14
  3661  003858  6EC1               	movwf	193,c	;volatile
  3662                           
  3663                           ;Temperatura.c: 34:     ADCON1bits.VCFG = 0b00;
  3664  00385A  0ECF               	movlw	-49
  3665  00385C  16C1               	andwf	193,f,c	;volatile
  3666                           
  3667                           ;Temperatura.c: 35:     ADCON0bits.CHS = 0b0000;
  3668  00385E  0EC3               	movlw	-61
  3669  003860  16C2               	andwf	194,f,c	;volatile
  3670                           
  3671                           ;Temperatura.c: 36:     ADCON2bits.ACQT = 0b010;
  3672  003862  50C0               	movf	192,w,c	;volatile
  3673  003864  0BC7               	andlw	-57
  3674  003866  0910               	iorlw	16
  3675  003868  6EC0               	movwf	192,c	;volatile
  3676                           
  3677                           ;Temperatura.c: 37:     ADCON2bits.ADCS = 0b001;
  3678  00386A  50C0               	movf	192,w,c	;volatile
  3679  00386C  0BF8               	andlw	-8
  3680  00386E  0901               	iorlw	1
  3681  003870  6EC0               	movwf	192,c	;volatile
  3682  003872                     
  3683                           ;Temperatura.c: 38:     ADCON2bits.ADFM = 1;
  3684  003872  8EC0               	bsf	192,7,c	;volatile
  3685  003874                     
  3686                           ;Temperatura.c: 39:     ADCON0bits.ADON = 1;
  3687  003874  80C2               	bsf	194,0,c	;volatile
  3688  003876                     
  3689                           ;Temperatura.c: 42:         ADCON0bits.GO_DONE = 1;
  3690  003876  82C2               	bsf	194,1,c	;volatile
  3691  003878                     l172:
  3692  003878  B2C2               	btfsc	194,1,c	;volatile
  3693  00387A  EF41  F01C         	goto	u6011
  3694  00387E  EF43  F01C         	goto	u6010
  3695  003882                     u6011:
  3696  003882  EF3C  F01C         	goto	l172
  3697  003886                     u6010:
  3698  003886                     
  3699                           ;Temperatura.c: 44:         result = ADRESH;
  3700  003886  CFC4 F064          	movff	4036,ReadADC@result	;volatile
  3701  00388A  0100               	movlb	0	; () banked
  3702  00388C  6B65               	clrf	(ReadADC@result+1)& (0+255),b
  3703  00388E                     
  3704                           ; BSR set to: 0
  3705                           ;Temperatura.c: 45:         result = (result << 8) + ADRESL;
  3706  00388E  5164               	movf	ReadADC@result& (0+255),w,b
  3707  003890  6F62               	movwf	??_ReadADC& (0+255),b
  3708  003892  50C3               	movf	195,w,c	;volatile
  3709  003894  6F64               	movwf	ReadADC@result& (0+255),b
  3710  003896  C062  F065         	movff	??_ReadADC,ReadADC@result+1
  3711  00389A                     
  3712                           ; BSR set to: 0
  3713                           ;Temperatura.c: 46:         result = ((result*500.0)/1023.0)-49.5;
  3714  00389A  0E00               	movlw	0
  3715  00389C  6E49               	movwf	___fladd@a^0,c
  3716  00389E  0E00               	movlw	0
  3717  0038A0  6E4A               	movwf	(___fladd@a+1)^0,c
  3718  0038A2  0E46               	movlw	70
  3719  0038A4  6E4B               	movwf	(___fladd@a+2)^0,c
  3720  0038A6  0EC2               	movlw	194
  3721  0038A8  6E4C               	movwf	(___fladd@a+3)^0,c
  3722  0038AA  0E00               	movlw	0
  3723  0038AC  6E30               	movwf	___fldiv@a^0,c
  3724  0038AE  0EC0               	movlw	192
  3725  0038B0  6E31               	movwf	(___fldiv@a+1)^0,c
  3726  0038B2  0E7F               	movlw	127
  3727  0038B4  6E32               	movwf	(___fldiv@a+2)^0,c
  3728  0038B6  0E44               	movlw	68
  3729  0038B8  6E33               	movwf	(___fldiv@a+3)^0,c
  3730  0038BA  0E00               	movlw	0
  3731  0038BC  6E17               	movwf	___flmul@a^0,c
  3732  0038BE  0E00               	movlw	0
  3733  0038C0  6E18               	movwf	(___flmul@a+1)^0,c
  3734  0038C2  0EFA               	movlw	250
  3735  0038C4  6E19               	movwf	(___flmul@a+2)^0,c
  3736  0038C6  0E43               	movlw	67
  3737  0038C8  6E1A               	movwf	(___flmul@a+3)^0,c
  3738  0038CA  C064  F005         	movff	ReadADC@result,___xxtofl@val
  3739  0038CE  C065  F006         	movff	ReadADC@result+1,___xxtofl@val+1
  3740  0038D2  6A07               	clrf	(___xxtofl@val+2)^0,c
  3741  0038D4  6A08               	clrf	(___xxtofl@val+3)^0,c
  3742  0038D6  0E00               	movlw	0
  3743  0038D8  ECCD  F018         	call	___xxtofl
  3744  0038DC  C005  F013         	movff	?___xxtofl,___flmul@b
  3745  0038E0  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  3746  0038E4  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  3747  0038E8  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  3748  0038EC  ECBE  F00F         	call	___flmul	;wreg free
  3749  0038F0  C013  F02C         	movff	?___flmul,___fldiv@b
  3750  0038F4  C014  F02D         	movff	?___flmul+1,___fldiv@b+1
  3751  0038F8  C015  F02E         	movff	?___flmul+2,___fldiv@b+2
  3752  0038FC  C016  F02F         	movff	?___flmul+3,___fldiv@b+3
  3753  003900  ECD3  F011         	call	___fldiv	;wreg free
  3754  003904  C02C  F045         	movff	?___fldiv,___fladd@b
  3755  003908  C02D  F046         	movff	?___fldiv+1,___fladd@b+1
  3756  00390C  C02E  F047         	movff	?___fldiv+2,___fladd@b+2
  3757  003910  C02F  F048         	movff	?___fldiv+3,___fladd@b+3
  3758  003914  EC5E  F00D         	call	___fladd	;wreg free
  3759  003918  C045  F055         	movff	?___fladd,___fltol@f1
  3760  00391C  C046  F056         	movff	?___fladd+1,___fltol@f1+1
  3761  003920  C047  F057         	movff	?___fladd+2,___fltol@f1+2
  3762  003924  C048  F058         	movff	?___fladd+3,___fltol@f1+3
  3763  003928  EC1B  F01B         	call	___fltol	;wreg free
  3764  00392C  C055  F064         	movff	?___fltol,ReadADC@result
  3765  003930  C056  F065         	movff	?___fltol+1,ReadADC@result+1
  3766  003934                     
  3767                           ;Temperatura.c: 48:         return result;
  3768  003934  C064  F060         	movff	ReadADC@result,?_ReadADC
  3769  003938  C065  F061         	movff	ReadADC@result+1,?_ReadADC+1
  3770  00393C  0012               	return		;funcret
  3771  00393E                     __end_of_ReadADC:
  3772                           	callstack 0
  3773                           
  3774 ;; *************** function ___xxtofl *****************
  3775 ;; Defined at:
  3776 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  sign            1    wreg     unsigned char 
  3779 ;;  val             4    4[COMRAM] long 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  sign            1   12[COMRAM] unsigned char 
  3782 ;;  arg             4   14[COMRAM] unsigned long 
  3783 ;;  exp             1   13[COMRAM] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  4    4[COMRAM] unsigned char 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3793 ;;      Params:         4       0       0       0       0       0       0       0       0
  3794 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3795 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3796 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3797 ;;Total ram usage:       14 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_ReadADC
  3803 ;;		_Estados
  3804 ;;		_USART_Init
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text21
  3809  00319A                     __ptext21:
  3810                           	callstack 0
  3811  00319A                     ___xxtofl:
  3812                           	callstack 29
  3813                           
  3814                           ;incstack = 0
  3815                           ;___xxtofl@sign stored from wreg
  3816  00319A  6E0D               	movwf	___xxtofl@sign^0,c
  3817  00319C  500D               	movf	___xxtofl@sign^0,w,c
  3818  00319E  B4D8               	btfsc	status,2,c
  3819  0031A0  EFD4  F018         	goto	u5871
  3820  0031A4  EFD6  F018         	goto	u5870
  3821  0031A8                     u5871:
  3822  0031A8  EFF8  F018         	goto	l1251
  3823  0031AC                     u5870:
  3824  0031AC  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  3825  0031AE  EFDD  F018         	goto	u5880
  3826  0031B2  EFDB  F018         	goto	u5881
  3827  0031B6                     u5881:
  3828  0031B6  EFF8  F018         	goto	l1251
  3829  0031BA                     u5880:
  3830  0031BA  C005  F009         	movff	___xxtofl@val,??___xxtofl
  3831  0031BE  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  3832  0031C2  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  3833  0031C6  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  3834  0031CA  1E09               	comf	??___xxtofl^0,f,c
  3835  0031CC  1E0A               	comf	(??___xxtofl+1)^0,f,c
  3836  0031CE  1E0B               	comf	(??___xxtofl+2)^0,f,c
  3837  0031D0  1E0C               	comf	(??___xxtofl+3)^0,f,c
  3838  0031D2  2A09               	incf	??___xxtofl^0,f,c
  3839  0031D4  0E00               	movlw	0
  3840  0031D6  220A               	addwfc	(??___xxtofl+1)^0,f,c
  3841  0031D8  220B               	addwfc	(??___xxtofl+2)^0,f,c
  3842  0031DA  220C               	addwfc	(??___xxtofl+3)^0,f,c
  3843  0031DC  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  3844  0031E0  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  3845  0031E4  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  3846  0031E8  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  3847  0031EC  EF00  F019         	goto	l5338
  3848  0031F0                     l1251:
  3849  0031F0  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  3850  0031F4  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3851  0031F8  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3852  0031FC  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3853  003200                     l5338:
  3854  003200  5005               	movf	___xxtofl@val^0,w,c
  3855  003202  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  3856  003204  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  3857  003206  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  3858  003208  A4D8               	btfss	status,2,c
  3859  00320A  EF09  F019         	goto	u5891
  3860  00320E  EF0B  F019         	goto	u5890
  3861  003212                     u5891:
  3862  003212  EF15  F019         	goto	l5344
  3863  003216                     u5890:
  3864  003216  0E00               	movlw	0
  3865  003218  6E05               	movwf	?___xxtofl^0,c
  3866  00321A  0E00               	movlw	0
  3867  00321C  6E06               	movwf	(?___xxtofl+1)^0,c
  3868  00321E  0E00               	movlw	0
  3869  003220  6E07               	movwf	(?___xxtofl+2)^0,c
  3870  003222  0E00               	movlw	0
  3871  003224  6E08               	movwf	(?___xxtofl+3)^0,c
  3872  003226  EFA6  F019         	goto	l1254
  3873  00322A                     l5344:
  3874  00322A  0E96               	movlw	150
  3875  00322C  6E0E               	movwf	___xxtofl@exp^0,c
  3876  00322E  EF1F  F019         	goto	l5348
  3877  003232                     l5346:
  3878  003232  2A0E               	incf	___xxtofl@exp^0,f,c
  3879  003234  90D8               	bcf	status,0,c
  3880  003236  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  3881  003238  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  3882  00323A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  3883  00323C  320F               	rrcf	___xxtofl@arg^0,f,c
  3884  00323E                     l5348:
  3885  00323E  0E00               	movlw	0
  3886  003240  140F               	andwf	___xxtofl@arg^0,w,c
  3887  003242  6E09               	movwf	??___xxtofl^0,c
  3888  003244  0E00               	movlw	0
  3889  003246  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  3890  003248  6E0A               	movwf	(??___xxtofl+1)^0,c
  3891  00324A  0E00               	movlw	0
  3892  00324C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  3893  00324E  6E0B               	movwf	(??___xxtofl+2)^0,c
  3894  003250  0EFE               	movlw	254
  3895  003252  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  3896  003254  6E0C               	movwf	(??___xxtofl+3)^0,c
  3897  003256  5009               	movf	??___xxtofl^0,w,c
  3898  003258  100A               	iorwf	(??___xxtofl+1)^0,w,c
  3899  00325A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  3900  00325C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  3901  00325E  A4D8               	btfss	status,2,c
  3902  003260  EF34  F019         	goto	u5901
  3903  003264  EF36  F019         	goto	u5900
  3904  003268                     u5901:
  3905  003268  EF19  F019         	goto	l5346
  3906  00326C                     u5900:
  3907  00326C  EF44  F019         	goto	l1258
  3908  003270                     l5350:
  3909  003270  2A0E               	incf	___xxtofl@exp^0,f,c
  3910  003272  0E01               	movlw	1
  3911  003274  260F               	addwf	___xxtofl@arg^0,f,c
  3912  003276  0E00               	movlw	0
  3913  003278  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  3914  00327A  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  3915  00327C  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  3916  00327E  90D8               	bcf	status,0,c
  3917  003280  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  3918  003282  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  3919  003284  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  3920  003286  320F               	rrcf	___xxtofl@arg^0,f,c
  3921  003288                     l1258:
  3922  003288  0E00               	movlw	0
  3923  00328A  140F               	andwf	___xxtofl@arg^0,w,c
  3924  00328C  6E09               	movwf	??___xxtofl^0,c
  3925  00328E  0E00               	movlw	0
  3926  003290  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  3927  003292  6E0A               	movwf	(??___xxtofl+1)^0,c
  3928  003294  0E00               	movlw	0
  3929  003296  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  3930  003298  6E0B               	movwf	(??___xxtofl+2)^0,c
  3931  00329A  0EFF               	movlw	255
  3932  00329C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  3933  00329E  6E0C               	movwf	(??___xxtofl+3)^0,c
  3934  0032A0  5009               	movf	??___xxtofl^0,w,c
  3935  0032A2  100A               	iorwf	(??___xxtofl+1)^0,w,c
  3936  0032A4  100B               	iorwf	(??___xxtofl+2)^0,w,c
  3937  0032A6  100C               	iorwf	(??___xxtofl+3)^0,w,c
  3938  0032A8  A4D8               	btfss	status,2,c
  3939  0032AA  EF59  F019         	goto	u5911
  3940  0032AE  EF5B  F019         	goto	u5910
  3941  0032B2                     u5911:
  3942  0032B2  EF38  F019         	goto	l5350
  3943  0032B6                     u5910:
  3944  0032B6  EF63  F019         	goto	l5358
  3945  0032BA                     l5356:
  3946  0032BA  060E               	decf	___xxtofl@exp^0,f,c
  3947  0032BC  90D8               	bcf	status,0,c
  3948  0032BE  360F               	rlcf	___xxtofl@arg^0,f,c
  3949  0032C0  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  3950  0032C2  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  3951  0032C4  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  3952  0032C6                     l5358:
  3953  0032C6  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  3954  0032C8  EF68  F019         	goto	u5921
  3955  0032CC  EF6A  F019         	goto	u5920
  3956  0032D0                     u5921:
  3957  0032D0  EF72  F019         	goto	l1265
  3958  0032D4                     u5920:
  3959  0032D4  0E02               	movlw	2
  3960  0032D6  600E               	cpfslt	___xxtofl@exp^0,c
  3961  0032D8  EF70  F019         	goto	u5931
  3962  0032DC  EF72  F019         	goto	u5930
  3963  0032E0                     u5931:
  3964  0032E0  EF5D  F019         	goto	l5356
  3965  0032E4                     u5930:
  3966  0032E4                     l1265:
  3967  0032E4  B00E               	btfsc	___xxtofl@exp^0,0,c
  3968  0032E6  EF77  F019         	goto	u5941
  3969  0032EA  EF79  F019         	goto	u5940
  3970  0032EE                     u5941:
  3971  0032EE  EF7A  F019         	goto	l5364
  3972  0032F2                     u5940:
  3973  0032F2  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  3974  0032F4                     l5364:
  3975  0032F4  90D8               	bcf	status,0,c
  3976  0032F6  320E               	rrcf	___xxtofl@exp^0,f,c
  3977  0032F8  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  3978  0032FC  6A0A               	clrf	(??___xxtofl+1)^0,c
  3979  0032FE  6A0B               	clrf	(??___xxtofl+2)^0,c
  3980  003300  6A0C               	clrf	(??___xxtofl+3)^0,c
  3981  003302  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  3982  003306  6A0B               	clrf	(??___xxtofl+2)^0,c
  3983  003308  6A0A               	clrf	(??___xxtofl+1)^0,c
  3984  00330A  6A09               	clrf	??___xxtofl^0,c
  3985  00330C  5009               	movf	??___xxtofl^0,w,c
  3986  00330E  120F               	iorwf	___xxtofl@arg^0,f,c
  3987  003310  500A               	movf	(??___xxtofl+1)^0,w,c
  3988  003312  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  3989  003314  500B               	movf	(??___xxtofl+2)^0,w,c
  3990  003316  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  3991  003318  500C               	movf	(??___xxtofl+3)^0,w,c
  3992  00331A  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  3993  00331C  500D               	movf	___xxtofl@sign^0,w,c
  3994  00331E  B4D8               	btfsc	status,2,c
  3995  003320  EF94  F019         	goto	u5951
  3996  003324  EF96  F019         	goto	u5950
  3997  003328                     u5951:
  3998  003328  EF9E  F019         	goto	l5374
  3999  00332C                     u5950:
  4000  00332C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  4001  00332E  EF9D  F019         	goto	u5960
  4002  003332  EF9B  F019         	goto	u5961
  4003  003336                     u5961:
  4004  003336  EF9E  F019         	goto	l5374
  4005  00333A                     u5960:
  4006  00333A  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  4007  00333C                     l5374:
  4008  00333C  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  4009  003340  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  4010  003344  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  4011  003348  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  4012  00334C                     l1254:
  4013  00334C  0012               	return		;funcret
  4014  00334E                     __end_of___xxtofl:
  4015                           	callstack 0
  4016                           
  4017 ;; *************** function _Cloudy_State *****************
  4018 ;; Defined at:
  4019 ;;		line 82 in file "Estados.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;		None
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4033 ;;      Params:         0       0       0       0       0       0       0       0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4036 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4037 ;;Total ram usage:        0 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 8
  4040 ;; This function calls:
  4041 ;;		_LCD_Char
  4042 ;;		_LCD_Command
  4043 ;;		_LCD_Custom_Char
  4044 ;;		_LCD_String_xy
  4045 ;;		_sprintf
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text22
  4052  004418                     __ptext22:
  4053                           	callstack 0
  4054  004418                     _Cloudy_State:
  4055                           	callstack 22
  4056  004418                     
  4057                           ;Estados.c: 83:     LATE0 = 1;
  4058  004418  808D               	bsf	3981,0,c	;volatile
  4059                           
  4060                           ;Estados.c: 84:     LATE1 = 1;
  4061  00441A  828D               	bsf	3981,1,c	;volatile
  4062                           
  4063                           ;Estados.c: 85:     LATE2 = 0;
  4064  00441C  948D               	bcf	3981,2,c	;volatile
  4065  00441E                     
  4066                           ;Estados.c: 86:     sprintf(Stemp, "%0.0fC", tempar);
  4067  00441E  0E5E               	movlw	low _Stemp
  4068  004420  0100               	movlb	0	; () banked
  4069  004422  6FCC               	movwf	sprintf@s& (0+255),b
  4070  004424  0E01               	movlw	high _Stemp
  4071  004426  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  4072  004428  0E0D               	movlw	low STR_19
  4073  00442A  6FCE               	movwf	sprintf@fmt& (0+255),b
  4074  00442C  0E08               	movlw	high STR_19
  4075  00442E  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  4076  004430  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  4077  004434  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  4078  004438  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  4079  00443C  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  4080  004440  EC39  F022         	call	_sprintf	;wreg free
  4081  004444                     
  4082                           ;Estados.c: 87:     LCD_String_xy(1, 0, Stemp);
  4083  004444  0E00               	movlw	0
  4084  004446  6E0B               	movwf	LCD_String_xy@pos^0,c
  4085  004448  0E5E               	movlw	low _Stemp
  4086  00444A  6E0C               	movwf	LCD_String_xy@msg^0,c
  4087  00444C  0E01               	movlw	high _Stemp
  4088  00444E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  4089  004450  0E01               	movlw	1
  4090  004452  ECB0  F023         	call	_LCD_String_xy
  4091  004456                     
  4092                           ;Estados.c: 88:     LCD_Custom_Char(0, character3);
  4093  004456  0ED5               	movlw	low _character3
  4094  004458  6E09               	movwf	LCD_Custom_Char@msg^0,c
  4095  00445A  0E01               	movlw	high _character3
  4096  00445C  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  4097  00445E  0E00               	movlw	0
  4098  004460  EC24  F023         	call	_LCD_Custom_Char
  4099                           
  4100                           ;Estados.c: 89:     LCD_Command(0xc0);
  4101  004464  0EC0               	movlw	192
  4102  004466  ECB3  F022         	call	_LCD_Command
  4103                           
  4104                           ;Estados.c: 90:     LCD_Char(0);
  4105  00446A  0E00               	movlw	0
  4106  00446C  ECD9  F022         	call	_LCD_Char
  4107  004470  0012               	return		;funcret
  4108  004472                     __end_of_Cloudy_State:
  4109                           	callstack 0
  4110                           
  4111 ;; *************** function _sprintf *****************
  4112 ;; Defined at:
  4113 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  s               2  108[BANK0 ] PTR unsigned char 
  4116 ;;		 -> Stemp(20), RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), 
  4117 ;;		 -> RTC_Calendario@hours(10), RTC_Calendario@mins(10), RTC_Calendario@secs(10), 
  4118 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  4119 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4120 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4121 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  f               6  118[BANK0 ] struct _IO_FILE
  4124 ;;  ap              2  116[BANK0 ] PTR void [1]
  4125 ;;		 -> ?_sprintf(2), 
  4126 ;;  ret             2    0        int 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  2  108[BANK0 ] int 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4136 ;;      Params:         0       8       0       0       0       0       0       0       0
  4137 ;;      Locals:         0       8       0       0       0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4139 ;;      Totals:         0      16       0       0       0       0       0       0       0
  4140 ;;Total ram usage:       16 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 7
  4143 ;; This function calls:
  4144 ;;		_vfprintf
  4145 ;; This function is called by:
  4146 ;;		_RTC_Calendario
  4147 ;;		_Sunny_State
  4148 ;;		_Cloudy_State
  4149 ;;		_Rainy_State
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text23
  4154  004472                     __ptext23:
  4155                           	callstack 0
  4156  004472                     _sprintf:
  4157                           	callstack 22
  4158  004472  0ED0               	movlw	low (?_sprintf+4)
  4159  004474  0100               	movlb	0	; () banked
  4160  004476  6FD4               	movwf	sprintf@ap& (0+255),b
  4161  004478  0E00               	movlw	high (?_sprintf+4)
  4162  00447A  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  4163  00447C  C0CC  F0D6         	movff	sprintf@s,sprintf@f
  4164  004480  C0CD  F0D7         	movff	sprintf@s+1,sprintf@f+1
  4165  004484                     
  4166                           ; BSR set to: 0
  4167  004484  0E00               	movlw	0
  4168  004486  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  4169  004488  0E00               	movlw	0
  4170  00448A  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  4171  00448C                     
  4172                           ; BSR set to: 0
  4173  00448C  0E00               	movlw	0
  4174  00448E  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  4175  004490  0E00               	movlw	0
  4176  004492  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  4177  004494                     
  4178                           ; BSR set to: 0
  4179  004494  0ED6               	movlw	low sprintf@f
  4180  004496  6FC4               	movwf	vfprintf@fp& (0+255),b
  4181  004498  0E00               	movlw	high sprintf@f
  4182  00449A  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  4183  00449C  C0CE  F0C6         	movff	sprintf@fmt,vfprintf@fmt
  4184  0044A0  C0CF  F0C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4185  0044A4  0ED4               	movlw	low sprintf@ap
  4186  0044A6  6FC8               	movwf	vfprintf@ap& (0+255),b
  4187  0044A8  0E00               	movlw	high sprintf@ap
  4188  0044AA  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  4189  0044AC  EC98  F020         	call	_vfprintf	;wreg free
  4190  0044B0  0100               	movlb	0	; () banked
  4191  0044B2  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  4192  0044B4  25CC               	addwf	sprintf@s& (0+255),w,b
  4193  0044B6  6ED9               	movwf	fsr2l,c
  4194  0044B8  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  4195  0044BA  21CD               	addwfc	(sprintf@s+1)& (0+255),w,b
  4196  0044BC  6EDA               	movwf	fsr2h,c
  4197  0044BE  0E00               	movlw	0
  4198  0044C0  6EDF               	movwf	indf2,c
  4199  0044C2                     
  4200                           ; BSR set to: 0
  4201  0044C2  0012               	return		;funcret
  4202  0044C4                     __end_of_sprintf:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function _vfprintf *****************
  4206 ;; Defined at:
  4207 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  fp              2  100[BANK0 ] PTR struct _IO_FILE
  4210 ;;		 -> sprintf@f(6), 
  4211 ;;  fmt             2  102[BANK0 ] PTR const unsigned char 
  4212 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4213 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4214 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4215 ;;  ap              2  104[BANK0 ] PTR PTR void 
  4216 ;;		 -> sprintf@ap(2), 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  cfmt            2  106[BANK0 ] PTR unsigned char 
  4219 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4220 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4221 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2  100[BANK0 ] int 
  4224 ;; Registers used:
  4225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4231 ;;      Params:         0       6       0       0       0       0       0       0       0
  4232 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4234 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4235 ;;Total ram usage:        8 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 6
  4238 ;; This function calls:
  4239 ;;		_vfpfcnvrt
  4240 ;; This function is called by:
  4241 ;;		_sprintf
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text24
  4246  004130                     __ptext24:
  4247                           	callstack 0
  4248  004130                     _vfprintf:
  4249                           	callstack 22
  4250  004130                     
  4251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4252  004130  C0C6  F0CA         	movff	vfprintf@fmt,vfprintf@cfmt
  4253  004134  C0C7  F0CB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4254  004138                     
  4255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4256  004138  0E00               	movlw	0
  4257  00413A  0100               	movlb	0	; () banked
  4258  00413C  6FF3               	movwf	(_nout+1)& (0+255),b
  4259  00413E  0E00               	movlw	0
  4260  004140  6FF2               	movwf	_nout& (0+255),b
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4263  004142  EFB6  F020         	goto	l5384
  4264  004146                     l5382:
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4268  004146  C0C4  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  4269  00414A  C0C5  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4270  00414E  0ECA               	movlw	low vfprintf@cfmt
  4271  004150  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  4272  004152  0E00               	movlw	high vfprintf@cfmt
  4273  004154  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4274  004156  C0C8  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  4275  00415A  C0C9  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4276  00415E  EC57  F00A         	call	_vfpfcnvrt	;wreg free
  4277  004162  0100               	movlb	0	; () banked
  4278  004164  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  4279  004166  27F2               	addwf	_nout& (0+255),f,b
  4280  004168  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4281  00416A  23F3               	addwfc	(_nout+1)& (0+255),f,b
  4282  00416C                     l5384:
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4286  00416C  C0CA  FFF6         	movff	vfprintf@cfmt,tblptrl
  4287  004170  C0CB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4288  004174                     	if	0	;tblptru may be non-zero
  4289  004174                     	endif
  4290  004174                     	if	0	;tblptru may be non-zero
  4291  004174                     	endif
  4292  004174  0008               	tblrd		*
  4293  004176  50F5               	movf	tablat,w,c
  4294  004178  0900               	iorlw	0
  4295  00417A  A4D8               	btfss	status,2,c
  4296  00417C  EFC2  F020         	goto	u5971
  4297  004180  EFC4  F020         	goto	u5970
  4298  004184                     u5971:
  4299  004184  EFA3  F020         	goto	l5382
  4300  004188                     u5970:
  4301  004188                     
  4302                           ; BSR set to: 0
  4303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4304  004188  C0F2  F0C4         	movff	_nout,?_vfprintf
  4305  00418C  C0F3  F0C5         	movff	_nout+1,?_vfprintf+1
  4306  004190                     
  4307                           ; BSR set to: 0
  4308  004190  0012               	return		;funcret
  4309  004192                     __end_of_vfprintf:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _vfpfcnvrt *****************
  4313 ;; Defined at:
  4314 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  4317 ;;		 -> sprintf@f(6), 
  4318 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  4319 ;;		 -> vfprintf@cfmt(2), 
  4320 ;;  ap              2   72[BANK0 ] PTR PTR void 
  4321 ;;		 -> sprintf@ap(2), 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  llu             8   78[BANK0 ] unsigned long long 
  4324 ;;  ll              8    0        long long 
  4325 ;;  f               4   92[BANK0 ] long long 
  4326 ;;  ct              3   96[BANK0 ] unsigned char [3]
  4327 ;;  vp              3    0        PTR void 
  4328 ;;  cp              3    0        PTR unsigned char 
  4329 ;;  done            2   86[BANK0 ] int 
  4330 ;;  i               2    0        int 
  4331 ;;  c               1   99[BANK0 ] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  2   68[BANK0 ] int 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4341 ;;      Params:         0       6       0       0       0       0       0       0       0
  4342 ;;      Locals:         0      22       0       0       0       0       0       0       0
  4343 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4344 ;;      Totals:         0      32       0       0       0       0       0       0       0
  4345 ;;Total ram usage:       32 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 5
  4348 ;; This function calls:
  4349 ;;		_atoi
  4350 ;;		_efgtoa
  4351 ;;		_fputc
  4352 ;;		_isdigit
  4353 ;;		_isupper
  4354 ;;		_strncmp
  4355 ;;		_tolower
  4356 ;;		_xtoa
  4357 ;; This function is called by:
  4358 ;;		_vfprintf
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text25
  4363  0014AE                     __ptext25:
  4364                           	callstack 0
  4365  0014AE                     _vfpfcnvrt:
  4366                           	callstack 22
  4367  0014AE                     
  4368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4369  0014AE  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4370  0014B2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4371  0014B6  CFDE FFF6          	movff	postinc2,tblptrl
  4372  0014BA  CFDD FFF7          	movff	postdec2,tblptrh
  4373  0014BE                     	if	0	;tblptru may be non-zero
  4374  0014BE                     	endif
  4375  0014BE                     	if	0	;tblptru may be non-zero
  4376  0014BE                     	endif
  4377  0014BE  0008               	tblrd		*
  4378  0014C0  50F5               	movf	tablat,w,c
  4379  0014C2  0A25               	xorlw	37
  4380  0014C4  A4D8               	btfss	status,2,c
  4381  0014C6  EF67  F00A         	goto	u5551
  4382  0014CA  EF69  F00A         	goto	u5550
  4383  0014CE                     u5551:
  4384  0014CE  EF42  F00D         	goto	l5220
  4385  0014D2                     u5550:
  4386  0014D2                     
  4387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4388  0014D2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4389  0014D6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4390  0014DA  2ADE               	incf	postinc2,f,c
  4391  0014DC  0E00               	movlw	0
  4392  0014DE  22DD               	addwfc	postdec2,f,c
  4393  0014E0                     
  4394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4395  0014E0  0E00               	movlw	0
  4396  0014E2  0100               	movlb	0	; () banked
  4397  0014E4  6FF5               	movwf	(_width+1)& (0+255),b
  4398  0014E6  0E00               	movlw	0
  4399  0014E8  6FF4               	movwf	_width& (0+255),b
  4400  0014EA  C0F4  F0F8         	movff	_width,_flags
  4401  0014EE  C0F5  F0F9         	movff	_width+1,_flags+1
  4402  0014F2                     
  4403                           ; BSR set to: 0
  4404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4405  0014F2  69F6               	setf	_prec& (0+255),b
  4406  0014F4  69F7               	setf	(_prec+1)& (0+255),b
  4407  0014F6                     
  4408                           ; BSR set to: 0
  4409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4410  0014F6  0E00               	movlw	0
  4411  0014F8  6FB7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4412  0014FA  0E00               	movlw	0
  4413  0014FC  6FB6               	movwf	vfpfcnvrt@done& (0+255),b
  4414                           
  4415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4416  0014FE  EFC7  F00A         	goto	l5128
  4417  001502                     l5102:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4421  001502  81F8               	bsf	_flags& (0+255),0,b
  4422  001504                     l5104:
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4426  001504  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4427  001508  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4428  00150C  2ADE               	incf	postinc2,f,c
  4429  00150E  0E00               	movlw	0
  4430  001510  22DD               	addwfc	postdec2,f,c
  4431                           
  4432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4433  001512  EFC7  F00A         	goto	l5128
  4434  001516                     l5106:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4438  001516  83F8               	bsf	_flags& (0+255),1,b
  4439  001518  EF82  F00A         	goto	l5104
  4440  00151C                     l5110:
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4444  00151C  85F8               	bsf	_flags& (0+255),2,b
  4445  00151E  EF82  F00A         	goto	l5104
  4446  001522                     l5114:
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4450  001522  87F8               	bsf	_flags& (0+255),3,b
  4451  001524  EF82  F00A         	goto	l5104
  4452  001528                     l5118:
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4456  001528  89F8               	bsf	_flags& (0+255),4,b
  4457  00152A  EF82  F00A         	goto	l5104
  4458  00152E                     l5122:
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4462  00152E  0E00               	movlw	0
  4463  001530  6FB7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4464  001532  0E01               	movlw	1
  4465  001534  6FB6               	movwf	vfpfcnvrt@done& (0+255),b
  4466                           
  4467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4468  001536  EFC7  F00A         	goto	l5128
  4469  00153A                     l5126:
  4470                           
  4471                           ; BSR set to: 0
  4472  00153A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4473  00153E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4474  001542  CFDE FFF6          	movff	postinc2,tblptrl
  4475  001546  CFDD FFF7          	movff	postdec2,tblptrh
  4476  00154A                     	if	0	;tblptru may be non-zero
  4477  00154A                     	endif
  4478  00154A                     	if	0	;tblptru may be non-zero
  4479  00154A                     	endif
  4480  00154A  0008               	tblrd		*
  4481  00154C  50F5               	movf	tablat,w,c
  4482  00154E  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4483  001550  6BAB               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4484                           
  4485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4486                           ; Switch size 1, requested type "simple"
  4487                           ; Number of cases is 1, Range of values is 0 to 0
  4488                           ; switch strategies available:
  4489                           ; Name         Instructions Cycles
  4490                           ; simple_byte            4     3 (average)
  4491                           ;	Chosen strategy is simple_byte
  4492  001552  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4493  001554  0A00               	xorlw	0	; case 0
  4494  001556  B4D8               	btfsc	status,2,c
  4495  001558  EFB0  F00A         	goto	l5878
  4496  00155C  EF97  F00A         	goto	l5122
  4497  001560                     l5878:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ; Switch size 1, requested type "simple"
  4501                           ; Number of cases is 5, Range of values is 32 to 48
  4502                           ; switch strategies available:
  4503                           ; Name         Instructions Cycles
  4504                           ; simple_byte           16     9 (average)
  4505                           ;	Chosen strategy is simple_byte
  4506  001560  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4507  001562  0A20               	xorlw	32	; case 32
  4508  001564  B4D8               	btfsc	status,2,c
  4509  001566  EF91  F00A         	goto	l5114
  4510  00156A  0A03               	xorlw	3	; case 35
  4511  00156C  B4D8               	btfsc	status,2,c
  4512  00156E  EF94  F00A         	goto	l5118
  4513  001572  0A08               	xorlw	8	; case 43
  4514  001574  B4D8               	btfsc	status,2,c
  4515  001576  EF8E  F00A         	goto	l5110
  4516  00157A  0A06               	xorlw	6	; case 45
  4517  00157C  B4D8               	btfsc	status,2,c
  4518  00157E  EF81  F00A         	goto	l5102
  4519  001582  0A1D               	xorlw	29	; case 48
  4520  001584  B4D8               	btfsc	status,2,c
  4521  001586  EF8B  F00A         	goto	l5106
  4522  00158A  EF97  F00A         	goto	l5122
  4523  00158E                     l5128:
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4527  00158E  51B6               	movf	vfpfcnvrt@done& (0+255),w,b
  4528  001590  11B7               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4529  001592  B4D8               	btfsc	status,2,c
  4530  001594  EFCE  F00A         	goto	u5561
  4531  001598  EFD0  F00A         	goto	u5560
  4532  00159C                     u5561:
  4533  00159C  EF9D  F00A         	goto	l5126
  4534  0015A0                     u5560:
  4535  0015A0                     
  4536                           ; BSR set to: 0
  4537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4538  0015A0  A1F8               	btfss	_flags& (0+255),0,b
  4539  0015A2  EFD5  F00A         	goto	u5571
  4540  0015A6  EFD7  F00A         	goto	u5570
  4541  0015AA                     u5571:
  4542  0015AA  EFD8  F00A         	goto	l5132
  4543  0015AE                     u5570:
  4544  0015AE                     
  4545                           ; BSR set to: 0
  4546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4547  0015AE  93F8               	bcf	_flags& (0+255),1,b
  4548  0015B0                     l5132:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  4552  0015B0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4553  0015B4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4554  0015B8  CFDE FFF6          	movff	postinc2,tblptrl
  4555  0015BC  CFDD FFF7          	movff	postdec2,tblptrh
  4556  0015C0                     	if	0	;tblptru may be non-zero
  4557  0015C0                     	endif
  4558  0015C0                     	if	0	;tblptru may be non-zero
  4559  0015C0                     	endif
  4560  0015C0  0008               	tblrd		*
  4561  0015C2  50F5               	movf	tablat,w,c
  4562  0015C4  0A2E               	xorlw	46
  4563  0015C6  A4D8               	btfss	status,2,c
  4564  0015C8  EFE8  F00A         	goto	u5581
  4565  0015CC  EFEA  F00A         	goto	u5580
  4566  0015D0                     u5581:
  4567  0015D0  EF68  F00B         	goto	l5152
  4568  0015D4                     u5580:
  4569  0015D4                     
  4570                           ; BSR set to: 0
  4571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  4572  0015D4  0E00               	movlw	0
  4573  0015D6  6FF7               	movwf	(_prec+1)& (0+255),b
  4574  0015D8  0E00               	movlw	0
  4575  0015DA  6FF6               	movwf	_prec& (0+255),b
  4576  0015DC                     
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  4579  0015DC  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4580  0015E0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4581  0015E4  2ADE               	incf	postinc2,f,c
  4582  0015E6  0E00               	movlw	0
  4583  0015E8  22DD               	addwfc	postdec2,f,c
  4584  0015EA                     
  4585                           ; BSR set to: 0
  4586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  4587  0015EA  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4588  0015EE  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4589  0015F2  CFDE FFF6          	movff	postinc2,tblptrl
  4590  0015F6  CFDD FFF7          	movff	postdec2,tblptrh
  4591  0015FA                     	if	0	;tblptru may be non-zero
  4592  0015FA                     	endif
  4593  0015FA                     	if	0	;tblptru may be non-zero
  4594  0015FA                     	endif
  4595  0015FA  0008               	tblrd		*
  4596  0015FC  50F5               	movf	tablat,w,c
  4597  0015FE  0A2A               	xorlw	42
  4598  001600  A4D8               	btfss	status,2,c
  4599  001602  EF05  F00B         	goto	u5591
  4600  001606  EF07  F00B         	goto	u5590
  4601  00160A                     u5591:
  4602  00160A  EF24  F00B         	goto	l5142
  4603  00160E                     u5590:
  4604  00160E                     
  4605                           ; BSR set to: 0
  4606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  4607  00160E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4608  001612  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4609  001616  2ADE               	incf	postinc2,f,c
  4610  001618  0E00               	movlw	0
  4611  00161A  22DD               	addwfc	postdec2,f,c
  4612                           
  4613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4614  00161C  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4615  001620  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4616  001624  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4617  001628  0E02               	movlw	2
  4618  00162A  26DE               	addwf	postinc2,f,c
  4619  00162C  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4620  001630  0E00               	movlw	0
  4621  001632  22DD               	addwfc	postdec2,f,c
  4622  001634  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4623  001638  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4624  00163C  CFDE F0F6          	movff	postinc2,_prec
  4625  001640  CFDD F0F7          	movff	postdec2,_prec+1
  4626                           
  4627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  4628  001644  EF68  F00B         	goto	l5152
  4629  001648                     l5142:
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  4633  001648  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4634  00164C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4635  001650  CFDE F008          	movff	postinc2,atoi@s
  4636  001654  CFDD F009          	movff	postdec2,atoi@s+1
  4637  001658  ECA7  F019         	call	_atoi	;wreg free
  4638  00165C  C008  F0F6         	movff	?_atoi,_prec
  4639  001660  C009  F0F7         	movff	?_atoi+1,_prec+1
  4640                           
  4641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4642  001664  EF3B  F00B         	goto	l5146
  4643  001668                     l5144:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  4647  001668  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4648  00166C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4649  001670  2ADE               	incf	postinc2,f,c
  4650  001672  0E00               	movlw	0
  4651  001674  22DD               	addwfc	postdec2,f,c
  4652  001676                     l5146:
  4653  001676  0ED0               	movlw	208
  4654  001678  0100               	movlb	0	; () banked
  4655  00167A  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4656  00167C  0EFF               	movlw	255
  4657  00167E  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4658  001680  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4659  001684  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4660  001688  CFDE FFF6          	movff	postinc2,tblptrl
  4661  00168C  CFDD FFF7          	movff	postdec2,tblptrh
  4662  001690                     	if	0	;tblptru may be non-zero
  4663  001690                     	endif
  4664  001690                     	if	0	;tblptru may be non-zero
  4665  001690                     	endif
  4666  001690  0008               	tblrd		*
  4667  001692  50F5               	movf	tablat,w,c
  4668  001694  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4669  001696  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4670  001698  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4671  00169A  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4672  00169C  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4673  00169E  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4674  0016A0  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4675  0016A2  E10A               	bnz	u5600
  4676  0016A4  0E0A               	movlw	10
  4677  0016A6  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4678  0016A8  A0D8               	btfss	status,0,c
  4679  0016AA  EF59  F00B         	goto	u5601
  4680  0016AE  EF5C  F00B         	goto	u5600
  4681  0016B2                     u5601:
  4682  0016B2  0E01               	movlw	1
  4683  0016B4  EF5D  F00B         	goto	u5610
  4684  0016B8                     u5600:
  4685  0016B8  0E00               	movlw	0
  4686  0016BA                     u5610:
  4687  0016BA  6FB8               	movwf	_vfpfcnvrt$1538& (0+255),b
  4688  0016BC  6BB9               	clrf	(_vfpfcnvrt$1538+1)& (0+255),b
  4689  0016BE                     
  4690                           ; BSR set to: 0
  4691  0016BE  51B8               	movf	_vfpfcnvrt$1538& (0+255),w,b
  4692  0016C0  11B9               	iorwf	(_vfpfcnvrt$1538+1)& (0+255),w,b
  4693  0016C2  A4D8               	btfss	status,2,c
  4694  0016C4  EF66  F00B         	goto	u5621
  4695  0016C8  EF68  F00B         	goto	u5620
  4696  0016CC                     u5621:
  4697  0016CC  EF34  F00B         	goto	l5144
  4698  0016D0                     u5620:
  4699  0016D0                     l5152:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  4703  0016D0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4704  0016D4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4705  0016D8  CFDE FFF6          	movff	postinc2,tblptrl
  4706  0016DC  CFDD FFF7          	movff	postdec2,tblptrh
  4707  0016E0                     	if	0	;tblptru may be non-zero
  4708  0016E0                     	endif
  4709  0016E0                     	if	0	;tblptru may be non-zero
  4710  0016E0                     	endif
  4711  0016E0  0008               	tblrd		*
  4712  0016E2  50F5               	movf	tablat,w,c
  4713  0016E4  6E07               	movwf	tolower@c^0,c
  4714  0016E6  6A08               	clrf	(tolower@c+1)^0,c
  4715  0016E8  ECC9  F020         	call	_tolower	;wreg free
  4716  0016EC  5007               	movf	?_tolower^0,w,c
  4717  0016EE  0100               	movlb	0	; () banked
  4718  0016F0  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  4719  0016F2                     
  4720                           ; BSR set to: 0
  4721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  4722  0016F2  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  4723  0016F4  B4D8               	btfsc	status,2,c
  4724  0016F6  EF7F  F00B         	goto	u5631
  4725  0016FA  EF81  F00B         	goto	u5630
  4726  0016FE                     u5631:
  4727  0016FE  EFBB  F00B         	goto	l5162
  4728  001702                     u5630:
  4729  001702                     
  4730                           ; BSR set to: 0
  4731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  4732  001702  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4733  001706  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4734  00170A  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  4735  00170E  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  4736  001712  0E01               	movlw	1
  4737  001714  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  4738  001716  0E00               	movlw	0
  4739  001718  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4740  00171A  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4741  00171E  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4742  001722                     	if	0	;tblptru may be non-zero
  4743  001722                     	endif
  4744  001722                     	if	0	;tblptru may be non-zero
  4745  001722                     	endif
  4746  001722  0008               	tblrd		*
  4747  001724  50F5               	movf	tablat,w,c
  4748  001726  6E07               	movwf	tolower@c^0,c
  4749  001728  6A08               	clrf	(tolower@c+1)^0,c
  4750  00172A  ECC9  F020         	call	_tolower	;wreg free
  4751  00172E  5007               	movf	?_tolower^0,w,c
  4752  001730  0100               	movlb	0	; () banked
  4753  001732  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4754  001734                     
  4755                           ; BSR set to: 0
  4756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  4757  001734  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4758  001736  B4D8               	btfsc	status,2,c
  4759  001738  EFA0  F00B         	goto	u5641
  4760  00173C  EFA2  F00B         	goto	u5640
  4761  001740                     u5641:
  4762  001740  EFBB  F00B         	goto	l5162
  4763  001744                     u5640:
  4764  001744                     
  4765                           ; BSR set to: 0
  4766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  4767  001744  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4768  001748  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4769  00174C  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  4770  001750  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  4771  001754  0E02               	movlw	2
  4772  001756  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  4773  001758  0E00               	movlw	0
  4774  00175A  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4775  00175C  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4776  001760  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4777  001764                     	if	0	;tblptru may be non-zero
  4778  001764                     	endif
  4779  001764                     	if	0	;tblptru may be non-zero
  4780  001764                     	endif
  4781  001764  0008               	tblrd		*
  4782  001766  50F5               	movf	tablat,w,c
  4783  001768  6E07               	movwf	tolower@c^0,c
  4784  00176A  6A08               	clrf	(tolower@c+1)^0,c
  4785  00176C  ECC9  F020         	call	_tolower	;wreg free
  4786  001770  5007               	movf	?_tolower^0,w,c
  4787  001772  0100               	movlb	0	; () banked
  4788  001774  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4789  001776                     l5162:
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  4793  001776  0E66               	movlw	102
  4794  001778  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4795  00177A  A4D8               	btfss	status,2,c
  4796  00177C  EFC2  F00B         	goto	u5651
  4797  001780  EFC4  F00B         	goto	u5650
  4798  001784                     u5651:
  4799  001784  EF04  F00C         	goto	l5174
  4800  001788                     u5650:
  4801  001788                     
  4802                           ; BSR set to: 0
  4803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  4804  001788  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4805  00178C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4806  001790  CFDE FFF6          	movff	postinc2,tblptrl
  4807  001794  CFDD FFF7          	movff	postdec2,tblptrh
  4808  001798                     	if	0	;tblptru may be non-zero
  4809  001798                     	endif
  4810  001798                     	if	0	;tblptru may be non-zero
  4811  001798                     	endif
  4812  001798  0008               	tblrd		*
  4813  00179A  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4814  00179E                     
  4815                           ; BSR set to: 0
  4816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  4817  00179E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4818  0017A2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4819  0017A6  2ADE               	incf	postinc2,f,c
  4820  0017A8  0E00               	movlw	0
  4821  0017AA  22DD               	addwfc	postdec2,f,c
  4822  0017AC                     
  4823                           ; BSR set to: 0
  4824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4825  0017AC  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4826  0017B0  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4827  0017B4  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4828  0017B8  0E04               	movlw	4
  4829  0017BA  26DE               	addwf	postinc2,f,c
  4830  0017BC  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4831  0017C0  0E00               	movlw	0
  4832  0017C2  22DD               	addwfc	postdec2,f,c
  4833  0017C4  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4834  0017C8  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4835  0017CC  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4836  0017D0  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4837  0017D4  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4838  0017D8  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4839  0017DC                     l5170:
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  4843  0017DC  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  4844  0017E0  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4845  0017E4  C0BC  F062         	movff	vfpfcnvrt@f,efgtoa@f
  4846  0017E8  C0BD  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4847  0017EC  C0BE  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4848  0017F0  C0BF  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4849  0017F4  C0C3  F066         	movff	vfpfcnvrt@c,efgtoa@c
  4850  0017F8  EC2B  F004         	call	_efgtoa	;wreg free
  4851  0017FC  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  4852  001800  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4853  001804  EF5D  F00D         	goto	l1476
  4854  001808                     l5174:
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4858  001808  0EC0               	movlw	low vfpfcnvrt@ct
  4859  00180A  6E01               	movwf	strncmp@_l^0,c
  4860  00180C  0E00               	movlw	high vfpfcnvrt@ct
  4861  00180E  6E02               	movwf	(strncmp@_l+1)^0,c
  4862  001810  0E4C               	movlw	low STR_31
  4863  001812  6E03               	movwf	strncmp@_r^0,c
  4864  001814  0E08               	movlw	high STR_31
  4865  001816  6E04               	movwf	(strncmp@_r+1)^0,c
  4866  001818  0E00               	movlw	0
  4867  00181A  6E06               	movwf	(strncmp@n+1)^0,c
  4868  00181C  0E02               	movlw	2
  4869  00181E  6E05               	movwf	strncmp@n^0,c
  4870  001820  EC1E  F01D         	call	_strncmp	;wreg free
  4871  001824  5001               	movf	?_strncmp^0,w,c
  4872  001826  1002               	iorwf	(?_strncmp+1)^0,w,c
  4873  001828  A4D8               	btfss	status,2,c
  4874  00182A  EF19  F00C         	goto	u5661
  4875  00182E  EF1B  F00C         	goto	u5660
  4876  001832                     u5661:
  4877  001832  EF97  F00C         	goto	l5190
  4878  001836                     u5660:
  4879  001836                     
  4880                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4881  001836  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4882  00183A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4883  00183E  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  4884  001842  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  4885  001846  0E01               	movlw	1
  4886  001848  0100               	movlb	0	; () banked
  4887  00184A  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  4888  00184C  0E00               	movlw	0
  4889  00184E  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4890  001850  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4891  001854  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4892  001858                     	if	0	;tblptru may be non-zero
  4893  001858                     	endif
  4894  001858                     	if	0	;tblptru may be non-zero
  4895  001858                     	endif
  4896  001858  0008               	tblrd		*
  4897  00185A  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  4898  00185E  0EBF               	movlw	191
  4899  001860  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4900  001862  0EFF               	movlw	255
  4901  001864  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4902  001866  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4903  00186A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4904  00186E  CFDE FFF6          	movff	postinc2,tblptrl
  4905  001872  CFDD FFF7          	movff	postdec2,tblptrh
  4906  001876                     	if	0	;tblptru may be non-zero
  4907  001876                     	endif
  4908  001876                     	if	0	;tblptru may be non-zero
  4909  001876                     	endif
  4910  001876  0008               	tblrd		*
  4911  001878  50F5               	movf	tablat,w,c
  4912  00187A  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4913  00187C  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4914  00187E  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4915  001880  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4916  001882  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4917  001884  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4918  001886  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4919  001888  E10A               	bnz	u5670
  4920  00188A  0E1A               	movlw	26
  4921  00188C  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4922  00188E  A0D8               	btfss	status,0,c
  4923  001890  EF4C  F00C         	goto	u5671
  4924  001894  EF4F  F00C         	goto	u5670
  4925  001898                     u5671:
  4926  001898  0E01               	movlw	1
  4927  00189A  EF50  F00C         	goto	u5680
  4928  00189E                     u5670:
  4929  00189E  0E00               	movlw	0
  4930  0018A0                     u5680:
  4931  0018A0  6FBA               	movwf	_vfpfcnvrt$1542& (0+255),b
  4932  0018A2  6BBB               	clrf	(_vfpfcnvrt$1542+1)& (0+255),b
  4933  0018A4                     
  4934                           ; BSR set to: 0
  4935  0018A4  51BA               	movf	_vfpfcnvrt$1542& (0+255),w,b
  4936  0018A6  11BB               	iorwf	(_vfpfcnvrt$1542+1)& (0+255),w,b
  4937  0018A8  B4D8               	btfsc	status,2,c
  4938  0018AA  EF59  F00C         	goto	u5691
  4939  0018AE  EF5B  F00C         	goto	u5690
  4940  0018B2                     u5691:
  4941  0018B2  EF75  F00C         	goto	l5184
  4942  0018B6                     u5690:
  4943  0018B6                     
  4944                           ; BSR set to: 0
  4945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4946  0018B6  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4947  0018BA  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4948  0018BE  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4949  0018C2  0E04               	movlw	4
  4950  0018C4  26DE               	addwf	postinc2,f,c
  4951  0018C6  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4952  0018CA  0E00               	movlw	0
  4953  0018CC  22DD               	addwfc	postdec2,f,c
  4954  0018CE  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4955  0018D2  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4956  0018D6  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4957  0018DA  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4958  0018DE  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4959  0018E2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4960                           
  4961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  4962  0018E6  EF8D  F00C         	goto	l1483
  4963  0018EA                     l5184:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4967  0018EA  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4968  0018EE  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4969  0018F2  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4970  0018F6  0E04               	movlw	4
  4971  0018F8  26DE               	addwf	postinc2,f,c
  4972  0018FA  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4973  0018FE  0E00               	movlw	0
  4974  001900  22DD               	addwfc	postdec2,f,c
  4975  001902  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4976  001906  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4977  00190A  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  4978  00190E  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  4979  001912  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  4980  001916  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  4981  00191A                     l1483:
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4985  00191A  0E02               	movlw	2
  4986  00191C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4987  001920  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4988  001924  26DE               	addwf	postinc2,f,c
  4989  001926  0E00               	movlw	0
  4990  001928  22DD               	addwfc	postdec2,f,c
  4991  00192A  EFEE  F00B         	goto	l5170
  4992  00192E                     l5190:
  4993                           
  4994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4995  00192E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4996  001932  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4997  001936  CFDE FFF6          	movff	postinc2,tblptrl
  4998  00193A  CFDD FFF7          	movff	postdec2,tblptrh
  4999  00193E                     	if	0	;tblptru may be non-zero
  5000  00193E                     	endif
  5001  00193E                     	if	0	;tblptru may be non-zero
  5002  00193E                     	endif
  5003  00193E  0008               	tblrd		*
  5004  001940  50F5               	movf	tablat,w,c
  5005  001942  0A78               	xorlw	120
  5006  001944  B4D8               	btfsc	status,2,c
  5007  001946  EFA7  F00C         	goto	u5701
  5008  00194A  EFA9  F00C         	goto	u5700
  5009  00194E                     u5701:
  5010  00194E  EFBB  F00C         	goto	l5194
  5011  001952                     u5700:
  5012  001952  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5013  001956  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5014  00195A  CFDE FFF6          	movff	postinc2,tblptrl
  5015  00195E  CFDD FFF7          	movff	postdec2,tblptrh
  5016  001962                     	if	0	;tblptru may be non-zero
  5017  001962                     	endif
  5018  001962                     	if	0	;tblptru may be non-zero
  5019  001962                     	endif
  5020  001962  0008               	tblrd		*
  5021  001964  50F5               	movf	tablat,w,c
  5022  001966  0A58               	xorlw	88
  5023  001968  A4D8               	btfss	status,2,c
  5024  00196A  EFB9  F00C         	goto	u5711
  5025  00196E  EFBB  F00C         	goto	u5710
  5026  001972                     u5711:
  5027  001972  EF0A  F00D         	goto	l5204
  5028  001976                     u5710:
  5029  001976                     l5194:
  5030                           
  5031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5032  001976  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5033  00197A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5034  00197E  CFDE FFF6          	movff	postinc2,tblptrl
  5035  001982  CFDD FFF7          	movff	postdec2,tblptrh
  5036  001986                     	if	0	;tblptru may be non-zero
  5037  001986                     	endif
  5038  001986                     	if	0	;tblptru may be non-zero
  5039  001986                     	endif
  5040  001986  0008               	tblrd		*
  5041  001988  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  5042  00198C                     
  5043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5044  00198C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5045  001990  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5046  001994  2ADE               	incf	postinc2,f,c
  5047  001996  0E00               	movlw	0
  5048  001998  22DD               	addwfc	postdec2,f,c
  5049  00199A                     
  5050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5051  00199A  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5052  00199E  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5053  0019A2  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  5054  0019A6  0E02               	movlw	2
  5055  0019A8  26DE               	addwf	postinc2,f,c
  5056  0019AA  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  5057  0019AE  0E00               	movlw	0
  5058  0019B0  22DD               	addwfc	postdec2,f,c
  5059  0019B2  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5060  0019B6  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5061  0019BA  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt+2
  5062  0019BE  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+3
  5063  0019C2  C0AC  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5064  0019C6  C0AD  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5065  0019CA  0100               	movlb	0	; () banked
  5066  0019CC  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5067  0019CE  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5068  0019D0  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5069  0019D2  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5070  0019D4  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5071  0019D6  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5072  0019D8                     
  5073                           ; BSR set to: 0
  5074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5075  0019D8  C0A4  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5076  0019DC  C0A5  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5077  0019E0  C0AE  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5078  0019E4  C0AF  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5079  0019E8  C0B0  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5080  0019EC  C0B1  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5081  0019F0  C0B2  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5082  0019F4  C0B3  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5083  0019F8  C0B4  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5084  0019FC  C0B5  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5085  001A00  C0C3  F026         	movff	vfpfcnvrt@c,xtoa@x
  5086  001A04  EC18  F015         	call	_xtoa	;wreg free
  5087  001A08  C01C  F0A4         	movff	?_xtoa,?_vfpfcnvrt
  5088  001A0C  C01D  F0A5         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5089  001A10  EF5D  F00D         	goto	l1476
  5090  001A14                     l5204:
  5091                           
  5092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5093  001A14  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5094  001A18  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5095  001A1C  CFDE FFF6          	movff	postinc2,tblptrl
  5096  001A20  CFDD FFF7          	movff	postdec2,tblptrh
  5097  001A24                     	if	0	;tblptru may be non-zero
  5098  001A24                     	endif
  5099  001A24                     	if	0	;tblptru may be non-zero
  5100  001A24                     	endif
  5101  001A24  0008               	tblrd		*
  5102  001A26  50F5               	movf	tablat,w,c
  5103  001A28  0A25               	xorlw	37
  5104  001A2A  A4D8               	btfss	status,2,c
  5105  001A2C  EF1A  F00D         	goto	u5721
  5106  001A30  EF1C  F00D         	goto	u5720
  5107  001A34                     u5721:
  5108  001A34  EF34  F00D         	goto	l5214
  5109  001A38                     u5720:
  5110  001A38                     
  5111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5112  001A38  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5113  001A3C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5114  001A40  2ADE               	incf	postinc2,f,c
  5115  001A42  0E00               	movlw	0
  5116  001A44  22DD               	addwfc	postdec2,f,c
  5117  001A46                     
  5118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5119  001A46  0E00               	movlw	0
  5120  001A48  6E02               	movwf	(fputc@c+1)^0,c
  5121  001A4A  0E25               	movlw	37
  5122  001A4C  6E01               	movwf	fputc@c^0,c
  5123  001A4E  C0A4  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5124  001A52  C0A5  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5125  001A56  EC89  F01D         	call	_fputc	;wreg free
  5126  001A5A                     l5210:
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5129  001A5A  0E00               	movlw	0
  5130  001A5C  0100               	movlb	0	; () banked
  5131  001A5E  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5132  001A60  0E01               	movlw	1
  5133  001A62  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  5134  001A64  EF5D  F00D         	goto	l1476
  5135  001A68                     l5214:
  5136                           
  5137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5138  001A68  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5139  001A6C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5140  001A70  2ADE               	incf	postinc2,f,c
  5141  001A72  0E00               	movlw	0
  5142  001A74  22DD               	addwfc	postdec2,f,c
  5143  001A76                     
  5144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5145  001A76  0E00               	movlw	0
  5146  001A78  0100               	movlb	0	; () banked
  5147  001A7A  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5148  001A7C  0E00               	movlw	0
  5149  001A7E  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  5150  001A80  EF5D  F00D         	goto	l1476
  5151  001A84                     l5220:
  5152                           
  5153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5154  001A84  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5155  001A88  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5156  001A8C  CFDE FFF6          	movff	postinc2,tblptrl
  5157  001A90  CFDD FFF7          	movff	postdec2,tblptrh
  5158  001A94                     	if	0	;tblptru may be non-zero
  5159  001A94                     	endif
  5160  001A94                     	if	0	;tblptru may be non-zero
  5161  001A94                     	endif
  5162  001A94  0008               	tblrd		*
  5163  001A96  50F5               	movf	tablat,w,c
  5164  001A98  6E01               	movwf	fputc@c^0,c
  5165  001A9A  6A02               	clrf	(fputc@c+1)^0,c
  5166  001A9C  C0A4  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5167  001AA0  C0A5  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5168  001AA4  EC89  F01D         	call	_fputc	;wreg free
  5169  001AA8                     
  5170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5171  001AA8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5172  001AAC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5173  001AB0  2ADE               	incf	postinc2,f,c
  5174  001AB2  0E00               	movlw	0
  5175  001AB4  22DD               	addwfc	postdec2,f,c
  5176  001AB6  EF2D  F00D         	goto	l5210
  5177  001ABA                     l1476:
  5178  001ABA  0012               	return		;funcret
  5179  001ABC                     __end_of_vfpfcnvrt:
  5180                           	callstack 0
  5181                           
  5182 ;; *************** function _xtoa *****************
  5183 ;; Defined at:
  5184 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5187 ;;		 -> sprintf@f(6), 
  5188 ;;  d               8   29[COMRAM] unsigned long long 
  5189 ;;  x               1   37[COMRAM] unsigned char 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  n               8   54[COMRAM] unsigned long long 
  5192 ;;  c               2   64[COMRAM] int 
  5193 ;;  i               2   62[COMRAM] int 
  5194 ;;  w               2   52[COMRAM] int 
  5195 ;;  p               2   50[COMRAM] int 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  2   27[COMRAM] int 
  5198 ;; Registers used:
  5199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5205 ;;      Params:        11       0       0       0       0       0       0       0       0
  5206 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5207 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5208 ;;      Totals:        39       0       0       0       0       0       0       0       0
  5209 ;;Total ram usage:       39 bytes
  5210 ;; Hardware stack levels used: 1
  5211 ;; Hardware stack levels required when called: 4
  5212 ;; This function calls:
  5213 ;;		_isalpha
  5214 ;;		_isupper
  5215 ;;		_pad
  5216 ;;		_toupper
  5217 ;; This function is called by:
  5218 ;;		_vfpfcnvrt
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text26
  5223  002A30                     __ptext26:
  5224                           	callstack 0
  5225  002A30                     _xtoa:
  5226                           	callstack 22
  5227  002A30                     
  5228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5229  002A30  0100               	movlb	0	; () banked
  5230  002A32  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5231  002A34  EF1E  F015         	goto	u5221
  5232  002A38  EF20  F015         	goto	u5220
  5233  002A3C                     u5221:
  5234  002A3C  EF21  F015         	goto	l4922
  5235  002A40                     u5220:
  5236  002A40                     
  5237                           ; BSR set to: 0
  5238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5239  002A40  93F8               	bcf	_flags& (0+255),1,b
  5240  002A42                     l4922:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5244  002A42  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5245  002A44  EF2E  F015         	goto	u5230
  5246  002A48  51F7               	movf	(_prec+1)& (0+255),w,b
  5247  002A4A  E106               	bnz	u5231
  5248  002A4C  05F6               	decf	_prec& (0+255),w,b
  5249  002A4E  B0D8               	btfsc	status,0,c
  5250  002A50  EF2C  F015         	goto	u5231
  5251  002A54  EF2E  F015         	goto	u5230
  5252  002A58                     u5231:
  5253  002A58  EF34  F015         	goto	l1422
  5254  002A5C                     u5230:
  5255  002A5C                     
  5256                           ; BSR set to: 0
  5257  002A5C  0E00               	movlw	0
  5258  002A5E  6E34               	movwf	(xtoa@p+1)^0,c
  5259  002A60  0E01               	movlw	1
  5260  002A62  6E33               	movwf	xtoa@p^0,c
  5261  002A64  EF38  F015         	goto	l1424
  5262  002A68                     l1422:
  5263                           
  5264                           ; BSR set to: 0
  5265  002A68  C0F6  F033         	movff	_prec,xtoa@p
  5266  002A6C  C0F7  F034         	movff	_prec+1,xtoa@p+1
  5267  002A70                     l1424:
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5271  002A70  C0F4  F035         	movff	_width,xtoa@w
  5272  002A74  C0F5  F036         	movff	_width+1,xtoa@w+1
  5273                           
  5274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5275  002A78  A9F8               	btfss	_flags& (0+255),4,b
  5276  002A7A  EF41  F015         	goto	u5241
  5277  002A7E  EF43  F015         	goto	u5240
  5278  002A82                     u5241:
  5279  002A82  EF47  F015         	goto	l4928
  5280  002A86                     u5240:
  5281  002A86                     
  5282                           ; BSR set to: 0
  5283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5284  002A86  0EFE               	movlw	254
  5285  002A88  2635               	addwf	xtoa@w^0,f,c
  5286  002A8A  0EFF               	movlw	255
  5287  002A8C  2236               	addwfc	(xtoa@w+1)^0,f,c
  5288  002A8E                     l4928:
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5292  002A8E  C01E  F037         	movff	xtoa@d,xtoa@n
  5293  002A92  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5294  002A96  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5295  002A9A  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5296  002A9E  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5297  002AA2  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5298  002AA6  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5299  002AAA  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5300  002AAE                     
  5301                           ; BSR set to: 0
  5302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5303  002AAE  0E00               	movlw	0
  5304  002AB0  6E40               	movwf	(xtoa@i+1)^0,c
  5305  002AB2  0E4F               	movlw	79
  5306  002AB4  6E3F               	movwf	xtoa@i^0,c
  5307  002AB6                     
  5308                           ; BSR set to: 0
  5309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5310  002AB6  0E00               	movlw	0
  5311  002AB8  0101               	movlb	1	; () banked
  5312  002ABA  6F5D               	movwf	(_dbuf+79)& (0+255),b
  5313                           
  5314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5315  002ABC  EF13  F016         	goto	l4964
  5316  002AC0                     l4934:
  5317                           
  5318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  5319  002AC0  063F               	decf	xtoa@i^0,f,c
  5320  002AC2  A0D8               	btfss	status,0,c
  5321  002AC4  0640               	decf	(xtoa@i+1)^0,f,c
  5322  002AC6                     
  5323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5324  002AC6  0E0F               	movlw	15
  5325  002AC8  1437               	andwf	xtoa@n^0,w,c
  5326  002ACA  6E41               	movwf	xtoa@c^0,c
  5327  002ACC  6A42               	clrf	(xtoa@c+1)^0,c
  5328  002ACE                     
  5329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5330  002ACE  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5331  002AD0  EF73  F015         	goto	u5251
  5332  002AD4  5042               	movf	(xtoa@c+1)^0,w,c
  5333  002AD6  E109               	bnz	u5250
  5334  002AD8  0E0A               	movlw	10
  5335  002ADA  5C41               	subwf	xtoa@c^0,w,c
  5336  002ADC  A0D8               	btfss	status,0,c
  5337  002ADE  EF73  F015         	goto	u5251
  5338  002AE2  EF75  F015         	goto	u5250
  5339  002AE6                     u5251:
  5340  002AE6  EF7D  F015         	goto	l4942
  5341  002AEA                     u5250:
  5342  002AEA  0E57               	movlw	87
  5343  002AEC  2441               	addwf	xtoa@c^0,w,c
  5344  002AEE  6E41               	movwf	xtoa@c^0,c
  5345  002AF0  0E00               	movlw	0
  5346  002AF2  2042               	addwfc	(xtoa@c+1)^0,w,c
  5347  002AF4  6E42               	movwf	(xtoa@c+1)^0,c
  5348  002AF6  EF83  F015         	goto	l1431
  5349  002AFA                     l4942:
  5350  002AFA  0E30               	movlw	48
  5351  002AFC  2441               	addwf	xtoa@c^0,w,c
  5352  002AFE  6E41               	movwf	xtoa@c^0,c
  5353  002B00  0E00               	movlw	0
  5354  002B02  2042               	addwfc	(xtoa@c+1)^0,w,c
  5355  002B04  6E42               	movwf	(xtoa@c+1)^0,c
  5356  002B06                     l1431:
  5357  002B06  0EBF               	movlw	191
  5358  002B08  6E27               	movwf	??_xtoa^0,c
  5359  002B0A  0EFF               	movlw	255
  5360  002B0C  6E28               	movwf	(??_xtoa+1)^0,c
  5361  002B0E  5026               	movf	xtoa@x^0,w,c
  5362  002B10  6E29               	movwf	(??_xtoa+2)^0,c
  5363  002B12  6A2A               	clrf	(??_xtoa+3)^0,c
  5364  002B14  5027               	movf	??_xtoa^0,w,c
  5365  002B16  2629               	addwf	(??_xtoa+2)^0,f,c
  5366  002B18  5028               	movf	(??_xtoa+1)^0,w,c
  5367  002B1A  222A               	addwfc	(??_xtoa+3)^0,f,c
  5368  002B1C  502A               	movf	(??_xtoa+3)^0,w,c
  5369  002B1E  E10A               	bnz	u5260
  5370  002B20  0E1A               	movlw	26
  5371  002B22  5C29               	subwf	(??_xtoa+2)^0,w,c
  5372  002B24  A0D8               	btfss	status,0,c
  5373  002B26  EF97  F015         	goto	u5261
  5374  002B2A  EF9A  F015         	goto	u5260
  5375  002B2E                     u5261:
  5376  002B2E  0E01               	movlw	1
  5377  002B30  EF9B  F015         	goto	u5270
  5378  002B34                     u5260:
  5379  002B34  0E00               	movlw	0
  5380  002B36                     u5270:
  5381  002B36  6E2F               	movwf	_xtoa$1523^0,c
  5382  002B38  6A30               	clrf	(_xtoa$1523+1)^0,c
  5383  002B3A  502F               	movf	_xtoa$1523^0,w,c
  5384  002B3C  1030               	iorwf	(_xtoa$1523+1)^0,w,c
  5385  002B3E  B4D8               	btfsc	status,2,c
  5386  002B40  EFA4  F015         	goto	u5281
  5387  002B44  EFA6  F015         	goto	u5280
  5388  002B48                     u5281:
  5389  002B48  EFD6  F015         	goto	l4956
  5390  002B4C                     u5280:
  5391  002B4C  0E9F               	movlw	159
  5392  002B4E  6E27               	movwf	??_xtoa^0,c
  5393  002B50  0EFF               	movlw	255
  5394  002B52  6E28               	movwf	(??_xtoa+1)^0,c
  5395  002B54  0E20               	movlw	32
  5396  002B56  1041               	iorwf	xtoa@c^0,w,c
  5397  002B58  6E29               	movwf	(??_xtoa+2)^0,c
  5398  002B5A  0E00               	movlw	0
  5399  002B5C  1042               	iorwf	(xtoa@c+1)^0,w,c
  5400  002B5E  6E2A               	movwf	(??_xtoa+3)^0,c
  5401  002B60  5027               	movf	??_xtoa^0,w,c
  5402  002B62  2629               	addwf	(??_xtoa+2)^0,f,c
  5403  002B64  5028               	movf	(??_xtoa+1)^0,w,c
  5404  002B66  222A               	addwfc	(??_xtoa+3)^0,f,c
  5405  002B68  502A               	movf	(??_xtoa+3)^0,w,c
  5406  002B6A  E10A               	bnz	u5290
  5407  002B6C  0E1A               	movlw	26
  5408  002B6E  5C29               	subwf	(??_xtoa+2)^0,w,c
  5409  002B70  A0D8               	btfss	status,0,c
  5410  002B72  EFBD  F015         	goto	u5291
  5411  002B76  EFC0  F015         	goto	u5290
  5412  002B7A                     u5291:
  5413  002B7A  0E01               	movlw	1
  5414  002B7C  EFC1  F015         	goto	u5300
  5415  002B80                     u5290:
  5416  002B80  0E00               	movlw	0
  5417  002B82                     u5300:
  5418  002B82  6E31               	movwf	_xtoa$1524^0,c
  5419  002B84  6A32               	clrf	(_xtoa$1524+1)^0,c
  5420  002B86  5031               	movf	_xtoa$1524^0,w,c
  5421  002B88  1032               	iorwf	(_xtoa$1524+1)^0,w,c
  5422  002B8A  B4D8               	btfsc	status,2,c
  5423  002B8C  EFCA  F015         	goto	u5311
  5424  002B90  EFCC  F015         	goto	u5310
  5425  002B94                     u5311:
  5426  002B94  EFD6  F015         	goto	l4956
  5427  002B98                     u5310:
  5428  002B98                     
  5429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5430  002B98  C041  F007         	movff	xtoa@c,toupper@c
  5431  002B9C  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5432  002BA0  ECF9  F020         	call	_toupper	;wreg free
  5433  002BA4  C007  F041         	movff	?_toupper,xtoa@c
  5434  002BA8  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5435  002BAC                     l4956:
  5436                           
  5437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5438  002BAC  0E0E               	movlw	low _dbuf
  5439  002BAE  243F               	addwf	xtoa@i^0,w,c
  5440  002BB0  6ED9               	movwf	fsr2l,c
  5441  002BB2  0E01               	movlw	high _dbuf
  5442  002BB4  2040               	addwfc	(xtoa@i+1)^0,w,c
  5443  002BB6  6EDA               	movwf	fsr2h,c
  5444  002BB8  C041  FFDF         	movff	xtoa@c,indf2
  5445  002BBC                     
  5446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  5447  002BBC  0633               	decf	xtoa@p^0,f,c
  5448  002BBE  A0D8               	btfss	status,0,c
  5449  002BC0  0634               	decf	(xtoa@p+1)^0,f,c
  5450  002BC2                     
  5451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  5452  002BC2  0635               	decf	xtoa@w^0,f,c
  5453  002BC4  A0D8               	btfss	status,0,c
  5454  002BC6  0636               	decf	(xtoa@w+1)^0,f,c
  5455  002BC8                     
  5456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5457  002BC8  C037  F027         	movff	xtoa@n,??_xtoa
  5458  002BCC  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5459  002BD0  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5460  002BD4  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5461  002BD8  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5462  002BDC  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5463  002BE0  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5464  002BE4  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5465  002BE8  0E05               	movlw	5
  5466  002BEA  EF00  F016         	goto	u5320
  5467  002BEE                     u5325:
  5468  002BEE  90D8               	bcf	status,0,c
  5469  002BF0  322E               	rrcf	(??_xtoa+7)^0,f,c
  5470  002BF2  322D               	rrcf	(??_xtoa+6)^0,f,c
  5471  002BF4  322C               	rrcf	(??_xtoa+5)^0,f,c
  5472  002BF6  322B               	rrcf	(??_xtoa+4)^0,f,c
  5473  002BF8  322A               	rrcf	(??_xtoa+3)^0,f,c
  5474  002BFA  3229               	rrcf	(??_xtoa+2)^0,f,c
  5475  002BFC  3228               	rrcf	(??_xtoa+1)^0,f,c
  5476  002BFE  3227               	rrcf	??_xtoa^0,f,c
  5477  002C00                     u5320:
  5478  002C00  2EE8               	decfsz	wreg,f,c
  5479  002C02  EFF7  F015         	goto	u5325
  5480  002C06  C027  F037         	movff	??_xtoa,xtoa@n
  5481  002C0A  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5482  002C0E  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5483  002C12  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5484  002C16  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5485  002C1A  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5486  002C1E  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5487  002C22  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5488  002C26                     l4964:
  5489                           
  5490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5491  002C26  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5492  002C28  EF1F  F016         	goto	u5331
  5493  002C2C  5040               	movf	(xtoa@i+1)^0,w,c
  5494  002C2E  E109               	bnz	u5330
  5495  002C30  0E02               	movlw	2
  5496  002C32  5C3F               	subwf	xtoa@i^0,w,c
  5497  002C34  A0D8               	btfss	status,0,c
  5498  002C36  EF1F  F016         	goto	u5331
  5499  002C3A  EF21  F016         	goto	u5330
  5500  002C3E                     u5331:
  5501  002C3E  EF52  F016         	goto	l1445
  5502  002C42                     u5330:
  5503  002C42  5037               	movf	xtoa@n^0,w,c
  5504  002C44  1038               	iorwf	(xtoa@n+1)^0,w,c
  5505  002C46  1039               	iorwf	(xtoa@n+2)^0,w,c
  5506  002C48  103A               	iorwf	(xtoa@n+3)^0,w,c
  5507  002C4A  103B               	iorwf	(xtoa@n+4)^0,w,c
  5508  002C4C  103C               	iorwf	(xtoa@n+5)^0,w,c
  5509  002C4E  103D               	iorwf	(xtoa@n+6)^0,w,c
  5510  002C50  103E               	iorwf	(xtoa@n+7)^0,w,c
  5511  002C52  A4D8               	btfss	status,2,c
  5512  002C54  EF2E  F016         	goto	u5341
  5513  002C58  EF30  F016         	goto	u5340
  5514  002C5C                     u5341:
  5515  002C5C  EF60  F015         	goto	l4934
  5516  002C60                     u5340:
  5517  002C60  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5518  002C62  EF3D  F016         	goto	u5350
  5519  002C66  5034               	movf	(xtoa@p+1)^0,w,c
  5520  002C68  E106               	bnz	u5351
  5521  002C6A  0433               	decf	xtoa@p^0,w,c
  5522  002C6C  B0D8               	btfsc	status,0,c
  5523  002C6E  EF3B  F016         	goto	u5351
  5524  002C72  EF3D  F016         	goto	u5350
  5525  002C76                     u5351:
  5526  002C76  EF60  F015         	goto	l4934
  5527  002C7A                     u5350:
  5528  002C7A  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5529  002C7C  EF48  F016         	goto	u5361
  5530  002C80  5036               	movf	(xtoa@w+1)^0,w,c
  5531  002C82  E108               	bnz	u5360
  5532  002C84  0435               	decf	xtoa@w^0,w,c
  5533  002C86  A0D8               	btfss	status,0,c
  5534  002C88  EF48  F016         	goto	u5361
  5535  002C8C  EF4A  F016         	goto	u5360
  5536  002C90                     u5361:
  5537  002C90  EF52  F016         	goto	l1445
  5538  002C94                     u5360:
  5539  002C94  0100               	movlb	0	; () banked
  5540  002C96  B3F8               	btfsc	_flags& (0+255),1,b
  5541  002C98  EF50  F016         	goto	u5371
  5542  002C9C  EF52  F016         	goto	u5370
  5543  002CA0                     u5371:
  5544  002CA0  EF60  F015         	goto	l4934
  5545  002CA4                     u5370:
  5546  002CA4                     l1445:
  5547                           
  5548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5549  002CA4  0100               	movlb	0	; () banked
  5550  002CA6  A9F8               	btfss	_flags& (0+255),4,b
  5551  002CA8  EF58  F016         	goto	u5381
  5552  002CAC  EF5A  F016         	goto	u5380
  5553  002CB0                     u5381:
  5554  002CB0  EF70  F016         	goto	l4980
  5555  002CB4                     u5380:
  5556  002CB4                     
  5557                           ; BSR set to: 0
  5558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  5559  002CB4  063F               	decf	xtoa@i^0,f,c
  5560  002CB6  A0D8               	btfss	status,0,c
  5561  002CB8  0640               	decf	(xtoa@i+1)^0,f,c
  5562  002CBA                     
  5563                           ; BSR set to: 0
  5564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5565  002CBA  0E0E               	movlw	low _dbuf
  5566  002CBC  243F               	addwf	xtoa@i^0,w,c
  5567  002CBE  6ED9               	movwf	fsr2l,c
  5568  002CC0  0E01               	movlw	high _dbuf
  5569  002CC2  2040               	addwfc	(xtoa@i+1)^0,w,c
  5570  002CC4  6EDA               	movwf	fsr2h,c
  5571  002CC6  C026  FFDF         	movff	xtoa@x,indf2
  5572  002CCA                     
  5573                           ; BSR set to: 0
  5574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  5575  002CCA  063F               	decf	xtoa@i^0,f,c
  5576  002CCC  A0D8               	btfss	status,0,c
  5577  002CCE  0640               	decf	(xtoa@i+1)^0,f,c
  5578                           
  5579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5580  002CD0  0E0E               	movlw	low _dbuf
  5581  002CD2  243F               	addwf	xtoa@i^0,w,c
  5582  002CD4  6ED9               	movwf	fsr2l,c
  5583  002CD6  0E01               	movlw	high _dbuf
  5584  002CD8  2040               	addwfc	(xtoa@i+1)^0,w,c
  5585  002CDA  6EDA               	movwf	fsr2h,c
  5586  002CDC  0E30               	movlw	48
  5587  002CDE  6EDF               	movwf	indf2,c
  5588  002CE0                     l4980:
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5592  002CE0  C01C  F011         	movff	xtoa@fp,pad@fp
  5593  002CE4  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5594  002CE8  0E0E               	movlw	low _dbuf
  5595  002CEA  243F               	addwf	xtoa@i^0,w,c
  5596  002CEC  6E13               	movwf	pad@buf^0,c
  5597  002CEE  0E01               	movlw	high _dbuf
  5598  002CF0  2040               	addwfc	(xtoa@i+1)^0,w,c
  5599  002CF2  6E14               	movwf	(pad@buf+1)^0,c
  5600  002CF4  C035  F015         	movff	xtoa@w,pad@p
  5601  002CF8  C036  F016         	movff	xtoa@w+1,pad@p+1
  5602  002CFC  ECEE  F01D         	call	_pad	;wreg free
  5603  002D00  C011  F01C         	movff	?_pad,?_xtoa
  5604  002D04  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5605  002D08  0012               	return		;funcret
  5606  002D0A                     __end_of_xtoa:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function _toupper *****************
  5610 ;; Defined at:
  5611 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  c               2    6[COMRAM] int 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;		None
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  2    6[COMRAM] int 
  5618 ;; Registers used:
  5619 ;;		wreg, status,2, status,0
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5625 ;;      Params:         2       0       0       0       0       0       0       0       0
  5626 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5627 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5628 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5629 ;;Total ram usage:        8 bytes
  5630 ;; Hardware stack levels used: 1
  5631 ;; Hardware stack levels required when called: 1
  5632 ;; This function calls:
  5633 ;;		_islower
  5634 ;; This function is called by:
  5635 ;;		_xtoa
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text27
  5640  0041F2                     __ptext27:
  5641                           	callstack 0
  5642  0041F2                     _toupper:
  5643                           	callstack 24
  5644  0041F2  0E9F               	movlw	159
  5645  0041F4  6E09               	movwf	??_toupper^0,c
  5646  0041F6  0EFF               	movlw	255
  5647  0041F8  6E0A               	movwf	(??_toupper+1)^0,c
  5648  0041FA  C007  F00B         	movff	toupper@c,??_toupper+2
  5649  0041FE  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5650  004202  5009               	movf	??_toupper^0,w,c
  5651  004204  260B               	addwf	(??_toupper+2)^0,f,c
  5652  004206  500A               	movf	(??_toupper+1)^0,w,c
  5653  004208  220C               	addwfc	(??_toupper+3)^0,f,c
  5654  00420A  500C               	movf	(??_toupper+3)^0,w,c
  5655  00420C  E10A               	bnz	u4580
  5656  00420E  0E1A               	movlw	26
  5657  004210  5C0B               	subwf	(??_toupper+2)^0,w,c
  5658  004212  A0D8               	btfss	status,0,c
  5659  004214  EF0E  F021         	goto	u4581
  5660  004218  EF11  F021         	goto	u4580
  5661  00421C                     u4581:
  5662  00421C  0E01               	movlw	1
  5663  00421E  EF12  F021         	goto	u4590
  5664  004222                     u4580:
  5665  004222  0E00               	movlw	0
  5666  004224                     u4590:
  5667  004224  6E0D               	movwf	_toupper$1696^0,c
  5668  004226  6A0E               	clrf	(_toupper$1696+1)^0,c
  5669  004228  500D               	movf	_toupper$1696^0,w,c
  5670  00422A  100E               	iorwf	(_toupper$1696+1)^0,w,c
  5671  00422C  B4D8               	btfsc	status,2,c
  5672  00422E  EF1B  F021         	goto	u4601
  5673  004232  EF1D  F021         	goto	u4600
  5674  004236                     u4601:
  5675  004236  EF23  F021         	goto	l1636
  5676  00423A                     u4600:
  5677  00423A  0E5F               	movlw	95
  5678  00423C  1407               	andwf	toupper@c^0,w,c
  5679  00423E  6E07               	movwf	?_toupper^0,c
  5680  004240  6A08               	clrf	(?_toupper+1)^0,c
  5681  004242  EF27  F021         	goto	l1641
  5682  004246                     l1636:
  5683  004246  C007  F007         	movff	toupper@c,?_toupper
  5684  00424A  C008  F008         	movff	toupper@c+1,?_toupper+1
  5685  00424E                     l1641:
  5686  00424E  0012               	return		;funcret
  5687  004250                     __end_of_toupper:
  5688                           	callstack 0
  5689                           
  5690 ;; *************** function _islower *****************
  5691 ;; Defined at:
  5692 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  c               2    0[COMRAM] int 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;		None
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  2    0[COMRAM] int 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5706 ;;      Params:         2       0       0       0       0       0       0       0       0
  5707 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5708 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5709 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5710 ;;Total ram usage:        6 bytes
  5711 ;; Hardware stack levels used: 1
  5712 ;; This function calls:
  5713 ;;		Nothing
  5714 ;; This function is called by:
  5715 ;;		_toupper
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	text28
  5720  004816                     __ptext28:
  5721                           	callstack 0
  5722  004816                     _islower:
  5723                           	callstack 24
  5724  004816  0E9F               	movlw	159
  5725  004818  6E03               	movwf	??_islower^0,c
  5726  00481A  0EFF               	movlw	255
  5727  00481C  6E04               	movwf	(??_islower+1)^0,c
  5728  00481E  C001  F005         	movff	islower@c,??_islower+2
  5729  004822  C002  F006         	movff	islower@c+1,??_islower+3
  5730  004826  5003               	movf	??_islower^0,w,c
  5731  004828  2605               	addwf	(??_islower+2)^0,f,c
  5732  00482A  5004               	movf	(??_islower+1)^0,w,c
  5733  00482C  2206               	addwfc	(??_islower+3)^0,f,c
  5734  00482E  5006               	movf	(??_islower+3)^0,w,c
  5735  004830  E10A               	bnz	u3580
  5736  004832  0E1A               	movlw	26
  5737  004834  5C05               	subwf	(??_islower+2)^0,w,c
  5738  004836  A0D8               	btfss	status,0,c
  5739  004838  EF20  F024         	goto	u3581
  5740  00483C  EF23  F024         	goto	u3580
  5741  004840                     u3581:
  5742  004840  0E01               	movlw	1
  5743  004842  EF24  F024         	goto	u3590
  5744  004846                     u3580:
  5745  004846  0E00               	movlw	0
  5746  004848                     u3590:
  5747  004848  6E01               	movwf	?_islower^0,c
  5748  00484A  6A02               	clrf	(?_islower+1)^0,c
  5749  00484C  0012               	return		;funcret
  5750  00484E                     __end_of_islower:
  5751                           	callstack 0
  5752                           
  5753 ;; *************** function _isalpha *****************
  5754 ;; Defined at:
  5755 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  c               2    0[COMRAM] int 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  2    0[COMRAM] int 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5769 ;;      Params:         2       0       0       0       0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5771 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5772 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5773 ;;Total ram usage:        6 bytes
  5774 ;; Hardware stack levels used: 1
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_xtoa
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text29
  5783  0047A0                     __ptext29:
  5784                           	callstack 0
  5785  0047A0                     _isalpha:
  5786                           	callstack 25
  5787  0047A0  0E9F               	movlw	159
  5788  0047A2  6E03               	movwf	??_isalpha^0,c
  5789  0047A4  0EFF               	movlw	255
  5790  0047A6  6E04               	movwf	(??_isalpha+1)^0,c
  5791  0047A8  0E20               	movlw	32
  5792  0047AA  1001               	iorwf	isalpha@c^0,w,c
  5793  0047AC  6E05               	movwf	(??_isalpha+2)^0,c
  5794  0047AE  0E00               	movlw	0
  5795  0047B0  1002               	iorwf	(isalpha@c+1)^0,w,c
  5796  0047B2  6E06               	movwf	(??_isalpha+3)^0,c
  5797  0047B4  5003               	movf	??_isalpha^0,w,c
  5798  0047B6  2605               	addwf	(??_isalpha+2)^0,f,c
  5799  0047B8  5004               	movf	(??_isalpha+1)^0,w,c
  5800  0047BA  2206               	addwfc	(??_isalpha+3)^0,f,c
  5801  0047BC  5006               	movf	(??_isalpha+3)^0,w,c
  5802  0047BE  E10A               	bnz	u4560
  5803  0047C0  0E1A               	movlw	26
  5804  0047C2  5C05               	subwf	(??_isalpha+2)^0,w,c
  5805  0047C4  A0D8               	btfss	status,0,c
  5806  0047C6  EFE7  F023         	goto	u4561
  5807  0047CA  EFEA  F023         	goto	u4560
  5808  0047CE                     u4561:
  5809  0047CE  0E01               	movlw	1
  5810  0047D0  EFEB  F023         	goto	u4570
  5811  0047D4                     u4560:
  5812  0047D4  0E00               	movlw	0
  5813  0047D6                     u4570:
  5814  0047D6  6E01               	movwf	?_isalpha^0,c
  5815  0047D8  6A02               	clrf	(?_isalpha+1)^0,c
  5816  0047DA  0012               	return		;funcret
  5817  0047DC                     __end_of_isalpha:
  5818                           	callstack 0
  5819                           
  5820 ;; *************** function _strncmp *****************
  5821 ;; Defined at:
  5822 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5825 ;;		 -> vfpfcnvrt@ct(3), 
  5826 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5827 ;;		 -> STR_33(3), 
  5828 ;;  n               2    4[COMRAM] unsigned int 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5831 ;;		 -> STR_33(3), 
  5832 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5833 ;;		 -> vfpfcnvrt@ct(3), 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  2    0[COMRAM] int 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5843 ;;      Params:         6       0       0       0       0       0       0       0       0
  5844 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5845 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5846 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5847 ;;Total ram usage:       11 bytes
  5848 ;; Hardware stack levels used: 1
  5849 ;; This function calls:
  5850 ;;		Nothing
  5851 ;; This function is called by:
  5852 ;;		_vfpfcnvrt
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text30
  5857  003A3C                     __ptext30:
  5858                           	callstack 0
  5859  003A3C                     _strncmp:
  5860                           	callstack 26
  5861  003A3C  C001  F008         	movff	strncmp@_l,strncmp@l
  5862  003A40  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5863  003A44  C003  F00A         	movff	strncmp@_r,strncmp@r
  5864  003A48  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5865  003A4C  0605               	decf	strncmp@n^0,f,c
  5866  003A4E  A0D8               	btfss	status,0,c
  5867  003A50  0606               	decf	(strncmp@n+1)^0,f,c
  5868  003A52  2805               	incf	strncmp@n^0,w,c
  5869  003A54  E106               	bnz	u5461
  5870  003A56  2806               	incf	(strncmp@n+1)^0,w,c
  5871  003A58  A4D8               	btfss	status,2,c
  5872  003A5A  EF31  F01D         	goto	u5461
  5873  003A5E  EF33  F01D         	goto	u5460
  5874  003A62                     u5461:
  5875  003A62  EF40  F01D         	goto	l5034
  5876  003A66                     u5460:
  5877  003A66  0E00               	movlw	0
  5878  003A68  6E02               	movwf	(?_strncmp+1)^0,c
  5879  003A6A  0E00               	movlw	0
  5880  003A6C  6E01               	movwf	?_strncmp^0,c
  5881  003A6E  EF88  F01D         	goto	l1613
  5882  003A72                     l5032:
  5883  003A72  4A08               	infsnz	strncmp@l^0,f,c
  5884  003A74  2A09               	incf	(strncmp@l+1)^0,f,c
  5885  003A76  4A0A               	infsnz	strncmp@r^0,f,c
  5886  003A78  2A0B               	incf	(strncmp@r+1)^0,f,c
  5887  003A7A  0605               	decf	strncmp@n^0,f,c
  5888  003A7C  A0D8               	btfss	status,0,c
  5889  003A7E  0606               	decf	(strncmp@n+1)^0,f,c
  5890  003A80                     l5034:
  5891  003A80  C008  FFD9         	movff	strncmp@l,fsr2l
  5892  003A84  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5893  003A88  50DF               	movf	indf2,w,c
  5894  003A8A  B4D8               	btfsc	status,2,c
  5895  003A8C  EF4A  F01D         	goto	u5471
  5896  003A90  EF4C  F01D         	goto	u5470
  5897  003A94                     u5471:
  5898  003A94  EF77  F01D         	goto	l5042
  5899  003A98                     u5470:
  5900  003A98  C00A  FFF6         	movff	strncmp@r,tblptrl
  5901  003A9C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5902  003AA0                     	if	0	;tblptru may be non-zero
  5903  003AA0                     	endif
  5904  003AA0                     	if	0	;tblptru may be non-zero
  5905  003AA0                     	endif
  5906  003AA0  0008               	tblrd		*
  5907  003AA2  50F5               	movf	tablat,w,c
  5908  003AA4  0900               	iorlw	0
  5909  003AA6  B4D8               	btfsc	status,2,c
  5910  003AA8  EF58  F01D         	goto	u5481
  5911  003AAC  EF5A  F01D         	goto	u5480
  5912  003AB0                     u5481:
  5913  003AB0  EF77  F01D         	goto	l5042
  5914  003AB4                     u5480:
  5915  003AB4  5005               	movf	strncmp@n^0,w,c
  5916  003AB6  1006               	iorwf	(strncmp@n+1)^0,w,c
  5917  003AB8  B4D8               	btfsc	status,2,c
  5918  003ABA  EF61  F01D         	goto	u5491
  5919  003ABE  EF63  F01D         	goto	u5490
  5920  003AC2                     u5491:
  5921  003AC2  EF77  F01D         	goto	l5042
  5922  003AC6                     u5490:
  5923  003AC6  C008  FFD9         	movff	strncmp@l,fsr2l
  5924  003ACA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5925  003ACE  50DF               	movf	indf2,w,c
  5926  003AD0  6E07               	movwf	??_strncmp^0,c
  5927  003AD2  C00A  FFF6         	movff	strncmp@r,tblptrl
  5928  003AD6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5929  003ADA                     	if	0	;tblptru may be non-zero
  5930  003ADA                     	endif
  5931  003ADA                     	if	0	;tblptru may be non-zero
  5932  003ADA                     	endif
  5933  003ADA  0008               	tblrd		*
  5934  003ADC  50F5               	movf	tablat,w,c
  5935  003ADE  1807               	xorwf	??_strncmp^0,w,c
  5936  003AE0  B4D8               	btfsc	status,2,c
  5937  003AE2  EF75  F01D         	goto	u5501
  5938  003AE6  EF77  F01D         	goto	u5500
  5939  003AEA                     u5501:
  5940  003AEA  EF39  F01D         	goto	l5032
  5941  003AEE                     u5500:
  5942  003AEE                     l5042:
  5943  003AEE  C008  FFD9         	movff	strncmp@l,fsr2l
  5944  003AF2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  5945  003AF6  50DF               	movf	indf2,w,c
  5946  003AF8  6E07               	movwf	??_strncmp^0,c
  5947  003AFA  C00A  FFF6         	movff	strncmp@r,tblptrl
  5948  003AFE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5949  003B02                     	if	0	;tblptru may be non-zero
  5950  003B02                     	endif
  5951  003B02                     	if	0	;tblptru may be non-zero
  5952  003B02                     	endif
  5953  003B02  0008               	tblrd		*
  5954  003B04  50F5               	movf	tablat,w,c
  5955  003B06  5C07               	subwf	??_strncmp^0,w,c
  5956  003B08  6E01               	movwf	?_strncmp^0,c
  5957  003B0A  6A02               	clrf	(?_strncmp+1)^0,c
  5958  003B0C  A0D8               	btfss	status,0,c
  5959  003B0E  0602               	decf	(?_strncmp+1)^0,f,c
  5960  003B10                     l1613:
  5961  003B10  0012               	return		;funcret
  5962  003B12                     __end_of_strncmp:
  5963                           	callstack 0
  5964                           
  5965 ;; *************** function _efgtoa *****************
  5966 ;; Defined at:
  5967 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  5970 ;;		 -> sprintf@f(6), 
  5971 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  5972 ;;  c               1    6[BANK0 ] unsigned char 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  u               4   64[BANK0 ] unsigned char 
  5975 ;;  g               4   56[BANK0 ] unsigned char 
  5976 ;;  l               4   50[BANK0 ] unsigned char 
  5977 ;;  h               4   46[BANK0 ] unsigned char 
  5978 ;;  ou              4   32[BANK0 ] unsigned char 
  5979 ;;  n               2   62[BANK0 ] int 
  5980 ;;  e               2   60[BANK0 ] int 
  5981 ;;  i               2   54[BANK0 ] int 
  5982 ;;  w               2   42[BANK0 ] int 
  5983 ;;  p               2   40[BANK0 ] int 
  5984 ;;  sign            2   38[BANK0 ] int 
  5985 ;;  d               2   36[BANK0 ] int 
  5986 ;;  m               2   30[BANK0 ] int 
  5987 ;;  ne              2   28[BANK0 ] int 
  5988 ;;  pp              2   26[BANK0 ] int 
  5989 ;;  t               2   24[BANK0 ] int 
  5990 ;;  mode            1   45[BANK0 ] unsigned char 
  5991 ;;  nmode           1   44[BANK0 ] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  2    0[BANK0 ] int 
  5994 ;; Registers used:
  5995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6001 ;;      Params:         0       7       0       0       0       0       0       0       0
  6002 ;;      Locals:         0      56       0       0       0       0       0       0       0
  6003 ;;      Temps:          0       5       0       0       0       0       0       0       0
  6004 ;;      Totals:         0      68       0       0       0       0       0       0       0
  6005 ;;Total ram usage:       68 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 4
  6008 ;; This function calls:
  6009 ;;		___awdiv
  6010 ;;		___awmod
  6011 ;;		___fladd
  6012 ;;		___fldiv
  6013 ;;		___fleq
  6014 ;;		___flge
  6015 ;;		___flmul
  6016 ;;		___flneg
  6017 ;;		___flsub
  6018 ;;		___fltol
  6019 ;;		___fpclassifyf
  6020 ;;		_floorf
  6021 ;;		_isupper
  6022 ;;		_pad
  6023 ;;		_strcpy
  6024 ;;		_tolower
  6025 ;; This function is called by:
  6026 ;;		_vfpfcnvrt
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text31
  6031  000856                     __ptext31:
  6032                           	callstack 0
  6033  000856                     _efgtoa:
  6034                           	callstack 22
  6035  000856                     
  6036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  6037  000856  0E00               	movlw	0
  6038  000858  0100               	movlb	0	; () banked
  6039  00085A  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  6040  00085C  0E00               	movlw	0
  6041  00085E  6F86               	movwf	efgtoa@sign& (0+255),b
  6042  000860                     
  6043                           ; BSR set to: 0
  6044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  6045  000860  C062  F098         	movff	efgtoa@f,efgtoa@g
  6046  000864  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  6047  000868  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  6048  00086C  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  6049  000870                     
  6050                           ; BSR set to: 0
  6051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  6052  000870  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6053  000872  EF3F  F004         	goto	u4680
  6054  000876  EF3D  F004         	goto	u4681
  6055  00087A                     u4681:
  6056  00087A  EF55  F004         	goto	l4620
  6057  00087E                     u4680:
  6058  00087E                     
  6059                           ; BSR set to: 0
  6060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  6061  00087E  0E00               	movlw	0
  6062  000880  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  6063  000882  0E01               	movlw	1
  6064  000884  6F86               	movwf	efgtoa@sign& (0+255),b
  6065  000886                     
  6066                           ; BSR set to: 0
  6067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  6068  000886  C098  F001         	movff	efgtoa@g,___flneg@f1
  6069  00088A  C099  F002         	movff	efgtoa@g+1,___flneg@f1+1
  6070  00088E  C09A  F003         	movff	efgtoa@g+2,___flneg@f1+2
  6071  000892  C09B  F004         	movff	efgtoa@g+3,___flneg@f1+3
  6072  000896  EC43  F024         	call	___flneg	;wreg free
  6073  00089A  C001  F098         	movff	?___flneg,efgtoa@g
  6074  00089E  C002  F099         	movff	?___flneg+1,efgtoa@g+1
  6075  0008A2  C003  F09A         	movff	?___flneg+2,efgtoa@g+2
  6076  0008A6  C004  F09B         	movff	?___flneg+3,efgtoa@g+3
  6077  0008AA                     l4620:
  6078                           
  6079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  6080  0008AA  0E00               	movlw	0
  6081  0008AC  0100               	movlb	0	; () banked
  6082  0008AE  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  6083  0008B0  0E00               	movlw	0
  6084  0008B2  6F9E               	movwf	efgtoa@n& (0+255),b
  6085  0008B4                     
  6086                           ; BSR set to: 0
  6087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  6088  0008B4  C0F4  F08A         	movff	_width,efgtoa@w
  6089  0008B8  C0F5  F08B         	movff	_width+1,efgtoa@w+1
  6090  0008BC                     
  6091                           ; BSR set to: 0
  6092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  6093  0008BC  5186               	movf	efgtoa@sign& (0+255),w,b
  6094  0008BE  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6095  0008C0  A4D8               	btfss	status,2,c
  6096  0008C2  EF65  F004         	goto	u4691
  6097  0008C6  EF67  F004         	goto	u4690
  6098  0008CA                     u4691:
  6099  0008CA  EF6E  F004         	goto	l4628
  6100  0008CE                     u4690:
  6101  0008CE                     
  6102                           ; BSR set to: 0
  6103  0008CE  A5F8               	btfss	_flags& (0+255),2,b
  6104  0008D0  EF6C  F004         	goto	u4701
  6105  0008D4  EF6E  F004         	goto	u4700
  6106  0008D8                     u4701:
  6107  0008D8  EF88  F004         	goto	l4640
  6108  0008DC                     u4700:
  6109  0008DC                     l4628:
  6110                           
  6111                           ; BSR set to: 0
  6112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  6113  0008DC  5186               	movf	efgtoa@sign& (0+255),w,b
  6114  0008DE  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6115  0008E0  A4D8               	btfss	status,2,c
  6116  0008E2  EF75  F004         	goto	u4711
  6117  0008E6  EF77  F004         	goto	u4710
  6118  0008EA                     u4711:
  6119  0008EA  EF7D  F004         	goto	l4632
  6120  0008EE                     u4710:
  6121  0008EE                     
  6122                           ; BSR set to: 0
  6123  0008EE  0E00               	movlw	0
  6124  0008F0  6F6D               	movwf	(_efgtoa$1501+1)& (0+255),b
  6125  0008F2  0E2B               	movlw	43
  6126  0008F4  6F6C               	movwf	_efgtoa$1501& (0+255),b
  6127  0008F6  EF81  F004         	goto	l4634
  6128  0008FA                     l4632:
  6129                           
  6130                           ; BSR set to: 0
  6131  0008FA  0E00               	movlw	0
  6132  0008FC  6F6D               	movwf	(_efgtoa$1501+1)& (0+255),b
  6133  0008FE  0E2D               	movlw	45
  6134  000900  6F6C               	movwf	_efgtoa$1501& (0+255),b
  6135  000902                     l4634:
  6136                           
  6137                           ; BSR set to: 0
  6138  000902  C06C  F10E         	movff	_efgtoa$1501,_dbuf
  6139  000906                     
  6140                           ; BSR set to: 0
  6141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  6142  000906  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  6143  000908  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  6144  00090A                     
  6145                           ; BSR set to: 0
  6146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  6147  00090A  078A               	decf	efgtoa@w& (0+255),f,b
  6148  00090C  A0D8               	btfss	status,0,c
  6149  00090E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6150  000910                     l4640:
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6154  000910  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  6155  000914  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6156  000918  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6157  00091C  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6158  000920  EC9F  F01C         	call	___fpclassifyf	;wreg free
  6159  000924  0401               	decf	?___fpclassifyf^0,w,c
  6160  000926  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6161  000928  A4D8               	btfss	status,2,c
  6162  00092A  EF99  F004         	goto	u4721
  6163  00092E  EF9B  F004         	goto	u4720
  6164  000932                     u4721:
  6165  000932  EFF2  F004         	goto	l4658
  6166  000936                     u4720:
  6167  000936  0EBF               	movlw	191
  6168  000938  0100               	movlb	0	; () banked
  6169  00093A  6F67               	movwf	??_efgtoa& (0+255),b
  6170  00093C  0EFF               	movlw	255
  6171  00093E  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6172  000940  5166               	movf	efgtoa@c& (0+255),w,b
  6173  000942  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  6174  000944  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  6175  000946  5167               	movf	??_efgtoa& (0+255),w,b
  6176  000948  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6177  00094A  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6178  00094C  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6179  00094E  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6180  000950  E10A               	bnz	u4730
  6181  000952  0E1A               	movlw	26
  6182  000954  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6183  000956  A0D8               	btfss	status,0,c
  6184  000958  EFB0  F004         	goto	u4731
  6185  00095C  EFB3  F004         	goto	u4730
  6186  000960                     u4731:
  6187  000960  0E01               	movlw	1
  6188  000962  EFB4  F004         	goto	u4740
  6189  000966                     u4730:
  6190  000966  0E00               	movlw	0
  6191  000968                     u4740:
  6192  000968  6F6E               	movwf	_efgtoa$1502& (0+255),b
  6193  00096A  6B6F               	clrf	(_efgtoa$1502+1)& (0+255),b
  6194  00096C                     
  6195                           ; BSR set to: 0
  6196  00096C  516E               	movf	_efgtoa$1502& (0+255),w,b
  6197  00096E  116F               	iorwf	(_efgtoa$1502+1)& (0+255),w,b
  6198  000970  B4D8               	btfsc	status,2,c
  6199  000972  EFBD  F004         	goto	u4751
  6200  000976  EFBF  F004         	goto	u4750
  6201  00097A                     u4751:
  6202  00097A  EFCD  F004         	goto	l4650
  6203  00097E                     u4750:
  6204  00097E                     
  6205                           ; BSR set to: 0
  6206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  6207  00097E  0E0E               	movlw	low _dbuf
  6208  000980  259E               	addwf	efgtoa@n& (0+255),w,b
  6209  000982  6E01               	movwf	strcpy@dest^0,c
  6210  000984  0E01               	movlw	high _dbuf
  6211  000986  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6212  000988  6E02               	movwf	(strcpy@dest+1)^0,c
  6213  00098A  0E14               	movlw	low STR_23
  6214  00098C  6E03               	movwf	strcpy@src^0,c
  6215  00098E  0E08               	movlw	high STR_23
  6216  000990  6E04               	movwf	(strcpy@src+1)^0,c
  6217  000992  EC57  F021         	call	_strcpy	;wreg free
  6218                           
  6219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  6220  000996  EFD9  F004         	goto	l4652
  6221  00099A                     l4650:
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  6225  00099A  0E0E               	movlw	low _dbuf
  6226  00099C  259E               	addwf	efgtoa@n& (0+255),w,b
  6227  00099E  6E01               	movwf	strcpy@dest^0,c
  6228  0009A0  0E01               	movlw	high _dbuf
  6229  0009A2  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6230  0009A4  6E02               	movwf	(strcpy@dest+1)^0,c
  6231  0009A6  0E1C               	movlw	low STR_24
  6232  0009A8  6E03               	movwf	strcpy@src^0,c
  6233  0009AA  0E08               	movlw	high STR_24
  6234  0009AC  6E04               	movwf	(strcpy@src+1)^0,c
  6235  0009AE  EC57  F021         	call	_strcpy	;wreg free
  6236  0009B2                     l4652:
  6237                           
  6238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6239  0009B2  0100               	movlb	0	; () banked
  6240  0009B4  0EFD               	movlw	253
  6241  0009B6  278A               	addwf	efgtoa@w& (0+255),f,b
  6242  0009B8  0EFF               	movlw	255
  6243  0009BA  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6244  0009BC                     l4654:
  6245                           
  6246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6247  0009BC  C060  F011         	movff	efgtoa@fp,pad@fp
  6248  0009C0  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  6249  0009C4  0E0E               	movlw	low _dbuf
  6250  0009C6  6E13               	movwf	pad@buf^0,c
  6251  0009C8  0E01               	movlw	high _dbuf
  6252  0009CA  6E14               	movwf	(pad@buf+1)^0,c
  6253  0009CC  C08A  F015         	movff	efgtoa@w,pad@p
  6254  0009D0  C08B  F016         	movff	efgtoa@w+1,pad@p+1
  6255  0009D4  ECEE  F01D         	call	_pad	;wreg free
  6256  0009D8  C011  F060         	movff	?_pad,?_efgtoa
  6257  0009DC  C012  F061         	movff	?_pad+1,?_efgtoa+1
  6258  0009E0  EF56  F00A         	goto	l1342
  6259  0009E4                     l4658:
  6260                           
  6261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6262  0009E4  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  6263  0009E8  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6264  0009EC  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6265  0009F0  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6266  0009F4  EC9F  F01C         	call	___fpclassifyf	;wreg free
  6267  0009F8  5001               	movf	?___fpclassifyf^0,w,c
  6268  0009FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6269  0009FC  A4D8               	btfss	status,2,c
  6270  0009FE  EF03  F005         	goto	u4761
  6271  000A02  EF05  F005         	goto	u4760
  6272  000A06                     u4761:
  6273  000A06  EF45  F005         	goto	l4676
  6274  000A0A                     u4760:
  6275  000A0A  0EBF               	movlw	191
  6276  000A0C  0100               	movlb	0	; () banked
  6277  000A0E  6F67               	movwf	??_efgtoa& (0+255),b
  6278  000A10  0EFF               	movlw	255
  6279  000A12  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6280  000A14  5166               	movf	efgtoa@c& (0+255),w,b
  6281  000A16  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  6282  000A18  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  6283  000A1A  5167               	movf	??_efgtoa& (0+255),w,b
  6284  000A1C  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6285  000A1E  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6286  000A20  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6287  000A22  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6288  000A24  E10A               	bnz	u4770
  6289  000A26  0E1A               	movlw	26
  6290  000A28  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6291  000A2A  A0D8               	btfss	status,0,c
  6292  000A2C  EF1A  F005         	goto	u4771
  6293  000A30  EF1D  F005         	goto	u4770
  6294  000A34                     u4771:
  6295  000A34  0E01               	movlw	1
  6296  000A36  EF1E  F005         	goto	u4780
  6297  000A3A                     u4770:
  6298  000A3A  0E00               	movlw	0
  6299  000A3C                     u4780:
  6300  000A3C  6F70               	movwf	_efgtoa$1507& (0+255),b
  6301  000A3E  6B71               	clrf	(_efgtoa$1507+1)& (0+255),b
  6302  000A40                     
  6303                           ; BSR set to: 0
  6304  000A40  5170               	movf	_efgtoa$1507& (0+255),w,b
  6305  000A42  1171               	iorwf	(_efgtoa$1507+1)& (0+255),w,b
  6306  000A44  B4D8               	btfsc	status,2,c
  6307  000A46  EF27  F005         	goto	u4791
  6308  000A4A  EF29  F005         	goto	u4790
  6309  000A4E                     u4791:
  6310  000A4E  EF37  F005         	goto	l4668
  6311  000A52                     u4790:
  6312  000A52                     
  6313                           ; BSR set to: 0
  6314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  6315  000A52  0E0E               	movlw	low _dbuf
  6316  000A54  259E               	addwf	efgtoa@n& (0+255),w,b
  6317  000A56  6E01               	movwf	strcpy@dest^0,c
  6318  000A58  0E01               	movlw	high _dbuf
  6319  000A5A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6320  000A5C  6E02               	movwf	(strcpy@dest+1)^0,c
  6321  000A5E  0E18               	movlw	low STR_27
  6322  000A60  6E03               	movwf	strcpy@src^0,c
  6323  000A62  0E08               	movlw	high STR_27
  6324  000A64  6E04               	movwf	(strcpy@src+1)^0,c
  6325  000A66  EC57  F021         	call	_strcpy	;wreg free
  6326                           
  6327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  6328  000A6A  EFD9  F004         	goto	l4652
  6329  000A6E                     l4668:
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  6333  000A6E  0E0E               	movlw	low _dbuf
  6334  000A70  259E               	addwf	efgtoa@n& (0+255),w,b
  6335  000A72  6E01               	movwf	strcpy@dest^0,c
  6336  000A74  0E01               	movlw	high _dbuf
  6337  000A76  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6338  000A78  6E02               	movwf	(strcpy@dest+1)^0,c
  6339  000A7A  0E20               	movlw	low STR_28
  6340  000A7C  6E03               	movwf	strcpy@src^0,c
  6341  000A7E  0E08               	movlw	high STR_28
  6342  000A80  6E04               	movwf	(strcpy@src+1)^0,c
  6343  000A82  EC57  F021         	call	_strcpy	;wreg free
  6344  000A86  EFD9  F004         	goto	l4652
  6345  000A8A                     l4676:
  6346                           
  6347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  6348  000A8A  0E00               	movlw	0
  6349  000A8C  0100               	movlb	0	; () banked
  6350  000A8E  6FA0               	movwf	efgtoa@u& (0+255),b
  6351  000A90  0E00               	movlw	0
  6352  000A92  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  6353  000A94  0E80               	movlw	128
  6354  000A96  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  6355  000A98  0E3F               	movlw	63
  6356  000A9A  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  6357                           
  6358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  6359  000A9C  0E00               	movlw	0
  6360  000A9E  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  6361  000AA0  0E00               	movlw	0
  6362  000AA2  6F9C               	movwf	efgtoa@e& (0+255),b
  6363  000AA4                     
  6364                           ; BSR set to: 0
  6365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  6366  000AA4  C098  F001         	movff	efgtoa@g,___fleq@ff1
  6367  000AA8  C099  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  6368  000AAC  C09A  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  6369  000AB0  C09B  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  6370  000AB4  0E00               	movlw	0
  6371  000AB6  6E05               	movwf	___fleq@ff2^0,c
  6372  000AB8  0E00               	movlw	0
  6373  000ABA  6E06               	movwf	(___fleq@ff2+1)^0,c
  6374  000ABC  0E00               	movlw	0
  6375  000ABE  6E07               	movwf	(___fleq@ff2+2)^0,c
  6376  000AC0  0E00               	movlw	0
  6377  000AC2  6E08               	movwf	(___fleq@ff2+3)^0,c
  6378  000AC4  ECC5  F01F         	call	___fleq	;wreg free
  6379  000AC8  B0D8               	btfsc	status,0,c
  6380  000ACA  EF69  F005         	goto	u4801
  6381  000ACE  EF6B  F005         	goto	u4800
  6382  000AD2                     u4801:
  6383  000AD2  EFEE  F005         	goto	l4694
  6384  000AD6                     u4800:
  6385  000AD6  EF8A  F005         	goto	l4686
  6386  000ADA                     l4682:
  6387                           
  6388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  6389  000ADA  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6390  000ADE  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6391  000AE2  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6392  000AE6  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6393  000AEA  0E00               	movlw	0
  6394  000AEC  6E17               	movwf	___flmul@a^0,c
  6395  000AEE  0E00               	movlw	0
  6396  000AF0  6E18               	movwf	(___flmul@a+1)^0,c
  6397  000AF2  0E20               	movlw	32
  6398  000AF4  6E19               	movwf	(___flmul@a+2)^0,c
  6399  000AF6  0E41               	movlw	65
  6400  000AF8  6E1A               	movwf	(___flmul@a+3)^0,c
  6401  000AFA  ECBE  F00F         	call	___flmul	;wreg free
  6402  000AFE  C013  F0A0         	movff	?___flmul,efgtoa@u
  6403  000B02  C014  F0A1         	movff	?___flmul+1,efgtoa@u+1
  6404  000B06  C015  F0A2         	movff	?___flmul+2,efgtoa@u+2
  6405  000B0A  C016  F0A3         	movff	?___flmul+3,efgtoa@u+3
  6406  000B0E                     
  6407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  6408  000B0E  0100               	movlb	0	; () banked
  6409  000B10  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  6410  000B12  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  6411  000B14                     l4686:
  6412                           
  6413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  6414  000B14  C098  F02C         	movff	efgtoa@g,___flge@ff1
  6415  000B18  C099  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  6416  000B1C  C09A  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  6417  000B20  C09B  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  6418  000B24  0E00               	movlw	0
  6419  000B26  6E17               	movwf	___flmul@a^0,c
  6420  000B28  0E00               	movlw	0
  6421  000B2A  6E18               	movwf	(___flmul@a+1)^0,c
  6422  000B2C  0E20               	movlw	32
  6423  000B2E  6E19               	movwf	(___flmul@a+2)^0,c
  6424  000B30  0E41               	movlw	65
  6425  000B32  6E1A               	movwf	(___flmul@a+3)^0,c
  6426  000B34  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6427  000B38  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6428  000B3C  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6429  000B40  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6430  000B44  ECBE  F00F         	call	___flmul	;wreg free
  6431  000B48  C013  F030         	movff	?___flmul,___flge@ff2
  6432  000B4C  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  6433  000B50  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  6434  000B54  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  6435  000B58  EC9E  F01B         	call	___flge	;wreg free
  6436  000B5C  B0D8               	btfsc	status,0,c
  6437  000B5E  EFB3  F005         	goto	u4811
  6438  000B62  EFB5  F005         	goto	u4810
  6439  000B66                     u4811:
  6440  000B66  EF6D  F005         	goto	l4682
  6441  000B6A                     u4810:
  6442  000B6A  EFD5  F005         	goto	l4692
  6443  000B6E                     l4688:
  6444                           
  6445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  6446  000B6E  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  6447  000B72  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  6448  000B76  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  6449  000B7A  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  6450  000B7E  0E00               	movlw	0
  6451  000B80  6E30               	movwf	___fldiv@a^0,c
  6452  000B82  0E00               	movlw	0
  6453  000B84  6E31               	movwf	(___fldiv@a+1)^0,c
  6454  000B86  0E20               	movlw	32
  6455  000B88  6E32               	movwf	(___fldiv@a+2)^0,c
  6456  000B8A  0E41               	movlw	65
  6457  000B8C  6E33               	movwf	(___fldiv@a+3)^0,c
  6458  000B8E  ECD3  F011         	call	___fldiv	;wreg free
  6459  000B92  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  6460  000B96  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  6461  000B9A  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  6462  000B9E  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  6463  000BA2                     
  6464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  6465  000BA2  0100               	movlb	0	; () banked
  6466  000BA4  079C               	decf	efgtoa@e& (0+255),f,b
  6467  000BA6  A0D8               	btfss	status,0,c
  6468  000BA8  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  6469  000BAA                     l4692:
  6470                           
  6471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  6472  000BAA  C098  F02C         	movff	efgtoa@g,___flge@ff1
  6473  000BAE  C099  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  6474  000BB2  C09A  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  6475  000BB6  C09B  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  6476  000BBA  C0A0  F030         	movff	efgtoa@u,___flge@ff2
  6477  000BBE  C0A1  F031         	movff	efgtoa@u+1,___flge@ff2+1
  6478  000BC2  C0A2  F032         	movff	efgtoa@u+2,___flge@ff2+2
  6479  000BC6  C0A3  F033         	movff	efgtoa@u+3,___flge@ff2+3
  6480  000BCA  EC9E  F01B         	call	___flge	;wreg free
  6481  000BCE  A0D8               	btfss	status,0,c
  6482  000BD0  EFEC  F005         	goto	u4821
  6483  000BD4  EFEE  F005         	goto	u4820
  6484  000BD8                     u4821:
  6485  000BD8  EFB7  F005         	goto	l4688
  6486  000BDC                     u4820:
  6487  000BDC                     l4694:
  6488                           
  6489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  6490  000BDC  C066  F007         	movff	efgtoa@c,tolower@c
  6491  000BE0  6A08               	clrf	(tolower@c+1)^0,c
  6492  000BE2  ECC9  F020         	call	_tolower	;wreg free
  6493  000BE6  5007               	movf	?_tolower^0,w,c
  6494  000BE8  0100               	movlb	0	; () banked
  6495  000BEA  6F8D               	movwf	efgtoa@mode& (0+255),b
  6496  000BEC                     
  6497                           ; BSR set to: 0
  6498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  6499  000BEC  C08D  F08C         	movff	efgtoa@mode,efgtoa@nmode
  6500  000BF0                     
  6501                           ; BSR set to: 0
  6502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  6503  000BF0  0E67               	movlw	103
  6504  000BF2  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6505  000BF4  A4D8               	btfss	status,2,c
  6506  000BF6  EFFF  F005         	goto	u4831
  6507  000BFA  EF01  F006         	goto	u4830
  6508  000BFE                     u4831:
  6509  000BFE  EF27  F006         	goto	l4708
  6510  000C02                     u4830:
  6511  000C02                     
  6512                           ; BSR set to: 0
  6513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  6514  000C02  51F6               	movf	_prec& (0+255),w,b
  6515  000C04  11F7               	iorwf	(_prec+1)& (0+255),w,b
  6516  000C06  A4D8               	btfss	status,2,c
  6517  000C08  EF08  F006         	goto	u4841
  6518  000C0C  EF0A  F006         	goto	u4840
  6519  000C10                     u4841:
  6520  000C10  EF0E  F006         	goto	l4704
  6521  000C14                     u4840:
  6522  000C14                     
  6523                           ; BSR set to: 0
  6524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  6525  000C14  0E00               	movlw	0
  6526  000C16  6FF7               	movwf	(_prec+1)& (0+255),b
  6527  000C18  0E01               	movlw	1
  6528  000C1A  6FF6               	movwf	_prec& (0+255),b
  6529  000C1C                     l4704:
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  6533  000C1C  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6534  000C1E  EF1B  F006         	goto	u4850
  6535  000C22  51F7               	movf	(_prec+1)& (0+255),w,b
  6536  000C24  E106               	bnz	u4851
  6537  000C26  05F6               	decf	_prec& (0+255),w,b
  6538  000C28  B0D8               	btfsc	status,0,c
  6539  000C2A  EF19  F006         	goto	u4851
  6540  000C2E  EF1B  F006         	goto	u4850
  6541  000C32                     u4851:
  6542  000C32  EF21  F006         	goto	l1360
  6543  000C36                     u4850:
  6544  000C36                     l4706:
  6545                           
  6546                           ; BSR set to: 0
  6547  000C36  0E00               	movlw	0
  6548  000C38  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  6549  000C3A  0E06               	movlw	6
  6550  000C3C  6F88               	movwf	efgtoa@p& (0+255),b
  6551  000C3E  EF30  F006         	goto	l4714
  6552  000C42                     l1360:
  6553                           
  6554                           ; BSR set to: 0
  6555  000C42  C0F6  F088         	movff	_prec,efgtoa@p
  6556  000C46  C0F7  F089         	movff	_prec+1,efgtoa@p+1
  6557  000C4A  EF30  F006         	goto	l4714
  6558  000C4E                     l4708:
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  6562  000C4E  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6563  000C50  EF2C  F006         	goto	u4861
  6564  000C54  EF2E  F006         	goto	u4860
  6565  000C58                     u4861:
  6566  000C58  EF1B  F006         	goto	l4706
  6567  000C5C                     u4860:
  6568  000C5C  EF21  F006         	goto	l1360
  6569  000C60                     l4714:
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  6573  000C60  0E67               	movlw	103
  6574  000C62  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6575  000C64  A4D8               	btfss	status,2,c
  6576  000C66  EF37  F006         	goto	u4871
  6577  000C6A  EF39  F006         	goto	u4870
  6578  000C6E                     u4871:
  6579  000C6E  EF68  F006         	goto	l4724
  6580  000C72                     u4870:
  6581  000C72                     
  6582                           ; BSR set to: 0
  6583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  6584  000C72  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  6585  000C74  EF47  F006         	goto	u4880
  6586  000C78  0EFC               	movlw	252
  6587  000C7A  5D9C               	subwf	efgtoa@e& (0+255),w,b
  6588  000C7C  0EFF               	movlw	255
  6589  000C7E  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6590  000C80  A0D8               	btfss	status,0,c
  6591  000C82  EF45  F006         	goto	u4881
  6592  000C86  EF47  F006         	goto	u4880
  6593  000C8A                     u4881:
  6594  000C8A  EF66  F006         	goto	l4722
  6595  000C8E                     u4880:
  6596  000C8E                     
  6597                           ; BSR set to: 0
  6598  000C8E  0EFF               	movlw	255
  6599  000C90  6F67               	movwf	??_efgtoa& (0+255),b
  6600  000C92  0EFF               	movlw	255
  6601  000C94  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6602  000C96  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  6603  000C9A  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  6604  000C9E  5167               	movf	??_efgtoa& (0+255),w,b
  6605  000CA0  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6606  000CA2  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6607  000CA4  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6608  000CA6  519C               	movf	efgtoa@e& (0+255),w,b
  6609  000CA8  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6610  000CAA  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6611  000CAC  0A80               	xorlw	128
  6612  000CAE  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  6613  000CB0  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  6614  000CB2  0A80               	xorlw	128
  6615  000CB4  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6616  000CB6  A0D8               	btfss	status,0,c
  6617  000CB8  EF60  F006         	goto	u4891
  6618  000CBC  EF62  F006         	goto	u4890
  6619  000CC0                     u4891:
  6620  000CC0  EF66  F006         	goto	l4722
  6621  000CC4                     u4890:
  6622  000CC4                     
  6623                           ; BSR set to: 0
  6624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  6625  000CC4  0E66               	movlw	102
  6626  000CC6  6F8C               	movwf	efgtoa@nmode& (0+255),b
  6627                           
  6628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  6629  000CC8  EF68  F006         	goto	l4724
  6630  000CCC                     l4722:
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  6634  000CCC  0E65               	movlw	101
  6635  000CCE  6F8C               	movwf	efgtoa@nmode& (0+255),b
  6636  000CD0                     l4724:
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  6640  000CD0  C088  F07E         	movff	efgtoa@p,efgtoa@m
  6641  000CD4  C089  F07F         	movff	efgtoa@p+1,efgtoa@m+1
  6642  000CD8                     
  6643                           ; BSR set to: 0
  6644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  6645  000CD8  0E67               	movlw	103
  6646  000CDA  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6647  000CDC  A4D8               	btfss	status,2,c
  6648  000CDE  EF73  F006         	goto	u4901
  6649  000CE2  EF75  F006         	goto	u4900
  6650  000CE6                     u4901:
  6651  000CE6  EF85  F006         	goto	l4732
  6652  000CEA                     u4900:
  6653  000CEA                     
  6654                           ; BSR set to: 0
  6655  000CEA  0E66               	movlw	102
  6656  000CEC  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6657  000CEE  A4D8               	btfss	status,2,c
  6658  000CF0  EF7C  F006         	goto	u4911
  6659  000CF4  EF7E  F006         	goto	u4910
  6660  000CF8                     u4911:
  6661  000CF8  EF87  F006         	goto	l4734
  6662  000CFC                     u4910:
  6663  000CFC                     
  6664                           ; BSR set to: 0
  6665  000CFC  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6666  000CFE  EF85  F006         	goto	u4920
  6667  000D02  EF83  F006         	goto	u4921
  6668  000D06                     u4921:
  6669  000D06  EF87  F006         	goto	l4734
  6670  000D0A                     u4920:
  6671  000D0A                     l4732:
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  6675  000D0A  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  6676  000D0C  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  6677  000D0E                     l4734:
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  6681  000D0E  0E66               	movlw	102
  6682  000D10  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6683  000D12  A4D8               	btfss	status,2,c
  6684  000D14  EF8E  F006         	goto	u4931
  6685  000D18  EF90  F006         	goto	u4930
  6686  000D1C                     u4931:
  6687  000D1C  EFB0  F006         	goto	l4744
  6688  000D20                     u4930:
  6689  000D20                     
  6690                           ; BSR set to: 0
  6691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  6692  000D20  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6693  000D22  EF97  F006         	goto	u4940
  6694  000D26  EF95  F006         	goto	u4941
  6695  000D2A                     u4941:
  6696  000D2A  EFA3  F006         	goto	l4740
  6697  000D2E                     u4940:
  6698  000D2E                     
  6699                           ; BSR set to: 0
  6700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  6701  000D2E  0E00               	movlw	0
  6702  000D30  6FA0               	movwf	efgtoa@u& (0+255),b
  6703  000D32  0E00               	movlw	0
  6704  000D34  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  6705  000D36  0E80               	movlw	128
  6706  000D38  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  6707  000D3A  0E3F               	movlw	63
  6708  000D3C  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  6709                           
  6710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  6711  000D3E  0E00               	movlw	0
  6712  000D40  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  6713  000D42  0E00               	movlw	0
  6714  000D44  6F9C               	movwf	efgtoa@e& (0+255),b
  6715  000D46                     l4740:
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  6719  000D46  0E67               	movlw	103
  6720  000D48  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6721  000D4A  B4D8               	btfsc	status,2,c
  6722  000D4C  EFAA  F006         	goto	u4951
  6723  000D50  EFAC  F006         	goto	u4950
  6724  000D54                     u4951:
  6725  000D54  EFB0  F006         	goto	l4744
  6726  000D58                     u4950:
  6727  000D58                     
  6728                           ; BSR set to: 0
  6729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  6730  000D58  519C               	movf	efgtoa@e& (0+255),w,b
  6731  000D5A  277E               	addwf	efgtoa@m& (0+255),f,b
  6732  000D5C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  6733  000D5E  237F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6734  000D60                     l4744:
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  6738  000D60  0E00               	movlw	0
  6739  000D62  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  6740  000D64  0E00               	movlw	0
  6741  000D66  6F96               	movwf	efgtoa@i& (0+255),b
  6742  000D68                     
  6743                           ; BSR set to: 0
  6744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  6745  000D68  C098  F08E         	movff	efgtoa@g,efgtoa@h
  6746  000D6C  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  6747  000D70  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  6748  000D74  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  6749  000D78                     
  6750                           ; BSR set to: 0
  6751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  6752  000D78  C0A0  F080         	movff	efgtoa@u,efgtoa@ou
  6753  000D7C  C0A1  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  6754  000D80  C0A2  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  6755  000D84  C0A3  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  6756                           
  6757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6758  000D88  EF41  F007         	goto	l4758
  6759  000D8C                     l4750:
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  6763  000D8C  C08E  F02C         	movff	efgtoa@h,___fldiv@b
  6764  000D90  C08F  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  6765  000D94  C090  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  6766  000D98  C091  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  6767  000D9C  C0A0  F030         	movff	efgtoa@u,___fldiv@a
  6768  000DA0  C0A1  F031         	movff	efgtoa@u+1,___fldiv@a+1
  6769  000DA4  C0A2  F032         	movff	efgtoa@u+2,___fldiv@a+2
  6770  000DA8  C0A3  F033         	movff	efgtoa@u+3,___fldiv@a+3
  6771  000DAC  ECD3  F011         	call	___fldiv	;wreg free
  6772  000DB0  C02C  F045         	movff	?___fldiv,floorf@x
  6773  000DB4  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  6774  000DB8  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  6775  000DBC  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  6776  000DC0  ECC4  F017         	call	_floorf	;wreg free
  6777  000DC4  C045  F092         	movff	?_floorf,efgtoa@l
  6778  000DC8  C046  F093         	movff	?_floorf+1,efgtoa@l+1
  6779  000DCC  C047  F094         	movff	?_floorf+2,efgtoa@l+2
  6780  000DD0  C048  F095         	movff	?_floorf+3,efgtoa@l+3
  6781                           
  6782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  6783  000DD4  C092  F055         	movff	efgtoa@l,___fltol@f1
  6784  000DD8  C093  F056         	movff	efgtoa@l+1,___fltol@f1+1
  6785  000DDC  C094  F057         	movff	efgtoa@l+2,___fltol@f1+2
  6786  000DE0  C095  F058         	movff	efgtoa@l+3,___fltol@f1+3
  6787  000DE4  EC1B  F01B         	call	___fltol	;wreg free
  6788  000DE8  C055  F084         	movff	?___fltol,efgtoa@d
  6789  000DEC  C056  F085         	movff	?___fltol+1,efgtoa@d+1
  6790  000DF0                     
  6791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  6792  000DF0  C08E  F055         	movff	efgtoa@h,___flsub@b
  6793  000DF4  C08F  F056         	movff	efgtoa@h+1,___flsub@b+1
  6794  000DF8  C090  F057         	movff	efgtoa@h+2,___flsub@b+2
  6795  000DFC  C091  F058         	movff	efgtoa@h+3,___flsub@b+3
  6796  000E00  C0A0  F017         	movff	efgtoa@u,___flmul@a
  6797  000E04  C0A1  F018         	movff	efgtoa@u+1,___flmul@a+1
  6798  000E08  C0A2  F019         	movff	efgtoa@u+2,___flmul@a+2
  6799  000E0C  C0A3  F01A         	movff	efgtoa@u+3,___flmul@a+3
  6800  000E10  C092  F013         	movff	efgtoa@l,___flmul@b
  6801  000E14  C093  F014         	movff	efgtoa@l+1,___flmul@b+1
  6802  000E18  C094  F015         	movff	efgtoa@l+2,___flmul@b+2
  6803  000E1C  C095  F016         	movff	efgtoa@l+3,___flmul@b+3
  6804  000E20  ECBE  F00F         	call	___flmul	;wreg free
  6805  000E24  C013  F059         	movff	?___flmul,___flsub@a
  6806  000E28  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  6807  000E2C  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  6808  000E30  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  6809  000E34  EC6B  F023         	call	___flsub	;wreg free
  6810  000E38  C055  F08E         	movff	?___flsub,efgtoa@h
  6811  000E3C  C056  F08F         	movff	?___flsub+1,efgtoa@h+1
  6812  000E40  C057  F090         	movff	?___flsub+2,efgtoa@h+2
  6813  000E44  C058  F091         	movff	?___flsub+3,efgtoa@h+3
  6814  000E48                     
  6815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  6816  000E48  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  6817  000E4C  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  6818  000E50  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  6819  000E54  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  6820  000E58  0E00               	movlw	0
  6821  000E5A  6E30               	movwf	___fldiv@a^0,c
  6822  000E5C  0E00               	movlw	0
  6823  000E5E  6E31               	movwf	(___fldiv@a+1)^0,c
  6824  000E60  0E20               	movlw	32
  6825  000E62  6E32               	movwf	(___fldiv@a+2)^0,c
  6826  000E64  0E41               	movlw	65
  6827  000E66  6E33               	movwf	(___fldiv@a+3)^0,c
  6828  000E68  ECD3  F011         	call	___fldiv	;wreg free
  6829  000E6C  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  6830  000E70  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  6831  000E74  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  6832  000E78  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  6833  000E7C                     
  6834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  6835  000E7C  0100               	movlb	0	; () banked
  6836  000E7E  4B96               	infsnz	efgtoa@i& (0+255),f,b
  6837  000E80  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  6838  000E82                     l4758:
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6842  000E82  517E               	movf	efgtoa@m& (0+255),w,b
  6843  000E84  5D96               	subwf	efgtoa@i& (0+255),w,b
  6844  000E86  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  6845  000E88  0A80               	xorlw	128
  6846  000E8A  6F67               	movwf	??_efgtoa& (0+255),b
  6847  000E8C  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  6848  000E8E  0A80               	xorlw	128
  6849  000E90  5967               	subwfb	??_efgtoa& (0+255),w,b
  6850  000E92  A0D8               	btfss	status,0,c
  6851  000E94  EF4E  F007         	goto	u4961
  6852  000E98  EF50  F007         	goto	u4960
  6853  000E9C                     u4961:
  6854  000E9C  EFC6  F006         	goto	l4750
  6855  000EA0                     u4960:
  6856  000EA0                     
  6857                           ; BSR set to: 0
  6858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  6859  000EA0  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6860  000EA4  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6861  000EA8  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6862  000EAC  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6863  000EB0  0E00               	movlw	0
  6864  000EB2  6E17               	movwf	___flmul@a^0,c
  6865  000EB4  0E00               	movlw	0
  6866  000EB6  6E18               	movwf	(___flmul@a+1)^0,c
  6867  000EB8  0EA0               	movlw	160
  6868  000EBA  6E19               	movwf	(___flmul@a+2)^0,c
  6869  000EBC  0E40               	movlw	64
  6870  000EBE  6E1A               	movwf	(___flmul@a+3)^0,c
  6871  000EC0  ECBE  F00F         	call	___flmul	;wreg free
  6872  000EC4  C013  F092         	movff	?___flmul,efgtoa@l
  6873  000EC8  C014  F093         	movff	?___flmul+1,efgtoa@l+1
  6874  000ECC  C015  F094         	movff	?___flmul+2,efgtoa@l+2
  6875  000ED0  C016  F095         	movff	?___flmul+3,efgtoa@l+3
  6876  000ED4                     
  6877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  6878  000ED4  C08E  F02C         	movff	efgtoa@h,___flge@ff1
  6879  000ED8  C08F  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  6880  000EDC  C090  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  6881  000EE0  C091  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  6882  000EE4  C092  F030         	movff	efgtoa@l,___flge@ff2
  6883  000EE8  C093  F031         	movff	efgtoa@l+1,___flge@ff2+1
  6884  000EEC  C094  F032         	movff	efgtoa@l+2,___flge@ff2+2
  6885  000EF0  C095  F033         	movff	efgtoa@l+3,___flge@ff2+3
  6886  000EF4  EC9E  F01B         	call	___flge	;wreg free
  6887  000EF8  B0D8               	btfsc	status,0,c
  6888  000EFA  EF81  F007         	goto	u4971
  6889  000EFE  EF83  F007         	goto	u4970
  6890  000F02                     u4971:
  6891  000F02  EF8E  F007         	goto	l4766
  6892  000F06                     u4970:
  6893  000F06                     
  6894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  6895  000F06  0E00               	movlw	0
  6896  000F08  0100               	movlb	0	; () banked
  6897  000F0A  6F92               	movwf	efgtoa@l& (0+255),b
  6898  000F0C  0E00               	movlw	0
  6899  000F0E  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  6900  000F10  0E00               	movlw	0
  6901  000F12  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  6902  000F14  0E00               	movlw	0
  6903  000F16  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  6904                           
  6905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  6906  000F18  EFB7  F007         	goto	l4772
  6907  000F1C                     l4766:
  6908                           
  6909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  6910  000F1C  C08E  F001         	movff	efgtoa@h,___fleq@ff1
  6911  000F20  C08F  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  6912  000F24  C090  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  6913  000F28  C091  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  6914  000F2C  C092  F005         	movff	efgtoa@l,___fleq@ff2
  6915  000F30  C093  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  6916  000F34  C094  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  6917  000F38  C095  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  6918  000F3C  ECC5  F01F         	call	___fleq	;wreg free
  6919  000F40  A0D8               	btfss	status,0,c
  6920  000F42  EFA5  F007         	goto	u4981
  6921  000F46  EFA7  F007         	goto	u4980
  6922  000F4A                     u4981:
  6923  000F4A  EFB7  F007         	goto	l4772
  6924  000F4E                     u4980:
  6925  000F4E  0100               	movlb	0	; () banked
  6926  000F50  B184               	btfsc	efgtoa@d& (0+255),0,b
  6927  000F52  EFAD  F007         	goto	u4991
  6928  000F56  EFAF  F007         	goto	u4990
  6929  000F5A                     u4991:
  6930  000F5A  EFB7  F007         	goto	l4772
  6931  000F5E                     u4990:
  6932  000F5E                     
  6933                           ; BSR set to: 0
  6934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  6935  000F5E  0E00               	movlw	0
  6936  000F60  6F92               	movwf	efgtoa@l& (0+255),b
  6937  000F62  0E00               	movlw	0
  6938  000F64  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  6939  000F66  0E00               	movlw	0
  6940  000F68  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  6941  000F6A  0E00               	movlw	0
  6942  000F6C  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  6943  000F6E                     l4772:
  6944                           
  6945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  6946  000F6E  C098  F045         	movff	efgtoa@g,___fladd@b
  6947  000F72  C099  F046         	movff	efgtoa@g+1,___fladd@b+1
  6948  000F76  C09A  F047         	movff	efgtoa@g+2,___fladd@b+2
  6949  000F7A  C09B  F048         	movff	efgtoa@g+3,___fladd@b+3
  6950  000F7E  C092  F049         	movff	efgtoa@l,___fladd@a
  6951  000F82  C093  F04A         	movff	efgtoa@l+1,___fladd@a+1
  6952  000F86  C094  F04B         	movff	efgtoa@l+2,___fladd@a+2
  6953  000F8A  C095  F04C         	movff	efgtoa@l+3,___fladd@a+3
  6954  000F8E  EC5E  F00D         	call	___fladd	;wreg free
  6955  000F92  C045  F08E         	movff	?___fladd,efgtoa@h
  6956  000F96  C046  F08F         	movff	?___fladd+1,efgtoa@h+1
  6957  000F9A  C047  F090         	movff	?___fladd+2,efgtoa@h+2
  6958  000F9E  C048  F091         	movff	?___fladd+3,efgtoa@h+3
  6959  000FA2                     
  6960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  6961  000FA2  C08E  F02C         	movff	efgtoa@h,___flge@ff1
  6962  000FA6  C08F  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  6963  000FAA  C090  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  6964  000FAE  C091  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  6965  000FB2  0E00               	movlw	0
  6966  000FB4  6E17               	movwf	___flmul@a^0,c
  6967  000FB6  0E00               	movlw	0
  6968  000FB8  6E18               	movwf	(___flmul@a+1)^0,c
  6969  000FBA  0E20               	movlw	32
  6970  000FBC  6E19               	movwf	(___flmul@a+2)^0,c
  6971  000FBE  0E41               	movlw	65
  6972  000FC0  6E1A               	movwf	(___flmul@a+3)^0,c
  6973  000FC2  C080  F013         	movff	efgtoa@ou,___flmul@b
  6974  000FC6  C081  F014         	movff	efgtoa@ou+1,___flmul@b+1
  6975  000FCA  C082  F015         	movff	efgtoa@ou+2,___flmul@b+2
  6976  000FCE  C083  F016         	movff	efgtoa@ou+3,___flmul@b+3
  6977  000FD2  ECBE  F00F         	call	___flmul	;wreg free
  6978  000FD6  C013  F030         	movff	?___flmul,___flge@ff2
  6979  000FDA  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  6980  000FDE  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  6981  000FE2  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  6982  000FE6  EC9E  F01B         	call	___flge	;wreg free
  6983  000FEA  A0D8               	btfss	status,0,c
  6984  000FEC  EFFA  F007         	goto	u5001
  6985  000FF0  EFFC  F007         	goto	u5000
  6986  000FF4                     u5001:
  6987  000FF4  EF25  F008         	goto	l4784
  6988  000FF8                     u5000:
  6989  000FF8                     
  6990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  6991  000FF8  0100               	movlb	0	; () banked
  6992  000FFA  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  6993  000FFC  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  6994  000FFE                     
  6995                           ; BSR set to: 0
  6996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  6997  000FFE  C080  F013         	movff	efgtoa@ou,___flmul@b
  6998  001002  C081  F014         	movff	efgtoa@ou+1,___flmul@b+1
  6999  001006  C082  F015         	movff	efgtoa@ou+2,___flmul@b+2
  7000  00100A  C083  F016         	movff	efgtoa@ou+3,___flmul@b+3
  7001  00100E  0E00               	movlw	0
  7002  001010  6E17               	movwf	___flmul@a^0,c
  7003  001012  0E00               	movlw	0
  7004  001014  6E18               	movwf	(___flmul@a+1)^0,c
  7005  001016  0E20               	movlw	32
  7006  001018  6E19               	movwf	(___flmul@a+2)^0,c
  7007  00101A  0E41               	movlw	65
  7008  00101C  6E1A               	movwf	(___flmul@a+3)^0,c
  7009  00101E  ECBE  F00F         	call	___flmul	;wreg free
  7010  001022  C013  F080         	movff	?___flmul,efgtoa@ou
  7011  001026  C014  F081         	movff	?___flmul+1,efgtoa@ou+1
  7012  00102A  C015  F082         	movff	?___flmul+2,efgtoa@ou+2
  7013  00102E  C016  F083         	movff	?___flmul+3,efgtoa@ou+3
  7014  001032                     
  7015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  7016  001032  0E66               	movlw	102
  7017  001034  0100               	movlb	0	; () banked
  7018  001036  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7019  001038  A4D8               	btfss	status,2,c
  7020  00103A  EF21  F008         	goto	u5011
  7021  00103E  EF23  F008         	goto	u5010
  7022  001042                     u5011:
  7023  001042  EF25  F008         	goto	l4784
  7024  001046                     u5010:
  7025  001046                     
  7026                           ; BSR set to: 0
  7027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  7028  001046  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  7029  001048  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  7030  00104A                     l4784:
  7031                           
  7032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  7033  00104A  C080  F0A0         	movff	efgtoa@ou,efgtoa@u
  7034  00104E  C081  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  7035  001052  C082  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  7036  001056  C083  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  7037  00105A                     
  7038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  7039  00105A  0E65               	movlw	101
  7040  00105C  0100               	movlb	0	; () banked
  7041  00105E  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7042  001060  B4D8               	btfsc	status,2,c
  7043  001062  EF35  F008         	goto	u5021
  7044  001066  EF37  F008         	goto	u5020
  7045  00106A                     u5021:
  7046  00106A  EF3D  F008         	goto	l4790
  7047  00106E                     u5020:
  7048  00106E                     
  7049                           ; BSR set to: 0
  7050  00106E  C09C  F07C         	movff	efgtoa@e,efgtoa@ne
  7051  001072  C09D  F07D         	movff	efgtoa@e+1,efgtoa@ne+1
  7052  001076  EF41  F008         	goto	l1388
  7053  00107A                     l4790:
  7054                           
  7055                           ; BSR set to: 0
  7056  00107A  0E00               	movlw	0
  7057  00107C  6F7D               	movwf	(efgtoa@ne+1)& (0+255),b
  7058  00107E  0E00               	movlw	0
  7059  001080  6F7C               	movwf	efgtoa@ne& (0+255),b
  7060  001082                     l1388:
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  7064  001082  0E00               	movlw	0
  7065  001084  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  7066  001086  0E00               	movlw	0
  7067  001088  6F7A               	movwf	efgtoa@pp& (0+255),b
  7068                           
  7069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  7070  00108A  0E00               	movlw	0
  7071  00108C  6F79               	movwf	(efgtoa@t+1)& (0+255),b
  7072  00108E  0E00               	movlw	0
  7073  001090  6F78               	movwf	efgtoa@t& (0+255),b
  7074                           
  7075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  7076  001092  0E00               	movlw	0
  7077  001094  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7078  001096  0E00               	movlw	0
  7079  001098  6F96               	movwf	efgtoa@i& (0+255),b
  7080                           
  7081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7082  00109A  EF3C  F009         	goto	l4840
  7083  00109E                     l4792:
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  7087  00109E  C08E  F02C         	movff	efgtoa@h,___fldiv@b
  7088  0010A2  C08F  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  7089  0010A6  C090  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  7090  0010AA  C091  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  7091  0010AE  C0A0  F030         	movff	efgtoa@u,___fldiv@a
  7092  0010B2  C0A1  F031         	movff	efgtoa@u+1,___fldiv@a+1
  7093  0010B6  C0A2  F032         	movff	efgtoa@u+2,___fldiv@a+2
  7094  0010BA  C0A3  F033         	movff	efgtoa@u+3,___fldiv@a+3
  7095  0010BE  ECD3  F011         	call	___fldiv	;wreg free
  7096  0010C2  C02C  F045         	movff	?___fldiv,floorf@x
  7097  0010C6  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  7098  0010CA  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  7099  0010CE  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  7100  0010D2  ECC4  F017         	call	_floorf	;wreg free
  7101  0010D6  C045  F092         	movff	?_floorf,efgtoa@l
  7102  0010DA  C046  F093         	movff	?_floorf+1,efgtoa@l+1
  7103  0010DE  C047  F094         	movff	?_floorf+2,efgtoa@l+2
  7104  0010E2  C048  F095         	movff	?_floorf+3,efgtoa@l+3
  7105                           
  7106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  7107  0010E6  C092  F055         	movff	efgtoa@l,___fltol@f1
  7108  0010EA  C093  F056         	movff	efgtoa@l+1,___fltol@f1+1
  7109  0010EE  C094  F057         	movff	efgtoa@l+2,___fltol@f1+2
  7110  0010F2  C095  F058         	movff	efgtoa@l+3,___fltol@f1+3
  7111  0010F6  EC1B  F01B         	call	___fltol	;wreg free
  7112  0010FA  C055  F084         	movff	?___fltol,efgtoa@d
  7113  0010FE  C056  F085         	movff	?___fltol+1,efgtoa@d+1
  7114  001102                     
  7115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7116  001102  0100               	movlb	0	; () banked
  7117  001104  B9F8               	btfsc	_flags& (0+255),4,b
  7118  001106  EF87  F008         	goto	u5031
  7119  00110A  EF89  F008         	goto	u5030
  7120  00110E                     u5031:
  7121  00110E  EFA6  F008         	goto	l4804
  7122  001112                     u5030:
  7123  001112                     
  7124                           ; BSR set to: 0
  7125  001112  5184               	movf	efgtoa@d& (0+255),w,b
  7126  001114  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7127  001116  A4D8               	btfss	status,2,c
  7128  001118  EF90  F008         	goto	u5041
  7129  00111C  EF92  F008         	goto	u5040
  7130  001120                     u5041:
  7131  001120  EFA6  F008         	goto	l4804
  7132  001124                     u5040:
  7133  001124                     
  7134                           ; BSR set to: 0
  7135  001124  0E67               	movlw	103
  7136  001126  198D               	xorwf	efgtoa@mode& (0+255),w,b
  7137  001128  A4D8               	btfss	status,2,c
  7138  00112A  EF99  F008         	goto	u5051
  7139  00112E  EF9B  F008         	goto	u5050
  7140  001132                     u5051:
  7141  001132  EFA6  F008         	goto	l4804
  7142  001136                     u5050:
  7143  001136                     
  7144                           ; BSR set to: 0
  7145  001136  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7146  001138  EFA2  F008         	goto	u5060
  7147  00113C  EFA0  F008         	goto	u5061
  7148  001140                     u5061:
  7149  001140  EFA6  F008         	goto	l4804
  7150  001144                     u5060:
  7151  001144                     
  7152                           ; BSR set to: 0
  7153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  7154  001144  4B78               	infsnz	efgtoa@t& (0+255),f,b
  7155  001146  2B79               	incf	(efgtoa@t+1)& (0+255),f,b
  7156                           
  7157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  7158  001148  EFF0  F008         	goto	l4832
  7159  00114C                     l4804:
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  7163  00114C  517A               	movf	efgtoa@pp& (0+255),w,b
  7164  00114E  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7165  001150  A4D8               	btfss	status,2,c
  7166  001152  EFAD  F008         	goto	u5071
  7167  001156  EFAF  F008         	goto	u5070
  7168  00115A                     u5071:
  7169  00115A  EFD9  F008         	goto	l4824
  7170  00115E                     u5070:
  7171  00115E                     
  7172                           ; BSR set to: 0
  7173  00115E  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7174  001160  EFB6  F008         	goto	u5080
  7175  001164  EFB4  F008         	goto	u5081
  7176  001168                     u5081:
  7177  001168  EFD9  F008         	goto	l4824
  7178  00116C                     u5080:
  7179  00116C                     
  7180                           ; BSR set to: 0
  7181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  7182  00116C  0E0E               	movlw	low _dbuf
  7183  00116E  259E               	addwf	efgtoa@n& (0+255),w,b
  7184  001170  6ED9               	movwf	fsr2l,c
  7185  001172  0E01               	movlw	high _dbuf
  7186  001174  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7187  001176  6EDA               	movwf	fsr2h,c
  7188  001178  0E2E               	movlw	46
  7189  00117A  6EDF               	movwf	indf2,c
  7190  00117C                     
  7191                           ; BSR set to: 0
  7192  00117C  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7193  00117E  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7194  001180                     
  7195                           ; BSR set to: 0
  7196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  7197  001180  078A               	decf	efgtoa@w& (0+255),f,b
  7198  001182  A0D8               	btfss	status,0,c
  7199  001184  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7200  001186                     
  7201                           ; BSR set to: 0
  7202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  7203  001186  0E00               	movlw	0
  7204  001188  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  7205  00118A  0E01               	movlw	1
  7206  00118C  6F7A               	movwf	efgtoa@pp& (0+255),b
  7207  00118E  EFD9  F008         	goto	l4824
  7208  001192                     l4816:
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  7212  001192  0E0E               	movlw	low _dbuf
  7213  001194  259E               	addwf	efgtoa@n& (0+255),w,b
  7214  001196  6ED9               	movwf	fsr2l,c
  7215  001198  0E01               	movlw	high _dbuf
  7216  00119A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7217  00119C  6EDA               	movwf	fsr2h,c
  7218  00119E  0E30               	movlw	48
  7219  0011A0  6EDF               	movwf	indf2,c
  7220  0011A2                     
  7221                           ; BSR set to: 0
  7222  0011A2  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7223  0011A4  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7224  0011A6                     
  7225                           ; BSR set to: 0
  7226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  7227  0011A6  078A               	decf	efgtoa@w& (0+255),f,b
  7228  0011A8  A0D8               	btfss	status,0,c
  7229  0011AA  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7230  0011AC                     
  7231                           ; BSR set to: 0
  7232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  7233  0011AC  0778               	decf	efgtoa@t& (0+255),f,b
  7234  0011AE  A0D8               	btfss	status,0,c
  7235  0011B0  0779               	decf	(efgtoa@t+1)& (0+255),f,b
  7236  0011B2                     l4824:
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  7240  0011B2  5178               	movf	efgtoa@t& (0+255),w,b
  7241  0011B4  1179               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7242  0011B6  A4D8               	btfss	status,2,c
  7243  0011B8  EFE0  F008         	goto	u5091
  7244  0011BC  EFE2  F008         	goto	u5090
  7245  0011C0                     u5091:
  7246  0011C0  EFC9  F008         	goto	l4816
  7247  0011C4                     u5090:
  7248  0011C4                     
  7249                           ; BSR set to: 0
  7250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7251  0011C4  0E0E               	movlw	low _dbuf
  7252  0011C6  259E               	addwf	efgtoa@n& (0+255),w,b
  7253  0011C8  6ED9               	movwf	fsr2l,c
  7254  0011CA  0E01               	movlw	high _dbuf
  7255  0011CC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7256  0011CE  6EDA               	movwf	fsr2h,c
  7257  0011D0  5184               	movf	efgtoa@d& (0+255),w,b
  7258  0011D2  0F30               	addlw	48
  7259  0011D4  6EDF               	movwf	indf2,c
  7260  0011D6                     
  7261                           ; BSR set to: 0
  7262  0011D6  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7263  0011D8  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7264  0011DA                     
  7265                           ; BSR set to: 0
  7266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  7267  0011DA  078A               	decf	efgtoa@w& (0+255),f,b
  7268  0011DC  A0D8               	btfss	status,0,c
  7269  0011DE  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7270  0011E0                     l4832:
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  7274  0011E0  C08E  F055         	movff	efgtoa@h,___flsub@b
  7275  0011E4  C08F  F056         	movff	efgtoa@h+1,___flsub@b+1
  7276  0011E8  C090  F057         	movff	efgtoa@h+2,___flsub@b+2
  7277  0011EC  C091  F058         	movff	efgtoa@h+3,___flsub@b+3
  7278  0011F0  C0A0  F017         	movff	efgtoa@u,___flmul@a
  7279  0011F4  C0A1  F018         	movff	efgtoa@u+1,___flmul@a+1
  7280  0011F8  C0A2  F019         	movff	efgtoa@u+2,___flmul@a+2
  7281  0011FC  C0A3  F01A         	movff	efgtoa@u+3,___flmul@a+3
  7282  001200  C092  F013         	movff	efgtoa@l,___flmul@b
  7283  001204  C093  F014         	movff	efgtoa@l+1,___flmul@b+1
  7284  001208  C094  F015         	movff	efgtoa@l+2,___flmul@b+2
  7285  00120C  C095  F016         	movff	efgtoa@l+3,___flmul@b+3
  7286  001210  ECBE  F00F         	call	___flmul	;wreg free
  7287  001214  C013  F059         	movff	?___flmul,___flsub@a
  7288  001218  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  7289  00121C  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  7290  001220  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  7291  001224  EC6B  F023         	call	___flsub	;wreg free
  7292  001228  C055  F08E         	movff	?___flsub,efgtoa@h
  7293  00122C  C056  F08F         	movff	?___flsub+1,efgtoa@h+1
  7294  001230  C057  F090         	movff	?___flsub+2,efgtoa@h+2
  7295  001234  C058  F091         	movff	?___flsub+3,efgtoa@h+3
  7296  001238                     
  7297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  7298  001238  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  7299  00123C  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  7300  001240  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  7301  001244  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  7302  001248  0E00               	movlw	0
  7303  00124A  6E30               	movwf	___fldiv@a^0,c
  7304  00124C  0E00               	movlw	0
  7305  00124E  6E31               	movwf	(___fldiv@a+1)^0,c
  7306  001250  0E20               	movlw	32
  7307  001252  6E32               	movwf	(___fldiv@a+2)^0,c
  7308  001254  0E41               	movlw	65
  7309  001256  6E33               	movwf	(___fldiv@a+3)^0,c
  7310  001258  ECD3  F011         	call	___fldiv	;wreg free
  7311  00125C  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  7312  001260  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  7313  001264  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  7314  001268  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  7315  00126C                     
  7316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  7317  00126C  0100               	movlb	0	; () banked
  7318  00126E  077C               	decf	efgtoa@ne& (0+255),f,b
  7319  001270  A0D8               	btfss	status,0,c
  7320  001272  077D               	decf	(efgtoa@ne+1)& (0+255),f,b
  7321  001274                     
  7322                           ; BSR set to: 0
  7323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  7324  001274  4B96               	infsnz	efgtoa@i& (0+255),f,b
  7325  001276  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  7326  001278                     l4840:
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7330  001278  517E               	movf	efgtoa@m& (0+255),w,b
  7331  00127A  5D96               	subwf	efgtoa@i& (0+255),w,b
  7332  00127C  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7333  00127E  0A80               	xorlw	128
  7334  001280  6F67               	movwf	??_efgtoa& (0+255),b
  7335  001282  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  7336  001284  0A80               	xorlw	128
  7337  001286  5967               	subwfb	??_efgtoa& (0+255),w,b
  7338  001288  B0D8               	btfsc	status,0,c
  7339  00128A  EF49  F009         	goto	u5101
  7340  00128E  EF4B  F009         	goto	u5100
  7341  001292                     u5101:
  7342  001292  EF59  F009         	goto	l4844
  7343  001296                     u5100:
  7344  001296                     
  7345                           ; BSR set to: 0
  7346  001296  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7347  001298  EF57  F009         	goto	u5111
  7348  00129C  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  7349  00129E  E109               	bnz	u5110
  7350  0012A0  0E4B               	movlw	75
  7351  0012A2  5D9E               	subwf	efgtoa@n& (0+255),w,b
  7352  0012A4  A0D8               	btfss	status,0,c
  7353  0012A6  EF57  F009         	goto	u5111
  7354  0012AA  EF59  F009         	goto	u5110
  7355  0012AE                     u5111:
  7356  0012AE  EF4F  F008         	goto	l4792
  7357  0012B2                     u5110:
  7358  0012B2                     l4844:
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7362  0012B2  517A               	movf	efgtoa@pp& (0+255),w,b
  7363  0012B4  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7364  0012B6  A4D8               	btfss	status,2,c
  7365  0012B8  EF60  F009         	goto	u5121
  7366  0012BC  EF62  F009         	goto	u5120
  7367  0012C0                     u5121:
  7368  0012C0  EF73  F009         	goto	l4852
  7369  0012C4                     u5120:
  7370  0012C4                     
  7371                           ; BSR set to: 0
  7372  0012C4  A9F8               	btfss	_flags& (0+255),4,b
  7373  0012C6  EF67  F009         	goto	u5131
  7374  0012CA  EF69  F009         	goto	u5130
  7375  0012CE                     u5131:
  7376  0012CE  EF73  F009         	goto	l4852
  7377  0012D2                     u5130:
  7378  0012D2                     
  7379                           ; BSR set to: 0
  7380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  7381  0012D2  0E0E               	movlw	low _dbuf
  7382  0012D4  259E               	addwf	efgtoa@n& (0+255),w,b
  7383  0012D6  6ED9               	movwf	fsr2l,c
  7384  0012D8  0E01               	movlw	high _dbuf
  7385  0012DA  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7386  0012DC  6EDA               	movwf	fsr2h,c
  7387  0012DE  0E2E               	movlw	46
  7388  0012E0  6EDF               	movwf	indf2,c
  7389  0012E2                     
  7390                           ; BSR set to: 0
  7391  0012E2  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7392  0012E4  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7393  0012E6                     l4852:
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  7397  0012E6  0E0E               	movlw	low _dbuf
  7398  0012E8  259E               	addwf	efgtoa@n& (0+255),w,b
  7399  0012EA  6ED9               	movwf	fsr2l,c
  7400  0012EC  0E01               	movlw	high _dbuf
  7401  0012EE  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7402  0012F0  6EDA               	movwf	fsr2h,c
  7403  0012F2  0E00               	movlw	0
  7404  0012F4  6EDF               	movwf	indf2,c
  7405  0012F6                     
  7406                           ; BSR set to: 0
  7407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  7408  0012F6  0E65               	movlw	101
  7409  0012F8  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7410  0012FA  A4D8               	btfss	status,2,c
  7411  0012FC  EF82  F009         	goto	u5141
  7412  001300  EF84  F009         	goto	u5140
  7413  001304                     u5141:
  7414  001304  EFDE  F004         	goto	l4654
  7415  001308                     u5140:
  7416  001308                     
  7417                           ; BSR set to: 0
  7418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  7419  001308  0E00               	movlw	0
  7420  00130A  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7421  00130C  0E4F               	movlw	79
  7422  00130E  6F96               	movwf	efgtoa@i& (0+255),b
  7423  001310                     
  7424                           ; BSR set to: 0
  7425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  7426  001310  0E0E               	movlw	low _dbuf
  7427  001312  2596               	addwf	efgtoa@i& (0+255),w,b
  7428  001314  6ED9               	movwf	fsr2l,c
  7429  001316  0E01               	movlw	high _dbuf
  7430  001318  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7431  00131A  6EDA               	movwf	fsr2h,c
  7432  00131C  0E00               	movlw	0
  7433  00131E  6EDF               	movwf	indf2,c
  7434  001320                     
  7435                           ; BSR set to: 0
  7436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  7437  001320  0E00               	movlw	0
  7438  001322  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  7439  001324  0E00               	movlw	0
  7440  001326  6F86               	movwf	efgtoa@sign& (0+255),b
  7441  001328                     
  7442                           ; BSR set to: 0
  7443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  7444  001328  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7445  00132A  EF9B  F009         	goto	u5150
  7446  00132E  EF99  F009         	goto	u5151
  7447  001332                     u5151:
  7448  001332  EFA3  F009         	goto	l4868
  7449  001336                     u5150:
  7450  001336                     
  7451                           ; BSR set to: 0
  7452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  7453  001336  0E00               	movlw	0
  7454  001338  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  7455  00133A  0E01               	movlw	1
  7456  00133C  6F86               	movwf	efgtoa@sign& (0+255),b
  7457  00133E                     
  7458                           ; BSR set to: 0
  7459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  7460  00133E  6D9C               	negf	efgtoa@e& (0+255),b
  7461  001340  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  7462  001342  B0D8               	btfsc	status,0,c
  7463  001344  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7464  001346                     l4868:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  7468  001346  0E00               	movlw	0
  7469  001348  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  7470  00134A  0E02               	movlw	2
  7471  00134C  6F88               	movwf	efgtoa@p& (0+255),b
  7472                           
  7473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7474  00134E  EFD4  F009         	goto	l4880
  7475  001352                     l4870:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  7479  001352  0796               	decf	efgtoa@i& (0+255),f,b
  7480  001354  A0D8               	btfss	status,0,c
  7481  001356  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7482  001358                     
  7483                           ; BSR set to: 0
  7484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  7485  001358  0E0E               	movlw	low _dbuf
  7486  00135A  2596               	addwf	efgtoa@i& (0+255),w,b
  7487  00135C  6ED9               	movwf	fsr2l,c
  7488  00135E  0E01               	movlw	high _dbuf
  7489  001360  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7490  001362  6EDA               	movwf	fsr2h,c
  7491  001364  C09C  F001         	movff	efgtoa@e,___awmod@dividend
  7492  001368  C09D  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  7493  00136C  0E00               	movlw	0
  7494  00136E  6E04               	movwf	(___awmod@divisor+1)^0,c
  7495  001370  0E0A               	movlw	10
  7496  001372  6E03               	movwf	___awmod@divisor^0,c
  7497  001374  EC6D  F01F         	call	___awmod	;wreg free
  7498  001378  5001               	movf	?___awmod^0,w,c
  7499  00137A  0F30               	addlw	48
  7500  00137C  6EDF               	movwf	indf2,c
  7501  00137E                     
  7502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  7503  00137E  C09C  F001         	movff	efgtoa@e,___awdiv@dividend
  7504  001382  C09D  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  7505  001386  0E00               	movlw	0
  7506  001388  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7507  00138A  0E0A               	movlw	10
  7508  00138C  6E03               	movwf	___awdiv@divisor^0,c
  7509  00138E  EC51  F01E         	call	___awdiv	;wreg free
  7510  001392  C001  F09C         	movff	?___awdiv,efgtoa@e
  7511  001396  C002  F09D         	movff	?___awdiv+1,efgtoa@e+1
  7512  00139A                     
  7513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  7514  00139A  0100               	movlb	0	; () banked
  7515  00139C  0788               	decf	efgtoa@p& (0+255),f,b
  7516  00139E  A0D8               	btfss	status,0,c
  7517  0013A0  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  7518  0013A2                     
  7519                           ; BSR set to: 0
  7520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  7521  0013A2  078A               	decf	efgtoa@w& (0+255),f,b
  7522  0013A4  A0D8               	btfss	status,0,c
  7523  0013A6  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7524  0013A8                     l4880:
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7528  0013A8  519C               	movf	efgtoa@e& (0+255),w,b
  7529  0013AA  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7530  0013AC  A4D8               	btfss	status,2,c
  7531  0013AE  EFDB  F009         	goto	u5161
  7532  0013B2  EFDD  F009         	goto	u5160
  7533  0013B6                     u5161:
  7534  0013B6  EFA9  F009         	goto	l4870
  7535  0013BA                     u5160:
  7536  0013BA                     
  7537                           ; BSR set to: 0
  7538  0013BA  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7539  0013BC  EFEA  F009         	goto	u5170
  7540  0013C0  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  7541  0013C2  E106               	bnz	u5171
  7542  0013C4  0588               	decf	efgtoa@p& (0+255),w,b
  7543  0013C6  B0D8               	btfsc	status,0,c
  7544  0013C8  EFE8  F009         	goto	u5171
  7545  0013CC  EFEA  F009         	goto	u5170
  7546  0013D0                     u5171:
  7547  0013D0  EFA9  F009         	goto	l4870
  7548  0013D4                     u5170:
  7549  0013D4                     
  7550                           ; BSR set to: 0
  7551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  7552  0013D4  0796               	decf	efgtoa@i& (0+255),f,b
  7553  0013D6  A0D8               	btfss	status,0,c
  7554  0013D8  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7555  0013DA                     
  7556                           ; BSR set to: 0
  7557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  7558  0013DA  5186               	movf	efgtoa@sign& (0+255),w,b
  7559  0013DC  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7560  0013DE  A4D8               	btfss	status,2,c
  7561  0013E0  EFF4  F009         	goto	u5181
  7562  0013E4  EFF6  F009         	goto	u5180
  7563  0013E8                     u5181:
  7564  0013E8  EFFC  F009         	goto	l4890
  7565  0013EC                     u5180:
  7566  0013EC                     
  7567                           ; BSR set to: 0
  7568  0013EC  0E00               	movlw	0
  7569  0013EE  6F73               	movwf	(_efgtoa$1511+1)& (0+255),b
  7570  0013F0  0E2B               	movlw	43
  7571  0013F2  6F72               	movwf	_efgtoa$1511& (0+255),b
  7572  0013F4  EF00  F00A         	goto	l4892
  7573  0013F8                     l4890:
  7574                           
  7575                           ; BSR set to: 0
  7576  0013F8  0E00               	movlw	0
  7577  0013FA  6F73               	movwf	(_efgtoa$1511+1)& (0+255),b
  7578  0013FC  0E2D               	movlw	45
  7579  0013FE  6F72               	movwf	_efgtoa$1511& (0+255),b
  7580  001400                     l4892:
  7581                           
  7582                           ; BSR set to: 0
  7583  001400  0E0E               	movlw	low _dbuf
  7584  001402  2596               	addwf	efgtoa@i& (0+255),w,b
  7585  001404  6ED9               	movwf	fsr2l,c
  7586  001406  0E01               	movlw	high _dbuf
  7587  001408  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7588  00140A  6EDA               	movwf	fsr2h,c
  7589  00140C  C072  FFDF         	movff	_efgtoa$1511,indf2
  7590  001410                     
  7591                           ; BSR set to: 0
  7592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  7593  001410  078A               	decf	efgtoa@w& (0+255),f,b
  7594  001412  A0D8               	btfss	status,0,c
  7595  001414  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7596  001416                     
  7597                           ; BSR set to: 0
  7598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7599  001416  0796               	decf	efgtoa@i& (0+255),f,b
  7600  001418  A0D8               	btfss	status,0,c
  7601  00141A  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7602  00141C                     
  7603                           ; BSR set to: 0
  7604  00141C  0EBF               	movlw	191
  7605  00141E  6F67               	movwf	??_efgtoa& (0+255),b
  7606  001420  0EFF               	movlw	255
  7607  001422  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  7608  001424  5166               	movf	efgtoa@c& (0+255),w,b
  7609  001426  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  7610  001428  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  7611  00142A  5167               	movf	??_efgtoa& (0+255),w,b
  7612  00142C  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  7613  00142E  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  7614  001430  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7615  001432  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  7616  001434  E10A               	bnz	u5190
  7617  001436  0E1A               	movlw	26
  7618  001438  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  7619  00143A  A0D8               	btfss	status,0,c
  7620  00143C  EF22  F00A         	goto	u5191
  7621  001440  EF25  F00A         	goto	u5190
  7622  001444                     u5191:
  7623  001444  0E01               	movlw	1
  7624  001446  EF26  F00A         	goto	u5200
  7625  00144A                     u5190:
  7626  00144A  0E00               	movlw	0
  7627  00144C                     u5200:
  7628  00144C  6F76               	movwf	_efgtoa$1513& (0+255),b
  7629  00144E  6B77               	clrf	(_efgtoa$1513+1)& (0+255),b
  7630  001450                     
  7631                           ; BSR set to: 0
  7632  001450  5176               	movf	_efgtoa$1513& (0+255),w,b
  7633  001452  1177               	iorwf	(_efgtoa$1513+1)& (0+255),w,b
  7634  001454  A4D8               	btfss	status,2,c
  7635  001456  EF2F  F00A         	goto	u5211
  7636  00145A  EF31  F00A         	goto	u5210
  7637  00145E                     u5211:
  7638  00145E  EF37  F00A         	goto	l4906
  7639  001462                     u5210:
  7640  001462                     
  7641                           ; BSR set to: 0
  7642  001462  0E00               	movlw	0
  7643  001464  6F75               	movwf	(_efgtoa$1512+1)& (0+255),b
  7644  001466  0E65               	movlw	101
  7645  001468  6F74               	movwf	_efgtoa$1512& (0+255),b
  7646  00146A  EF3B  F00A         	goto	l4908
  7647  00146E                     l4906:
  7648                           
  7649                           ; BSR set to: 0
  7650  00146E  0E00               	movlw	0
  7651  001470  6F75               	movwf	(_efgtoa$1512+1)& (0+255),b
  7652  001472  0E45               	movlw	69
  7653  001474  6F74               	movwf	_efgtoa$1512& (0+255),b
  7654  001476                     l4908:
  7655                           
  7656                           ; BSR set to: 0
  7657  001476  0E0E               	movlw	low _dbuf
  7658  001478  2596               	addwf	efgtoa@i& (0+255),w,b
  7659  00147A  6ED9               	movwf	fsr2l,c
  7660  00147C  0E01               	movlw	high _dbuf
  7661  00147E  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7662  001480  6EDA               	movwf	fsr2h,c
  7663  001482  C074  FFDF         	movff	_efgtoa$1512,indf2
  7664  001486                     
  7665                           ; BSR set to: 0
  7666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  7667  001486  078A               	decf	efgtoa@w& (0+255),f,b
  7668  001488  A0D8               	btfss	status,0,c
  7669  00148A  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7670  00148C                     
  7671                           ; BSR set to: 0
  7672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  7673  00148C  0E0E               	movlw	low _dbuf
  7674  00148E  259E               	addwf	efgtoa@n& (0+255),w,b
  7675  001490  6E01               	movwf	strcpy@dest^0,c
  7676  001492  0E01               	movlw	high _dbuf
  7677  001494  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7678  001496  6E02               	movwf	(strcpy@dest+1)^0,c
  7679  001498  0E0E               	movlw	low _dbuf
  7680  00149A  2596               	addwf	efgtoa@i& (0+255),w,b
  7681  00149C  6E03               	movwf	strcpy@src^0,c
  7682  00149E  0E01               	movlw	high _dbuf
  7683  0014A0  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7684  0014A2  6E04               	movwf	(strcpy@src+1)^0,c
  7685  0014A4  EC57  F021         	call	_strcpy	;wreg free
  7686  0014A8  EFDE  F004         	goto	l4654
  7687  0014AC                     l1342:
  7688  0014AC  0012               	return		;funcret
  7689  0014AE                     __end_of_efgtoa:
  7690                           	callstack 0
  7691                           
  7692 ;; *************** function _tolower *****************
  7693 ;; Defined at:
  7694 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  c               2    6[COMRAM] int 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;		None
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  2    6[COMRAM] int 
  7701 ;; Registers used:
  7702 ;;		wreg, status,2, status,0
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7708 ;;      Params:         2       0       0       0       0       0       0       0       0
  7709 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7710 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7711 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7712 ;;Total ram usage:        8 bytes
  7713 ;; Hardware stack levels used: 1
  7714 ;; Hardware stack levels required when called: 1
  7715 ;; This function calls:
  7716 ;;		_isupper
  7717 ;; This function is called by:
  7718 ;;		_efgtoa
  7719 ;;		_vfpfcnvrt
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723                           	psect	text32
  7724  004192                     __ptext32:
  7725                           	callstack 0
  7726  004192                     _tolower:
  7727                           	callstack 25
  7728  004192  0EBF               	movlw	191
  7729  004194  6E09               	movwf	??_tolower^0,c
  7730  004196  0EFF               	movlw	255
  7731  004198  6E0A               	movwf	(??_tolower+1)^0,c
  7732  00419A  C007  F00B         	movff	tolower@c,??_tolower+2
  7733  00419E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  7734  0041A2  5009               	movf	??_tolower^0,w,c
  7735  0041A4  260B               	addwf	(??_tolower+2)^0,f,c
  7736  0041A6  500A               	movf	(??_tolower+1)^0,w,c
  7737  0041A8  220C               	addwfc	(??_tolower+3)^0,f,c
  7738  0041AA  500C               	movf	(??_tolower+3)^0,w,c
  7739  0041AC  E10A               	bnz	u4430
  7740  0041AE  0E1A               	movlw	26
  7741  0041B0  5C0B               	subwf	(??_tolower+2)^0,w,c
  7742  0041B2  A0D8               	btfss	status,0,c
  7743  0041B4  EFDE  F020         	goto	u4431
  7744  0041B8  EFE1  F020         	goto	u4430
  7745  0041BC                     u4431:
  7746  0041BC  0E01               	movlw	1
  7747  0041BE  EFE2  F020         	goto	u4440
  7748  0041C2                     u4430:
  7749  0041C2  0E00               	movlw	0
  7750  0041C4                     u4440:
  7751  0041C4  6E0D               	movwf	_tolower$1681^0,c
  7752  0041C6  6A0E               	clrf	(_tolower$1681+1)^0,c
  7753  0041C8  500D               	movf	_tolower$1681^0,w,c
  7754  0041CA  100E               	iorwf	(_tolower$1681+1)^0,w,c
  7755  0041CC  B4D8               	btfsc	status,2,c
  7756  0041CE  EFEB  F020         	goto	u4451
  7757  0041D2  EFED  F020         	goto	u4450
  7758  0041D6                     u4451:
  7759  0041D6  EFF4  F020         	goto	l1623
  7760  0041DA                     u4450:
  7761  0041DA  0E20               	movlw	32
  7762  0041DC  1007               	iorwf	tolower@c^0,w,c
  7763  0041DE  6E07               	movwf	?_tolower^0,c
  7764  0041E0  5008               	movf	(tolower@c+1)^0,w,c
  7765  0041E2  6E08               	movwf	(?_tolower+1)^0,c
  7766  0041E4  EFF8  F020         	goto	l1628
  7767  0041E8                     l1623:
  7768  0041E8  C007  F007         	movff	tolower@c,?_tolower
  7769  0041EC  C008  F008         	movff	tolower@c+1,?_tolower+1
  7770  0041F0                     l1628:
  7771  0041F0  0012               	return		;funcret
  7772  0041F2                     __end_of_tolower:
  7773                           	callstack 0
  7774                           
  7775 ;; *************** function _isupper *****************
  7776 ;; Defined at:
  7777 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;  c               2    0[COMRAM] int 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;		None
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  2    0[COMRAM] int 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7791 ;;      Params:         2       0       0       0       0       0       0       0       0
  7792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7793 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7794 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7795 ;;Total ram usage:        6 bytes
  7796 ;; Hardware stack levels used: 1
  7797 ;; This function calls:
  7798 ;;		Nothing
  7799 ;; This function is called by:
  7800 ;;		_efgtoa
  7801 ;;		_xtoa
  7802 ;;		_vfpfcnvrt
  7803 ;;		_tolower
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text33
  7808  00484E                     __ptext33:
  7809                           	callstack 0
  7810  00484E                     _isupper:
  7811                           	callstack 25
  7812  00484E  0EBF               	movlw	191
  7813  004850  6E03               	movwf	??_isupper^0,c
  7814  004852  0EFF               	movlw	255
  7815  004854  6E04               	movwf	(??_isupper+1)^0,c
  7816  004856  C001  F005         	movff	isupper@c,??_isupper+2
  7817  00485A  C002  F006         	movff	isupper@c+1,??_isupper+3
  7818  00485E  5003               	movf	??_isupper^0,w,c
  7819  004860  2605               	addwf	(??_isupper+2)^0,f,c
  7820  004862  5004               	movf	(??_isupper+1)^0,w,c
  7821  004864  2206               	addwfc	(??_isupper+3)^0,f,c
  7822  004866  5006               	movf	(??_isupper+3)^0,w,c
  7823  004868  E10A               	bnz	u3560
  7824  00486A  0E1A               	movlw	26
  7825  00486C  5C05               	subwf	(??_isupper+2)^0,w,c
  7826  00486E  A0D8               	btfss	status,0,c
  7827  004870  EF3C  F024         	goto	u3561
  7828  004874  EF3F  F024         	goto	u3560
  7829  004878                     u3561:
  7830  004878  0E01               	movlw	1
  7831  00487A  EF40  F024         	goto	u3570
  7832  00487E                     u3560:
  7833  00487E  0E00               	movlw	0
  7834  004880                     u3570:
  7835  004880  6E01               	movwf	?_isupper^0,c
  7836  004882  6A02               	clrf	(?_isupper+1)^0,c
  7837  004884  0012               	return		;funcret
  7838  004886                     __end_of_isupper:
  7839                           	callstack 0
  7840                           
  7841 ;; *************** function _strcpy *****************
  7842 ;; Defined at:
  7843 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7846 ;;		 -> dbuf(80), 
  7847 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7848 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  7849 ;;		 -> dbuf(80), 
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;  d               2    8[COMRAM] PTR unsigned char 
  7852 ;;		 -> dbuf(80), 
  7853 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7854 ;;		 -> STR_28(4), STR_27(4), STR_24(4), STR_23(4), 
  7855 ;;		 -> dbuf(80), 
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  2    0[COMRAM] PTR unsigned char 
  7858 ;; Registers used:
  7859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7865 ;;      Params:         4       0       0       0       0       0       0       0       0
  7866 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7867 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7868 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7869 ;;Total ram usage:       10 bytes
  7870 ;; Hardware stack levels used: 1
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_efgtoa
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text34
  7879  0042AE                     __ptext34:
  7880                           	callstack 0
  7881  0042AE                     _strcpy:
  7882                           	callstack 25
  7883  0042AE  C003  F007         	movff	strcpy@src,strcpy@s
  7884  0042B2  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  7885  0042B6  C001  F009         	movff	strcpy@dest,strcpy@d
  7886  0042BA  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  7887  0042BE                     l4522:
  7888  0042BE  5007               	movf	strcpy@s^0,w,c
  7889  0042C0  6E05               	movwf	??_strcpy^0,c
  7890  0042C2  5008               	movf	(strcpy@s+1)^0,w,c
  7891  0042C4  6E06               	movwf	(??_strcpy+1)^0,c
  7892  0042C6  4A07               	infsnz	strcpy@s^0,f,c
  7893  0042C8  2A08               	incf	(strcpy@s+1)^0,f,c
  7894  0042CA  C005  FFF6         	movff	??_strcpy,tblptrl
  7895  0042CE  C006  FFF7         	movff	??_strcpy+1,tblptrh
  7896  0042D2  6AF8               	clrf	tblptru,c
  7897  0042D4  C009  FFD9         	movff	strcpy@d,fsr2l
  7898  0042D8  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  7899  0042DC  4A09               	infsnz	strcpy@d^0,f,c
  7900  0042DE  2A0A               	incf	(strcpy@d+1)^0,f,c
  7901  0042E0  0E07               	movlw	(high __ramtop+-1)
  7902  0042E2  64F7               	cpfsgt	tblptrh,c
  7903  0042E4  D003               	bra	u4417
  7904  0042E6  0008               	tblrd		*
  7905  0042E8  50F5               	movf	tablat,w,c
  7906  0042EA  D005               	bra	u4410
  7907  0042EC                     u4417:
  7908  0042EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7909  0042F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  7910  0042F4  50E7               	movf	indf1,w,c
  7911  0042F6                     u4410:
  7912  0042F6  6EDF               	movwf	indf2,c
  7913  0042F8  50DF               	movf	indf2,w,c
  7914  0042FA  A4D8               	btfss	status,2,c
  7915  0042FC  EF82  F021         	goto	u4421
  7916  004300  EF84  F021         	goto	u4420
  7917  004304                     u4421:
  7918  004304  EF5F  F021         	goto	l4522
  7919  004308                     u4420:
  7920  004308  0012               	return		;funcret
  7921  00430A                     __end_of_strcpy:
  7922                           	callstack 0
  7923                           
  7924 ;; *************** function _pad *****************
  7925 ;; Defined at:
  7926 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7929 ;;		 -> sprintf@f(6), 
  7930 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7931 ;;		 -> dbuf(80), 
  7932 ;;  p               2   20[COMRAM] int 
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  w               2   25[COMRAM] int 
  7935 ;;  i               2   23[COMRAM] int 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  2   16[COMRAM] int 
  7938 ;; Registers used:
  7939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7945 ;;      Params:         6       0       0       0       0       0       0       0       0
  7946 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7947 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7948 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7949 ;;Total ram usage:       11 bytes
  7950 ;; Hardware stack levels used: 1
  7951 ;; Hardware stack levels required when called: 3
  7952 ;; This function calls:
  7953 ;;		_fputc
  7954 ;;		_fputs
  7955 ;;		_strlen
  7956 ;; This function is called by:
  7957 ;;		_efgtoa
  7958 ;;		_xtoa
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text35
  7963  003BDC                     __ptext35:
  7964                           	callstack 0
  7965  003BDC                     _pad:
  7966                           	callstack 22
  7967  003BDC                     
  7968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7969  003BDC  0100               	movlb	0	; () banked
  7970  003BDE  A1F8               	btfss	_flags& (0+255),0,b
  7971  003BE0  EFF4  F01D         	goto	u4301
  7972  003BE4  EFF6  F01D         	goto	u4300
  7973  003BE8                     u4301:
  7974  003BE8  EF00  F01E         	goto	l4480
  7975  003BEC                     u4300:
  7976  003BEC                     
  7977                           ; BSR set to: 0
  7978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7979  003BEC  C013  F00A         	movff	pad@buf,fputs@s
  7980  003BF0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7981  003BF4  C011  F00C         	movff	pad@fp,fputs@fp
  7982  003BF8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7983  003BFC  EC8E  F023         	call	_fputs	;wreg free
  7984  003C00                     l4480:
  7985                           
  7986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7987  003C00  BE16               	btfsc	(pad@p+1)^0,7,c
  7988  003C02  EF05  F01E         	goto	u4311
  7989  003C06  EF07  F01E         	goto	u4310
  7990  003C0A                     u4311:
  7991  003C0A  EF0D  F01E         	goto	l4484
  7992  003C0E                     u4310:
  7993  003C0E  C015  F01A         	movff	pad@p,pad@w
  7994  003C12  C016  F01B         	movff	pad@p+1,pad@w+1
  7995  003C16  EF11  F01E         	goto	l1319
  7996  003C1A                     l4484:
  7997  003C1A  0E00               	movlw	0
  7998  003C1C  6E1B               	movwf	(pad@w+1)^0,c
  7999  003C1E  0E00               	movlw	0
  8000  003C20  6E1A               	movwf	pad@w^0,c
  8001  003C22                     l1319:
  8002                           
  8003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8004  003C22  0E00               	movlw	0
  8005  003C24  6E19               	movwf	(pad@i+1)^0,c
  8006  003C26  0E00               	movlw	0
  8007  003C28  6E18               	movwf	pad@i^0,c
  8008                           
  8009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8010  003C2A  EF23  F01E         	goto	l4490
  8011  003C2E                     l4486:
  8012                           
  8013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8014  003C2E  0E00               	movlw	0
  8015  003C30  6E02               	movwf	(fputc@c+1)^0,c
  8016  003C32  0E20               	movlw	32
  8017  003C34  6E01               	movwf	fputc@c^0,c
  8018  003C36  C011  F003         	movff	pad@fp,fputc@fp
  8019  003C3A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8020  003C3E  EC89  F01D         	call	_fputc	;wreg free
  8021  003C42                     
  8022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8023  003C42  4A18               	infsnz	pad@i^0,f,c
  8024  003C44  2A19               	incf	(pad@i+1)^0,f,c
  8025  003C46                     l4490:
  8026                           
  8027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8028  003C46  501A               	movf	pad@w^0,w,c
  8029  003C48  5C18               	subwf	pad@i^0,w,c
  8030  003C4A  5019               	movf	(pad@i+1)^0,w,c
  8031  003C4C  0A80               	xorlw	128
  8032  003C4E  6E17               	movwf	??_pad^0,c
  8033  003C50  501B               	movf	(pad@w+1)^0,w,c
  8034  003C52  0A80               	xorlw	128
  8035  003C54  5817               	subwfb	??_pad^0,w,c
  8036  003C56  A0D8               	btfss	status,0,c
  8037  003C58  EF30  F01E         	goto	u4321
  8038  003C5C  EF32  F01E         	goto	u4320
  8039  003C60                     u4321:
  8040  003C60  EF17  F01E         	goto	l4486
  8041  003C64                     u4320:
  8042  003C64                     
  8043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8044  003C64  0100               	movlb	0	; () banked
  8045  003C66  B1F8               	btfsc	_flags& (0+255),0,b
  8046  003C68  EF38  F01E         	goto	u4331
  8047  003C6C  EF3A  F01E         	goto	u4330
  8048  003C70                     u4331:
  8049  003C70  EF44  F01E         	goto	l4494
  8050  003C74                     u4330:
  8051  003C74                     
  8052                           ; BSR set to: 0
  8053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8054  003C74  C013  F00A         	movff	pad@buf,fputs@s
  8055  003C78  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8056  003C7C  C011  F00C         	movff	pad@fp,fputs@fp
  8057  003C80  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8058  003C84  EC8E  F023         	call	_fputs	;wreg free
  8059  003C88                     l4494:
  8060                           
  8061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8062  003C88  C013  F001         	movff	pad@buf,strlen@s
  8063  003C8C  C014  F002         	movff	pad@buf+1,strlen@s+1
  8064  003C90  EC97  F024         	call	_strlen	;wreg free
  8065  003C94  501A               	movf	pad@w^0,w,c
  8066  003C96  2401               	addwf	?_strlen^0,w,c
  8067  003C98  6E11               	movwf	?_pad^0,c
  8068  003C9A  501B               	movf	(pad@w+1)^0,w,c
  8069  003C9C  2002               	addwfc	(?_strlen+1)^0,w,c
  8070  003C9E  6E12               	movwf	(?_pad+1)^0,c
  8071  003CA0  0012               	return		;funcret
  8072  003CA2                     __end_of_pad:
  8073                           	callstack 0
  8074                           
  8075 ;; *************** function _strlen *****************
  8076 ;; Defined at:
  8077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8080 ;;		 -> dbuf(80), 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8083 ;;		 -> dbuf(80), 
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  2    0[COMRAM] unsigned int 
  8086 ;; Registers used:
  8087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8093 ;;      Params:         2       0       0       0       0       0       0       0       0
  8094 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8096 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8097 ;;Total ram usage:        4 bytes
  8098 ;; Hardware stack levels used: 1
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_pad
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text36
  8107  00492E                     __ptext36:
  8108                           	callstack 0
  8109  00492E                     _strlen:
  8110                           	callstack 24
  8111  00492E  C001  F003         	movff	strlen@s,strlen@a
  8112  004932  C002  F004         	movff	strlen@s+1,strlen@a+1
  8113  004936  EF9F  F024         	goto	l4012
  8114  00493A                     l4010:
  8115  00493A  4A01               	infsnz	strlen@s^0,f,c
  8116  00493C  2A02               	incf	(strlen@s+1)^0,f,c
  8117  00493E                     l4012:
  8118  00493E  C001  FFD9         	movff	strlen@s,fsr2l
  8119  004942  C002  FFDA         	movff	strlen@s+1,fsr2h
  8120  004946  50DF               	movf	indf2,w,c
  8121  004948  A4D8               	btfss	status,2,c
  8122  00494A  EFA9  F024         	goto	u3551
  8123  00494E  EFAB  F024         	goto	u3550
  8124  004952                     u3551:
  8125  004952  EF9D  F024         	goto	l4010
  8126  004956                     u3550:
  8127  004956  5003               	movf	strlen@a^0,w,c
  8128  004958  5C01               	subwf	strlen@s^0,w,c
  8129  00495A  6E01               	movwf	?_strlen^0,c
  8130  00495C  5004               	movf	(strlen@a+1)^0,w,c
  8131  00495E  5802               	subwfb	(strlen@s+1)^0,w,c
  8132  004960  6E02               	movwf	(?_strlen+1)^0,c
  8133  004962  0012               	return		;funcret
  8134  004964                     __end_of_strlen:
  8135                           	callstack 0
  8136                           
  8137 ;; *************** function _fputs *****************
  8138 ;; Defined at:
  8139 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8142 ;;		 -> dbuf(80), 
  8143 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8144 ;;		 -> sprintf@f(6), 
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;  i               2   14[COMRAM] int 
  8147 ;;  c               1   13[COMRAM] unsigned char 
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  2    9[COMRAM] int 
  8150 ;; Registers used:
  8151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8157 ;;      Params:         4       0       0       0       0       0       0       0       0
  8158 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8160 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8161 ;;Total ram usage:        7 bytes
  8162 ;; Hardware stack levels used: 1
  8163 ;; Hardware stack levels required when called: 2
  8164 ;; This function calls:
  8165 ;;		_fputc
  8166 ;; This function is called by:
  8167 ;;		_pad
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           	psect	text37
  8172  00471C                     __ptext37:
  8173                           	callstack 0
  8174  00471C                     _fputs:
  8175                           	callstack 22
  8176  00471C  0E00               	movlw	0
  8177  00471E  6E10               	movwf	(fputs@i+1)^0,c
  8178  004720  0E00               	movlw	0
  8179  004722  6E0F               	movwf	fputs@i^0,c
  8180  004724  EF9F  F023         	goto	l4006
  8181  004728                     l4002:
  8182  004728  C00E  F001         	movff	fputs@c,fputc@c
  8183  00472C  6A02               	clrf	(fputc@c+1)^0,c
  8184  00472E  C00C  F003         	movff	fputs@fp,fputc@fp
  8185  004732  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8186  004736  EC89  F01D         	call	_fputc	;wreg free
  8187  00473A  4A0F               	infsnz	fputs@i^0,f,c
  8188  00473C  2A10               	incf	(fputs@i+1)^0,f,c
  8189  00473E                     l4006:
  8190  00473E  500F               	movf	fputs@i^0,w,c
  8191  004740  240A               	addwf	fputs@s^0,w,c
  8192  004742  6ED9               	movwf	fsr2l,c
  8193  004744  5010               	movf	(fputs@i+1)^0,w,c
  8194  004746  200B               	addwfc	(fputs@s+1)^0,w,c
  8195  004748  6EDA               	movwf	fsr2h,c
  8196  00474A  50DF               	movf	indf2,w,c
  8197  00474C  6E0E               	movwf	fputs@c^0,c
  8198  00474E  500E               	movf	fputs@c^0,w,c
  8199  004750  A4D8               	btfss	status,2,c
  8200  004752  EFAD  F023         	goto	u3541
  8201  004756  EFAF  F023         	goto	u3540
  8202  00475A                     u3541:
  8203  00475A  EF94  F023         	goto	l4002
  8204  00475E                     u3540:
  8205  00475E  0012               	return		;funcret
  8206  004760                     __end_of_fputs:
  8207                           	callstack 0
  8208                           
  8209 ;; *************** function _fputc *****************
  8210 ;; Defined at:
  8211 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  c               2    0[COMRAM] int 
  8214 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8215 ;;		 -> sprintf@f(6), 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;		None
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  2    0[COMRAM] int 
  8220 ;; Registers used:
  8221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8227 ;;      Params:         4       0       0       0       0       0       0       0       0
  8228 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8229 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8230 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8231 ;;Total ram usage:        9 bytes
  8232 ;; Hardware stack levels used: 1
  8233 ;; Hardware stack levels required when called: 1
  8234 ;; This function calls:
  8235 ;;		_putch
  8236 ;; This function is called by:
  8237 ;;		_pad
  8238 ;;		_vfpfcnvrt
  8239 ;;		_fputs
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           	psect	text38
  8244  003B12                     __ptext38:
  8245                           	callstack 0
  8246  003B12                     _fputc:
  8247                           	callstack 22
  8248  003B12  5003               	movf	fputc@fp^0,w,c
  8249  003B14  1004               	iorwf	(fputc@fp+1)^0,w,c
  8250  003B16  B4D8               	btfsc	status,2,c
  8251  003B18  EF90  F01D         	goto	u3111
  8252  003B1C  EF92  F01D         	goto	u3110
  8253  003B20                     u3111:
  8254  003B20  EF9B  F01D         	goto	l3788
  8255  003B24                     u3110:
  8256  003B24  5003               	movf	fputc@fp^0,w,c
  8257  003B26  1004               	iorwf	(fputc@fp+1)^0,w,c
  8258  003B28  A4D8               	btfss	status,2,c
  8259  003B2A  EF99  F01D         	goto	u3121
  8260  003B2E  EF9B  F01D         	goto	u3120
  8261  003B32                     u3121:
  8262  003B32  EFA0  F01D         	goto	l3790
  8263  003B36                     u3120:
  8264  003B36                     l3788:
  8265  003B36  5001               	movf	fputc@c^0,w,c
  8266  003B38  ECA2  F025         	call	_putch
  8267  003B3C  EFED  F01D         	goto	l1586
  8268  003B40                     l3790:
  8269  003B40  EE20 F004          	lfsr	2,4
  8270  003B44  5003               	movf	fputc@fp^0,w,c
  8271  003B46  26D9               	addwf	fsr2l,f,c
  8272  003B48  5004               	movf	(fputc@fp+1)^0,w,c
  8273  003B4A  22DA               	addwfc	fsr2h,f,c
  8274  003B4C  50DE               	movf	postinc2,w,c
  8275  003B4E  10DE               	iorwf	postinc2,w,c
  8276  003B50  B4D8               	btfsc	status,2,c
  8277  003B52  EFAD  F01D         	goto	u3131
  8278  003B56  EFAF  F01D         	goto	u3130
  8279  003B5A                     u3131:
  8280  003B5A  EFCA  F01D         	goto	l3794
  8281  003B5E                     u3130:
  8282  003B5E  EE20 F004          	lfsr	2,4
  8283  003B62  5003               	movf	fputc@fp^0,w,c
  8284  003B64  26D9               	addwf	fsr2l,f,c
  8285  003B66  5004               	movf	(fputc@fp+1)^0,w,c
  8286  003B68  22DA               	addwfc	fsr2h,f,c
  8287  003B6A  EE10 F002          	lfsr	1,2
  8288  003B6E  5003               	movf	fputc@fp^0,w,c
  8289  003B70  26E1               	addwf	fsr1l,f,c
  8290  003B72  5004               	movf	(fputc@fp+1)^0,w,c
  8291  003B74  22E2               	addwfc	fsr1h,f,c
  8292  003B76  50DE               	movf	postinc2,w,c
  8293  003B78  5CE6               	subwf	postinc1,w,c
  8294  003B7A  50E6               	movf	postinc1,w,c
  8295  003B7C  0A80               	xorlw	128
  8296  003B7E  6E09               	movwf	(??_fputc+4)^0,c
  8297  003B80  50DE               	movf	postinc2,w,c
  8298  003B82  0A80               	xorlw	128
  8299  003B84  5809               	subwfb	(??_fputc+4)^0,w,c
  8300  003B86  B0D8               	btfsc	status,0,c
  8301  003B88  EFC8  F01D         	goto	u3141
  8302  003B8C  EFCA  F01D         	goto	u3140
  8303  003B90                     u3141:
  8304  003B90  EFED  F01D         	goto	l1586
  8305  003B94                     u3140:
  8306  003B94                     l3794:
  8307  003B94  EE20 F002          	lfsr	2,2
  8308  003B98  5003               	movf	fputc@fp^0,w,c
  8309  003B9A  26D9               	addwf	fsr2l,f,c
  8310  003B9C  5004               	movf	(fputc@fp+1)^0,w,c
  8311  003B9E  22DA               	addwfc	fsr2h,f,c
  8312  003BA0  CFDE F005          	movff	postinc2,??_fputc
  8313  003BA4  CFDD F006          	movff	postdec2,??_fputc+1
  8314  003BA8  C003  FFD9         	movff	fputc@fp,fsr2l
  8315  003BAC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8316  003BB0  CFDE F007          	movff	postinc2,??_fputc+2
  8317  003BB4  CFDD F008          	movff	postdec2,??_fputc+3
  8318  003BB8  5005               	movf	??_fputc^0,w,c
  8319  003BBA  2407               	addwf	(??_fputc+2)^0,w,c
  8320  003BBC  6ED9               	movwf	fsr2l,c
  8321  003BBE  5006               	movf	(??_fputc+1)^0,w,c
  8322  003BC0  2008               	addwfc	(??_fputc+3)^0,w,c
  8323  003BC2  6EDA               	movwf	fsr2h,c
  8324  003BC4  C001  FFDF         	movff	fputc@c,indf2
  8325  003BC8  EE20 F002          	lfsr	2,2
  8326  003BCC  5003               	movf	fputc@fp^0,w,c
  8327  003BCE  26D9               	addwf	fsr2l,f,c
  8328  003BD0  5004               	movf	(fputc@fp+1)^0,w,c
  8329  003BD2  22DA               	addwfc	fsr2h,f,c
  8330  003BD4  2ADE               	incf	postinc2,f,c
  8331  003BD6  0E00               	movlw	0
  8332  003BD8  22DD               	addwfc	postdec2,f,c
  8333  003BDA                     l1586:
  8334  003BDA  0012               	return		;funcret
  8335  003BDC                     __end_of_fputc:
  8336                           	callstack 0
  8337                           
  8338 ;; *************** function _putch *****************
  8339 ;; Defined at:
  8340 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;  c               1    wreg     unsigned char 
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;  c               1    0[COMRAM] unsigned char 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      void 
  8347 ;; Registers used:
  8348 ;;		wreg
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8354 ;;      Params:         0       0       0       0       0       0       0       0       0
  8355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8357 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8358 ;;Total ram usage:        0 bytes
  8359 ;; Hardware stack levels used: 1
  8360 ;; This function calls:
  8361 ;;		Nothing
  8362 ;; This function is called by:
  8363 ;;		_fputc
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           	psect	text39
  8368  004B44                     __ptext39:
  8369                           	callstack 0
  8370  004B44                     _putch:
  8371                           	callstack 22
  8372  004B44  0012               	return		;funcret
  8373  004B46                     __end_of_putch:
  8374                           	callstack 0
  8375                           
  8376 ;; *************** function _floorf *****************
  8377 ;; Defined at:
  8378 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  x               4   68[COMRAM] float 
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  u               4   84[COMRAM] struct .
  8383 ;;  m               4   78[COMRAM] unsigned long 
  8384 ;;  e               2   82[COMRAM] int 
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  4   68[COMRAM] float 
  8387 ;; Registers used:
  8388 ;;		wreg, status,2, status,0
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8394 ;;      Params:         4       0       0       0       0       0       0       0       0
  8395 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8396 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8397 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8398 ;;Total ram usage:       20 bytes
  8399 ;; Hardware stack levels used: 1
  8400 ;; This function calls:
  8401 ;;		Nothing
  8402 ;; This function is called by:
  8403 ;;		_efgtoa
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text40
  8408  002F88                     __ptext40:
  8409                           	callstack 0
  8410  002F88                     _floorf:
  8411                           	callstack 25
  8412  002F88  C0E2  F055         	movff	floorf@F527,floorf@u
  8413  002F8C  C0E3  F056         	movff	floorf@F527+1,floorf@u+1
  8414  002F90  C0E4  F057         	movff	floorf@F527+2,floorf@u+2
  8415  002F94  C0E5  F058         	movff	floorf@F527+3,floorf@u+3
  8416  002F98  C045  F055         	movff	floorf@x,floorf@u
  8417  002F9C  C046  F056         	movff	floorf@x+1,floorf@u+1
  8418  002FA0  C047  F057         	movff	floorf@x+2,floorf@u+2
  8419  002FA4  C048  F058         	movff	floorf@x+3,floorf@u+3
  8420  002FA8  0E81               	movlw	129
  8421  002FAA  6E49               	movwf	??_floorf^0,c
  8422  002FAC  0EFF               	movlw	255
  8423  002FAE  6E4A               	movwf	(??_floorf+1)^0,c
  8424  002FB0  C055  F04B         	movff	floorf@u,??_floorf+2
  8425  002FB4  C056  F04C         	movff	floorf@u+1,??_floorf+3
  8426  002FB8  C057  F04D         	movff	floorf@u+2,??_floorf+4
  8427  002FBC  C058  F04E         	movff	floorf@u+3,??_floorf+5
  8428  002FC0  0E18               	movlw	24
  8429  002FC2  EFE8  F017         	goto	u4460
  8430  002FC6                     u4465:
  8431  002FC6  90D8               	bcf	status,0,c
  8432  002FC8  324E               	rrcf	(??_floorf+5)^0,f,c
  8433  002FCA  324D               	rrcf	(??_floorf+4)^0,f,c
  8434  002FCC  324C               	rrcf	(??_floorf+3)^0,f,c
  8435  002FCE  324B               	rrcf	(??_floorf+2)^0,f,c
  8436  002FD0                     u4460:
  8437  002FD0  2EE8               	decfsz	wreg,f,c
  8438  002FD2  EFE3  F017         	goto	u4465
  8439  002FD6  504B               	movf	(??_floorf+2)^0,w,c
  8440  002FD8  2449               	addwf	??_floorf^0,w,c
  8441  002FDA  6E53               	movwf	floorf@e^0,c
  8442  002FDC  0E00               	movlw	0
  8443  002FDE  204A               	addwfc	(??_floorf+1)^0,w,c
  8444  002FE0  6E54               	movwf	(floorf@e+1)^0,c
  8445  002FE2  BE54               	btfsc	(floorf@e+1)^0,7,c
  8446  002FE4  EFFD  F017         	goto	u4471
  8447  002FE8  5054               	movf	(floorf@e+1)^0,w,c
  8448  002FEA  E109               	bnz	u4470
  8449  002FEC  0E17               	movlw	23
  8450  002FEE  5C53               	subwf	floorf@e^0,w,c
  8451  002FF0  A0D8               	btfss	status,0,c
  8452  002FF2  EFFD  F017         	goto	u4471
  8453  002FF6  EFFF  F017         	goto	u4470
  8454  002FFA                     u4471:
  8455  002FFA  EF09  F018         	goto	l4540
  8456  002FFE                     u4470:
  8457  002FFE                     l4538:
  8458  002FFE  C045  F045         	movff	floorf@x,?_floorf
  8459  003002  C046  F046         	movff	floorf@x+1,?_floorf+1
  8460  003006  C047  F047         	movff	floorf@x+2,?_floorf+2
  8461  00300A  C048  F048         	movff	floorf@x+3,?_floorf+3
  8462  00300E  EFCC  F018         	goto	l1541
  8463  003012                     l4540:
  8464  003012  BE54               	btfsc	(floorf@e+1)^0,7,c
  8465  003014  EF0E  F018         	goto	u4481
  8466  003018  EF10  F018         	goto	u4480
  8467  00301C                     u4481:
  8468  00301C  EF80  F018         	goto	l4550
  8469  003020                     u4480:
  8470  003020  C053  F049         	movff	floorf@e,??_floorf
  8471  003024  0EFF               	movlw	255
  8472  003026  6E4A               	movwf	(??_floorf+1)^0,c
  8473  003028  0EFF               	movlw	255
  8474  00302A  6E4B               	movwf	(??_floorf+2)^0,c
  8475  00302C  0E7F               	movlw	127
  8476  00302E  6E4C               	movwf	(??_floorf+3)^0,c
  8477  003030  0E00               	movlw	0
  8478  003032  6E4D               	movwf	(??_floorf+4)^0,c
  8479  003034                     u4495:
  8480  003034  6649               	tstfsz	??_floorf^0,c
  8481  003036  EF1F  F018         	goto	u4496
  8482  00303A  EF27  F018         	goto	u4497
  8483  00303E                     u4496:
  8484  00303E  344D               	rlcf	(??_floorf+4)^0,w,c
  8485  003040  324D               	rrcf	(??_floorf+4)^0,f,c
  8486  003042  324C               	rrcf	(??_floorf+3)^0,f,c
  8487  003044  324B               	rrcf	(??_floorf+2)^0,f,c
  8488  003046  324A               	rrcf	(??_floorf+1)^0,f,c
  8489  003048  2E49               	decfsz	??_floorf^0,f,c
  8490  00304A  EF1A  F018         	goto	u4495
  8491  00304E                     u4497:
  8492  00304E  C04A  F04F         	movff	??_floorf+1,floorf@m
  8493  003052  C04B  F050         	movff	??_floorf+2,floorf@m+1
  8494  003056  C04C  F051         	movff	??_floorf+3,floorf@m+2
  8495  00305A  C04D  F052         	movff	??_floorf+4,floorf@m+3
  8496  00305E  504F               	movf	floorf@m^0,w,c
  8497  003060  1455               	andwf	floorf@u^0,w,c
  8498  003062  6E49               	movwf	??_floorf^0,c
  8499  003064  5050               	movf	(floorf@m+1)^0,w,c
  8500  003066  1456               	andwf	(floorf@u+1)^0,w,c
  8501  003068  6E4A               	movwf	(??_floorf+1)^0,c
  8502  00306A  5051               	movf	(floorf@m+2)^0,w,c
  8503  00306C  1457               	andwf	(floorf@u+2)^0,w,c
  8504  00306E  6E4B               	movwf	(??_floorf+2)^0,c
  8505  003070  5052               	movf	(floorf@m+3)^0,w,c
  8506  003072  1458               	andwf	(floorf@u+3)^0,w,c
  8507  003074  6E4C               	movwf	(??_floorf+3)^0,c
  8508  003076  5049               	movf	??_floorf^0,w,c
  8509  003078  104A               	iorwf	(??_floorf+1)^0,w,c
  8510  00307A  104B               	iorwf	(??_floorf+2)^0,w,c
  8511  00307C  104C               	iorwf	(??_floorf+3)^0,w,c
  8512  00307E  A4D8               	btfss	status,2,c
  8513  003080  EF44  F018         	goto	u4501
  8514  003084  EF46  F018         	goto	u4500
  8515  003088                     u4501:
  8516  003088  EF48  F018         	goto	l4546
  8517  00308C                     u4500:
  8518  00308C  EFFF  F017         	goto	l4538
  8519  003090                     l4546:
  8520  003090  C055  F049         	movff	floorf@u,??_floorf
  8521  003094  C056  F04A         	movff	floorf@u+1,??_floorf+1
  8522  003098  C057  F04B         	movff	floorf@u+2,??_floorf+2
  8523  00309C  C058  F04C         	movff	floorf@u+3,??_floorf+3
  8524  0030A0  0E20               	movlw	32
  8525  0030A2  EF58  F018         	goto	u4510
  8526  0030A6                     u4515:
  8527  0030A6  90D8               	bcf	status,0,c
  8528  0030A8  324C               	rrcf	(??_floorf+3)^0,f,c
  8529  0030AA  324B               	rrcf	(??_floorf+2)^0,f,c
  8530  0030AC  324A               	rrcf	(??_floorf+1)^0,f,c
  8531  0030AE  3249               	rrcf	??_floorf^0,f,c
  8532  0030B0                     u4510:
  8533  0030B0  2EE8               	decfsz	wreg,f,c
  8534  0030B2  EF53  F018         	goto	u4515
  8535  0030B6  5049               	movf	??_floorf^0,w,c
  8536  0030B8  104A               	iorwf	(??_floorf+1)^0,w,c
  8537  0030BA  104B               	iorwf	(??_floorf+2)^0,w,c
  8538  0030BC  104C               	iorwf	(??_floorf+3)^0,w,c
  8539  0030BE  B4D8               	btfsc	status,2,c
  8540  0030C0  EF64  F018         	goto	u4521
  8541  0030C4  EF66  F018         	goto	u4520
  8542  0030C8                     u4521:
  8543  0030C8  EF6E  F018         	goto	l1544
  8544  0030CC                     u4520:
  8545  0030CC  504F               	movf	floorf@m^0,w,c
  8546  0030CE  2655               	addwf	floorf@u^0,f,c
  8547  0030D0  5050               	movf	(floorf@m+1)^0,w,c
  8548  0030D2  2256               	addwfc	(floorf@u+1)^0,f,c
  8549  0030D4  5051               	movf	(floorf@m+2)^0,w,c
  8550  0030D6  2257               	addwfc	(floorf@u+2)^0,f,c
  8551  0030D8  5052               	movf	(floorf@m+3)^0,w,c
  8552  0030DA  2258               	addwfc	(floorf@u+3)^0,f,c
  8553  0030DC                     l1544:
  8554  0030DC  1C4F               	comf	floorf@m^0,w,c
  8555  0030DE  6E49               	movwf	??_floorf^0,c
  8556  0030E0  1C50               	comf	(floorf@m+1)^0,w,c
  8557  0030E2  6E4A               	movwf	(??_floorf+1)^0,c
  8558  0030E4  1C51               	comf	(floorf@m+2)^0,w,c
  8559  0030E6  6E4B               	movwf	(??_floorf+2)^0,c
  8560  0030E8  1C52               	comf	(floorf@m+3)^0,w,c
  8561  0030EA  6E4C               	movwf	(??_floorf+3)^0,c
  8562  0030EC  5049               	movf	??_floorf^0,w,c
  8563  0030EE  1655               	andwf	floorf@u^0,f,c
  8564  0030F0  504A               	movf	(??_floorf+1)^0,w,c
  8565  0030F2  1656               	andwf	(floorf@u+1)^0,f,c
  8566  0030F4  504B               	movf	(??_floorf+2)^0,w,c
  8567  0030F6  1657               	andwf	(floorf@u+2)^0,f,c
  8568  0030F8  504C               	movf	(??_floorf+3)^0,w,c
  8569  0030FA  1658               	andwf	(floorf@u+3)^0,f,c
  8570  0030FC  EFC4  F018         	goto	l4558
  8571  003100                     l4550:
  8572  003100  C055  F049         	movff	floorf@u,??_floorf
  8573  003104  C056  F04A         	movff	floorf@u+1,??_floorf+1
  8574  003108  C057  F04B         	movff	floorf@u+2,??_floorf+2
  8575  00310C  C058  F04C         	movff	floorf@u+3,??_floorf+3
  8576  003110  0E20               	movlw	32
  8577  003112  EF90  F018         	goto	u4530
  8578  003116                     u4535:
  8579  003116  90D8               	bcf	status,0,c
  8580  003118  324C               	rrcf	(??_floorf+3)^0,f,c
  8581  00311A  324B               	rrcf	(??_floorf+2)^0,f,c
  8582  00311C  324A               	rrcf	(??_floorf+1)^0,f,c
  8583  00311E  3249               	rrcf	??_floorf^0,f,c
  8584  003120                     u4530:
  8585  003120  2EE8               	decfsz	wreg,f,c
  8586  003122  EF8B  F018         	goto	u4535
  8587  003126  5049               	movf	??_floorf^0,w,c
  8588  003128  104A               	iorwf	(??_floorf+1)^0,w,c
  8589  00312A  104B               	iorwf	(??_floorf+2)^0,w,c
  8590  00312C  104C               	iorwf	(??_floorf+3)^0,w,c
  8591  00312E  A4D8               	btfss	status,2,c
  8592  003130  EF9C  F018         	goto	u4541
  8593  003134  EF9E  F018         	goto	u4540
  8594  003138                     u4541:
  8595  003138  EFA8  F018         	goto	l4554
  8596  00313C                     u4540:
  8597  00313C  0E00               	movlw	0
  8598  00313E  6E55               	movwf	floorf@u^0,c
  8599  003140  0E00               	movlw	0
  8600  003142  6E56               	movwf	(floorf@u+1)^0,c
  8601  003144  0E00               	movlw	0
  8602  003146  6E57               	movwf	(floorf@u+2)^0,c
  8603  003148  0E00               	movlw	0
  8604  00314A  6E58               	movwf	(floorf@u+3)^0,c
  8605  00314C  EFC4  F018         	goto	l4558
  8606  003150                     l4554:
  8607  003150  90D8               	bcf	status,0,c
  8608  003152  3455               	rlcf	floorf@u^0,w,c
  8609  003154  6E49               	movwf	??_floorf^0,c
  8610  003156  3456               	rlcf	(floorf@u+1)^0,w,c
  8611  003158  6E4A               	movwf	(??_floorf+1)^0,c
  8612  00315A  3457               	rlcf	(floorf@u+2)^0,w,c
  8613  00315C  6E4B               	movwf	(??_floorf+2)^0,c
  8614  00315E  3458               	rlcf	(floorf@u+3)^0,w,c
  8615  003160  6E4C               	movwf	(??_floorf+3)^0,c
  8616  003162  5049               	movf	??_floorf^0,w,c
  8617  003164  104A               	iorwf	(??_floorf+1)^0,w,c
  8618  003166  104B               	iorwf	(??_floorf+2)^0,w,c
  8619  003168  104C               	iorwf	(??_floorf+3)^0,w,c
  8620  00316A  B4D8               	btfsc	status,2,c
  8621  00316C  EFBA  F018         	goto	u4551
  8622  003170  EFBC  F018         	goto	u4550
  8623  003174                     u4551:
  8624  003174  EFC4  F018         	goto	l4558
  8625  003178                     u4550:
  8626  003178  0E00               	movlw	0
  8627  00317A  6E55               	movwf	floorf@u^0,c
  8628  00317C  0E00               	movlw	0
  8629  00317E  6E56               	movwf	(floorf@u+1)^0,c
  8630  003180  0E80               	movlw	128
  8631  003182  6E57               	movwf	(floorf@u+2)^0,c
  8632  003184  0EBF               	movlw	191
  8633  003186  6E58               	movwf	(floorf@u+3)^0,c
  8634  003188                     l4558:
  8635  003188  C055  F045         	movff	floorf@u,?_floorf
  8636  00318C  C056  F046         	movff	floorf@u+1,?_floorf+1
  8637  003190  C057  F047         	movff	floorf@u+2,?_floorf+2
  8638  003194  C058  F048         	movff	floorf@u+3,?_floorf+3
  8639  003198                     l1541:
  8640  003198  0012               	return		;funcret
  8641  00319A                     __end_of_floorf:
  8642                           	callstack 0
  8643                           
  8644 ;; *************** function ___fpclassifyf *****************
  8645 ;; Defined at:
  8646 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;  x               4    0[COMRAM] float 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  u               4   10[COMRAM] struct .
  8651 ;;  e               2    8[COMRAM] int 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  2    0[COMRAM] int 
  8654 ;; Registers used:
  8655 ;;		wreg, status,2, status,0
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8661 ;;      Params:         4       0       0       0       0       0       0       0       0
  8662 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8663 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8664 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8665 ;;Total ram usage:       14 bytes
  8666 ;; Hardware stack levels used: 1
  8667 ;; This function calls:
  8668 ;;		Nothing
  8669 ;; This function is called by:
  8670 ;;		_efgtoa
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text41
  8675  00393E                     __ptext41:
  8676                           	callstack 0
  8677  00393E                     ___fpclassifyf:
  8678                           	callstack 25
  8679  00393E  C0E6  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8680  003942  C0E7  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8681  003946  C0E8  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8682  00394A  C0E9  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8683  00394E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8684  003952  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8685  003956  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8686  00395A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8687  00395E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8688  003962  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8689  003966  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8690  00396A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8691  00396E  0E18               	movlw	24
  8692  003970  EFBF  F01C         	goto	u4340
  8693  003974                     u4345:
  8694  003974  90D8               	bcf	status,0,c
  8695  003976  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8696  003978  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8697  00397A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8698  00397C  3205               	rrcf	??___fpclassifyf^0,f,c
  8699  00397E                     u4340:
  8700  00397E  2EE8               	decfsz	wreg,f,c
  8701  003980  EFBA  F01C         	goto	u4345
  8702  003984  5005               	movf	??___fpclassifyf^0,w,c
  8703  003986  6E09               	movwf	___fpclassifyf@e^0,c
  8704  003988  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8705  00398A  5009               	movf	___fpclassifyf@e^0,w,c
  8706  00398C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8707  00398E  A4D8               	btfss	status,2,c
  8708  003990  EFCC  F01C         	goto	u4351
  8709  003994  EFCE  F01C         	goto	u4350
  8710  003998                     u4351:
  8711  003998  EFEE  F01C         	goto	l4510
  8712  00399C                     u4350:
  8713  00399C  90D8               	bcf	status,0,c
  8714  00399E  340B               	rlcf	___fpclassifyf@u^0,w,c
  8715  0039A0  6E05               	movwf	??___fpclassifyf^0,c
  8716  0039A2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8717  0039A4  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8718  0039A6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8719  0039A8  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8720  0039AA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8721  0039AC  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8722  0039AE  5005               	movf	??___fpclassifyf^0,w,c
  8723  0039B0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8724  0039B2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8725  0039B4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8726  0039B6  A4D8               	btfss	status,2,c
  8727  0039B8  EFE0  F01C         	goto	u4361
  8728  0039BC  EFE2  F01C         	goto	u4360
  8729  0039C0                     u4361:
  8730  0039C0  EFE8  F01C         	goto	l4506
  8731  0039C4                     u4360:
  8732  0039C4  0E00               	movlw	0
  8733  0039C6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8734  0039C8  0E02               	movlw	2
  8735  0039CA  6E01               	movwf	?___fpclassifyf^0,c
  8736  0039CC  EF1D  F01D         	goto	l1503
  8737  0039D0                     l4506:
  8738  0039D0  0E00               	movlw	0
  8739  0039D2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8740  0039D4  0E03               	movlw	3
  8741  0039D6  6E01               	movwf	?___fpclassifyf^0,c
  8742  0039D8  EF1D  F01D         	goto	l1503
  8743  0039DC                     l4510:
  8744  0039DC  2809               	incf	___fpclassifyf@e^0,w,c
  8745  0039DE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8746  0039E0  A4D8               	btfss	status,2,c
  8747  0039E2  EFF5  F01C         	goto	u4371
  8748  0039E6  EFF7  F01C         	goto	u4370
  8749  0039EA                     u4371:
  8750  0039EA  EF19  F01D         	goto	l4516
  8751  0039EE                     u4370:
  8752  0039EE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8753  0039F2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8754  0039F6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8755  0039FA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8756  0039FE  0E09               	movlw	9
  8757  003A00                     u4385:
  8758  003A00  90D8               	bcf	status,0,c
  8759  003A02  3605               	rlcf	??___fpclassifyf^0,f,c
  8760  003A04  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8761  003A06  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8762  003A08  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8763  003A0A  2EE8               	decfsz	wreg,f,c
  8764  003A0C  EF00  F01D         	goto	u4385
  8765  003A10  5005               	movf	??___fpclassifyf^0,w,c
  8766  003A12  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8767  003A14  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8768  003A16  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8769  003A18  B4D8               	btfsc	status,2,c
  8770  003A1A  EF11  F01D         	goto	u4391
  8771  003A1E  EF14  F01D         	goto	u4390
  8772  003A22                     u4391:
  8773  003A22  0E01               	movlw	1
  8774  003A24  EF15  F01D         	goto	u4400
  8775  003A28                     u4390:
  8776  003A28  0E00               	movlw	0
  8777  003A2A                     u4400:
  8778  003A2A  6E01               	movwf	?___fpclassifyf^0,c
  8779  003A2C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8780  003A2E  EF1D  F01D         	goto	l1503
  8781  003A32                     l4516:
  8782  003A32  0E00               	movlw	0
  8783  003A34  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8784  003A36  0E04               	movlw	4
  8785  003A38  6E01               	movwf	?___fpclassifyf^0,c
  8786  003A3A                     l1503:
  8787  003A3A  0012               	return		;funcret
  8788  003A3C                     __end_of___fpclassifyf:
  8789                           	callstack 0
  8790                           
  8791 ;; *************** function ___fltol *****************
  8792 ;; Defined at:
  8793 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  f1              4   84[COMRAM] int 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  exp1            1   93[COMRAM] unsigned char 
  8798 ;;  sign1           1   92[COMRAM] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  4   84[COMRAM] long 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8808 ;;      Params:         4       0       0       0       0       0       0       0       0
  8809 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8810 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8811 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8812 ;;Total ram usage:       10 bytes
  8813 ;; Hardware stack levels used: 1
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_ReadADC
  8818 ;;		_USART_Init
  8819 ;;		_efgtoa
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text42
  8824  003636                     __ptext42:
  8825                           	callstack 0
  8826  003636                     ___fltol:
  8827                           	callstack 29
  8828  003636  3457               	rlcf	(___fltol@f1+2)^0,w,c
  8829  003638  3458               	rlcf	(___fltol@f1+3)^0,w,c
  8830  00363A  6E5E               	movwf	___fltol@exp1^0,c
  8831  00363C  505E               	movf	___fltol@exp1^0,w,c
  8832  00363E  A4D8               	btfss	status,2,c
  8833  003640  EF24  F01B         	goto	u4231
  8834  003644  EF26  F01B         	goto	u4230
  8835  003648                     u4231:
  8836  003648  EF30  F01B         	goto	l4438
  8837  00364C                     u4230:
  8838  00364C                     l4434:
  8839  00364C  0E00               	movlw	0
  8840  00364E  6E55               	movwf	?___fltol^0,c
  8841  003650  0E00               	movlw	0
  8842  003652  6E56               	movwf	(?___fltol+1)^0,c
  8843  003654  0E00               	movlw	0
  8844  003656  6E57               	movwf	(?___fltol+2)^0,c
  8845  003658  0E00               	movlw	0
  8846  00365A  6E58               	movwf	(?___fltol+3)^0,c
  8847  00365C  EF9D  F01B         	goto	l893
  8848  003660                     l4438:
  8849  003660  C055  F059         	movff	___fltol@f1,??___fltol
  8850  003664  C056  F05A         	movff	___fltol@f1+1,??___fltol+1
  8851  003668  C057  F05B         	movff	___fltol@f1+2,??___fltol+2
  8852  00366C  C058  F05C         	movff	___fltol@f1+3,??___fltol+3
  8853  003670  0E20               	movlw	32
  8854  003672  EF40  F01B         	goto	u4240
  8855  003676                     u4245:
  8856  003676  90D8               	bcf	status,0,c
  8857  003678  325C               	rrcf	(??___fltol+3)^0,f,c
  8858  00367A  325B               	rrcf	(??___fltol+2)^0,f,c
  8859  00367C  325A               	rrcf	(??___fltol+1)^0,f,c
  8860  00367E  3259               	rrcf	??___fltol^0,f,c
  8861  003680                     u4240:
  8862  003680  2EE8               	decfsz	wreg,f,c
  8863  003682  EF3B  F01B         	goto	u4245
  8864  003686  5059               	movf	??___fltol^0,w,c
  8865  003688  6E5D               	movwf	___fltol@sign1^0,c
  8866  00368A  8E57               	bsf	(___fltol@f1+2)^0,7,c
  8867  00368C  0EFF               	movlw	255
  8868  00368E  1655               	andwf	___fltol@f1^0,f,c
  8869  003690  0EFF               	movlw	255
  8870  003692  1656               	andwf	(___fltol@f1+1)^0,f,c
  8871  003694  0EFF               	movlw	255
  8872  003696  1657               	andwf	(___fltol@f1+2)^0,f,c
  8873  003698  0E00               	movlw	0
  8874  00369A  1658               	andwf	(___fltol@f1+3)^0,f,c
  8875  00369C  0E96               	movlw	150
  8876  00369E  5E5E               	subwf	___fltol@exp1^0,f,c
  8877  0036A0  BE5E               	btfsc	___fltol@exp1^0,7,c
  8878  0036A2  EF57  F01B         	goto	u4250
  8879  0036A6  EF55  F01B         	goto	u4251
  8880  0036AA                     u4251:
  8881  0036AA  EF6D  F01B         	goto	l4458
  8882  0036AE                     u4250:
  8883  0036AE  505E               	movf	___fltol@exp1^0,w,c
  8884  0036B0  0A80               	xorlw	128
  8885  0036B2  0F97               	addlw	151
  8886  0036B4  B0D8               	btfsc	status,0,c
  8887  0036B6  EF5F  F01B         	goto	u4261
  8888  0036BA  EF61  F01B         	goto	u4260
  8889  0036BE                     u4261:
  8890  0036BE  EF63  F01B         	goto	l4454
  8891  0036C2                     u4260:
  8892  0036C2  EF26  F01B         	goto	l4434
  8893  0036C6                     l4454:
  8894  0036C6  90D8               	bcf	status,0,c
  8895  0036C8  3258               	rrcf	(___fltol@f1+3)^0,f,c
  8896  0036CA  3257               	rrcf	(___fltol@f1+2)^0,f,c
  8897  0036CC  3256               	rrcf	(___fltol@f1+1)^0,f,c
  8898  0036CE  3255               	rrcf	___fltol@f1^0,f,c
  8899  0036D0  3E5E               	incfsz	___fltol@exp1^0,f,c
  8900  0036D2  EF63  F01B         	goto	l4454
  8901  0036D6  EF85  F01B         	goto	l4468
  8902  0036DA                     l4458:
  8903  0036DA  0E1F               	movlw	31
  8904  0036DC  645E               	cpfsgt	___fltol@exp1^0,c
  8905  0036DE  EF73  F01B         	goto	u4271
  8906  0036E2  EF75  F01B         	goto	u4270
  8907  0036E6                     u4271:
  8908  0036E6  EF7D  F01B         	goto	l4466
  8909  0036EA                     u4270:
  8910  0036EA  EF26  F01B         	goto	l4434
  8911  0036EE                     l4464:
  8912  0036EE  90D8               	bcf	status,0,c
  8913  0036F0  3655               	rlcf	___fltol@f1^0,f,c
  8914  0036F2  3656               	rlcf	(___fltol@f1+1)^0,f,c
  8915  0036F4  3657               	rlcf	(___fltol@f1+2)^0,f,c
  8916  0036F6  3658               	rlcf	(___fltol@f1+3)^0,f,c
  8917  0036F8  065E               	decf	___fltol@exp1^0,f,c
  8918  0036FA                     l4466:
  8919  0036FA  505E               	movf	___fltol@exp1^0,w,c
  8920  0036FC  A4D8               	btfss	status,2,c
  8921  0036FE  EF83  F01B         	goto	u4281
  8922  003702  EF85  F01B         	goto	u4280
  8923  003706                     u4281:
  8924  003706  EF77  F01B         	goto	l4464
  8925  00370A                     u4280:
  8926  00370A                     l4468:
  8927  00370A  505D               	movf	___fltol@sign1^0,w,c
  8928  00370C  B4D8               	btfsc	status,2,c
  8929  00370E  EF8B  F01B         	goto	u4291
  8930  003712  EF8D  F01B         	goto	u4290
  8931  003716                     u4291:
  8932  003716  EF95  F01B         	goto	l4472
  8933  00371A                     u4290:
  8934  00371A  1E58               	comf	(___fltol@f1+3)^0,f,c
  8935  00371C  1E57               	comf	(___fltol@f1+2)^0,f,c
  8936  00371E  1E56               	comf	(___fltol@f1+1)^0,f,c
  8937  003720  6C55               	negf	___fltol@f1^0,c
  8938  003722  0E00               	movlw	0
  8939  003724  2256               	addwfc	(___fltol@f1+1)^0,f,c
  8940  003726  2257               	addwfc	(___fltol@f1+2)^0,f,c
  8941  003728  2258               	addwfc	(___fltol@f1+3)^0,f,c
  8942  00372A                     l4472:
  8943  00372A  C055  F055         	movff	___fltol@f1,?___fltol
  8944  00372E  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  8945  003732  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  8946  003736  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  8947  00373A                     l893:
  8948  00373A  0012               	return		;funcret
  8949  00373C                     __end_of___fltol:
  8950                           	callstack 0
  8951                           
  8952 ;; *************** function ___flsub *****************
  8953 ;; Defined at:
  8954 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  b               4   84[COMRAM] long 
  8957 ;;  a               4   88[COMRAM] long 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;		None
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  4   84[COMRAM] long 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2, status,0, cstack
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8969 ;;      Params:         8       0       0       0       0       0       0       0       0
  8970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8972 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8973 ;;Total ram usage:        8 bytes
  8974 ;; Hardware stack levels used: 1
  8975 ;; Hardware stack levels required when called: 1
  8976 ;; This function calls:
  8977 ;;		___fladd
  8978 ;; This function is called by:
  8979 ;;		_efgtoa
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           	psect	text43
  8984  0046D6                     __ptext43:
  8985                           	callstack 0
  8986  0046D6                     ___flsub:
  8987                           	callstack 24
  8988  0046D6  0E00               	movlw	0
  8989  0046D8  1A59               	xorwf	___flsub@a^0,f,c
  8990  0046DA  0E00               	movlw	0
  8991  0046DC  1A5A               	xorwf	(___flsub@a+1)^0,f,c
  8992  0046DE  0E00               	movlw	0
  8993  0046E0  1A5B               	xorwf	(___flsub@a+2)^0,f,c
  8994  0046E2  0E80               	movlw	128
  8995  0046E4  1A5C               	xorwf	(___flsub@a+3)^0,f,c
  8996  0046E6  C055  F045         	movff	___flsub@b,___fladd@b
  8997  0046EA  C056  F046         	movff	___flsub@b+1,___fladd@b+1
  8998  0046EE  C057  F047         	movff	___flsub@b+2,___fladd@b+2
  8999  0046F2  C058  F048         	movff	___flsub@b+3,___fladd@b+3
  9000  0046F6  C059  F049         	movff	___flsub@a,___fladd@a
  9001  0046FA  C05A  F04A         	movff	___flsub@a+1,___fladd@a+1
  9002  0046FE  C05B  F04B         	movff	___flsub@a+2,___fladd@a+2
  9003  004702  C05C  F04C         	movff	___flsub@a+3,___fladd@a+3
  9004  004706  EC5E  F00D         	call	___fladd	;wreg free
  9005  00470A  C045  F055         	movff	?___fladd,?___flsub
  9006  00470E  C046  F056         	movff	?___fladd+1,?___flsub+1
  9007  004712  C047  F057         	movff	?___fladd+2,?___flsub+2
  9008  004716  C048  F058         	movff	?___fladd+3,?___flsub+3
  9009  00471A  0012               	return		;funcret
  9010  00471C                     __end_of___flsub:
  9011                           	callstack 0
  9012                           
  9013 ;; *************** function ___fladd *****************
  9014 ;; Defined at:
  9015 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;  b               4   68[COMRAM] long 
  9018 ;;  a               4   72[COMRAM] long 
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;  grs             1   83[COMRAM] unsigned char 
  9021 ;;  bexp            1   82[COMRAM] unsigned char 
  9022 ;;  aexp            1   81[COMRAM] unsigned char 
  9023 ;;  signs           1   80[COMRAM] unsigned char 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  4   68[COMRAM] unsigned char 
  9026 ;; Registers used:
  9027 ;;		wreg, status,2, status,0
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9033 ;;      Params:         8       0       0       0       0       0       0       0       0
  9034 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9035 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9036 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9037 ;;Total ram usage:       16 bytes
  9038 ;; Hardware stack levels used: 1
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_ReadADC
  9043 ;;		_USART_Init
  9044 ;;		___flsub
  9045 ;;		_efgtoa
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text44
  9050  001ABC                     __ptext44:
  9051                           	callstack 0
  9052  001ABC                     ___fladd:
  9053                           	callstack 29
  9054  001ABC  5048               	movf	(___fladd@b+3)^0,w,c
  9055  001ABE  0B80               	andlw	128
  9056  001AC0  6E51               	movwf	___fladd@signs^0,c
  9057  001AC2  5048               	movf	(___fladd@b+3)^0,w,c
  9058  001AC4  2448               	addwf	(___fladd@b+3)^0,w,c
  9059  001AC6  6E53               	movwf	___fladd@bexp^0,c
  9060  001AC8  AE47               	btfss	(___fladd@b+2)^0,7,c
  9061  001ACA  EF69  F00D         	goto	u3151
  9062  001ACE  EF6B  F00D         	goto	u3150
  9063  001AD2                     u3151:
  9064  001AD2  EF6C  F00D         	goto	l3804
  9065  001AD6                     u3150:
  9066  001AD6  8053               	bsf	___fladd@bexp^0,0,c
  9067  001AD8                     l3804:
  9068  001AD8  5053               	movf	___fladd@bexp^0,w,c
  9069  001ADA  B4D8               	btfsc	status,2,c
  9070  001ADC  EF72  F00D         	goto	u3161
  9071  001AE0  EF74  F00D         	goto	u3160
  9072  001AE4                     u3161:
  9073  001AE4  EF89  F00D         	goto	l3814
  9074  001AE8                     u3160:
  9075  001AE8  2853               	incf	___fladd@bexp^0,w,c
  9076  001AEA  A4D8               	btfss	status,2,c
  9077  001AEC  EF7A  F00D         	goto	u3171
  9078  001AF0  EF7C  F00D         	goto	u3170
  9079  001AF4                     u3171:
  9080  001AF4  EF84  F00D         	goto	l3810
  9081  001AF8                     u3170:
  9082  001AF8  0E00               	movlw	0
  9083  001AFA  6E45               	movwf	___fladd@b^0,c
  9084  001AFC  0E00               	movlw	0
  9085  001AFE  6E46               	movwf	(___fladd@b+1)^0,c
  9086  001B00  0E00               	movlw	0
  9087  001B02  6E47               	movwf	(___fladd@b+2)^0,c
  9088  001B04  0E00               	movlw	0
  9089  001B06  6E48               	movwf	(___fladd@b+3)^0,c
  9090  001B08                     l3810:
  9091  001B08  8E47               	bsf	(___fladd@b+2)^0,7,c
  9092  001B0A  0E00               	movlw	0
  9093  001B0C  6E48               	movwf	(___fladd@b+3)^0,c
  9094  001B0E  EF91  F00D         	goto	l3816
  9095  001B12                     l3814:
  9096  001B12  0E00               	movlw	0
  9097  001B14  6E45               	movwf	___fladd@b^0,c
  9098  001B16  0E00               	movlw	0
  9099  001B18  6E46               	movwf	(___fladd@b+1)^0,c
  9100  001B1A  0E00               	movlw	0
  9101  001B1C  6E47               	movwf	(___fladd@b+2)^0,c
  9102  001B1E  0E00               	movlw	0
  9103  001B20  6E48               	movwf	(___fladd@b+3)^0,c
  9104  001B22                     l3816:
  9105  001B22  504C               	movf	(___fladd@a+3)^0,w,c
  9106  001B24  0B80               	andlw	128
  9107  001B26  6E52               	movwf	___fladd@aexp^0,c
  9108  001B28  5051               	movf	___fladd@signs^0,w,c
  9109  001B2A  1852               	xorwf	___fladd@aexp^0,w,c
  9110  001B2C  B4D8               	btfsc	status,2,c
  9111  001B2E  EF9B  F00D         	goto	u3181
  9112  001B32  EF9D  F00D         	goto	u3180
  9113  001B36                     u3181:
  9114  001B36  EF9E  F00D         	goto	l3822
  9115  001B3A                     u3180:
  9116  001B3A  8C51               	bsf	___fladd@signs^0,6,c
  9117  001B3C                     l3822:
  9118  001B3C  504C               	movf	(___fladd@a+3)^0,w,c
  9119  001B3E  244C               	addwf	(___fladd@a+3)^0,w,c
  9120  001B40  6E52               	movwf	___fladd@aexp^0,c
  9121  001B42  AE4B               	btfss	(___fladd@a+2)^0,7,c
  9122  001B44  EFA6  F00D         	goto	u3191
  9123  001B48  EFA8  F00D         	goto	u3190
  9124  001B4C                     u3191:
  9125  001B4C  EFA9  F00D         	goto	l3828
  9126  001B50                     u3190:
  9127  001B50  8052               	bsf	___fladd@aexp^0,0,c
  9128  001B52                     l3828:
  9129  001B52  5052               	movf	___fladd@aexp^0,w,c
  9130  001B54  B4D8               	btfsc	status,2,c
  9131  001B56  EFAF  F00D         	goto	u3201
  9132  001B5A  EFB1  F00D         	goto	u3200
  9133  001B5E                     u3201:
  9134  001B5E  EFC6  F00D         	goto	l3838
  9135  001B62                     u3200:
  9136  001B62  2852               	incf	___fladd@aexp^0,w,c
  9137  001B64  A4D8               	btfss	status,2,c
  9138  001B66  EFB7  F00D         	goto	u3211
  9139  001B6A  EFB9  F00D         	goto	u3210
  9140  001B6E                     u3211:
  9141  001B6E  EFC1  F00D         	goto	l3834
  9142  001B72                     u3210:
  9143  001B72  0E00               	movlw	0
  9144  001B74  6E49               	movwf	___fladd@a^0,c
  9145  001B76  0E00               	movlw	0
  9146  001B78  6E4A               	movwf	(___fladd@a+1)^0,c
  9147  001B7A  0E00               	movlw	0
  9148  001B7C  6E4B               	movwf	(___fladd@a+2)^0,c
  9149  001B7E  0E00               	movlw	0
  9150  001B80  6E4C               	movwf	(___fladd@a+3)^0,c
  9151  001B82                     l3834:
  9152  001B82  8E4B               	bsf	(___fladd@a+2)^0,7,c
  9153  001B84  0E00               	movlw	0
  9154  001B86  6E4C               	movwf	(___fladd@a+3)^0,c
  9155  001B88  EFCE  F00D         	goto	l3840
  9156  001B8C                     l3838:
  9157  001B8C  0E00               	movlw	0
  9158  001B8E  6E49               	movwf	___fladd@a^0,c
  9159  001B90  0E00               	movlw	0
  9160  001B92  6E4A               	movwf	(___fladd@a+1)^0,c
  9161  001B94  0E00               	movlw	0
  9162  001B96  6E4B               	movwf	(___fladd@a+2)^0,c
  9163  001B98  0E00               	movlw	0
  9164  001B9A  6E4C               	movwf	(___fladd@a+3)^0,c
  9165  001B9C                     l3840:
  9166  001B9C  5053               	movf	___fladd@bexp^0,w,c
  9167  001B9E  5C52               	subwf	___fladd@aexp^0,w,c
  9168  001BA0  B0D8               	btfsc	status,0,c
  9169  001BA2  EFD5  F00D         	goto	u3221
  9170  001BA6  EFD7  F00D         	goto	u3220
  9171  001BAA                     u3221:
  9172  001BAA  EFFE  F00D         	goto	l3876
  9173  001BAE                     u3220:
  9174  001BAE  AC51               	btfss	___fladd@signs^0,6,c
  9175  001BB0  EFDC  F00D         	goto	u3231
  9176  001BB4  EFDE  F00D         	goto	u3230
  9177  001BB8                     u3231:
  9178  001BB8  EFE0  F00D         	goto	l3846
  9179  001BBC                     u3230:
  9180  001BBC  0E80               	movlw	128
  9181  001BBE  1A51               	xorwf	___fladd@signs^0,f,c
  9182  001BC0                     l3846:
  9183  001BC0  C053  F054         	movff	___fladd@bexp,___fladd@grs
  9184  001BC4  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  9185  001BC8  C054  F052         	movff	___fladd@grs,___fladd@aexp
  9186  001BCC  C045  F054         	movff	___fladd@b,___fladd@grs
  9187  001BD0  C049  F045         	movff	___fladd@a,___fladd@b
  9188  001BD4  C054  F049         	movff	___fladd@grs,___fladd@a
  9189  001BD8  C046  F054         	movff	___fladd@b+1,___fladd@grs
  9190  001BDC  C04A  F046         	movff	___fladd@a+1,___fladd@b+1
  9191  001BE0  C054  F04A         	movff	___fladd@grs,___fladd@a+1
  9192  001BE4  C047  F054         	movff	___fladd@b+2,___fladd@grs
  9193  001BE8  C04B  F047         	movff	___fladd@a+2,___fladd@b+2
  9194  001BEC  C054  F04B         	movff	___fladd@grs,___fladd@a+2
  9195  001BF0  C048  F054         	movff	___fladd@b+3,___fladd@grs
  9196  001BF4  C04C  F048         	movff	___fladd@a+3,___fladd@b+3
  9197  001BF8  C054  F04C         	movff	___fladd@grs,___fladd@a+3
  9198  001BFC                     l3876:
  9199  001BFC  0E00               	movlw	0
  9200  001BFE  6E54               	movwf	___fladd@grs^0,c
  9201  001C00  5053               	movf	___fladd@bexp^0,w,c
  9202  001C02  C052  F04D         	movff	___fladd@aexp,??___fladd
  9203  001C06  6A4E               	clrf	(??___fladd+1)^0,c
  9204  001C08  5E4D               	subwf	??___fladd^0,f,c
  9205  001C0A  0E00               	movlw	0
  9206  001C0C  5A4E               	subwfb	(??___fladd+1)^0,f,c
  9207  001C0E  BE4E               	btfsc	(??___fladd+1)^0,7,c
  9208  001C10  EF13  F00E         	goto	u3241
  9209  001C14  504E               	movf	(??___fladd+1)^0,w,c
  9210  001C16  E109               	bnz	u3240
  9211  001C18  0E1A               	movlw	26
  9212  001C1A  5C4D               	subwf	??___fladd^0,w,c
  9213  001C1C  A0D8               	btfss	status,0,c
  9214  001C1E  EF13  F00E         	goto	u3241
  9215  001C22  EF15  F00E         	goto	u3240
  9216  001C26                     u3241:
  9217  001C26  EF4C  F00E         	goto	l1125
  9218  001C2A                     u3240:
  9219  001C2A  5045               	movf	___fladd@b^0,w,c
  9220  001C2C  1046               	iorwf	(___fladd@b+1)^0,w,c
  9221  001C2E  1047               	iorwf	(___fladd@b+2)^0,w,c
  9222  001C30  1048               	iorwf	(___fladd@b+3)^0,w,c
  9223  001C32  A4D8               	btfss	status,2,c
  9224  001C34  EF1E  F00E         	goto	u3251
  9225  001C38  EF21  F00E         	goto	u3250
  9226  001C3C                     u3251:
  9227  001C3C  0E01               	movlw	1
  9228  001C3E  EF22  F00E         	goto	u3260
  9229  001C42                     u3250:
  9230  001C42  0E00               	movlw	0
  9231  001C44                     u3260:
  9232  001C44  6E54               	movwf	___fladd@grs^0,c
  9233  001C46  0E00               	movlw	0
  9234  001C48  6E45               	movwf	___fladd@b^0,c
  9235  001C4A  0E00               	movlw	0
  9236  001C4C  6E46               	movwf	(___fladd@b+1)^0,c
  9237  001C4E  0E00               	movlw	0
  9238  001C50  6E47               	movwf	(___fladd@b+2)^0,c
  9239  001C52  0E00               	movlw	0
  9240  001C54  6E48               	movwf	(___fladd@b+3)^0,c
  9241  001C56  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  9242  001C5A  EF55  F00E         	goto	l1124
  9243  001C5E                     l1126:
  9244  001C5E  A054               	btfss	___fladd@grs^0,0,c
  9245  001C60  EF34  F00E         	goto	u3271
  9246  001C64  EF36  F00E         	goto	u3270
  9247  001C68                     u3271:
  9248  001C68  EF3C  F00E         	goto	l3888
  9249  001C6C                     u3270:
  9250  001C6C  90D8               	bcf	status,0,c
  9251  001C6E  3054               	rrcf	___fladd@grs^0,w,c
  9252  001C70  0901               	iorlw	1
  9253  001C72  6E54               	movwf	___fladd@grs^0,c
  9254  001C74  EF3E  F00E         	goto	l3890
  9255  001C78                     l3888:
  9256  001C78  90D8               	bcf	status,0,c
  9257  001C7A  3254               	rrcf	___fladd@grs^0,f,c
  9258  001C7C                     l3890:
  9259  001C7C  A045               	btfss	___fladd@b^0,0,c
  9260  001C7E  EF43  F00E         	goto	u3281
  9261  001C82  EF45  F00E         	goto	u3280
  9262  001C86                     u3281:
  9263  001C86  EF46  F00E         	goto	l3894
  9264  001C8A                     u3280:
  9265  001C8A  8E54               	bsf	___fladd@grs^0,7,c
  9266  001C8C                     l3894:
  9267  001C8C  3448               	rlcf	(___fladd@b+3)^0,w,c
  9268  001C8E  3248               	rrcf	(___fladd@b+3)^0,f,c
  9269  001C90  3247               	rrcf	(___fladd@b+2)^0,f,c
  9270  001C92  3246               	rrcf	(___fladd@b+1)^0,f,c
  9271  001C94  3245               	rrcf	___fladd@b^0,f,c
  9272  001C96  2A53               	incf	___fladd@bexp^0,f,c
  9273  001C98                     l1125:
  9274  001C98  5052               	movf	___fladd@aexp^0,w,c
  9275  001C9A  5C53               	subwf	___fladd@bexp^0,w,c
  9276  001C9C  A0D8               	btfss	status,0,c
  9277  001C9E  EF53  F00E         	goto	u3291
  9278  001CA2  EF55  F00E         	goto	u3290
  9279  001CA6                     u3291:
  9280  001CA6  EF2F  F00E         	goto	l1126
  9281  001CAA                     u3290:
  9282  001CAA                     l1124:
  9283  001CAA  BC51               	btfsc	___fladd@signs^0,6,c
  9284  001CAC  EF5A  F00E         	goto	u3301
  9285  001CB0  EF5C  F00E         	goto	u3300
  9286  001CB4                     u3301:
  9287  001CB4  EF9C  F00E         	goto	l3922
  9288  001CB8                     u3300:
  9289  001CB8  5053               	movf	___fladd@bexp^0,w,c
  9290  001CBA  A4D8               	btfss	status,2,c
  9291  001CBC  EF62  F00E         	goto	u3311
  9292  001CC0  EF64  F00E         	goto	u3310
  9293  001CC4                     u3311:
  9294  001CC4  EF6E  F00E         	goto	l3904
  9295  001CC8                     u3310:
  9296  001CC8  0E00               	movlw	0
  9297  001CCA  6E45               	movwf	?___fladd^0,c
  9298  001CCC  0E00               	movlw	0
  9299  001CCE  6E46               	movwf	(?___fladd+1)^0,c
  9300  001CD0  0E00               	movlw	0
  9301  001CD2  6E47               	movwf	(?___fladd+2)^0,c
  9302  001CD4  0E00               	movlw	0
  9303  001CD6  6E48               	movwf	(?___fladd+3)^0,c
  9304  001CD8  EFBD  F00F         	goto	l1133
  9305  001CDC                     l3904:
  9306  001CDC  5049               	movf	___fladd@a^0,w,c
  9307  001CDE  2645               	addwf	___fladd@b^0,f,c
  9308  001CE0  504A               	movf	(___fladd@a+1)^0,w,c
  9309  001CE2  2246               	addwfc	(___fladd@b+1)^0,f,c
  9310  001CE4  504B               	movf	(___fladd@a+2)^0,w,c
  9311  001CE6  2247               	addwfc	(___fladd@b+2)^0,f,c
  9312  001CE8  504C               	movf	(___fladd@a+3)^0,w,c
  9313  001CEA  2248               	addwfc	(___fladd@b+3)^0,f,c
  9314  001CEC  A048               	btfss	(___fladd@b+3)^0,0,c
  9315  001CEE  EF7B  F00E         	goto	u3321
  9316  001CF2  EF7D  F00E         	goto	u3320
  9317  001CF6                     u3321:
  9318  001CF6  EF29  F00F         	goto	l3958
  9319  001CFA                     u3320:
  9320  001CFA  A054               	btfss	___fladd@grs^0,0,c
  9321  001CFC  EF82  F00E         	goto	u3331
  9322  001D00  EF84  F00E         	goto	u3330
  9323  001D04                     u3331:
  9324  001D04  EF8A  F00E         	goto	l3912
  9325  001D08                     u3330:
  9326  001D08  90D8               	bcf	status,0,c
  9327  001D0A  3054               	rrcf	___fladd@grs^0,w,c
  9328  001D0C  0901               	iorlw	1
  9329  001D0E  6E54               	movwf	___fladd@grs^0,c
  9330  001D10  EF8C  F00E         	goto	l3914
  9331  001D14                     l3912:
  9332  001D14  90D8               	bcf	status,0,c
  9333  001D16  3254               	rrcf	___fladd@grs^0,f,c
  9334  001D18                     l3914:
  9335  001D18  A045               	btfss	___fladd@b^0,0,c
  9336  001D1A  EF91  F00E         	goto	u3341
  9337  001D1E  EF93  F00E         	goto	u3340
  9338  001D22                     u3341:
  9339  001D22  EF94  F00E         	goto	l3918
  9340  001D26                     u3340:
  9341  001D26  8E54               	bsf	___fladd@grs^0,7,c
  9342  001D28                     l3918:
  9343  001D28  3448               	rlcf	(___fladd@b+3)^0,w,c
  9344  001D2A  3248               	rrcf	(___fladd@b+3)^0,f,c
  9345  001D2C  3247               	rrcf	(___fladd@b+2)^0,f,c
  9346  001D2E  3246               	rrcf	(___fladd@b+1)^0,f,c
  9347  001D30  3245               	rrcf	___fladd@b^0,f,c
  9348  001D32  2A53               	incf	___fladd@bexp^0,f,c
  9349  001D34  EF29  F00F         	goto	l3958
  9350  001D38                     l3922:
  9351  001D38  5049               	movf	___fladd@a^0,w,c
  9352  001D3A  5C45               	subwf	___fladd@b^0,w,c
  9353  001D3C  504A               	movf	(___fladd@a+1)^0,w,c
  9354  001D3E  5846               	subwfb	(___fladd@b+1)^0,w,c
  9355  001D40  504B               	movf	(___fladd@a+2)^0,w,c
  9356  001D42  5847               	subwfb	(___fladd@b+2)^0,w,c
  9357  001D44  5048               	movf	(___fladd@b+3)^0,w,c
  9358  001D46  0A80               	xorlw	128
  9359  001D48  6E4D               	movwf	??___fladd^0,c
  9360  001D4A  504C               	movf	(___fladd@a+3)^0,w,c
  9361  001D4C  0A80               	xorlw	128
  9362  001D4E  584D               	subwfb	??___fladd^0,w,c
  9363  001D50  B0D8               	btfsc	status,0,c
  9364  001D52  EFAD  F00E         	goto	u3351
  9365  001D56  EFAF  F00E         	goto	u3350
  9366  001D5A                     u3351:
  9367  001D5A  EFDA  F00E         	goto	l3932
  9368  001D5E                     u3350:
  9369  001D5E  5045               	movf	___fladd@b^0,w,c
  9370  001D60  5C49               	subwf	___fladd@a^0,w,c
  9371  001D62  6E4D               	movwf	??___fladd^0,c
  9372  001D64  5046               	movf	(___fladd@b+1)^0,w,c
  9373  001D66  584A               	subwfb	(___fladd@a+1)^0,w,c
  9374  001D68  6E4E               	movwf	(??___fladd+1)^0,c
  9375  001D6A  5047               	movf	(___fladd@b+2)^0,w,c
  9376  001D6C  584B               	subwfb	(___fladd@a+2)^0,w,c
  9377  001D6E  6E4F               	movwf	(??___fladd+2)^0,c
  9378  001D70  5048               	movf	(___fladd@b+3)^0,w,c
  9379  001D72  584C               	subwfb	(___fladd@a+3)^0,w,c
  9380  001D74  6E50               	movwf	(??___fladd+3)^0,c
  9381  001D76  0EFF               	movlw	255
  9382  001D78  244D               	addwf	??___fladd^0,w,c
  9383  001D7A  6E45               	movwf	___fladd@b^0,c
  9384  001D7C  0EFF               	movlw	255
  9385  001D7E  204E               	addwfc	(??___fladd+1)^0,w,c
  9386  001D80  6E46               	movwf	(___fladd@b+1)^0,c
  9387  001D82  0EFF               	movlw	255
  9388  001D84  204F               	addwfc	(??___fladd+2)^0,w,c
  9389  001D86  6E47               	movwf	(___fladd@b+2)^0,c
  9390  001D88  0EFF               	movlw	255
  9391  001D8A  2050               	addwfc	(??___fladd+3)^0,w,c
  9392  001D8C  6E48               	movwf	(___fladd@b+3)^0,c
  9393  001D8E  0E80               	movlw	128
  9394  001D90  1A51               	xorwf	___fladd@signs^0,f,c
  9395  001D92  6C54               	negf	___fladd@grs^0,c
  9396  001D94  5054               	movf	___fladd@grs^0,w,c
  9397  001D96  A4D8               	btfss	status,2,c
  9398  001D98  EFD0  F00E         	goto	u3361
  9399  001D9C  EFD2  F00E         	goto	u3360
  9400  001DA0                     u3361:
  9401  001DA0  EFE2  F00E         	goto	l1141
  9402  001DA4                     u3360:
  9403  001DA4  0E01               	movlw	1
  9404  001DA6  2645               	addwf	___fladd@b^0,f,c
  9405  001DA8  0E00               	movlw	0
  9406  001DAA  2246               	addwfc	(___fladd@b+1)^0,f,c
  9407  001DAC  2247               	addwfc	(___fladd@b+2)^0,f,c
  9408  001DAE  2248               	addwfc	(___fladd@b+3)^0,f,c
  9409  001DB0  EFE2  F00E         	goto	l1141
  9410  001DB4                     l3932:
  9411  001DB4  5049               	movf	___fladd@a^0,w,c
  9412  001DB6  5E45               	subwf	___fladd@b^0,f,c
  9413  001DB8  504A               	movf	(___fladd@a+1)^0,w,c
  9414  001DBA  5A46               	subwfb	(___fladd@b+1)^0,f,c
  9415  001DBC  504B               	movf	(___fladd@a+2)^0,w,c
  9416  001DBE  5A47               	subwfb	(___fladd@b+2)^0,f,c
  9417  001DC0  504C               	movf	(___fladd@a+3)^0,w,c
  9418  001DC2  5A48               	subwfb	(___fladd@b+3)^0,f,c
  9419  001DC4                     l1141:
  9420  001DC4  5045               	movf	___fladd@b^0,w,c
  9421  001DC6  1046               	iorwf	(___fladd@b+1)^0,w,c
  9422  001DC8  1047               	iorwf	(___fladd@b+2)^0,w,c
  9423  001DCA  1048               	iorwf	(___fladd@b+3)^0,w,c
  9424  001DCC  A4D8               	btfss	status,2,c
  9425  001DCE  EFEB  F00E         	goto	u3371
  9426  001DD2  EFED  F00E         	goto	u3370
  9427  001DD6                     u3371:
  9428  001DD6  EF22  F00F         	goto	l3956
  9429  001DDA                     u3370:
  9430  001DDA  5054               	movf	___fladd@grs^0,w,c
  9431  001DDC  A4D8               	btfss	status,2,c
  9432  001DDE  EFF3  F00E         	goto	u3381
  9433  001DE2  EFF5  F00E         	goto	u3380
  9434  001DE6                     u3381:
  9435  001DE6  EF22  F00F         	goto	l3956
  9436  001DEA                     u3380:
  9437  001DEA  0E00               	movlw	0
  9438  001DEC  6E45               	movwf	?___fladd^0,c
  9439  001DEE  0E00               	movlw	0
  9440  001DF0  6E46               	movwf	(?___fladd+1)^0,c
  9441  001DF2  0E00               	movlw	0
  9442  001DF4  6E47               	movwf	(?___fladd+2)^0,c
  9443  001DF6  0E00               	movlw	0
  9444  001DF8  6E48               	movwf	(?___fladd+3)^0,c
  9445  001DFA  EFBD  F00F         	goto	l1133
  9446  001DFE                     l3940:
  9447  001DFE  90D8               	bcf	status,0,c
  9448  001E00  3645               	rlcf	___fladd@b^0,f,c
  9449  001E02  3646               	rlcf	(___fladd@b+1)^0,f,c
  9450  001E04  3647               	rlcf	(___fladd@b+2)^0,f,c
  9451  001E06  3648               	rlcf	(___fladd@b+3)^0,f,c
  9452  001E08  AE54               	btfss	___fladd@grs^0,7,c
  9453  001E0A  EF09  F00F         	goto	u3391
  9454  001E0E  EF0B  F00F         	goto	u3390
  9455  001E12                     u3391:
  9456  001E12  EF0C  F00F         	goto	l3946
  9457  001E16                     u3390:
  9458  001E16  8045               	bsf	___fladd@b^0,0,c
  9459  001E18                     l3946:
  9460  001E18  A054               	btfss	___fladd@grs^0,0,c
  9461  001E1A  EF11  F00F         	goto	u3401
  9462  001E1E  EF13  F00F         	goto	u3400
  9463  001E22                     u3401:
  9464  001E22  EF17  F00F         	goto	l3950
  9465  001E26                     u3400:
  9466  001E26  80D8               	bsf	status,0,c
  9467  001E28  3654               	rlcf	___fladd@grs^0,f,c
  9468  001E2A  EF19  F00F         	goto	l3952
  9469  001E2E                     l3950:
  9470  001E2E  90D8               	bcf	status,0,c
  9471  001E30  3654               	rlcf	___fladd@grs^0,f,c
  9472  001E32                     l3952:
  9473  001E32  5053               	movf	___fladd@bexp^0,w,c
  9474  001E34  B4D8               	btfsc	status,2,c
  9475  001E36  EF1F  F00F         	goto	u3411
  9476  001E3A  EF21  F00F         	goto	u3410
  9477  001E3E                     u3411:
  9478  001E3E  EF22  F00F         	goto	l3956
  9479  001E42                     u3410:
  9480  001E42  0653               	decf	___fladd@bexp^0,f,c
  9481  001E44                     l3956:
  9482  001E44  AE47               	btfss	(___fladd@b+2)^0,7,c
  9483  001E46  EF27  F00F         	goto	u3421
  9484  001E4A  EF29  F00F         	goto	u3420
  9485  001E4E                     u3421:
  9486  001E4E  EFFF  F00E         	goto	l3940
  9487  001E52                     u3420:
  9488  001E52                     l3958:
  9489  001E52  0E00               	movlw	0
  9490  001E54  6E52               	movwf	___fladd@aexp^0,c
  9491  001E56  AE54               	btfss	___fladd@grs^0,7,c
  9492  001E58  EF30  F00F         	goto	u3431
  9493  001E5C  EF32  F00F         	goto	u3430
  9494  001E60                     u3431:
  9495  001E60  EF4A  F00F         	goto	l1150
  9496  001E64                     u3430:
  9497  001E64  C054  F04D         	movff	___fladd@grs,??___fladd
  9498  001E68  0E7F               	movlw	127
  9499  001E6A  164D               	andwf	??___fladd^0,f,c
  9500  001E6C  B4D8               	btfsc	status,2,c
  9501  001E6E  EF3B  F00F         	goto	u3441
  9502  001E72  EF3D  F00F         	goto	u3440
  9503  001E76                     u3441:
  9504  001E76  EF41  F00F         	goto	l1151
  9505  001E7A                     u3440:
  9506  001E7A                     l3964:
  9507  001E7A  0E01               	movlw	1
  9508  001E7C  6E52               	movwf	___fladd@aexp^0,c
  9509  001E7E  EF4A  F00F         	goto	l1150
  9510  001E82                     l1151:
  9511  001E82  A045               	btfss	___fladd@b^0,0,c
  9512  001E84  EF46  F00F         	goto	u3451
  9513  001E88  EF48  F00F         	goto	u3450
  9514  001E8C                     u3451:
  9515  001E8C  EF4A  F00F         	goto	l1150
  9516  001E90                     u3450:
  9517  001E90  EF3D  F00F         	goto	l3964
  9518  001E94                     l1150:
  9519  001E94  5052               	movf	___fladd@aexp^0,w,c
  9520  001E96  B4D8               	btfsc	status,2,c
  9521  001E98  EF50  F00F         	goto	u3461
  9522  001E9C  EF52  F00F         	goto	u3460
  9523  001EA0                     u3461:
  9524  001EA0  EF7D  F00F         	goto	l3976
  9525  001EA4                     u3460:
  9526  001EA4  0E01               	movlw	1
  9527  001EA6  2645               	addwf	___fladd@b^0,f,c
  9528  001EA8  0E00               	movlw	0
  9529  001EAA  2246               	addwfc	(___fladd@b+1)^0,f,c
  9530  001EAC  2247               	addwfc	(___fladd@b+2)^0,f,c
  9531  001EAE  2248               	addwfc	(___fladd@b+3)^0,f,c
  9532  001EB0  A048               	btfss	(___fladd@b+3)^0,0,c
  9533  001EB2  EF5D  F00F         	goto	u3471
  9534  001EB6  EF5F  F00F         	goto	u3470
  9535  001EBA                     u3471:
  9536  001EBA  EF7D  F00F         	goto	l3976
  9537  001EBE                     u3470:
  9538  001EBE  C045  F04D         	movff	___fladd@b,??___fladd
  9539  001EC2  C046  F04E         	movff	___fladd@b+1,??___fladd+1
  9540  001EC6  C047  F04F         	movff	___fladd@b+2,??___fladd+2
  9541  001ECA  C048  F050         	movff	___fladd@b+3,??___fladd+3
  9542  001ECE  3450               	rlcf	(??___fladd+3)^0,w,c
  9543  001ED0  3250               	rrcf	(??___fladd+3)^0,f,c
  9544  001ED2  324F               	rrcf	(??___fladd+2)^0,f,c
  9545  001ED4  324E               	rrcf	(??___fladd+1)^0,f,c
  9546  001ED6  324D               	rrcf	??___fladd^0,f,c
  9547  001ED8  C04D  F045         	movff	??___fladd,___fladd@b
  9548  001EDC  C04E  F046         	movff	??___fladd+1,___fladd@b+1
  9549  001EE0  C04F  F047         	movff	??___fladd+2,___fladd@b+2
  9550  001EE4  C050  F048         	movff	??___fladd+3,___fladd@b+3
  9551  001EE8  2853               	incf	___fladd@bexp^0,w,c
  9552  001EEA  B4D8               	btfsc	status,2,c
  9553  001EEC  EF7A  F00F         	goto	u3481
  9554  001EF0  EF7C  F00F         	goto	u3480
  9555  001EF4                     u3481:
  9556  001EF4  EF7D  F00F         	goto	l3976
  9557  001EF8                     u3480:
  9558  001EF8  2A53               	incf	___fladd@bexp^0,f,c
  9559  001EFA                     l3976:
  9560  001EFA  2853               	incf	___fladd@bexp^0,w,c
  9561  001EFC  B4D8               	btfsc	status,2,c
  9562  001EFE  EF83  F00F         	goto	u3491
  9563  001F02  EF85  F00F         	goto	u3490
  9564  001F06                     u3491:
  9565  001F06  EF8D  F00F         	goto	l3980
  9566  001F0A                     u3490:
  9567  001F0A  5053               	movf	___fladd@bexp^0,w,c
  9568  001F0C  A4D8               	btfss	status,2,c
  9569  001F0E  EF8B  F00F         	goto	u3501
  9570  001F12  EF8D  F00F         	goto	u3500
  9571  001F16                     u3501:
  9572  001F16  EF9F  F00F         	goto	l3984
  9573  001F1A                     u3500:
  9574  001F1A                     l3980:
  9575  001F1A  0E00               	movlw	0
  9576  001F1C  6E45               	movwf	___fladd@b^0,c
  9577  001F1E  0E00               	movlw	0
  9578  001F20  6E46               	movwf	(___fladd@b+1)^0,c
  9579  001F22  0E00               	movlw	0
  9580  001F24  6E47               	movwf	(___fladd@b+2)^0,c
  9581  001F26  0E00               	movlw	0
  9582  001F28  6E48               	movwf	(___fladd@b+3)^0,c
  9583  001F2A  5053               	movf	___fladd@bexp^0,w,c
  9584  001F2C  A4D8               	btfss	status,2,c
  9585  001F2E  EF9B  F00F         	goto	u3511
  9586  001F32  EF9D  F00F         	goto	u3510
  9587  001F36                     u3511:
  9588  001F36  EF9F  F00F         	goto	l3984
  9589  001F3A                     u3510:
  9590  001F3A  0E00               	movlw	0
  9591  001F3C  6E51               	movwf	___fladd@signs^0,c
  9592  001F3E                     l3984:
  9593  001F3E  A053               	btfss	___fladd@bexp^0,0,c
  9594  001F40  EFA4  F00F         	goto	u3521
  9595  001F44  EFA6  F00F         	goto	u3520
  9596  001F48                     u3521:
  9597  001F48  EFA9  F00F         	goto	l3988
  9598  001F4C                     u3520:
  9599  001F4C  8E47               	bsf	(___fladd@b+2)^0,7,c
  9600  001F4E  EFAA  F00F         	goto	l3990
  9601  001F52                     l3988:
  9602  001F52  9E47               	bcf	(___fladd@b+2)^0,7,c
  9603  001F54                     l3990:
  9604  001F54  90D8               	bcf	status,0,c
  9605  001F56  3053               	rrcf	___fladd@bexp^0,w,c
  9606  001F58  6E48               	movwf	(___fladd@b+3)^0,c
  9607  001F5A  AE51               	btfss	___fladd@signs^0,7,c
  9608  001F5C  EFB2  F00F         	goto	u3531
  9609  001F60  EFB4  F00F         	goto	u3530
  9610  001F64                     u3531:
  9611  001F64  EFB5  F00F         	goto	l3996
  9612  001F68                     u3530:
  9613  001F68  8E48               	bsf	(___fladd@b+3)^0,7,c
  9614  001F6A                     l3996:
  9615  001F6A  C045  F045         	movff	___fladd@b,?___fladd
  9616  001F6E  C046  F046         	movff	___fladd@b+1,?___fladd+1
  9617  001F72  C047  F047         	movff	___fladd@b+2,?___fladd+2
  9618  001F76  C048  F048         	movff	___fladd@b+3,?___fladd+3
  9619  001F7A                     l1133:
  9620  001F7A  0012               	return		;funcret
  9621  001F7C                     __end_of___fladd:
  9622                           	callstack 0
  9623                           
  9624 ;; *************** function ___flneg *****************
  9625 ;; Defined at:
  9626 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;  f1              4    0[COMRAM] unsigned char 
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;		None
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  4    0[COMRAM] unsigned char 
  9633 ;; Registers used:
  9634 ;;		wreg, status,2, status,0
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9640 ;;      Params:         4       0       0       0       0       0       0       0       0
  9641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9643 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9644 ;;Total ram usage:        4 bytes
  9645 ;; Hardware stack levels used: 1
  9646 ;; This function calls:
  9647 ;;		Nothing
  9648 ;; This function is called by:
  9649 ;;		_efgtoa
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           	psect	text45
  9654  004886                     __ptext45:
  9655                           	callstack 0
  9656  004886                     ___flneg:
  9657                           	callstack 25
  9658  004886  5001               	movf	___flneg@f1^0,w,c
  9659  004888  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9660  00488A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9661  00488C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9662  00488E  B4D8               	btfsc	status,2,c
  9663  004890  EF4C  F024         	goto	u4221
  9664  004894  EF4E  F024         	goto	u4220
  9665  004898                     u4221:
  9666  004898  EF56  F024         	goto	l4428
  9667  00489C                     u4220:
  9668  00489C  0E00               	movlw	0
  9669  00489E  1A01               	xorwf	___flneg@f1^0,f,c
  9670  0048A0  0E00               	movlw	0
  9671  0048A2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9672  0048A4  0E00               	movlw	0
  9673  0048A6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9674  0048A8  0E80               	movlw	128
  9675  0048AA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9676  0048AC                     l4428:
  9677  0048AC  C001  F001         	movff	___flneg@f1,?___flneg
  9678  0048B0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9679  0048B4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9680  0048B8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9681  0048BC  0012               	return		;funcret
  9682  0048BE                     __end_of___flneg:
  9683                           	callstack 0
  9684                           
  9685 ;; *************** function ___flmul *****************
  9686 ;; Defined at:
  9687 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;  b               4   18[COMRAM] unsigned char 
  9690 ;;  a               4   22[COMRAM] unsigned char 
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;  prod            4   37[COMRAM] struct .
  9693 ;;  grs             4   31[COMRAM] unsigned long 
  9694 ;;  temp            2   41[COMRAM] struct .
  9695 ;;  bexp            1   36[COMRAM] unsigned char 
  9696 ;;  aexp            1   35[COMRAM] unsigned char 
  9697 ;;  sign            1   30[COMRAM] unsigned char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  4   18[COMRAM] unsigned char 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0, prodl, prodh
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9707 ;;      Params:         8       0       0       0       0       0       0       0       0
  9708 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9709 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9710 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9711 ;;Total ram usage:       25 bytes
  9712 ;; Hardware stack levels used: 1
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_ReadADC
  9717 ;;		_efgtoa
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721                           	psect	text46
  9722  001F7C                     __ptext46:
  9723                           	callstack 0
  9724  001F7C                     ___flmul:
  9725                           	callstack 25
  9726  001F7C  5016               	movf	(___flmul@b+3)^0,w,c
  9727  001F7E  0B80               	andlw	128
  9728  001F80  6E1F               	movwf	___flmul@sign^0,c
  9729  001F82  5016               	movf	(___flmul@b+3)^0,w,c
  9730  001F84  2416               	addwf	(___flmul@b+3)^0,w,c
  9731  001F86  6E25               	movwf	___flmul@bexp^0,c
  9732  001F88  AE15               	btfss	(___flmul@b+2)^0,7,c
  9733  001F8A  EFC9  F00F         	goto	u3831
  9734  001F8E  EFCB  F00F         	goto	u3830
  9735  001F92                     u3831:
  9736  001F92  EFCC  F00F         	goto	l4176
  9737  001F96                     u3830:
  9738  001F96  8025               	bsf	___flmul@bexp^0,0,c
  9739  001F98                     l4176:
  9740  001F98  5025               	movf	___flmul@bexp^0,w,c
  9741  001F9A  B4D8               	btfsc	status,2,c
  9742  001F9C  EFD2  F00F         	goto	u3841
  9743  001FA0  EFD4  F00F         	goto	u3840
  9744  001FA4                     u3841:
  9745  001FA4  EFE7  F00F         	goto	l4184
  9746  001FA8                     u3840:
  9747  001FA8  2825               	incf	___flmul@bexp^0,w,c
  9748  001FAA  A4D8               	btfss	status,2,c
  9749  001FAC  EFDA  F00F         	goto	u3851
  9750  001FB0  EFDC  F00F         	goto	u3850
  9751  001FB4                     u3851:
  9752  001FB4  EFE4  F00F         	goto	l4182
  9753  001FB8                     u3850:
  9754  001FB8  0E00               	movlw	0
  9755  001FBA  6E13               	movwf	___flmul@b^0,c
  9756  001FBC  0E00               	movlw	0
  9757  001FBE  6E14               	movwf	(___flmul@b+1)^0,c
  9758  001FC0  0E00               	movlw	0
  9759  001FC2  6E15               	movwf	(___flmul@b+2)^0,c
  9760  001FC4  0E00               	movlw	0
  9761  001FC6  6E16               	movwf	(___flmul@b+3)^0,c
  9762  001FC8                     l4182:
  9763  001FC8  8E15               	bsf	(___flmul@b+2)^0,7,c
  9764  001FCA  EFEF  F00F         	goto	l4186
  9765  001FCE                     l4184:
  9766  001FCE  0E00               	movlw	0
  9767  001FD0  6E13               	movwf	___flmul@b^0,c
  9768  001FD2  0E00               	movlw	0
  9769  001FD4  6E14               	movwf	(___flmul@b+1)^0,c
  9770  001FD6  0E00               	movlw	0
  9771  001FD8  6E15               	movwf	(___flmul@b+2)^0,c
  9772  001FDA  0E00               	movlw	0
  9773  001FDC  6E16               	movwf	(___flmul@b+3)^0,c
  9774  001FDE                     l4186:
  9775  001FDE  501A               	movf	(___flmul@a+3)^0,w,c
  9776  001FE0  0B80               	andlw	128
  9777  001FE2  1A1F               	xorwf	___flmul@sign^0,f,c
  9778  001FE4  501A               	movf	(___flmul@a+3)^0,w,c
  9779  001FE6  241A               	addwf	(___flmul@a+3)^0,w,c
  9780  001FE8  6E24               	movwf	___flmul@aexp^0,c
  9781  001FEA  AE19               	btfss	(___flmul@a+2)^0,7,c
  9782  001FEC  EFFA  F00F         	goto	u3861
  9783  001FF0  EFFC  F00F         	goto	u3860
  9784  001FF4                     u3861:
  9785  001FF4  EFFD  F00F         	goto	l4194
  9786  001FF8                     u3860:
  9787  001FF8  8024               	bsf	___flmul@aexp^0,0,c
  9788  001FFA                     l4194:
  9789  001FFA  5024               	movf	___flmul@aexp^0,w,c
  9790  001FFC  B4D8               	btfsc	status,2,c
  9791  001FFE  EF03  F010         	goto	u3871
  9792  002002  EF05  F010         	goto	u3870
  9793  002006                     u3871:
  9794  002006  EF18  F010         	goto	l4202
  9795  00200A                     u3870:
  9796  00200A  2824               	incf	___flmul@aexp^0,w,c
  9797  00200C  A4D8               	btfss	status,2,c
  9798  00200E  EF0B  F010         	goto	u3881
  9799  002012  EF0D  F010         	goto	u3880
  9800  002016                     u3881:
  9801  002016  EF15  F010         	goto	l4200
  9802  00201A                     u3880:
  9803  00201A  0E00               	movlw	0
  9804  00201C  6E17               	movwf	___flmul@a^0,c
  9805  00201E  0E00               	movlw	0
  9806  002020  6E18               	movwf	(___flmul@a+1)^0,c
  9807  002022  0E00               	movlw	0
  9808  002024  6E19               	movwf	(___flmul@a+2)^0,c
  9809  002026  0E00               	movlw	0
  9810  002028  6E1A               	movwf	(___flmul@a+3)^0,c
  9811  00202A                     l4200:
  9812  00202A  8E19               	bsf	(___flmul@a+2)^0,7,c
  9813  00202C  EF20  F010         	goto	l1210
  9814  002030                     l4202:
  9815  002030  0E00               	movlw	0
  9816  002032  6E17               	movwf	___flmul@a^0,c
  9817  002034  0E00               	movlw	0
  9818  002036  6E18               	movwf	(___flmul@a+1)^0,c
  9819  002038  0E00               	movlw	0
  9820  00203A  6E19               	movwf	(___flmul@a+2)^0,c
  9821  00203C  0E00               	movlw	0
  9822  00203E  6E1A               	movwf	(___flmul@a+3)^0,c
  9823  002040                     l1210:
  9824  002040  5024               	movf	___flmul@aexp^0,w,c
  9825  002042  B4D8               	btfsc	status,2,c
  9826  002044  EF26  F010         	goto	u3891
  9827  002048  EF28  F010         	goto	u3890
  9828  00204C                     u3891:
  9829  00204C  EF30  F010         	goto	l4206
  9830  002050                     u3890:
  9831  002050  5025               	movf	___flmul@bexp^0,w,c
  9832  002052  A4D8               	btfss	status,2,c
  9833  002054  EF2E  F010         	goto	u3901
  9834  002058  EF30  F010         	goto	u3900
  9835  00205C                     u3901:
  9836  00205C  EF3A  F010         	goto	l4210
  9837  002060                     u3900:
  9838  002060                     l4206:
  9839  002060  0E00               	movlw	0
  9840  002062  6E13               	movwf	?___flmul^0,c
  9841  002064  0E00               	movlw	0
  9842  002066  6E14               	movwf	(?___flmul+1)^0,c
  9843  002068  0E00               	movlw	0
  9844  00206A  6E15               	movwf	(?___flmul+2)^0,c
  9845  00206C  0E00               	movlw	0
  9846  00206E  6E16               	movwf	(?___flmul+3)^0,c
  9847  002070  EFD2  F011         	goto	l1214
  9848  002074                     l4210:
  9849  002074  5019               	movf	(___flmul@a+2)^0,w,c
  9850  002076  0213               	mulwf	___flmul@b^0,c
  9851  002078  CFF3 F02A          	movff	prodl,___flmul@temp
  9852  00207C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9853  002080  502A               	movf	___flmul@temp^0,w,c
  9854  002082  6E20               	movwf	___flmul@grs^0,c
  9855  002084  6A21               	clrf	(___flmul@grs+1)^0,c
  9856  002086  6A22               	clrf	(___flmul@grs+2)^0,c
  9857  002088  6A23               	clrf	(___flmul@grs+3)^0,c
  9858  00208A  502B               	movf	(___flmul@temp+1)^0,w,c
  9859  00208C  6E26               	movwf	___flmul@prod^0,c
  9860  00208E  6A27               	clrf	(___flmul@prod+1)^0,c
  9861  002090  6A28               	clrf	(___flmul@prod+2)^0,c
  9862  002092  6A29               	clrf	(___flmul@prod+3)^0,c
  9863  002094  5018               	movf	(___flmul@a+1)^0,w,c
  9864  002096  0214               	mulwf	(___flmul@b+1)^0,c
  9865  002098  CFF3 F02A          	movff	prodl,___flmul@temp
  9866  00209C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9867  0020A0  502A               	movf	___flmul@temp^0,w,c
  9868  0020A2  2620               	addwf	___flmul@grs^0,f,c
  9869  0020A4  0E00               	movlw	0
  9870  0020A6  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9871  0020A8  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9872  0020AA  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9873  0020AC  502B               	movf	(___flmul@temp+1)^0,w,c
  9874  0020AE  2626               	addwf	___flmul@prod^0,f,c
  9875  0020B0  0E00               	movlw	0
  9876  0020B2  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9877  0020B4  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9878  0020B6  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9879  0020B8  5017               	movf	___flmul@a^0,w,c
  9880  0020BA  0215               	mulwf	(___flmul@b+2)^0,c
  9881  0020BC  CFF3 F02A          	movff	prodl,___flmul@temp
  9882  0020C0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9883  0020C4  502A               	movf	___flmul@temp^0,w,c
  9884  0020C6  2620               	addwf	___flmul@grs^0,f,c
  9885  0020C8  0E00               	movlw	0
  9886  0020CA  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9887  0020CC  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9888  0020CE  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9889  0020D0  502B               	movf	(___flmul@temp+1)^0,w,c
  9890  0020D2  2626               	addwf	___flmul@prod^0,f,c
  9891  0020D4  0E00               	movlw	0
  9892  0020D6  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9893  0020D8  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9894  0020DA  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9895  0020DC  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  9896  0020E0  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  9897  0020E4  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  9898  0020E8  6A20               	clrf	___flmul@grs^0,c
  9899  0020EA  5017               	movf	___flmul@a^0,w,c
  9900  0020EC  0214               	mulwf	(___flmul@b+1)^0,c
  9901  0020EE  CFF3 F02A          	movff	prodl,___flmul@temp
  9902  0020F2  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9903  0020F6  502A               	movf	___flmul@temp^0,w,c
  9904  0020F8  2620               	addwf	___flmul@grs^0,f,c
  9905  0020FA  502B               	movf	(___flmul@temp+1)^0,w,c
  9906  0020FC  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9907  0020FE  0E00               	movlw	0
  9908  002100  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9909  002102  0E00               	movlw	0
  9910  002104  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9911  002106  5018               	movf	(___flmul@a+1)^0,w,c
  9912  002108  0213               	mulwf	___flmul@b^0,c
  9913  00210A  CFF3 F02A          	movff	prodl,___flmul@temp
  9914  00210E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9915  002112  502A               	movf	___flmul@temp^0,w,c
  9916  002114  2620               	addwf	___flmul@grs^0,f,c
  9917  002116  502B               	movf	(___flmul@temp+1)^0,w,c
  9918  002118  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9919  00211A  0E00               	movlw	0
  9920  00211C  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9921  00211E  0E00               	movlw	0
  9922  002120  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9923  002122  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  9924  002126  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  9925  00212A  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  9926  00212E  6A20               	clrf	___flmul@grs^0,c
  9927  002130  5017               	movf	___flmul@a^0,w,c
  9928  002132  0213               	mulwf	___flmul@b^0,c
  9929  002134  CFF3 F02A          	movff	prodl,___flmul@temp
  9930  002138  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9931  00213C  502A               	movf	___flmul@temp^0,w,c
  9932  00213E  2620               	addwf	___flmul@grs^0,f,c
  9933  002140  502B               	movf	(___flmul@temp+1)^0,w,c
  9934  002142  2221               	addwfc	(___flmul@grs+1)^0,f,c
  9935  002144  0E00               	movlw	0
  9936  002146  2222               	addwfc	(___flmul@grs+2)^0,f,c
  9937  002148  0E00               	movlw	0
  9938  00214A  2223               	addwfc	(___flmul@grs+3)^0,f,c
  9939  00214C  5019               	movf	(___flmul@a+2)^0,w,c
  9940  00214E  0214               	mulwf	(___flmul@b+1)^0,c
  9941  002150  CFF3 F02A          	movff	prodl,___flmul@temp
  9942  002154  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9943  002158  502A               	movf	___flmul@temp^0,w,c
  9944  00215A  2626               	addwf	___flmul@prod^0,f,c
  9945  00215C  502B               	movf	(___flmul@temp+1)^0,w,c
  9946  00215E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9947  002160  0E00               	movlw	0
  9948  002162  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9949  002164  0E00               	movlw	0
  9950  002166  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9951  002168  5018               	movf	(___flmul@a+1)^0,w,c
  9952  00216A  0215               	mulwf	(___flmul@b+2)^0,c
  9953  00216C  CFF3 F02A          	movff	prodl,___flmul@temp
  9954  002170  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9955  002174  502A               	movf	___flmul@temp^0,w,c
  9956  002176  2626               	addwf	___flmul@prod^0,f,c
  9957  002178  502B               	movf	(___flmul@temp+1)^0,w,c
  9958  00217A  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9959  00217C  0E00               	movlw	0
  9960  00217E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9961  002180  0E00               	movlw	0
  9962  002182  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9963  002184  5019               	movf	(___flmul@a+2)^0,w,c
  9964  002186  0215               	mulwf	(___flmul@b+2)^0,c
  9965  002188  CFF3 F02A          	movff	prodl,___flmul@temp
  9966  00218C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  9967  002190  502A               	movf	___flmul@temp^0,w,c
  9968  002192  6E1B               	movwf	??___flmul^0,c
  9969  002194  502B               	movf	(___flmul@temp+1)^0,w,c
  9970  002196  6E1C               	movwf	(??___flmul+1)^0,c
  9971  002198  6A1D               	clrf	(??___flmul+2)^0,c
  9972  00219A  6A1E               	clrf	(??___flmul+3)^0,c
  9973  00219C  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  9974  0021A0  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  9975  0021A4  C01B  F01C         	movff	??___flmul,??___flmul+1
  9976  0021A8  6A1B               	clrf	??___flmul^0,c
  9977  0021AA  501B               	movf	??___flmul^0,w,c
  9978  0021AC  2626               	addwf	___flmul@prod^0,f,c
  9979  0021AE  501C               	movf	(??___flmul+1)^0,w,c
  9980  0021B0  2227               	addwfc	(___flmul@prod+1)^0,f,c
  9981  0021B2  501D               	movf	(??___flmul+2)^0,w,c
  9982  0021B4  2228               	addwfc	(___flmul@prod+2)^0,f,c
  9983  0021B6  501E               	movf	(??___flmul+3)^0,w,c
  9984  0021B8  2229               	addwfc	(___flmul@prod+3)^0,f,c
  9985  0021BA  C020  F01B         	movff	___flmul@grs,??___flmul
  9986  0021BE  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  9987  0021C2  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  9988  0021C6  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  9989  0021CA  0E19               	movlw	25
  9990  0021CC  EFED  F010         	goto	u3910
  9991  0021D0                     u3915:
  9992  0021D0  90D8               	bcf	status,0,c
  9993  0021D2  321E               	rrcf	(??___flmul+3)^0,f,c
  9994  0021D4  321D               	rrcf	(??___flmul+2)^0,f,c
  9995  0021D6  321C               	rrcf	(??___flmul+1)^0,f,c
  9996  0021D8  321B               	rrcf	??___flmul^0,f,c
  9997  0021DA                     u3910:
  9998  0021DA  2EE8               	decfsz	wreg,f,c
  9999  0021DC  EFE8  F010         	goto	u3915
 10000  0021E0  501B               	movf	??___flmul^0,w,c
 10001  0021E2  2626               	addwf	___flmul@prod^0,f,c
 10002  0021E4  501C               	movf	(??___flmul+1)^0,w,c
 10003  0021E6  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10004  0021E8  501D               	movf	(??___flmul+2)^0,w,c
 10005  0021EA  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10006  0021EC  501E               	movf	(??___flmul+3)^0,w,c
 10007  0021EE  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10008  0021F0  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 10009  0021F4  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 10010  0021F8  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 10011  0021FC  6A20               	clrf	___flmul@grs^0,c
 10012  0021FE  5024               	movf	___flmul@aexp^0,w,c
 10013  002200  C025  F01B         	movff	___flmul@bexp,??___flmul
 10014  002204  6A1C               	clrf	(??___flmul+1)^0,c
 10015  002206  261B               	addwf	??___flmul^0,f,c
 10016  002208  0E00               	movlw	0
 10017  00220A  221C               	addwfc	(??___flmul+1)^0,f,c
 10018  00220C  0E82               	movlw	130
 10019  00220E  241B               	addwf	??___flmul^0,w,c
 10020  002210  6E2A               	movwf	___flmul@temp^0,c
 10021  002212  0EFF               	movlw	255
 10022  002214  201C               	addwfc	(??___flmul+1)^0,w,c
 10023  002216  6E2B               	movwf	(___flmul@temp+1)^0,c
 10024  002218  EF23  F011         	goto	l4258
 10025  00221C                     l4252:
 10026  00221C  90D8               	bcf	status,0,c
 10027  00221E  3626               	rlcf	___flmul@prod^0,f,c
 10028  002220  3627               	rlcf	(___flmul@prod+1)^0,f,c
 10029  002222  3628               	rlcf	(___flmul@prod+2)^0,f,c
 10030  002224  3629               	rlcf	(___flmul@prod+3)^0,f,c
 10031  002226  AE23               	btfss	(___flmul@grs+3)^0,7,c
 10032  002228  EF18  F011         	goto	u3921
 10033  00222C  EF1A  F011         	goto	u3920
 10034  002230                     u3921:
 10035  002230  EF1B  F011         	goto	l1217
 10036  002234                     u3920:
 10037  002234  8026               	bsf	___flmul@prod^0,0,c
 10038  002236                     l1217:
 10039  002236  90D8               	bcf	status,0,c
 10040  002238  3620               	rlcf	___flmul@grs^0,f,c
 10041  00223A  3621               	rlcf	(___flmul@grs+1)^0,f,c
 10042  00223C  3622               	rlcf	(___flmul@grs+2)^0,f,c
 10043  00223E  3623               	rlcf	(___flmul@grs+3)^0,f,c
 10044  002240  062A               	decf	___flmul@temp^0,f,c
 10045  002242  A0D8               	btfss	status,0,c
 10046  002244  062B               	decf	(___flmul@temp+1)^0,f,c
 10047  002246                     l4258:
 10048  002246  AE28               	btfss	(___flmul@prod+2)^0,7,c
 10049  002248  EF28  F011         	goto	u3931
 10050  00224C  EF2A  F011         	goto	u3930
 10051  002250                     u3931:
 10052  002250  EF0E  F011         	goto	l4252
 10053  002254                     u3930:
 10054  002254  0E00               	movlw	0
 10055  002256  6E24               	movwf	___flmul@aexp^0,c
 10056  002258  AE23               	btfss	(___flmul@grs+3)^0,7,c
 10057  00225A  EF31  F011         	goto	u3941
 10058  00225E  EF33  F011         	goto	u3940
 10059  002262                     u3941:
 10060  002262  EF57  F011         	goto	l1219
 10061  002266                     u3940:
 10062  002266  0EFF               	movlw	255
 10063  002268  1420               	andwf	___flmul@grs^0,w,c
 10064  00226A  6E1B               	movwf	??___flmul^0,c
 10065  00226C  0EFF               	movlw	255
 10066  00226E  1421               	andwf	(___flmul@grs+1)^0,w,c
 10067  002270  6E1C               	movwf	(??___flmul+1)^0,c
 10068  002272  0EFF               	movlw	255
 10069  002274  1422               	andwf	(___flmul@grs+2)^0,w,c
 10070  002276  6E1D               	movwf	(??___flmul+2)^0,c
 10071  002278  0E7F               	movlw	127
 10072  00227A  1423               	andwf	(___flmul@grs+3)^0,w,c
 10073  00227C  6E1E               	movwf	(??___flmul+3)^0,c
 10074  00227E  501B               	movf	??___flmul^0,w,c
 10075  002280  101C               	iorwf	(??___flmul+1)^0,w,c
 10076  002282  101D               	iorwf	(??___flmul+2)^0,w,c
 10077  002284  101E               	iorwf	(??___flmul+3)^0,w,c
 10078  002286  B4D8               	btfsc	status,2,c
 10079  002288  EF48  F011         	goto	u3951
 10080  00228C  EF4A  F011         	goto	u3950
 10081  002290                     u3951:
 10082  002290  EF4E  F011         	goto	l1220
 10083  002294                     u3950:
 10084  002294                     l4266:
 10085  002294  0E01               	movlw	1
 10086  002296  6E24               	movwf	___flmul@aexp^0,c
 10087  002298  EF57  F011         	goto	l1219
 10088  00229C                     l1220:
 10089  00229C  A026               	btfss	___flmul@prod^0,0,c
 10090  00229E  EF53  F011         	goto	u3961
 10091  0022A2  EF55  F011         	goto	u3960
 10092  0022A6                     u3961:
 10093  0022A6  EF57  F011         	goto	l1219
 10094  0022AA                     u3960:
 10095  0022AA  EF4A  F011         	goto	l4266
 10096  0022AE                     l1219:
 10097  0022AE  5024               	movf	___flmul@aexp^0,w,c
 10098  0022B0  B4D8               	btfsc	status,2,c
 10099  0022B2  EF5D  F011         	goto	u3971
 10100  0022B6  EF5F  F011         	goto	u3970
 10101  0022BA                     u3971:
 10102  0022BA  EF83  F011         	goto	l4278
 10103  0022BE                     u3970:
 10104  0022BE  0E01               	movlw	1
 10105  0022C0  2626               	addwf	___flmul@prod^0,f,c
 10106  0022C2  0E00               	movlw	0
 10107  0022C4  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10108  0022C6  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10109  0022C8  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10110  0022CA  A029               	btfss	(___flmul@prod+3)^0,0,c
 10111  0022CC  EF6A  F011         	goto	u3981
 10112  0022D0  EF6C  F011         	goto	u3980
 10113  0022D4                     u3981:
 10114  0022D4  EF83  F011         	goto	l4278
 10115  0022D8                     u3980:
 10116  0022D8  C026  F01B         	movff	___flmul@prod,??___flmul
 10117  0022DC  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
 10118  0022E0  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
 10119  0022E4  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
 10120  0022E8  341E               	rlcf	(??___flmul+3)^0,w,c
 10121  0022EA  321E               	rrcf	(??___flmul+3)^0,f,c
 10122  0022EC  321D               	rrcf	(??___flmul+2)^0,f,c
 10123  0022EE  321C               	rrcf	(??___flmul+1)^0,f,c
 10124  0022F0  321B               	rrcf	??___flmul^0,f,c
 10125  0022F2  C01B  F026         	movff	??___flmul,___flmul@prod
 10126  0022F6  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
 10127  0022FA  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
 10128  0022FE  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
 10129  002302  4A2A               	infsnz	___flmul@temp^0,f,c
 10130  002304  2A2B               	incf	(___flmul@temp+1)^0,f,c
 10131  002306                     l4278:
 10132  002306  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
 10133  002308  EF8E  F011         	goto	u3991
 10134  00230C  502B               	movf	(___flmul@temp+1)^0,w,c
 10135  00230E  E108               	bnz	u3990
 10136  002310  282A               	incf	___flmul@temp^0,w,c
 10137  002312  A0D8               	btfss	status,0,c
 10138  002314  EF8E  F011         	goto	u3991
 10139  002318  EF90  F011         	goto	u3990
 10140  00231C                     u3991:
 10141  00231C  EF9A  F011         	goto	l4282
 10142  002320                     u3990:
 10143  002320  0E00               	movlw	0
 10144  002322  6E26               	movwf	___flmul@prod^0,c
 10145  002324  0E00               	movlw	0
 10146  002326  6E27               	movwf	(___flmul@prod+1)^0,c
 10147  002328  0E80               	movlw	128
 10148  00232A  6E28               	movwf	(___flmul@prod+2)^0,c
 10149  00232C  0E7F               	movlw	127
 10150  00232E  6E29               	movwf	(___flmul@prod+3)^0,c
 10151  002330  EFC8  F011         	goto	l4294
 10152  002334                     l4282:
 10153  002334  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
 10154  002336  EFA7  F011         	goto	u4000
 10155  00233A  502B               	movf	(___flmul@temp+1)^0,w,c
 10156  00233C  E106               	bnz	u4001
 10157  00233E  042A               	decf	___flmul@temp^0,w,c
 10158  002340  B0D8               	btfsc	status,0,c
 10159  002342  EFA5  F011         	goto	u4001
 10160  002346  EFA7  F011         	goto	u4000
 10161  00234A                     u4001:
 10162  00234A  EFB3  F011         	goto	l1227
 10163  00234E                     u4000:
 10164  00234E  0E00               	movlw	0
 10165  002350  6E26               	movwf	___flmul@prod^0,c
 10166  002352  0E00               	movlw	0
 10167  002354  6E27               	movwf	(___flmul@prod+1)^0,c
 10168  002356  0E00               	movlw	0
 10169  002358  6E28               	movwf	(___flmul@prod+2)^0,c
 10170  00235A  0E00               	movlw	0
 10171  00235C  6E29               	movwf	(___flmul@prod+3)^0,c
 10172  00235E  0E00               	movlw	0
 10173  002360  6E1F               	movwf	___flmul@sign^0,c
 10174  002362  EFC8  F011         	goto	l4294
 10175  002366                     l1227:
 10176  002366  C02A  F025         	movff	___flmul@temp,___flmul@bexp
 10177  00236A  0EFF               	movlw	255
 10178  00236C  1626               	andwf	___flmul@prod^0,f,c
 10179  00236E  0EFF               	movlw	255
 10180  002370  1627               	andwf	(___flmul@prod+1)^0,f,c
 10181  002372  0E7F               	movlw	127
 10182  002374  1628               	andwf	(___flmul@prod+2)^0,f,c
 10183  002376  0E00               	movlw	0
 10184  002378  1629               	andwf	(___flmul@prod+3)^0,f,c
 10185  00237A  A025               	btfss	___flmul@bexp^0,0,c
 10186  00237C  EFC2  F011         	goto	u4011
 10187  002380  EFC4  F011         	goto	u4010
 10188  002384                     u4011:
 10189  002384  EFC5  F011         	goto	l4292
 10190  002388                     u4010:
 10191  002388  8E28               	bsf	(___flmul@prod+2)^0,7,c
 10192  00238A                     l4292:
 10193  00238A  90D8               	bcf	status,0,c
 10194  00238C  3025               	rrcf	___flmul@bexp^0,w,c
 10195  00238E  6E29               	movwf	(___flmul@prod+3)^0,c
 10196  002390                     l4294:
 10197  002390  501F               	movf	___flmul@sign^0,w,c
 10198  002392  1229               	iorwf	(___flmul@prod+3)^0,f,c
 10199  002394  C026  F013         	movff	___flmul@prod,?___flmul
 10200  002398  C027  F014         	movff	___flmul@prod+1,?___flmul+1
 10201  00239C  C028  F015         	movff	___flmul@prod+2,?___flmul+2
 10202  0023A0  C029  F016         	movff	___flmul@prod+3,?___flmul+3
 10203  0023A4                     l1214:
 10204  0023A4  0012               	return		;funcret
 10205  0023A6                     __end_of___flmul:
 10206                           	callstack 0
 10207                           
 10208 ;; *************** function ___flge *****************
 10209 ;; Defined at:
 10210 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10211 ;; Parameters:    Size  Location     Type
 10212 ;;  ff1             4   43[COMRAM] unsigned char 
 10213 ;;  ff2             4   47[COMRAM] unsigned char 
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;		None
 10216 ;; Return value:  Size  Location     Type
 10217 ;;		None               void
 10218 ;; Registers used:
 10219 ;;		wreg, status,2, status,0
 10220 ;; Tracked objects:
 10221 ;;		On entry : 0/0
 10222 ;;		On exit  : 0/0
 10223 ;;		Unchanged: 0/0
 10224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10225 ;;      Params:         8       0       0       0       0       0       0       0       0
 10226 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10227 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10228 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10229 ;;Total ram usage:       12 bytes
 10230 ;; Hardware stack levels used: 1
 10231 ;; This function calls:
 10232 ;;		Nothing
 10233 ;; This function is called by:
 10234 ;;		_Estados
 10235 ;;		_efgtoa
 10236 ;; This function uses a non-reentrant model
 10237 ;;
 10238                           
 10239                           	psect	text47
 10240  00373C                     __ptext47:
 10241                           	callstack 0
 10242  00373C                     ___flge:
 10243                           	callstack 25
 10244  00373C  0E00               	movlw	0
 10245  00373E  142C               	andwf	___flge@ff1^0,w,c
 10246  003740  6E34               	movwf	??___flge^0,c
 10247  003742  0E00               	movlw	0
 10248  003744  142D               	andwf	(___flge@ff1+1)^0,w,c
 10249  003746  6E35               	movwf	(??___flge+1)^0,c
 10250  003748  0E80               	movlw	128
 10251  00374A  142E               	andwf	(___flge@ff1+2)^0,w,c
 10252  00374C  6E36               	movwf	(??___flge+2)^0,c
 10253  00374E  0E7F               	movlw	127
 10254  003750  142F               	andwf	(___flge@ff1+3)^0,w,c
 10255  003752  6E37               	movwf	(??___flge+3)^0,c
 10256  003754  5034               	movf	??___flge^0,w,c
 10257  003756  1035               	iorwf	(??___flge+1)^0,w,c
 10258  003758  1036               	iorwf	(??___flge+2)^0,w,c
 10259  00375A  1037               	iorwf	(??___flge+3)^0,w,c
 10260  00375C  A4D8               	btfss	status,2,c
 10261  00375E  EFB3  F01B         	goto	u4171
 10262  003762  EFB5  F01B         	goto	u4170
 10263  003766                     u4171:
 10264  003766  EFBD  F01B         	goto	l4406
 10265  00376A                     u4170:
 10266  00376A  0E00               	movlw	0
 10267  00376C  6E2C               	movwf	___flge@ff1^0,c
 10268  00376E  0E00               	movlw	0
 10269  003770  6E2D               	movwf	(___flge@ff1+1)^0,c
 10270  003772  0E00               	movlw	0
 10271  003774  6E2E               	movwf	(___flge@ff1+2)^0,c
 10272  003776  0E00               	movlw	0
 10273  003778  6E2F               	movwf	(___flge@ff1+3)^0,c
 10274  00377A                     l4406:
 10275  00377A  0E00               	movlw	0
 10276  00377C  1430               	andwf	___flge@ff2^0,w,c
 10277  00377E  6E34               	movwf	??___flge^0,c
 10278  003780  0E00               	movlw	0
 10279  003782  1431               	andwf	(___flge@ff2+1)^0,w,c
 10280  003784  6E35               	movwf	(??___flge+1)^0,c
 10281  003786  0E80               	movlw	128
 10282  003788  1432               	andwf	(___flge@ff2+2)^0,w,c
 10283  00378A  6E36               	movwf	(??___flge+2)^0,c
 10284  00378C  0E7F               	movlw	127
 10285  00378E  1433               	andwf	(___flge@ff2+3)^0,w,c
 10286  003790  6E37               	movwf	(??___flge+3)^0,c
 10287  003792  5034               	movf	??___flge^0,w,c
 10288  003794  1035               	iorwf	(??___flge+1)^0,w,c
 10289  003796  1036               	iorwf	(??___flge+2)^0,w,c
 10290  003798  1037               	iorwf	(??___flge+3)^0,w,c
 10291  00379A  A4D8               	btfss	status,2,c
 10292  00379C  EFD2  F01B         	goto	u4181
 10293  0037A0  EFD4  F01B         	goto	u4180
 10294  0037A4                     u4181:
 10295  0037A4  EFDC  F01B         	goto	l4410
 10296  0037A8                     u4180:
 10297  0037A8  0E00               	movlw	0
 10298  0037AA  6E30               	movwf	___flge@ff2^0,c
 10299  0037AC  0E00               	movlw	0
 10300  0037AE  6E31               	movwf	(___flge@ff2+1)^0,c
 10301  0037B0  0E00               	movlw	0
 10302  0037B2  6E32               	movwf	(___flge@ff2+2)^0,c
 10303  0037B4  0E00               	movlw	0
 10304  0037B6  6E33               	movwf	(___flge@ff2+3)^0,c
 10305  0037B8                     l4410:
 10306  0037B8  AE2F               	btfss	(___flge@ff1+3)^0,7,c
 10307  0037BA  EFE1  F01B         	goto	u4191
 10308  0037BE  EFE3  F01B         	goto	u4190
 10309  0037C2                     u4191:
 10310  0037C2  EFEC  F01B         	goto	l4414
 10311  0037C6                     u4190:
 10312  0037C6  6C2C               	negf	___flge@ff1^0,c
 10313  0037C8  1E2D               	comf	(___flge@ff1+1)^0,f,c
 10314  0037CA  B0D8               	btfsc	status,0,c
 10315  0037CC  2A2D               	incf	(___flge@ff1+1)^0,f,c
 10316  0037CE  1E2E               	comf	(___flge@ff1+2)^0,f,c
 10317  0037D0  B0D8               	btfsc	status,0,c
 10318  0037D2  2A2E               	incf	(___flge@ff1+2)^0,f,c
 10319  0037D4  0E80               	movlw	128
 10320  0037D6  562F               	subfwb	(___flge@ff1+3)^0,f,c
 10321  0037D8                     l4414:
 10322  0037D8  AE33               	btfss	(___flge@ff2+3)^0,7,c
 10323  0037DA  EFF1  F01B         	goto	u4201
 10324  0037DE  EFF3  F01B         	goto	u4200
 10325  0037E2                     u4201:
 10326  0037E2  EFFC  F01B         	goto	l861
 10327  0037E6                     u4200:
 10328  0037E6  6C30               	negf	___flge@ff2^0,c
 10329  0037E8  1E31               	comf	(___flge@ff2+1)^0,f,c
 10330  0037EA  B0D8               	btfsc	status,0,c
 10331  0037EC  2A31               	incf	(___flge@ff2+1)^0,f,c
 10332  0037EE  1E32               	comf	(___flge@ff2+2)^0,f,c
 10333  0037F0  B0D8               	btfsc	status,0,c
 10334  0037F2  2A32               	incf	(___flge@ff2+2)^0,f,c
 10335  0037F4  0E80               	movlw	128
 10336  0037F6  5633               	subfwb	(___flge@ff2+3)^0,f,c
 10337  0037F8                     l861:
 10338  0037F8  0E00               	movlw	0
 10339  0037FA  1A2C               	xorwf	___flge@ff1^0,f,c
 10340  0037FC  0E00               	movlw	0
 10341  0037FE  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
 10342  003800  0E00               	movlw	0
 10343  003802  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
 10344  003804  0E80               	movlw	128
 10345  003806  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
 10346  003808  0E00               	movlw	0
 10347  00380A  1A30               	xorwf	___flge@ff2^0,f,c
 10348  00380C  0E00               	movlw	0
 10349  00380E  1A31               	xorwf	(___flge@ff2+1)^0,f,c
 10350  003810  0E00               	movlw	0
 10351  003812  1A32               	xorwf	(___flge@ff2+2)^0,f,c
 10352  003814  0E80               	movlw	128
 10353  003816  1A33               	xorwf	(___flge@ff2+3)^0,f,c
 10354  003818  5030               	movf	___flge@ff2^0,w,c
 10355  00381A  5C2C               	subwf	___flge@ff1^0,w,c
 10356  00381C  5031               	movf	(___flge@ff2+1)^0,w,c
 10357  00381E  582D               	subwfb	(___flge@ff1+1)^0,w,c
 10358  003820  5032               	movf	(___flge@ff2+2)^0,w,c
 10359  003822  582E               	subwfb	(___flge@ff1+2)^0,w,c
 10360  003824  5033               	movf	(___flge@ff2+3)^0,w,c
 10361  003826  582F               	subwfb	(___flge@ff1+3)^0,w,c
 10362  003828  B0D8               	btfsc	status,0,c
 10363  00382A  EF19  F01C         	goto	u4211
 10364  00382E  EF1B  F01C         	goto	u4210
 10365  003832                     u4211:
 10366  003832  EF1E  F01C         	goto	l4420
 10367  003836                     u4210:
 10368  003836  90D8               	bcf	status,0,c
 10369  003838  EF1F  F01C         	goto	l866
 10370  00383C                     l4420:
 10371  00383C  80D8               	bsf	status,0,c
 10372  00383E                     l866:
 10373  00383E  0012               	return		;funcret
 10374  003840                     __end_of___flge:
 10375                           	callstack 0
 10376                           
 10377 ;; *************** function ___fleq *****************
 10378 ;; Defined at:
 10379 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  ff1             4    0[COMRAM] unsigned char 
 10382 ;;  ff2             4    4[COMRAM] unsigned char 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;		None
 10385 ;; Return value:  Size  Location     Type
 10386 ;;		None               void
 10387 ;; Registers used:
 10388 ;;		wreg, status,2, status,0
 10389 ;; Tracked objects:
 10390 ;;		On entry : 0/0
 10391 ;;		On exit  : 0/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10394 ;;      Params:         8       0       0       0       0       0       0       0       0
 10395 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10396 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10397 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10398 ;;Total ram usage:       12 bytes
 10399 ;; Hardware stack levels used: 1
 10400 ;; This function calls:
 10401 ;;		Nothing
 10402 ;; This function is called by:
 10403 ;;		_efgtoa
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           	psect	text48
 10408  003F8A                     __ptext48:
 10409                           	callstack 0
 10410  003F8A                     ___fleq:
 10411                           	callstack 25
 10412  003F8A  0E00               	movlw	0
 10413  003F8C  1401               	andwf	___fleq@ff1^0,w,c
 10414  003F8E  6E09               	movwf	??___fleq^0,c
 10415  003F90  0E00               	movlw	0
 10416  003F92  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10417  003F94  6E0A               	movwf	(??___fleq+1)^0,c
 10418  003F96  0E80               	movlw	128
 10419  003F98  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10420  003F9A  6E0B               	movwf	(??___fleq+2)^0,c
 10421  003F9C  0E7F               	movlw	127
 10422  003F9E  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10423  003FA0  6E0C               	movwf	(??___fleq+3)^0,c
 10424  003FA2  5009               	movf	??___fleq^0,w,c
 10425  003FA4  100A               	iorwf	(??___fleq+1)^0,w,c
 10426  003FA6  100B               	iorwf	(??___fleq+2)^0,w,c
 10427  003FA8  100C               	iorwf	(??___fleq+3)^0,w,c
 10428  003FAA  A4D8               	btfss	status,2,c
 10429  003FAC  EFDA  F01F         	goto	u4141
 10430  003FB0  EFDC  F01F         	goto	u4140
 10431  003FB4                     u4141:
 10432  003FB4  EFE4  F01F         	goto	l4390
 10433  003FB8                     u4140:
 10434  003FB8  0E00               	movlw	0
 10435  003FBA  6E01               	movwf	___fleq@ff1^0,c
 10436  003FBC  0E00               	movlw	0
 10437  003FBE  6E02               	movwf	(___fleq@ff1+1)^0,c
 10438  003FC0  0E00               	movlw	0
 10439  003FC2  6E03               	movwf	(___fleq@ff1+2)^0,c
 10440  003FC4  0E00               	movlw	0
 10441  003FC6  6E04               	movwf	(___fleq@ff1+3)^0,c
 10442  003FC8                     l4390:
 10443  003FC8  0E00               	movlw	0
 10444  003FCA  1405               	andwf	___fleq@ff2^0,w,c
 10445  003FCC  6E09               	movwf	??___fleq^0,c
 10446  003FCE  0E00               	movlw	0
 10447  003FD0  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10448  003FD2  6E0A               	movwf	(??___fleq+1)^0,c
 10449  003FD4  0E80               	movlw	128
 10450  003FD6  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10451  003FD8  6E0B               	movwf	(??___fleq+2)^0,c
 10452  003FDA  0E7F               	movlw	127
 10453  003FDC  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10454  003FDE  6E0C               	movwf	(??___fleq+3)^0,c
 10455  003FE0  5009               	movf	??___fleq^0,w,c
 10456  003FE2  100A               	iorwf	(??___fleq+1)^0,w,c
 10457  003FE4  100B               	iorwf	(??___fleq+2)^0,w,c
 10458  003FE6  100C               	iorwf	(??___fleq+3)^0,w,c
 10459  003FE8  A4D8               	btfss	status,2,c
 10460  003FEA  EFF9  F01F         	goto	u4151
 10461  003FEE  EFFB  F01F         	goto	u4150
 10462  003FF2                     u4151:
 10463  003FF2  EF03  F020         	goto	l4394
 10464  003FF6                     u4150:
 10465  003FF6  0E00               	movlw	0
 10466  003FF8  6E05               	movwf	___fleq@ff2^0,c
 10467  003FFA  0E00               	movlw	0
 10468  003FFC  6E06               	movwf	(___fleq@ff2+1)^0,c
 10469  003FFE  0E00               	movlw	0
 10470  004000  6E07               	movwf	(___fleq@ff2+2)^0,c
 10471  004002  0E00               	movlw	0
 10472  004004  6E08               	movwf	(___fleq@ff2+3)^0,c
 10473  004006                     l4394:
 10474  004006  5005               	movf	___fleq@ff2^0,w,c
 10475  004008  1801               	xorwf	___fleq@ff1^0,w,c
 10476  00400A  E10F               	bnz	u4160
 10477  00400C  5006               	movf	(___fleq@ff2+1)^0,w,c
 10478  00400E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10479  004010  E10C               	bnz	u4160
 10480  004012  5007               	movf	(___fleq@ff2+2)^0,w,c
 10481  004014  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10482  004016  E109               	bnz	u4160
 10483  004018  5008               	movf	(___fleq@ff2+3)^0,w,c
 10484  00401A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10485  00401C  B4D8               	btfsc	status,2,c
 10486  00401E  EF13  F020         	goto	u4161
 10487  004022  EF15  F020         	goto	u4160
 10488  004026                     u4161:
 10489  004026  EF18  F020         	goto	l4398
 10490  00402A                     u4160:
 10491  00402A  90D8               	bcf	status,0,c
 10492  00402C  EF19  F020         	goto	l855
 10493  004030                     l4398:
 10494  004030  80D8               	bsf	status,0,c
 10495  004032                     l855:
 10496  004032  0012               	return		;funcret
 10497  004034                     __end_of___fleq:
 10498                           	callstack 0
 10499                           
 10500 ;; *************** function ___fldiv *****************
 10501 ;; Defined at:
 10502 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;  b               4   43[COMRAM] unsigned char 
 10505 ;;  a               4   47[COMRAM] unsigned char 
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;  grs             4   62[COMRAM] unsigned long 
 10508 ;;  rem             4   55[COMRAM] unsigned long 
 10509 ;;  new_exp         2   60[COMRAM] short 
 10510 ;;  aexp            1   67[COMRAM] unsigned char 
 10511 ;;  bexp            1   66[COMRAM] unsigned char 
 10512 ;;  sign            1   59[COMRAM] unsigned char 
 10513 ;; Return value:  Size  Location     Type
 10514 ;;                  4   43[COMRAM] unsigned char 
 10515 ;; Registers used:
 10516 ;;		wreg, status,2, status,0
 10517 ;; Tracked objects:
 10518 ;;		On entry : 0/0
 10519 ;;		On exit  : 0/0
 10520 ;;		Unchanged: 0/0
 10521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10522 ;;      Params:         8       0       0       0       0       0       0       0       0
 10523 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10524 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10525 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10526 ;;Total ram usage:       25 bytes
 10527 ;; Hardware stack levels used: 1
 10528 ;; This function calls:
 10529 ;;		Nothing
 10530 ;; This function is called by:
 10531 ;;		_ReadADC
 10532 ;;		_USART_Init
 10533 ;;		_efgtoa
 10534 ;; This function uses a non-reentrant model
 10535 ;;
 10536                           
 10537                           	psect	text49
 10538  0023A6                     __ptext49:
 10539                           	callstack 0
 10540  0023A6                     ___fldiv:
 10541                           	callstack 29
 10542  0023A6  502F               	movf	(___fldiv@b+3)^0,w,c
 10543  0023A8  0B80               	andlw	128
 10544  0023AA  6E3C               	movwf	___fldiv@sign^0,c
 10545  0023AC  502F               	movf	(___fldiv@b+3)^0,w,c
 10546  0023AE  242F               	addwf	(___fldiv@b+3)^0,w,c
 10547  0023B0  6E43               	movwf	___fldiv@bexp^0,c
 10548  0023B2  AE2E               	btfss	(___fldiv@b+2)^0,7,c
 10549  0023B4  EFDE  F011         	goto	u3601
 10550  0023B8  EFE0  F011         	goto	u3600
 10551  0023BC                     u3601:
 10552  0023BC  EFE1  F011         	goto	l4038
 10553  0023C0                     u3600:
 10554  0023C0  8043               	bsf	___fldiv@bexp^0,0,c
 10555  0023C2                     l4038:
 10556  0023C2  5043               	movf	___fldiv@bexp^0,w,c
 10557  0023C4  B4D8               	btfsc	status,2,c
 10558  0023C6  EFE7  F011         	goto	u3611
 10559  0023CA  EFE9  F011         	goto	u3610
 10560  0023CE                     u3611:
 10561  0023CE  EFFE  F011         	goto	l4048
 10562  0023D2                     u3610:
 10563  0023D2  2843               	incf	___fldiv@bexp^0,w,c
 10564  0023D4  A4D8               	btfss	status,2,c
 10565  0023D6  EFEF  F011         	goto	u3621
 10566  0023DA  EFF1  F011         	goto	u3620
 10567  0023DE                     u3621:
 10568  0023DE  EFF9  F011         	goto	l4044
 10569  0023E2                     u3620:
 10570  0023E2  0E00               	movlw	0
 10571  0023E4  6E2C               	movwf	___fldiv@b^0,c
 10572  0023E6  0E00               	movlw	0
 10573  0023E8  6E2D               	movwf	(___fldiv@b+1)^0,c
 10574  0023EA  0E00               	movlw	0
 10575  0023EC  6E2E               	movwf	(___fldiv@b+2)^0,c
 10576  0023EE  0E00               	movlw	0
 10577  0023F0  6E2F               	movwf	(___fldiv@b+3)^0,c
 10578  0023F2                     l4044:
 10579  0023F2  8E2E               	bsf	(___fldiv@b+2)^0,7,c
 10580  0023F4  0E00               	movlw	0
 10581  0023F6  6E2F               	movwf	(___fldiv@b+3)^0,c
 10582  0023F8  EF06  F012         	goto	l4050
 10583  0023FC                     l4048:
 10584  0023FC  0E00               	movlw	0
 10585  0023FE  6E2C               	movwf	___fldiv@b^0,c
 10586  002400  0E00               	movlw	0
 10587  002402  6E2D               	movwf	(___fldiv@b+1)^0,c
 10588  002404  0E00               	movlw	0
 10589  002406  6E2E               	movwf	(___fldiv@b+2)^0,c
 10590  002408  0E00               	movlw	0
 10591  00240A  6E2F               	movwf	(___fldiv@b+3)^0,c
 10592  00240C                     l4050:
 10593  00240C  5033               	movf	(___fldiv@a+3)^0,w,c
 10594  00240E  0B80               	andlw	128
 10595  002410  1A3C               	xorwf	___fldiv@sign^0,f,c
 10596  002412  5033               	movf	(___fldiv@a+3)^0,w,c
 10597  002414  2433               	addwf	(___fldiv@a+3)^0,w,c
 10598  002416  6E44               	movwf	___fldiv@aexp^0,c
 10599  002418  AE32               	btfss	(___fldiv@a+2)^0,7,c
 10600  00241A  EF11  F012         	goto	u3631
 10601  00241E  EF13  F012         	goto	u3630
 10602  002422                     u3631:
 10603  002422  EF14  F012         	goto	l4058
 10604  002426                     u3630:
 10605  002426  8044               	bsf	___fldiv@aexp^0,0,c
 10606  002428                     l4058:
 10607  002428  5044               	movf	___fldiv@aexp^0,w,c
 10608  00242A  B4D8               	btfsc	status,2,c
 10609  00242C  EF1A  F012         	goto	u3641
 10610  002430  EF1C  F012         	goto	u3640
 10611  002434                     u3641:
 10612  002434  EF31  F012         	goto	l4068
 10613  002438                     u3640:
 10614  002438  2844               	incf	___fldiv@aexp^0,w,c
 10615  00243A  A4D8               	btfss	status,2,c
 10616  00243C  EF22  F012         	goto	u3651
 10617  002440  EF24  F012         	goto	u3650
 10618  002444                     u3651:
 10619  002444  EF2C  F012         	goto	l4064
 10620  002448                     u3650:
 10621  002448  0E00               	movlw	0
 10622  00244A  6E30               	movwf	___fldiv@a^0,c
 10623  00244C  0E00               	movlw	0
 10624  00244E  6E31               	movwf	(___fldiv@a+1)^0,c
 10625  002450  0E00               	movlw	0
 10626  002452  6E32               	movwf	(___fldiv@a+2)^0,c
 10627  002454  0E00               	movlw	0
 10628  002456  6E33               	movwf	(___fldiv@a+3)^0,c
 10629  002458                     l4064:
 10630  002458  8E32               	bsf	(___fldiv@a+2)^0,7,c
 10631  00245A  0E00               	movlw	0
 10632  00245C  6E33               	movwf	(___fldiv@a+3)^0,c
 10633  00245E  EF39  F012         	goto	l4070
 10634  002462                     l4068:
 10635  002462  0E00               	movlw	0
 10636  002464  6E30               	movwf	___fldiv@a^0,c
 10637  002466  0E00               	movlw	0
 10638  002468  6E31               	movwf	(___fldiv@a+1)^0,c
 10639  00246A  0E00               	movlw	0
 10640  00246C  6E32               	movwf	(___fldiv@a+2)^0,c
 10641  00246E  0E00               	movlw	0
 10642  002470  6E33               	movwf	(___fldiv@a+3)^0,c
 10643  002472                     l4070:
 10644  002472  5030               	movf	___fldiv@a^0,w,c
 10645  002474  1031               	iorwf	(___fldiv@a+1)^0,w,c
 10646  002476  1032               	iorwf	(___fldiv@a+2)^0,w,c
 10647  002478  1033               	iorwf	(___fldiv@a+3)^0,w,c
 10648  00247A  A4D8               	btfss	status,2,c
 10649  00247C  EF42  F012         	goto	u3661
 10650  002480  EF44  F012         	goto	u3660
 10651  002484                     u3661:
 10652  002484  EF5C  F012         	goto	l4082
 10653  002488                     u3660:
 10654  002488  0E00               	movlw	0
 10655  00248A  6E2C               	movwf	___fldiv@b^0,c
 10656  00248C  0E00               	movlw	0
 10657  00248E  6E2D               	movwf	(___fldiv@b+1)^0,c
 10658  002490  0E00               	movlw	0
 10659  002492  6E2E               	movwf	(___fldiv@b+2)^0,c
 10660  002494  0E00               	movlw	0
 10661  002496  6E2F               	movwf	(___fldiv@b+3)^0,c
 10662  002498  0E80               	movlw	128
 10663  00249A  122E               	iorwf	(___fldiv@b+2)^0,f,c
 10664  00249C  0E7F               	movlw	127
 10665  00249E  122F               	iorwf	(___fldiv@b+3)^0,f,c
 10666  0024A0                     l4076:
 10667  0024A0  503C               	movf	___fldiv@sign^0,w,c
 10668  0024A2  122F               	iorwf	(___fldiv@b+3)^0,f,c
 10669  0024A4  C02C  F02C         	movff	___fldiv@b,?___fldiv
 10670  0024A8  C02D  F02D         	movff	___fldiv@b+1,?___fldiv+1
 10671  0024AC  C02E  F02E         	movff	___fldiv@b+2,?___fldiv+2
 10672  0024B0  C02F  F02F         	movff	___fldiv@b+3,?___fldiv+3
 10673  0024B4  EF9F  F013         	goto	l1178
 10674  0024B8                     l4082:
 10675  0024B8  5043               	movf	___fldiv@bexp^0,w,c
 10676  0024BA  A4D8               	btfss	status,2,c
 10677  0024BC  EF62  F012         	goto	u3671
 10678  0024C0  EF64  F012         	goto	u3670
 10679  0024C4                     u3671:
 10680  0024C4  EF6E  F012         	goto	l4090
 10681  0024C8                     u3670:
 10682  0024C8  0E00               	movlw	0
 10683  0024CA  6E2C               	movwf	?___fldiv^0,c
 10684  0024CC  0E00               	movlw	0
 10685  0024CE  6E2D               	movwf	(?___fldiv+1)^0,c
 10686  0024D0  0E00               	movlw	0
 10687  0024D2  6E2E               	movwf	(?___fldiv+2)^0,c
 10688  0024D4  0E00               	movlw	0
 10689  0024D6  6E2F               	movwf	(?___fldiv+3)^0,c
 10690  0024D8  EF9F  F013         	goto	l1178
 10691  0024DC                     l4090:
 10692  0024DC  5044               	movf	___fldiv@aexp^0,w,c
 10693  0024DE  C043  F034         	movff	___fldiv@bexp,??___fldiv
 10694  0024E2  6A35               	clrf	(??___fldiv+1)^0,c
 10695  0024E4  5E34               	subwf	??___fldiv^0,f,c
 10696  0024E6  0E00               	movlw	0
 10697  0024E8  5A35               	subwfb	(??___fldiv+1)^0,f,c
 10698  0024EA  0E7F               	movlw	127
 10699  0024EC  2434               	addwf	??___fldiv^0,w,c
 10700  0024EE  6E3D               	movwf	___fldiv@new_exp^0,c
 10701  0024F0  0E00               	movlw	0
 10702  0024F2  2035               	addwfc	(??___fldiv+1)^0,w,c
 10703  0024F4  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 10704  0024F6  C02C  F038         	movff	___fldiv@b,___fldiv@rem
 10705  0024FA  C02D  F039         	movff	___fldiv@b+1,___fldiv@rem+1
 10706  0024FE  C02E  F03A         	movff	___fldiv@b+2,___fldiv@rem+2
 10707  002502  C02F  F03B         	movff	___fldiv@b+3,___fldiv@rem+3
 10708  002506  0E00               	movlw	0
 10709  002508  6E2C               	movwf	___fldiv@b^0,c
 10710  00250A  0E00               	movlw	0
 10711  00250C  6E2D               	movwf	(___fldiv@b+1)^0,c
 10712  00250E  0E00               	movlw	0
 10713  002510  6E2E               	movwf	(___fldiv@b+2)^0,c
 10714  002512  0E00               	movlw	0
 10715  002514  6E2F               	movwf	(___fldiv@b+3)^0,c
 10716  002516  0E00               	movlw	0
 10717  002518  6E3F               	movwf	___fldiv@grs^0,c
 10718  00251A  0E00               	movlw	0
 10719  00251C  6E40               	movwf	(___fldiv@grs+1)^0,c
 10720  00251E  0E00               	movlw	0
 10721  002520  6E41               	movwf	(___fldiv@grs+2)^0,c
 10722  002522  0E00               	movlw	0
 10723  002524  6E42               	movwf	(___fldiv@grs+3)^0,c
 10724  002526  0E00               	movlw	0
 10725  002528  6E44               	movwf	___fldiv@aexp^0,c
 10726  00252A  EFCF  F012         	goto	l1180
 10727  00252E                     l4100:
 10728  00252E  5044               	movf	___fldiv@aexp^0,w,c
 10729  002530  B4D8               	btfsc	status,2,c
 10730  002532  EF9D  F012         	goto	u3681
 10731  002536  EF9F  F012         	goto	u3680
 10732  00253A                     u3681:
 10733  00253A  EFB6  F012         	goto	l4108
 10734  00253E                     u3680:
 10735  00253E  90D8               	bcf	status,0,c
 10736  002540  3638               	rlcf	___fldiv@rem^0,f,c
 10737  002542  3639               	rlcf	(___fldiv@rem+1)^0,f,c
 10738  002544  363A               	rlcf	(___fldiv@rem+2)^0,f,c
 10739  002546  363B               	rlcf	(___fldiv@rem+3)^0,f,c
 10740  002548  90D8               	bcf	status,0,c
 10741  00254A  362C               	rlcf	___fldiv@b^0,f,c
 10742  00254C  362D               	rlcf	(___fldiv@b+1)^0,f,c
 10743  00254E  362E               	rlcf	(___fldiv@b+2)^0,f,c
 10744  002550  362F               	rlcf	(___fldiv@b+3)^0,f,c
 10745  002552  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 10746  002554  EFAE  F012         	goto	u3691
 10747  002558  EFB0  F012         	goto	u3690
 10748  00255C                     u3691:
 10749  00255C  EFB1  F012         	goto	l1183
 10750  002560                     u3690:
 10751  002560  802C               	bsf	___fldiv@b^0,0,c
 10752  002562                     l1183:
 10753  002562  90D8               	bcf	status,0,c
 10754  002564  363F               	rlcf	___fldiv@grs^0,f,c
 10755  002566  3640               	rlcf	(___fldiv@grs+1)^0,f,c
 10756  002568  3641               	rlcf	(___fldiv@grs+2)^0,f,c
 10757  00256A  3642               	rlcf	(___fldiv@grs+3)^0,f,c
 10758  00256C                     l4108:
 10759  00256C  5030               	movf	___fldiv@a^0,w,c
 10760  00256E  5C38               	subwf	___fldiv@rem^0,w,c
 10761  002570  5031               	movf	(___fldiv@a+1)^0,w,c
 10762  002572  5839               	subwfb	(___fldiv@rem+1)^0,w,c
 10763  002574  5032               	movf	(___fldiv@a+2)^0,w,c
 10764  002576  583A               	subwfb	(___fldiv@rem+2)^0,w,c
 10765  002578  5033               	movf	(___fldiv@a+3)^0,w,c
 10766  00257A  583B               	subwfb	(___fldiv@rem+3)^0,w,c
 10767  00257C  A0D8               	btfss	status,0,c
 10768  00257E  EFC3  F012         	goto	u3701
 10769  002582  EFC5  F012         	goto	u3700
 10770  002586                     u3701:
 10771  002586  EFCE  F012         	goto	l4114
 10772  00258A                     u3700:
 10773  00258A  8C42               	bsf	(___fldiv@grs+3)^0,6,c
 10774  00258C  5030               	movf	___fldiv@a^0,w,c
 10775  00258E  5E38               	subwf	___fldiv@rem^0,f,c
 10776  002590  5031               	movf	(___fldiv@a+1)^0,w,c
 10777  002592  5A39               	subwfb	(___fldiv@rem+1)^0,f,c
 10778  002594  5032               	movf	(___fldiv@a+2)^0,w,c
 10779  002596  5A3A               	subwfb	(___fldiv@rem+2)^0,f,c
 10780  002598  5033               	movf	(___fldiv@a+3)^0,w,c
 10781  00259A  5A3B               	subwfb	(___fldiv@rem+3)^0,f,c
 10782  00259C                     l4114:
 10783  00259C  2A44               	incf	___fldiv@aexp^0,f,c
 10784  00259E                     l1180:
 10785  00259E  0E19               	movlw	25
 10786  0025A0  6444               	cpfsgt	___fldiv@aexp^0,c
 10787  0025A2  EFD5  F012         	goto	u3711
 10788  0025A6  EFD7  F012         	goto	u3710
 10789  0025AA                     u3711:
 10790  0025AA  EF97  F012         	goto	l4100
 10791  0025AE                     u3710:
 10792  0025AE  5038               	movf	___fldiv@rem^0,w,c
 10793  0025B0  1039               	iorwf	(___fldiv@rem+1)^0,w,c
 10794  0025B2  103A               	iorwf	(___fldiv@rem+2)^0,w,c
 10795  0025B4  103B               	iorwf	(___fldiv@rem+3)^0,w,c
 10796  0025B6  B4D8               	btfsc	status,2,c
 10797  0025B8  EFE0  F012         	goto	u3721
 10798  0025BC  EFE2  F012         	goto	u3720
 10799  0025C0                     u3721:
 10800  0025C0  EFFA  F012         	goto	l4126
 10801  0025C4                     u3720:
 10802  0025C4  803F               	bsf	___fldiv@grs^0,0,c
 10803  0025C6  EFFA  F012         	goto	l4126
 10804  0025CA                     l4120:
 10805  0025CA  90D8               	bcf	status,0,c
 10806  0025CC  362C               	rlcf	___fldiv@b^0,f,c
 10807  0025CE  362D               	rlcf	(___fldiv@b+1)^0,f,c
 10808  0025D0  362E               	rlcf	(___fldiv@b+2)^0,f,c
 10809  0025D2  362F               	rlcf	(___fldiv@b+3)^0,f,c
 10810  0025D4  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 10811  0025D6  EFEF  F012         	goto	u3731
 10812  0025DA  EFF1  F012         	goto	u3730
 10813  0025DE                     u3731:
 10814  0025DE  EFF2  F012         	goto	l1189
 10815  0025E2                     u3730:
 10816  0025E2  802C               	bsf	___fldiv@b^0,0,c
 10817  0025E4                     l1189:
 10818  0025E4  90D8               	bcf	status,0,c
 10819  0025E6  363F               	rlcf	___fldiv@grs^0,f,c
 10820  0025E8  3640               	rlcf	(___fldiv@grs+1)^0,f,c
 10821  0025EA  3641               	rlcf	(___fldiv@grs+2)^0,f,c
 10822  0025EC  3642               	rlcf	(___fldiv@grs+3)^0,f,c
 10823  0025EE  063D               	decf	___fldiv@new_exp^0,f,c
 10824  0025F0  A0D8               	btfss	status,0,c
 10825  0025F2  063E               	decf	(___fldiv@new_exp+1)^0,f,c
 10826  0025F4                     l4126:
 10827  0025F4  AE2E               	btfss	(___fldiv@b+2)^0,7,c
 10828  0025F6  EFFF  F012         	goto	u3741
 10829  0025FA  EF01  F013         	goto	u3740
 10830  0025FE                     u3741:
 10831  0025FE  EFE5  F012         	goto	l4120
 10832  002602                     u3740:
 10833  002602  0E00               	movlw	0
 10834  002604  6E44               	movwf	___fldiv@aexp^0,c
 10835  002606  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 10836  002608  EF08  F013         	goto	u3751
 10837  00260C  EF0A  F013         	goto	u3750
 10838  002610                     u3751:
 10839  002610  EF2E  F013         	goto	l1191
 10840  002614                     u3750:
 10841  002614  0EFF               	movlw	255
 10842  002616  143F               	andwf	___fldiv@grs^0,w,c
 10843  002618  6E34               	movwf	??___fldiv^0,c
 10844  00261A  0EFF               	movlw	255
 10845  00261C  1440               	andwf	(___fldiv@grs+1)^0,w,c
 10846  00261E  6E35               	movwf	(??___fldiv+1)^0,c
 10847  002620  0EFF               	movlw	255
 10848  002622  1441               	andwf	(___fldiv@grs+2)^0,w,c
 10849  002624  6E36               	movwf	(??___fldiv+2)^0,c
 10850  002626  0E7F               	movlw	127
 10851  002628  1442               	andwf	(___fldiv@grs+3)^0,w,c
 10852  00262A  6E37               	movwf	(??___fldiv+3)^0,c
 10853  00262C  5034               	movf	??___fldiv^0,w,c
 10854  00262E  1035               	iorwf	(??___fldiv+1)^0,w,c
 10855  002630  1036               	iorwf	(??___fldiv+2)^0,w,c
 10856  002632  1037               	iorwf	(??___fldiv+3)^0,w,c
 10857  002634  B4D8               	btfsc	status,2,c
 10858  002636  EF1F  F013         	goto	u3761
 10859  00263A  EF21  F013         	goto	u3760
 10860  00263E                     u3761:
 10861  00263E  EF25  F013         	goto	l1192
 10862  002642                     u3760:
 10863  002642                     l4134:
 10864  002642  0E01               	movlw	1
 10865  002644  6E44               	movwf	___fldiv@aexp^0,c
 10866  002646  EF2E  F013         	goto	l1191
 10867  00264A                     l1192:
 10868  00264A  A02C               	btfss	___fldiv@b^0,0,c
 10869  00264C  EF2A  F013         	goto	u3771
 10870  002650  EF2C  F013         	goto	u3770
 10871  002654                     u3771:
 10872  002654  EF2E  F013         	goto	l1191
 10873  002658                     u3770:
 10874  002658  EF21  F013         	goto	l4134
 10875  00265C                     l1191:
 10876  00265C  5044               	movf	___fldiv@aexp^0,w,c
 10877  00265E  B4D8               	btfsc	status,2,c
 10878  002660  EF34  F013         	goto	u3781
 10879  002664  EF36  F013         	goto	u3780
 10880  002668                     u3781:
 10881  002668  EF5A  F013         	goto	l4146
 10882  00266C                     u3780:
 10883  00266C  0E01               	movlw	1
 10884  00266E  262C               	addwf	___fldiv@b^0,f,c
 10885  002670  0E00               	movlw	0
 10886  002672  222D               	addwfc	(___fldiv@b+1)^0,f,c
 10887  002674  222E               	addwfc	(___fldiv@b+2)^0,f,c
 10888  002676  222F               	addwfc	(___fldiv@b+3)^0,f,c
 10889  002678  A02F               	btfss	(___fldiv@b+3)^0,0,c
 10890  00267A  EF41  F013         	goto	u3791
 10891  00267E  EF43  F013         	goto	u3790
 10892  002682                     u3791:
 10893  002682  EF5A  F013         	goto	l4146
 10894  002686                     u3790:
 10895  002686  C02C  F034         	movff	___fldiv@b,??___fldiv
 10896  00268A  C02D  F035         	movff	___fldiv@b+1,??___fldiv+1
 10897  00268E  C02E  F036         	movff	___fldiv@b+2,??___fldiv+2
 10898  002692  C02F  F037         	movff	___fldiv@b+3,??___fldiv+3
 10899  002696  3437               	rlcf	(??___fldiv+3)^0,w,c
 10900  002698  3237               	rrcf	(??___fldiv+3)^0,f,c
 10901  00269A  3236               	rrcf	(??___fldiv+2)^0,f,c
 10902  00269C  3235               	rrcf	(??___fldiv+1)^0,f,c
 10903  00269E  3234               	rrcf	??___fldiv^0,f,c
 10904  0026A0  C034  F02C         	movff	??___fldiv,___fldiv@b
 10905  0026A4  C035  F02D         	movff	??___fldiv+1,___fldiv@b+1
 10906  0026A8  C036  F02E         	movff	??___fldiv+2,___fldiv@b+2
 10907  0026AC  C037  F02F         	movff	??___fldiv+3,___fldiv@b+3
 10908  0026B0  4A3D               	infsnz	___fldiv@new_exp^0,f,c
 10909  0026B2  2A3E               	incf	(___fldiv@new_exp+1)^0,f,c
 10910  0026B4                     l4146:
 10911  0026B4  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10912  0026B6  EF65  F013         	goto	u3801
 10913  0026BA  503E               	movf	(___fldiv@new_exp+1)^0,w,c
 10914  0026BC  E108               	bnz	u3800
 10915  0026BE  283D               	incf	___fldiv@new_exp^0,w,c
 10916  0026C0  A0D8               	btfss	status,0,c
 10917  0026C2  EF65  F013         	goto	u3801
 10918  0026C6  EF67  F013         	goto	u3800
 10919  0026CA                     u3801:
 10920  0026CA  EF72  F013         	goto	l4150
 10921  0026CE                     u3800:
 10922  0026CE  0E00               	movlw	0
 10923  0026D0  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 10924  0026D2  683D               	setf	___fldiv@new_exp^0,c
 10925  0026D4  0E00               	movlw	0
 10926  0026D6  6E2C               	movwf	___fldiv@b^0,c
 10927  0026D8  0E00               	movlw	0
 10928  0026DA  6E2D               	movwf	(___fldiv@b+1)^0,c
 10929  0026DC  0E00               	movlw	0
 10930  0026DE  6E2E               	movwf	(___fldiv@b+2)^0,c
 10931  0026E0  0E00               	movlw	0
 10932  0026E2  6E2F               	movwf	(___fldiv@b+3)^0,c
 10933  0026E4                     l4150:
 10934  0026E4  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10935  0026E6  EF7F  F013         	goto	u3810
 10936  0026EA  503E               	movf	(___fldiv@new_exp+1)^0,w,c
 10937  0026EC  E106               	bnz	u3811
 10938  0026EE  043D               	decf	___fldiv@new_exp^0,w,c
 10939  0026F0  B0D8               	btfsc	status,0,c
 10940  0026F2  EF7D  F013         	goto	u3811
 10941  0026F6  EF7F  F013         	goto	u3810
 10942  0026FA                     u3811:
 10943  0026FA  EF8D  F013         	goto	l4154
 10944  0026FE                     u3810:
 10945  0026FE  0E00               	movlw	0
 10946  002700  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 10947  002702  0E00               	movlw	0
 10948  002704  6E3D               	movwf	___fldiv@new_exp^0,c
 10949  002706  0E00               	movlw	0
 10950  002708  6E2C               	movwf	___fldiv@b^0,c
 10951  00270A  0E00               	movlw	0
 10952  00270C  6E2D               	movwf	(___fldiv@b+1)^0,c
 10953  00270E  0E00               	movlw	0
 10954  002710  6E2E               	movwf	(___fldiv@b+2)^0,c
 10955  002712  0E00               	movlw	0
 10956  002714  6E2F               	movwf	(___fldiv@b+3)^0,c
 10957  002716  0E00               	movlw	0
 10958  002718  6E3C               	movwf	___fldiv@sign^0,c
 10959  00271A                     l4154:
 10960  00271A  C03D  F043         	movff	___fldiv@new_exp,___fldiv@bexp
 10961  00271E  A043               	btfss	___fldiv@bexp^0,0,c
 10962  002720  EF94  F013         	goto	u3821
 10963  002724  EF96  F013         	goto	u3820
 10964  002728                     u3821:
 10965  002728  EF99  F013         	goto	l4160
 10966  00272C                     u3820:
 10967  00272C  8E2E               	bsf	(___fldiv@b+2)^0,7,c
 10968  00272E  EF9A  F013         	goto	l4162
 10969  002732                     l4160:
 10970  002732  9E2E               	bcf	(___fldiv@b+2)^0,7,c
 10971  002734                     l4162:
 10972  002734  90D8               	bcf	status,0,c
 10973  002736  3043               	rrcf	___fldiv@bexp^0,w,c
 10974  002738  6E2F               	movwf	(___fldiv@b+3)^0,c
 10975  00273A  EF50  F012         	goto	l4076
 10976  00273E                     l1178:
 10977  00273E  0012               	return		;funcret
 10978  002740                     __end_of___fldiv:
 10979                           	callstack 0
 10980                           
 10981 ;; *************** function ___awmod *****************
 10982 ;; Defined at:
 10983 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 10984 ;; Parameters:    Size  Location     Type
 10985 ;;  dividend        2    0[COMRAM] int 
 10986 ;;  divisor         2    2[COMRAM] int 
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;  sign            1    5[COMRAM] unsigned char 
 10989 ;;  counter         1    4[COMRAM] unsigned char 
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  2    0[COMRAM] int 
 10992 ;; Registers used:
 10993 ;;		wreg, status,2, status,0
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10999 ;;      Params:         4       0       0       0       0       0       0       0       0
 11000 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11001 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11002 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11003 ;;Total ram usage:        6 bytes
 11004 ;; Hardware stack levels used: 1
 11005 ;; This function calls:
 11006 ;;		Nothing
 11007 ;; This function is called by:
 11008 ;;		_efgtoa
 11009 ;; This function uses a non-reentrant model
 11010 ;;
 11011                           
 11012                           	psect	text50
 11013  003EDA                     __ptext50:
 11014                           	callstack 0
 11015  003EDA                     ___awmod:
 11016                           	callstack 25
 11017  003EDA  0E00               	movlw	0
 11018  003EDC  6E06               	movwf	___awmod@sign^0,c
 11019  003EDE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11020  003EE0  EF76  F01F         	goto	u4080
 11021  003EE4  EF74  F01F         	goto	u4081
 11022  003EE8                     u4081:
 11023  003EE8  EF7C  F01F         	goto	l4358
 11024  003EEC                     u4080:
 11025  003EEC  6C01               	negf	___awmod@dividend^0,c
 11026  003EEE  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11027  003EF0  B0D8               	btfsc	status,0,c
 11028  003EF2  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11029  003EF4  0E01               	movlw	1
 11030  003EF6  6E06               	movwf	___awmod@sign^0,c
 11031  003EF8                     l4358:
 11032  003EF8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11033  003EFA  EF83  F01F         	goto	u4090
 11034  003EFE  EF81  F01F         	goto	u4091
 11035  003F02                     u4091:
 11036  003F02  EF87  F01F         	goto	l4362
 11037  003F06                     u4090:
 11038  003F06  6C03               	negf	___awmod@divisor^0,c
 11039  003F08  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11040  003F0A  B0D8               	btfsc	status,0,c
 11041  003F0C  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11042  003F0E                     l4362:
 11043  003F0E  5003               	movf	___awmod@divisor^0,w,c
 11044  003F10  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11045  003F12  B4D8               	btfsc	status,2,c
 11046  003F14  EF8E  F01F         	goto	u4101
 11047  003F18  EF90  F01F         	goto	u4100
 11048  003F1C                     u4101:
 11049  003F1C  EFB4  F01F         	goto	l4378
 11050  003F20                     u4100:
 11051  003F20  0E01               	movlw	1
 11052  003F22  6E05               	movwf	___awmod@counter^0,c
 11053  003F24  EF98  F01F         	goto	l4368
 11054  003F28                     l4366:
 11055  003F28  90D8               	bcf	status,0,c
 11056  003F2A  3603               	rlcf	___awmod@divisor^0,f,c
 11057  003F2C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11058  003F2E  2A05               	incf	___awmod@counter^0,f,c
 11059  003F30                     l4368:
 11060  003F30  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11061  003F32  EF9D  F01F         	goto	u4111
 11062  003F36  EF9F  F01F         	goto	u4110
 11063  003F3A                     u4111:
 11064  003F3A  EF94  F01F         	goto	l4366
 11065  003F3E                     u4110:
 11066  003F3E                     l4370:
 11067  003F3E  5003               	movf	___awmod@divisor^0,w,c
 11068  003F40  5C01               	subwf	___awmod@dividend^0,w,c
 11069  003F42  5004               	movf	(___awmod@divisor+1)^0,w,c
 11070  003F44  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11071  003F46  A0D8               	btfss	status,0,c
 11072  003F48  EFA8  F01F         	goto	u4121
 11073  003F4C  EFAA  F01F         	goto	u4120
 11074  003F50                     u4121:
 11075  003F50  EFAE  F01F         	goto	l4374
 11076  003F54                     u4120:
 11077  003F54  5003               	movf	___awmod@divisor^0,w,c
 11078  003F56  5E01               	subwf	___awmod@dividend^0,f,c
 11079  003F58  5004               	movf	(___awmod@divisor+1)^0,w,c
 11080  003F5A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11081  003F5C                     l4374:
 11082  003F5C  90D8               	bcf	status,0,c
 11083  003F5E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11084  003F60  3203               	rrcf	___awmod@divisor^0,f,c
 11085  003F62  2E05               	decfsz	___awmod@counter^0,f,c
 11086  003F64  EF9F  F01F         	goto	l4370
 11087  003F68                     l4378:
 11088  003F68  5006               	movf	___awmod@sign^0,w,c
 11089  003F6A  B4D8               	btfsc	status,2,c
 11090  003F6C  EFBA  F01F         	goto	u4131
 11091  003F70  EFBC  F01F         	goto	u4130
 11092  003F74                     u4131:
 11093  003F74  EFC0  F01F         	goto	l4382
 11094  003F78                     u4130:
 11095  003F78  6C01               	negf	___awmod@dividend^0,c
 11096  003F7A  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11097  003F7C  B0D8               	btfsc	status,0,c
 11098  003F7E  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11099  003F80                     l4382:
 11100  003F80  C001  F001         	movff	___awmod@dividend,?___awmod
 11101  003F84  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11102  003F88  0012               	return		;funcret
 11103  003F8A                     __end_of___awmod:
 11104                           	callstack 0
 11105                           
 11106 ;; *************** function ___awdiv *****************
 11107 ;; Defined at:
 11108 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 11109 ;; Parameters:    Size  Location     Type
 11110 ;;  dividend        2    0[COMRAM] int 
 11111 ;;  divisor         2    2[COMRAM] int 
 11112 ;; Auto vars:     Size  Location     Type
 11113 ;;  quotient        2    6[COMRAM] int 
 11114 ;;  sign            1    5[COMRAM] unsigned char 
 11115 ;;  counter         1    4[COMRAM] unsigned char 
 11116 ;; Return value:  Size  Location     Type
 11117 ;;                  2    0[COMRAM] int 
 11118 ;; Registers used:
 11119 ;;		wreg, status,2, status,0
 11120 ;; Tracked objects:
 11121 ;;		On entry : 0/0
 11122 ;;		On exit  : 0/0
 11123 ;;		Unchanged: 0/0
 11124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11125 ;;      Params:         4       0       0       0       0       0       0       0       0
 11126 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11127 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11128 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11129 ;;Total ram usage:        8 bytes
 11130 ;; Hardware stack levels used: 1
 11131 ;; This function calls:
 11132 ;;		Nothing
 11133 ;; This function is called by:
 11134 ;;		_efgtoa
 11135 ;; This function uses a non-reentrant model
 11136 ;;
 11137                           
 11138                           	psect	text51
 11139  003CA2                     __ptext51:
 11140                           	callstack 0
 11141  003CA2                     ___awdiv:
 11142                           	callstack 25
 11143  003CA2  0E00               	movlw	0
 11144  003CA4  6E06               	movwf	___awdiv@sign^0,c
 11145  003CA6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11146  003CA8  EF5A  F01E         	goto	u4020
 11147  003CAC  EF58  F01E         	goto	u4021
 11148  003CB0                     u4021:
 11149  003CB0  EF60  F01E         	goto	l4314
 11150  003CB4                     u4020:
 11151  003CB4  6C03               	negf	___awdiv@divisor^0,c
 11152  003CB6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11153  003CB8  B0D8               	btfsc	status,0,c
 11154  003CBA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11155  003CBC  0E01               	movlw	1
 11156  003CBE  6E06               	movwf	___awdiv@sign^0,c
 11157  003CC0                     l4314:
 11158  003CC0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11159  003CC2  EF67  F01E         	goto	u4030
 11160  003CC6  EF65  F01E         	goto	u4031
 11161  003CCA                     u4031:
 11162  003CCA  EF6D  F01E         	goto	l4320
 11163  003CCE                     u4030:
 11164  003CCE  6C01               	negf	___awdiv@dividend^0,c
 11165  003CD0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11166  003CD2  B0D8               	btfsc	status,0,c
 11167  003CD4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11168  003CD6  0E01               	movlw	1
 11169  003CD8  1A06               	xorwf	___awdiv@sign^0,f,c
 11170  003CDA                     l4320:
 11171  003CDA  0E00               	movlw	0
 11172  003CDC  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11173  003CDE  0E00               	movlw	0
 11174  003CE0  6E07               	movwf	___awdiv@quotient^0,c
 11175  003CE2  5003               	movf	___awdiv@divisor^0,w,c
 11176  003CE4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11177  003CE6  B4D8               	btfsc	status,2,c
 11178  003CE8  EF78  F01E         	goto	u4041
 11179  003CEC  EF7A  F01E         	goto	u4040
 11180  003CF0                     u4041:
 11181  003CF0  EFA2  F01E         	goto	l4342
 11182  003CF4                     u4040:
 11183  003CF4  0E01               	movlw	1
 11184  003CF6  6E05               	movwf	___awdiv@counter^0,c
 11185  003CF8  EF82  F01E         	goto	l4328
 11186  003CFC                     l4326:
 11187  003CFC  90D8               	bcf	status,0,c
 11188  003CFE  3603               	rlcf	___awdiv@divisor^0,f,c
 11189  003D00  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11190  003D02  2A05               	incf	___awdiv@counter^0,f,c
 11191  003D04                     l4328:
 11192  003D04  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11193  003D06  EF87  F01E         	goto	u4051
 11194  003D0A  EF89  F01E         	goto	u4050
 11195  003D0E                     u4051:
 11196  003D0E  EF7E  F01E         	goto	l4326
 11197  003D12                     u4050:
 11198  003D12                     l4330:
 11199  003D12  90D8               	bcf	status,0,c
 11200  003D14  3607               	rlcf	___awdiv@quotient^0,f,c
 11201  003D16  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11202  003D18  5003               	movf	___awdiv@divisor^0,w,c
 11203  003D1A  5C01               	subwf	___awdiv@dividend^0,w,c
 11204  003D1C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11205  003D1E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11206  003D20  A0D8               	btfss	status,0,c
 11207  003D22  EF95  F01E         	goto	u4061
 11208  003D26  EF97  F01E         	goto	u4060
 11209  003D2A                     u4061:
 11210  003D2A  EF9C  F01E         	goto	l4338
 11211  003D2E                     u4060:
 11212  003D2E  5003               	movf	___awdiv@divisor^0,w,c
 11213  003D30  5E01               	subwf	___awdiv@dividend^0,f,c
 11214  003D32  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11215  003D34  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11216  003D36  8007               	bsf	___awdiv@quotient^0,0,c
 11217  003D38                     l4338:
 11218  003D38  90D8               	bcf	status,0,c
 11219  003D3A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11220  003D3C  3203               	rrcf	___awdiv@divisor^0,f,c
 11221  003D3E  2E05               	decfsz	___awdiv@counter^0,f,c
 11222  003D40  EF89  F01E         	goto	l4330
 11223  003D44                     l4342:
 11224  003D44  5006               	movf	___awdiv@sign^0,w,c
 11225  003D46  B4D8               	btfsc	status,2,c
 11226  003D48  EFA8  F01E         	goto	u4071
 11227  003D4C  EFAA  F01E         	goto	u4070
 11228  003D50                     u4071:
 11229  003D50  EFAE  F01E         	goto	l4346
 11230  003D54                     u4070:
 11231  003D54  6C07               	negf	___awdiv@quotient^0,c
 11232  003D56  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11233  003D58  B0D8               	btfsc	status,0,c
 11234  003D5A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11235  003D5C                     l4346:
 11236  003D5C  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11237  003D60  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11238  003D64  0012               	return		;funcret
 11239  003D66                     __end_of___awdiv:
 11240                           	callstack 0
 11241                           
 11242 ;; *************** function _atoi *****************
 11243 ;; Defined at:
 11244 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11247 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
 11248 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 11249 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;  n               2   20[COMRAM] int 
 11252 ;;  neg             2   13[COMRAM] int 
 11253 ;; Return value:  Size  Location     Type
 11254 ;;                  2    7[COMRAM] int 
 11255 ;; Registers used:
 11256 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11257 ;; Tracked objects:
 11258 ;;		On entry : 0/0
 11259 ;;		On exit  : 0/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11262 ;;      Params:         2       0       0       0       0       0       0       0       0
 11263 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11264 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11265 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11266 ;;Total ram usage:       15 bytes
 11267 ;; Hardware stack levels used: 1
 11268 ;; Hardware stack levels required when called: 1
 11269 ;; This function calls:
 11270 ;;		___wmul
 11271 ;;		_isdigit
 11272 ;;		_isspace
 11273 ;; This function is called by:
 11274 ;;		_vfpfcnvrt
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           	psect	text52
 11279  00334E                     __ptext52:
 11280                           	callstack 0
 11281  00334E                     _atoi:
 11282                           	callstack 25
 11283  00334E  0E00               	movlw	0
 11284  003350  6E16               	movwf	(atoi@n+1)^0,c
 11285  003352  0E00               	movlw	0
 11286  003354  6E15               	movwf	atoi@n^0,c
 11287  003356  0E00               	movlw	0
 11288  003358  6E0F               	movwf	(atoi@neg+1)^0,c
 11289  00335A  0E00               	movlw	0
 11290  00335C  6E0E               	movwf	atoi@neg^0,c
 11291  00335E  EFB3  F019         	goto	l4988
 11292  003362                     l4986:
 11293  003362  4A08               	infsnz	atoi@s^0,f,c
 11294  003364  2A09               	incf	(atoi@s+1)^0,f,c
 11295  003366                     l4988:
 11296  003366  0E01               	movlw	1
 11297  003368  6E14               	movwf	_atoi$1578^0,c
 11298  00336A  C008  FFF6         	movff	atoi@s,tblptrl
 11299  00336E  C009  FFF7         	movff	atoi@s+1,tblptrh
 11300  003372                     	if	0	;tblptru may be non-zero
 11301  003372                     	endif
 11302  003372                     	if	0	;tblptru may be non-zero
 11303  003372                     	endif
 11304  003372  0008               	tblrd		*
 11305  003374  50F5               	movf	tablat,w,c
 11306  003376  0A20               	xorlw	32
 11307  003378  B4D8               	btfsc	status,2,c
 11308  00337A  EFC1  F019         	goto	u5391
 11309  00337E  EFC3  F019         	goto	u5390
 11310  003382                     u5391:
 11311  003382  EFE0  F019         	goto	l4996
 11312  003386                     u5390:
 11313  003386  0EF7               	movlw	247
 11314  003388  6E0A               	movwf	??_atoi^0,c
 11315  00338A  0EFF               	movlw	255
 11316  00338C  6E0B               	movwf	(??_atoi+1)^0,c
 11317  00338E  C008  FFF6         	movff	atoi@s,tblptrl
 11318  003392  C009  FFF7         	movff	atoi@s+1,tblptrh
 11319  003396                     	if	0	;tblptru may be non-zero
 11320  003396                     	endif
 11321  003396                     	if	0	;tblptru may be non-zero
 11322  003396                     	endif
 11323  003396  0008               	tblrd		*
 11324  003398  50F5               	movf	tablat,w,c
 11325  00339A  6E0C               	movwf	(??_atoi+2)^0,c
 11326  00339C  6A0D               	clrf	(??_atoi+3)^0,c
 11327  00339E  500A               	movf	??_atoi^0,w,c
 11328  0033A0  260C               	addwf	(??_atoi+2)^0,f,c
 11329  0033A2  500B               	movf	(??_atoi+1)^0,w,c
 11330  0033A4  220D               	addwfc	(??_atoi+3)^0,f,c
 11331  0033A6  500D               	movf	(??_atoi+3)^0,w,c
 11332  0033A8  E109               	bnz	u5400
 11333  0033AA  0E05               	movlw	5
 11334  0033AC  5C0C               	subwf	(??_atoi+2)^0,w,c
 11335  0033AE  A0D8               	btfss	status,0,c
 11336  0033B0  EFDC  F019         	goto	u5401
 11337  0033B4  EFDE  F019         	goto	u5400
 11338  0033B8                     u5401:
 11339  0033B8  EFE0  F019         	goto	l4996
 11340  0033BC                     u5400:
 11341  0033BC  0E00               	movlw	0
 11342  0033BE  6E14               	movwf	_atoi$1578^0,c
 11343  0033C0                     l4996:
 11344  0033C0  C014  F010         	movff	_atoi$1578,_atoi$1577
 11345  0033C4  6A11               	clrf	(_atoi$1577+1)^0,c
 11346  0033C6  5010               	movf	_atoi$1577^0,w,c
 11347  0033C8  1011               	iorwf	(_atoi$1577+1)^0,w,c
 11348  0033CA  A4D8               	btfss	status,2,c
 11349  0033CC  EFEA  F019         	goto	u5411
 11350  0033D0  EFEC  F019         	goto	u5410
 11351  0033D4                     u5411:
 11352  0033D4  EFB1  F019         	goto	l4986
 11353  0033D8                     u5410:
 11354  0033D8  EFF6  F019         	goto	l5006
 11355  0033DC                     l5002:
 11356  0033DC  0E00               	movlw	0
 11357  0033DE  6E0F               	movwf	(atoi@neg+1)^0,c
 11358  0033E0  0E01               	movlw	1
 11359  0033E2  6E0E               	movwf	atoi@neg^0,c
 11360  0033E4                     l5004:
 11361  0033E4  4A08               	infsnz	atoi@s^0,f,c
 11362  0033E6  2A09               	incf	(atoi@s+1)^0,f,c
 11363  0033E8  EF2B  F01A         	goto	l5012
 11364  0033EC                     l5006:
 11365  0033EC  C008  FFF6         	movff	atoi@s,tblptrl
 11366  0033F0  C009  FFF7         	movff	atoi@s+1,tblptrh
 11367  0033F4                     	if	0	;tblptru may be non-zero
 11368  0033F4                     	endif
 11369  0033F4                     	if	0	;tblptru may be non-zero
 11370  0033F4                     	endif
 11371  0033F4  0008               	tblrd		*
 11372  0033F6  50F5               	movf	tablat,w,c
 11373  0033F8  6E0A               	movwf	??_atoi^0,c
 11374  0033FA  6A0B               	clrf	(??_atoi+1)^0,c
 11375                           
 11376                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11377                           ; Switch size 1, requested type "simple"
 11378                           ; Number of cases is 1, Range of values is 0 to 0
 11379                           ; switch strategies available:
 11380                           ; Name         Instructions Cycles
 11381                           ; simple_byte            4     3 (average)
 11382                           ;	Chosen strategy is simple_byte
 11383  0033FC  500B               	movf	(??_atoi+1)^0,w,c
 11384  0033FE  0A00               	xorlw	0	; case 0
 11385  003400  B4D8               	btfsc	status,2,c
 11386  003402  EF05  F01A         	goto	l5880
 11387  003406  EF2B  F01A         	goto	l5012
 11388  00340A                     l5880:
 11389                           
 11390                           ; Switch size 1, requested type "simple"
 11391                           ; Number of cases is 2, Range of values is 43 to 45
 11392                           ; switch strategies available:
 11393                           ; Name         Instructions Cycles
 11394                           ; simple_byte            7     4 (average)
 11395                           ;	Chosen strategy is simple_byte
 11396  00340A  500A               	movf	??_atoi^0,w,c
 11397  00340C  0A2B               	xorlw	43	; case 43
 11398  00340E  B4D8               	btfsc	status,2,c
 11399  003410  EFF2  F019         	goto	l5004
 11400  003414  0A06               	xorlw	6	; case 45
 11401  003416  B4D8               	btfsc	status,2,c
 11402  003418  EFEE  F019         	goto	l5002
 11403  00341C  EF2B  F01A         	goto	l5012
 11404  003420                     l5008:
 11405  003420  C015  F001         	movff	atoi@n,___wmul@multiplier
 11406  003424  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11407  003428  0E00               	movlw	0
 11408  00342A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11409  00342C  0E0A               	movlw	10
 11410  00342E  6E03               	movwf	___wmul@multiplicand^0,c
 11411  003430  EC2C  F025         	call	___wmul	;wreg free
 11412  003434  C008  FFF6         	movff	atoi@s,tblptrl
 11413  003438  C009  FFF7         	movff	atoi@s+1,tblptrh
 11414  00343C                     	if	0	;tblptru may be non-zero
 11415  00343C                     	endif
 11416  00343C                     	if	0	;tblptru may be non-zero
 11417  00343C                     	endif
 11418  00343C  0008               	tblrd		*
 11419  00343E  50F5               	movf	tablat,w,c
 11420  003440  5E01               	subwf	?___wmul^0,f,c
 11421  003442  0E00               	movlw	0
 11422  003444  5A02               	subwfb	(?___wmul+1)^0,f,c
 11423  003446  0E30               	movlw	48
 11424  003448  2401               	addwf	?___wmul^0,w,c
 11425  00344A  6E15               	movwf	atoi@n^0,c
 11426  00344C  0E00               	movlw	0
 11427  00344E  2002               	addwfc	(?___wmul+1)^0,w,c
 11428  003450  6E16               	movwf	(atoi@n+1)^0,c
 11429  003452  EFF2  F019         	goto	l5004
 11430  003456                     l5012:
 11431  003456  0ED0               	movlw	208
 11432  003458  6E0A               	movwf	??_atoi^0,c
 11433  00345A  0EFF               	movlw	255
 11434  00345C  6E0B               	movwf	(??_atoi+1)^0,c
 11435  00345E  C008  FFF6         	movff	atoi@s,tblptrl
 11436  003462  C009  FFF7         	movff	atoi@s+1,tblptrh
 11437  003466                     	if	0	;tblptru may be non-zero
 11438  003466                     	endif
 11439  003466                     	if	0	;tblptru may be non-zero
 11440  003466                     	endif
 11441  003466  0008               	tblrd		*
 11442  003468  50F5               	movf	tablat,w,c
 11443  00346A  6E0C               	movwf	(??_atoi+2)^0,c
 11444  00346C  6A0D               	clrf	(??_atoi+3)^0,c
 11445  00346E  500A               	movf	??_atoi^0,w,c
 11446  003470  260C               	addwf	(??_atoi+2)^0,f,c
 11447  003472  500B               	movf	(??_atoi+1)^0,w,c
 11448  003474  220D               	addwfc	(??_atoi+3)^0,f,c
 11449  003476  500D               	movf	(??_atoi+3)^0,w,c
 11450  003478  E10A               	bnz	u5420
 11451  00347A  0E0A               	movlw	10
 11452  00347C  5C0C               	subwf	(??_atoi+2)^0,w,c
 11453  00347E  A0D8               	btfss	status,0,c
 11454  003480  EF44  F01A         	goto	u5421
 11455  003484  EF47  F01A         	goto	u5420
 11456  003488                     u5421:
 11457  003488  0E01               	movlw	1
 11458  00348A  EF48  F01A         	goto	u5430
 11459  00348E                     u5420:
 11460  00348E  0E00               	movlw	0
 11461  003490                     u5430:
 11462  003490  6E12               	movwf	_atoi$1579^0,c
 11463  003492  6A13               	clrf	(_atoi$1579+1)^0,c
 11464  003494  5012               	movf	_atoi$1579^0,w,c
 11465  003496  1013               	iorwf	(_atoi$1579+1)^0,w,c
 11466  003498  A4D8               	btfss	status,2,c
 11467  00349A  EF51  F01A         	goto	u5441
 11468  00349E  EF53  F01A         	goto	u5440
 11469  0034A2                     u5441:
 11470  0034A2  EF10  F01A         	goto	l5008
 11471  0034A6                     u5440:
 11472  0034A6  500E               	movf	atoi@neg^0,w,c
 11473  0034A8  100F               	iorwf	(atoi@neg+1)^0,w,c
 11474  0034AA  A4D8               	btfss	status,2,c
 11475  0034AC  EF5A  F01A         	goto	u5451
 11476  0034B0  EF5C  F01A         	goto	u5450
 11477  0034B4                     u5451:
 11478  0034B4  EF6A  F01A         	goto	l1532
 11479  0034B8                     u5450:
 11480  0034B8  C015  F00A         	movff	atoi@n,??_atoi
 11481  0034BC  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11482  0034C0  1E0A               	comf	??_atoi^0,f,c
 11483  0034C2  1E0B               	comf	(??_atoi+1)^0,f,c
 11484  0034C4  4A0A               	infsnz	??_atoi^0,f,c
 11485  0034C6  2A0B               	incf	(??_atoi+1)^0,f,c
 11486  0034C8  C00A  F008         	movff	??_atoi,?_atoi
 11487  0034CC  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11488  0034D0  EF6E  F01A         	goto	l1535
 11489  0034D4                     l1532:
 11490  0034D4  C015  F008         	movff	atoi@n,?_atoi
 11491  0034D8  C016  F009         	movff	atoi@n+1,?_atoi+1
 11492  0034DC                     l1535:
 11493  0034DC  0012               	return		;funcret
 11494  0034DE                     __end_of_atoi:
 11495                           	callstack 0
 11496                           
 11497 ;; *************** function _isspace *****************
 11498 ;; Defined at:
 11499 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 11500 ;; Parameters:    Size  Location     Type
 11501 ;;  c               2    0[COMRAM] int 
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;		None
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  2    0[COMRAM] int 
 11506 ;; Registers used:
 11507 ;;		wreg, status,2, status,0
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11513 ;;      Params:         2       0       0       0       0       0       0       0       0
 11514 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11515 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11516 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11517 ;;Total ram usage:        7 bytes
 11518 ;; Hardware stack levels used: 1
 11519 ;; This function calls:
 11520 ;;		Nothing
 11521 ;; This function is called by:
 11522 ;;		_atoi
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           	psect	text53
 11527  0044C4                     __ptext53:
 11528                           	callstack 0
 11529  0044C4                     _isspace:
 11530                           	callstack 25
 11531  0044C4  0E01               	movlw	1
 11532  0044C6  6E07               	movwf	_isspace$1617^0,c
 11533  0044C8  0E20               	movlw	32
 11534  0044CA  1801               	xorwf	isspace@c^0,w,c
 11535  0044CC  1002               	iorwf	(isspace@c+1)^0,w,c
 11536  0044CE  B4D8               	btfsc	status,2,c
 11537  0044D0  EF6C  F022         	goto	u4631
 11538  0044D4  EF6E  F022         	goto	u4630
 11539  0044D8                     u4631:
 11540  0044D8  EF87  F022         	goto	l4588
 11541  0044DC                     u4630:
 11542  0044DC  0EF7               	movlw	247
 11543  0044DE  6E03               	movwf	??_isspace^0,c
 11544  0044E0  0EFF               	movlw	255
 11545  0044E2  6E04               	movwf	(??_isspace+1)^0,c
 11546  0044E4  C001  F005         	movff	isspace@c,??_isspace+2
 11547  0044E8  C002  F006         	movff	isspace@c+1,??_isspace+3
 11548  0044EC  5003               	movf	??_isspace^0,w,c
 11549  0044EE  2605               	addwf	(??_isspace+2)^0,f,c
 11550  0044F0  5004               	movf	(??_isspace+1)^0,w,c
 11551  0044F2  2206               	addwfc	(??_isspace+3)^0,f,c
 11552  0044F4  5006               	movf	(??_isspace+3)^0,w,c
 11553  0044F6  E109               	bnz	u4640
 11554  0044F8  0E05               	movlw	5
 11555  0044FA  5C05               	subwf	(??_isspace+2)^0,w,c
 11556  0044FC  A0D8               	btfss	status,0,c
 11557  0044FE  EF83  F022         	goto	u4641
 11558  004502  EF85  F022         	goto	u4640
 11559  004506                     u4641:
 11560  004506  EF87  F022         	goto	l4588
 11561  00450A                     u4640:
 11562  00450A  0E00               	movlw	0
 11563  00450C  6E07               	movwf	_isspace$1617^0,c
 11564  00450E                     l4588:
 11565  00450E  C007  F001         	movff	_isspace$1617,?_isspace
 11566  004512  6A02               	clrf	(?_isspace+1)^0,c
 11567  004514  0012               	return		;funcret
 11568  004516                     __end_of_isspace:
 11569                           	callstack 0
 11570                           
 11571 ;; *************** function _isdigit *****************
 11572 ;; Defined at:
 11573 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 11574 ;; Parameters:    Size  Location     Type
 11575 ;;  c               2    0[COMRAM] int 
 11576 ;; Auto vars:     Size  Location     Type
 11577 ;;		None
 11578 ;; Return value:  Size  Location     Type
 11579 ;;                  2    0[COMRAM] int 
 11580 ;; Registers used:
 11581 ;;		wreg, status,2, status,0
 11582 ;; Tracked objects:
 11583 ;;		On entry : 0/0
 11584 ;;		On exit  : 0/0
 11585 ;;		Unchanged: 0/0
 11586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11587 ;;      Params:         2       0       0       0       0       0       0       0       0
 11588 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11589 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11590 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11591 ;;Total ram usage:        6 bytes
 11592 ;; Hardware stack levels used: 1
 11593 ;; This function calls:
 11594 ;;		Nothing
 11595 ;; This function is called by:
 11596 ;;		_vfpfcnvrt
 11597 ;;		_atoi
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601                           	psect	text54
 11602  0048BE                     __ptext54:
 11603                           	callstack 0
 11604  0048BE                     _isdigit:
 11605                           	callstack 26
 11606  0048BE  0ED0               	movlw	208
 11607  0048C0  6E03               	movwf	??_isdigit^0,c
 11608  0048C2  0EFF               	movlw	255
 11609  0048C4  6E04               	movwf	(??_isdigit+1)^0,c
 11610  0048C6  C001  F005         	movff	isdigit@c,??_isdigit+2
 11611  0048CA  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11612  0048CE  5003               	movf	??_isdigit^0,w,c
 11613  0048D0  2605               	addwf	(??_isdigit+2)^0,f,c
 11614  0048D2  5004               	movf	(??_isdigit+1)^0,w,c
 11615  0048D4  2206               	addwfc	(??_isdigit+3)^0,f,c
 11616  0048D6  5006               	movf	(??_isdigit+3)^0,w,c
 11617  0048D8  E10A               	bnz	u4610
 11618  0048DA  0E0A               	movlw	10
 11619  0048DC  5C05               	subwf	(??_isdigit+2)^0,w,c
 11620  0048DE  A0D8               	btfss	status,0,c
 11621  0048E0  EF74  F024         	goto	u4611
 11622  0048E4  EF77  F024         	goto	u4610
 11623  0048E8                     u4611:
 11624  0048E8  0E01               	movlw	1
 11625  0048EA  EF78  F024         	goto	u4620
 11626  0048EE                     u4610:
 11627  0048EE  0E00               	movlw	0
 11628  0048F0                     u4620:
 11629  0048F0  6E01               	movwf	?_isdigit^0,c
 11630  0048F2  6A02               	clrf	(?_isdigit+1)^0,c
 11631  0048F4  0012               	return		;funcret
 11632  0048F6                     __end_of_isdigit:
 11633                           	callstack 0
 11634                           
 11635 ;; *************** function ___wmul *****************
 11636 ;; Defined at:
 11637 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 11638 ;; Parameters:    Size  Location     Type
 11639 ;;  multiplier      2    0[COMRAM] unsigned int 
 11640 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11641 ;; Auto vars:     Size  Location     Type
 11642 ;;  product         2    4[COMRAM] unsigned int 
 11643 ;; Return value:  Size  Location     Type
 11644 ;;                  2    0[COMRAM] unsigned int 
 11645 ;; Registers used:
 11646 ;;		wreg, status,2, status,0, prodl, prodh
 11647 ;; Tracked objects:
 11648 ;;		On entry : 0/0
 11649 ;;		On exit  : 0/0
 11650 ;;		Unchanged: 0/0
 11651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11652 ;;      Params:         4       0       0       0       0       0       0       0       0
 11653 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11654 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11655 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11656 ;;Total ram usage:        6 bytes
 11657 ;; Hardware stack levels used: 1
 11658 ;; This function calls:
 11659 ;;		Nothing
 11660 ;; This function is called by:
 11661 ;;		_atoi
 11662 ;; This function uses a non-reentrant model
 11663 ;;
 11664                           
 11665                           	psect	text55
 11666  004A58                     __ptext55:
 11667                           	callstack 0
 11668  004A58                     ___wmul:
 11669                           	callstack 25
 11670  004A58  5001               	movf	___wmul@multiplier^0,w,c
 11671  004A5A  0203               	mulwf	___wmul@multiplicand^0,c
 11672  004A5C  CFF3 F005          	movff	prodl,___wmul@product
 11673  004A60  CFF4 F006          	movff	prodh,___wmul@product+1
 11674  004A64  5001               	movf	___wmul@multiplier^0,w,c
 11675  004A66  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11676  004A68  50F3               	movf	243,w,c
 11677  004A6A  2606               	addwf	(___wmul@product+1)^0,f,c
 11678  004A6C  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11679  004A6E  0203               	mulwf	___wmul@multiplicand^0,c
 11680  004A70  50F3               	movf	243,w,c
 11681  004A72  2606               	addwf	(___wmul@product+1)^0,f,c
 11682  004A74  C005  F001         	movff	___wmul@product,?___wmul
 11683  004A78  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11684  004A7C  0012               	return		;funcret
 11685  004A7E                     __end_of___wmul:
 11686                           	callstack 0
 11687                           
 11688 ;; *************** function _LCD_String_xy *****************
 11689 ;; Defined at:
 11690 ;;		line 124 in file "LCD_caracter.c"
 11691 ;; Parameters:    Size  Location     Type
 11692 ;;  row             1    wreg     unsigned char 
 11693 ;;  pos             1   10[COMRAM] unsigned char 
 11694 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 11695 ;;		 -> Stemp(20), RTC_Calendario@date(10), RTC_Calendario@hours(10), STR_2(3), 
 11696 ;;		 -> STR_1(3), 
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;  row             1   13[COMRAM] unsigned char 
 11699 ;;  location        1   14[COMRAM] unsigned char 
 11700 ;; Return value:  Size  Location     Type
 11701 ;;                  1    wreg      void 
 11702 ;; Registers used:
 11703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11704 ;; Tracked objects:
 11705 ;;		On entry : 0/0
 11706 ;;		On exit  : 0/0
 11707 ;;		Unchanged: 0/0
 11708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11709 ;;      Params:         3       0       0       0       0       0       0       0       0
 11710 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11711 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11712 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11713 ;;Total ram usage:        5 bytes
 11714 ;; Hardware stack levels used: 1
 11715 ;; Hardware stack levels required when called: 3
 11716 ;; This function calls:
 11717 ;;		_LCD_Command
 11718 ;;		_LCD_String
 11719 ;; This function is called by:
 11720 ;;		_RTC_Calendario
 11721 ;;		_Sunny_State
 11722 ;;		_Cloudy_State
 11723 ;;		_Rainy_State
 11724 ;; This function uses a non-reentrant model
 11725 ;;
 11726                           
 11727                           	psect	text56
 11728  004760                     __ptext56:
 11729                           	callstack 0
 11730  004760                     _LCD_String_xy:
 11731                           	callstack 26
 11732                           
 11733                           ;incstack = 0
 11734                           ;LCD_String_xy@row stored from wreg
 11735  004760  6E0E               	movwf	LCD_String_xy@row^0,c
 11736  004762                     
 11737                           ;LCD_caracter.c: 127:     if(row<=1)
 11738  004762  0E02               	movlw	2
 11739  004764  600E               	cpfslt	LCD_String_xy@row^0,c
 11740  004766  EFB7  F023         	goto	u5981
 11741  00476A  EFB9  F023         	goto	u5980
 11742  00476E                     u5981:
 11743  00476E  EFC2  F023         	goto	l5418
 11744  004772                     u5980:
 11745  004772                     
 11746                           ;LCD_caracter.c: 128:     {;LCD_caracter.c: 129:         location=(0x80) | ((pos) & 0x0f
      +                          );
 11747  004772  500B               	movf	LCD_String_xy@pos^0,w,c
 11748  004774  0B0F               	andlw	15
 11749  004776  0980               	iorlw	128
 11750  004778  6E0F               	movwf	LCD_String_xy@location^0,c
 11751  00477A                     
 11752                           ;LCD_caracter.c: 130:         LCD_Command(location);
 11753  00477A  500F               	movf	LCD_String_xy@location^0,w,c
 11754  00477C  ECB3  F022         	call	_LCD_Command
 11755                           
 11756                           ;LCD_caracter.c: 131:     }
 11757  004780  EFC9  F023         	goto	l5422
 11758  004784                     l5418:
 11759                           
 11760                           ;LCD_caracter.c: 133:     {;LCD_caracter.c: 134:         location=(0xC0) | ((pos) & 0x0f
      +                          );
 11761  004784  500B               	movf	LCD_String_xy@pos^0,w,c
 11762  004786  0B0F               	andlw	15
 11763  004788  09C0               	iorlw	192
 11764  00478A  6E0F               	movwf	LCD_String_xy@location^0,c
 11765  00478C                     
 11766                           ;LCD_caracter.c: 135:         LCD_Command(location);
 11767  00478C  500F               	movf	LCD_String_xy@location^0,w,c
 11768  00478E  ECB3  F022         	call	_LCD_Command
 11769  004792                     l5422:
 11770                           
 11771                           ;LCD_caracter.c: 139:     LCD_String(msg);
 11772  004792  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 11773  004796  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 11774  00479A  EC28  F021         	call	_LCD_String	;wreg free
 11775  00479E  0012               	return		;funcret
 11776  0047A0                     __end_of_LCD_String_xy:
 11777                           	callstack 0
 11778                           
 11779 ;; *************** function _LCD_String *****************
 11780 ;; Defined at:
 11781 ;;		line 101 in file "LCD_caracter.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 11784 ;;		 -> Stemp(20), STR_18(4), STR_17(4), STR_16(4), 
 11785 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
 11786 ;;		 -> RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), 
 11787 ;;		 -> RTC_Calendario@mins(10), RTC_Calendario@secs(10), STR_2(3), STR_1(3), 
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;		None
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  1    wreg      void 
 11792 ;; Registers used:
 11793 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11799 ;;      Params:         2       0       0       0       0       0       0       0       0
 11800 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11802 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11803 ;;Total ram usage:        2 bytes
 11804 ;; Hardware stack levels used: 1
 11805 ;; Hardware stack levels required when called: 2
 11806 ;; This function calls:
 11807 ;;		_LCD_Char
 11808 ;; This function is called by:
 11809 ;;		_LCD_String_xy
 11810 ;;		_RTC_Calendario
 11811 ;; This function uses a non-reentrant model
 11812 ;;
 11813                           
 11814                           	psect	text57
 11815  004250                     __ptext57:
 11816                           	callstack 0
 11817  004250                     _LCD_String:
 11818                           	callstack 26
 11819  004250                     
 11820                           ;LCD_caracter.c: 101: void LCD_String(const char *msg);LCD_caracter.c: 102: {;LCD_caract
      +                          er.c: 103:  while((*msg)!=0)
 11821  004250  EF3E  F021         	goto	l5260
 11822  004254                     l5256:
 11823                           
 11824                           ;LCD_caracter.c: 104:  {;LCD_caracter.c: 105:    LCD_Char(*msg);
 11825  004254  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11826  004258  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11827  00425C  6AF8               	clrf	tblptru,c
 11828  00425E  0E07               	movlw	(high __ramtop+-1)
 11829  004260  64F7               	cpfsgt	tblptrh,c
 11830  004262  D003               	bra	u5737
 11831  004264  0008               	tblrd		*
 11832  004266  50F5               	movf	tablat,w,c
 11833  004268  D005               	bra	u5730
 11834  00426A                     u5737:
 11835  00426A  CFF6 FFE1          	movff	tblptrl,fsr1l
 11836  00426E  CFF7 FFE2          	movff	tblptrh,fsr1h
 11837  004272  50E7               	movf	indf1,w,c
 11838  004274                     u5730:
 11839  004274  ECD9  F022         	call	_LCD_Char
 11840  004278                     
 11841                           ;LCD_caracter.c: 106:    msg++;
 11842  004278  4A09               	infsnz	LCD_String@msg^0,f,c
 11843  00427A  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 11844  00427C                     l5260:
 11845                           
 11846                           ;LCD_caracter.c: 103:  while((*msg)!=0)
 11847  00427C  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11848  004280  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11849  004284  6AF8               	clrf	tblptru,c
 11850  004286  0E07               	movlw	(high __ramtop+-1)
 11851  004288  64F7               	cpfsgt	tblptrh,c
 11852  00428A  D003               	bra	u5747
 11853  00428C  0008               	tblrd		*
 11854  00428E  50F5               	movf	tablat,w,c
 11855  004290  D005               	bra	u5740
 11856  004292                     u5747:
 11857  004292  CFF6 FFE1          	movff	tblptrl,fsr1l
 11858  004296  CFF7 FFE2          	movff	tblptrh,fsr1h
 11859  00429A  50E7               	movf	indf1,w,c
 11860  00429C                     u5740:
 11861  00429C  0900               	iorlw	0
 11862  00429E  A4D8               	btfss	status,2,c
 11863  0042A0  EF54  F021         	goto	u5751
 11864  0042A4  EF56  F021         	goto	u5750
 11865  0042A8                     u5751:
 11866  0042A8  EF2A  F021         	goto	l5256
 11867  0042AC                     u5750:
 11868  0042AC  0012               	return		;funcret
 11869  0042AE                     __end_of_LCD_String:
 11870                           	callstack 0
 11871                           
 11872 ;; *************** function _LCD_Custom_Char *****************
 11873 ;; Defined at:
 11874 ;;		line 174 in file "LCD_caracter.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;  loc             1    wreg     unsigned char 
 11877 ;;  msg             2    8[COMRAM] PTR unsigned char 
 11878 ;;		 -> character1(8), character3(8), character2(8), 
 11879 ;; Auto vars:     Size  Location     Type
 11880 ;;  loc             1   10[COMRAM] unsigned char 
 11881 ;;  i               1   11[COMRAM] unsigned char 
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  1    wreg      void 
 11884 ;; Registers used:
 11885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11891 ;;      Params:         2       0       0       0       0       0       0       0       0
 11892 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11893 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11894 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11895 ;;Total ram usage:        4 bytes
 11896 ;; Hardware stack levels used: 1
 11897 ;; Hardware stack levels required when called: 2
 11898 ;; This function calls:
 11899 ;;		_LCD_Char
 11900 ;;		_LCD_Command
 11901 ;; This function is called by:
 11902 ;;		_Sunny_State
 11903 ;;		_Cloudy_State
 11904 ;;		_Rainy_State
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text58
 11909  004648                     __ptext58:
 11910                           	callstack 0
 11911  004648                     _LCD_Custom_Char:
 11912                           	callstack 27
 11913                           
 11914                           ;incstack = 0
 11915                           ;LCD_Custom_Char@loc stored from wreg
 11916  004648  6E0B               	movwf	LCD_Custom_Char@loc^0,c
 11917  00464A                     
 11918                           ;LCD_caracter.c: 174: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_
      +                          caracter.c: 175: {;LCD_caracter.c: 176:     unsigned char i;;LCD_caracter.c: 177:     if
      +                           (loc< 8 )
 11919  00464A  0E08               	movlw	8
 11920  00464C  600B               	cpfslt	LCD_Custom_Char@loc^0,c
 11921  00464E  EF2B  F023         	goto	u5991
 11922  004652  EF2D  F023         	goto	u5990
 11923  004656                     u5991:
 11924  004656  EF47  F023         	goto	l124
 11925  00465A                     u5990:
 11926  00465A                     
 11927                           ;LCD_caracter.c: 178:     {;LCD_caracter.c: 179:      LCD_Command ( 0x40 +(loc* 8 ));
 11928  00465A  500B               	movf	LCD_Custom_Char@loc^0,w,c
 11929  00465C  0D08               	mullw	8
 11930  00465E  50F3               	movf	243,w,c
 11931  004660  0F40               	addlw	64
 11932  004662  ECB3  F022         	call	_LCD_Command
 11933  004666                     
 11934                           ;LCD_caracter.c: 180:        for (i= 0 ;i< 8 ;i++)
 11935  004666  0E00               	movlw	0
 11936  004668  6E0C               	movwf	LCD_Custom_Char@i^0,c
 11937  00466A                     l5434:
 11938                           
 11939                           ;LCD_caracter.c: 181:            LCD_Char (msg[i]);
 11940  00466A  500C               	movf	LCD_Custom_Char@i^0,w,c
 11941  00466C  2409               	addwf	LCD_Custom_Char@msg^0,w,c
 11942  00466E  6ED9               	movwf	fsr2l,c
 11943  004670  0E00               	movlw	0
 11944  004672  200A               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
 11945  004674  6EDA               	movwf	fsr2h,c
 11946  004676  50DF               	movf	indf2,w,c
 11947  004678  ECD9  F022         	call	_LCD_Char
 11948  00467C  2A0C               	incf	LCD_Custom_Char@i^0,f,c
 11949  00467E  0E07               	movlw	7
 11950  004680  640C               	cpfsgt	LCD_Custom_Char@i^0,c
 11951  004682  EF45  F023         	goto	u6001
 11952  004686  EF47  F023         	goto	u6000
 11953  00468A                     u6001:
 11954  00468A  EF35  F023         	goto	l5434
 11955  00468E                     u6000:
 11956  00468E                     l124:
 11957  00468E  0012               	return		;funcret
 11958  004690                     __end_of_LCD_Custom_Char:
 11959                           	callstack 0
 11960                           
 11961 ;; *************** function _LCD_Command *****************
 11962 ;; Defined at:
 11963 ;;		line 48 in file "LCD_caracter.c"
 11964 ;; Parameters:    Size  Location     Type
 11965 ;;  cmd             1    wreg     unsigned char 
 11966 ;; Auto vars:     Size  Location     Type
 11967 ;;  cmd             1    7[COMRAM] unsigned char 
 11968 ;; Return value:  Size  Location     Type
 11969 ;;                  1    wreg      void 
 11970 ;; Registers used:
 11971 ;;		wreg, status,2, status,0, cstack
 11972 ;; Tracked objects:
 11973 ;;		On entry : 0/0
 11974 ;;		On exit  : 0/0
 11975 ;;		Unchanged: 0/0
 11976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11977 ;;      Params:         0       0       0       0       0       0       0       0       0
 11978 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11979 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11980 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11981 ;;Total ram usage:        2 bytes
 11982 ;; Hardware stack levels used: 1
 11983 ;; Hardware stack levels required when called: 1
 11984 ;; This function calls:
 11985 ;;		_LCD_MSdelay
 11986 ;; This function is called by:
 11987 ;;		_LCD_Init
 11988 ;;		_LCD_String_xy
 11989 ;;		_LCD_Clear
 11990 ;;		_LCD_Custom_Char
 11991 ;;		_Sunny_State
 11992 ;;		_Cloudy_State
 11993 ;;		_Rainy_State
 11994 ;; This function uses a non-reentrant model
 11995 ;;
 11996                           
 11997                           	psect	text59
 11998  004566                     __ptext59:
 11999                           	callstack 0
 12000  004566                     _LCD_Command:
 12001                           	callstack 27
 12002                           
 12003                           ;incstack = 0
 12004                           ;LCD_Command@cmd stored from wreg
 12005  004566  6E08               	movwf	LCD_Command@cmd^0,c
 12006  004568                     
 12007                           ;LCD_caracter.c: 48: void LCD_Command(unsigned char cmd );LCD_caracter.c: 49: {;LCD_cara
      +                          cter.c: 50:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 12008  004568  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 12009  00456C  0EF0               	movlw	240
 12010  00456E  1607               	andwf	??_LCD_Command^0,f,c
 12011  004570  508C               	movf	140,w,c	;volatile
 12012  004572  0B0F               	andlw	15
 12013  004574  1007               	iorwf	??_LCD_Command^0,w,c
 12014  004576  6E8C               	movwf	140,c	;volatile
 12015  004578                     
 12016                           ;LCD_caracter.c: 51:  LATD0 = 0;
 12017  004578  908C               	bcf	3980,0,c	;volatile
 12018  00457A                     
 12019                           ;LCD_caracter.c: 52:  LATD1 = 1;
 12020  00457A  828C               	bsf	3980,1,c	;volatile
 12021  00457C                     
 12022                           ;LCD_caracter.c: 53:  __nop();
 12023  00457C  F000               	nop	
 12024  00457E                     
 12025                           ;LCD_caracter.c: 54:  LATD1 = 0;
 12026  00457E  928C               	bcf	3980,1,c	;volatile
 12027  004580                     
 12028                           ;LCD_caracter.c: 55:  LCD_MSdelay(1);
 12029  004580  0E00               	movlw	0
 12030  004582  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12031  004584  0E01               	movlw	1
 12032  004586  6E01               	movwf	LCD_MSdelay@val^0,c
 12033  004588  ECFF  F022         	call	_LCD_MSdelay	;wreg free
 12034  00458C                     
 12035                           ;LCD_caracter.c: 56:     LATD = (LATD & 0x0f) | (cmd<<4);
 12036  00458C  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 12037  004590  3A07               	swapf	??_LCD_Command^0,f,c
 12038  004592  0EF0               	movlw	240
 12039  004594  1607               	andwf	??_LCD_Command^0,f,c
 12040  004596  508C               	movf	140,w,c	;volatile
 12041  004598  0B0F               	andlw	15
 12042  00459A  1007               	iorwf	??_LCD_Command^0,w,c
 12043  00459C  6E8C               	movwf	140,c	;volatile
 12044  00459E                     
 12045                           ;LCD_caracter.c: 57:  LATD1 = 1;
 12046  00459E  828C               	bsf	3980,1,c	;volatile
 12047  0045A0                     
 12048                           ;LCD_caracter.c: 58:  __nop();
 12049  0045A0  F000               	nop	
 12050  0045A2                     
 12051                           ;LCD_caracter.c: 59:  LATD1 = 0;
 12052  0045A2  928C               	bcf	3980,1,c	;volatile
 12053                           
 12054                           ;LCD_caracter.c: 60:  LCD_MSdelay(3);
 12055  0045A4  0E00               	movlw	0
 12056  0045A6  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12057  0045A8  0E03               	movlw	3
 12058  0045AA  6E01               	movwf	LCD_MSdelay@val^0,c
 12059  0045AC  ECFF  F022         	call	_LCD_MSdelay	;wreg free
 12060  0045B0  0012               	return		;funcret
 12061  0045B2                     __end_of_LCD_Command:
 12062                           	callstack 0
 12063                           
 12064 ;; *************** function _LCD_Char *****************
 12065 ;; Defined at:
 12066 ;;		line 75 in file "LCD_caracter.c"
 12067 ;; Parameters:    Size  Location     Type
 12068 ;;  dat             1    wreg     unsigned char 
 12069 ;; Auto vars:     Size  Location     Type
 12070 ;;  dat             1    7[COMRAM] unsigned char 
 12071 ;; Return value:  Size  Location     Type
 12072 ;;                  1    wreg      void 
 12073 ;; Registers used:
 12074 ;;		wreg, status,2, status,0, cstack
 12075 ;; Tracked objects:
 12076 ;;		On entry : 0/0
 12077 ;;		On exit  : 0/0
 12078 ;;		Unchanged: 0/0
 12079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12080 ;;      Params:         0       0       0       0       0       0       0       0       0
 12081 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12082 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12083 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12084 ;;Total ram usage:        2 bytes
 12085 ;; Hardware stack levels used: 1
 12086 ;; Hardware stack levels required when called: 1
 12087 ;; This function calls:
 12088 ;;		_LCD_MSdelay
 12089 ;; This function is called by:
 12090 ;;		_LCD_String
 12091 ;;		_LCD_Custom_Char
 12092 ;;		_Sunny_State
 12093 ;;		_Cloudy_State
 12094 ;;		_Rainy_State
 12095 ;; This function uses a non-reentrant model
 12096 ;;
 12097                           
 12098                           	psect	text60
 12099  0045B2                     __ptext60:
 12100                           	callstack 0
 12101  0045B2                     _LCD_Char:
 12102                           	callstack 26
 12103                           
 12104                           ;incstack = 0
 12105                           ;LCD_Char@dat stored from wreg
 12106  0045B2  6E08               	movwf	LCD_Char@dat^0,c
 12107  0045B4                     
 12108                           ;LCD_caracter.c: 75: void LCD_Char(unsigned char dat);LCD_caracter.c: 76: {;LCD_caracter
      +                          .c: 77:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 12109  0045B4  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12110  0045B8  0EF0               	movlw	240
 12111  0045BA  1607               	andwf	??_LCD_Char^0,f,c
 12112  0045BC  508C               	movf	140,w,c	;volatile
 12113  0045BE  0B0F               	andlw	15
 12114  0045C0  1007               	iorwf	??_LCD_Char^0,w,c
 12115  0045C2  6E8C               	movwf	140,c	;volatile
 12116  0045C4                     
 12117                           ;LCD_caracter.c: 78:  LATD0 = 1;
 12118  0045C4  808C               	bsf	3980,0,c	;volatile
 12119  0045C6                     
 12120                           ;LCD_caracter.c: 79:  LATD1 = 1;
 12121  0045C6  828C               	bsf	3980,1,c	;volatile
 12122  0045C8                     
 12123                           ;LCD_caracter.c: 80:  __nop();
 12124  0045C8  F000               	nop	
 12125  0045CA                     
 12126                           ;LCD_caracter.c: 81:  LATD1 = 0;
 12127  0045CA  928C               	bcf	3980,1,c	;volatile
 12128  0045CC                     
 12129                           ;LCD_caracter.c: 82:  LCD_MSdelay(1);
 12130  0045CC  0E00               	movlw	0
 12131  0045CE  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12132  0045D0  0E01               	movlw	1
 12133  0045D2  6E01               	movwf	LCD_MSdelay@val^0,c
 12134  0045D4  ECFF  F022         	call	_LCD_MSdelay	;wreg free
 12135  0045D8                     
 12136                           ;LCD_caracter.c: 83:     LATD = (LATD & 0x0f) | (dat<<4);
 12137  0045D8  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12138  0045DC  3A07               	swapf	??_LCD_Char^0,f,c
 12139  0045DE  0EF0               	movlw	240
 12140  0045E0  1607               	andwf	??_LCD_Char^0,f,c
 12141  0045E2  508C               	movf	140,w,c	;volatile
 12142  0045E4  0B0F               	andlw	15
 12143  0045E6  1007               	iorwf	??_LCD_Char^0,w,c
 12144  0045E8  6E8C               	movwf	140,c	;volatile
 12145  0045EA                     
 12146                           ;LCD_caracter.c: 84:  LATD1 = 1;
 12147  0045EA  828C               	bsf	3980,1,c	;volatile
 12148  0045EC                     
 12149                           ;LCD_caracter.c: 85:  __nop();
 12150  0045EC  F000               	nop	
 12151  0045EE                     
 12152                           ;LCD_caracter.c: 86:  LATD1 = 0;
 12153  0045EE  928C               	bcf	3980,1,c	;volatile
 12154                           
 12155                           ;LCD_caracter.c: 87:  LCD_MSdelay(3);
 12156  0045F0  0E00               	movlw	0
 12157  0045F2  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12158  0045F4  0E03               	movlw	3
 12159  0045F6  6E01               	movwf	LCD_MSdelay@val^0,c
 12160  0045F8  ECFF  F022         	call	_LCD_MSdelay	;wreg free
 12161  0045FC  0012               	return		;funcret
 12162  0045FE                     __end_of_LCD_Char:
 12163                           	callstack 0
 12164                           
 12165 ;; *************** function _LCD_MSdelay *****************
 12166 ;; Defined at:
 12167 ;;		line 199 in file "LCD_caracter.c"
 12168 ;; Parameters:    Size  Location     Type
 12169 ;;  val             2    0[COMRAM] unsigned int 
 12170 ;; Auto vars:     Size  Location     Type
 12171 ;;  j               2    4[COMRAM] unsigned int 
 12172 ;;  i               2    2[COMRAM] unsigned int 
 12173 ;; Return value:  Size  Location     Type
 12174 ;;                  1    wreg      void 
 12175 ;; Registers used:
 12176 ;;		wreg, status,2, status,0
 12177 ;; Tracked objects:
 12178 ;;		On entry : 0/0
 12179 ;;		On exit  : 0/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12182 ;;      Params:         2       0       0       0       0       0       0       0       0
 12183 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12184 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12185 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12186 ;;Total ram usage:        6 bytes
 12187 ;; Hardware stack levels used: 1
 12188 ;; This function calls:
 12189 ;;		Nothing
 12190 ;; This function is called by:
 12191 ;;		_main
 12192 ;;		_LCD_Init
 12193 ;;		_LCD_Command
 12194 ;;		_LCD_Char
 12195 ;;		_LCD_Clear
 12196 ;;		_RTC_Calendario
 12197 ;; This function uses a non-reentrant model
 12198 ;;
 12199                           
 12200                           	psect	text61
 12201  0045FE                     __ptext61:
 12202                           	callstack 0
 12203  0045FE                     _LCD_MSdelay:
 12204                           	callstack 26
 12205  0045FE                     
 12206                           ;LCD_caracter.c: 199: void LCD_MSdelay(unsigned int val);LCD_caracter.c: 200: {;LCD_cara
      +                          cter.c: 201:  unsigned int i,j;;LCD_caracter.c: 202:  for(i=0;i<val;i++)
 12207  0045FE  0E00               	movlw	0
 12208  004600  6E04               	movwf	(LCD_MSdelay@i+1)^0,c
 12209  004602  0E00               	movlw	0
 12210  004604  6E03               	movwf	LCD_MSdelay@i^0,c
 12211  004606  EF18  F023         	goto	l4606
 12212  00460A                     l4594:
 12213                           
 12214                           ;LCD_caracter.c: 203:      for(j=0;j<165;j++);
 12215  00460A  0E00               	movlw	0
 12216  00460C  6E06               	movwf	(LCD_MSdelay@j+1)^0,c
 12217  00460E  0E00               	movlw	0
 12218  004610  6E05               	movwf	LCD_MSdelay@j^0,c
 12219  004612                     l4600:
 12220  004612  4A05               	infsnz	LCD_MSdelay@j^0,f,c
 12221  004614  2A06               	incf	(LCD_MSdelay@j+1)^0,f,c
 12222  004616  5006               	movf	(LCD_MSdelay@j+1)^0,w,c
 12223  004618  E109               	bnz	u4650
 12224  00461A  0EA5               	movlw	165
 12225  00461C  5C05               	subwf	LCD_MSdelay@j^0,w,c
 12226  00461E  A0D8               	btfss	status,0,c
 12227  004620  EF14  F023         	goto	u4651
 12228  004624  EF16  F023         	goto	u4650
 12229  004628                     u4651:
 12230  004628  EF09  F023         	goto	l4600
 12231  00462C                     u4650:
 12232  00462C  4A03               	infsnz	LCD_MSdelay@i^0,f,c
 12233  00462E  2A04               	incf	(LCD_MSdelay@i+1)^0,f,c
 12234  004630                     l4606:
 12235  004630  5001               	movf	LCD_MSdelay@val^0,w,c
 12236  004632  5C03               	subwf	LCD_MSdelay@i^0,w,c
 12237  004634  5002               	movf	(LCD_MSdelay@val+1)^0,w,c
 12238  004636  5804               	subwfb	(LCD_MSdelay@i+1)^0,w,c
 12239  004638  A0D8               	btfss	status,0,c
 12240  00463A  EF21  F023         	goto	u4661
 12241  00463E  EF23  F023         	goto	u4660
 12242  004642                     u4661:
 12243  004642  EF05  F023         	goto	l4594
 12244  004646                     u4660:
 12245  004646  0012               	return		;funcret
 12246  004648                     __end_of_LCD_MSdelay:
 12247                           	callstack 0
 12248                           
 12249 ;; *************** function _Alarm_Status *****************
 12250 ;; Defined at:
 12251 ;;		line 130 in file "Estados.c"
 12252 ;; Parameters:    Size  Location     Type
 12253 ;;		None
 12254 ;; Auto vars:     Size  Location     Type
 12255 ;;		None
 12256 ;; Return value:  Size  Location     Type
 12257 ;;                  1    wreg      void 
 12258 ;; Registers used:
 12259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12260 ;; Tracked objects:
 12261 ;;		On entry : 0/0
 12262 ;;		On exit  : 0/0
 12263 ;;		Unchanged: 0/0
 12264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12265 ;;      Params:         0       0       0       0       0       0       0       0       0
 12266 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12267 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12268 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12269 ;;Total ram usage:        0 bytes
 12270 ;; Hardware stack levels used: 1
 12271 ;; Hardware stack levels required when called: 3
 12272 ;; This function calls:
 12273 ;;		_PlayCancion
 12274 ;;		_USART_SendString
 12275 ;; This function is called by:
 12276 ;;		_main
 12277 ;; This function uses a non-reentrant model
 12278 ;;
 12279                           
 12280                           	psect	text62
 12281  004B32                     __ptext62:
 12282                           	callstack 0
 12283  004B32                     _Alarm_Status:
 12284                           	callstack 27
 12285  004B32                     
 12286                           ;Estados.c: 132:     USART_SendString("Buenos Dias");
 12287  004B32  0E01               	movlw	low STR_22
 12288  004B34  6E02               	movwf	USART_SendString@out^0,c
 12289  004B36  0E08               	movlw	high STR_22
 12290  004B38  6E03               	movwf	(USART_SendString@out+1)^0,c
 12291  004B3A  ECB2  F024         	call	_USART_SendString	;wreg free
 12292  004B3E                     
 12293                           ;Estados.c: 133:     PlayCancion();
 12294  004B3E  EC6F  F01A         	call	_PlayCancion	;wreg free
 12295  004B42  0012               	return		;funcret
 12296  004B44                     __end_of_Alarm_Status:
 12297                           	callstack 0
 12298                           
 12299 ;; *************** function _USART_SendString *****************
 12300 ;; Defined at:
 12301 ;;		line 93 in file "Bluetooth.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;  out             2    1[COMRAM] PTR const unsigned char 
 12304 ;;		 -> STR_22(12), 
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;		None
 12307 ;; Return value:  Size  Location     Type
 12308 ;;                  1    wreg      void 
 12309 ;; Registers used:
 12310 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12316 ;;      Params:         2       0       0       0       0       0       0       0       0
 12317 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12318 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12319 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12320 ;;Total ram usage:        2 bytes
 12321 ;; Hardware stack levels used: 1
 12322 ;; Hardware stack levels required when called: 1
 12323 ;; This function calls:
 12324 ;;		_USART_TransmitChar
 12325 ;; This function is called by:
 12326 ;;		_Alarm_Status
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           	psect	text63
 12331  004964                     __ptext63:
 12332                           	callstack 0
 12333  004964                     _USART_SendString:
 12334                           	callstack 28
 12335  004964                     
 12336                           ;Bluetooth.c: 94:     while (*out != '\0') {
 12337  004964  EFBE  F024         	goto	l5534
 12338  004968                     l5530:
 12339                           
 12340                           ;Bluetooth.c: 95:         USART_TransmitChar(*out);
 12341  004968  C002  FFF6         	movff	USART_SendString@out,tblptrl
 12342  00496C  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
 12343  004970                     	if	0	;tblptru may be non-zero
 12344  004970                     	endif
 12345  004970                     	if	0	;tblptru may be non-zero
 12346  004970                     	endif
 12347  004970  0008               	tblrd		*
 12348  004972  50F5               	movf	tablat,w,c
 12349  004974  EC5D  F025         	call	_USART_TransmitChar
 12350  004978                     
 12351                           ;Bluetooth.c: 96:         out++;
 12352  004978  4A02               	infsnz	USART_SendString@out^0,f,c
 12353  00497A  2A03               	incf	(USART_SendString@out+1)^0,f,c
 12354  00497C                     l5534:
 12355                           
 12356                           ;Bluetooth.c: 94:     while (*out != '\0') {
 12357  00497C  C002  FFF6         	movff	USART_SendString@out,tblptrl
 12358  004980  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
 12359  004984                     	if	0	;tblptru may be non-zero
 12360  004984                     	endif
 12361  004984                     	if	0	;tblptru may be non-zero
 12362  004984                     	endif
 12363  004984  0008               	tblrd		*
 12364  004986  50F5               	movf	tablat,w,c
 12365  004988  0900               	iorlw	0
 12366  00498A  A4D8               	btfss	status,2,c
 12367  00498C  EFCA  F024         	goto	u6031
 12368  004990  EFCC  F024         	goto	u6030
 12369  004994                     u6031:
 12370  004994  EFB4  F024         	goto	l5530
 12371  004998                     u6030:
 12372  004998  0012               	return		;funcret
 12373  00499A                     __end_of_USART_SendString:
 12374                           	callstack 0
 12375                           
 12376 ;; *************** function _USART_TransmitChar *****************
 12377 ;; Defined at:
 12378 ;;		line 59 in file "Bluetooth.c"
 12379 ;; Parameters:    Size  Location     Type
 12380 ;;  out             1    wreg     unsigned char 
 12381 ;; Auto vars:     Size  Location     Type
 12382 ;;  out             1    0[COMRAM] unsigned char 
 12383 ;; Return value:  Size  Location     Type
 12384 ;;                  1    wreg      void 
 12385 ;; Registers used:
 12386 ;;		wreg
 12387 ;; Tracked objects:
 12388 ;;		On entry : 0/0
 12389 ;;		On exit  : 0/0
 12390 ;;		Unchanged: 0/0
 12391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12392 ;;      Params:         0       0       0       0       0       0       0       0       0
 12393 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12394 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12395 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12396 ;;Total ram usage:        1 bytes
 12397 ;; Hardware stack levels used: 1
 12398 ;; This function calls:
 12399 ;;		Nothing
 12400 ;; This function is called by:
 12401 ;;		_USART_SendString
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           	psect	text64
 12406  004ABA                     __ptext64:
 12407                           	callstack 0
 12408  004ABA                     _USART_TransmitChar:
 12409                           	callstack 28
 12410                           
 12411                           ;incstack = 0
 12412                           ;USART_TransmitChar@out stored from wreg
 12413  004ABA  6E01               	movwf	USART_TransmitChar@out^0,c
 12414  004ABC                     l578:
 12415  004ABC  A89E               	btfss	3998,4,c	;volatile
 12416  004ABE  EF63  F025         	goto	u5861
 12417  004AC2  EF65  F025         	goto	u5860
 12418  004AC6                     u5861:
 12419  004AC6  EF5E  F025         	goto	l578
 12420  004ACA                     u5860:
 12421  004ACA                     
 12422                           ;Bluetooth.c: 61:     TXREG = out;
 12423  004ACA  C001  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
 12424  004ACE  0012               	return		;funcret
 12425  004AD0                     __end_of_USART_TransmitChar:
 12426                           	callstack 0
 12427                           
 12428 ;; *************** function _PlayCancion *****************
 12429 ;; Defined at:
 12430 ;;		line 93 in file "Melodia.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;		None
 12433 ;; Auto vars:     Size  Location     Type
 12434 ;;		None
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  1    wreg      void 
 12437 ;; Registers used:
 12438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12444 ;;      Params:         0       0       0       0       0       0       0       0       0
 12445 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12446 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12447 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12448 ;;Total ram usage:        2 bytes
 12449 ;; Hardware stack levels used: 1
 12450 ;; Hardware stack levels required when called: 2
 12451 ;; This function calls:
 12452 ;;		_play
 12453 ;; This function is called by:
 12454 ;;		_Alarm_Status
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           	psect	text65
 12459  0034DE                     __ptext65:
 12460                           	callstack 0
 12461  0034DE                     _PlayCancion:
 12462                           	callstack 27
 12463  0034DE                     
 12464                           ;Melodia.c: 96:         play (4 ,4,150);
 12465  0034DE  0E00               	movlw	0
 12466  0034E0  6E07               	movwf	(play@nota+1)^0,c
 12467  0034E2  0E04               	movlw	4
 12468  0034E4  6E06               	movwf	play@nota^0,c
 12469  0034E6  0E00               	movlw	0
 12470  0034E8  6E09               	movwf	(play@octava+1)^0,c
 12471  0034EA  0E04               	movlw	4
 12472  0034EC  6E08               	movwf	play@octava^0,c
 12473  0034EE  0E00               	movlw	0
 12474  0034F0  6E0B               	movwf	(play@duracion+1)^0,c
 12475  0034F2  0E96               	movlw	150
 12476  0034F4  6E0A               	movwf	play@duracion^0,c
 12477  0034F6  ECB3  F01E         	call	_play	;wreg free
 12478  0034FA                     
 12479                           ;Melodia.c: 97:         _delay((unsigned long)((50)*(8000000/4000.0)));
 12480  0034FA  0E82               	movlw	130
 12481  0034FC  6E13               	movwf	??_PlayCancion^0,c
 12482  0034FE  0EDE               	movlw	222
 12483  003500                     u6207:
 12484  003500  2EE8               	decfsz	wreg,f,c
 12485  003502  D7FE               	bra	u6207
 12486  003504  2E13               	decfsz	??_PlayCancion^0,f,c
 12487  003506  D7FC               	bra	u6207
 12488  003508                     
 12489                           ;Melodia.c: 98:         play (4 ,4,150);
 12490  003508  0E00               	movlw	0
 12491  00350A  6E07               	movwf	(play@nota+1)^0,c
 12492  00350C  0E04               	movlw	4
 12493  00350E  6E06               	movwf	play@nota^0,c
 12494  003510  0E00               	movlw	0
 12495  003512  6E09               	movwf	(play@octava+1)^0,c
 12496  003514  0E04               	movlw	4
 12497  003516  6E08               	movwf	play@octava^0,c
 12498  003518  0E00               	movlw	0
 12499  00351A  6E0B               	movwf	(play@duracion+1)^0,c
 12500  00351C  0E96               	movlw	150
 12501  00351E  6E0A               	movwf	play@duracion^0,c
 12502  003520  ECB3  F01E         	call	_play	;wreg free
 12503                           
 12504                           ;Melodia.c: 99:         _delay((unsigned long)((150)*(8000000/4000.0)));
 12505  003524  0E02               	movlw	2
 12506  003526  6E14               	movwf	(??_PlayCancion+1)^0,c
 12507  003528  0E86               	movlw	134
 12508  00352A  6E13               	movwf	??_PlayCancion^0,c
 12509  00352C  0E99               	movlw	153
 12510  00352E                     u6217:
 12511  00352E  2EE8               	decfsz	wreg,f,c
 12512  003530  D7FE               	bra	u6217
 12513  003532  2E13               	decfsz	??_PlayCancion^0,f,c
 12514  003534  D7FC               	bra	u6217
 12515  003536  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12516  003538  D7FA               	bra	u6217
 12517  00353A  F000               	nop	
 12518  00353C                     
 12519                           ;Melodia.c: 100:         play (4 ,4,150);
 12520  00353C  0E00               	movlw	0
 12521  00353E  6E07               	movwf	(play@nota+1)^0,c
 12522  003540  0E04               	movlw	4
 12523  003542  6E06               	movwf	play@nota^0,c
 12524  003544  0E00               	movlw	0
 12525  003546  6E09               	movwf	(play@octava+1)^0,c
 12526  003548  0E04               	movlw	4
 12527  00354A  6E08               	movwf	play@octava^0,c
 12528  00354C  0E00               	movlw	0
 12529  00354E  6E0B               	movwf	(play@duracion+1)^0,c
 12530  003550  0E96               	movlw	150
 12531  003552  6E0A               	movwf	play@duracion^0,c
 12532  003554  ECB3  F01E         	call	_play	;wreg free
 12533  003558                     
 12534                           ;Melodia.c: 101:         _delay((unsigned long)((200)*(8000000/4000.0)));
 12535  003558  0E03               	movlw	3
 12536  00355A  6E14               	movwf	(??_PlayCancion+1)^0,c
 12537  00355C  0E08               	movlw	8
 12538  00355E  6E13               	movwf	??_PlayCancion^0,c
 12539  003560  0E77               	movlw	119
 12540  003562                     u6227:
 12541  003562  2EE8               	decfsz	wreg,f,c
 12542  003564  D7FE               	bra	u6227
 12543  003566  2E13               	decfsz	??_PlayCancion^0,f,c
 12544  003568  D7FC               	bra	u6227
 12545  00356A  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12546  00356C  D7FA               	bra	u6227
 12547  00356E  F000               	nop	
 12548                           
 12549                           ;Melodia.c: 103:         play (0 ,4,125);
 12550  003570  0E00               	movlw	0
 12551  003572  6E07               	movwf	(play@nota+1)^0,c
 12552  003574  0E00               	movlw	0
 12553  003576  6E06               	movwf	play@nota^0,c
 12554  003578  0E00               	movlw	0
 12555  00357A  6E09               	movwf	(play@octava+1)^0,c
 12556  00357C  0E04               	movlw	4
 12557  00357E  6E08               	movwf	play@octava^0,c
 12558  003580  0E00               	movlw	0
 12559  003582  6E0B               	movwf	(play@duracion+1)^0,c
 12560  003584  0E7D               	movlw	125
 12561  003586  6E0A               	movwf	play@duracion^0,c
 12562  003588  ECB3  F01E         	call	_play	;wreg free
 12563  00358C                     
 12564                           ;Melodia.c: 104:         _delay((unsigned long)((50)*(8000000/4000.0)));
 12565  00358C  0E82               	movlw	130
 12566  00358E  6E13               	movwf	??_PlayCancion^0,c
 12567  003590  0EDE               	movlw	222
 12568  003592                     u6237:
 12569  003592  2EE8               	decfsz	wreg,f,c
 12570  003594  D7FE               	bra	u6237
 12571  003596  2E13               	decfsz	??_PlayCancion^0,f,c
 12572  003598  D7FC               	bra	u6237
 12573  00359A                     
 12574                           ;Melodia.c: 105:         play (4 ,4,125);
 12575  00359A  0E00               	movlw	0
 12576  00359C  6E07               	movwf	(play@nota+1)^0,c
 12577  00359E  0E04               	movlw	4
 12578  0035A0  6E06               	movwf	play@nota^0,c
 12579  0035A2  0E00               	movlw	0
 12580  0035A4  6E09               	movwf	(play@octava+1)^0,c
 12581  0035A6  0E04               	movlw	4
 12582  0035A8  6E08               	movwf	play@octava^0,c
 12583  0035AA  0E00               	movlw	0
 12584  0035AC  6E0B               	movwf	(play@duracion+1)^0,c
 12585  0035AE  0E7D               	movlw	125
 12586  0035B0  6E0A               	movwf	play@duracion^0,c
 12587  0035B2  ECB3  F01E         	call	_play	;wreg free
 12588                           
 12589                           ;Melodia.c: 106:         _delay((unsigned long)((150)*(8000000/4000.0)));
 12590  0035B6  0E02               	movlw	2
 12591  0035B8  6E14               	movwf	(??_PlayCancion+1)^0,c
 12592  0035BA  0E86               	movlw	134
 12593  0035BC  6E13               	movwf	??_PlayCancion^0,c
 12594  0035BE  0E99               	movlw	153
 12595  0035C0                     u6247:
 12596  0035C0  2EE8               	decfsz	wreg,f,c
 12597  0035C2  D7FE               	bra	u6247
 12598  0035C4  2E13               	decfsz	??_PlayCancion^0,f,c
 12599  0035C6  D7FC               	bra	u6247
 12600  0035C8  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12601  0035CA  D7FA               	bra	u6247
 12602  0035CC  F000               	nop	
 12603  0035CE                     
 12604                           ;Melodia.c: 107:         play (7 ,4,200);
 12605  0035CE  0E00               	movlw	0
 12606  0035D0  6E07               	movwf	(play@nota+1)^0,c
 12607  0035D2  0E07               	movlw	7
 12608  0035D4  6E06               	movwf	play@nota^0,c
 12609  0035D6  0E00               	movlw	0
 12610  0035D8  6E09               	movwf	(play@octava+1)^0,c
 12611  0035DA  0E04               	movlw	4
 12612  0035DC  6E08               	movwf	play@octava^0,c
 12613  0035DE  0E00               	movlw	0
 12614  0035E0  6E0B               	movwf	(play@duracion+1)^0,c
 12615  0035E2  0EC8               	movlw	200
 12616  0035E4  6E0A               	movwf	play@duracion^0,c
 12617  0035E6  ECB3  F01E         	call	_play	;wreg free
 12618  0035EA                     
 12619                           ;Melodia.c: 108:         _delay((unsigned long)((400)*(8000000/4000.0)));
 12620  0035EA  0E05               	movlw	5
 12621  0035EC  6E14               	movwf	(??_PlayCancion+1)^0,c
 12622  0035EE  0E0F               	movlw	15
 12623  0035F0  6E13               	movwf	??_PlayCancion^0,c
 12624  0035F2  0EF1               	movlw	241
 12625  0035F4                     u6257:
 12626  0035F4  2EE8               	decfsz	wreg,f,c
 12627  0035F6  D7FE               	bra	u6257
 12628  0035F8  2E13               	decfsz	??_PlayCancion^0,f,c
 12629  0035FA  D7FC               	bra	u6257
 12630  0035FC  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12631  0035FE  D7FA               	bra	u6257
 12632  003600  F000               	nop	
 12633                           
 12634                           ;Melodia.c: 109:         play (7 ,3,350);
 12635  003602  0E00               	movlw	0
 12636  003604  6E07               	movwf	(play@nota+1)^0,c
 12637  003606  0E07               	movlw	7
 12638  003608  6E06               	movwf	play@nota^0,c
 12639  00360A  0E00               	movlw	0
 12640  00360C  6E09               	movwf	(play@octava+1)^0,c
 12641  00360E  0E03               	movlw	3
 12642  003610  6E08               	movwf	play@octava^0,c
 12643  003612  0E01               	movlw	1
 12644  003614  6E0B               	movwf	(play@duracion+1)^0,c
 12645  003616  0E5E               	movlw	94
 12646  003618  6E0A               	movwf	play@duracion^0,c
 12647  00361A  ECB3  F01E         	call	_play	;wreg free
 12648  00361E                     
 12649                           ;Melodia.c: 110:         _delay((unsigned long)((300)*(8000000/4000.0)));
 12650  00361E  0E04               	movlw	4
 12651  003620  6E14               	movwf	(??_PlayCancion+1)^0,c
 12652  003622  0E0C               	movlw	12
 12653  003624  6E13               	movwf	??_PlayCancion^0,c
 12654  003626  0E34               	movlw	52
 12655  003628                     u6267:
 12656  003628  2EE8               	decfsz	wreg,f,c
 12657  00362A  D7FE               	bra	u6267
 12658  00362C  2E13               	decfsz	??_PlayCancion^0,f,c
 12659  00362E  D7FC               	bra	u6267
 12660  003630  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
 12661  003632  D7FA               	bra	u6267
 12662  003634  0012               	return		;funcret
 12663  003636                     __end_of_PlayCancion:
 12664                           	callstack 0
 12665                           
 12666 ;; *************** function _play *****************
 12667 ;; Defined at:
 12668 ;;		line 46 in file "Melodia.c"
 12669 ;; Parameters:    Size  Location     Type
 12670 ;;  nota            2    5[COMRAM] int 
 12671 ;;  octava          2    7[COMRAM] int 
 12672 ;;  duracion        2    9[COMRAM] int 
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;  fn              2   16[COMRAM] int 
 12675 ;;  CiclosL         2   14[COMRAM] int 
 12676 ;;  mS_Transcurr    2   12[COMRAM] int 
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  1    wreg      void 
 12679 ;; Registers used:
 12680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12686 ;;      Params:         6       0       0       0       0       0       0       0       0
 12687 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12688 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12689 ;;      Totals:        13       0       0       0       0       0       0       0       0
 12690 ;;Total ram usage:       13 bytes
 12691 ;; Hardware stack levels used: 1
 12692 ;; Hardware stack levels required when called: 1
 12693 ;; This function calls:
 12694 ;;		_delay_us
 12695 ;; This function is called by:
 12696 ;;		_PlayCancion
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           	psect	text66
 12701  003D66                     __ptext66:
 12702                           	callstack 0
 12703  003D66                     _play:
 12704                           	callstack 27
 12705  003D66                     
 12706                           ;Melodia.c: 47:      int fn;;Melodia.c: 48:      int mS_Transcurridos=0;
 12707  003D66  0E00               	movlw	0
 12708  003D68  6E0E               	movwf	(play@mS_Transcurridos+1)^0,c
 12709  003D6A  0E00               	movlw	0
 12710  003D6C  6E0D               	movwf	play@mS_Transcurridos^0,c
 12711                           
 12712                           ;Melodia.c: 49:      int CiclosL=0;
 12713  003D6E  0E00               	movlw	0
 12714  003D70  6E10               	movwf	(play@CiclosL+1)^0,c
 12715  003D72  0E00               	movlw	0
 12716  003D74  6E0F               	movwf	play@CiclosL^0,c
 12717  003D76                     
 12718                           ;Melodia.c: 51:      fn=FreqNota[nota];
 12719  003D76  90D8               	bcf	status,0,c
 12720  003D78  3406               	rlcf	play@nota^0,w,c
 12721  003D7A  6ED9               	movwf	fsr2l,c
 12722  003D7C  3407               	rlcf	(play@nota+1)^0,w,c
 12723  003D7E  6EDA               	movwf	fsr2h,c
 12724  003D80  0EB6               	movlw	low _FreqNota
 12725  003D82  26D9               	addwf	fsr2l,f,c
 12726  003D84  0E01               	movlw	high _FreqNota
 12727  003D86  22DA               	addwfc	fsr2h,f,c
 12728  003D88  CFDE F011          	movff	postinc2,play@fn
 12729  003D8C  CFDD F012          	movff	postdec2,play@fn+1
 12730  003D90                     
 12731                           ;Melodia.c: 53:      fn>>=(octava);
 12732  003D90  2808               	incf	play@octava^0,w,c
 12733  003D92  6E0C               	movwf	??_play^0,c
 12734  003D94  EFCF  F01E         	goto	u5760
 12735  003D98                     u5765:
 12736  003D98  3412               	rlcf	(play@fn+1)^0,w,c
 12737  003D9A  3212               	rrcf	(play@fn+1)^0,f,c
 12738  003D9C  3211               	rrcf	play@fn^0,f,c
 12739  003D9E                     u5760:
 12740  003D9E  2E0C               	decfsz	??_play^0,f,c
 12741  003DA0  EFCC  F01E         	goto	u5765
 12742  003DA4                     l5268:
 12743                           
 12744                           ;Melodia.c: 58:         TRISCbits . TRISC1 = 0;
 12745  003DA4  9294               	bcf	148,1,c	;volatile
 12746  003DA6                     
 12747                           ;Melodia.c: 59:         LATCbits . LATC1 = 1 ;
 12748  003DA6  828B               	bsf	139,1,c	;volatile
 12749  003DA8                     
 12750                           ;Melodia.c: 60:         delay_us(fn);;
 12751  003DA8  C011  F001         	movff	play@fn,delay_us@nota
 12752  003DAC  C012  F002         	movff	play@fn+1,delay_us@nota+1
 12753  003DB0  ECCD  F024         	call	_delay_us	;wreg free
 12754  003DB4                     
 12755                           ;Melodia.c: 61:         CiclosL+=(fn);
 12756  003DB4  5011               	movf	play@fn^0,w,c
 12757  003DB6  260F               	addwf	play@CiclosL^0,f,c
 12758  003DB8  5012               	movf	(play@fn+1)^0,w,c
 12759  003DBA  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12760  003DBC                     
 12761                           ;Melodia.c: 63:         LATCbits . LATC1 = 0 ;
 12762  003DBC  928B               	bcf	139,1,c	;volatile
 12763  003DBE                     
 12764                           ;Melodia.c: 64:          delay_us(fn);
 12765  003DBE  C011  F001         	movff	play@fn,delay_us@nota
 12766  003DC2  C012  F002         	movff	play@fn+1,delay_us@nota+1
 12767  003DC6  ECCD  F024         	call	_delay_us	;wreg free
 12768  003DCA                     
 12769                           ;Melodia.c: 65:         CiclosL+=(fn);
 12770  003DCA  5011               	movf	play@fn^0,w,c
 12771  003DCC  260F               	addwf	play@CiclosL^0,f,c
 12772  003DCE  5012               	movf	(play@fn+1)^0,w,c
 12773  003DD0  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12774  003DD2                     l5282:
 12775                           
 12776                           ;Melodia.c: 66:         CiclosL+=25;
 12777  003DD2  0E19               	movlw	25
 12778  003DD4  260F               	addwf	play@CiclosL^0,f,c
 12779  003DD6  0E00               	movlw	0
 12780  003DD8  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12781                           
 12782                           ;Melodia.c: 68:         while(CiclosL>999){
 12783  003DDA  EFF7  F01E         	goto	l5290
 12784  003DDE                     l5284:
 12785                           
 12786                           ;Melodia.c: 70:            CiclosL-=1000;
 12787  003DDE  0E18               	movlw	24
 12788  003DE0  260F               	addwf	play@CiclosL^0,f,c
 12789  003DE2  0EFC               	movlw	252
 12790  003DE4  2210               	addwfc	(play@CiclosL+1)^0,f,c
 12791  003DE6                     
 12792                           ;Melodia.c: 71:            mS_Transcurridos++;
 12793  003DE6  4A0D               	infsnz	play@mS_Transcurridos^0,f,c
 12794  003DE8  2A0E               	incf	(play@mS_Transcurridos+1)^0,f,c
 12795  003DEA  EFE9  F01E         	goto	l5282
 12796  003DEE                     l5290:
 12797                           
 12798                           ;Melodia.c: 68:         while(CiclosL>999){
 12799  003DEE  BE10               	btfsc	(play@CiclosL+1)^0,7,c
 12800  003DF0  EF05  F01F         	goto	u5770
 12801  003DF4  0EE8               	movlw	232
 12802  003DF6  5C0F               	subwf	play@CiclosL^0,w,c
 12803  003DF8  0E03               	movlw	3
 12804  003DFA  5810               	subwfb	(play@CiclosL+1)^0,w,c
 12805  003DFC  B0D8               	btfsc	status,0,c
 12806  003DFE  EF03  F01F         	goto	u5771
 12807  003E02  EF05  F01F         	goto	u5770
 12808  003E06                     u5771:
 12809  003E06  EFEF  F01E         	goto	l5284
 12810  003E0A                     u5770:
 12811  003E0A                     
 12812                           ;Melodia.c: 74:      }while (duracion>mS_Transcurridos);
 12813  003E0A  500A               	movf	play@duracion^0,w,c
 12814  003E0C  5C0D               	subwf	play@mS_Transcurridos^0,w,c
 12815  003E0E  500E               	movf	(play@mS_Transcurridos+1)^0,w,c
 12816  003E10  0A80               	xorlw	128
 12817  003E12  6E0C               	movwf	??_play^0,c
 12818  003E14  500B               	movf	(play@duracion+1)^0,w,c
 12819  003E16  0A80               	xorlw	128
 12820  003E18  580C               	subwfb	??_play^0,w,c
 12821  003E1A  A0D8               	btfss	status,0,c
 12822  003E1C  EF12  F01F         	goto	u5781
 12823  003E20  EF14  F01F         	goto	u5780
 12824  003E24                     u5781:
 12825  003E24  EFD2  F01E         	goto	l5268
 12826  003E28                     u5780:
 12827  003E28  0012               	return		;funcret
 12828  003E2A                     __end_of_play:
 12829                           	callstack 0
 12830                           
 12831 ;; *************** function _delay_us *****************
 12832 ;; Defined at:
 12833 ;;		line 24 in file "Melodia.c"
 12834 ;; Parameters:    Size  Location     Type
 12835 ;;  nota            2    0[COMRAM] int 
 12836 ;; Auto vars:     Size  Location     Type
 12837 ;;  i               2    3[COMRAM] int 
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  1    wreg      void 
 12840 ;; Registers used:
 12841 ;;		wreg, status,2, status,0
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12847 ;;      Params:         2       0       0       0       0       0       0       0       0
 12848 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12849 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12850 ;;      Totals:         5       0       0       0       0       0       0       0       0
 12851 ;;Total ram usage:        5 bytes
 12852 ;; Hardware stack levels used: 1
 12853 ;; This function calls:
 12854 ;;		Nothing
 12855 ;; This function is called by:
 12856 ;;		_play
 12857 ;; This function uses a non-reentrant model
 12858 ;;
 12859                           
 12860                           	psect	text67
 12861  00499A                     __ptext67:
 12862                           	callstack 0
 12863  00499A                     _delay_us:
 12864                           	callstack 27
 12865  00499A                     
 12866                           ;Melodia.c: 25:     for(int i=0; i<=nota;i++ ){
 12867  00499A  0E00               	movlw	0
 12868  00499C  6E05               	movwf	(delay_us@i+1)^0,c
 12869  00499E  0E00               	movlw	0
 12870  0049A0  6E04               	movwf	delay_us@i^0,c
 12871  0049A2  EFD6  F024         	goto	l5070
 12872  0049A6                     l254:
 12873                           
 12874                           ;Melodia.c: 26:         _delay((unsigned long)((1)*(8000000/4000000.0)));
 12875  0049A6  D000               	nop2		;2 cycle nop
 12876  0049A8                     
 12877                           ;Melodia.c: 27:     }
 12878  0049A8  4A04               	infsnz	delay_us@i^0,f,c
 12879  0049AA  2A05               	incf	(delay_us@i+1)^0,f,c
 12880  0049AC                     l5070:
 12881  0049AC  5004               	movf	delay_us@i^0,w,c
 12882  0049AE  5C01               	subwf	delay_us@nota^0,w,c
 12883  0049B0  5002               	movf	(delay_us@nota+1)^0,w,c
 12884  0049B2  0A80               	xorlw	128
 12885  0049B4  6E03               	movwf	??_delay_us^0,c
 12886  0049B6  5005               	movf	(delay_us@i+1)^0,w,c
 12887  0049B8  0A80               	xorlw	128
 12888  0049BA  5803               	subwfb	??_delay_us^0,w,c
 12889  0049BC  B0D8               	btfsc	status,0,c
 12890  0049BE  EFE3  F024         	goto	u5511
 12891  0049C2  EFE5  F024         	goto	u5510
 12892  0049C6                     u5511:
 12893  0049C6  EFD3  F024         	goto	l254
 12894  0049CA                     u5510:
 12895  0049CA  0012               	return		;funcret
 12896  0049CC                     __end_of_delay_us:
 12897                           	callstack 0
 12898                           
 12899                           	psect	rparam
 12900  0000                     
 12901                           	psect	idloc
 12902                           
 12903                           ;Config register IDLOC0 @ 0x200000
 12904                           ;	unspecified, using default values
 12905  200000                     	org	2097152
 12906  200000  FF                 	db	255
 12907                           
 12908                           ;Config register IDLOC1 @ 0x200001
 12909                           ;	unspecified, using default values
 12910  200001                     	org	2097153
 12911  200001  FF                 	db	255
 12912                           
 12913                           ;Config register IDLOC2 @ 0x200002
 12914                           ;	unspecified, using default values
 12915  200002                     	org	2097154
 12916  200002  FF                 	db	255
 12917                           
 12918                           ;Config register IDLOC3 @ 0x200003
 12919                           ;	unspecified, using default values
 12920  200003                     	org	2097155
 12921  200003  FF                 	db	255
 12922                           
 12923                           ;Config register IDLOC4 @ 0x200004
 12924                           ;	unspecified, using default values
 12925  200004                     	org	2097156
 12926  200004  FF                 	db	255
 12927                           
 12928                           ;Config register IDLOC5 @ 0x200005
 12929                           ;	unspecified, using default values
 12930  200005                     	org	2097157
 12931  200005  FF                 	db	255
 12932                           
 12933                           ;Config register IDLOC6 @ 0x200006
 12934                           ;	unspecified, using default values
 12935  200006                     	org	2097158
 12936  200006  FF                 	db	255
 12937                           
 12938                           ;Config register IDLOC7 @ 0x200007
 12939                           ;	unspecified, using default values
 12940  200007                     	org	2097159
 12941  200007  FF                 	db	255
 12942                           
 12943                           	psect	config
 12944                           
 12945                           ;Config register CONFIG1L @ 0x300000
 12946                           ;	PLL Prescaler Selection bits
 12947                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12948                           ;	System Clock Postscaler Selection bits
 12949                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12950                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12951                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12952  300000                     	org	3145728
 12953  300000  00                 	db	0
 12954                           
 12955                           ;Config register CONFIG1H @ 0x300001
 12956                           ;	Oscillator Selection bits
 12957                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12958                           ;	Fail-Safe Clock Monitor Enable bit
 12959                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12960                           ;	Internal/External Oscillator Switchover bit
 12961                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12962  300001                     	org	3145729
 12963  300001  09                 	db	9
 12964                           
 12965                           ;Config register CONFIG2L @ 0x300002
 12966                           ;	Power-up Timer Enable bit
 12967                           ;	PWRT = ON, PWRT enabled
 12968                           ;	Brown-out Reset Enable bits
 12969                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12970                           ;	Brown-out Reset Voltage bits
 12971                           ;	BORV = 3, Minimum setting 2.05V
 12972                           ;	USB Voltage Regulator Enable bit
 12973                           ;	VREGEN = OFF, USB voltage regulator disabled
 12974  300002                     	org	3145730
 12975  300002  18                 	db	24
 12976                           
 12977                           ;Config register CONFIG2H @ 0x300003
 12978                           ;	Watchdog Timer Enable bit
 12979                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12980                           ;	Watchdog Timer Postscale Select bits
 12981                           ;	WDTPS = 32768, 1:32768
 12982  300003                     	org	3145731
 12983  300003  1E                 	db	30
 12984                           
 12985                           ; Padding undefined space
 12986  300004                     	org	3145732
 12987  300004  FF                 	db	255
 12988                           
 12989                           ;Config register CONFIG3H @ 0x300005
 12990                           ;	CCP2 MUX bit
 12991                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12992                           ;	PORTB A/D Enable bit
 12993                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12994                           ;	Low-Power Timer 1 Oscillator Enable bit
 12995                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12996                           ;	MCLR Pin Enable bit
 12997                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12998  300005                     	org	3145733
 12999  300005  81                 	db	129
 13000                           
 13001                           ;Config register CONFIG4L @ 0x300006
 13002                           ;	Stack Full/Underflow Reset Enable bit
 13003                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 13004                           ;	Single-Supply ICSP Enable bit
 13005                           ;	LVP = OFF, Single-Supply ICSP disabled
 13006                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 13007                           ;	ICPRT = OFF, ICPORT disabled
 13008                           ;	Extended Instruction Set Enable bit
 13009                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13010                           ;	Background Debugger Enable bit
 13011                           ;	DEBUG = 0x1, unprogrammed default
 13012  300006                     	org	3145734
 13013  300006  80                 	db	128
 13014                           
 13015                           ; Padding undefined space
 13016  300007                     	org	3145735
 13017  300007  FF                 	db	255
 13018                           
 13019                           ;Config register CONFIG5L @ 0x300008
 13020                           ;	Code Protection bit
 13021                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 13022                           ;	Code Protection bit
 13023                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 13024                           ;	Code Protection bit
 13025                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 13026                           ;	Code Protection bit
 13027                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 13028  300008                     	org	3145736
 13029  300008  0F                 	db	15
 13030                           
 13031                           ;Config register CONFIG5H @ 0x300009
 13032                           ;	Boot Block Code Protection bit
 13033                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 13034                           ;	Data EEPROM Code Protection bit
 13035                           ;	CPD = OFF, Data EEPROM is not code-protected
 13036  300009                     	org	3145737
 13037  300009  C0                 	db	192
 13038                           
 13039                           ;Config register CONFIG6L @ 0x30000A
 13040                           ;	Write Protection bit
 13041                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 13042                           ;	Write Protection bit
 13043                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 13044                           ;	Write Protection bit
 13045                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 13046                           ;	Write Protection bit
 13047                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 13048  30000A                     	org	3145738
 13049  30000A  0F                 	db	15
 13050                           
 13051                           ;Config register CONFIG6H @ 0x30000B
 13052                           ;	Configuration Register Write Protection bit
 13053                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 13054                           ;	Boot Block Write Protection bit
 13055                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 13056                           ;	Data EEPROM Write Protection bit
 13057                           ;	WRTD = OFF, Data EEPROM is not write-protected
 13058  30000B                     	org	3145739
 13059  30000B  E0                 	db	224
 13060                           
 13061                           ;Config register CONFIG7L @ 0x30000C
 13062                           ;	Table Read Protection bit
 13063                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13064                           ;	Table Read Protection bit
 13065                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13066                           ;	Table Read Protection bit
 13067                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13068                           ;	Table Read Protection bit
 13069                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13070  30000C                     	org	3145740
 13071  30000C  0F                 	db	15
 13072                           
 13073                           ;Config register CONFIG7H @ 0x30000D
 13074                           ;	Boot Block Table Read Protection bit
 13075                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 13076  30000D                     	org	3145741
 13077  30000D  40                 	db	64
 13078                           tosu	equ	0xFFF
 13079                           tosh	equ	0xFFE
 13080                           tosl	equ	0xFFD
 13081                           stkptr	equ	0xFFC
 13082                           pclatu	equ	0xFFB
 13083                           pclath	equ	0xFFA
 13084                           pcl	equ	0xFF9
 13085                           tblptru	equ	0xFF8
 13086                           tblptrh	equ	0xFF7
 13087                           tblptrl	equ	0xFF6
 13088                           tablat	equ	0xFF5
 13089                           prodh	equ	0xFF4
 13090                           prodl	equ	0xFF3
 13091                           indf0	equ	0xFEF
 13092                           postinc0	equ	0xFEE
 13093                           postdec0	equ	0xFED
 13094                           preinc0	equ	0xFEC
 13095                           plusw0	equ	0xFEB
 13096                           fsr0h	equ	0xFEA
 13097                           fsr0l	equ	0xFE9
 13098                           wreg	equ	0xFE8
 13099                           indf1	equ	0xFE7
 13100                           postinc1	equ	0xFE6
 13101                           postdec1	equ	0xFE5
 13102                           preinc1	equ	0xFE4
 13103                           plusw1	equ	0xFE3
 13104                           fsr1h	equ	0xFE2
 13105                           fsr1l	equ	0xFE1
 13106                           bsr	equ	0xFE0
 13107                           indf2	equ	0xFDF
 13108                           postinc2	equ	0xFDE
 13109                           postdec2	equ	0xFDD
 13110                           preinc2	equ	0xFDC
 13111                           plusw2	equ	0xFDB
 13112                           fsr2h	equ	0xFDA
 13113                           fsr2l	equ	0xFD9
 13114                           status	equ	0xFD8

Data Sizes:
    Strings     84
    Constant    0
    Data        55
    BSS         162
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    130     157
    BANK1           256     68     237
    BANK2           256      0      20
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_24(CODE[4]), STR_23(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1366_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[12]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character3(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _USART_Init->___fltol
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_LCD_MSdelay
    _LCD_Char->_LCD_MSdelay
    _Alarm_Status->_PlayCancion
    _USART_SendString->_USART_TransmitChar
    _PlayCancion->_play
    _play->_delay_us

Critical Paths under _main in BANK0

    _main->_RTC_Calendario
    _Sunny_State->_sprintf
    _Rainy_State->_sprintf
    _RTC_Calendario->_sprintf
    _Estados->_ReadADC
    _Cloudy_State->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_RTC_Calendario

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  211500
                                            126 BANK0      4     4      0
                       _Alarm_Status
                       _Cloudy_State
                            _Estados
                           _I2C_Init
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                     _RTC_Calendario
                        _Rainy_State
                        _Sunny_State
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4    6309
                                              0 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _Sunny_State                                          0     0      0   46113
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Rainy_State                                          0     0      0   46113
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendario                                      71    71      0   49072
                                            124 BANK0      2     2      0
                                              0 BANK1     68    68      0
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                         _LCD_String
                      _LCD_String_xy
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1444
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1444
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Estados                                              6     4      2   12024
                                              6 BANK0      6     4      2
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _ReadLUZ                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              6     4      2    9065
                                              0 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (1) _Cloudy_State                                         0     0      0   46113
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   38827
                                            108 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   36796
                                            100 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   36408
                                             68 BANK0     32    26      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5327
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   25204
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             68 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     533
                                             84 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3193
                                             84 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2718
                                             68 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2310
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2311
                                             43 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    3948
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    1853
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     2      2    1850
                                              8 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     744
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0     744
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (5) _LCD_MSdelay                                          6     4      2     700
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Alarm_Status                                         0     0      0    2145
                        _PlayCancion
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (2) _USART_SendString                                     2     0      2     143
                                              1 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (3) _USART_TransmitChar                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PlayCancion                                          2     2      0    2002
                                             18 COMRAM     2     2      0
                               _play
 ---------------------------------------------------------------------------------
 (3) _play                                                13     7      6    2002
                                              5 COMRAM    13     7      6
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Alarm_Status
     _PlayCancion
       _play
         _delay_us
     _USART_SendString
       _USART_TransmitChar
   _Cloudy_State
     _LCD_Char
       _LCD_MSdelay
     _LCD_Command
       _LCD_MSdelay
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ReadLUZ (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _Estados
     _ReadADC
       ___fladd
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
     _ReadLUZ
     ___flge
     ___xxtofl
   _I2C_Init
   _LCD_Clear
     _LCD_Command
     _LCD_MSdelay
   _LCD_Init
     _LCD_Command
     _LCD_MSdelay
   _LCD_MSdelay
   _RTC_Calendario
     _I2C_Init
     _I2C_Stop
     _LCD_Clear
     _LCD_Init
     _LCD_MSdelay
     _LCD_String
     _LCD_String_xy
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
   _Rainy_State
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
     _LCD_String_xy
     _sprintf
   _Sunny_State
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
     _LCD_String_xy
     _sprintf
   _USART_Init
     ___fladd
     ___fldiv
     ___fltol
     ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      14       9        7.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     44      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FD      20        0.0%
DATA                 0      0     1FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Oct 08 11:21:04 2021

                          ?_LCD_MSdelay 0001                            ___fldiv@aexp 0044  
                          ___fldiv@bexp 0043                                       _i 005F  
                    __size_of_I2C_Ready 0012                            ___fldiv@sign 003C  
                    __size_of_I2C_Start 002E                            ?_LCD_Command 0001  
                           _SSPSTATbits 000FC7                      __size_of_I2C_Write 0022  
                                    l98 49FA                            ___awdiv@sign 0006  
                  __size_of_Sunny_State 005A                     ___wmul@multiplicand 0003  
                           ?_LCD_String 0009                         _LCD_Custom_Char 4648  
RTC_Read_Calendar@read_calendar_address 0004                                     l101 45B0  
                                   l110 42AC                                     l104 45FC  
                                   l115 479E                                     l132 4646  
                                   l124 468E                                     l220 412E  
                                   l118 4B1E                                     l217 4104  
                                   l410 4AB8                                     l402 47E0  
                                   l330 46D4                                     l219 4112  
                                   l172 3878                                     l404 47EE  
                                   l413 4B20                                     l333 4416  
                                   l254 49A6                                     l174 3886  
                                   l406 480E                                     l430 4A00  
                                   l175 393C                                     l415 4B2E  
                                   l407 4814                                     l256 49CA  
                                   l264 3E28                                     l416 4B30  
                                   l432 4A0E                                     l441 4A56  
                                   l345 2A2E                                     l434 4A28  
                                   l450 4AE2                                     l267 3634  
                                   l531 43BC                                     l517 2F86  
                                   l461 4B0A                                     l437 4A2E  
                                   l525 4362                                     l534 4B42  
                                   l454 4A9E                                     l446 4AD2  
                                   l439 4A3C                                     l528 4470  
                                   l464 4AE8                                     l448 4AE0  
                                   l458 4AFC                                     l467 4AF6  
                                   l581 4ACE                                     l575 40C6  
                                   l840 3F88                                     l593 4998  
                                   l578 4ABC                                     l827 3D64  
                                   l596 4A7C                                     l861 37F8  
                                   l870 48BC                                     l855 4032  
                                   l866 383E                                     l893 373A  
                                   _PEN 007E2A                                     _Day 0106  
                       __end_of_I2C_Ack 4B0C                                     _pad 3BDC  
                                   _min 010A                                     _sec 010C  
                                   _luz 00EA                            ___awmod@sign 0006  
                                   wreg 000FE8                            ___flmul@aexp 0024  
                          ___flmul@bexp 0025                            ___flmul@sign 001F  
                          ___flmul@temp 002A                            ___flmul@prod 0026  
                           LCD_Char@dat 0008                            ___fltol@exp1 005E  
                                  l1210 2040                                    l1220 229C  
                                  l1124 1CAA                                    l1141 1DC4  
                                  l1133 1F7A                                    l1125 1C98  
                                  l1214 23A4                                    l1150 1E94  
                                  l1126 1C5E                                    l1151 1E82  
                                  l1217 2236                                    l1322 3C64  
                                  l1227 2366                                    l1219 22AE  
                                  l1251 31F0                                    l1180 259E  
                                  l1324 3CA0                                    l1166 471A  
                                  l1342 14AC                                    l1422 2A68  
                                  l1254 334C                                    l1191 265C  
                                  l1183 2562                                    l1503 3A3A  
                                  l1319 3C22                                    l1431 2B06  
                                  l1192 264A                                    l4000 471C  
                                  l1360 0C42                                    l1424 2A70  
                                  l1265 32E4                                    l1178 273E  
                                  l4002 4728                                    l4010 493A  
                                  l1274 44C2                                    l1258 3288  
                                  l1603 4308                                    l1532 34D4  
                                  l4100 252E                                    l4004 473A  
                                  l4012 493E                                    l1189 25E4  
                                  l1541 3198                                    l1613 3B10  
                                  l1445 2CA4                                    l1461 15A0  
                                  l4110 258A                                    l4102 253E  
                                  l4006 473E                                    l4014 4956  
                                  l4022 4816                                    l1535 34DC  
                                  l1623 41E8                                    l1551 47DA  
                                  l1447 2D08                                    l5000 33C6  
                                  l4120 25CA                                    l4112 258C  
                                  l4104 2552                                    l4040 23D2  
                                  l4032 23A6                                    l4200 202A  
                                  l1544 30DC                                    l4008 492E  
                                  l1609 4962                                    l1641 424E  
                                  l4026 4A58                                    l5002 33DC  
                                  l4130 2606                                    l4122 25D4  
                                  l4114 259C                                    l4106 2560  
                                  l4050 240C                                    l4042 23E2  
                                  l4034 23B2                                    l4210 2074  
                                  l4202 2030                                    l4018 484E  
                                  l1571 4884                                    l1483 191A  
                                  l4028 4A74                                    l5020 34B8  
                                  l5012 3456                                    l5004 33E4  
                                  l4140 2678                                    l4132 2614  
                                  l4124 25E2                                    l4116 25AE  
                                  l4108 256C                                    l4060 2438  
                                  l4052 2412                                    l4044 23F2  
                                  l4036 23C0                                    l4220 20C4  
                                  l4212 2080                                    l4204 2050  
                                  l4300 46D6                                    l1628 41F0  
                                  l1388 1082                                    l1636 4246  
                                  l1476 1ABA                                    l5100 14F6  
                                  l1492 4188                                    l1557 48F4  
                                  l1565 4514                                    l1493 4190  
                                  l5006 33EC                                    l4310 3CB4  
                                  l4150 26E4                                    l4142 2686  
                                  l4134 2642                                    l4118 25C4  
                                  l4126 25F4                                    l4070 2472  
                                  l4062 2448                                    l4054 2418  
                                  l4046 23F4                                    l4038 23C2  
                                  l4230 2106                                    l4222 20D0  
                                  l4214 208A                                    l4206 2060  
                                  l4302 46E6                                    l5110 151C  
                                  l5102 1502                                    l1647 484C  
                                  l5016 3494                                    l5008 3420  
                                  l4320 3CDA                                    l4312 3CBC  
                                  l4160 2732                                    l4152 26FE  
                                  l4144 26B0                                    l4128 2602  
                                  l4072 2488                                    l4064 2458  
                                  l4056 2426                                    l4048 23FC  
                                  l4240 2168                                    l4232 2112  
                                  l4224 20DC                                    l4216 20A0  
                                  l5040 3AC6                                    l5032 3A72  
                                  l5200 19D8                                    l5104 1504  
                                  l5050 45C6                                    l5018 34A6  
                                  l4330 3D12                                    l4322 3CE2  
                                  l4314 3CC0                                    l4306 3CA2  
                                  l4162 2734                                    l4154 271A  
                                  l4138 266C                                    l4146 26B4  
                                  l4090 24DC                                    l4074 2498  
                                  l4082 24B8                                    l4066 245A  
                                  l4058 2428                                    l4410 37B8  
                                  l4402 373C                                    l4250 21FE  
                                  l4242 2174                                    l4234 2122  
                                  l4226 20EA                                    l4218 20AC  
                                  l4170 1F7C                                    l1586 3BDA  
                                  l1594 475E                                    l5042 3AEE  
                                  l5034 3A80                                    l5026 3A3C  
                                  l5210 1A5A                                    l5130 15AE  
                                  l5122 152E                                    l5114 1522  
                                  l5106 1516                                    l5060 45EA  
                                  l5052 45C8                                    l4340 3D3E  
                                  l4332 3D18                                    l4324 3CF4  
                                  l4316 3CCE                                    l4308 3CA6  
                                  l4156 271E                                    l4148 26CE  
                                  l4092 24F6                                    l4084 24C8  
                                  l4076 24A0                                    l4068 2462  
                                  l4420 383C                                    l4412 37C6  
                                  l4404 376A                                    l4260 2254  
                                  l4252 221C                                    l4244 2190  
                                  l4236 213C                                    l4228 20F6  
                                  l4180 1FB8                                    l4172 1F88  
                                  l4500 395E                                    l5036 3A98  
                                  l5028 3A66                                    l5204 1A14  
                                  l5140 160E                                    l5132 15B0  
                                  l5220 1A84                                    l1597 4B44  
                                  l5070 49AC                                    l5062 45EC  
                                  l5054 45CA                                    l5046 45B4  
                                  l4334 3D2E                                    l4326 3CFC  
                                  l4342 3D44                                    l4318 3CD6  
                                  l4350 3EDA                                    l4158 272C  
                                  l4094 2506                                    l4086 24C8  
                                  l4078 24A4                                    l4414 37D8  
                                  l4406 377A                                    l4270 22BE  
                                  l4262 2258                                    l4254 2226  
                                  l4246 21BA                                    l4238 214C  
                                  l4190 1FEA                                    l4182 1FC8  
                                  l4174 1F96                                    l4502 399C  
                                  l4510 39DC                                    l5038 3AB4  
                                  l5222 1AA8                                    l5206 1A38  
                                  l5214 1A68                                    l5150 16BE  
                                  l5142 1648                                    l5134 15D4  
                                  l5126 153A                                    l5118 1528  
                                  l5302 4A2C                                    l4600 4612  
                                  l5064 45EE                                    l5056 45CC  
                                  l5048 45C4                                    l5240 457C  
                                  l4344 3D54                                    l4336 3D36  
                                  l4328 3D04                                    l4360 3F06  
                                  l4352 3EDE                                    l4096 2516  
                                  l4416 37E6                                    l4408 37A8  
                                  l4280 2320                                    l4272 22CA  
                                  l4264 2266                                    l4256 2234  
                                  l4248 21F0                                    l4192 1FF8  
                                  l4184 1FCE                                    l4176 1F98  
                                  l4424 4886                                    l3800 1AC8  
                                  l4440 368A                                    l4432 3636  
                                  l4512 39EE                                    l4504 39C4  
                                  l4520 42AE                                    l5216 1A76  
                                  l5208 1A46                                    l5160 1744  
                                  l5144 1668                                    l5136 15DC  
                                  l5152 16D0                                    l5128 158E  
                                  l5400 49E2                                    l5320 480A  
                                  l5072 4A80                                    l5066 499A  
                                  l5330 4ACA                                    l4602 4616  
                                  l5058 45D8                                    l5250 45A0  
                                  l5242 457E                                    l5234 4568  
                                  l5410 4762                                    l4346 3D5C  
                                  l4338 3D38                                    l4370 3F3E  
                                  l4362 3F0E                                    l4354 3EEC  
                                  l4098 2526                                    l4418 3836  
                                  l4290 2388                                    l4282 2334  
                                  l4274 22D8                                    l4266 2294  
                                  l4258 2246                                    l4194 1FFA  
                                  l4186 1FDE                                    l4178 1FA8  
                                  l4426 489C                                    l3810 1B08  
                                  l3802 1AD6                                    l4442 368C  
                                  l4434 364C                                    l4506 39D0  
                                  l4522 42BE                                    l4530 41DA  
                                  l4610 0856                                    l5170 17DC  
                                  l5162 1776                                    l5154 16F2  
                                  l5146 1676                                    l5138 15EA  
                                  l5402 49E8                                    l5090 4AE4  
                                  l5322 4812                                    l5314 47DE  
                                  l5074 4A84                                    l5306 4A50  
                                  l5068 49A8                                    l4604 462C  
                                  l5252 45A2                                    l5244 4580  
                                  l5236 4578                                    l5260 427C  
                                  l5420 478C                                    l5412 4762  
                                  l4380 3F78                                    l4372 3F54  
                                  l4364 3F20                                    l4356 3EF4  
                                  l4292 238A                                    l4284 234E  
                                  l4276 2302                                    l4196 200A  
                                  l4188 1FE4                                    l4428 48AC  
                                  l3900 1CC8                                    l3820 1B3A  
                                  l3812 1B0A                                    l3804 1AD8  
                                  l4444 369C                                    l4516 3A32  
                                  l4540 3012                                    l4524 4192  
                                  l4700 0C02                                    l4620 08AA  
                                  l4612 0860                                    l5180 18A4  
                                  l5164 1788                                    l5156 1702  
                                  l5092 14AE                                    l5340 3216  
                                  l5332 319C                                    l5404 49EE  
                                  l5316 47F2                                    l5084 4A9C  
                                  l5076 4A88                                    l5308 4A56  
                                  l5500 46B4                                    l5270 3DA6  
                                  l5262 3D66                                    l4606 4630  
                                  l5246 458C                                    l5238 457A  
                                  l5254 4250                                    l5422 4792  
                                  l5414 4772                                    l4382 3F80  
                                  l4374 3F5C                                    l4366 3F28  
                                  l4358 3EF8                                    l4390 3FC8  
                                  l4286 236A                                    l4294 2390  
                                  l4278 2306                                    l4198 201A  
                                  l3910 1D08                                    l3830 1B62  
                                  l3822 1B3C                                    l3806 1AE8  
                                  l3814 1B12                                    l4470 371A  
                                  l4454 36C6                                    l4446 36A0  
                                  l4438 3660                                    l4542 3020  
                                  l4550 3100                                    l4534 2F88  
                                  l4702 0C14                                    l4630 08EE  
                                  l4622 08B4                                    l4614 0870  
                                  l5182 18B6                                    l5190 192E  
                                  l5166 179E                                    l5174 1808  
                                  l5158 1734                                    l5094 14D2  
                                  l5350 3270                                    l5334 31AC  
                                  l5406 49F4                                    l5318 4802  
                                  l5078 4A96                                    l5326 4AD0  
                                  l5510 43F2                                    l5502 46C4  
                                  ?_pad 0011                                    l5280 3DCA  
                                  l5272 3DA8                                    l5264 3D76  
                                  l5328 4ABC                                    l5248 459E  
                                  l5424 464A                                    l5256 4254  
                                  l5416 477A                                    l4376 3F62  
                                  l4368 3F30                                    l4392 3FF6  
                                  l4296 2394                                    l4288 237A  
                                  l3920 1D32                                    l3912 1D14  
                                  l3904 1CDC                                    l3840 1B9C  
                                  l3832 1B72                                    l3824 1B42  
                                  l3816 1B22                                    l3808 1AF8  
                                  l4472 372A                                    l4464 36EE  
                                  l4456 36D0                                    l4448 36AE  
                                  l4552 313C                                    l4536 2FA8  
                                  l4480 3C00                                    l4528 41C8  
                                  l4800 1136                                    l4720 0CC4  
                                  l4704 0C1C                                    l4632 08FA  
                                  l4640 0910                                    l4624 08BC  
                                  l4616 087E                                    l5192 1952  
                                  l5184 18EA                                    l5176 1836  
                                  l5168 17AC                                    l5096 14E0  
                                  l5520 448C                                    l5360 32D4  
                                  l5352 3272                                    l5344 322A  
                                  l5336 31BA                                    l5440 3840  
                                  l5408 4B0C                                    l5088 4AF8  
                                  l4608 4B20                                    l5512 4402  
                                  l5504 43C0                                    l5600 28D0  
                                  l5290 3DEE                                    l5282 3DD2  
                                  l5274 3DB4                                    l5266 3D90  
                                  l5530 4968                                    l5434 466A  
                                  l5426 465A                                    l5258 4278  
                                  l5418 4784                                    l4378 3F68  
                                  l4394 4006                                    l4386 3F8A  
                                  l3930 1DA4                                    l3914 1D18  
                                  l3906 1CEC                                    l3922 1D38  
                                  l3850 1BC8                                    l3842 1BAE  
                                  l3834 1B82                                    l3826 1B50  
                                  l3818 1B28                                    l4466 36FA  
                                  l4458 36DA                                    l4554 3150  
                                  l4546 3090                                    l4538 2FFE  
                                  l4490 3C46                                    l4482 3C0E  
                                  l4810 117C                                    l4802 1144  
                                  l4730 0CFC                                    l4722 0CCC  
                                  l4714 0C60                                    l4706 0C36  
                                  l4650 099A                                    l4642 0936  
                                  l4634 0902                                    l4626 08CE  
                                  l4618 0886                                    l4562 47A0  
                                  l4570 4228                                    l5194 1976  
                                  l5098 14F2                                    l5522 4494  
                                  l5370 332C                                    l5362 32F2  
                                  l5354 327E                                    l5346 3232  
                                  l5338 3200                                    l5450 388E  
                                  l5442 3844                                    l5514 4412  
                                  l5506 43D2                                    l5610 2940  
                                  l5602 28D4                                    l5292 3E0A  
                                  l5284 3DDE                                    l5276 3DBC  
                                  l5268 3DA4                                    l5532 4978  
                                  l5436 467C                                    l5428 4666  
                                  l4580 44C4                                    l4396 402A  
                                  l4388 3FB8                                    l3940 1DFE  
                                  l3924 1D5E                                    l3932 1DB4  
                                  l3916 1D26                                    l3908 1CFA  
                                  l3860 1BDC                                    l3852 1BCC  
                                  l3844 1BBC                                    l3836 1B84  
                                  l3828 1B52                                    l4468 370A  
                                  l4556 3178                                    l4548 30CC  
                                  l4492 3C74                                    l4484 3C1A  
                                  l4476 3BDC                                    l4820 11A6  
                                  l4812 1180                                    l4804 114C  
                                  l4740 0D46                                    l4732 0D0A  
                                  l4716 0C72                                    l4724 0CD0  
                                  l4708 0C4E                                    l4660 0A0A  
                                  l4652 09B2                                    l4636 0906  
                                  l4628 08DC                                    l4572 423A  
                                  l5196 198C                                    l5380 4138  
                                  l5524 44B0                                    l5516 4472  
                                  l5372 333A                                    l5364 32F4  
                                  l5356 32BA                                    l5348 323E  
                                  l5452 389A                                    l5444 3872  
                                  l5460 40CC                                    l5700 2F4A  
                                  l5508 43E2                                    l5620 296C  
                                  l5612 294C                                    l5604 28F2  
                                  l5540 40BE                                    l5286 3DE6  
                                  l5278 3DBE                                    l5534 497C  
                                  l5438 467E                                    l4582 44C8  
                                  l4398 4030                                    l3950 1E2E  
                                  l3942 1E08                                    l3934 1DDA  
                                  l3926 1D92                                    l3918 1D28  
                                  l3870 1BF0                                    l3862 1BE0  
                                  l3854 1BD0                                    l3846 1BC0  
                                  l3838 1B8C                                    l4558 3188  
                                  l3790 3B40                                    l4494 3C88  
                                  l4486 3C2E                                    l4478 3BEC  
                                  l4910 1486                                    l4902 1450  
                                  l4830 11DA                                    l4822 11AC  
                                  l4814 1186                                    l4806 115E  
                                  l4750 0D8C                                    l4742 0D58  
                                  l4734 0D0E                                    l4726 0CD8  
                                  l4718 0C8E                                    l4654 09BC  
                                  l4646 096C                                    l4638 090A  
                                  l4566 41F2                                    l5198 199A  
                                  l5382 4146                                    l5518 4484  
                                  l5374 333C                                    l5366 32F8  
                                  l5358 32C6                                    l5454 3934  
                                  l5446 3874                                    l5470 4126  
                                  l5462 40FE                                    l5702 2F7C  
                                  l5390 4AB4                                    l5294 49FE  
                                  l5614 295C                                    l5606 2910  
                                  l5550 2758                                    l5710 430A  
                                  l5542 40C2                                    l5480 353C  
                                  l5528 4964                                    l4592 45FE  
                                  l4576 48BE                                    l4584 44DC  
                                  l3960 1E56                                    l3952 1E32  
                                  l3944 1E16                                    l3936 1DEA  
                                  l3928 1D94                                    l3880 1C2A  
                                  l3872 1BF4                                    l3864 1BE4  
                                  l3856 1BD4                                    l3848 1BC4  
                                  l3792 3B5E                                    l3784 3B12  
                                  l4488 3C42                                    l4912 148C  
                                  l4904 1462                                    l4816 1192  
                                  l4808 116C                                    l4824 11B2  
                                  l4832 11E0                                    l4840 1278  
                                  l4760 0EA0                                    l4752 0DF0  
                                  l4736 0D20                                    l4744 0D60  
                                  l4728 0CEA                                    l4664 0A40  
                                  l4648 097E                                    l4920 2A40  
                                  l5384 416C                                    l5720 4418  
                                  l5368 331C                                    l5448 3876  
                                  l5464 4100                                    l5392 4AB6  
                                  l5632 298C                                    l5608 292E  
                                  l5560 2774                                    l5552 275C  
                                  l5712 4310                                    l5536 4034  
                                  l5490 35EA                                    l5482 3558  
                                  l5474 34DE                                    l4594 460A  
                                  l4586 450A                                    l3970 1EB0  
                                  l3962 1E64                                    l3954 1E42  
                                  l3946 1E18                                    l3890 1C7C  
                                  l3882 1C46                                    l3874 1BF8  
                                  l3866 1BE8                                    l3858 1BD8  
                                  l4498 393E                                    l3794 3B94  
                                  l3786 3B24                                    l4906 146E  
                                  l4850 12E2                                    l4842 1296  
                                  l4834 1238                                    l4826 11C4  
                                  l4818 11A2                                    l4770 0F5E  
                                  l4762 0ED4                                    l4754 0E48  
                                  l4746 0D68                                    l4738 0D2E  
                                  l4690 0BA2                                    l4682 0ADA  
                                  l4666 0A52                                    l4658 09E4  
                                  l4930 2AAE                                    l4922 2A42  
                                  l5378 4130                                    l5722 441E  
                                  l5466 4102                                    l5458 40C8  
                                  l5386 4AA0                                    l5394 49CC  
                                  l5298 4A22                                    l5650 29BC  
                                  l5626 297C                                    l5570 27C0  
                                  l5562 277A                                    l5554 2760  
                                  l5546 2740                                    l5730 4364  
                                  l5714 4336                                    l5538 4038  
                                  l5492 361E                                    l5484 358C  
                                  l5476 34FA                                    l5740 4B32  
                                  l4588 450E                                    l3980 1F1A  
                                  l3972 1EBE                                    l3964 1E7A  
                                  l3948 1E26                                    l3956 1E44  
                                  l3892 1C8A                                    l3884 1C56  
                                  l3868 1BEC                                    l3876 1BFC  
                                  l3788 3B36                                    l4908 1476  
                                  l4860 1320                                    l4852 12E6  
                                  l4844 12B2                                    l4836 126C  
                                  l4828 11D6                                    l4780 1032  
                                  l4772 0F6E                                    l4764 0F06  
                                  l4756 0E7C                                    l4748 0D78  
                                  l4692 0BAA                                    l4684 0B0E  
                                  l4668 0A6E                                    l4676 0A8A  
                                  l4940 2AEA                                    l4932 2AB6  
                                  l4924 2A5C                                    l5724 4444  
                                  l5468 411A                                    l5388 4AA4  
                                  l5396 49D0                                    l5644 29AC  
                                  l5580 2836                                    l5572 27CA  
                                  l5564 278A                                    l5556 2764  
                                  l5548 2746                                    l5732 436A  
                                  l5716 4348                                    l5486 359A  
                                  l5478 3508                                    l5742 4B3E  
                                  l3990 1F54                                    l3982 1F3A  
                                  l3974 1EF8                                    l3958 1E52  
                                  l3894 1C8C                                    l3886 1C6C  
                                  l3878 1C00                                    l3798 1ABC  
                                  l4870 1352                                    l4862 1328  
                                  l4854 12F6                                    l4846 12C4  
                                  l4838 1274                                    l4790 107A  
                                  l4782 1046                                    l4774 0FA2  
                                  l4766 0F1C                                    l4758 0E82  
                                  l4686 0B14                                    l4694 0BDC  
                                  l4678 0AA4                                    l4942 2AFA  
                                  l4934 2AC0                                    l4926 2A86  
                                  l4918 2A30                                    l5726 4456  
                                  l5670 2D68                                    l5398 49DC  
                                  l5638 299C                                    l5590 2896  
                                  l5582 2842                                    l5574 27E8  
                                  l5566 2798                                    l5558 2768  
                                  l5734 4390                                    l5750 3E36  
                                  l5488 35CE                                    l3992 1F5A  
                                  l3984 1F3E                                    l3968 1EA4  
                                  l3976 1EFA                                    l3896 1C96  
                                  l3888 1C78                                    l4872 1358  
                                  l4880 13A8                                    l4864 1336  
                                  l4856 1308                                    l4848 12D2  
                                  l4792 109E                                    l4776 0FF8  
                                  l4784 104A                                    l4768 0F4E  
                                  l4696 0BEC                                    l4688 0B6E  
                                  l4960 2BC2                                    l4952 2B86  
                                  l4936 2AC6                                    l4928 2A8E  
                                  l5672 2D9A                                    l5664 2D0A  
                                  l5496 4692                                    l5592 28B4  
                                  l5576 2806                                    l5568 27AE  
                                  l5584 2852                                    l5736 43A2  
                                  l5760 3E6C                                    l5752 3E4C  
                                  l3994 1F68                                    l3986 1F4C  
                                  l3978 1F0A                                    l3898 1CB8  
                                  l4890 13F8                                    l4882 13BA  
                                  l4874 137E                                    l4866 133E  
                                  l4858 1310                                    l4794 1102  
                                  l4786 105A                                    l4778 0FFE  
                                  l4698 0BF0                                    l4970 2C7A  
                                  l4962 2BC8                                    l4954 2B98  
                                  l4946 2B3A                                    l4938 2ACE  
                                  l5690 2ED8                                    l5674 2DCC  
                                  l5682 2E10                                    l5666 2D1C  
                                  l5498 46A4                                    l5658 29CC  
                                  l5586 285A                                    l5578 2824  
                                  l5762 3E74                                    l5770 3EC2  
                                  l5754 3E50                                    l5746 3E2A  
                                  l3996 1F6A                                    l3988 1F52  
                                  l4892 1400                                    l4884 13D4  
                                  l4876 139A                                    l4868 1346  
                                  l4796 1112                                    l4788 106E  
                                  l4980 2CE0                                    l4972 2C94  
                                  l4948 2B4C                                    l4956 2BAC  
                                  l4964 2C26                                    l5684 2E42  
                                  l5676 2DFE                                    l5668 2D42  
                                  l5588 2878                                    l5764 3E7C  
                                  l5756 3E54                                    l5748 3E32  
                                  l4990 336A                                    l4894 1410  
                                  l4886 13DA                                    l4878 13A2  
                                  l4798 1124                                    l4974 2CB4  
                                  l4966 2C42                                    l4958 2BBC  
                                  l5686 2E74                                    l5678 2E0C  
                                  l5598 28CA                                    l5758 3E64  
                                  l5880 340A                                    l4992 3386  
                                  l4984 334E                                    l4896 1416  
                                  l4888 13EC                                    l4976 2CBA  
                                  l4968 2C60                                    l5688 2EA6  
                                  l5696 2EE6                                    l5768 3E84  
                                  l4994 33BC                                    l4986 3362  
                                  l4898 141C                                    l4978 2CCA  
                                  l5698 2F18                                    l5874 3E9C  
                                  l4996 33C0                                    l4988 3366  
                                  l5876 29F0                                    l5878 1560  
                                  STR_1 0852                                    STR_2 084F  
                                  STR_3 0824                                    STR_4 082C  
                                  STR_5 082C                                    STR_6 0824  
                                  STR_7 082C                                    STR_8 082C  
                                  STR_9 0828                                    u3110 3B24  
                                  u3111 3B20                                    u4000 234E  
                                  u3200 1B62                                    u3120 3B36  
                                  _LATD 000F8C                                    u4001 234A  
                                  u3201 1B5E                                    u3121 3B32  
                                  u4010 2388                                    u3210 1B72  
                                  u3130 3B5E                                    u4011 2384  
                                  u3211 1B6E                                    u3131 3B5A  
                                  u4020 3CB4                                    u4100 3F20  
                                  u3300 1CB8                                    u3220 1BAE  
                                  u3140 3B94                                    u4021 3CB0  
                                  u4101 3F1C                                    u3301 1CB4  
                                  u3221 1BAA                                    u3141 3B90  
                                  u4030 3CCE                                    u4110 3F3E  
                                  u3310 1CC8                                    u3230 1BBC  
                                  u3150 1AD6                                    u4031 3CCA  
                                  u4111 3F3A                                    u3311 1CC4  
                                  u3231 1BB8                                    u3151 1AD2  
                                  u4040 3CF4                                    u4120 3F54  
                                  u4200 37E6                                    u3400 1E26  
                                  u3320 1CFA                                    u3240 1C2A  
                                  u3160 1AE8                                    u5000 0FF8  
                                  u4041 3CF0                                    u4121 3F50  
                                  u4201 37E2                                    u3401 1E22  
                                  u3321 1CF6                                    u3241 1C26  
                                  u3161 1AE4                                    u5001 0FF4  
                                  u4050 3D12                                    u4130 3F78  
                                  u4210 3836                                    u3410 1E42  
                                  u3330 1D08                                    u3250 1C42  
                                  u3170 1AF8                                    u5010 1046  
                                  u4051 3D0E                                    u4131 3F74  
                                  u4211 3832                                    u3411 1E3E  
                                  u3331 1D04                                    u3251 1C3C  
                                  u3171 1AF4                                    u5011 1042  
                                  u4060 3D2E                                    u4140 3FB8  
                                  u4220 489C                                    u3500 1F1A  
                                  u3420 1E52                                    u3340 1D26  
                                  u3260 1C44                                    u3180 1B3A  
                                  u4300 3BEC                                    u5100 1296  
                                  u5020 106E                                    u4061 3D2A  
                                  u4141 3FB4                                    u4221 4898  
                                  u3501 1F16                                    u3421 1E4E  
                                  u3341 1D22                                    u3181 1B36  
                                  u4301 3BE8                                    u5101 1292  
                                  u5021 106A                                    u4070 3D54  
                                  u4150 3FF6                                    u3510 1F3A  
                                  u3430 1E64                                    u3350 1D5E  
                                  u3270 1C6C                                    u3190 1B50  
                                  u4230 364C                                    u4310 3C0E  
                                  u5110 12B2                                    u5030 1112  
                                  u4071 3D50                                    u4151 3FF2  
                                  u3511 1F36                                    u3431 1E60  
                                  u3351 1D5A                                    u3271 1C68  
                                  u3191 1B4C                                    u4231 3648  
                                  u4311 3C0A                                    u5111 12AE  
                                  u5031 110E                                    u6000 468E  
                                  u4080 3EEC                                    u3600 23C0  
                                  u4160 402A                                    u3520 1F4C  
                                  u3440 1E7A                                    u3360 1DA4  
                                  u3280 1C8A                                    u4240 3680  
                                  u4400 3A2A                                    u4320 3C64  
                                  u5200 144C                                    u5120 12C4  
                                  u5040 1124                                    u6001 468A  
                                  u4081 3EE8                                    u3601 23BC  
                                  u4161 4026                                    u3521 1F48  
                                  u3441 1E76                                    u3361 1DA0  
                                  u3281 1C86                                    u4321 3C60  
                                  u5121 12C0                                    u5041 1120  
                                  u4090 3F06                                    u3610 23D2  
                                  u4170 376A                                    u3530 1F68  
                                  u3450 1E90                                    u3370 1DDA  
                                  u3290 1CAA                                    u4250 36AE  
                                  u4330 3C74                                    u4410 42F6  
                                  u5210 1462                                    u5130 12D2  
                                  u5050 1136                                    u6010 3886  
                                  u4091 3F02                                    u3611 23CE  
                                  u4171 3766                                    u3531 1F64  
                                  u3451 1E8C                                    u3371 1DD6  
                                  u3291 1CA6                                    u4251 36AA  
                                  u4331 3C70                                    u5211 145E  
                                  u5131 12CE                                    u5051 1132  
                                  u6011 3882                                    u3700 258A  
                                  u3620 23E2                                    u4180 37A8  
                                  u3460 1EA4                                    u3380 1DEA  
                                  u4260 36C2                                    u4340 397E  
                                  u4500 308C                                    u3540 475E  
                                  u4420 4308                                    u5140 1308  
                                  u5060 1144                                    u5300 2B82  
                                  u5220 2A40                                    u6020 4112  
                                  u6100 2E42                                    u3701 2586  
                                  u3621 23DE                                    u4181 37A4  
                                  u3461 1EA0                                    u3381 1DE6  
                                  u4261 36BE                                    u4245 3676  
                                  u4501 3088                                    u3541 475A  
                                  u4421 4304                                    u5141 1304  
                                  u5061 1140                                    u5221 2A3C  
                                  u6021 410E                                    u6101 2E3E  
                                  u6030 4998                                    u3710 25AE  
                                  u3630 2426                                    u4190 37C6  
                                  u3470 1EBE                                    u3390 1E16  
                                  u4270 36EA                                    u4350 399C  
                                  u4510 30B0                                    u3550 4956  
                                  u4430 41C2                                    u5150 1336  
                                  u5070 115E                                    u5310 2B98  
                                  u5230 2A5C                                    u6110 2E74  
                                  u6031 4994                                    u3711 25AA  
                                  u3631 2422                                    u4191 37C2  
                                  u3471 1EBA                                    u3391 1E12  
                                  u4271 36E6                                    u4351 3998  
                                  u3551 4952                                    u4431 41BC  
                                  u5151 1332                                    u5071 115A  
                                  u5311 2B94                                    u5231 2A58  
                                  u6111 2E70                                    u5400 33BC  
                                  u3800 26CE                                    u3720 25C4  
                                  u3640 2438                                    u3480 1EF8  
                                  u4280 370A                                    u4360 39C4  
                                  u4520 30CC                                    u3560 487E  
                                  u4440 41C4                                    u5160 13BA  
                                  u5080 116C                                    u4600 423A  
                                  u5320 2C00                                    u5240 2A86  
                                  u6120 2EA6                                    u5401 33B8  
                                  u3801 26CA                                    u3721 25C0  
                                  u3641 2434                                    u3481 1EF4  
                                  u4281 3706                                    u4361 39C0  
                                  u4345 3974                                    u4521 30C8  
                                  u4417 42EC                                    u3561 4878  
                                  u5161 13B6                                    u5081 1168  
                                  u4601 4236                                    u5241 2A82  
                                  u6121 2EA2                                    u6041 2750  
                                  u4610 48EE                                    u5410 33D8  
                                  u3810 26FE                                    u3730 25E2  
                                  u3650 2448                                    u3490 1F0A  
                                  u4290 371A                                    u4370 39EE  
                                  u4530 3120                                    u3570 4880  
                                  u4450 41DA                                    u5170 13D4  
                                  u5090 11C4                                    u5330 2C42  
                                  u5250 2AEA                                    u6130 2ED8  
                                  u6050 278A                                    u4611 48E8  
                                  u5411 33D4                                    u3811 26FA  
                                  u3731 25DE                                    u3651 2444  
                                  u3491 1F06                                    u4291 3716  
                                  u4371 39EA                                    u4515 30A6  
                                  u4451 41D6                                    u5171 13D0  
                                  u5091 11C0                                    u5331 2C3E  
                                  u5251 2AE6                                    u6131 2ED4  
                                  u6051 2786                                    u4620 48F0  
                                  u5420 348E                                    u3820 272C  
                                  u3740 2602                                    u3660 2488  
                                  u3900 2060                                    u4540 313C  
                                  u4460 2FD0                                    u5180 13EC  
                                  u4700 08DC                                    u5500 3AEE  
                                  u3580 4846                                    u5340 2C60  
                                  u5260 2B34                                    u6140 2F18  
                                  u6060 2798                                    u5421 3488  
                                  u3821 2728                                    u3741 25FE  
                                  u3661 2484                                    u3901 205C  
                                  u4541 3138                                    u5181 13E8  
                                  u4701 08D8                                    u5501 3AEA  
                                  u3581 4840                                    u5341 2C5C  
                                  u5325 2BEE                                    u5261 2B2E  
                                  u6141 2F14                                    u6061 2794  
                                  u5510 49CA                                    u4630 44DC  
                                  u5430 3490                                    u3750 2614  
                                  u3670 24C8                                    u3910 21DA  
                                  u3830 1F96                                    u4390 3A28  
                                  u4550 3178                                    u4470 2FFE  
                                  u5190 144A                                    u4710 08EE  
                                  u3590 4848                                    u5350 2C7A  
                                  u5270 2B36                                    u6150 2F4A  
                                  u6070 2D9A                                    u5511 49C6  
                                  u6207 3500                                    u4631 44D8  
                                  u3751 2610                                    u3671 24C4  
                                  u3831 1F92                                    u4391 3A22  
                                  u4551 3174                                    u4535 3116  
                                  u4471 2FFA                                    u5191 1444  
                                  u4711 08EA                                    u5351 2C76  
                                  u6151 2F46                                    u6071 2D96  
                                  u4640 450A                                    u5440 34A6  
                                  u3760 2642                                    u3680 253E  
                                  u3920 2234                                    u3840 1FA8  
                                  u4480 3020                                    u4800 0AD6  
                                  u4720 0936                                    u4560 47D4  
                                  u5360 2C94                                    u5280 2B4C  
                                  u5600 16B8                                    u6160 2F7C  
                                  u6080 2DCC                                    u5520 4A96  
                                  u6217 352E                                    u4641 4506  
                                  u5441 34A2                                    u3761 263E  
                                  u3681 253A                                    u3921 2230  
                                  u3841 1FA4                                    u4385 3A00  
                                  u4481 301C                                    u4465 2FC6  
                                  u4801 0AD2                                    u4721 0932  
                                  u4561 47CE                                    u5361 2C90  
                                  u5281 2B48                                    u5601 16B2  
                                  u6161 2F78                                    u6081 2DC8  
                                  u5521 4A92                                    u4650 462C  
                                  u5450 34B8                                    u3770 2658  
                                  u3690 2560                                    u3930 2254  
                                  u3850 1FB8                                    u4810 0B6A  
                                  u4730 0966                                    u4570 47D6  
                                  u5370 2CA4                                    u5290 2B80  
                                  u5610 16BA                                    u6090 2DFE  
                                  u5530 4B0A                                    u6227 3562  
                                  u4651 4628                                    u5451 34B4  
                                  u3771 2654                                    u3691 255C  
                                  u3931 2250                                    u3915 21D0  
                                  u3851 1FB4                                    u4811 0B66  
                                  u4731 0960                                    u5371 2CA0  
                                  u5291 2B7A                                    u6091 2DFA  
                                  u5531 4B06                                    u4660 4646  
                                  u3780 266C                                    u3940 2266  
                                  u3860 1FF8                                    u4900 0CEA  
                                  u4820 0BDC                                    u4740 0968  
                                  u5460 3A66                                    u4580 4222  
                                  u5380 2CB4                                    u5700 1952  
                                  u5620 16D0                                    u5540 4AF6  
                                  _RCEN 007E2B                                    _RCIF 007CF5  
                                  u6237 3592                                    u4661 4642  
                                  u3781 2668                                    u3941 2262  
                                  u3861 1FF4                                    u4901 0CE6  
                                  u4821 0BD8                                    u5461 3A62  
                                  u4581 421C                                    u5381 2CB0  
                                  u5701 194E                                    u5621 16CC  
                                  u5541 4AF2                                    u5390 3386  
                                  u3790 2686                                    u3950 2294  
                                  u3870 200A                                    u4910 0CFC  
                                  u4830 0C02                                    u4750 097E  
                                  u5470 3A98                                    u4590 4224  
                                  u5710 1976                                    u5630 1702  
                                  u5550 14D2                                    u4670 4B2E  
                                  u6247 35C0                                    u5391 3382  
                                  u3791 2682                                    u3951 2290  
                                  u3871 2006                                    u4495 3034  
                                  u4911 0CF8                                    u4831 0BFE  
                                  u4751 097A                                    u5471 3A94  
                                  u5711 1972                                    u5631 16FE  
                                  u5551 14CE                                    u4671 4B2A  
                                  u3960 22AA                                    u3880 201A  
                                  u4496 303E                                    u4920 0D0A  
                                  u4840 0C14                                    u4760 0A0A  
                                  u4680 087E                                    u5480 3AB4  
                                  u5720 1A38                                    u5640 1744  
                                  u5560 15A0                                    u5800 4A1E  
                                  u6257 35F4                                    u3961 22A6  
                                  u3881 2016                                    u4497 304E  
                                  u4921 0D06                                    u4841 0C10  
                                  u4761 0A06                                    u4681 087A  
                                  u5481 3AB0                                    u5721 1A34  
                                  u5641 1740                                    u5561 159C  
                                  u5801 4A1A                                    u5730 4274  
                                  u3970 22BE                                    u3890 2050  
                                  u4930 0D20                                    u4850 0C36  
                                  u4770 0A3A                                    u4690 08CE  
                                  u5490 3AC6                                    u5650 1788  
                                  u5570 15AE                                    u5810 4A3C  
                                  u6267 3628                                    u3971 22BA  
                                  u3891 204C                                    u4931 0D1C  
                                  u4851 0C32                                    u4771 0A34  
                                  u4691 08CA                                    u5491 3AC2  
                                  u5651 1784                                    u5571 15AA  
                                  u5811 4A38                                    u5740 429C  
                                  u3980 22D8                                    u4940 0D2E  
                                  u4860 0C5C                                    u4780 0A3C  
                                  u5660 1836                                    u5580 15D4  
                                  u5900 326C                                    u5820 4A4C  
                                  u3981 22D4                                    u4941 0D2A  
                                  u4861 0C58                                    u5661 1832  
                                  u5581 15D0                                    u5901 3268  
                                  u5821 4A48                                    u5750 42AC  
                                  u3990 2320                                    u4950 0D58  
                                  u4870 0C72                                    u4790 0A52  
                                  u5670 189E                                    u5590 160E  
                                  u5910 32B6                                    u5830 47EE  
                                  u5751 42A8                                    u3991 231C  
                                  u4951 0D54                                    u4871 0C6E  
                                  u4791 0A4E                                    u5671 1898  
                                  u5591 160A                                    u5911 32B2  
                                  u5831 47EA                                    u5760 3D9E  
                                  u4960 0EA0                                    u4880 0C8E  
                                  u5680 18A0                                    u5920 32D4  
                                  u5840 4802                                    u5737 426A  
                                  u4961 0E9C                                    u4881 0C8A  
                                  u5921 32D0                                    u5841 47FE  
                                  u5770 3E0A                                    u4970 0F06  
                                  u4890 0CC4                                    u5690 18B6  
                                  u5930 32E4                                    u5850 4AE0  
                                  u5771 3E06                                    u5747 4292  
                                  u4971 0F02                                    u4891 0CC0  
                                  u5691 18B2                                    u5931 32E0  
                                  u5851 4ADC                                    u5780 3E28  
                                  u5860 4ACA                                    u4980 0F4E  
                                  u5940 32F2                                    u5781 3E24  
                                  u5765 3D98                                    u5861 4AC6  
                                  u4981 0F4A                                    u5941 32EE  
                                  u4990 0F5E                                    u5950 332C  
                                  u5870 31AC                                    u5790 4A0E  
                                  u4991 0F5A                                    u5951 3328  
                                  u5871 31A8                                    u5791 4A0A  
                                  u5960 333A                                    u5880 31BA  
                                  u5961 3336                                    u5881 31B6  
                                  u5970 4188                                    u5890 3216  
                                  u5971 4184                                    u5891 3212  
                                  u5980 4772                                    u5981 476E  
                                  u5990 465A                                    u5991 4656  
                                  _RSEN 007E29                                    _TXIF 007CF4  
                                  _Date 0104                                    _Year 0100  
                                  _Sluz 0200                                    _dbuf 010E  
                                  _atoi 334E                                    _main 3E2A  
                       ?_RTC_Read_Clock 0001                                    _hour 0108  
                      __end_of_I2C_Nack 4AF8                      __size_of_LCD_Clear 0014  
                                  _play 3D66                                    _prec 00F6  
                      __end_of_I2C_Init 4ABA                        __end_of_I2C_Read 4816  
                                  _nout 00F2                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
              __end_of_USART_SendString 499A                                    _xtoa 2A30  
                      __end_of_I2C_Stop 4AE4                           ___fpclassifyf 393E  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0000                         ___fldiv@new_exp 003D  
                         _LCD_String_xy 4760                            _tolower$1681 000D  
                          ___param_bank 000000                         __end_of_ReadADC 393E  
                       __end_of_ReadLUZ 4130                         __end_of_Estados 2F88  
      RTC_Read_Clock@read_clock_address 0004                                   ??_pad 0017  
                      __end_of_LCD_Char 45FE                        __end_of_LCD_Init 49FC  
                         ReadADC@result 0064                            LCD_MSdelay@i 0003  
                          LCD_MSdelay@j 0005                           ___fltol@sign1 005D  
                                 ?_atoi 0008                         __end_of___fladd 1F7C  
                                 ?_main 0001                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                         __end_of___fldiv 2740  
                       __end_of___awdiv 3D66                         __end_of___flneg 48BE  
                                 ?_play 0006                                   STR_10 0828  
                                 STR_11 0824                                   STR_20 080D  
                                 STR_12 0840                                   STR_21 080D  
                                 STR_13 083C                                   STR_14 0834  
                                 STR_22 0801                                   STR_31 084C  
                                 STR_15 0830                                   STR_23 0814  
                                 STR_16 0848                                   STR_24 081C  
                                 STR_33 084C                                   STR_17 0838  
                                 STR_18 0844                                   STR_27 0818  
                                 STR_19 080D                                   STR_28 0820  
                       __end_of___awmod 3F8A                         __end_of___flmul 23A6  
                       __end_of___flsub 471C                         __end_of___fltol 373C  
                       ___awdiv@divisor 0003                                   ?_xtoa 001C  
                                 _LATD0 007C60                                   _LATD1 007C61  
                                 _LATE0 007C68                                   _LATE1 007C69  
                                 _LATE2 007C6A                         ___awdiv@counter 0005  
                                 _RCREG 000FAE                                   _RCSTA 000FAB  
                          vfpfcnvrt@fmt 00A6                            vfpfcnvrt@llu 00AE  
                                 _SPBRG 000FAF                                   _TRISA 000F92  
                                 _TRISD 000F95                                   _SSPIE 007CEB  
                                 _TRISE 000F96                                   _SSPIF 007CF3  
                                 _TXREG 000FAD                                   _TXSTA 000FAC  
                                 _Month 0102                                   _Stemp 015E  
                                 _flags 00F8                                   _fputc 3B12  
                       __end_of_isalpha 47DC                                   _fputs 471C  
                       __end_of_isdigit 48F6                       __end_of_I2C_Ready 4B32  
                                 atoi@n 0015                                   pad@fp 0011  
                                 atoi@s 0008                                   _width 00F4  
                                 _putch 4B44                         __end_of_islower 484E  
                       __end_of_isspace 4516                       __end_of_I2C_Start 4A2A  
                     __end_of_I2C_Write 4AA0                         __end_of_isupper 4886  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                   __size_of_LCD_String 005E                         __end_of_sprintf 44C4  
                        ?___fpclassifyf 0001                         __end_of_tolower 41F2  
                                 xtoa@c 0041                                   xtoa@d 001E  
                                 xtoa@i 003F                                   xtoa@n 0037  
                                 xtoa@p 0033                                   xtoa@w 0035  
                                 xtoa@x 0026                         __end_of_strncmp 3B12  
                       __end_of_toupper 4250                           ??_PlayCancion 0013  
                        ?_LCD_String_xy 000B                           ??_Rainy_State 005F  
                           ?_USART_Init 0060                            _toupper$1696 000D  
               __end_of_LCD_Custom_Char 4690                         __initialization 4516  
                          __end_of_atoi 34DE                            __end_of_main 3EDA  
                          __end_of_play 3E2A                            __end_of_xtoa 2D0A  
                             ??_I2C_Ack 0001                   __size_of_Alarm_Status 0012  
                                ??_atoi 000A                                  ??_main 00DE  
                                ??_play 000C                                  ??_xtoa 0027  
                     __end_of_LCD_Clear 4B20                           __activetblptr 000002  
                  __end_of_Cloudy_State 4472                                  ?_fputc 0001  
                                ?_fputs 000A                                  _ADRESH 000FC4  
                                _ADRESL 000FC3                        ___awdiv@dividend 0001  
                                ?_putch 0001                        LCD_String_xy@msg 000C  
                      LCD_String_xy@pos 000B                        LCD_String_xy@row 000E  
                                _OSCCON 000FD3                           vfpfcnvrt@done 00B6  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _TRISC6 007CA6  
                                _TRISC7 007CA7                                  _SSPBUF 000FC9  
                      __end_of___xxtofl 334E                               ??_ReadADC 0062  
                             ??_ReadLUZ 0003                               ??_Estados 005F  
                      __end_of_delay_us 49CC                            _Alarm_Status 4B32  
                      ??_RTC_Calendario 00DC                            vfprintf@cfmt 00CA  
                                ___flge 373C                                  ___fleq 3F8A  
                             ??___fladd 004D                                  ___wmul 4A58  
                             ??___fldiv 0034                               ??___awdiv 0005  
                             ??___flneg 0005                               ??___awmod 0005  
                             ??___flmul 001B                               ??___flsub 005D  
                             ??___fltol 0059                                  _efgtoa 0856  
                   __end_of_PlayCancion 3636                                  _floorf 2F88  
                  __size_of_LCD_MSdelay 004A                     __end_of_Rainy_State 43BE  
                                clear_0 453C                                  clear_1 4548  
                                clear_2 4554                        ___awdiv@quotient 0007  
                       ___awmod@divisor 0003                                  isa$std 000001  
                                _tempar 00EE                                  _result 00FA  
                       ___awmod@counter 0005                      _I2C_Repeated_Start 4A2A  
                                pad@buf 0013                    __size_of_LCD_Command 004C  
                                _strcpy 42AE                                  _strlen 492E  
                                fputc@c 0001                                  fputs@c 000E  
                      LCD_Custom_Char@i 000C                                  fputs@i 000F  
                             ?_I2C_Nack 0001                                  fputs@s 000A  
                             ??_isalpha 0003                               ??_isdigit 0003  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                                play@fn 0011                               ?_I2C_Stop 0001  
                       ___fpclassifyf@e 0009                         ___fpclassifyf@u 000B  
                       ___fpclassifyf@x 0001                               ??_islower 0003  
            __end_of_USART_TransmitChar 4AD0                            __mediumconst 0000  
                             ??_isspace 0003                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                   __size_of_USART_Init 0094                                  putch@c 0001  
                      __end_of_vfprintf 4192                               ??_sprintf 005F  
                             ??_tolower 0009                                  xtoa@fp 001C  
                             ??_strncmp 0007                               ??_toupper 0009  
                            ___flge@ff1 002C                              ___flge@ff2 0030  
                       ??___fpclassifyf 0005                            ___xxtofl@arg 000F  
                          ___xxtofl@exp 000E                            ___xxtofl@val 0005  
                            ___fleq@ff1 0001                              ___fleq@ff2 0005  
                             ?_LCD_Char 0001                              __accesstop 0060  
               __end_of__initialization 455C                               ?_LCD_Init 0001  
                       ??_LCD_String_xy 000E                              ___flneg@f1 0001  
                         ___rparam_used 000001                              ___fltol@f1 0055  
                  ??_I2C_Repeated_Start 0002                        ?_LCD_Custom_Char 0009  
                        __pcstackCOMRAM 0001                             play@CiclosL 000F  
                          __pidataBANK1 48F6                           __end_of_fputc 3BDC  
                         __end_of_fputs 4760                           __end_of_putch 4B46  
                          ??_LCD_String 000B                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                        ??_RTC_Read_Clock 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00E2  
                            __pbssBANK1 0100                              __pbssBANK2 0200  
                            ??_LCD_Char 0007                              _character1 01E5  
                            _character2 01DD                              _character3 01D5  
                            ??_LCD_Init 0009                      __end_of_LCD_String 42AE  
                     ?_USART_SendString 0002                             _PlayCancion 34DE  
                           _Rainy_State 4364                      ??_USART_SendString 0004  
                          I2C_Read@flag 0001                           ??_Sunny_State 005F  
                               ?___flge 002C                                 ?___fleq 0001  
                        I2C_Read@buffer 0002                                 ?___wmul 0001  
                        LCD_MSdelay@val 0001                                 ?_efgtoa 0060  
                               ?_floorf 0045                                 _I2C_Ack 4AF8  
                               _ACKSTAT 007E2E                                 ?_strcpy 0001  
                               ?_strlen 0001                   __size_of_Cloudy_State 005A  
                             ?___xxtofl 0005                               ?_delay_us 0001  
                    __size_of_vfpfcnvrt 060E                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                             _I2C_Ready 4B20                                 _ReadADC 3840  
                             _I2C_Start 49FC                                 _ReadLUZ 40C8  
                             _I2C_Write 4A7E                                 _Estados 2D0A  
                         LCD_String@msg 0009                            ??_USART_Init 005F  
                               __Hparam 0000                                 __Lparam 0000  
                          _Cloudy_State 4418                         __size_of___flge 0104  
                       __size_of___fleq 00AA                                 ___fladd 1ABC  
                     _RTC_Read_Calendar 43BE                                 ___fldiv 23A6  
                               ___awdiv 3CA2                                 ___flneg 4886  
                               ___awmod 3EDA                                 ___flmul 1F7C  
                               ___flsub 46D6                                 ___fltol 3636  
                       __size_of___wmul 0026                               ?_vfprintf 00C4  
                          __psmallconst 0800                         __size_of_efgtoa 0C58  
                    ?_RTC_Read_Calendar 0001                         __size_of_floorf 0212  
                               _data_in 00FC                                 __pcinit 4516  
                               __ramtop 0800                                 __ptext0 3E2A  
                               __ptext1 4034                                 __ptext2 430A  
                               __ptext3 4364                                 __ptext4 2740  
                               __ptext5 4690                                 __ptext6 43BE  
                               __ptext7 4AD0                                 __ptext8 49FC  
                               __ptext9 4A2A                     USART_SendString@out 0002  
                   __end_of_Sunny_State 4364                         __size_of_strcpy 005C  
                       __size_of_strlen 0036                          USART_Init@temp 0064  
                          __size_of_pad 00C6                                 _isalpha 47A0  
                               _isdigit 48BE                              ??___xxtofl 0009  
                      ___awmod@dividend 0001                     ??_RTC_Read_Calendar 0003  
                               _islower 4816                                 _isspace 44C4  
                            ??_delay_us 0003                                 _isupper 484E  
                               efgtoa@c 0066                                 efgtoa@d 0084  
                               efgtoa@e 009C                                 efgtoa@f 0062  
                               efgtoa@g 0098                                 efgtoa@h 008E  
                               efgtoa@i 0096                                 efgtoa@l 0092  
                               efgtoa@m 007E                                 efgtoa@n 009E  
                               efgtoa@p 0088                                 efgtoa@t 0078  
                               efgtoa@u 00A0                                 efgtoa@w 008A  
                             _LCD_Clear 4B0C                                 atoi@neg 000E  
                    __end_of_USART_Init 40C8                                 _sprintf 4472  
                               _tolower 4192                                 _strncmp 3A3C  
                               _toupper 41F2                    end_of_initialization 455C  
                               floorf@e 0053                                 floorf@m 004F  
                               floorf@u 0055                                 floorf@x 0045  
                               fputc@fp 0003                          LCD_Command@cmd 0008  
                         __Lmediumconst 0000                                 fputs@fp 000C  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 4418  
                     __end_of_vfpfcnvrt 1ABC                              efgtoa@mode 008D  
                            efgtoa@sign 0086                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005F                                 strcpy@d 0009  
                               strlen@a 0003                                 strcpy@s 0007  
                               strlen@s 0001                             ___fladd@grs 0054  
                         ___xxtofl@sign 000D                               _TRISCbits 000F94  
                            ?_LCD_Clear 0001                       __size_of_I2C_Nack 0014  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 003A  
                           ___fldiv@grs 003F                             ___fldiv@rem 0038  
                     __size_of_I2C_Stop 0014                     USART_Init@baud_rate 0060  
                 USART_TransmitChar@out 0001                             ___flmul@grs 0020  
                          _Estados$1937 0068                      _USART_TransmitChar 4ABA  
                     __size_of_LCD_Char 004C                       __size_of_LCD_Init 0030  
                         ??_LCD_MSdelay 0003                             _Sunny_State 430A  
                   ?_USART_TransmitChar 0001                           ??_LCD_Command 0007  
                        __end_of___flge 3840                          __end_of___fleq 4034  
                           vfpfcnvrt@ap 00A8                             vfpfcnvrt@ct 00C0  
                           vfpfcnvrt@fp 00A4                          __end_of___wmul 4A7E  
                        __end_of_efgtoa 14AE                          __end_of_floorf 319A  
                            floorf@F527 00E2                          __end_of_strcpy 430A  
                        __end_of_strlen 4964                     start_initialization 4516  
                           __end_of_pad 3CA2                    ??_USART_TransmitChar 0001  
  I2C_Repeated_Start@slave_read_address 0002                   __end_of___fpclassifyf 3A3C  
                           ??_I2C_Ready 0001                             ??_I2C_Start 0002  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 47A0  
                          ?_PlayCancion 0001                            ?_Rainy_State 0001  
            __size_of_RTC_Read_Calendar 005A                             vfprintf@fmt 00C6  
           __size_of_I2C_Repeated_Start 002E                                ??___flge 0034  
                              ??___fleq 0009                                ??___wmul 0005  
                              ??_efgtoa 0067                             __pdataBANK1 01B6  
                              ??_floorf 0049                                ?_I2C_Ack 0001  
                   __end_of_LCD_MSdelay 4648                                ??_strcpy 0005  
                              ??_strlen 0003               __size_of_USART_SendString 0036  
              __size_of_LCD_Custom_Char 0048                               ___fladd@a 0049  
                             ___fladd@b 0045                            play@duracion 000A  
                             ___fldiv@a 0030                               ___fldiv@b 002C  
               __size_of_RTC_Calendario 02F0                     __end_of_LCD_Command 45B2  
                             ___flmul@a 0017                               ___flmul@b 0013  
                           __pbssCOMRAM 005F                               ___flsub@a 0059  
                             ___flsub@b 0055                           __pcstackBANK0 0060  
                         __pcstackBANK1 0172                             ??_LCD_Clear 0009  
                     __size_of___xxtofl 01B4                       __size_of_delay_us 0032  
                              ?_ReadADC 0060                               _atoi$1577 0010  
                             _atoi$1578 0014                               _atoi$1579 0012  
                              ?_ReadLUZ 0001                              play@octava 0008  
                              ?_Estados 0066                             _efgtoa$1501 006C  
                           _efgtoa$1502 006E                             _efgtoa$1511 0072  
                           _efgtoa$1512 0074                             _efgtoa$1513 0076  
                           _efgtoa$1507 0070                                ?___fladd 0045  
                              ?___fldiv 002C                                ?___awdiv 0001  
                              ?___flneg 0001                                ?___awmod 0001  
                              ?___flmul 0013                                ?___flsub 0055  
                              ?___fltol 0055                       __size_of_vfprintf 0062  
                           __smallconst 0800                                _I2C_Nack 4AE4  
                              ?_isalpha 0001                                ?_isdigit 0001  
                              _I2C_Init 4AA0                                _I2C_Read 47DC  
                              _I2C_Stop 4AD0                                ?_islower 0001  
                              ?_isspace 0001                                ?_isupper 0001  
                 LCD_String_xy@location 000F                                ?_sprintf 00CC  
                              ?_tolower 0007                          __size_of_fputc 00CA  
                        __size_of_fputs 0044                                ?_strncmp 0001  
                              ?_toupper 0007                          __size_of_putch 0002  
                              _LCD_Char 45B2                                _LCD_Init 49CC  
                  play@mS_Transcurridos 000D                          ___wmul@product 0005  
                              _LATCbits 000F8B                               delay_us@i 0004  
                         ?_Alarm_Status 0001                 __size_of_RTC_Read_Clock 0046  
                           _LCD_MSdelay 45FE                             _LCD_Command 4566  
                             _vfpfcnvrt 14AE                               _xtoa$1523 002F  
                             _xtoa$1524 0031                        __size_of_I2C_Ack 0014  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                       ___wmul@multiplier 0001  
                          _isspace$1617 0007                       ??_LCD_Custom_Char 000B  
                            vfpfcnvrt@c 00C3                              vfpfcnvrt@f 00BC  
                             copy_data0 452A                                _FreqNota 01B6  
          I2C_Start@slave_write_address 0002                            delay_us@nota 0001  
                        ??_Alarm_Status 0015                        __size_of_ReadADC 00FE  
                      __size_of_ReadLUZ 0068                                __Hrparam 0000  
                      __size_of_Estados 027E                              vfprintf@ap 00C8  
                              __Lrparam 0000                              vfprintf@fp 00C4  
                          ?_Sunny_State 0001                    __size_of_PlayCancion 0158  
                  __size_of_Rainy_State 005A                           I2C_Write@data 0001  
                      __size_of___fladd 04C0                        __size_of___fldiv 039A  
                      __size_of___awdiv 00C4                        __size_of___flneg 0038  
                      __size_of___awmod 00B0                        __size_of___flmul 042A  
                      __size_of___flsub 0046                        __size_of___fltol 0106  
                            ?_vfpfcnvrt 00A4                        _USART_SendString 4964  
                    ___fpclassifyf@F465 00E6                          _RTC_Calendario 2740  
                            sprintf@fmt 00CE                                ___xxtofl 319A  
                      __size_of_isalpha 003C                        __size_of_isdigit 0038  
                              _delay_us 499A                        __size_of_islower 0038  
                      __size_of_isspace 0052                                __ptext10 4A7E  
                              __ptext11 47DC                                __ptext20 3840  
                              __ptext12 4B20                                __ptext21 319A  
                              __ptext13 4AE4                                __ptext30 3A3C  
                              __ptext22 4418                                __ptext14 4AF8  
                              __ptext31 0856                                __ptext23 4472  
                              __ptext15 49CC                                __ptext40 2F88  
                              __ptext32 4192                                __ptext24 4130  
                              __ptext16 4B0C                                __ptext41 393E  
                              __ptext33 484E                                __ptext25 14AE  
                              __ptext17 4AA0                                __ptext50 3EDA  
                              __ptext42 3636                                __ptext34 42AE  
                              __ptext26 2A30                                __ptext18 2D0A  
                              __ptext51 3CA2                                __ptext43 46D6  
                              __ptext35 3BDC                                __ptext27 41F2  
                              __ptext19 40C8                                __ptext60 45B2  
                              __ptext52 334E                                __ptext44 1ABC  
                              __ptext36 492E                                __ptext28 4816  
                              __ptext61 45FE                                __ptext53 44C4  
                              __ptext45 4886                                __ptext37 471C  
                              __ptext29 47A0                                __ptext62 4B32  
                              __ptext54 48BE                                __ptext46 1F7C  
                              __ptext38 3B12                                __ptext63 4964  
                              __ptext55 4A58                                __ptext47 373C  
                              __ptext39 4B44                                __ptext64 4ABA  
                              __ptext56 4760                                __ptext48 3F8A  
                              __ptext65 34DE                                __ptext57 4250  
                              __ptext49 23A6                                __ptext66 3D66  
                              __ptext58 4648                                __ptext67 499A  
                              __ptext59 4566                        __size_of_isupper 0038  
                      __size_of_sprintf 0052                        __size_of_tolower 0060  
                            strcpy@dest 0001                        __size_of_strncmp 00D6  
                      __size_of_toupper 005E                           __size_of_atoi 0190  
                         __size_of_main 00B0                           __size_of_play 00C4  
                         __size_of_xtoa 02DA                                efgtoa@fp 0060  
                              efgtoa@ne 007C                                efgtoa@pp 007A  
                              efgtoa@ou 0080                                isa$xinst 000000  
                              _vfprintf 4130                                main@caso 00E0  
                __end_of_RTC_Calendario 2A30                              _LCD_String 4250  
                        _vfpfcnvrt$1542 00BA                          _vfpfcnvrt$1538 00B8  
                              isalpha@c 0001                                isdigit@c 0001  
                    LCD_Custom_Char@loc 000B                      LCD_Custom_Char@msg 0009  
           __size_of_USART_TransmitChar 0016                               sprintf@ap 00D4  
                              play@nota 0006                                islower@c 0001  
                              isspace@c 0001                               strcpy@src 0003  
            __end_of_I2C_Repeated_Start 4A58                                isupper@c 0001  
                        _RTC_Read_Clock 4690                               strncmp@_l 0001  
                             strncmp@_r 0003                              _OSCCONbits 000FD3  
                         ?_Cloudy_State 0001                             efgtoa@nmode 008C  
                   RTC_Calendario@F3580 01CE                             ??_vfpfcnvrt 00AA  
                       ?_RTC_Calendario 0001                     RTC_Calendario@AM_PM 01B5  
                              sprintf@f 00D6                                tolower@c 0007  
                              sprintf@s 00CC                  __size_of___fpclassifyf 00FE  
                  __end_of_Alarm_Status 4B44                                strncmp@l 0008  
                              strncmp@n 0005                                strncmp@r 000A  
                              toupper@c 0007                  __size_of_LCD_String_xy 0040  
                   RTC_Calendario@hours 01AB                     RTC_Calendario@month 0183  
                           _SSPCON2bits 000FC5                           ___fladd@signs 0051  
                    RTC_Calendario@date 0179                      RTC_Calendario@days 0172  
                    RTC_Calendario@mins 01A1                      RTC_Calendario@secs 0197  
                    RTC_Calendario@year 018D                            ___fladd@aexp 0052  
                          ___fladd@bexp 0053                  __end_of_RTC_Read_Clock 46D6  
                            _USART_Init 4034                          ??_Cloudy_State 005F  
