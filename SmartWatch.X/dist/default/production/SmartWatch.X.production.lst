

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 04 12:09:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84  0000                     
    85                           ; Version 2.20
    86                           ; Generated 12/02/2020 GMT
    87                           ; 
    88                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4550 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataBANK1
   121  004834                     __pidataBANK1:
   122                           	callstack 0
   123                           
   124                           ;initializer for _FreqNota
   125  004834  3BB9               	dw	15289
   126  004836  385E               	dw	14430
   127  004838  3534               	dw	13620
   128  00483A  3238               	dw	12856
   129  00483C  2F66               	dw	12134
   130  00483E  2CBD               	dw	11453
   131  004840  2A3A               	dw	10810
   132  004842  27DC               	dw	10204
   133  004844  259F               	dw	9631
   134  004846  2382               	dw	9090
   135  004848  2184               	dw	8580
   136  00484A  1FA3               	dw	8099
   137                           
   138                           ;initializer for RTC_Calendario@F3579
   139  00484C  53                 	db	83
   140  00484D  4D                 	db	77
   141  00484E  54                 	db	84
   142  00484F  57                 	db	87
   143  004850  74                 	db	116
   144  004851  46                 	db	70
   145  004852  73                 	db	115
   146                           
   147                           ;initializer for _character3
   148  004853  00                 	db	0
   149  004854  08                 	db	8
   150  004855  16                 	db	22
   151  004856  1F                 	db	31
   152  004857  1F                 	db	31
   153  004858  16                 	db	22
   154  004859  08                 	db	8
   155  00485A  00                 	db	0
   156                           
   157                           ;initializer for _character2
   158  00485B  15                 	db	21
   159  00485C  0E                 	db	14
   160  00485D  11                 	db	17
   161  00485E  11                 	db	17
   162  00485F  0E                 	db	14
   163  004860  15                 	db	21
   164  004861  00                 	db	0
   165  004862  00                 	db	0
   166                           
   167                           ;initializer for _character1
   168  004863  0E                 	db	14
   169  004864  1F                 	db	31
   170  004865  1F                 	db	31
   171  004866  0E                 	db	14
   172  004867  00                 	db	0
   173  004868  0A                 	db	10
   174  004869  0A                 	db	10
   175  00486A  00                 	db	0
   176  0000                     _SSPCON2bits	set	4037
   177  0000                     _SSPADD	set	4040
   178  0000                     _SSPCON2	set	4037
   179  0000                     _SSPCON1	set	4038
   180  0000                     _SSPSTAT	set	4039
   181  0000                     _SSPBUF	set	4041
   182  0000                     _SSPSTATbits	set	4039
   183  0000                     _LATCbits	set	3979
   184  0000                     _TRISCbits	set	3988
   185  0000                     _ADRESL	set	4035
   186  0000                     _ADRESH	set	4036
   187  0000                     _ADCON2bits	set	4032
   188  0000                     _ADCON0bits	set	4034
   189  0000                     _ADCON1bits	set	4033
   190  0000                     _OSCCONbits	set	4051
   191  0000                     _TRISA	set	3986
   192  0000                     _LATD	set	3980
   193  0000                     _TRISD	set	3989
   194  0000                     _TRISE	set	3990
   195  0000                     _OSCCON	set	4051
   196  0000                     _LATE2	set	31850
   197  0000                     _LATE1	set	31849
   198  0000                     _LATE0	set	31848
   199  0000                     _ACKEN	set	32300
   200  0000                     _ACKDT	set	32301
   201  0000                     _PEN	set	32298
   202  0000                     _RSEN	set	32297
   203  0000                     _ACKSTAT	set	32302
   204  0000                     _SSPIF	set	31987
   205  0000                     _SSPIE	set	31979
   206  0000                     _TRISB1	set	31897
   207  0000                     _TRISB0	set	31896
   208  0000                     _RCEN	set	32299
   209  0000                     _LATD1	set	31841
   210  0000                     _LATD0	set	31840
   211                           
   212                           	psect	smallconst
   213  000800                     __psmallconst:
   214                           	callstack 0
   215  000800  00                 	db	0
   216  000801                     STR_19:
   217  000801  25                 	db	37
   218  000802  30                 	db	48	;'0'
   219  000803  2E                 	db	46
   220  000804  30                 	db	48	;'0'
   221  000805  66                 	db	102	;'f'
   222  000806  43                 	db	67	;'C'
   223  000807  00                 	db	0
   224  000808                     STR_22:
   225  000808  49                 	db	73	;'I'
   226  000809  4E                 	db	78	;'N'
   227  00080A  46                 	db	70	;'F'
   228  00080B  00                 	db	0
   229  00080C                     STR_26:
   230  00080C  4E                 	db	78	;'N'
   231  00080D  41                 	db	65	;'A'
   232  00080E  4E                 	db	78	;'N'
   233  00080F  00                 	db	0
   234  000810                     STR_23:
   235  000810  69                 	db	105	;'i'
   236  000811  6E                 	db	110	;'n'
   237  000812  66                 	db	102	;'f'
   238  000813  00                 	db	0
   239  000814                     STR_27:
   240  000814  6E                 	db	110	;'n'
   241  000815  61                 	db	97	;'a'
   242  000816  6E                 	db	110	;'n'
   243  000817  00                 	db	0
   244  000818                     STR_3:
   245  000818  25                 	db	37
   246  000819  78                 	db	120	;'x'
   247  00081A  20                 	db	32
   248  00081B  00                 	db	0
   249  00081C                     STR_9:
   250  00081C  25                 	db	37
   251  00081D  78                 	db	120	;'x'
   252  00081E  2D                 	db	45
   253  00081F  00                 	db	0
   254  000820                     STR_4:
   255  000820  25                 	db	37
   256  000821  78                 	db	120	;'x'
   257  000822  3A                 	db	58	;':'
   258  000823  00                 	db	0
   259  000824                     STR_15:
   260  000824  57                 	db	87	;'W'
   261  000825  65                 	db	101	;'e'
   262  000826  64                 	db	100	;'d'
   263  000827  00                 	db	0
   264  000828                     STR_14:
   265  000828  54                 	db	84	;'T'
   266  000829  75                 	db	117	;'u'
   267  00082A  65                 	db	101	;'e'
   268  00082B  00                 	db	0
   269  00082C                     STR_17:
   270  00082C  46                 	db	70	;'F'
   271  00082D  72                 	db	114	;'r'
   272  00082E  69                 	db	105	;'i'
   273  00082F  00                 	db	0
   274  000830                     STR_13:
   275  000830  4D                 	db	77	;'M'
   276  000831  6F                 	db	111	;'o'
   277  000832  6E                 	db	110	;'n'
   278  000833  00                 	db	0
   279  000834                     STR_12:
   280  000834  53                 	db	83	;'S'
   281  000835  75                 	db	117	;'u'
   282  000836  6E                 	db	110	;'n'
   283  000837  00                 	db	0
   284  000838                     STR_18:
   285  000838  53                 	db	83	;'S'
   286  000839  61                 	db	97	;'a'
   287  00083A  74                 	db	116	;'t'
   288  00083B  00                 	db	0
   289  00083C                     STR_16:
   290  00083C  54                 	db	84	;'T'
   291  00083D  68                 	db	104	;'h'
   292  00083E  75                 	db	117	;'u'
   293  00083F  00                 	db	0
   294  000840                     STR_30:
   295  000840  6C                 	db	108	;'l'
   296  000841  66                 	db	102	;'f'
   297  000842  00                 	db	0
   298  000843                     STR_2:
   299  000843  41                 	db	65	;'A'
   300  000844  4D                 	db	77	;'M'
   301  000845  00                 	db	0
   302  000846                     STR_1:
   303  000846  50                 	db	80	;'P'
   304  000847  4D                 	db	77	;'M'
   305  000848  00                 	db	0
   306  000849  00                 	db	0	; dummy byte at the end
   307  0000                     
   308                           ; #config settings
   309                           
   310                           	psect	cinit
   311  004454                     __pcinit:
   312                           	callstack 0
   313  004454                     start_initialization:
   314                           	callstack 0
   315  004454                     __initialization:
   316                           	callstack 0
   317                           
   318                           ; Initialize objects allocated to BANK1 (55 bytes)
   319                           ; load TBLPTR registers with __pidataBANK1
   320  004454  0E34               	movlw	low __pidataBANK1
   321  004456  6EF6               	movwf	tblptrl,c
   322  004458  0E48               	movlw	high __pidataBANK1
   323  00445A  6EF7               	movwf	tblptrh,c
   324  00445C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   325  00445E  6EF8               	movwf	tblptru,c
   326  004460  EE01  F0B6         	lfsr	0,__pdataBANK1
   327  004464  EE10 F037          	lfsr	1,55
   328  004468                     copy_data0:
   329  004468  0009               	tblrd		*+
   330  00446A  CFF5 FFEE          	movff	tablat,postinc0
   331  00446E  50E5               	movf	postdec1,w,c
   332  004470  50E1               	movf	fsr1l,w,c
   333  004472  E1FA               	bnz	copy_data0
   334                           
   335                           ; Clear objects allocated to BANK2 (20 bytes)
   336  004474  EE02  F000         	lfsr	0,__pbssBANK2
   337  004478  0E14               	movlw	20
   338  00447A                     clear_0:
   339  00447A  6AEE               	clrf	postinc0,c
   340  00447C  06E8               	decf	wreg,f,c
   341  00447E  E1FD               	bnz	clear_0
   342                           
   343                           ; Clear objects allocated to BANK1 (114 bytes)
   344  004480  EE01  F000         	lfsr	0,__pbssBANK1
   345  004484  0E72               	movlw	114
   346  004486                     clear_1:
   347  004486  6AEE               	clrf	postinc0,c
   348  004488  06E8               	decf	wreg,f,c
   349  00448A  E1FD               	bnz	clear_1
   350                           
   351                           ; Clear objects allocated to BANK0 (26 bytes)
   352  00448C  EE00  F0E2         	lfsr	0,__pbssBANK0
   353  004490  0E1A               	movlw	26
   354  004492                     clear_2:
   355  004492  6AEE               	clrf	postinc0,c
   356  004494  06E8               	decf	wreg,f,c
   357  004496  E1FD               	bnz	clear_2
   358                           
   359                           ; Clear objects allocated to COMRAM (1 bytes)
   360  004498  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   361  00449A                     end_of_initialization:
   362                           	callstack 0
   363  00449A                     __end_of__initialization:
   364                           	callstack 0
   365  00449A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   366  00449C  6EF8               	movwf	tblptru,c
   367  00449E  0100               	movlb	0
   368  0044A0  EFBA  F01F         	goto	_main	;jump to C main() function
   369                           
   370                           	psect	bssCOMRAM
   371  00005F                     __pbssCOMRAM:
   372                           	callstack 0
   373  00005F                     _i:
   374                           	callstack 0
   375  00005F                     	ds	1
   376                           
   377                           	psect	bssBANK0
   378  0000E2                     __pbssBANK0:
   379                           	callstack 0
   380  0000E2                     floorf@F527:
   381                           	callstack 0
   382  0000E2                     	ds	4
   383  0000E6                     ___fpclassifyf@F465:
   384                           	callstack 0
   385  0000E6                     	ds	4
   386  0000EA                     _luz:
   387                           	callstack 0
   388  0000EA                     	ds	4
   389  0000EE                     _tempar:
   390                           	callstack 0
   391  0000EE                     	ds	4
   392  0000F2                     _nout:
   393                           	callstack 0
   394  0000F2                     	ds	2
   395  0000F4                     _width:
   396                           	callstack 0
   397  0000F4                     	ds	2
   398  0000F6                     _prec:
   399                           	callstack 0
   400  0000F6                     	ds	2
   401  0000F8                     _flags:
   402                           	callstack 0
   403  0000F8                     	ds	2
   404  0000FA                     _result:
   405                           	callstack 0
   406  0000FA                     	ds	2
   407                           
   408                           	psect	bssBANK1
   409  000100                     __pbssBANK1:
   410                           	callstack 0
   411  000100                     _Year:
   412                           	callstack 0
   413  000100                     	ds	2
   414  000102                     _Month:
   415                           	callstack 0
   416  000102                     	ds	2
   417  000104                     _Date:
   418                           	callstack 0
   419  000104                     	ds	2
   420  000106                     _Day:
   421                           	callstack 0
   422  000106                     	ds	2
   423  000108                     _hour:
   424                           	callstack 0
   425  000108                     	ds	2
   426  00010A                     _min:
   427                           	callstack 0
   428  00010A                     	ds	2
   429  00010C                     _sec:
   430                           	callstack 0
   431  00010C                     	ds	2
   432  00010E                     _dbuf:
   433                           	callstack 0
   434  00010E                     	ds	80
   435  00015E                     _Stemp:
   436                           	callstack 0
   437  00015E                     	ds	20
   438                           
   439                           	psect	dataBANK1
   440  0001B6                     __pdataBANK1:
   441                           	callstack 0
   442  0001B6                     _FreqNota:
   443                           	callstack 0
   444  0001B6                     	ds	24
   445  0001CE                     RTC_Calendario@F3579:
   446                           	callstack 0
   447  0001CE                     	ds	7
   448  0001D5                     _character3:
   449                           	callstack 0
   450  0001D5                     	ds	8
   451  0001DD                     _character2:
   452                           	callstack 0
   453  0001DD                     	ds	8
   454  0001E5                     _character1:
   455                           	callstack 0
   456  0001E5                     	ds	8
   457                           
   458                           	psect	bssBANK2
   459  000200                     __pbssBANK2:
   460                           	callstack 0
   461  000200                     _Sluz:
   462                           	callstack 0
   463  000200                     	ds	20
   464                           
   465                           	psect	cstackBANK1
   466  000172                     __pcstackBANK1:
   467                           	callstack 0
   468  000172                     RTC_Calendario@days:
   469                           	callstack 0
   470                           
   471                           ; 7 bytes @ 0x0
   472  000172                     	ds	7
   473  000179                     RTC_Calendario@date:
   474                           	callstack 0
   475                           
   476                           ; 10 bytes @ 0x7
   477  000179                     	ds	10
   478  000183                     RTC_Calendario@month:
   479                           	callstack 0
   480                           
   481                           ; 10 bytes @ 0x11
   482  000183                     	ds	10
   483  00018D                     RTC_Calendario@year:
   484                           	callstack 0
   485                           
   486                           ; 10 bytes @ 0x1B
   487  00018D                     	ds	10
   488  000197                     RTC_Calendario@secs:
   489                           	callstack 0
   490                           
   491                           ; 10 bytes @ 0x25
   492  000197                     	ds	10
   493  0001A1                     RTC_Calendario@mins:
   494                           	callstack 0
   495                           
   496                           ; 10 bytes @ 0x2F
   497  0001A1                     	ds	10
   498  0001AB                     RTC_Calendario@hours:
   499                           	callstack 0
   500                           
   501                           ; 10 bytes @ 0x39
   502  0001AB                     	ds	10
   503  0001B5                     RTC_Calendario@AM_PM:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x43
   507  0001B5                     	ds	1
   508                           
   509                           	psect	cstackBANK0
   510  000060                     __pcstackBANK0:
   511                           	callstack 0
   512  000060                     ?_ReadADC:
   513                           	callstack 0
   514  000060                     ?_efgtoa:
   515                           	callstack 0
   516  000060                     efgtoa@fp:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x0
   520  000060                     	ds	2
   521  000062                     ??_ReadADC:
   522  000062                     efgtoa@f:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x2
   526  000062                     	ds	2
   527  000064                     ReadADC@result:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x4
   531  000064                     	ds	2
   532  000066                     ?_Estados:
   533                           	callstack 0
   534  000066                     efgtoa@c:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x6
   538  000066                     	ds	1
   539  000067                     ??_efgtoa:
   540                           
   541                           ; 1 bytes @ 0x7
   542  000067                     	ds	1
   543  000068                     _Estados$1880:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x8
   547  000068                     	ds	4
   548  00006C                     _efgtoa$1449:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0xC
   552  00006C                     	ds	2
   553  00006E                     _efgtoa$1450:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0xE
   557  00006E                     	ds	2
   558  000070                     _efgtoa$1455:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x10
   562  000070                     	ds	2
   563  000072                     _efgtoa$1459:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x12
   567  000072                     	ds	2
   568  000074                     _efgtoa$1460:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x14
   572  000074                     	ds	2
   573  000076                     _efgtoa$1461:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x16
   577  000076                     	ds	2
   578  000078                     efgtoa@t:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x18
   582  000078                     	ds	2
   583  00007A                     efgtoa@pp:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x1A
   587  00007A                     	ds	2
   588  00007C                     efgtoa@ne:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x1C
   592  00007C                     	ds	2
   593  00007E                     efgtoa@m:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x1E
   597  00007E                     	ds	2
   598  000080                     efgtoa@ou:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x20
   602  000080                     	ds	4
   603  000084                     efgtoa@d:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x24
   607  000084                     	ds	2
   608  000086                     efgtoa@sign:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x26
   612  000086                     	ds	2
   613  000088                     efgtoa@p:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x28
   617  000088                     	ds	2
   618  00008A                     efgtoa@w:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x2A
   622  00008A                     	ds	2
   623  00008C                     efgtoa@nmode:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x2C
   627  00008C                     	ds	1
   628  00008D                     efgtoa@mode:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x2D
   632  00008D                     	ds	1
   633  00008E                     efgtoa@h:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x2E
   637  00008E                     	ds	4
   638  000092                     efgtoa@l:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x32
   642  000092                     	ds	4
   643  000096                     efgtoa@i:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x36
   647  000096                     	ds	2
   648  000098                     efgtoa@g:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x38
   652  000098                     	ds	4
   653  00009C                     efgtoa@e:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x3C
   657  00009C                     	ds	2
   658  00009E                     efgtoa@n:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x3E
   662  00009E                     	ds	2
   663  0000A0                     efgtoa@u:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x40
   667  0000A0                     	ds	4
   668  0000A4                     ?_vfpfcnvrt:
   669                           	callstack 0
   670  0000A4                     vfpfcnvrt@fp:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x44
   674  0000A4                     	ds	2
   675  0000A6                     vfpfcnvrt@fmt:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x46
   679  0000A6                     	ds	2
   680  0000A8                     vfpfcnvrt@ap:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x48
   684  0000A8                     	ds	2
   685  0000AA                     ??_vfpfcnvrt:
   686                           
   687                           ; 1 bytes @ 0x4A
   688  0000AA                     	ds	4
   689  0000AE                     vfpfcnvrt@llu:
   690                           	callstack 0
   691                           
   692                           ; 8 bytes @ 0x4E
   693  0000AE                     	ds	8
   694  0000B6                     vfpfcnvrt@done:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x56
   698  0000B6                     	ds	2
   699  0000B8                     _vfpfcnvrt$1486:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x58
   703  0000B8                     	ds	2
   704  0000BA                     _vfpfcnvrt$1490:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x5A
   708  0000BA                     	ds	2
   709  0000BC                     vfpfcnvrt@f:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x5C
   713  0000BC                     	ds	4
   714  0000C0                     vfpfcnvrt@ct:
   715                           	callstack 0
   716                           
   717                           ; 3 bytes @ 0x60
   718  0000C0                     	ds	3
   719  0000C3                     vfpfcnvrt@c:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x63
   723  0000C3                     	ds	1
   724  0000C4                     ?_vfprintf:
   725                           	callstack 0
   726  0000C4                     vfprintf@fp:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x64
   730  0000C4                     	ds	2
   731  0000C6                     vfprintf@fmt:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x66
   735  0000C6                     	ds	2
   736  0000C8                     vfprintf@ap:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x68
   740  0000C8                     	ds	2
   741  0000CA                     vfprintf@cfmt:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x6A
   745  0000CA                     	ds	2
   746  0000CC                     ?_sprintf:
   747                           	callstack 0
   748  0000CC                     sprintf@s:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x6C
   752  0000CC                     	ds	2
   753  0000CE                     sprintf@fmt:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x6E
   757  0000CE                     	ds	6
   758  0000D4                     sprintf@ap:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x74
   762  0000D4                     	ds	2
   763  0000D6                     sprintf@f:
   764                           	callstack 0
   765                           
   766                           ; 6 bytes @ 0x76
   767  0000D6                     	ds	6
   768  0000DC                     ??_RTC_Calendario:
   769                           
   770                           ; 1 bytes @ 0x7C
   771  0000DC                     	ds	2
   772  0000DE                     ??_main:
   773                           
   774                           ; 1 bytes @ 0x7E
   775  0000DE                     	ds	2
   776  0000E0                     main@caso:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x80
   780  0000E0                     	ds	2
   781                           
   782                           	psect	cstackCOMRAM
   783  000001                     __pcstackCOMRAM:
   784                           	callstack 0
   785  000001                     ?_strlen:
   786                           	callstack 0
   787  000001                     ?___fpclassifyf:
   788                           	callstack 0
   789  000001                     ?_isupper:
   790                           	callstack 0
   791  000001                     ?_isalpha:
   792                           	callstack 0
   793  000001                     ?_isdigit:
   794                           	callstack 0
   795  000001                     ?_strncmp:
   796                           	callstack 0
   797  000001                     ?_isspace:
   798                           	callstack 0
   799  000001                     ?_islower:
   800                           	callstack 0
   801  000001                     ?_ReadLUZ:
   802                           	callstack 0
   803  000001                     ?___wmul:
   804                           	callstack 0
   805  000001                     ?___awdiv:
   806                           	callstack 0
   807  000001                     ?___awmod:
   808                           	callstack 0
   809  000001                     ?___flneg:
   810                           	callstack 0
   811  000001                     I2C_Read@flag:
   812                           	callstack 0
   813  000001                     I2C_Write@data:
   814                           	callstack 0
   815  000001                     LCD_MSdelay@val:
   816                           	callstack 0
   817  000001                     delay_us@nota:
   818                           	callstack 0
   819  000001                     ___wmul@multiplier:
   820                           	callstack 0
   821  000001                     ___awdiv@dividend:
   822                           	callstack 0
   823  000001                     ___awmod@dividend:
   824                           	callstack 0
   825  000001                     isalpha@c:
   826                           	callstack 0
   827  000001                     isdigit@c:
   828                           	callstack 0
   829  000001                     isspace@c:
   830                           	callstack 0
   831  000001                     isupper@c:
   832                           	callstack 0
   833  000001                     fputc@c:
   834                           	callstack 0
   835  000001                     strcpy@dest:
   836                           	callstack 0
   837  000001                     strlen@s:
   838                           	callstack 0
   839  000001                     strncmp@_l:
   840                           	callstack 0
   841  000001                     islower@c:
   842                           	callstack 0
   843  000001                     ___fleq@ff1:
   844                           	callstack 0
   845  000001                     ___flneg@f1:
   846                           	callstack 0
   847  000001                     ___fpclassifyf@x:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x0
   851  000001                     	ds	1
   852  000002                     I2C_Read@buffer:
   853                           	callstack 0
   854  000002                     I2C_Start@slave_write_address:
   855                           	callstack 0
   856  000002                     I2C_Repeated_Start@slave_read_address:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x1
   860  000002                     	ds	1
   861  000003                     ??_isupper:
   862  000003                     ??_isalpha:
   863  000003                     ??_isdigit:
   864  000003                     ??_isspace:
   865  000003                     ??_islower:
   866  000003                     ??_ReadLUZ:
   867  000003                     ??_delay_us:
   868  000003                     ??_RTC_Read_Clock:
   869  000003                     ??_RTC_Read_Calendar:
   870  000003                     LCD_MSdelay@i:
   871                           	callstack 0
   872  000003                     ___wmul@multiplicand:
   873                           	callstack 0
   874  000003                     ___awdiv@divisor:
   875                           	callstack 0
   876  000003                     ___awmod@divisor:
   877                           	callstack 0
   878  000003                     fputc@fp:
   879                           	callstack 0
   880  000003                     strcpy@src:
   881                           	callstack 0
   882  000003                     strlen@a:
   883                           	callstack 0
   884  000003                     strncmp@_r:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x2
   888  000003                     	ds	1
   889  000004                     RTC_Read_Clock@read_clock_address:
   890                           	callstack 0
   891  000004                     RTC_Read_Calendar@read_calendar_address:
   892                           	callstack 0
   893  000004                     delay_us@i:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x3
   897  000004                     	ds	1
   898  000005                     ??_fputc:
   899  000005                     ??___fpclassifyf:
   900  000005                     ??_strcpy:
   901  000005                     ?___xxtofl:
   902                           	callstack 0
   903  000005                     ___awdiv@counter:
   904                           	callstack 0
   905  000005                     ___awmod@counter:
   906                           	callstack 0
   907  000005                     LCD_MSdelay@j:
   908                           	callstack 0
   909  000005                     ___wmul@product:
   910                           	callstack 0
   911  000005                     strncmp@n:
   912                           	callstack 0
   913  000005                     ___fleq@ff2:
   914                           	callstack 0
   915  000005                     ___xxtofl@val:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x4
   919  000005                     	ds	1
   920  000006                     ___awdiv@sign:
   921                           	callstack 0
   922  000006                     ___awmod@sign:
   923                           	callstack 0
   924  000006                     play@nota:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x5
   928  000006                     	ds	1
   929  000007                     ??_LCD_Command:
   930  000007                     ??_strncmp:
   931  000007                     ??_LCD_Char:
   932  000007                     ?_tolower:
   933                           	callstack 0
   934  000007                     ?_toupper:
   935                           	callstack 0
   936  000007                     _isspace$1565:
   937                           	callstack 0
   938  000007                     ___awdiv@quotient:
   939                           	callstack 0
   940  000007                     strcpy@s:
   941                           	callstack 0
   942  000007                     tolower@c:
   943                           	callstack 0
   944  000007                     toupper@c:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x6
   948  000007                     	ds	1
   949  000008                     ?_atoi:
   950                           	callstack 0
   951  000008                     LCD_Command@cmd:
   952                           	callstack 0
   953  000008                     LCD_Char@dat:
   954                           	callstack 0
   955  000008                     play@octava:
   956                           	callstack 0
   957  000008                     atoi@s:
   958                           	callstack 0
   959  000008                     strncmp@l:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x7
   963  000008                     	ds	1
   964  000009                     ??_tolower:
   965  000009                     ??_toupper:
   966  000009                     ??___fleq:
   967  000009                     ??___xxtofl:
   968  000009                     LCD_String@msg:
   969                           	callstack 0
   970  000009                     LCD_Custom_Char@msg:
   971                           	callstack 0
   972  000009                     ___fpclassifyf@e:
   973                           	callstack 0
   974  000009                     strcpy@d:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x8
   978  000009                     	ds	1
   979  00000A                     ??_atoi:
   980  00000A                     play@duracion:
   981                           	callstack 0
   982  00000A                     fputs@s:
   983                           	callstack 0
   984  00000A                     strncmp@r:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x9
   988  00000A                     	ds	1
   989  00000B                     LCD_String_xy@pos:
   990                           	callstack 0
   991  00000B                     LCD_Custom_Char@loc:
   992                           	callstack 0
   993  00000B                     ___fpclassifyf@u:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0xA
   997  00000B                     	ds	1
   998  00000C                     ??_play:
   999  00000C                     LCD_Custom_Char@i:
  1000                           	callstack 0
  1001  00000C                     LCD_String_xy@msg:
  1002                           	callstack 0
  1003  00000C                     fputs@fp:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0xB
  1007  00000C                     	ds	1
  1008  00000D                     ___xxtofl@sign:
  1009                           	callstack 0
  1010  00000D                     play@mS_Transcurridos:
  1011                           	callstack 0
  1012  00000D                     _tolower$1629:
  1013                           	callstack 0
  1014  00000D                     _toupper$1644:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0xC
  1018  00000D                     	ds	1
  1019  00000E                     LCD_String_xy@row:
  1020                           	callstack 0
  1021  00000E                     ___xxtofl@exp:
  1022                           	callstack 0
  1023  00000E                     fputs@c:
  1024                           	callstack 0
  1025  00000E                     atoi@neg:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0xD
  1029  00000E                     	ds	1
  1030  00000F                     LCD_String_xy@location:
  1031                           	callstack 0
  1032  00000F                     play@CiclosL:
  1033                           	callstack 0
  1034  00000F                     fputs@i:
  1035                           	callstack 0
  1036  00000F                     ___xxtofl@arg:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0xE
  1040  00000F                     	ds	1
  1041  000010                     _atoi$1525:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0xF
  1045  000010                     	ds	1
  1046  000011                     ?_pad:
  1047                           	callstack 0
  1048  000011                     play@fn:
  1049                           	callstack 0
  1050  000011                     pad@fp:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x10
  1054  000011                     	ds	1
  1055  000012                     _atoi$1527:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x11
  1059  000012                     	ds	1
  1060  000013                     ??_PlayCancion:
  1061  000013                     ?___flmul:
  1062                           	callstack 0
  1063  000013                     pad@buf:
  1064                           	callstack 0
  1065  000013                     ___flmul@b:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0x12
  1069  000013                     	ds	1
  1070  000014                     _atoi$1526:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x13
  1074  000014                     	ds	1
  1075  000015                     pad@p:
  1076                           	callstack 0
  1077  000015                     atoi@n:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x14
  1081  000015                     	ds	2
  1082  000017                     ??_pad:
  1083  000017                     ___flmul@a:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x16
  1087  000017                     	ds	1
  1088  000018                     pad@i:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x17
  1092  000018                     	ds	2
  1093  00001A                     pad@w:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x19
  1097  00001A                     	ds	1
  1098  00001B                     ??___flmul:
  1099                           
  1100                           ; 1 bytes @ 0x1A
  1101  00001B                     	ds	1
  1102  00001C                     ?_xtoa:
  1103                           	callstack 0
  1104  00001C                     xtoa@fp:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x1B
  1108  00001C                     	ds	2
  1109  00001E                     xtoa@d:
  1110                           	callstack 0
  1111                           
  1112                           ; 8 bytes @ 0x1D
  1113  00001E                     	ds	1
  1114  00001F                     ___flmul@sign:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x1E
  1118  00001F                     	ds	1
  1119  000020                     ___flmul@grs:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x1F
  1123  000020                     	ds	4
  1124  000024                     ___flmul@aexp:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x23
  1128  000024                     	ds	1
  1129  000025                     ___flmul@bexp:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x24
  1133  000025                     	ds	1
  1134  000026                     xtoa@x:
  1135                           	callstack 0
  1136  000026                     ___flmul@prod:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x25
  1140  000026                     	ds	1
  1141  000027                     ??_xtoa:
  1142                           
  1143                           ; 1 bytes @ 0x26
  1144  000027                     	ds	3
  1145  00002A                     ___flmul@temp:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x29
  1149  00002A                     	ds	2
  1150  00002C                     ?___fldiv:
  1151                           	callstack 0
  1152  00002C                     ___flge@ff1:
  1153                           	callstack 0
  1154  00002C                     ___fldiv@b:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x2B
  1158  00002C                     	ds	3
  1159  00002F                     _xtoa$1471:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x2E
  1163  00002F                     	ds	1
  1164  000030                     ___flge@ff2:
  1165                           	callstack 0
  1166  000030                     ___fldiv@a:
  1167                           	callstack 0
  1168                           
  1169                           ; 4 bytes @ 0x2F
  1170  000030                     	ds	1
  1171  000031                     _xtoa$1472:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x30
  1175  000031                     	ds	2
  1176  000033                     xtoa@p:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x32
  1180  000033                     	ds	1
  1181  000034                     ??___fldiv:
  1182  000034                     ??___flge:
  1183                           
  1184                           ; 1 bytes @ 0x33
  1185  000034                     	ds	1
  1186  000035                     xtoa@w:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x34
  1190  000035                     	ds	2
  1191  000037                     xtoa@n:
  1192                           	callstack 0
  1193                           
  1194                           ; 8 bytes @ 0x36
  1195  000037                     	ds	1
  1196  000038                     ___fldiv@rem:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x37
  1200  000038                     	ds	4
  1201  00003C                     ___fldiv@sign:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x3B
  1205  00003C                     	ds	1
  1206  00003D                     ___fldiv@new_exp:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x3C
  1210  00003D                     	ds	2
  1211  00003F                     xtoa@i:
  1212                           	callstack 0
  1213  00003F                     ___fldiv@grs:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x3E
  1217  00003F                     	ds	2
  1218  000041                     xtoa@c:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x40
  1222  000041                     	ds	2
  1223  000043                     ___fldiv@bexp:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x42
  1227  000043                     	ds	1
  1228  000044                     ___fldiv@aexp:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x43
  1232  000044                     	ds	1
  1233  000045                     ?___fladd:
  1234                           	callstack 0
  1235  000045                     ?_floorf:
  1236                           	callstack 0
  1237  000045                     ___fladd@b:
  1238                           	callstack 0
  1239  000045                     floorf@x:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x44
  1243  000045                     	ds	4
  1244  000049                     ??_floorf:
  1245  000049                     ___fladd@a:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x48
  1249  000049                     	ds	4
  1250  00004D                     ??___fladd:
  1251                           
  1252                           ; 1 bytes @ 0x4C
  1253  00004D                     	ds	2
  1254  00004F                     floorf@m:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x4E
  1258  00004F                     	ds	2
  1259  000051                     ___fladd@signs:
  1260                           	callstack 0
  1261                           
  1262                           ; 1 bytes @ 0x50
  1263  000051                     	ds	1
  1264  000052                     ___fladd@aexp:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0x51
  1268  000052                     	ds	1
  1269  000053                     ___fladd@bexp:
  1270                           	callstack 0
  1271  000053                     floorf@e:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x52
  1275  000053                     	ds	1
  1276  000054                     ___fladd@grs:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0x53
  1280  000054                     	ds	1
  1281  000055                     ?___flsub:
  1282                           	callstack 0
  1283  000055                     ?___fltol:
  1284                           	callstack 0
  1285  000055                     ___fltol@f1:
  1286                           	callstack 0
  1287  000055                     ___flsub@b:
  1288                           	callstack 0
  1289  000055                     floorf@u:
  1290                           	callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x54
  1293  000055                     	ds	4
  1294  000059                     ??___fltol:
  1295  000059                     ___flsub@a:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0x58
  1299  000059                     	ds	4
  1300  00005D                     ___fltol@sign1:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x5C
  1304  00005D                     	ds	1
  1305  00005E                     ___fltol@exp1:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x5D
  1309  00005E                     	ds	1
  1310  00005F                     
  1311                           ; 1 bytes @ 0x5E
  1312 ;;
  1313 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1314 ;;
  1315 ;; *************** function _main *****************
  1316 ;; Defined at:
  1317 ;;		line 19 in file "smart_main.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  caso            2  128[BANK0 ] int 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1331 ;;      Params:         0       0       0       0       0       0       0       0       0
  1332 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1333 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1334 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1335 ;;Total ram usage:        4 bytes
  1336 ;; Hardware stack levels required when called: 9
  1337 ;; This function calls:
  1338 ;;		_Estado_Lluvioso
  1339 ;;		_Estado_Nublado
  1340 ;;		_Estado_Soleado
  1341 ;;		_Estados
  1342 ;;		_I2C_Init
  1343 ;;		_LCD_Clear
  1344 ;;		_LCD_Init
  1345 ;;		_LCD_MSdelay
  1346 ;;		_RTC_Calendario
  1347 ;; This function is called by:
  1348 ;;		Startup code after reset
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text0
  1353  003F74                     __ptext0:
  1354                           	callstack 0
  1355  003F74                     _main:
  1356                           	callstack 22
  1357  003F74                     
  1358                           ;smart_main.c: 20:     OSCCON = 0x72;
  1359  003F74  0E72               	movlw	114
  1360  003F76  6ED3               	movwf	211,c	;volatile
  1361                           
  1362                           ;smart_main.c: 21:     TRISE = 0x00;
  1363  003F78  0E00               	movlw	0
  1364  003F7A  6E96               	movwf	150,c	;volatile
  1365  003F7C                     
  1366                           ;smart_main.c: 24:     I2C_Init();
  1367  003F7C  ECD4  F024         	call	_I2C_Init	;wreg free
  1368  003F80                     
  1369                           ;smart_main.c: 25:     LCD_Init();
  1370  003F80  EC6A  F024         	call	_LCD_Init	;wreg free
  1371  003F84                     
  1372                           ;smart_main.c: 26:     LCD_Clear();
  1373  003F84  ECFF  F024         	call	_LCD_Clear	;wreg free
  1374  003F88                     l5600:
  1375                           
  1376                           ;smart_main.c: 29:         RTC_Calendario();
  1377  003F88  EC9A  F013         	call	_RTC_Calendario	;wreg free
  1378  003F8C                     
  1379                           ;smart_main.c: 30:         int caso = Estados();
  1380  003F8C  EC7F  F016         	call	_Estados	;wreg free
  1381  003F90  C066  F0E0         	movff	?_Estados,main@caso
  1382  003F94  C067  F0E1         	movff	?_Estados+1,main@caso+1
  1383                           
  1384                           ;smart_main.c: 31:         switch(caso){
  1385  003F98  EFDA  F01F         	goto	l5612
  1386  003F9C                     l5604:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;smart_main.c: 33:                 Estado_Soleado();
  1390  003F9C  EC96  F020         	call	_Estado_Soleado	;wreg free
  1391                           
  1392                           ;smart_main.c: 34:                 break;
  1393  003FA0  EFF5  F01F         	goto	l5614
  1394  003FA4                     l5606:
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;smart_main.c: 37:                 Estado_Nublado();
  1398  003FA4  EC7E  F021         	call	_Estado_Nublado	;wreg free
  1399                           
  1400                           ;smart_main.c: 38:                 break;
  1401  003FA8  EFF5  F01F         	goto	l5614
  1402  003FAC                     l5608:
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;smart_main.c: 41:                 Estado_Lluvioso();
  1406  003FAC  ECAB  F021         	call	_Estado_Lluvioso	;wreg free
  1407                           
  1408                           ;smart_main.c: 42:                 break;
  1409  003FB0  EFF5  F01F         	goto	l5614
  1410  003FB4                     l5612:
  1411  003FB4  C0E0  F0DE         	movff	main@caso,??_main
  1412  003FB8  C0E1  F0DF         	movff	main@caso+1,??_main+1
  1413                           
  1414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1415                           ; Switch size 1, requested type "simple"
  1416                           ; Number of cases is 1, Range of values is 0 to 0
  1417                           ; switch strategies available:
  1418                           ; Name         Instructions Cycles
  1419                           ; simple_byte            4     3 (average)
  1420                           ;	Chosen strategy is simple_byte
  1421  003FBC  0100               	movlb	0	; () banked
  1422  003FBE  51DF               	movf	(??_main+1)& (0+255),w,b
  1423  003FC0  0A00               	xorlw	0	; case 0
  1424  003FC2  B4D8               	btfsc	status,2,c
  1425  003FC4  EFE6  F01F         	goto	l5718
  1426  003FC8  EFF5  F01F         	goto	l5614
  1427  003FCC                     l5718:
  1428                           
  1429                           ; BSR set to: 0
  1430                           ; Switch size 1, requested type "simple"
  1431                           ; Number of cases is 3, Range of values is 1 to 3
  1432                           ; switch strategies available:
  1433                           ; Name         Instructions Cycles
  1434                           ; simple_byte           10     6 (average)
  1435                           ;	Chosen strategy is simple_byte
  1436  003FCC  51DE               	movf	??_main& (0+255),w,b
  1437  003FCE  0A01               	xorlw	1	; case 1
  1438  003FD0  B4D8               	btfsc	status,2,c
  1439  003FD2  EFCE  F01F         	goto	l5604
  1440  003FD6  0A03               	xorlw	3	; case 2
  1441  003FD8  B4D8               	btfsc	status,2,c
  1442  003FDA  EFD2  F01F         	goto	l5606
  1443  003FDE  0A01               	xorlw	1	; case 3
  1444  003FE0  B4D8               	btfsc	status,2,c
  1445  003FE2  EFD6  F01F         	goto	l5608
  1446  003FE6  EFF5  F01F         	goto	l5614
  1447  003FEA                     l5614:
  1448                           
  1449                           ;smart_main.c: 48:         LCD_MSdelay(3000);
  1450  003FEA  0E0B               	movlw	11
  1451  003FEC  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1452  003FEE  0EB8               	movlw	184
  1453  003FF0  6E01               	movwf	LCD_MSdelay@val^0,c
  1454  003FF2  EC9E  F022         	call	_LCD_MSdelay	;wreg free
  1455                           
  1456                           ;smart_main.c: 49:         LCD_Clear();
  1457  003FF6  ECFF  F024         	call	_LCD_Clear	;wreg free
  1458  003FFA  EFC4  F01F         	goto	l5600
  1459  003FFE  EF00  F000         	goto	start
  1460  004002                     __end_of_main:
  1461                           	callstack 0
  1462                           
  1463 ;; *************** function _RTC_Calendario *****************
  1464 ;; Defined at:
  1465 ;;		line 82 in file "reloj.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  hours          10   57[BANK1 ] unsigned char [10]
  1470 ;;  mins           10   47[BANK1 ] unsigned char [10]
  1471 ;;  secs           10   37[BANK1 ] unsigned char [10]
  1472 ;;  year           10   27[BANK1 ] unsigned char [10]
  1473 ;;  month          10   17[BANK1 ] unsigned char [10]
  1474 ;;  date           10    7[BANK1 ] unsigned char [10]
  1475 ;;  days            7    0[BANK1 ] unsigned char [7]
  1476 ;;  AM_PM           1   67[BANK1 ] unsigned char 
  1477 ;;  Clock_type      1    0        unsigned char 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1487 ;;      Params:         0       0       0       0       0       0       0       0       0
  1488 ;;      Locals:         0       0      68       0       0       0       0       0       0
  1489 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1490 ;;      Totals:         0       2      68       0       0       0       0       0       0
  1491 ;;Total ram usage:       70 bytes
  1492 ;; Hardware stack levels used: 1
  1493 ;; Hardware stack levels required when called: 8
  1494 ;; This function calls:
  1495 ;;		_I2C_Init
  1496 ;;		_I2C_Stop
  1497 ;;		_LCD_Clear
  1498 ;;		_LCD_Init
  1499 ;;		_LCD_MSdelay
  1500 ;;		_LCD_String
  1501 ;;		_LCD_String_xy
  1502 ;;		_RTC_Read_Calendar
  1503 ;;		_RTC_Read_Clock
  1504 ;;		_sprintf
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text1
  1511  002734                     __ptext1:
  1512                           	callstack 0
  1513  002734                     _RTC_Calendario:
  1514                           	callstack 22
  1515  002734                     
  1516                           ;reloj.c: 88:     char AM_PM = 0x05;
  1517  002734  0E05               	movlw	5
  1518  002736  0101               	movlb	1	; () banked
  1519  002738  6FB5               	movwf	RTC_Calendario@AM_PM& (0+255),b
  1520  00273A                     
  1521                           ; BSR set to: 1
  1522                           ;reloj.c: 89:     char days[7] = {'S','M','T','W','t','F','s'};
  1523  00273A  EE21  F0CE         	lfsr	2,RTC_Calendario@F3579
  1524  00273E  EE11  F072         	lfsr	1,RTC_Calendario@days
  1525  002742  0E06               	movlw	6
  1526  002744                     u5991:
  1527  002744  CFDB FFE3          	movff	plusw2,plusw1
  1528  002748  06E8               	decf	wreg,f,c
  1529  00274A  E2FC               	bc	u5991
  1530  00274C                     
  1531                           ; BSR set to: 1
  1532                           ;reloj.c: 90:     OSCCON=0x72;
  1533  00274C  0E72               	movlw	114
  1534  00274E  6ED3               	movwf	211,c	;volatile
  1535  002750                     
  1536                           ; BSR set to: 1
  1537                           ;reloj.c: 92:     I2C_Init();
  1538  002750  ECD4  F024         	call	_I2C_Init	;wreg free
  1539  002754                     
  1540                           ;reloj.c: 93:     LCD_Init();
  1541  002754  EC6A  F024         	call	_LCD_Init	;wreg free
  1542  002758                     
  1543                           ;reloj.c: 94:     LCD_Clear();
  1544  002758  ECFF  F024         	call	_LCD_Clear	;wreg free
  1545  00275C                     
  1546                           ;reloj.c: 95:     LCD_MSdelay(10);
  1547  00275C  0E00               	movlw	0
  1548  00275E  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1549  002760  0E0A               	movlw	10
  1550  002762  6E01               	movwf	LCD_MSdelay@val^0,c
  1551  002764  EC9E  F022         	call	_LCD_MSdelay	;wreg free
  1552  002768                     
  1553                           ;reloj.c: 97:     {;reloj.c: 98:         RTC_Read_Clock(0);
  1554  002768  0E00               	movlw	0
  1555  00276A  ECE7  F022         	call	_RTC_Read_Clock
  1556  00276E                     
  1557                           ;reloj.c: 99:         if(hour & (1<<Clock_type)){
  1558  00276E  0101               	movlb	1	; () banked
  1559  002770  AD08               	btfss	_hour& (0+255),6,b
  1560  002772  EFBD  F013         	goto	u6001
  1561  002776  EFBF  F013         	goto	u6000
  1562  00277A                     u6001:
  1563  00277A  EF23  F014         	goto	l5438
  1564  00277E                     u6000:
  1565  00277E                     
  1566                           ; BSR set to: 1
  1567                           ;reloj.c: 101:             if(hour & (1<<AM_PM)){
  1568  00277E  AB08               	btfss	_hour& (0+255),5,b
  1569  002780  EFC4  F013         	goto	u6011
  1570  002784  EFC6  F013         	goto	u6010
  1571  002788                     u6011:
  1572  002788  EFD1  F013         	goto	l5422
  1573  00278C                     u6010:
  1574  00278C                     
  1575                           ; BSR set to: 1
  1576                           ;reloj.c: 102:                 LCD_String_xy(1,14,"PM");
  1577  00278C  0E0E               	movlw	14
  1578  00278E  6E0B               	movwf	LCD_String_xy@pos^0,c
  1579  002790  0E46               	movlw	low STR_1
  1580  002792  6E0C               	movwf	LCD_String_xy@msg^0,c
  1581  002794  0E08               	movlw	high STR_1
  1582  002796  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1583  002798  0E01               	movlw	1
  1584  00279A  EC4F  F023         	call	_LCD_String_xy
  1585                           
  1586                           ;reloj.c: 103:             }
  1587  00279E  EFDA  F013         	goto	l5424
  1588  0027A2                     l5422:
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;reloj.c: 105:                 LCD_String_xy(1,14,"AM");
  1592  0027A2  0E0E               	movlw	14
  1593  0027A4  6E0B               	movwf	LCD_String_xy@pos^0,c
  1594  0027A6  0E43               	movlw	low STR_2
  1595  0027A8  6E0C               	movwf	LCD_String_xy@msg^0,c
  1596  0027AA  0E08               	movlw	high STR_2
  1597  0027AC  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1598  0027AE  0E01               	movlw	1
  1599  0027B0  EC4F  F023         	call	_LCD_String_xy
  1600  0027B4                     l5424:
  1601                           
  1602                           ;reloj.c: 108:             hour = hour & (0x1f);
  1603  0027B4  0E1F               	movlw	31
  1604  0027B6  0101               	movlb	1	; () banked
  1605  0027B8  1508               	andwf	_hour& (0+255),w,b
  1606  0027BA  6F08               	movwf	_hour& (0+255),b
  1607  0027BC  6B09               	clrf	(_hour+1)& (0+255),b
  1608  0027BE                     
  1609                           ; BSR set to: 1
  1610                           ;reloj.c: 109:             sprintf(secs,"%x ",sec);
  1611  0027BE  0E97               	movlw	low RTC_Calendario@secs
  1612  0027C0  0100               	movlb	0	; () banked
  1613  0027C2  6FCC               	movwf	sprintf@s& (0+255),b
  1614  0027C4  0E01               	movlw	high RTC_Calendario@secs
  1615  0027C6  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1616  0027C8  0E18               	movlw	low STR_3
  1617  0027CA  6FCE               	movwf	sprintf@fmt& (0+255),b
  1618  0027CC  0E08               	movlw	high STR_3
  1619  0027CE  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1620  0027D0  C10C  F0D0         	movff	_sec,?_sprintf+4
  1621  0027D4  C10D  F0D1         	movff	_sec+1,?_sprintf+5
  1622  0027D8  ECD8  F021         	call	_sprintf	;wreg free
  1623  0027DC                     
  1624                           ;reloj.c: 110:             sprintf(mins,"%x:",min);
  1625  0027DC  0EA1               	movlw	low RTC_Calendario@mins
  1626  0027DE  0100               	movlb	0	; () banked
  1627  0027E0  6FCC               	movwf	sprintf@s& (0+255),b
  1628  0027E2  0E01               	movlw	high RTC_Calendario@mins
  1629  0027E4  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1630  0027E6  0E20               	movlw	low STR_4
  1631  0027E8  6FCE               	movwf	sprintf@fmt& (0+255),b
  1632  0027EA  0E08               	movlw	high STR_4
  1633  0027EC  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1634  0027EE  C10A  F0D0         	movff	_min,?_sprintf+4
  1635  0027F2  C10B  F0D1         	movff	_min+1,?_sprintf+5
  1636  0027F6  ECD8  F021         	call	_sprintf	;wreg free
  1637  0027FA                     
  1638                           ;reloj.c: 111:             sprintf(hours,"%x:",hour);
  1639  0027FA  0EAB               	movlw	low RTC_Calendario@hours
  1640  0027FC  0100               	movlb	0	; () banked
  1641  0027FE  6FCC               	movwf	sprintf@s& (0+255),b
  1642  002800  0E01               	movlw	high RTC_Calendario@hours
  1643  002802  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1644  002804  0E20               	movlw	low STR_4
  1645  002806  6FCE               	movwf	sprintf@fmt& (0+255),b
  1646  002808  0E08               	movlw	high STR_4
  1647  00280A  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1648  00280C  C108  F0D0         	movff	_hour,?_sprintf+4
  1649  002810  C109  F0D1         	movff	_hour+1,?_sprintf+5
  1650  002814  ECD8  F021         	call	_sprintf	;wreg free
  1651  002818                     
  1652                           ;reloj.c: 112:             LCD_String_xy(0,4,hours);
  1653  002818  0E04               	movlw	4
  1654  00281A  6E0B               	movwf	LCD_String_xy@pos^0,c
  1655  00281C  0EAB               	movlw	low RTC_Calendario@hours
  1656  00281E  6E0C               	movwf	LCD_String_xy@msg^0,c
  1657  002820  0E01               	movlw	high RTC_Calendario@hours
  1658  002822  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1659  002824  0E00               	movlw	0
  1660  002826  EC4F  F023         	call	_LCD_String_xy
  1661  00282A                     l5434:
  1662                           
  1663                           ;reloj.c: 113:             LCD_String(mins);
  1664  00282A  0EA1               	movlw	low RTC_Calendario@mins
  1665  00282C  6E09               	movwf	LCD_String@msg^0,c
  1666  00282E  0E01               	movlw	high RTC_Calendario@mins
  1667  002830  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1668  002832  ECF4  F020         	call	_LCD_String	;wreg free
  1669  002836                     
  1670                           ;reloj.c: 114:             LCD_String(secs);
  1671  002836  0E97               	movlw	low RTC_Calendario@secs
  1672  002838  6E09               	movwf	LCD_String@msg^0,c
  1673  00283A  0E01               	movlw	high RTC_Calendario@secs
  1674  00283C  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1675  00283E  ECF4  F020         	call	_LCD_String	;wreg free
  1676                           
  1677                           ;reloj.c: 115:         }
  1678  002842  EF5F  F014         	goto	l5452
  1679  002846                     l5438:
  1680                           
  1681                           ; BSR set to: 1
  1682                           ;reloj.c: 118:             hour = hour & (0x3f);
  1683  002846  0E3F               	movlw	63
  1684  002848  1508               	andwf	_hour& (0+255),w,b
  1685  00284A  6F08               	movwf	_hour& (0+255),b
  1686  00284C  6B09               	clrf	(_hour+1)& (0+255),b
  1687  00284E                     
  1688                           ; BSR set to: 1
  1689                           ;reloj.c: 119:             sprintf(secs,"%x ",sec);
  1690  00284E  0E97               	movlw	low RTC_Calendario@secs
  1691  002850  0100               	movlb	0	; () banked
  1692  002852  6FCC               	movwf	sprintf@s& (0+255),b
  1693  002854  0E01               	movlw	high RTC_Calendario@secs
  1694  002856  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1695  002858  0E18               	movlw	low STR_3
  1696  00285A  6FCE               	movwf	sprintf@fmt& (0+255),b
  1697  00285C  0E08               	movlw	high STR_3
  1698  00285E  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1699  002860  C10C  F0D0         	movff	_sec,?_sprintf+4
  1700  002864  C10D  F0D1         	movff	_sec+1,?_sprintf+5
  1701  002868  ECD8  F021         	call	_sprintf	;wreg free
  1702  00286C                     
  1703                           ;reloj.c: 120:             sprintf(mins,"%x:",min);
  1704  00286C  0EA1               	movlw	low RTC_Calendario@mins
  1705  00286E  0100               	movlb	0	; () banked
  1706  002870  6FCC               	movwf	sprintf@s& (0+255),b
  1707  002872  0E01               	movlw	high RTC_Calendario@mins
  1708  002874  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1709  002876  0E20               	movlw	low STR_4
  1710  002878  6FCE               	movwf	sprintf@fmt& (0+255),b
  1711  00287A  0E08               	movlw	high STR_4
  1712  00287C  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1713  00287E  C10A  F0D0         	movff	_min,?_sprintf+4
  1714  002882  C10B  F0D1         	movff	_min+1,?_sprintf+5
  1715  002886  ECD8  F021         	call	_sprintf	;wreg free
  1716  00288A                     
  1717                           ;reloj.c: 121:             sprintf(hours,"%x:",hour);
  1718  00288A  0EAB               	movlw	low RTC_Calendario@hours
  1719  00288C  0100               	movlb	0	; () banked
  1720  00288E  6FCC               	movwf	sprintf@s& (0+255),b
  1721  002890  0E01               	movlw	high RTC_Calendario@hours
  1722  002892  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1723  002894  0E20               	movlw	low STR_4
  1724  002896  6FCE               	movwf	sprintf@fmt& (0+255),b
  1725  002898  0E08               	movlw	high STR_4
  1726  00289A  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1727  00289C  C108  F0D0         	movff	_hour,?_sprintf+4
  1728  0028A0  C109  F0D1         	movff	_hour+1,?_sprintf+5
  1729  0028A4  ECD8  F021         	call	_sprintf	;wreg free
  1730  0028A8                     
  1731                           ;reloj.c: 122:             LCD_String_xy(0,4,hours);
  1732  0028A8  0E04               	movlw	4
  1733  0028AA  6E0B               	movwf	LCD_String_xy@pos^0,c
  1734  0028AC  0EAB               	movlw	low RTC_Calendario@hours
  1735  0028AE  6E0C               	movwf	LCD_String_xy@msg^0,c
  1736  0028B0  0E01               	movlw	high RTC_Calendario@hours
  1737  0028B2  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1738  0028B4  0E00               	movlw	0
  1739  0028B6  EC4F  F023         	call	_LCD_String_xy
  1740  0028BA  EF15  F014         	goto	l5434
  1741  0028BE                     l5452:
  1742                           
  1743                           ;reloj.c: 127:         RTC_Read_Calendar(3);
  1744  0028BE  0E03               	movlw	3
  1745  0028C0  EC51  F021         	call	_RTC_Read_Calendar
  1746  0028C4                     
  1747                           ;reloj.c: 128:         I2C_Stop();
  1748  0028C4  ECE1  F024         	call	_I2C_Stop	;wreg free
  1749  0028C8                     
  1750                           ;reloj.c: 129:         sprintf(date,"%x-",Date);
  1751  0028C8  0E79               	movlw	low RTC_Calendario@date
  1752  0028CA  0100               	movlb	0	; () banked
  1753  0028CC  6FCC               	movwf	sprintf@s& (0+255),b
  1754  0028CE  0E01               	movlw	high RTC_Calendario@date
  1755  0028D0  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1756  0028D2  0E1C               	movlw	low STR_9
  1757  0028D4  6FCE               	movwf	sprintf@fmt& (0+255),b
  1758  0028D6  0E08               	movlw	high STR_9
  1759  0028D8  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1760  0028DA  C104  F0D0         	movff	_Date,?_sprintf+4
  1761  0028DE  C105  F0D1         	movff	_Date+1,?_sprintf+5
  1762  0028E2  ECD8  F021         	call	_sprintf	;wreg free
  1763  0028E6                     
  1764                           ;reloj.c: 130:         sprintf(month,"%x-",Month);
  1765  0028E6  0E83               	movlw	low RTC_Calendario@month
  1766  0028E8  0100               	movlb	0	; () banked
  1767  0028EA  6FCC               	movwf	sprintf@s& (0+255),b
  1768  0028EC  0E01               	movlw	high RTC_Calendario@month
  1769  0028EE  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1770  0028F0  0E1C               	movlw	low STR_9
  1771  0028F2  6FCE               	movwf	sprintf@fmt& (0+255),b
  1772  0028F4  0E08               	movlw	high STR_9
  1773  0028F6  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1774  0028F8  C102  F0D0         	movff	_Month,?_sprintf+4
  1775  0028FC  C103  F0D1         	movff	_Month+1,?_sprintf+5
  1776  002900  ECD8  F021         	call	_sprintf	;wreg free
  1777  002904                     
  1778                           ;reloj.c: 131:         sprintf(year,"%x ",Year);
  1779  002904  0E8D               	movlw	low RTC_Calendario@year
  1780  002906  0100               	movlb	0	; () banked
  1781  002908  6FCC               	movwf	sprintf@s& (0+255),b
  1782  00290A  0E01               	movlw	high RTC_Calendario@year
  1783  00290C  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1784  00290E  0E18               	movlw	low STR_3
  1785  002910  6FCE               	movwf	sprintf@fmt& (0+255),b
  1786  002912  0E08               	movlw	high STR_3
  1787  002914  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1788  002916  C100  F0D0         	movff	_Year,?_sprintf+4
  1789  00291A  C101  F0D1         	movff	_Year+1,?_sprintf+5
  1790  00291E  ECD8  F021         	call	_sprintf	;wreg free
  1791  002922                     
  1792                           ;reloj.c: 132:         LCD_String_xy(2,2,date);
  1793  002922  0E02               	movlw	2
  1794  002924  6E0B               	movwf	LCD_String_xy@pos^0,c
  1795  002926  0E79               	movlw	low RTC_Calendario@date
  1796  002928  6E0C               	movwf	LCD_String_xy@msg^0,c
  1797  00292A  0E01               	movlw	high RTC_Calendario@date
  1798  00292C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1799  00292E  0E02               	movlw	2
  1800  002930  EC4F  F023         	call	_LCD_String_xy
  1801  002934                     
  1802                           ;reloj.c: 133:         LCD_String(month);
  1803  002934  0E83               	movlw	low RTC_Calendario@month
  1804  002936  6E09               	movwf	LCD_String@msg^0,c
  1805  002938  0E01               	movlw	high RTC_Calendario@month
  1806  00293A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1807  00293C  ECF4  F020         	call	_LCD_String	;wreg free
  1808  002940                     
  1809                           ;reloj.c: 134:         LCD_String(year);
  1810  002940  0E8D               	movlw	low RTC_Calendario@year
  1811  002942  6E09               	movwf	LCD_String@msg^0,c
  1812  002944  0E01               	movlw	high RTC_Calendario@year
  1813  002946  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1814  002948  ECF4  F020         	call	_LCD_String	;wreg free
  1815                           
  1816                           ;reloj.c: 137:         switch(days[Day])
  1817  00294C  EFE0  F014         	goto	l5512
  1818  002950                     l5468:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;reloj.c: 140:                         LCD_String("Sun");
  1822  002950  0E34               	movlw	low STR_12
  1823  002952  6E09               	movwf	LCD_String@msg^0,c
  1824  002954  0E08               	movlw	high STR_12
  1825  002956  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1826  002958  ECF4  F020         	call	_LCD_String	;wreg free
  1827  00295C  EF11  F015         	goto	l328
  1828  002960                     l5474:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;reloj.c: 144:                         LCD_String("Mon");
  1832  002960  0E30               	movlw	low STR_13
  1833  002962  6E09               	movwf	LCD_String@msg^0,c
  1834  002964  0E08               	movlw	high STR_13
  1835  002966  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1836  002968  ECF4  F020         	call	_LCD_String	;wreg free
  1837  00296C  EF11  F015         	goto	l328
  1838  002970                     l5480:
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;reloj.c: 148:                         LCD_String("Tue");
  1842  002970  0E28               	movlw	low STR_14
  1843  002972  6E09               	movwf	LCD_String@msg^0,c
  1844  002974  0E08               	movlw	high STR_14
  1845  002976  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1846  002978  ECF4  F020         	call	_LCD_String	;wreg free
  1847  00297C  EF11  F015         	goto	l328
  1848  002980                     l5486:
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;reloj.c: 152:                         LCD_String("Wed");
  1852  002980  0E24               	movlw	low STR_15
  1853  002982  6E09               	movwf	LCD_String@msg^0,c
  1854  002984  0E08               	movlw	high STR_15
  1855  002986  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1856  002988  ECF4  F020         	call	_LCD_String	;wreg free
  1857  00298C  EF11  F015         	goto	l328
  1858  002990                     l5492:
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;reloj.c: 156:                         LCD_String("Thu");
  1862  002990  0E3C               	movlw	low STR_16
  1863  002992  6E09               	movwf	LCD_String@msg^0,c
  1864  002994  0E08               	movlw	high STR_16
  1865  002996  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1866  002998  ECF4  F020         	call	_LCD_String	;wreg free
  1867  00299C  EF11  F015         	goto	l328
  1868  0029A0                     l5498:
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;reloj.c: 160:                         LCD_String("Fri");
  1872  0029A0  0E2C               	movlw	low STR_17
  1873  0029A2  6E09               	movwf	LCD_String@msg^0,c
  1874  0029A4  0E08               	movlw	high STR_17
  1875  0029A6  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1876  0029A8  ECF4  F020         	call	_LCD_String	;wreg free
  1877  0029AC  EF11  F015         	goto	l328
  1878  0029B0                     l5504:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;reloj.c: 164:                         LCD_String("Sat");
  1882  0029B0  0E38               	movlw	low STR_18
  1883  0029B2  6E09               	movwf	LCD_String@msg^0,c
  1884  0029B4  0E08               	movlw	high STR_18
  1885  0029B6  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1886  0029B8  ECF4  F020         	call	_LCD_String	;wreg free
  1887  0029BC  EF11  F015         	goto	l328
  1888  0029C0                     l5512:
  1889  0029C0  0E72               	movlw	low RTC_Calendario@days
  1890  0029C2  0101               	movlb	1	; () banked
  1891  0029C4  2506               	addwf	_Day& (0+255),w,b
  1892  0029C6  6ED9               	movwf	fsr2l,c
  1893  0029C8  0E01               	movlw	high RTC_Calendario@days
  1894  0029CA  2107               	addwfc	(_Day+1)& (0+255),w,b
  1895  0029CC  6EDA               	movwf	fsr2h,c
  1896  0029CE  50DF               	movf	indf2,w,c
  1897  0029D0  0100               	movlb	0	; () banked
  1898  0029D2  6FDC               	movwf	??_RTC_Calendario& (0+255),b
  1899  0029D4  6BDD               	clrf	(??_RTC_Calendario+1)& (0+255),b
  1900                           
  1901                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1902                           ; Switch size 1, requested type "simple"
  1903                           ; Number of cases is 1, Range of values is 0 to 0
  1904                           ; switch strategies available:
  1905                           ; Name         Instructions Cycles
  1906                           ; simple_byte            4     3 (average)
  1907                           ;	Chosen strategy is simple_byte
  1908  0029D6  51DD               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  1909  0029D8  0A00               	xorlw	0	; case 0
  1910  0029DA  B4D8               	btfsc	status,2,c
  1911  0029DC  EFF2  F014         	goto	l5720
  1912  0029E0  EF11  F015         	goto	l328
  1913  0029E4                     l5720:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ; Switch size 1, requested type "simple"
  1917                           ; Number of cases is 7, Range of values is 70 to 116
  1918                           ; switch strategies available:
  1919                           ; Name         Instructions Cycles
  1920                           ; simple_byte           22    12 (average)
  1921                           ;	Chosen strategy is simple_byte
  1922  0029E4  51DC               	movf	??_RTC_Calendario& (0+255),w,b
  1923  0029E6  0A46               	xorlw	70	; case 70
  1924  0029E8  B4D8               	btfsc	status,2,c
  1925  0029EA  EFD0  F014         	goto	l5498
  1926  0029EE  0A0B               	xorlw	11	; case 77
  1927  0029F0  B4D8               	btfsc	status,2,c
  1928  0029F2  EFB0  F014         	goto	l5474
  1929  0029F6  0A1E               	xorlw	30	; case 83
  1930  0029F8  B4D8               	btfsc	status,2,c
  1931  0029FA  EFA8  F014         	goto	l5468
  1932  0029FE  0A07               	xorlw	7	; case 84
  1933  002A00  B4D8               	btfsc	status,2,c
  1934  002A02  EFB8  F014         	goto	l5480
  1935  002A06  0A03               	xorlw	3	; case 87
  1936  002A08  B4D8               	btfsc	status,2,c
  1937  002A0A  EFC0  F014         	goto	l5486
  1938  002A0E  0A24               	xorlw	36	; case 115
  1939  002A10  B4D8               	btfsc	status,2,c
  1940  002A12  EFD8  F014         	goto	l5504
  1941  002A16  0A07               	xorlw	7	; case 116
  1942  002A18  B4D8               	btfsc	status,2,c
  1943  002A1A  EFC8  F014         	goto	l5492
  1944  002A1E  EF11  F015         	goto	l328
  1945  002A22                     l328:
  1946  002A22  0012               	return		;funcret
  1947  002A24                     __end_of_RTC_Calendario:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function _RTC_Read_Clock *****************
  1951 ;; Defined at:
  1952 ;;		line 31 in file "reloj.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  read_clock_a    1    wreg     unsigned char 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1966 ;;      Params:         0       0       0       0       0       0       0       0       0
  1967 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1968 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1969 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1970 ;;Total ram usage:        2 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 3
  1973 ;; This function calls:
  1974 ;;		_I2C_Read
  1975 ;;		_I2C_Repeated_Start
  1976 ;;		_I2C_Start
  1977 ;;		_I2C_Write
  1978 ;; This function is called by:
  1979 ;;		_RTC_Calendario
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text2
  1984  0045CE                     __ptext2:
  1985                           	callstack 0
  1986  0045CE                     _RTC_Read_Clock:
  1987                           	callstack 26
  1988                           
  1989                           ;incstack = 0
  1990                           ;RTC_Read_Clock@read_clock_address stored from wreg
  1991  0045CE  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  1992  0045D0                     
  1993                           ;reloj.c: 31: void RTC_Read_Clock(char read_clock_address);reloj.c: 32: {;reloj.c: 33:  
      +                             I2C_Start(0xD0);
  1994  0045D0  0ED0               	movlw	208
  1995  0045D2  EC82  F024         	call	_I2C_Start
  1996                           
  1997                           ;reloj.c: 34:     I2C_Write(read_clock_address);
  1998  0045D6  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  1999  0045D8  ECC3  F024         	call	_I2C_Write
  2000                           
  2001                           ;reloj.c: 35:     I2C_Repeated_Start(0xD1);
  2002  0045DC  0ED1               	movlw	209
  2003  0045DE  EC99  F024         	call	_I2C_Repeated_Start
  2004  0045E2                     
  2005                           ;reloj.c: 36:     sec = I2C_Read(0);
  2006  0045E2  0E00               	movlw	0
  2007  0045E4  EC8D  F023         	call	_I2C_Read
  2008  0045E8  6E03               	movwf	??_RTC_Read_Clock^0,c
  2009  0045EA  5003               	movf	??_RTC_Read_Clock^0,w,c
  2010  0045EC  0101               	movlb	1	; () banked
  2011  0045EE  6F0C               	movwf	_sec& (0+255),b
  2012  0045F0  6B0D               	clrf	(_sec+1)& (0+255),b
  2013  0045F2                     
  2014                           ; BSR set to: 1
  2015                           ;reloj.c: 37:     min = I2C_Read(0);
  2016  0045F2  0E00               	movlw	0
  2017  0045F4  EC8D  F023         	call	_I2C_Read
  2018  0045F8  6E03               	movwf	??_RTC_Read_Clock^0,c
  2019  0045FA  5003               	movf	??_RTC_Read_Clock^0,w,c
  2020  0045FC  0101               	movlb	1	; () banked
  2021  0045FE  6F0A               	movwf	_min& (0+255),b
  2022  004600  6B0B               	clrf	(_min+1)& (0+255),b
  2023  004602                     
  2024                           ; BSR set to: 1
  2025                           ;reloj.c: 38:     hour= I2C_Read(1);
  2026  004602  0E01               	movlw	1
  2027  004604  EC8D  F023         	call	_I2C_Read
  2028  004608  6E03               	movwf	??_RTC_Read_Clock^0,c
  2029  00460A  5003               	movf	??_RTC_Read_Clock^0,w,c
  2030  00460C  0101               	movlb	1	; () banked
  2031  00460E  6F08               	movwf	_hour& (0+255),b
  2032  004610  6B09               	clrf	(_hour+1)& (0+255),b
  2033  004612                     
  2034                           ; BSR set to: 1
  2035  004612  0012               	return		;funcret
  2036  004614                     __end_of_RTC_Read_Clock:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _RTC_Read_Calendar *****************
  2040 ;; Defined at:
  2041 ;;		line 54 in file "reloj.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  read_calenda    1    wreg     unsigned char 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  read_calenda    1    3[COMRAM] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0
  2056 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2057 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2058 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2059 ;;Total ram usage:        2 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 3
  2062 ;; This function calls:
  2063 ;;		_I2C_Read
  2064 ;;		_I2C_Repeated_Start
  2065 ;;		_I2C_Start
  2066 ;;		_I2C_Stop
  2067 ;;		_I2C_Write
  2068 ;; This function is called by:
  2069 ;;		_RTC_Calendario
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text3
  2074  0042A2                     __ptext3:
  2075                           	callstack 0
  2076  0042A2                     _RTC_Read_Calendar:
  2077                           	callstack 26
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;incstack = 0
  2081                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  2082  0042A2  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  2083  0042A4                     
  2084                           ;reloj.c: 54: void RTC_Read_Calendar(char read_calendar_address);reloj.c: 55: {;reloj.c:
      +                           56:     I2C_Start(0xD0);
  2085  0042A4  0ED0               	movlw	208
  2086  0042A6  EC82  F024         	call	_I2C_Start
  2087                           
  2088                           ;reloj.c: 57:     I2C_Write(read_calendar_address);
  2089  0042AA  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  2090  0042AC  ECC3  F024         	call	_I2C_Write
  2091                           
  2092                           ;reloj.c: 58:     I2C_Repeated_Start(0xD1);
  2093  0042B0  0ED1               	movlw	209
  2094  0042B2  EC99  F024         	call	_I2C_Repeated_Start
  2095  0042B6                     
  2096                           ;reloj.c: 59:     Day = I2C_Read(0);
  2097  0042B6  0E00               	movlw	0
  2098  0042B8  EC8D  F023         	call	_I2C_Read
  2099  0042BC  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2100  0042BE  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2101  0042C0  0101               	movlb	1	; () banked
  2102  0042C2  6F06               	movwf	_Day& (0+255),b
  2103  0042C4  6B07               	clrf	(_Day+1)& (0+255),b
  2104  0042C6                     
  2105                           ; BSR set to: 1
  2106                           ;reloj.c: 60:     Date = I2C_Read(0);
  2107  0042C6  0E00               	movlw	0
  2108  0042C8  EC8D  F023         	call	_I2C_Read
  2109  0042CC  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2110  0042CE  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2111  0042D0  0101               	movlb	1	; () banked
  2112  0042D2  6F04               	movwf	_Date& (0+255),b
  2113  0042D4  6B05               	clrf	(_Date+1)& (0+255),b
  2114  0042D6                     
  2115                           ; BSR set to: 1
  2116                           ;reloj.c: 61:     Month = I2C_Read(0);
  2117  0042D6  0E00               	movlw	0
  2118  0042D8  EC8D  F023         	call	_I2C_Read
  2119  0042DC  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2120  0042DE  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2121  0042E0  0101               	movlb	1	; () banked
  2122  0042E2  6F02               	movwf	_Month& (0+255),b
  2123  0042E4  6B03               	clrf	(_Month+1)& (0+255),b
  2124  0042E6                     
  2125                           ; BSR set to: 1
  2126                           ;reloj.c: 62:     Year = I2C_Read(1);
  2127  0042E6  0E01               	movlw	1
  2128  0042E8  EC8D  F023         	call	_I2C_Read
  2129  0042EC  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2130  0042EE  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2131  0042F0  0101               	movlb	1	; () banked
  2132  0042F2  6F00               	movwf	_Year& (0+255),b
  2133  0042F4  6B01               	clrf	(_Year+1)& (0+255),b
  2134  0042F6                     
  2135                           ; BSR set to: 1
  2136                           ;reloj.c: 63:     I2C_Stop();
  2137  0042F6  ECE1  F024         	call	_I2C_Stop	;wreg free
  2138  0042FA  0012               	return		;funcret
  2139  0042FC                     __end_of_RTC_Read_Calendar:
  2140                           	callstack 0
  2141                           
  2142 ;; *************** function _I2C_Stop *****************
  2143 ;; Defined at:
  2144 ;;		line 186 in file "Reloj_ar.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;		None
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      unsigned char 
  2151 ;; Registers used:
  2152 ;;		wreg
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0
  2159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2161 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2162 ;;Total ram usage:        0 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_RTC_Read_Calendar
  2168 ;;		_RTC_Calendario
  2169 ;;		_I2C_Start_Wait
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text4
  2174  0049C2                     __ptext4:
  2175                           	callstack 0
  2176  0049C2                     _I2C_Stop:
  2177                           	callstack 28
  2178  0049C2                     
  2179                           ;Reloj_ar.c: 188:     PEN = 1;
  2180  0049C2  84C5               	bsf	4037,2,c	;volatile
  2181  0049C4                     l429:
  2182  0049C4  B4C5               	btfsc	4037,2,c	;volatile
  2183  0049C6  EFE7  F024         	goto	u5821
  2184  0049CA  EFE9  F024         	goto	u5820
  2185  0049CE                     u5821:
  2186  0049CE  EFE2  F024         	goto	l429
  2187  0049D2                     u5820:
  2188  0049D2                     
  2189                           ;Reloj_ar.c: 190:     if(!SSPSTATbits.P);
  2190  0049D2  50C7               	movf	199,w,c	;volatile
  2191  0049D4  0012               	return		;funcret
  2192  0049D6                     __end_of_I2C_Stop:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _I2C_Start *****************
  2196 ;; Defined at:
  2197 ;;		line 134 in file "Reloj_ar.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  slave_write_    1    wreg     unsigned char 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  slave_write_    1    1[COMRAM] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      unsigned char 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0
  2212 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2214 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2215 ;;Total ram usage:        1 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 2
  2218 ;; This function calls:
  2219 ;;		_I2C_Write
  2220 ;; This function is called by:
  2221 ;;		_RTC_Read_Clock
  2222 ;;		_RTC_Read_Calendar
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text5
  2227  004904                     __ptext5:
  2228                           	callstack 0
  2229  004904                     _I2C_Start:
  2230                           	callstack 26
  2231                           
  2232                           ;incstack = 0
  2233                           ;I2C_Start@slave_write_address stored from wreg
  2234  004904  6E02               	movwf	I2C_Start@slave_write_address^0,c
  2235  004906                     
  2236                           ;Reloj_ar.c: 134: char I2C_Start(char slave_write_address);Reloj_ar.c: 135: {;Reloj_ar.c
      +                          : 136:     SSPCON2bits.SEN=1;
  2237  004906  80C5               	bsf	197,0,c	;volatile
  2238  004908                     l413:
  2239  004908  B0C5               	btfsc	197,0,c	;volatile
  2240  00490A  EF89  F024         	goto	u5761
  2241  00490E  EF8B  F024         	goto	u5760
  2242  004912                     u5761:
  2243  004912  EF84  F024         	goto	l413
  2244  004916                     u5760:
  2245  004916                     
  2246                           ;Reloj_ar.c: 138:  SSPIF=0;
  2247  004916  969E               	bcf	3998,3,c	;volatile
  2248                           
  2249                           ;Reloj_ar.c: 139:     if(!SSPSTATbits.S)
  2250  004918  B6C7               	btfsc	199,3,c	;volatile
  2251  00491A  EF91  F024         	goto	u5771
  2252  00491E  EF93  F024         	goto	u5770
  2253  004922                     u5771:
  2254  004922  EF95  F024         	goto	l5174
  2255  004926                     u5770:
  2256  004926  EF98  F024         	goto	l417
  2257  00492A                     l5174:
  2258                           
  2259                           ;Reloj_ar.c: 141:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Sta
      +                          rt is never used
  2260  00492A  5002               	movf	I2C_Start@slave_write_address^0,w,c
  2261  00492C  ECC3  F024         	call	_I2C_Write
  2262  004930                     l417:
  2263  004930  0012               	return		;funcret
  2264  004932                     __end_of_I2C_Start:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _I2C_Repeated_Start *****************
  2268 ;; Defined at:
  2269 ;;		line 159 in file "Reloj_ar.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  slave_read_a    1    wreg     unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      unsigned char 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2283 ;;      Params:         0       0       0       0       0       0       0       0       0
  2284 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2286 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2287 ;;Total ram usage:        1 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 2
  2290 ;; This function calls:
  2291 ;;		_I2C_Write
  2292 ;; This function is called by:
  2293 ;;		_RTC_Read_Clock
  2294 ;;		_RTC_Read_Calendar
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text6
  2299  004932                     __ptext6:
  2300                           	callstack 0
  2301  004932                     _I2C_Repeated_Start:
  2302                           	callstack 26
  2303                           
  2304                           ;incstack = 0
  2305                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  2306  004932  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  2307  004934                     
  2308                           ;Reloj_ar.c: 159: char I2C_Repeated_Start(char slave_read_address);Reloj_ar.c: 160: {;Re
      +                          loj_ar.c: 161:     RSEN = 1;
  2309  004934  82C5               	bsf	4037,1,c	;volatile
  2310  004936                     l420:
  2311  004936  B2C5               	btfsc	4037,1,c	;volatile
  2312  004938  EFA0  F024         	goto	u5781
  2313  00493C  EFA2  F024         	goto	u5780
  2314  004940                     u5781:
  2315  004940  EF9B  F024         	goto	l420
  2316  004944                     u5780:
  2317  004944                     
  2318                           ;Reloj_ar.c: 163:     SSPIF = 0;
  2319  004944  969E               	bcf	3998,3,c	;volatile
  2320                           
  2321                           ;Reloj_ar.c: 164:  if(!SSPSTATbits.S)
  2322  004946  B6C7               	btfsc	199,3,c	;volatile
  2323  004948  EFA8  F024         	goto	u5791
  2324  00494C  EFAA  F024         	goto	u5790
  2325  004950                     u5791:
  2326  004950  EFAC  F024         	goto	l5182
  2327  004954                     u5790:
  2328  004954  EFAF  F024         	goto	l424
  2329  004958                     l5182:
  2330                           
  2331                           ;Reloj_ar.c: 166:     I2C_Write(slave_read_address);
  2332  004958  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  2333  00495A  ECC3  F024         	call	_I2C_Write
  2334  00495E                     l424:
  2335  00495E  0012               	return		;funcret
  2336  004960                     __end_of_I2C_Repeated_Start:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _I2C_Write *****************
  2340 ;; Defined at:
  2341 ;;		line 208 in file "Reloj_ar.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  data            1    wreg     unsigned char 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  data            1    0[COMRAM] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      unsigned char 
  2348 ;; Registers used:
  2349 ;;		wreg, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0
  2356 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2358 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2359 ;;Total ram usage:        1 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 1
  2362 ;; This function calls:
  2363 ;;		_I2C_Ready
  2364 ;; This function is called by:
  2365 ;;		_RTC_Read_Clock
  2366 ;;		_RTC_Read_Calendar
  2367 ;;		_I2C_Start
  2368 ;;		_I2C_Repeated_Start
  2369 ;;		_I2C_Start_Wait
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text7
  2374  004986                     __ptext7:
  2375                           	callstack 0
  2376  004986                     _I2C_Write:
  2377                           	callstack 27
  2378                           
  2379                           ;incstack = 0
  2380                           ;I2C_Write@data stored from wreg
  2381  004986  6E01               	movwf	I2C_Write@data^0,c
  2382  004988                     
  2383                           ;Reloj_ar.c: 208: char I2C_Write(unsigned char data);Reloj_ar.c: 209: {;Reloj_ar.c: 210:
      +                                 SSPBUF = data;
  2384  004988  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  2385  00498C                     
  2386                           ;Reloj_ar.c: 211:       I2C_Ready();
  2387  00498C  EC09  F025         	call	_I2C_Ready	;wreg free
  2388  004990                     
  2389                           ;Reloj_ar.c: 212:       if (ACKSTAT)
  2390  004990  ACC5               	btfss	4037,6,c	;volatile
  2391  004992  EFCD  F024         	goto	u5491
  2392  004996  EFCF  F024         	goto	u5490
  2393  00499A                     u5491:
  2394  00499A  EFD2  F024         	goto	l4960
  2395  00499E                     u5490:
  2396  00499E                     
  2397                           ;Reloj_ar.c: 213:         return 1;
  2398  00499E  0E01               	movlw	1
  2399  0049A0  EFD3  F024         	goto	l437
  2400  0049A4                     l4960:
  2401                           
  2402                           ;Reloj_ar.c: 215:         return 2;
  2403  0049A4  0E02               	movlw	2
  2404  0049A6                     l437:
  2405  0049A6  0012               	return		;funcret
  2406  0049A8                     __end_of_I2C_Write:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function _I2C_Read *****************
  2410 ;; Defined at:
  2411 ;;		line 27 in file "Reloj_ar.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  flag            1    wreg     unsigned char 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  flag            1    0[COMRAM] unsigned char 
  2416 ;;  buffer          1    1[COMRAM] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      unsigned char 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0
  2427 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2429 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2430 ;;Total ram usage:        2 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 1
  2433 ;; This function calls:
  2434 ;;		_I2C_Ack
  2435 ;;		_I2C_Nack
  2436 ;;		_I2C_Ready
  2437 ;; This function is called by:
  2438 ;;		_RTC_Read_Clock
  2439 ;;		_RTC_Read_Calendar
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text8
  2444  00471A                     __ptext8:
  2445                           	callstack 0
  2446  00471A                     _I2C_Read:
  2447                           	callstack 27
  2448                           
  2449                           ;incstack = 0
  2450                           ;I2C_Read@flag stored from wreg
  2451  00471A  6E01               	movwf	I2C_Read@flag^0,c
  2452  00471C                     
  2453                           ;Reloj_ar.c: 27: char I2C_Read(char flag);Reloj_ar.c: 29: {;Reloj_ar.c: 30:         char
      +                           buffer;;Reloj_ar.c: 31:         RCEN = 1;
  2454  00471C  86C5               	bsf	4037,3,c	;volatile
  2455  00471E                     l385:
  2456  00471E  A0C7               	btfss	199,0,c	;volatile
  2457  004720  EF94  F023         	goto	u5801
  2458  004724  EF96  F023         	goto	u5800
  2459  004728                     u5801:
  2460  004728  EF8F  F023         	goto	l385
  2461  00472C                     u5800:
  2462  00472C                     
  2463                           ;Reloj_ar.c: 34:         buffer = SSPBUF;
  2464  00472C  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  2465  004730                     
  2466                           ;Reloj_ar.c: 36:         if(flag==0)
  2467  004730  5001               	movf	I2C_Read@flag^0,w,c
  2468  004732  A4D8               	btfss	status,2,c
  2469  004734  EF9E  F023         	goto	u5811
  2470  004738  EFA0  F023         	goto	u5810
  2471  00473C                     u5811:
  2472  00473C  EFA4  F023         	goto	l5196
  2473  004740                     u5810:
  2474  004740                     
  2475                           ;Reloj_ar.c: 37:             I2C_Ack();
  2476  004740  ECF5  F024         	call	_I2C_Ack	;wreg free
  2477  004744  EFA6  F023         	goto	l389
  2478  004748                     l5196:
  2479                           
  2480                           ;Reloj_ar.c: 39:             I2C_Nack();
  2481  004748  ECEB  F024         	call	_I2C_Nack	;wreg free
  2482  00474C                     l389:
  2483                           
  2484                           ;Reloj_ar.c: 40:         I2C_Ready();
  2485  00474C  EC09  F025         	call	_I2C_Ready	;wreg free
  2486  004750                     
  2487                           ;Reloj_ar.c: 41:         return(buffer);
  2488  004750  5002               	movf	I2C_Read@buffer^0,w,c
  2489  004752  0012               	return		;funcret
  2490  004754                     __end_of_I2C_Read:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _I2C_Ready *****************
  2494 ;; Defined at:
  2495 ;;		line 83 in file "Reloj_ar.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		None
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_I2C_Read
  2519 ;;		_I2C_Write
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text9
  2524  004A12                     __ptext9:
  2525                           	callstack 0
  2526  004A12                     _I2C_Ready:
  2527                           	callstack 27
  2528  004A12                     l396:
  2529  004A12  A69E               	btfss	3998,3,c	;volatile
  2530  004A14  EF0E  F025         	goto	u4641
  2531  004A18  EF10  F025         	goto	u4640
  2532  004A1C                     u4641:
  2533  004A1C  EF09  F025         	goto	l396
  2534  004A20                     u4640:
  2535  004A20                     
  2536                           ;Reloj_ar.c: 86:     SSPIF=0;
  2537  004A20  969E               	bcf	3998,3,c	;volatile
  2538  004A22  0012               	return		;funcret
  2539  004A24                     __end_of_I2C_Ready:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _I2C_Nack *****************
  2543 ;; Defined at:
  2544 ;;		line 250 in file "Reloj_ar.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		None
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2561 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2562 ;;Total ram usage:        0 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_I2C_Read
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text10
  2572  0049D6                     __ptext10:
  2573                           	callstack 0
  2574  0049D6                     _I2C_Nack:
  2575                           	callstack 27
  2576  0049D6                     
  2577                           ;Reloj_ar.c: 252:     ACKDT=1;
  2578  0049D6  8AC5               	bsf	4037,5,c	;volatile
  2579                           
  2580                           ;Reloj_ar.c: 253:  ACKEN=1;
  2581  0049D8  88C5               	bsf	4037,4,c	;volatile
  2582  0049DA                     l447:
  2583  0049DA  B8C5               	btfsc	4037,4,c	;volatile
  2584  0049DC  EFF2  F024         	goto	u5511
  2585  0049E0  EFF4  F024         	goto	u5510
  2586  0049E4                     u5511:
  2587  0049E4  EFED  F024         	goto	l447
  2588  0049E8                     u5510:
  2589  0049E8  0012               	return		;funcret
  2590  0049EA                     __end_of_I2C_Nack:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _I2C_Ack *****************
  2594 ;; Defined at:
  2595 ;;		line 230 in file "Reloj_ar.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;		None
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;		None
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		None
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_I2C_Read
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text11
  2623  0049EA                     __ptext11:
  2624                           	callstack 0
  2625  0049EA                     _I2C_Ack:
  2626                           	callstack 27
  2627  0049EA                     
  2628                           ;Reloj_ar.c: 232:     ACKDT=0;
  2629  0049EA  9AC5               	bcf	4037,5,c	;volatile
  2630                           
  2631                           ;Reloj_ar.c: 233:  ACKEN=1;
  2632  0049EC  88C5               	bsf	4037,4,c	;volatile
  2633  0049EE                     l441:
  2634  0049EE  B8C5               	btfsc	4037,4,c	;volatile
  2635  0049F0  EFFC  F024         	goto	u5501
  2636  0049F4  EFFE  F024         	goto	u5500
  2637  0049F8                     u5501:
  2638  0049F8  EFF7  F024         	goto	l441
  2639  0049FC                     u5500:
  2640  0049FC  0012               	return		;funcret
  2641  0049FE                     __end_of_I2C_Ack:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function _LCD_Init *****************
  2645 ;; Defined at:
  2646 ;;		line 23 in file "LCD_caracter.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2660 ;;      Params:         0       0       0       0       0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2663 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2664 ;;Total ram usage:        0 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 2
  2667 ;; This function calls:
  2668 ;;		_LCD_Command
  2669 ;;		_LCD_MSdelay
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;;		_RTC_Calendario
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text12
  2677  0048D4                     __ptext12:
  2678                           	callstack 0
  2679  0048D4                     _LCD_Init:
  2680                           	callstack 27
  2681  0048D4                     
  2682                           ;LCD_caracter.c: 25:     TRISD = 0;
  2683  0048D4  0E00               	movlw	0
  2684  0048D6  6E95               	movwf	149,c	;volatile
  2685  0048D8                     
  2686                           ;LCD_caracter.c: 26:     LCD_MSdelay(15);
  2687  0048D8  0E00               	movlw	0
  2688  0048DA  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  2689  0048DC  0E0F               	movlw	15
  2690  0048DE  6E01               	movwf	LCD_MSdelay@val^0,c
  2691  0048E0  EC9E  F022         	call	_LCD_MSdelay	;wreg free
  2692  0048E4                     
  2693                           ;LCD_caracter.c: 27:     LCD_Command(0x02);
  2694  0048E4  0E02               	movlw	2
  2695  0048E6  EC52  F022         	call	_LCD_Command
  2696  0048EA                     
  2697                           ;LCD_caracter.c: 29:     LCD_Command(0x28);
  2698  0048EA  0E28               	movlw	40
  2699  0048EC  EC52  F022         	call	_LCD_Command
  2700  0048F0                     
  2701                           ;LCD_caracter.c: 31:  LCD_Command(0x01);
  2702  0048F0  0E01               	movlw	1
  2703  0048F2  EC52  F022         	call	_LCD_Command
  2704  0048F6                     
  2705                           ;LCD_caracter.c: 32:     LCD_Command(0x0c);
  2706  0048F6  0E0C               	movlw	12
  2707  0048F8  EC52  F022         	call	_LCD_Command
  2708  0048FC                     
  2709                           ;LCD_caracter.c: 33:  LCD_Command(0x06);
  2710  0048FC  0E06               	movlw	6
  2711  0048FE  EC52  F022         	call	_LCD_Command
  2712  004902  0012               	return		;funcret
  2713  004904                     __end_of_LCD_Init:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function _LCD_Clear *****************
  2717 ;; Defined at:
  2718 ;;		line 155 in file "LCD_caracter.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2732 ;;      Params:         0       0       0       0       0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 2
  2739 ;; This function calls:
  2740 ;;		_LCD_Command
  2741 ;;		_LCD_MSdelay
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;;		_RTC_Calendario
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text13
  2749  0049FE                     __ptext13:
  2750                           	callstack 0
  2751  0049FE                     _LCD_Clear:
  2752                           	callstack 27
  2753  0049FE                     
  2754                           ;LCD_caracter.c: 157:     LCD_Command(0x01);
  2755  0049FE  0E01               	movlw	1
  2756  004A00  EC52  F022         	call	_LCD_Command
  2757                           
  2758                           ;LCD_caracter.c: 158:     LCD_MSdelay(3);
  2759  004A04  0E00               	movlw	0
  2760  004A06  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  2761  004A08  0E03               	movlw	3
  2762  004A0A  6E01               	movwf	LCD_MSdelay@val^0,c
  2763  004A0C  EC9E  F022         	call	_LCD_MSdelay	;wreg free
  2764  004A10  0012               	return		;funcret
  2765  004A12                     __end_of_LCD_Clear:
  2766                           	callstack 0
  2767                           
  2768 ;; *************** function _I2C_Init *****************
  2769 ;; Defined at:
  2770 ;;		line 57 in file "Reloj_ar.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;;		_RTC_Calendario
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text14
  2799  0049A8                     __ptext14:
  2800                           	callstack 0
  2801  0049A8                     _I2C_Init:
  2802                           	callstack 29
  2803  0049A8                     
  2804                           ;Reloj_ar.c: 59:     TRISB0=1;
  2805  0049A8  8093               	bsf	3987,0,c	;volatile
  2806                           
  2807                           ;Reloj_ar.c: 60:  TRISB1=1;
  2808  0049AA  8293               	bsf	3987,1,c	;volatile
  2809  0049AC                     
  2810                           ;Reloj_ar.c: 61:  SSPSTAT=80;
  2811  0049AC  0E50               	movlw	80
  2812  0049AE  6EC7               	movwf	199,c	;volatile
  2813                           
  2814                           ;Reloj_ar.c: 62:     SSPCON1=0x28;
  2815  0049B0  0E28               	movlw	40
  2816  0049B2  6EC6               	movwf	198,c	;volatile
  2817                           
  2818                           ;Reloj_ar.c: 64:  SSPCON2=0;
  2819  0049B4  0E00               	movlw	0
  2820  0049B6  6EC5               	movwf	197,c	;volatile
  2821                           
  2822                           ;Reloj_ar.c: 65:     SSPADD=((8000000/(4*100000))-1);
  2823  0049B8  0E13               	movlw	19
  2824  0049BA  6EC8               	movwf	200,c	;volatile
  2825  0049BC                     
  2826                           ;Reloj_ar.c: 66:     SSPIE=1;
  2827  0049BC  869D               	bsf	3997,3,c	;volatile
  2828  0049BE                     
  2829                           ;Reloj_ar.c: 67:     SSPIF=0;
  2830  0049BE  969E               	bcf	3998,3,c	;volatile
  2831  0049C0  0012               	return		;funcret
  2832  0049C2                     __end_of_I2C_Init:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _Estados *****************
  2836 ;; Defined at:
  2837 ;;		line 23 in file "Estados.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  2    6[BANK0 ] int 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2851 ;;      Params:         0       2       0       0       0       0       0       0       0
  2852 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2854 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2855 ;;Total ram usage:        6 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 2
  2858 ;; This function calls:
  2859 ;;		_ReadADC
  2860 ;;		_ReadLUZ
  2861 ;;		___flge
  2862 ;;		___xxtofl
  2863 ;; This function is called by:
  2864 ;;		_main
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text15
  2869  002CFE                     __ptext15:
  2870                           	callstack 0
  2871  002CFE                     _Estados:
  2872                           	callstack 28
  2873  002CFE                     
  2874                           ;Estados.c: 24:     tempar = ReadADC();
  2875  002CFE  EC18  F01C         	call	_ReadADC	;wreg free
  2876  002D02  0100               	movlb	0	; () banked
  2877  002D04  C060  F068         	movff	?_ReadADC,_Estados$1880
  2878  002D08  C061  F069         	movff	?_ReadADC+1,_Estados$1880+1
  2879  002D0C  6B6A               	clrf	(_Estados$1880+2)& (0+255),b
  2880  002D0E  6B6B               	clrf	(_Estados$1880+3)& (0+255),b
  2881  002D10                     
  2882                           ; BSR set to: 0
  2883                           ;Estados.c: 24:     tempar = ReadADC();
  2884  002D10  C068  F005         	movff	_Estados$1880,___xxtofl@val
  2885  002D14  C069  F006         	movff	_Estados$1880+1,___xxtofl@val+1
  2886  002D18  C06A  F007         	movff	_Estados$1880+2,___xxtofl@val+2
  2887  002D1C  C06B  F008         	movff	_Estados$1880+3,___xxtofl@val+3
  2888  002D20  0E00               	movlw	0
  2889  002D22  ECC5  F018         	call	___xxtofl
  2890  002D26  C005  F0EE         	movff	?___xxtofl,_tempar
  2891  002D2A  C006  F0EF         	movff	?___xxtofl+1,_tempar+1
  2892  002D2E  C007  F0F0         	movff	?___xxtofl+2,_tempar+2
  2893  002D32  C008  F0F1         	movff	?___xxtofl+3,_tempar+3
  2894  002D36                     
  2895                           ;Estados.c: 25:     luz = ReadLUZ();
  2896  002D36  EC01  F020         	call	_ReadLUZ	;wreg free
  2897  002D3A  C001  F005         	movff	?_ReadLUZ,___xxtofl@val
  2898  002D3E  C002  F006         	movff	?_ReadLUZ+1,___xxtofl@val+1
  2899  002D42  6A07               	clrf	(___xxtofl@val+2)^0,c
  2900  002D44  6A08               	clrf	(___xxtofl@val+3)^0,c
  2901  002D46  0E00               	movlw	0
  2902  002D48  ECC5  F018         	call	___xxtofl
  2903  002D4C  C005  F0EA         	movff	?___xxtofl,_luz
  2904  002D50  C006  F0EB         	movff	?___xxtofl+1,_luz+1
  2905  002D54  C007  F0EC         	movff	?___xxtofl+2,_luz+2
  2906  002D58  C008  F0ED         	movff	?___xxtofl+3,_luz+3
  2907  002D5C                     
  2908                           ;Estados.c: 27:     if (tempar > 15 && (luz > 0 && luz < 400)) {
  2909  002D5C  0E00               	movlw	0
  2910  002D5E  6E2C               	movwf	___flge@ff1^0,c
  2911  002D60  0E00               	movlw	0
  2912  002D62  6E2D               	movwf	(___flge@ff1+1)^0,c
  2913  002D64  0E70               	movlw	112
  2914  002D66  6E2E               	movwf	(___flge@ff1+2)^0,c
  2915  002D68  0E41               	movlw	65
  2916  002D6A  6E2F               	movwf	(___flge@ff1+3)^0,c
  2917  002D6C  C0EE  F030         	movff	_tempar,___flge@ff2
  2918  002D70  C0EF  F031         	movff	_tempar+1,___flge@ff2+1
  2919  002D74  C0F0  F032         	movff	_tempar+2,___flge@ff2+2
  2920  002D78  C0F1  F033         	movff	_tempar+3,___flge@ff2+3
  2921  002D7C  EC96  F01B         	call	___flge	;wreg free
  2922  002D80  B0D8               	btfsc	status,0,c
  2923  002D82  EFC5  F016         	goto	u6021
  2924  002D86  EFC7  F016         	goto	u6020
  2925  002D8A                     u6021:
  2926  002D8A  EF00  F017         	goto	l5536
  2927  002D8E                     u6020:
  2928  002D8E  0E00               	movlw	0
  2929  002D90  6E2C               	movwf	___flge@ff1^0,c
  2930  002D92  0E00               	movlw	0
  2931  002D94  6E2D               	movwf	(___flge@ff1+1)^0,c
  2932  002D96  0E00               	movlw	0
  2933  002D98  6E2E               	movwf	(___flge@ff1+2)^0,c
  2934  002D9A  0E00               	movlw	0
  2935  002D9C  6E2F               	movwf	(___flge@ff1+3)^0,c
  2936  002D9E  C0EA  F030         	movff	_luz,___flge@ff2
  2937  002DA2  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  2938  002DA6  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  2939  002DAA  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  2940  002DAE  EC96  F01B         	call	___flge	;wreg free
  2941  002DB2  B0D8               	btfsc	status,0,c
  2942  002DB4  EFDE  F016         	goto	u6031
  2943  002DB8  EFE0  F016         	goto	u6030
  2944  002DBC                     u6031:
  2945  002DBC  EF00  F017         	goto	l5536
  2946  002DC0                     u6030:
  2947  002DC0  C0EA  F02C         	movff	_luz,___flge@ff1
  2948  002DC4  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  2949  002DC8  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  2950  002DCC  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  2951  002DD0  0E00               	movlw	0
  2952  002DD2  6E30               	movwf	___flge@ff2^0,c
  2953  002DD4  0E00               	movlw	0
  2954  002DD6  6E31               	movwf	(___flge@ff2+1)^0,c
  2955  002DD8  0EC8               	movlw	200
  2956  002DDA  6E32               	movwf	(___flge@ff2+2)^0,c
  2957  002DDC  0E43               	movlw	67
  2958  002DDE  6E33               	movwf	(___flge@ff2+3)^0,c
  2959  002DE0  EC96  F01B         	call	___flge	;wreg free
  2960  002DE4  B0D8               	btfsc	status,0,c
  2961  002DE6  EFF7  F016         	goto	u6041
  2962  002DEA  EFF9  F016         	goto	u6040
  2963  002DEE                     u6041:
  2964  002DEE  EF00  F017         	goto	l5536
  2965  002DF2                     u6040:
  2966  002DF2                     
  2967                           ;Estados.c: 28:         return 1;
  2968  002DF2  0E00               	movlw	0
  2969  002DF4  0100               	movlb	0	; () banked
  2970  002DF6  6F67               	movwf	(?_Estados+1)& (0+255),b
  2971  002DF8  0E01               	movlw	1
  2972  002DFA  6F66               	movwf	?_Estados& (0+255),b
  2973  002DFC  EFBB  F017         	goto	l494
  2974  002E00                     l5536:
  2975  002E00  C0EE  F02C         	movff	_tempar,___flge@ff1
  2976  002E04  C0EF  F02D         	movff	_tempar+1,___flge@ff1+1
  2977  002E08  C0F0  F02E         	movff	_tempar+2,___flge@ff1+2
  2978  002E0C  C0F1  F02F         	movff	_tempar+3,___flge@ff1+3
  2979  002E10  0E00               	movlw	0
  2980  002E12  6E30               	movwf	___flge@ff2^0,c
  2981  002E14  0E00               	movlw	0
  2982  002E16  6E31               	movwf	(___flge@ff2+1)^0,c
  2983  002E18  0E40               	movlw	64
  2984  002E1A  6E32               	movwf	(___flge@ff2+2)^0,c
  2985  002E1C  0E41               	movlw	65
  2986  002E1E  6E33               	movwf	(___flge@ff2+3)^0,c
  2987  002E20  EC96  F01B         	call	___flge	;wreg free
  2988  002E24  A0D8               	btfss	status,0,c
  2989  002E26  EF17  F017         	goto	u6051
  2990  002E2A  EF19  F017         	goto	u6050
  2991  002E2E                     u6051:
  2992  002E2E  EF6B  F017         	goto	l5550
  2993  002E32                     u6050:
  2994  002E32  0E00               	movlw	0
  2995  002E34  6E2C               	movwf	___flge@ff1^0,c
  2996  002E36  0E00               	movlw	0
  2997  002E38  6E2D               	movwf	(___flge@ff1+1)^0,c
  2998  002E3A  0E70               	movlw	112
  2999  002E3C  6E2E               	movwf	(___flge@ff1+2)^0,c
  3000  002E3E  0E41               	movlw	65
  3001  002E40  6E2F               	movwf	(___flge@ff1+3)^0,c
  3002  002E42  C0EE  F030         	movff	_tempar,___flge@ff2
  3003  002E46  C0EF  F031         	movff	_tempar+1,___flge@ff2+1
  3004  002E4A  C0F0  F032         	movff	_tempar+2,___flge@ff2+2
  3005  002E4E  C0F1  F033         	movff	_tempar+3,___flge@ff2+3
  3006  002E52  EC96  F01B         	call	___flge	;wreg free
  3007  002E56  A0D8               	btfss	status,0,c
  3008  002E58  EF30  F017         	goto	u6061
  3009  002E5C  EF32  F017         	goto	u6060
  3010  002E60                     u6061:
  3011  002E60  EF6B  F017         	goto	l5550
  3012  002E64                     u6060:
  3013  002E64  0E00               	movlw	0
  3014  002E66  6E2C               	movwf	___flge@ff1^0,c
  3015  002E68  0E00               	movlw	0
  3016  002E6A  6E2D               	movwf	(___flge@ff1+1)^0,c
  3017  002E6C  0EC8               	movlw	200
  3018  002E6E  6E2E               	movwf	(___flge@ff1+2)^0,c
  3019  002E70  0E43               	movlw	67
  3020  002E72  6E2F               	movwf	(___flge@ff1+3)^0,c
  3021  002E74  C0EA  F030         	movff	_luz,___flge@ff2
  3022  002E78  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3023  002E7C  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3024  002E80  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3025  002E84  EC96  F01B         	call	___flge	;wreg free
  3026  002E88  B0D8               	btfsc	status,0,c
  3027  002E8A  EF49  F017         	goto	u6071
  3028  002E8E  EF4B  F017         	goto	u6070
  3029  002E92                     u6071:
  3030  002E92  EF6B  F017         	goto	l5550
  3031  002E96                     u6070:
  3032  002E96  C0EA  F02C         	movff	_luz,___flge@ff1
  3033  002E9A  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3034  002E9E  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3035  002EA2  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3036  002EA6  0E00               	movlw	0
  3037  002EA8  6E30               	movwf	___flge@ff2^0,c
  3038  002EAA  0E00               	movlw	0
  3039  002EAC  6E31               	movwf	(___flge@ff2+1)^0,c
  3040  002EAE  0E2F               	movlw	47
  3041  002EB0  6E32               	movwf	(___flge@ff2+2)^0,c
  3042  002EB2  0E44               	movlw	68
  3043  002EB4  6E33               	movwf	(___flge@ff2+3)^0,c
  3044  002EB6  EC96  F01B         	call	___flge	;wreg free
  3045  002EBA  B0D8               	btfsc	status,0,c
  3046  002EBC  EF62  F017         	goto	u6081
  3047  002EC0  EF64  F017         	goto	u6080
  3048  002EC4                     u6081:
  3049  002EC4  EF6B  F017         	goto	l5550
  3050  002EC8                     u6080:
  3051  002EC8                     
  3052                           ;Estados.c: 30:         return 2;
  3053  002EC8  0E00               	movlw	0
  3054  002ECA  0100               	movlb	0	; () banked
  3055  002ECC  6F67               	movwf	(?_Estados+1)& (0+255),b
  3056  002ECE  0E02               	movlw	2
  3057  002ED0  6F66               	movwf	?_Estados& (0+255),b
  3058  002ED2  EFBB  F017         	goto	l494
  3059  002ED6                     l5550:
  3060  002ED6  C0EE  F02C         	movff	_tempar,___flge@ff1
  3061  002EDA  C0EF  F02D         	movff	_tempar+1,___flge@ff1+1
  3062  002EDE  C0F0  F02E         	movff	_tempar+2,___flge@ff1+2
  3063  002EE2  C0F1  F02F         	movff	_tempar+3,___flge@ff1+3
  3064  002EE6  0E00               	movlw	0
  3065  002EE8  6E30               	movwf	___flge@ff2^0,c
  3066  002EEA  0E00               	movlw	0
  3067  002EEC  6E31               	movwf	(___flge@ff2+1)^0,c
  3068  002EEE  0E40               	movlw	64
  3069  002EF0  6E32               	movwf	(___flge@ff2+2)^0,c
  3070  002EF2  0E41               	movlw	65
  3071  002EF4  6E33               	movwf	(___flge@ff2+3)^0,c
  3072  002EF6  EC96  F01B         	call	___flge	;wreg free
  3073  002EFA  B0D8               	btfsc	status,0,c
  3074  002EFC  EF82  F017         	goto	u6091
  3075  002F00  EF84  F017         	goto	u6090
  3076  002F04                     u6091:
  3077  002F04  EFBB  F017         	goto	l494
  3078  002F08                     u6090:
  3079  002F08  0E00               	movlw	0
  3080  002F0A  6E2C               	movwf	___flge@ff1^0,c
  3081  002F0C  0E00               	movlw	0
  3082  002F0E  6E2D               	movwf	(___flge@ff1+1)^0,c
  3083  002F10  0E2F               	movlw	47
  3084  002F12  6E2E               	movwf	(___flge@ff1+2)^0,c
  3085  002F14  0E44               	movlw	68
  3086  002F16  6E2F               	movwf	(___flge@ff1+3)^0,c
  3087  002F18  C0EA  F030         	movff	_luz,___flge@ff2
  3088  002F1C  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3089  002F20  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3090  002F24  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3091  002F28  EC96  F01B         	call	___flge	;wreg free
  3092  002F2C  B0D8               	btfsc	status,0,c
  3093  002F2E  EF9B  F017         	goto	u6101
  3094  002F32  EF9D  F017         	goto	u6100
  3095  002F36                     u6101:
  3096  002F36  EFBB  F017         	goto	l494
  3097  002F3A                     u6100:
  3098  002F3A  C0EA  F02C         	movff	_luz,___flge@ff1
  3099  002F3E  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3100  002F42  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3101  002F46  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3102  002F4A  0E00               	movlw	0
  3103  002F4C  6E30               	movwf	___flge@ff2^0,c
  3104  002F4E  0E80               	movlw	128
  3105  002F50  6E31               	movwf	(___flge@ff2+1)^0,c
  3106  002F52  0EBB               	movlw	187
  3107  002F54  6E32               	movwf	(___flge@ff2+2)^0,c
  3108  002F56  0E44               	movlw	68
  3109  002F58  6E33               	movwf	(___flge@ff2+3)^0,c
  3110  002F5A  EC96  F01B         	call	___flge	;wreg free
  3111  002F5E  B0D8               	btfsc	status,0,c
  3112  002F60  EFB4  F017         	goto	u6111
  3113  002F64  EFB6  F017         	goto	u6110
  3114  002F68                     u6111:
  3115  002F68  EFBB  F017         	goto	l494
  3116  002F6C                     u6110:
  3117  002F6C                     
  3118                           ;Estados.c: 33:         return 3;
  3119  002F6C  0E00               	movlw	0
  3120  002F6E  0100               	movlb	0	; () banked
  3121  002F70  6F67               	movwf	(?_Estados+1)& (0+255),b
  3122  002F72  0E03               	movlw	3
  3123  002F74  6F66               	movwf	?_Estados& (0+255),b
  3124  002F76                     l494:
  3125  002F76  0012               	return		;funcret
  3126  002F78                     __end_of_Estados:
  3127                           	callstack 0
  3128                           
  3129 ;; *************** function _ReadLUZ *****************
  3130 ;; Defined at:
  3131 ;;		line 21 in file "Sensor_luz.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  2    0[COMRAM] unsigned short 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3145 ;;      Params:         2       0       0       0       0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3147 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3148 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3149 ;;Total ram usage:        4 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_Estados
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text16
  3159  004002                     __ptext16:
  3160                           	callstack 0
  3161  004002                     _ReadLUZ:
  3162                           	callstack 29
  3163  004002                     
  3164                           ;Sensor_luz.c: 23:     TRISD = 0x00;
  3165  004002  0E00               	movlw	0
  3166  004004  6E95               	movwf	149,c	;volatile
  3167  004006                     
  3168                           ;Sensor_luz.c: 24:     TRISA = 0xFF;
  3169  004006  6892               	setf	146,c	;volatile
  3170                           
  3171                           ;Sensor_luz.c: 26:     OSCCONbits.IRCF = 0b111;
  3172  004008  0E70               	movlw	112
  3173  00400A  12D3               	iorwf	211,f,c	;volatile
  3174                           
  3175                           ;Sensor_luz.c: 27:     OSCCONbits.SCS = 0b10;
  3176  00400C  50D3               	movf	211,w,c	;volatile
  3177  00400E  0BFC               	andlw	-4
  3178  004010  0902               	iorlw	2
  3179  004012  6ED3               	movwf	211,c	;volatile
  3180                           
  3181                           ;Sensor_luz.c: 30:     ADCON1bits.PCFG = 0b1101;
  3182  004014  50C1               	movf	193,w,c	;volatile
  3183  004016  0BF0               	andlw	-16
  3184  004018  090D               	iorlw	13
  3185  00401A  6EC1               	movwf	193,c	;volatile
  3186                           
  3187                           ;Sensor_luz.c: 31:     ADCON1bits.VCFG = 0b00;
  3188  00401C  0ECF               	movlw	-49
  3189  00401E  16C1               	andwf	193,f,c	;volatile
  3190                           
  3191                           ;Sensor_luz.c: 32:     ADCON0bits.CHS = 0b0001;
  3192  004020  50C2               	movf	194,w,c	;volatile
  3193  004022  0BC3               	andlw	-61
  3194  004024  0904               	iorlw	4
  3195  004026  6EC2               	movwf	194,c	;volatile
  3196                           
  3197                           ;Sensor_luz.c: 33:     ADCON2bits.ACQT = 0b010;
  3198  004028  50C0               	movf	192,w,c	;volatile
  3199  00402A  0BC7               	andlw	-57
  3200  00402C  0910               	iorlw	16
  3201  00402E  6EC0               	movwf	192,c	;volatile
  3202                           
  3203                           ;Sensor_luz.c: 34:     ADCON2bits.ADCS = 0b001;
  3204  004030  50C0               	movf	192,w,c	;volatile
  3205  004032  0BF8               	andlw	-8
  3206  004034  0901               	iorlw	1
  3207  004036  6EC0               	movwf	192,c	;volatile
  3208  004038                     
  3209                           ;Sensor_luz.c: 35:     ADCON2bits.ADFM = 1;
  3210  004038  8EC0               	bsf	192,7,c	;volatile
  3211  00403A                     
  3212                           ;Sensor_luz.c: 36:     ADCON0bits.ADON = 1;
  3213  00403A  80C2               	bsf	194,0,c	;volatile
  3214  00403C                     
  3215                           ;Sensor_luz.c: 39:         ADCON0bits.GO_DONE = 1;
  3216  00403C  82C2               	bsf	194,1,c	;volatile
  3217  00403E                     l204:
  3218  00403E  B2C2               	btfsc	194,1,c	;volatile
  3219  004040  EF24  F020         	goto	u5981
  3220  004044  EF26  F020         	goto	u5980
  3221  004048                     u5981:
  3222  004048  EF1F  F020         	goto	l204
  3223  00404C                     u5980:
  3224  00404C                     
  3225                           ;Sensor_luz.c: 41:         result = ADRESH;
  3226  00404C  CFC4 F0FA          	movff	4036,_result	;volatile
  3227  004050  0100               	movlb	0	; () banked
  3228  004052  6BFB               	clrf	(_result+1)& (0+255),b
  3229  004054                     
  3230                           ; BSR set to: 0
  3231                           ;Sensor_luz.c: 42:         result = (result << 8) + ADRESL;
  3232  004054  51FA               	movf	_result& (0+255),w,b
  3233  004056  6E03               	movwf	??_ReadLUZ^0,c
  3234  004058  50C3               	movf	195,w,c	;volatile
  3235  00405A  6FFA               	movwf	_result& (0+255),b
  3236  00405C  C003  F0FB         	movff	??_ReadLUZ,_result+1
  3237  004060                     
  3238                           ; BSR set to: 0
  3239                           ;Sensor_luz.c: 44:         return result;
  3240  004060  C0FA  F001         	movff	_result,?_ReadLUZ
  3241  004064  C0FB  F002         	movff	_result+1,?_ReadLUZ+1
  3242  004068                     
  3243                           ; BSR set to: 0
  3244  004068  0012               	return		;funcret
  3245  00406A                     __end_of_ReadLUZ:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _ReadADC *****************
  3249 ;; Defined at:
  3250 ;;		line 22 in file "Temperatura.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  result          2    4[BANK0 ] unsigned short 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  2    0[BANK0 ] unsigned short 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3264 ;;      Params:         0       2       0       0       0       0       0       0       0
  3265 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3266 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3267 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3268 ;;Total ram usage:        6 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; Hardware stack levels required when called: 1
  3271 ;; This function calls:
  3272 ;;		___fladd
  3273 ;;		___fldiv
  3274 ;;		___flmul
  3275 ;;		___fltol
  3276 ;;		___xxtofl
  3277 ;; This function is called by:
  3278 ;;		_Estados
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text17
  3283  003830                     __ptext17:
  3284                           	callstack 0
  3285  003830                     _ReadADC:
  3286                           	callstack 28
  3287  003830                     
  3288                           ;Temperatura.c: 24:     uint16_t result;;Temperatura.c: 26:     TRISD = 0x00;
  3289  003830  0E00               	movlw	0
  3290  003832  6E95               	movwf	149,c	;volatile
  3291  003834                     
  3292                           ;Temperatura.c: 27:     TRISA = 0xFF;
  3293  003834  6892               	setf	146,c	;volatile
  3294                           
  3295                           ;Temperatura.c: 29:     OSCCONbits.IRCF = 0b111;
  3296  003836  0E70               	movlw	112
  3297  003838  12D3               	iorwf	211,f,c	;volatile
  3298                           
  3299                           ;Temperatura.c: 30:     OSCCONbits.SCS = 0b10;
  3300  00383A  50D3               	movf	211,w,c	;volatile
  3301  00383C  0BFC               	andlw	-4
  3302  00383E  0902               	iorlw	2
  3303  003840  6ED3               	movwf	211,c	;volatile
  3304                           
  3305                           ;Temperatura.c: 33:     ADCON1bits.PCFG = 0b1110;
  3306  003842  50C1               	movf	193,w,c	;volatile
  3307  003844  0BF0               	andlw	-16
  3308  003846  090E               	iorlw	14
  3309  003848  6EC1               	movwf	193,c	;volatile
  3310                           
  3311                           ;Temperatura.c: 34:     ADCON1bits.VCFG = 0b00;
  3312  00384A  0ECF               	movlw	-49
  3313  00384C  16C1               	andwf	193,f,c	;volatile
  3314                           
  3315                           ;Temperatura.c: 35:     ADCON0bits.CHS = 0b0000;
  3316  00384E  0EC3               	movlw	-61
  3317  003850  16C2               	andwf	194,f,c	;volatile
  3318                           
  3319                           ;Temperatura.c: 36:     ADCON2bits.ACQT = 0b010;
  3320  003852  50C0               	movf	192,w,c	;volatile
  3321  003854  0BC7               	andlw	-57
  3322  003856  0910               	iorlw	16
  3323  003858  6EC0               	movwf	192,c	;volatile
  3324                           
  3325                           ;Temperatura.c: 37:     ADCON2bits.ADCS = 0b001;
  3326  00385A  50C0               	movf	192,w,c	;volatile
  3327  00385C  0BF8               	andlw	-8
  3328  00385E  0901               	iorlw	1
  3329  003860  6EC0               	movwf	192,c	;volatile
  3330  003862                     
  3331                           ;Temperatura.c: 38:     ADCON2bits.ADFM = 1;
  3332  003862  8EC0               	bsf	192,7,c	;volatile
  3333  003864                     
  3334                           ;Temperatura.c: 39:     ADCON0bits.ADON = 1;
  3335  003864  80C2               	bsf	194,0,c	;volatile
  3336  003866                     
  3337                           ;Temperatura.c: 42:         ADCON0bits.GO_DONE = 1;
  3338  003866  82C2               	bsf	194,1,c	;volatile
  3339  003868                     l161:
  3340  003868  B2C2               	btfsc	194,1,c	;volatile
  3341  00386A  EF39  F01C         	goto	u5971
  3342  00386E  EF3B  F01C         	goto	u5970
  3343  003872                     u5971:
  3344  003872  EF34  F01C         	goto	l161
  3345  003876                     u5970:
  3346  003876                     
  3347                           ;Temperatura.c: 44:         result = ADRESH;
  3348  003876  CFC4 F064          	movff	4036,ReadADC@result	;volatile
  3349  00387A  0100               	movlb	0	; () banked
  3350  00387C  6B65               	clrf	(ReadADC@result+1)& (0+255),b
  3351  00387E                     
  3352                           ; BSR set to: 0
  3353                           ;Temperatura.c: 45:         result = (result << 8) + ADRESL;
  3354  00387E  5164               	movf	ReadADC@result& (0+255),w,b
  3355  003880  6F62               	movwf	??_ReadADC& (0+255),b
  3356  003882  50C3               	movf	195,w,c	;volatile
  3357  003884  6F64               	movwf	ReadADC@result& (0+255),b
  3358  003886  C062  F065         	movff	??_ReadADC,ReadADC@result+1
  3359  00388A                     
  3360                           ; BSR set to: 0
  3361                           ;Temperatura.c: 46:         result = ((result*500.0)/1023.0)-49.5;
  3362  00388A  0E00               	movlw	0
  3363  00388C  6E49               	movwf	___fladd@a^0,c
  3364  00388E  0E00               	movlw	0
  3365  003890  6E4A               	movwf	(___fladd@a+1)^0,c
  3366  003892  0E46               	movlw	70
  3367  003894  6E4B               	movwf	(___fladd@a+2)^0,c
  3368  003896  0EC2               	movlw	194
  3369  003898  6E4C               	movwf	(___fladd@a+3)^0,c
  3370  00389A  0E00               	movlw	0
  3371  00389C  6E30               	movwf	___fldiv@a^0,c
  3372  00389E  0EC0               	movlw	192
  3373  0038A0  6E31               	movwf	(___fldiv@a+1)^0,c
  3374  0038A2  0E7F               	movlw	127
  3375  0038A4  6E32               	movwf	(___fldiv@a+2)^0,c
  3376  0038A6  0E44               	movlw	68
  3377  0038A8  6E33               	movwf	(___fldiv@a+3)^0,c
  3378  0038AA  0E00               	movlw	0
  3379  0038AC  6E17               	movwf	___flmul@a^0,c
  3380  0038AE  0E00               	movlw	0
  3381  0038B0  6E18               	movwf	(___flmul@a+1)^0,c
  3382  0038B2  0EFA               	movlw	250
  3383  0038B4  6E19               	movwf	(___flmul@a+2)^0,c
  3384  0038B6  0E43               	movlw	67
  3385  0038B8  6E1A               	movwf	(___flmul@a+3)^0,c
  3386  0038BA  C064  F005         	movff	ReadADC@result,___xxtofl@val
  3387  0038BE  C065  F006         	movff	ReadADC@result+1,___xxtofl@val+1
  3388  0038C2  6A07               	clrf	(___xxtofl@val+2)^0,c
  3389  0038C4  6A08               	clrf	(___xxtofl@val+3)^0,c
  3390  0038C6  0E00               	movlw	0
  3391  0038C8  ECC5  F018         	call	___xxtofl
  3392  0038CC  C005  F013         	movff	?___xxtofl,___flmul@b
  3393  0038D0  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  3394  0038D4  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  3395  0038D8  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  3396  0038DC  ECB8  F00F         	call	___flmul	;wreg free
  3397  0038E0  C013  F02C         	movff	?___flmul,___fldiv@b
  3398  0038E4  C014  F02D         	movff	?___flmul+1,___fldiv@b+1
  3399  0038E8  C015  F02E         	movff	?___flmul+2,___fldiv@b+2
  3400  0038EC  C016  F02F         	movff	?___flmul+3,___fldiv@b+3
  3401  0038F0  ECCD  F011         	call	___fldiv	;wreg free
  3402  0038F4  C02C  F045         	movff	?___fldiv,___fladd@b
  3403  0038F8  C02D  F046         	movff	?___fldiv+1,___fladd@b+1
  3404  0038FC  C02E  F047         	movff	?___fldiv+2,___fladd@b+2
  3405  003900  C02F  F048         	movff	?___fldiv+3,___fladd@b+3
  3406  003904  EC58  F00D         	call	___fladd	;wreg free
  3407  003908  C045  F055         	movff	?___fladd,___fltol@f1
  3408  00390C  C046  F056         	movff	?___fladd+1,___fltol@f1+1
  3409  003910  C047  F057         	movff	?___fladd+2,___fltol@f1+2
  3410  003914  C048  F058         	movff	?___fladd+3,___fltol@f1+3
  3411  003918  EC13  F01B         	call	___fltol	;wreg free
  3412  00391C  C055  F064         	movff	?___fltol,ReadADC@result
  3413  003920  C056  F065         	movff	?___fltol+1,ReadADC@result+1
  3414  003924                     
  3415                           ;Temperatura.c: 48:         return result;
  3416  003924  C064  F060         	movff	ReadADC@result,?_ReadADC
  3417  003928  C065  F061         	movff	ReadADC@result+1,?_ReadADC+1
  3418  00392C  0012               	return		;funcret
  3419  00392E                     __end_of_ReadADC:
  3420                           	callstack 0
  3421                           
  3422 ;; *************** function ___xxtofl *****************
  3423 ;; Defined at:
  3424 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  sign            1    wreg     unsigned char 
  3427 ;;  val             4    4[COMRAM] long 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  sign            1   12[COMRAM] unsigned char 
  3430 ;;  arg             4   14[COMRAM] unsigned long 
  3431 ;;  exp             1   13[COMRAM] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  4    4[COMRAM] unsigned char 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3441 ;;      Params:         4       0       0       0       0       0       0       0       0
  3442 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3443 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3444 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3445 ;;Total ram usage:       14 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_ReadADC
  3451 ;;		_Estados
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text18
  3456  00318A                     __ptext18:
  3457                           	callstack 0
  3458  00318A                     ___xxtofl:
  3459                           	callstack 29
  3460                           
  3461                           ;incstack = 0
  3462                           ;___xxtofl@sign stored from wreg
  3463  00318A  6E0D               	movwf	___xxtofl@sign^0,c
  3464  00318C  500D               	movf	___xxtofl@sign^0,w,c
  3465  00318E  B4D8               	btfsc	status,2,c
  3466  003190  EFCC  F018         	goto	u5831
  3467  003194  EFCE  F018         	goto	u5830
  3468  003198                     u5831:
  3469  003198  EFF0  F018         	goto	l1165
  3470  00319C                     u5830:
  3471  00319C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  3472  00319E  EFD5  F018         	goto	u5840
  3473  0031A2  EFD3  F018         	goto	u5841
  3474  0031A6                     u5841:
  3475  0031A6  EFF0  F018         	goto	l1165
  3476  0031AA                     u5840:
  3477  0031AA  C005  F009         	movff	___xxtofl@val,??___xxtofl
  3478  0031AE  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  3479  0031B2  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  3480  0031B6  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  3481  0031BA  1E09               	comf	??___xxtofl^0,f,c
  3482  0031BC  1E0A               	comf	(??___xxtofl+1)^0,f,c
  3483  0031BE  1E0B               	comf	(??___xxtofl+2)^0,f,c
  3484  0031C0  1E0C               	comf	(??___xxtofl+3)^0,f,c
  3485  0031C2  2A09               	incf	??___xxtofl^0,f,c
  3486  0031C4  0E00               	movlw	0
  3487  0031C6  220A               	addwfc	(??___xxtofl+1)^0,f,c
  3488  0031C8  220B               	addwfc	(??___xxtofl+2)^0,f,c
  3489  0031CA  220C               	addwfc	(??___xxtofl+3)^0,f,c
  3490  0031CC  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  3491  0031D0  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  3492  0031D4  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  3493  0031D8  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  3494  0031DC  EFF8  F018         	goto	l5210
  3495  0031E0                     l1165:
  3496  0031E0  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  3497  0031E4  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3498  0031E8  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3499  0031EC  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3500  0031F0                     l5210:
  3501  0031F0  5005               	movf	___xxtofl@val^0,w,c
  3502  0031F2  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  3503  0031F4  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  3504  0031F6  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  3505  0031F8  A4D8               	btfss	status,2,c
  3506  0031FA  EF01  F019         	goto	u5851
  3507  0031FE  EF03  F019         	goto	u5850
  3508  003202                     u5851:
  3509  003202  EF0D  F019         	goto	l5216
  3510  003206                     u5850:
  3511  003206  0E00               	movlw	0
  3512  003208  6E05               	movwf	?___xxtofl^0,c
  3513  00320A  0E00               	movlw	0
  3514  00320C  6E06               	movwf	(?___xxtofl+1)^0,c
  3515  00320E  0E00               	movlw	0
  3516  003210  6E07               	movwf	(?___xxtofl+2)^0,c
  3517  003212  0E00               	movlw	0
  3518  003214  6E08               	movwf	(?___xxtofl+3)^0,c
  3519  003216  EF9E  F019         	goto	l1168
  3520  00321A                     l5216:
  3521  00321A  0E96               	movlw	150
  3522  00321C  6E0E               	movwf	___xxtofl@exp^0,c
  3523  00321E  EF17  F019         	goto	l5220
  3524  003222                     l5218:
  3525  003222  2A0E               	incf	___xxtofl@exp^0,f,c
  3526  003224  90D8               	bcf	status,0,c
  3527  003226  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  3528  003228  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  3529  00322A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  3530  00322C  320F               	rrcf	___xxtofl@arg^0,f,c
  3531  00322E                     l5220:
  3532  00322E  0E00               	movlw	0
  3533  003230  140F               	andwf	___xxtofl@arg^0,w,c
  3534  003232  6E09               	movwf	??___xxtofl^0,c
  3535  003234  0E00               	movlw	0
  3536  003236  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  3537  003238  6E0A               	movwf	(??___xxtofl+1)^0,c
  3538  00323A  0E00               	movlw	0
  3539  00323C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  3540  00323E  6E0B               	movwf	(??___xxtofl+2)^0,c
  3541  003240  0EFE               	movlw	254
  3542  003242  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  3543  003244  6E0C               	movwf	(??___xxtofl+3)^0,c
  3544  003246  5009               	movf	??___xxtofl^0,w,c
  3545  003248  100A               	iorwf	(??___xxtofl+1)^0,w,c
  3546  00324A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  3547  00324C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  3548  00324E  A4D8               	btfss	status,2,c
  3549  003250  EF2C  F019         	goto	u5861
  3550  003254  EF2E  F019         	goto	u5860
  3551  003258                     u5861:
  3552  003258  EF11  F019         	goto	l5218
  3553  00325C                     u5860:
  3554  00325C  EF3C  F019         	goto	l1172
  3555  003260                     l5222:
  3556  003260  2A0E               	incf	___xxtofl@exp^0,f,c
  3557  003262  0E01               	movlw	1
  3558  003264  260F               	addwf	___xxtofl@arg^0,f,c
  3559  003266  0E00               	movlw	0
  3560  003268  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  3561  00326A  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  3562  00326C  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  3563  00326E  90D8               	bcf	status,0,c
  3564  003270  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  3565  003272  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  3566  003274  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  3567  003276  320F               	rrcf	___xxtofl@arg^0,f,c
  3568  003278                     l1172:
  3569  003278  0E00               	movlw	0
  3570  00327A  140F               	andwf	___xxtofl@arg^0,w,c
  3571  00327C  6E09               	movwf	??___xxtofl^0,c
  3572  00327E  0E00               	movlw	0
  3573  003280  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  3574  003282  6E0A               	movwf	(??___xxtofl+1)^0,c
  3575  003284  0E00               	movlw	0
  3576  003286  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  3577  003288  6E0B               	movwf	(??___xxtofl+2)^0,c
  3578  00328A  0EFF               	movlw	255
  3579  00328C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  3580  00328E  6E0C               	movwf	(??___xxtofl+3)^0,c
  3581  003290  5009               	movf	??___xxtofl^0,w,c
  3582  003292  100A               	iorwf	(??___xxtofl+1)^0,w,c
  3583  003294  100B               	iorwf	(??___xxtofl+2)^0,w,c
  3584  003296  100C               	iorwf	(??___xxtofl+3)^0,w,c
  3585  003298  A4D8               	btfss	status,2,c
  3586  00329A  EF51  F019         	goto	u5871
  3587  00329E  EF53  F019         	goto	u5870
  3588  0032A2                     u5871:
  3589  0032A2  EF30  F019         	goto	l5222
  3590  0032A6                     u5870:
  3591  0032A6  EF5B  F019         	goto	l5230
  3592  0032AA                     l5228:
  3593  0032AA  060E               	decf	___xxtofl@exp^0,f,c
  3594  0032AC  90D8               	bcf	status,0,c
  3595  0032AE  360F               	rlcf	___xxtofl@arg^0,f,c
  3596  0032B0  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  3597  0032B2  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  3598  0032B4  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  3599  0032B6                     l5230:
  3600  0032B6  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  3601  0032B8  EF60  F019         	goto	u5881
  3602  0032BC  EF62  F019         	goto	u5880
  3603  0032C0                     u5881:
  3604  0032C0  EF6A  F019         	goto	l1179
  3605  0032C4                     u5880:
  3606  0032C4  0E02               	movlw	2
  3607  0032C6  600E               	cpfslt	___xxtofl@exp^0,c
  3608  0032C8  EF68  F019         	goto	u5891
  3609  0032CC  EF6A  F019         	goto	u5890
  3610  0032D0                     u5891:
  3611  0032D0  EF55  F019         	goto	l5228
  3612  0032D4                     u5890:
  3613  0032D4                     l1179:
  3614  0032D4  B00E               	btfsc	___xxtofl@exp^0,0,c
  3615  0032D6  EF6F  F019         	goto	u5901
  3616  0032DA  EF71  F019         	goto	u5900
  3617  0032DE                     u5901:
  3618  0032DE  EF72  F019         	goto	l5236
  3619  0032E2                     u5900:
  3620  0032E2  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  3621  0032E4                     l5236:
  3622  0032E4  90D8               	bcf	status,0,c
  3623  0032E6  320E               	rrcf	___xxtofl@exp^0,f,c
  3624  0032E8  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  3625  0032EC  6A0A               	clrf	(??___xxtofl+1)^0,c
  3626  0032EE  6A0B               	clrf	(??___xxtofl+2)^0,c
  3627  0032F0  6A0C               	clrf	(??___xxtofl+3)^0,c
  3628  0032F2  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  3629  0032F6  6A0B               	clrf	(??___xxtofl+2)^0,c
  3630  0032F8  6A0A               	clrf	(??___xxtofl+1)^0,c
  3631  0032FA  6A09               	clrf	??___xxtofl^0,c
  3632  0032FC  5009               	movf	??___xxtofl^0,w,c
  3633  0032FE  120F               	iorwf	___xxtofl@arg^0,f,c
  3634  003300  500A               	movf	(??___xxtofl+1)^0,w,c
  3635  003302  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  3636  003304  500B               	movf	(??___xxtofl+2)^0,w,c
  3637  003306  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  3638  003308  500C               	movf	(??___xxtofl+3)^0,w,c
  3639  00330A  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  3640  00330C  500D               	movf	___xxtofl@sign^0,w,c
  3641  00330E  B4D8               	btfsc	status,2,c
  3642  003310  EF8C  F019         	goto	u5911
  3643  003314  EF8E  F019         	goto	u5910
  3644  003318                     u5911:
  3645  003318  EF96  F019         	goto	l5246
  3646  00331C                     u5910:
  3647  00331C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  3648  00331E  EF95  F019         	goto	u5920
  3649  003322  EF93  F019         	goto	u5921
  3650  003326                     u5921:
  3651  003326  EF96  F019         	goto	l5246
  3652  00332A                     u5920:
  3653  00332A  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  3654  00332C                     l5246:
  3655  00332C  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  3656  003330  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  3657  003334  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  3658  003338  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  3659  00333C                     l1168:
  3660  00333C  0012               	return		;funcret
  3661  00333E                     __end_of___xxtofl:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function _Estado_Soleado *****************
  3665 ;; Defined at:
  3666 ;;		line 50 in file "Estados.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3680 ;;      Params:         0       0       0       0       0       0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3683 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3684 ;;Total ram usage:        0 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 8
  3687 ;; This function calls:
  3688 ;;		_LCD_Char
  3689 ;;		_LCD_Command
  3690 ;;		_LCD_Custom_Char
  3691 ;;		_LCD_String_xy
  3692 ;;		_PlayCancion
  3693 ;;		_sprintf
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text19
  3700  00412C                     __ptext19:
  3701                           	callstack 0
  3702  00412C                     _Estado_Soleado:
  3703                           	callstack 22
  3704  00412C                     
  3705                           ;Estados.c: 51:     LATE0 = 0;
  3706  00412C  908D               	bcf	3981,0,c	;volatile
  3707                           
  3708                           ;Estados.c: 52:     LATE1 = 0;
  3709  00412E  928D               	bcf	3981,1,c	;volatile
  3710                           
  3711                           ;Estados.c: 53:     LATE2 = 0;
  3712  004130  948D               	bcf	3981,2,c	;volatile
  3713  004132                     
  3714                           ;Estados.c: 54:     sprintf(Stemp, "%0.0fC", tempar);
  3715  004132  0E5E               	movlw	low _Stemp
  3716  004134  0100               	movlb	0	; () banked
  3717  004136  6FCC               	movwf	sprintf@s& (0+255),b
  3718  004138  0E01               	movlw	high _Stemp
  3719  00413A  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  3720  00413C  0E01               	movlw	low STR_19
  3721  00413E  6FCE               	movwf	sprintf@fmt& (0+255),b
  3722  004140  0E08               	movlw	high STR_19
  3723  004142  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  3724  004144  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  3725  004148  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  3726  00414C  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  3727  004150  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  3728  004154  ECD8  F021         	call	_sprintf	;wreg free
  3729  004158                     
  3730                           ;Estados.c: 55:     LCD_String_xy(1, 0, Stemp);
  3731  004158  0E00               	movlw	0
  3732  00415A  6E0B               	movwf	LCD_String_xy@pos^0,c
  3733  00415C  0E5E               	movlw	low _Stemp
  3734  00415E  6E0C               	movwf	LCD_String_xy@msg^0,c
  3735  004160  0E01               	movlw	high _Stemp
  3736  004162  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  3737  004164  0E01               	movlw	1
  3738  004166  EC4F  F023         	call	_LCD_String_xy
  3739  00416A                     
  3740                           ;Estados.c: 56:     LCD_Custom_Char(0, character2);
  3741  00416A  0EDD               	movlw	low _character2
  3742  00416C  6E09               	movwf	LCD_Custom_Char@msg^0,c
  3743  00416E  0E01               	movlw	high _character2
  3744  004170  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  3745  004172  0E00               	movlw	0
  3746  004174  ECC3  F022         	call	_LCD_Custom_Char
  3747                           
  3748                           ;Estados.c: 57:     LCD_Command(0xc0);
  3749  004178  0EC0               	movlw	192
  3750  00417A  EC52  F022         	call	_LCD_Command
  3751                           
  3752                           ;Estados.c: 58:     LCD_Char(0);
  3753  00417E  0E00               	movlw	0
  3754  004180  EC78  F022         	call	_LCD_Char
  3755  004184                     
  3756                           ;Estados.c: 59:     PlayCancion();
  3757  004184  EC67  F01A         	call	_PlayCancion	;wreg free
  3758  004188  0012               	return		;funcret
  3759  00418A                     __end_of_Estado_Soleado:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _PlayCancion *****************
  3763 ;; Defined at:
  3764 ;;		line 53 in file "Melodia.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3780 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3781 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        2 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 2
  3785 ;; This function calls:
  3786 ;;		_play
  3787 ;; This function is called by:
  3788 ;;		_Estado_Soleado
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text20
  3793  0034CE                     __ptext20:
  3794                           	callstack 0
  3795  0034CE                     _PlayCancion:
  3796                           	callstack 27
  3797  0034CE                     
  3798                           ;Melodia.c: 56:         play (4 ,4,150);
  3799  0034CE  0E00               	movlw	0
  3800  0034D0  6E07               	movwf	(play@nota+1)^0,c
  3801  0034D2  0E04               	movlw	4
  3802  0034D4  6E06               	movwf	play@nota^0,c
  3803  0034D6  0E00               	movlw	0
  3804  0034D8  6E09               	movwf	(play@octava+1)^0,c
  3805  0034DA  0E04               	movlw	4
  3806  0034DC  6E08               	movwf	play@octava^0,c
  3807  0034DE  0E00               	movlw	0
  3808  0034E0  6E0B               	movwf	(play@duracion+1)^0,c
  3809  0034E2  0E96               	movlw	150
  3810  0034E4  6E0A               	movwf	play@duracion^0,c
  3811  0034E6  EC49  F01E         	call	_play	;wreg free
  3812  0034EA                     
  3813                           ;Melodia.c: 57:         _delay((unsigned long)((50)*(8000000/4000.0)));
  3814  0034EA  0E82               	movlw	130
  3815  0034EC  6E13               	movwf	??_PlayCancion^0,c
  3816  0034EE  0EDE               	movlw	222
  3817  0034F0                     u6157:
  3818  0034F0  2EE8               	decfsz	wreg,f,c
  3819  0034F2  D7FE               	bra	u6157
  3820  0034F4  2E13               	decfsz	??_PlayCancion^0,f,c
  3821  0034F6  D7FC               	bra	u6157
  3822  0034F8                     
  3823                           ;Melodia.c: 58:         play (4 ,4,150);
  3824  0034F8  0E00               	movlw	0
  3825  0034FA  6E07               	movwf	(play@nota+1)^0,c
  3826  0034FC  0E04               	movlw	4
  3827  0034FE  6E06               	movwf	play@nota^0,c
  3828  003500  0E00               	movlw	0
  3829  003502  6E09               	movwf	(play@octava+1)^0,c
  3830  003504  0E04               	movlw	4
  3831  003506  6E08               	movwf	play@octava^0,c
  3832  003508  0E00               	movlw	0
  3833  00350A  6E0B               	movwf	(play@duracion+1)^0,c
  3834  00350C  0E96               	movlw	150
  3835  00350E  6E0A               	movwf	play@duracion^0,c
  3836  003510  EC49  F01E         	call	_play	;wreg free
  3837                           
  3838                           ;Melodia.c: 59:         _delay((unsigned long)((150)*(8000000/4000.0)));
  3839  003514  0E02               	movlw	2
  3840  003516  6E14               	movwf	(??_PlayCancion+1)^0,c
  3841  003518  0E86               	movlw	134
  3842  00351A  6E13               	movwf	??_PlayCancion^0,c
  3843  00351C  0E99               	movlw	153
  3844  00351E                     u6167:
  3845  00351E  2EE8               	decfsz	wreg,f,c
  3846  003520  D7FE               	bra	u6167
  3847  003522  2E13               	decfsz	??_PlayCancion^0,f,c
  3848  003524  D7FC               	bra	u6167
  3849  003526  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
  3850  003528  D7FA               	bra	u6167
  3851  00352A  F000               	nop	
  3852  00352C                     
  3853                           ;Melodia.c: 60:         play (4 ,4,150);
  3854  00352C  0E00               	movlw	0
  3855  00352E  6E07               	movwf	(play@nota+1)^0,c
  3856  003530  0E04               	movlw	4
  3857  003532  6E06               	movwf	play@nota^0,c
  3858  003534  0E00               	movlw	0
  3859  003536  6E09               	movwf	(play@octava+1)^0,c
  3860  003538  0E04               	movlw	4
  3861  00353A  6E08               	movwf	play@octava^0,c
  3862  00353C  0E00               	movlw	0
  3863  00353E  6E0B               	movwf	(play@duracion+1)^0,c
  3864  003540  0E96               	movlw	150
  3865  003542  6E0A               	movwf	play@duracion^0,c
  3866  003544  EC49  F01E         	call	_play	;wreg free
  3867  003548                     
  3868                           ;Melodia.c: 61:         _delay((unsigned long)((200)*(8000000/4000.0)));
  3869  003548  0E03               	movlw	3
  3870  00354A  6E14               	movwf	(??_PlayCancion+1)^0,c
  3871  00354C  0E08               	movlw	8
  3872  00354E  6E13               	movwf	??_PlayCancion^0,c
  3873  003550  0E77               	movlw	119
  3874  003552                     u6177:
  3875  003552  2EE8               	decfsz	wreg,f,c
  3876  003554  D7FE               	bra	u6177
  3877  003556  2E13               	decfsz	??_PlayCancion^0,f,c
  3878  003558  D7FC               	bra	u6177
  3879  00355A  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
  3880  00355C  D7FA               	bra	u6177
  3881  00355E  F000               	nop	
  3882                           
  3883                           ;Melodia.c: 63:         play (0 ,4,125);
  3884  003560  0E00               	movlw	0
  3885  003562  6E07               	movwf	(play@nota+1)^0,c
  3886  003564  0E00               	movlw	0
  3887  003566  6E06               	movwf	play@nota^0,c
  3888  003568  0E00               	movlw	0
  3889  00356A  6E09               	movwf	(play@octava+1)^0,c
  3890  00356C  0E04               	movlw	4
  3891  00356E  6E08               	movwf	play@octava^0,c
  3892  003570  0E00               	movlw	0
  3893  003572  6E0B               	movwf	(play@duracion+1)^0,c
  3894  003574  0E7D               	movlw	125
  3895  003576  6E0A               	movwf	play@duracion^0,c
  3896  003578  EC49  F01E         	call	_play	;wreg free
  3897  00357C                     
  3898                           ;Melodia.c: 64:         _delay((unsigned long)((50)*(8000000/4000.0)));
  3899  00357C  0E82               	movlw	130
  3900  00357E  6E13               	movwf	??_PlayCancion^0,c
  3901  003580  0EDE               	movlw	222
  3902  003582                     u6187:
  3903  003582  2EE8               	decfsz	wreg,f,c
  3904  003584  D7FE               	bra	u6187
  3905  003586  2E13               	decfsz	??_PlayCancion^0,f,c
  3906  003588  D7FC               	bra	u6187
  3907  00358A                     
  3908                           ;Melodia.c: 65:         play (4 ,4,125);
  3909  00358A  0E00               	movlw	0
  3910  00358C  6E07               	movwf	(play@nota+1)^0,c
  3911  00358E  0E04               	movlw	4
  3912  003590  6E06               	movwf	play@nota^0,c
  3913  003592  0E00               	movlw	0
  3914  003594  6E09               	movwf	(play@octava+1)^0,c
  3915  003596  0E04               	movlw	4
  3916  003598  6E08               	movwf	play@octava^0,c
  3917  00359A  0E00               	movlw	0
  3918  00359C  6E0B               	movwf	(play@duracion+1)^0,c
  3919  00359E  0E7D               	movlw	125
  3920  0035A0  6E0A               	movwf	play@duracion^0,c
  3921  0035A2  EC49  F01E         	call	_play	;wreg free
  3922                           
  3923                           ;Melodia.c: 66:         _delay((unsigned long)((150)*(8000000/4000.0)));
  3924  0035A6  0E02               	movlw	2
  3925  0035A8  6E14               	movwf	(??_PlayCancion+1)^0,c
  3926  0035AA  0E86               	movlw	134
  3927  0035AC  6E13               	movwf	??_PlayCancion^0,c
  3928  0035AE  0E99               	movlw	153
  3929  0035B0                     u6197:
  3930  0035B0  2EE8               	decfsz	wreg,f,c
  3931  0035B2  D7FE               	bra	u6197
  3932  0035B4  2E13               	decfsz	??_PlayCancion^0,f,c
  3933  0035B6  D7FC               	bra	u6197
  3934  0035B8  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
  3935  0035BA  D7FA               	bra	u6197
  3936  0035BC  F000               	nop	
  3937  0035BE                     
  3938                           ;Melodia.c: 67:         play (7 ,4,200);
  3939  0035BE  0E00               	movlw	0
  3940  0035C0  6E07               	movwf	(play@nota+1)^0,c
  3941  0035C2  0E07               	movlw	7
  3942  0035C4  6E06               	movwf	play@nota^0,c
  3943  0035C6  0E00               	movlw	0
  3944  0035C8  6E09               	movwf	(play@octava+1)^0,c
  3945  0035CA  0E04               	movlw	4
  3946  0035CC  6E08               	movwf	play@octava^0,c
  3947  0035CE  0E00               	movlw	0
  3948  0035D0  6E0B               	movwf	(play@duracion+1)^0,c
  3949  0035D2  0EC8               	movlw	200
  3950  0035D4  6E0A               	movwf	play@duracion^0,c
  3951  0035D6  EC49  F01E         	call	_play	;wreg free
  3952  0035DA                     
  3953                           ;Melodia.c: 68:         _delay((unsigned long)((400)*(8000000/4000.0)));
  3954  0035DA  0E05               	movlw	5
  3955  0035DC  6E14               	movwf	(??_PlayCancion+1)^0,c
  3956  0035DE  0E0F               	movlw	15
  3957  0035E0  6E13               	movwf	??_PlayCancion^0,c
  3958  0035E2  0EF1               	movlw	241
  3959  0035E4                     u6207:
  3960  0035E4  2EE8               	decfsz	wreg,f,c
  3961  0035E6  D7FE               	bra	u6207
  3962  0035E8  2E13               	decfsz	??_PlayCancion^0,f,c
  3963  0035EA  D7FC               	bra	u6207
  3964  0035EC  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
  3965  0035EE  D7FA               	bra	u6207
  3966  0035F0  F000               	nop	
  3967                           
  3968                           ;Melodia.c: 69:         play (7 ,3,350);
  3969  0035F2  0E00               	movlw	0
  3970  0035F4  6E07               	movwf	(play@nota+1)^0,c
  3971  0035F6  0E07               	movlw	7
  3972  0035F8  6E06               	movwf	play@nota^0,c
  3973  0035FA  0E00               	movlw	0
  3974  0035FC  6E09               	movwf	(play@octava+1)^0,c
  3975  0035FE  0E03               	movlw	3
  3976  003600  6E08               	movwf	play@octava^0,c
  3977  003602  0E01               	movlw	1
  3978  003604  6E0B               	movwf	(play@duracion+1)^0,c
  3979  003606  0E5E               	movlw	94
  3980  003608  6E0A               	movwf	play@duracion^0,c
  3981  00360A  EC49  F01E         	call	_play	;wreg free
  3982  00360E                     
  3983                           ;Melodia.c: 70:         _delay((unsigned long)((300)*(8000000/4000.0)));
  3984  00360E  0E04               	movlw	4
  3985  003610  6E14               	movwf	(??_PlayCancion+1)^0,c
  3986  003612  0E0C               	movlw	12
  3987  003614  6E13               	movwf	??_PlayCancion^0,c
  3988  003616  0E34               	movlw	52
  3989  003618                     u6217:
  3990  003618  2EE8               	decfsz	wreg,f,c
  3991  00361A  D7FE               	bra	u6217
  3992  00361C  2E13               	decfsz	??_PlayCancion^0,f,c
  3993  00361E  D7FC               	bra	u6217
  3994  003620  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
  3995  003622  D7FA               	bra	u6217
  3996  003624  0012               	return		;funcret
  3997  003626                     __end_of_PlayCancion:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _play *****************
  4001 ;; Defined at:
  4002 ;;		line 18 in file "Melodia.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  nota            2    5[COMRAM] int 
  4005 ;;  octava          2    7[COMRAM] int 
  4006 ;;  duracion        2    9[COMRAM] int 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  fn              2   16[COMRAM] int 
  4009 ;;  CiclosL         2   14[COMRAM] int 
  4010 ;;  mS_Transcurr    2   12[COMRAM] int 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4020 ;;      Params:         6       0       0       0       0       0       0       0       0
  4021 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4022 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4023 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4024 ;;Total ram usage:       13 bytes
  4025 ;; Hardware stack levels used: 1
  4026 ;; Hardware stack levels required when called: 1
  4027 ;; This function calls:
  4028 ;;		_delay_us
  4029 ;; This function is called by:
  4030 ;;		_PlayCancion
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text21
  4035  003C92                     __ptext21:
  4036                           	callstack 0
  4037  003C92                     _play:
  4038                           	callstack 27
  4039  003C92                     
  4040                           ;Melodia.c: 19:      int fn;;Melodia.c: 20:      int mS_Transcurridos=0;
  4041  003C92  0E00               	movlw	0
  4042  003C94  6E0E               	movwf	(play@mS_Transcurridos+1)^0,c
  4043  003C96  0E00               	movlw	0
  4044  003C98  6E0D               	movwf	play@mS_Transcurridos^0,c
  4045                           
  4046                           ;Melodia.c: 21:      int CiclosL=0;
  4047  003C9A  0E00               	movlw	0
  4048  003C9C  6E10               	movwf	(play@CiclosL+1)^0,c
  4049  003C9E  0E00               	movlw	0
  4050  003CA0  6E0F               	movwf	play@CiclosL^0,c
  4051  003CA2                     
  4052                           ;Melodia.c: 23:      fn=FreqNota[nota];
  4053  003CA2  90D8               	bcf	status,0,c
  4054  003CA4  3406               	rlcf	play@nota^0,w,c
  4055  003CA6  6ED9               	movwf	fsr2l,c
  4056  003CA8  3407               	rlcf	(play@nota+1)^0,w,c
  4057  003CAA  6EDA               	movwf	fsr2h,c
  4058  003CAC  0EB6               	movlw	low _FreqNota
  4059  003CAE  26D9               	addwf	fsr2l,f,c
  4060  003CB0  0E01               	movlw	high _FreqNota
  4061  003CB2  22DA               	addwfc	fsr2h,f,c
  4062  003CB4  CFDE F011          	movff	postinc2,play@fn
  4063  003CB8  CFDD F012          	movff	postdec2,play@fn+1
  4064  003CBC                     
  4065                           ;Melodia.c: 25:      fn>>=(octava);
  4066  003CBC  2808               	incf	play@octava^0,w,c
  4067  003CBE  6E0C               	movwf	??_play^0,c
  4068  003CC0  EF65  F01E         	goto	u5730
  4069  003CC4                     u5735:
  4070  003CC4  3412               	rlcf	(play@fn+1)^0,w,c
  4071  003CC6  3212               	rrcf	(play@fn+1)^0,f,c
  4072  003CC8  3211               	rrcf	play@fn^0,f,c
  4073  003CCA                     u5730:
  4074  003CCA  2E0C               	decfsz	??_play^0,f,c
  4075  003CCC  EF62  F01E         	goto	u5735
  4076  003CD0                     l5144:
  4077                           
  4078                           ;Melodia.c: 30:         TRISCbits . TRISC1 = 0;
  4079  003CD0  9294               	bcf	148,1,c	;volatile
  4080  003CD2                     
  4081                           ;Melodia.c: 31:         LATCbits . LATC1 = 1 ;
  4082  003CD2  828B               	bsf	139,1,c	;volatile
  4083  003CD4                     
  4084                           ;Melodia.c: 32:         delay_us(fn);;
  4085  003CD4  C011  F001         	movff	play@fn,delay_us@nota
  4086  003CD8  C012  F002         	movff	play@fn+1,delay_us@nota+1
  4087  003CDC  EC51  F024         	call	_delay_us	;wreg free
  4088  003CE0                     
  4089                           ;Melodia.c: 33:         CiclosL+=(fn);
  4090  003CE0  5011               	movf	play@fn^0,w,c
  4091  003CE2  260F               	addwf	play@CiclosL^0,f,c
  4092  003CE4  5012               	movf	(play@fn+1)^0,w,c
  4093  003CE6  2210               	addwfc	(play@CiclosL+1)^0,f,c
  4094  003CE8                     
  4095                           ;Melodia.c: 35:         LATCbits . LATC1 = 0 ;
  4096  003CE8  928B               	bcf	139,1,c	;volatile
  4097  003CEA                     
  4098                           ;Melodia.c: 36:          delay_us(fn);
  4099  003CEA  C011  F001         	movff	play@fn,delay_us@nota
  4100  003CEE  C012  F002         	movff	play@fn+1,delay_us@nota+1
  4101  003CF2  EC51  F024         	call	_delay_us	;wreg free
  4102  003CF6                     
  4103                           ;Melodia.c: 37:         CiclosL+=(fn);
  4104  003CF6  5011               	movf	play@fn^0,w,c
  4105  003CF8  260F               	addwf	play@CiclosL^0,f,c
  4106  003CFA  5012               	movf	(play@fn+1)^0,w,c
  4107  003CFC  2210               	addwfc	(play@CiclosL+1)^0,f,c
  4108  003CFE                     l5158:
  4109                           
  4110                           ;Melodia.c: 38:         CiclosL+=25;
  4111  003CFE  0E19               	movlw	25
  4112  003D00  260F               	addwf	play@CiclosL^0,f,c
  4113  003D02  0E00               	movlw	0
  4114  003D04  2210               	addwfc	(play@CiclosL+1)^0,f,c
  4115                           
  4116                           ;Melodia.c: 40:         while(CiclosL>999){
  4117  003D06  EF8D  F01E         	goto	l5166
  4118  003D0A                     l5160:
  4119                           
  4120                           ;Melodia.c: 42:            CiclosL-=1000;
  4121  003D0A  0E18               	movlw	24
  4122  003D0C  260F               	addwf	play@CiclosL^0,f,c
  4123  003D0E  0EFC               	movlw	252
  4124  003D10  2210               	addwfc	(play@CiclosL+1)^0,f,c
  4125  003D12                     
  4126                           ;Melodia.c: 43:            mS_Transcurridos++;
  4127  003D12  4A0D               	infsnz	play@mS_Transcurridos^0,f,c
  4128  003D14  2A0E               	incf	(play@mS_Transcurridos+1)^0,f,c
  4129  003D16  EF7F  F01E         	goto	l5158
  4130  003D1A                     l5166:
  4131                           
  4132                           ;Melodia.c: 40:         while(CiclosL>999){
  4133  003D1A  BE10               	btfsc	(play@CiclosL+1)^0,7,c
  4134  003D1C  EF9B  F01E         	goto	u5740
  4135  003D20  0EE8               	movlw	232
  4136  003D22  5C0F               	subwf	play@CiclosL^0,w,c
  4137  003D24  0E03               	movlw	3
  4138  003D26  5810               	subwfb	(play@CiclosL+1)^0,w,c
  4139  003D28  B0D8               	btfsc	status,0,c
  4140  003D2A  EF99  F01E         	goto	u5741
  4141  003D2E  EF9B  F01E         	goto	u5740
  4142  003D32                     u5741:
  4143  003D32  EF85  F01E         	goto	l5160
  4144  003D36                     u5740:
  4145  003D36                     
  4146                           ;Melodia.c: 46:      }while (duracion>mS_Transcurridos);
  4147  003D36  500A               	movf	play@duracion^0,w,c
  4148  003D38  5C0D               	subwf	play@mS_Transcurridos^0,w,c
  4149  003D3A  500E               	movf	(play@mS_Transcurridos+1)^0,w,c
  4150  003D3C  0A80               	xorlw	128
  4151  003D3E  6E0C               	movwf	??_play^0,c
  4152  003D40  500B               	movf	(play@duracion+1)^0,w,c
  4153  003D42  0A80               	xorlw	128
  4154  003D44  580C               	subwfb	??_play^0,w,c
  4155  003D46  A0D8               	btfss	status,0,c
  4156  003D48  EFA8  F01E         	goto	u5751
  4157  003D4C  EFAA  F01E         	goto	u5750
  4158  003D50                     u5751:
  4159  003D50  EF68  F01E         	goto	l5144
  4160  003D54                     u5750:
  4161  003D54  0012               	return		;funcret
  4162  003D56                     __end_of_play:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function _delay_us *****************
  4166 ;; Defined at:
  4167 ;;		line 11 in file "Melodia.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  nota            2    0[COMRAM] int 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  i               2    3[COMRAM] int 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4181 ;;      Params:         2       0       0       0       0       0       0       0       0
  4182 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4183 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4184 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4185 ;;Total ram usage:        5 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_play
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text22
  4195  0048A2                     __ptext22:
  4196                           	callstack 0
  4197  0048A2                     _delay_us:
  4198                           	callstack 27
  4199  0048A2                     
  4200                           ;Melodia.c: 12:     for(int i=0; i<=nota;i++ ){
  4201  0048A2  0E00               	movlw	0
  4202  0048A4  6E05               	movwf	(delay_us@i+1)^0,c
  4203  0048A6  0E00               	movlw	0
  4204  0048A8  6E04               	movwf	delay_us@i^0,c
  4205  0048AA  EF5A  F024         	goto	l4946
  4206  0048AE                     l239:
  4207                           
  4208                           ;Melodia.c: 13:         _delay((unsigned long)((1)*(8000000/4000000.0)));
  4209  0048AE  D000               	nop2		;2 cycle nop
  4210  0048B0                     
  4211                           ;Melodia.c: 14:     }
  4212  0048B0  4A04               	infsnz	delay_us@i^0,f,c
  4213  0048B2  2A05               	incf	(delay_us@i+1)^0,f,c
  4214  0048B4                     l4946:
  4215  0048B4  5004               	movf	delay_us@i^0,w,c
  4216  0048B6  5C01               	subwf	delay_us@nota^0,w,c
  4217  0048B8  5002               	movf	(delay_us@nota+1)^0,w,c
  4218  0048BA  0A80               	xorlw	128
  4219  0048BC  6E03               	movwf	??_delay_us^0,c
  4220  0048BE  5005               	movf	(delay_us@i+1)^0,w,c
  4221  0048C0  0A80               	xorlw	128
  4222  0048C2  5803               	subwfb	??_delay_us^0,w,c
  4223  0048C4  B0D8               	btfsc	status,0,c
  4224  0048C6  EF67  F024         	goto	u5481
  4225  0048CA  EF69  F024         	goto	u5480
  4226  0048CE                     u5481:
  4227  0048CE  EF57  F024         	goto	l239
  4228  0048D2                     u5480:
  4229  0048D2  0012               	return		;funcret
  4230  0048D4                     __end_of_delay_us:
  4231                           	callstack 0
  4232                           
  4233 ;; *************** function _Estado_Nublado *****************
  4234 ;; Defined at:
  4235 ;;		line 76 in file "Estados.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;		None
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;		None
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4249 ;;      Params:         0       0       0       0       0       0       0       0       0
  4250 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4252 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4253 ;;Total ram usage:        0 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; Hardware stack levels required when called: 8
  4256 ;; This function calls:
  4257 ;;		_LCD_Char
  4258 ;;		_LCD_Command
  4259 ;;		_LCD_Custom_Char
  4260 ;;		_LCD_String_xy
  4261 ;;		_sprintf
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text23
  4268  0042FC                     __ptext23:
  4269                           	callstack 0
  4270  0042FC                     _Estado_Nublado:
  4271                           	callstack 22
  4272  0042FC                     
  4273                           ;Estados.c: 77:     LATE0 = 1;
  4274  0042FC  808D               	bsf	3981,0,c	;volatile
  4275                           
  4276                           ;Estados.c: 78:     LATE1 = 1;
  4277  0042FE  828D               	bsf	3981,1,c	;volatile
  4278                           
  4279                           ;Estados.c: 79:     LATE2 = 0;
  4280  004300  948D               	bcf	3981,2,c	;volatile
  4281  004302                     
  4282                           ;Estados.c: 80:     sprintf(Stemp, "%0.0fC", tempar);
  4283  004302  0E5E               	movlw	low _Stemp
  4284  004304  0100               	movlb	0	; () banked
  4285  004306  6FCC               	movwf	sprintf@s& (0+255),b
  4286  004308  0E01               	movlw	high _Stemp
  4287  00430A  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  4288  00430C  0E01               	movlw	low STR_19
  4289  00430E  6FCE               	movwf	sprintf@fmt& (0+255),b
  4290  004310  0E08               	movlw	high STR_19
  4291  004312  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  4292  004314  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  4293  004318  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  4294  00431C  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  4295  004320  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  4296  004324  ECD8  F021         	call	_sprintf	;wreg free
  4297  004328                     
  4298                           ;Estados.c: 81:     LCD_String_xy(1, 0, Stemp);
  4299  004328  0E00               	movlw	0
  4300  00432A  6E0B               	movwf	LCD_String_xy@pos^0,c
  4301  00432C  0E5E               	movlw	low _Stemp
  4302  00432E  6E0C               	movwf	LCD_String_xy@msg^0,c
  4303  004330  0E01               	movlw	high _Stemp
  4304  004332  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  4305  004334  0E01               	movlw	1
  4306  004336  EC4F  F023         	call	_LCD_String_xy
  4307  00433A                     
  4308                           ;Estados.c: 82:     LCD_Custom_Char(0, character3);
  4309  00433A  0ED5               	movlw	low _character3
  4310  00433C  6E09               	movwf	LCD_Custom_Char@msg^0,c
  4311  00433E  0E01               	movlw	high _character3
  4312  004340  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  4313  004342  0E00               	movlw	0
  4314  004344  ECC3  F022         	call	_LCD_Custom_Char
  4315                           
  4316                           ;Estados.c: 83:     LCD_Command(0xc0);
  4317  004348  0EC0               	movlw	192
  4318  00434A  EC52  F022         	call	_LCD_Command
  4319                           
  4320                           ;Estados.c: 84:     LCD_Char(0);
  4321  00434E  0E00               	movlw	0
  4322  004350  EC78  F022         	call	_LCD_Char
  4323  004354  0012               	return		;funcret
  4324  004356                     __end_of_Estado_Nublado:
  4325                           	callstack 0
  4326                           
  4327 ;; *************** function _Estado_Lluvioso *****************
  4328 ;; Defined at:
  4329 ;;		line 101 in file "Estados.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4343 ;;      Params:         0       0       0       0       0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4346 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4347 ;;Total ram usage:        0 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 8
  4350 ;; This function calls:
  4351 ;;		_LCD_Char
  4352 ;;		_LCD_Command
  4353 ;;		_LCD_Custom_Char
  4354 ;;		_LCD_String_xy
  4355 ;;		_sprintf
  4356 ;; This function is called by:
  4357 ;;		_main
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text24
  4362  004356                     __ptext24:
  4363                           	callstack 0
  4364  004356                     _Estado_Lluvioso:
  4365                           	callstack 22
  4366  004356                     
  4367                           ;Estados.c: 102:     LATE0 = 1;
  4368  004356  808D               	bsf	3981,0,c	;volatile
  4369                           
  4370                           ;Estados.c: 103:     LATE1 = 1;
  4371  004358  828D               	bsf	3981,1,c	;volatile
  4372                           
  4373                           ;Estados.c: 104:     LATE2 = 1;
  4374  00435A  848D               	bsf	3981,2,c	;volatile
  4375  00435C                     
  4376                           ;Estados.c: 105:     sprintf(Stemp, "%0.0fC", tempar);
  4377  00435C  0E5E               	movlw	low _Stemp
  4378  00435E  0100               	movlb	0	; () banked
  4379  004360  6FCC               	movwf	sprintf@s& (0+255),b
  4380  004362  0E01               	movlw	high _Stemp
  4381  004364  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  4382  004366  0E01               	movlw	low STR_19
  4383  004368  6FCE               	movwf	sprintf@fmt& (0+255),b
  4384  00436A  0E08               	movlw	high STR_19
  4385  00436C  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  4386  00436E  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  4387  004372  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  4388  004376  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  4389  00437A  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  4390  00437E  ECD8  F021         	call	_sprintf	;wreg free
  4391  004382                     
  4392                           ;Estados.c: 106:     LCD_String_xy(1, 0, Stemp);
  4393  004382  0E00               	movlw	0
  4394  004384  6E0B               	movwf	LCD_String_xy@pos^0,c
  4395  004386  0E5E               	movlw	low _Stemp
  4396  004388  6E0C               	movwf	LCD_String_xy@msg^0,c
  4397  00438A  0E01               	movlw	high _Stemp
  4398  00438C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  4399  00438E  0E01               	movlw	1
  4400  004390  EC4F  F023         	call	_LCD_String_xy
  4401  004394                     
  4402                           ;Estados.c: 107:     LCD_Custom_Char(0, character1);
  4403  004394  0EE5               	movlw	low _character1
  4404  004396  6E09               	movwf	LCD_Custom_Char@msg^0,c
  4405  004398  0E01               	movlw	high _character1
  4406  00439A  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  4407  00439C  0E00               	movlw	0
  4408  00439E  ECC3  F022         	call	_LCD_Custom_Char
  4409                           
  4410                           ;Estados.c: 108:     LCD_Command(0xc0);
  4411  0043A2  0EC0               	movlw	192
  4412  0043A4  EC52  F022         	call	_LCD_Command
  4413                           
  4414                           ;Estados.c: 109:     LCD_Char(0);
  4415  0043A8  0E00               	movlw	0
  4416  0043AA  EC78  F022         	call	_LCD_Char
  4417  0043AE  0012               	return		;funcret
  4418  0043B0                     __end_of_Estado_Lluvioso:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function _sprintf *****************
  4422 ;; Defined at:
  4423 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  s               2  108[BANK0 ] PTR unsigned char 
  4426 ;;		 -> Stemp(20), RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), 
  4427 ;;		 -> RTC_Calendario@hours(10), RTC_Calendario@mins(10), RTC_Calendario@secs(10), 
  4428 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  4429 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4430 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4431 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  f               6  118[BANK0 ] struct _IO_FILE
  4434 ;;  ap              2  116[BANK0 ] PTR void [1]
  4435 ;;		 -> ?_sprintf(2), 
  4436 ;;  ret             2    0        int 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  2  108[BANK0 ] int 
  4439 ;; Registers used:
  4440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4446 ;;      Params:         0       8       0       0       0       0       0       0       0
  4447 ;;      Locals:         0       8       0       0       0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4449 ;;      Totals:         0      16       0       0       0       0       0       0       0
  4450 ;;Total ram usage:       16 bytes
  4451 ;; Hardware stack levels used: 1
  4452 ;; Hardware stack levels required when called: 7
  4453 ;; This function calls:
  4454 ;;		_vfprintf
  4455 ;; This function is called by:
  4456 ;;		_RTC_Calendario
  4457 ;;		_Estado_Soleado
  4458 ;;		_Estado_Nublado
  4459 ;;		_Estado_Lluvioso
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text25
  4464  0043B0                     __ptext25:
  4465                           	callstack 0
  4466  0043B0                     _sprintf:
  4467                           	callstack 22
  4468  0043B0  0ED0               	movlw	low (?_sprintf+4)
  4469  0043B2  0100               	movlb	0	; () banked
  4470  0043B4  6FD4               	movwf	sprintf@ap& (0+255),b
  4471  0043B6  0E00               	movlw	high (?_sprintf+4)
  4472  0043B8  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  4473  0043BA  C0CC  F0D6         	movff	sprintf@s,sprintf@f
  4474  0043BE  C0CD  F0D7         	movff	sprintf@s+1,sprintf@f+1
  4475  0043C2                     
  4476                           ; BSR set to: 0
  4477  0043C2  0E00               	movlw	0
  4478  0043C4  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  4479  0043C6  0E00               	movlw	0
  4480  0043C8  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  4481  0043CA                     
  4482                           ; BSR set to: 0
  4483  0043CA  0E00               	movlw	0
  4484  0043CC  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  4485  0043CE  0E00               	movlw	0
  4486  0043D0  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  4487  0043D2                     
  4488                           ; BSR set to: 0
  4489  0043D2  0ED6               	movlw	low sprintf@f
  4490  0043D4  6FC4               	movwf	vfprintf@fp& (0+255),b
  4491  0043D6  0E00               	movlw	high sprintf@f
  4492  0043D8  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  4493  0043DA  C0CE  F0C6         	movff	sprintf@fmt,vfprintf@fmt
  4494  0043DE  C0CF  F0C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4495  0043E2  0ED4               	movlw	low sprintf@ap
  4496  0043E4  6FC8               	movwf	vfprintf@ap& (0+255),b
  4497  0043E6  0E00               	movlw	high sprintf@ap
  4498  0043E8  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  4499  0043EA  EC35  F020         	call	_vfprintf	;wreg free
  4500  0043EE  0100               	movlb	0	; () banked
  4501  0043F0  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  4502  0043F2  25CC               	addwf	sprintf@s& (0+255),w,b
  4503  0043F4  6ED9               	movwf	fsr2l,c
  4504  0043F6  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  4505  0043F8  21CD               	addwfc	(sprintf@s+1)& (0+255),w,b
  4506  0043FA  6EDA               	movwf	fsr2h,c
  4507  0043FC  0E00               	movlw	0
  4508  0043FE  6EDF               	movwf	indf2,c
  4509  004400                     
  4510                           ; BSR set to: 0
  4511  004400  0012               	return		;funcret
  4512  004402                     __end_of_sprintf:
  4513                           	callstack 0
  4514                           
  4515 ;; *************** function _vfprintf *****************
  4516 ;; Defined at:
  4517 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  fp              2  100[BANK0 ] PTR struct _IO_FILE
  4520 ;;		 -> sprintf@f(6), 
  4521 ;;  fmt             2  102[BANK0 ] PTR const unsigned char 
  4522 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4523 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4524 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4525 ;;  ap              2  104[BANK0 ] PTR PTR void 
  4526 ;;		 -> sprintf@ap(2), 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  cfmt            2  106[BANK0 ] PTR unsigned char 
  4529 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4530 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4531 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  2  100[BANK0 ] int 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4541 ;;      Params:         0       6       0       0       0       0       0       0       0
  4542 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4544 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4545 ;;Total ram usage:        8 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 6
  4548 ;; This function calls:
  4549 ;;		_vfpfcnvrt
  4550 ;; This function is called by:
  4551 ;;		_sprintf
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text26
  4556  00406A                     __ptext26:
  4557                           	callstack 0
  4558  00406A                     _vfprintf:
  4559                           	callstack 22
  4560  00406A                     
  4561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4562  00406A  C0C6  F0CA         	movff	vfprintf@fmt,vfprintf@cfmt
  4563  00406E  C0C7  F0CB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4564  004072                     
  4565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4566  004072  0E00               	movlw	0
  4567  004074  0100               	movlb	0	; () banked
  4568  004076  6FF3               	movwf	(_nout+1)& (0+255),b
  4569  004078  0E00               	movlw	0
  4570  00407A  6FF2               	movwf	_nout& (0+255),b
  4571                           
  4572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4573  00407C  EF53  F020         	goto	l5256
  4574  004080                     l5254:
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4578  004080  C0C4  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  4579  004084  C0C5  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4580  004088  0ECA               	movlw	low vfprintf@cfmt
  4581  00408A  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  4582  00408C  0E00               	movlw	high vfprintf@cfmt
  4583  00408E  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4584  004090  C0C8  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  4585  004094  C0C9  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4586  004098  EC51  F00A         	call	_vfpfcnvrt	;wreg free
  4587  00409C  0100               	movlb	0	; () banked
  4588  00409E  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  4589  0040A0  27F2               	addwf	_nout& (0+255),f,b
  4590  0040A2  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4591  0040A4  23F3               	addwfc	(_nout+1)& (0+255),f,b
  4592  0040A6                     l5256:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4596  0040A6  C0CA  FFF6         	movff	vfprintf@cfmt,tblptrl
  4597  0040AA  C0CB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4598  0040AE                     	if	0	;tblptru may be non-zero
  4599  0040AE                     	endif
  4600  0040AE                     	if	0	;tblptru may be non-zero
  4601  0040AE                     	endif
  4602  0040AE  0008               	tblrd		*
  4603  0040B0  50F5               	movf	tablat,w,c
  4604  0040B2  0900               	iorlw	0
  4605  0040B4  A4D8               	btfss	status,2,c
  4606  0040B6  EF5F  F020         	goto	u5931
  4607  0040BA  EF61  F020         	goto	u5930
  4608  0040BE                     u5931:
  4609  0040BE  EF40  F020         	goto	l5254
  4610  0040C2                     u5930:
  4611  0040C2                     
  4612                           ; BSR set to: 0
  4613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4614  0040C2  C0F2  F0C4         	movff	_nout,?_vfprintf
  4615  0040C6  C0F3  F0C5         	movff	_nout+1,?_vfprintf+1
  4616  0040CA                     
  4617                           ; BSR set to: 0
  4618  0040CA  0012               	return		;funcret
  4619  0040CC                     __end_of_vfprintf:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function _vfpfcnvrt *****************
  4623 ;; Defined at:
  4624 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  4627 ;;		 -> sprintf@f(6), 
  4628 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  4629 ;;		 -> vfprintf@cfmt(2), 
  4630 ;;  ap              2   72[BANK0 ] PTR PTR void 
  4631 ;;		 -> sprintf@ap(2), 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  llu             8   78[BANK0 ] unsigned long long 
  4634 ;;  ll              8    0        long long 
  4635 ;;  f               4   92[BANK0 ] long long 
  4636 ;;  ct              3   96[BANK0 ] unsigned char [3]
  4637 ;;  vp              3    0        PTR void 
  4638 ;;  cp              3    0        PTR unsigned char 
  4639 ;;  done            2   86[BANK0 ] int 
  4640 ;;  i               2    0        int 
  4641 ;;  c               1   99[BANK0 ] unsigned char 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  2   68[BANK0 ] int 
  4644 ;; Registers used:
  4645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4651 ;;      Params:         0       6       0       0       0       0       0       0       0
  4652 ;;      Locals:         0      22       0       0       0       0       0       0       0
  4653 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4654 ;;      Totals:         0      32       0       0       0       0       0       0       0
  4655 ;;Total ram usage:       32 bytes
  4656 ;; Hardware stack levels used: 1
  4657 ;; Hardware stack levels required when called: 5
  4658 ;; This function calls:
  4659 ;;		_atoi
  4660 ;;		_efgtoa
  4661 ;;		_fputc
  4662 ;;		_isdigit
  4663 ;;		_isupper
  4664 ;;		_strncmp
  4665 ;;		_tolower
  4666 ;;		_xtoa
  4667 ;; This function is called by:
  4668 ;;		_vfprintf
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text27
  4673  0014A2                     __ptext27:
  4674                           	callstack 0
  4675  0014A2                     _vfpfcnvrt:
  4676                           	callstack 22
  4677  0014A2                     
  4678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4679  0014A2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4680  0014A6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4681  0014AA  CFDE FFF6          	movff	postinc2,tblptrl
  4682  0014AE  CFDD FFF7          	movff	postdec2,tblptrh
  4683  0014B2                     	if	0	;tblptru may be non-zero
  4684  0014B2                     	endif
  4685  0014B2                     	if	0	;tblptru may be non-zero
  4686  0014B2                     	endif
  4687  0014B2  0008               	tblrd		*
  4688  0014B4  50F5               	movf	tablat,w,c
  4689  0014B6  0A25               	xorlw	37
  4690  0014B8  A4D8               	btfss	status,2,c
  4691  0014BA  EF61  F00A         	goto	u5521
  4692  0014BE  EF63  F00A         	goto	u5520
  4693  0014C2                     u5521:
  4694  0014C2  EF3C  F00D         	goto	l5096
  4695  0014C6                     u5520:
  4696  0014C6                     
  4697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4698  0014C6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4699  0014CA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4700  0014CE  2ADE               	incf	postinc2,f,c
  4701  0014D0  0E00               	movlw	0
  4702  0014D2  22DD               	addwfc	postdec2,f,c
  4703  0014D4                     
  4704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4705  0014D4  0E00               	movlw	0
  4706  0014D6  0100               	movlb	0	; () banked
  4707  0014D8  6FF5               	movwf	(_width+1)& (0+255),b
  4708  0014DA  0E00               	movlw	0
  4709  0014DC  6FF4               	movwf	_width& (0+255),b
  4710  0014DE  C0F4  F0F8         	movff	_width,_flags
  4711  0014E2  C0F5  F0F9         	movff	_width+1,_flags+1
  4712  0014E6                     
  4713                           ; BSR set to: 0
  4714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4715  0014E6  69F6               	setf	_prec& (0+255),b
  4716  0014E8  69F7               	setf	(_prec+1)& (0+255),b
  4717  0014EA                     
  4718                           ; BSR set to: 0
  4719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4720  0014EA  0E00               	movlw	0
  4721  0014EC  6FB7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4722  0014EE  0E00               	movlw	0
  4723  0014F0  6FB6               	movwf	vfpfcnvrt@done& (0+255),b
  4724                           
  4725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4726  0014F2  EFC1  F00A         	goto	l5004
  4727  0014F6                     l4978:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4731  0014F6  81F8               	bsf	_flags& (0+255),0,b
  4732  0014F8                     l4980:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4736  0014F8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4737  0014FC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4738  001500  2ADE               	incf	postinc2,f,c
  4739  001502  0E00               	movlw	0
  4740  001504  22DD               	addwfc	postdec2,f,c
  4741                           
  4742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4743  001506  EFC1  F00A         	goto	l5004
  4744  00150A                     l4982:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4748  00150A  83F8               	bsf	_flags& (0+255),1,b
  4749  00150C  EF7C  F00A         	goto	l4980
  4750  001510                     l4986:
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4754  001510  85F8               	bsf	_flags& (0+255),2,b
  4755  001512  EF7C  F00A         	goto	l4980
  4756  001516                     l4990:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4760  001516  87F8               	bsf	_flags& (0+255),3,b
  4761  001518  EF7C  F00A         	goto	l4980
  4762  00151C                     l4994:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4766  00151C  89F8               	bsf	_flags& (0+255),4,b
  4767  00151E  EF7C  F00A         	goto	l4980
  4768  001522                     l4998:
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4772  001522  0E00               	movlw	0
  4773  001524  6FB7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4774  001526  0E01               	movlw	1
  4775  001528  6FB6               	movwf	vfpfcnvrt@done& (0+255),b
  4776                           
  4777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4778  00152A  EFC1  F00A         	goto	l5004
  4779  00152E                     l5002:
  4780                           
  4781                           ; BSR set to: 0
  4782  00152E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4783  001532  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4784  001536  CFDE FFF6          	movff	postinc2,tblptrl
  4785  00153A  CFDD FFF7          	movff	postdec2,tblptrh
  4786  00153E                     	if	0	;tblptru may be non-zero
  4787  00153E                     	endif
  4788  00153E                     	if	0	;tblptru may be non-zero
  4789  00153E                     	endif
  4790  00153E  0008               	tblrd		*
  4791  001540  50F5               	movf	tablat,w,c
  4792  001542  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4793  001544  6BAB               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4794                           
  4795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4796                           ; Switch size 1, requested type "simple"
  4797                           ; Number of cases is 1, Range of values is 0 to 0
  4798                           ; switch strategies available:
  4799                           ; Name         Instructions Cycles
  4800                           ; simple_byte            4     3 (average)
  4801                           ;	Chosen strategy is simple_byte
  4802  001546  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4803  001548  0A00               	xorlw	0	; case 0
  4804  00154A  B4D8               	btfsc	status,2,c
  4805  00154C  EFAA  F00A         	goto	l5722
  4806  001550  EF91  F00A         	goto	l4998
  4807  001554                     l5722:
  4808                           
  4809                           ; BSR set to: 0
  4810                           ; Switch size 1, requested type "simple"
  4811                           ; Number of cases is 5, Range of values is 32 to 48
  4812                           ; switch strategies available:
  4813                           ; Name         Instructions Cycles
  4814                           ; simple_byte           16     9 (average)
  4815                           ;	Chosen strategy is simple_byte
  4816  001554  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4817  001556  0A20               	xorlw	32	; case 32
  4818  001558  B4D8               	btfsc	status,2,c
  4819  00155A  EF8B  F00A         	goto	l4990
  4820  00155E  0A03               	xorlw	3	; case 35
  4821  001560  B4D8               	btfsc	status,2,c
  4822  001562  EF8E  F00A         	goto	l4994
  4823  001566  0A08               	xorlw	8	; case 43
  4824  001568  B4D8               	btfsc	status,2,c
  4825  00156A  EF88  F00A         	goto	l4986
  4826  00156E  0A06               	xorlw	6	; case 45
  4827  001570  B4D8               	btfsc	status,2,c
  4828  001572  EF7B  F00A         	goto	l4978
  4829  001576  0A1D               	xorlw	29	; case 48
  4830  001578  B4D8               	btfsc	status,2,c
  4831  00157A  EF85  F00A         	goto	l4982
  4832  00157E  EF91  F00A         	goto	l4998
  4833  001582                     l5004:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4837  001582  51B6               	movf	vfpfcnvrt@done& (0+255),w,b
  4838  001584  11B7               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4839  001586  B4D8               	btfsc	status,2,c
  4840  001588  EFC8  F00A         	goto	u5531
  4841  00158C  EFCA  F00A         	goto	u5530
  4842  001590                     u5531:
  4843  001590  EF97  F00A         	goto	l5002
  4844  001594                     u5530:
  4845  001594                     
  4846                           ; BSR set to: 0
  4847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4848  001594  A1F8               	btfss	_flags& (0+255),0,b
  4849  001596  EFCF  F00A         	goto	u5541
  4850  00159A  EFD1  F00A         	goto	u5540
  4851  00159E                     u5541:
  4852  00159E  EFD2  F00A         	goto	l5008
  4853  0015A2                     u5540:
  4854  0015A2                     
  4855                           ; BSR set to: 0
  4856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4857  0015A2  93F8               	bcf	_flags& (0+255),1,b
  4858  0015A4                     l5008:
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  4862  0015A4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4863  0015A8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4864  0015AC  CFDE FFF6          	movff	postinc2,tblptrl
  4865  0015B0  CFDD FFF7          	movff	postdec2,tblptrh
  4866  0015B4                     	if	0	;tblptru may be non-zero
  4867  0015B4                     	endif
  4868  0015B4                     	if	0	;tblptru may be non-zero
  4869  0015B4                     	endif
  4870  0015B4  0008               	tblrd		*
  4871  0015B6  50F5               	movf	tablat,w,c
  4872  0015B8  0A2E               	xorlw	46
  4873  0015BA  A4D8               	btfss	status,2,c
  4874  0015BC  EFE2  F00A         	goto	u5551
  4875  0015C0  EFE4  F00A         	goto	u5550
  4876  0015C4                     u5551:
  4877  0015C4  EF62  F00B         	goto	l5028
  4878  0015C8                     u5550:
  4879  0015C8                     
  4880                           ; BSR set to: 0
  4881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  4882  0015C8  0E00               	movlw	0
  4883  0015CA  6FF7               	movwf	(_prec+1)& (0+255),b
  4884  0015CC  0E00               	movlw	0
  4885  0015CE  6FF6               	movwf	_prec& (0+255),b
  4886  0015D0                     
  4887                           ; BSR set to: 0
  4888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  4889  0015D0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4890  0015D4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4891  0015D8  2ADE               	incf	postinc2,f,c
  4892  0015DA  0E00               	movlw	0
  4893  0015DC  22DD               	addwfc	postdec2,f,c
  4894  0015DE                     
  4895                           ; BSR set to: 0
  4896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  4897  0015DE  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4898  0015E2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4899  0015E6  CFDE FFF6          	movff	postinc2,tblptrl
  4900  0015EA  CFDD FFF7          	movff	postdec2,tblptrh
  4901  0015EE                     	if	0	;tblptru may be non-zero
  4902  0015EE                     	endif
  4903  0015EE                     	if	0	;tblptru may be non-zero
  4904  0015EE                     	endif
  4905  0015EE  0008               	tblrd		*
  4906  0015F0  50F5               	movf	tablat,w,c
  4907  0015F2  0A2A               	xorlw	42
  4908  0015F4  A4D8               	btfss	status,2,c
  4909  0015F6  EFFF  F00A         	goto	u5561
  4910  0015FA  EF01  F00B         	goto	u5560
  4911  0015FE                     u5561:
  4912  0015FE  EF1E  F00B         	goto	l5018
  4913  001602                     u5560:
  4914  001602                     
  4915                           ; BSR set to: 0
  4916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  4917  001602  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4918  001606  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4919  00160A  2ADE               	incf	postinc2,f,c
  4920  00160C  0E00               	movlw	0
  4921  00160E  22DD               	addwfc	postdec2,f,c
  4922                           
  4923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4924  001610  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4925  001614  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4926  001618  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4927  00161C  0E02               	movlw	2
  4928  00161E  26DE               	addwf	postinc2,f,c
  4929  001620  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4930  001624  0E00               	movlw	0
  4931  001626  22DD               	addwfc	postdec2,f,c
  4932  001628  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4933  00162C  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4934  001630  CFDE F0F6          	movff	postinc2,_prec
  4935  001634  CFDD F0F7          	movff	postdec2,_prec+1
  4936                           
  4937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  4938  001638  EF62  F00B         	goto	l5028
  4939  00163C                     l5018:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  4943  00163C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4944  001640  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4945  001644  CFDE F008          	movff	postinc2,atoi@s
  4946  001648  CFDD F009          	movff	postdec2,atoi@s+1
  4947  00164C  EC9F  F019         	call	_atoi	;wreg free
  4948  001650  C008  F0F6         	movff	?_atoi,_prec
  4949  001654  C009  F0F7         	movff	?_atoi+1,_prec+1
  4950                           
  4951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4952  001658  EF35  F00B         	goto	l5022
  4953  00165C                     l5020:
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  4957  00165C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4958  001660  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4959  001664  2ADE               	incf	postinc2,f,c
  4960  001666  0E00               	movlw	0
  4961  001668  22DD               	addwfc	postdec2,f,c
  4962  00166A                     l5022:
  4963  00166A  0ED0               	movlw	208
  4964  00166C  0100               	movlb	0	; () banked
  4965  00166E  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4966  001670  0EFF               	movlw	255
  4967  001672  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4968  001674  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4969  001678  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4970  00167C  CFDE FFF6          	movff	postinc2,tblptrl
  4971  001680  CFDD FFF7          	movff	postdec2,tblptrh
  4972  001684                     	if	0	;tblptru may be non-zero
  4973  001684                     	endif
  4974  001684                     	if	0	;tblptru may be non-zero
  4975  001684                     	endif
  4976  001684  0008               	tblrd		*
  4977  001686  50F5               	movf	tablat,w,c
  4978  001688  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4979  00168A  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4980  00168C  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4981  00168E  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4982  001690  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4983  001692  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4984  001694  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4985  001696  E10A               	bnz	u5570
  4986  001698  0E0A               	movlw	10
  4987  00169A  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4988  00169C  A0D8               	btfss	status,0,c
  4989  00169E  EF53  F00B         	goto	u5571
  4990  0016A2  EF56  F00B         	goto	u5570
  4991  0016A6                     u5571:
  4992  0016A6  0E01               	movlw	1
  4993  0016A8  EF57  F00B         	goto	u5580
  4994  0016AC                     u5570:
  4995  0016AC  0E00               	movlw	0
  4996  0016AE                     u5580:
  4997  0016AE  6FB8               	movwf	_vfpfcnvrt$1486& (0+255),b
  4998  0016B0  6BB9               	clrf	(_vfpfcnvrt$1486+1)& (0+255),b
  4999  0016B2                     
  5000                           ; BSR set to: 0
  5001  0016B2  51B8               	movf	_vfpfcnvrt$1486& (0+255),w,b
  5002  0016B4  11B9               	iorwf	(_vfpfcnvrt$1486+1)& (0+255),w,b
  5003  0016B6  A4D8               	btfss	status,2,c
  5004  0016B8  EF60  F00B         	goto	u5591
  5005  0016BC  EF62  F00B         	goto	u5590
  5006  0016C0                     u5591:
  5007  0016C0  EF2E  F00B         	goto	l5020
  5008  0016C4                     u5590:
  5009  0016C4                     l5028:
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  5013  0016C4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5014  0016C8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5015  0016CC  CFDE FFF6          	movff	postinc2,tblptrl
  5016  0016D0  CFDD FFF7          	movff	postdec2,tblptrh
  5017  0016D4                     	if	0	;tblptru may be non-zero
  5018  0016D4                     	endif
  5019  0016D4                     	if	0	;tblptru may be non-zero
  5020  0016D4                     	endif
  5021  0016D4  0008               	tblrd		*
  5022  0016D6  50F5               	movf	tablat,w,c
  5023  0016D8  6E07               	movwf	tolower@c^0,c
  5024  0016DA  6A08               	clrf	(tolower@c+1)^0,c
  5025  0016DC  EC66  F020         	call	_tolower	;wreg free
  5026  0016E0  5007               	movf	?_tolower^0,w,c
  5027  0016E2  0100               	movlb	0	; () banked
  5028  0016E4  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  5029  0016E6                     
  5030                           ; BSR set to: 0
  5031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  5032  0016E6  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  5033  0016E8  B4D8               	btfsc	status,2,c
  5034  0016EA  EF79  F00B         	goto	u5601
  5035  0016EE  EF7B  F00B         	goto	u5600
  5036  0016F2                     u5601:
  5037  0016F2  EFB5  F00B         	goto	l5038
  5038  0016F6                     u5600:
  5039  0016F6                     
  5040                           ; BSR set to: 0
  5041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  5042  0016F6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5043  0016FA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5044  0016FE  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  5045  001702  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  5046  001706  0E01               	movlw	1
  5047  001708  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  5048  00170A  0E00               	movlw	0
  5049  00170C  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5050  00170E  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5051  001712  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5052  001716                     	if	0	;tblptru may be non-zero
  5053  001716                     	endif
  5054  001716                     	if	0	;tblptru may be non-zero
  5055  001716                     	endif
  5056  001716  0008               	tblrd		*
  5057  001718  50F5               	movf	tablat,w,c
  5058  00171A  6E07               	movwf	tolower@c^0,c
  5059  00171C  6A08               	clrf	(tolower@c+1)^0,c
  5060  00171E  EC66  F020         	call	_tolower	;wreg free
  5061  001722  5007               	movf	?_tolower^0,w,c
  5062  001724  0100               	movlb	0	; () banked
  5063  001726  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  5064  001728                     
  5065                           ; BSR set to: 0
  5066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  5067  001728  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  5068  00172A  B4D8               	btfsc	status,2,c
  5069  00172C  EF9A  F00B         	goto	u5611
  5070  001730  EF9C  F00B         	goto	u5610
  5071  001734                     u5611:
  5072  001734  EFB5  F00B         	goto	l5038
  5073  001738                     u5610:
  5074  001738                     
  5075                           ; BSR set to: 0
  5076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  5077  001738  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5078  00173C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5079  001740  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  5080  001744  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  5081  001748  0E02               	movlw	2
  5082  00174A  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  5083  00174C  0E00               	movlw	0
  5084  00174E  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5085  001750  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5086  001754  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5087  001758                     	if	0	;tblptru may be non-zero
  5088  001758                     	endif
  5089  001758                     	if	0	;tblptru may be non-zero
  5090  001758                     	endif
  5091  001758  0008               	tblrd		*
  5092  00175A  50F5               	movf	tablat,w,c
  5093  00175C  6E07               	movwf	tolower@c^0,c
  5094  00175E  6A08               	clrf	(tolower@c+1)^0,c
  5095  001760  EC66  F020         	call	_tolower	;wreg free
  5096  001764  5007               	movf	?_tolower^0,w,c
  5097  001766  0100               	movlb	0	; () banked
  5098  001768  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  5099  00176A                     l5038:
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  5103  00176A  0E66               	movlw	102
  5104  00176C  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5105  00176E  A4D8               	btfss	status,2,c
  5106  001770  EFBC  F00B         	goto	u5621
  5107  001774  EFBE  F00B         	goto	u5620
  5108  001778                     u5621:
  5109  001778  EFFE  F00B         	goto	l5050
  5110  00177C                     u5620:
  5111  00177C                     
  5112                           ; BSR set to: 0
  5113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  5114  00177C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5115  001780  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5116  001784  CFDE FFF6          	movff	postinc2,tblptrl
  5117  001788  CFDD FFF7          	movff	postdec2,tblptrh
  5118  00178C                     	if	0	;tblptru may be non-zero
  5119  00178C                     	endif
  5120  00178C                     	if	0	;tblptru may be non-zero
  5121  00178C                     	endif
  5122  00178C  0008               	tblrd		*
  5123  00178E  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  5124  001792                     
  5125                           ; BSR set to: 0
  5126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  5127  001792  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5128  001796  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5129  00179A  2ADE               	incf	postinc2,f,c
  5130  00179C  0E00               	movlw	0
  5131  00179E  22DD               	addwfc	postdec2,f,c
  5132  0017A0                     
  5133                           ; BSR set to: 0
  5134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5135  0017A0  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5136  0017A4  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5137  0017A8  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  5138  0017AC  0E04               	movlw	4
  5139  0017AE  26DE               	addwf	postinc2,f,c
  5140  0017B0  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  5141  0017B4  0E00               	movlw	0
  5142  0017B6  22DD               	addwfc	postdec2,f,c
  5143  0017B8  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5144  0017BC  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5145  0017C0  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5146  0017C4  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5147  0017C8  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5148  0017CC  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5149  0017D0                     l5046:
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  5153  0017D0  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  5154  0017D4  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5155  0017D8  C0BC  F062         	movff	vfpfcnvrt@f,efgtoa@f
  5156  0017DC  C0BD  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5157  0017E0  C0BE  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5158  0017E4  C0BF  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5159  0017E8  C0C3  F066         	movff	vfpfcnvrt@c,efgtoa@c
  5160  0017EC  EC25  F004         	call	_efgtoa	;wreg free
  5161  0017F0  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  5162  0017F4  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5163  0017F8  EF57  F00D         	goto	l1390
  5164  0017FC                     l5050:
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5168  0017FC  0EC0               	movlw	low vfpfcnvrt@ct
  5169  0017FE  6E01               	movwf	strncmp@_l^0,c
  5170  001800  0E00               	movlw	high vfpfcnvrt@ct
  5171  001802  6E02               	movwf	(strncmp@_l+1)^0,c
  5172  001804  0E40               	movlw	low STR_30
  5173  001806  6E03               	movwf	strncmp@_r^0,c
  5174  001808  0E08               	movlw	high STR_30
  5175  00180A  6E04               	movwf	(strncmp@_r+1)^0,c
  5176  00180C  0E00               	movlw	0
  5177  00180E  6E06               	movwf	(strncmp@n+1)^0,c
  5178  001810  0E02               	movlw	2
  5179  001812  6E05               	movwf	strncmp@n^0,c
  5180  001814  EC16  F01D         	call	_strncmp	;wreg free
  5181  001818  5001               	movf	?_strncmp^0,w,c
  5182  00181A  1002               	iorwf	(?_strncmp+1)^0,w,c
  5183  00181C  A4D8               	btfss	status,2,c
  5184  00181E  EF13  F00C         	goto	u5631
  5185  001822  EF15  F00C         	goto	u5630
  5186  001826                     u5631:
  5187  001826  EF91  F00C         	goto	l5066
  5188  00182A                     u5630:
  5189  00182A                     
  5190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5191  00182A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5192  00182E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5193  001832  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  5194  001836  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  5195  00183A  0E01               	movlw	1
  5196  00183C  0100               	movlb	0	; () banked
  5197  00183E  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  5198  001840  0E00               	movlw	0
  5199  001842  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5200  001844  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5201  001848  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5202  00184C                     	if	0	;tblptru may be non-zero
  5203  00184C                     	endif
  5204  00184C                     	if	0	;tblptru may be non-zero
  5205  00184C                     	endif
  5206  00184C  0008               	tblrd		*
  5207  00184E  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  5208  001852  0EBF               	movlw	191
  5209  001854  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  5210  001856  0EFF               	movlw	255
  5211  001858  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5212  00185A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5213  00185E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5214  001862  CFDE FFF6          	movff	postinc2,tblptrl
  5215  001866  CFDD FFF7          	movff	postdec2,tblptrh
  5216  00186A                     	if	0	;tblptru may be non-zero
  5217  00186A                     	endif
  5218  00186A                     	if	0	;tblptru may be non-zero
  5219  00186A                     	endif
  5220  00186A  0008               	tblrd		*
  5221  00186C  50F5               	movf	tablat,w,c
  5222  00186E  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5223  001870  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5224  001872  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  5225  001874  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5226  001876  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5227  001878  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5228  00187A  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5229  00187C  E10A               	bnz	u5640
  5230  00187E  0E1A               	movlw	26
  5231  001880  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5232  001882  A0D8               	btfss	status,0,c
  5233  001884  EF46  F00C         	goto	u5641
  5234  001888  EF49  F00C         	goto	u5640
  5235  00188C                     u5641:
  5236  00188C  0E01               	movlw	1
  5237  00188E  EF4A  F00C         	goto	u5650
  5238  001892                     u5640:
  5239  001892  0E00               	movlw	0
  5240  001894                     u5650:
  5241  001894  6FBA               	movwf	_vfpfcnvrt$1490& (0+255),b
  5242  001896  6BBB               	clrf	(_vfpfcnvrt$1490+1)& (0+255),b
  5243  001898                     
  5244                           ; BSR set to: 0
  5245  001898  51BA               	movf	_vfpfcnvrt$1490& (0+255),w,b
  5246  00189A  11BB               	iorwf	(_vfpfcnvrt$1490+1)& (0+255),w,b
  5247  00189C  B4D8               	btfsc	status,2,c
  5248  00189E  EF53  F00C         	goto	u5661
  5249  0018A2  EF55  F00C         	goto	u5660
  5250  0018A6                     u5661:
  5251  0018A6  EF6F  F00C         	goto	l5060
  5252  0018AA                     u5660:
  5253  0018AA                     
  5254                           ; BSR set to: 0
  5255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5256  0018AA  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5257  0018AE  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5258  0018B2  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  5259  0018B6  0E04               	movlw	4
  5260  0018B8  26DE               	addwf	postinc2,f,c
  5261  0018BA  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  5262  0018BE  0E00               	movlw	0
  5263  0018C0  22DD               	addwfc	postdec2,f,c
  5264  0018C2  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5265  0018C6  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5266  0018CA  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5267  0018CE  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5268  0018D2  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5269  0018D6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5270                           
  5271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  5272  0018DA  EF87  F00C         	goto	l1397
  5273  0018DE                     l5060:
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5277  0018DE  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5278  0018E2  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5279  0018E6  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  5280  0018EA  0E04               	movlw	4
  5281  0018EC  26DE               	addwf	postinc2,f,c
  5282  0018EE  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  5283  0018F2  0E00               	movlw	0
  5284  0018F4  22DD               	addwfc	postdec2,f,c
  5285  0018F6  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5286  0018FA  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5287  0018FE  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5288  001902  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5289  001906  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5290  00190A  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5291  00190E                     l1397:
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5295  00190E  0E02               	movlw	2
  5296  001910  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5297  001914  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5298  001918  26DE               	addwf	postinc2,f,c
  5299  00191A  0E00               	movlw	0
  5300  00191C  22DD               	addwfc	postdec2,f,c
  5301  00191E  EFE8  F00B         	goto	l5046
  5302  001922                     l5066:
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5305  001922  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5306  001926  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5307  00192A  CFDE FFF6          	movff	postinc2,tblptrl
  5308  00192E  CFDD FFF7          	movff	postdec2,tblptrh
  5309  001932                     	if	0	;tblptru may be non-zero
  5310  001932                     	endif
  5311  001932                     	if	0	;tblptru may be non-zero
  5312  001932                     	endif
  5313  001932  0008               	tblrd		*
  5314  001934  50F5               	movf	tablat,w,c
  5315  001936  0A78               	xorlw	120
  5316  001938  B4D8               	btfsc	status,2,c
  5317  00193A  EFA1  F00C         	goto	u5671
  5318  00193E  EFA3  F00C         	goto	u5670
  5319  001942                     u5671:
  5320  001942  EFB5  F00C         	goto	l5070
  5321  001946                     u5670:
  5322  001946  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5323  00194A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5324  00194E  CFDE FFF6          	movff	postinc2,tblptrl
  5325  001952  CFDD FFF7          	movff	postdec2,tblptrh
  5326  001956                     	if	0	;tblptru may be non-zero
  5327  001956                     	endif
  5328  001956                     	if	0	;tblptru may be non-zero
  5329  001956                     	endif
  5330  001956  0008               	tblrd		*
  5331  001958  50F5               	movf	tablat,w,c
  5332  00195A  0A58               	xorlw	88
  5333  00195C  A4D8               	btfss	status,2,c
  5334  00195E  EFB3  F00C         	goto	u5681
  5335  001962  EFB5  F00C         	goto	u5680
  5336  001966                     u5681:
  5337  001966  EF04  F00D         	goto	l5080
  5338  00196A                     u5680:
  5339  00196A                     l5070:
  5340                           
  5341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5342  00196A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5343  00196E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5344  001972  CFDE FFF6          	movff	postinc2,tblptrl
  5345  001976  CFDD FFF7          	movff	postdec2,tblptrh
  5346  00197A                     	if	0	;tblptru may be non-zero
  5347  00197A                     	endif
  5348  00197A                     	if	0	;tblptru may be non-zero
  5349  00197A                     	endif
  5350  00197A  0008               	tblrd		*
  5351  00197C  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  5352  001980                     
  5353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5354  001980  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5355  001984  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5356  001988  2ADE               	incf	postinc2,f,c
  5357  00198A  0E00               	movlw	0
  5358  00198C  22DD               	addwfc	postdec2,f,c
  5359  00198E                     
  5360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5361  00198E  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5362  001992  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5363  001996  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  5364  00199A  0E02               	movlw	2
  5365  00199C  26DE               	addwf	postinc2,f,c
  5366  00199E  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  5367  0019A2  0E00               	movlw	0
  5368  0019A4  22DD               	addwfc	postdec2,f,c
  5369  0019A6  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5370  0019AA  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5371  0019AE  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt+2
  5372  0019B2  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+3
  5373  0019B6  C0AC  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5374  0019BA  C0AD  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5375  0019BE  0100               	movlb	0	; () banked
  5376  0019C0  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5377  0019C2  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5378  0019C4  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5379  0019C6  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5380  0019C8  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5381  0019CA  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5382  0019CC                     
  5383                           ; BSR set to: 0
  5384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5385  0019CC  C0A4  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5386  0019D0  C0A5  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5387  0019D4  C0AE  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5388  0019D8  C0AF  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5389  0019DC  C0B0  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5390  0019E0  C0B1  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5391  0019E4  C0B2  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5392  0019E8  C0B3  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5393  0019EC  C0B4  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5394  0019F0  C0B5  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5395  0019F4  C0C3  F026         	movff	vfpfcnvrt@c,xtoa@x
  5396  0019F8  EC12  F015         	call	_xtoa	;wreg free
  5397  0019FC  C01C  F0A4         	movff	?_xtoa,?_vfpfcnvrt
  5398  001A00  C01D  F0A5         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5399  001A04  EF57  F00D         	goto	l1390
  5400  001A08                     l5080:
  5401                           
  5402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5403  001A08  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5404  001A0C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5405  001A10  CFDE FFF6          	movff	postinc2,tblptrl
  5406  001A14  CFDD FFF7          	movff	postdec2,tblptrh
  5407  001A18                     	if	0	;tblptru may be non-zero
  5408  001A18                     	endif
  5409  001A18                     	if	0	;tblptru may be non-zero
  5410  001A18                     	endif
  5411  001A18  0008               	tblrd		*
  5412  001A1A  50F5               	movf	tablat,w,c
  5413  001A1C  0A25               	xorlw	37
  5414  001A1E  A4D8               	btfss	status,2,c
  5415  001A20  EF14  F00D         	goto	u5691
  5416  001A24  EF16  F00D         	goto	u5690
  5417  001A28                     u5691:
  5418  001A28  EF2E  F00D         	goto	l5090
  5419  001A2C                     u5690:
  5420  001A2C                     
  5421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5422  001A2C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5423  001A30  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5424  001A34  2ADE               	incf	postinc2,f,c
  5425  001A36  0E00               	movlw	0
  5426  001A38  22DD               	addwfc	postdec2,f,c
  5427  001A3A                     
  5428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5429  001A3A  0E00               	movlw	0
  5430  001A3C  6E02               	movwf	(fputc@c+1)^0,c
  5431  001A3E  0E25               	movlw	37
  5432  001A40  6E01               	movwf	fputc@c^0,c
  5433  001A42  C0A4  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5434  001A46  C0A5  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5435  001A4A  EC81  F01D         	call	_fputc	;wreg free
  5436  001A4E                     l5086:
  5437                           
  5438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5439  001A4E  0E00               	movlw	0
  5440  001A50  0100               	movlb	0	; () banked
  5441  001A52  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5442  001A54  0E01               	movlw	1
  5443  001A56  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  5444  001A58  EF57  F00D         	goto	l1390
  5445  001A5C                     l5090:
  5446                           
  5447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5448  001A5C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5449  001A60  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5450  001A64  2ADE               	incf	postinc2,f,c
  5451  001A66  0E00               	movlw	0
  5452  001A68  22DD               	addwfc	postdec2,f,c
  5453  001A6A                     
  5454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5455  001A6A  0E00               	movlw	0
  5456  001A6C  0100               	movlb	0	; () banked
  5457  001A6E  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5458  001A70  0E00               	movlw	0
  5459  001A72  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  5460  001A74  EF57  F00D         	goto	l1390
  5461  001A78                     l5096:
  5462                           
  5463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5464  001A78  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5465  001A7C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5466  001A80  CFDE FFF6          	movff	postinc2,tblptrl
  5467  001A84  CFDD FFF7          	movff	postdec2,tblptrh
  5468  001A88                     	if	0	;tblptru may be non-zero
  5469  001A88                     	endif
  5470  001A88                     	if	0	;tblptru may be non-zero
  5471  001A88                     	endif
  5472  001A88  0008               	tblrd		*
  5473  001A8A  50F5               	movf	tablat,w,c
  5474  001A8C  6E01               	movwf	fputc@c^0,c
  5475  001A8E  6A02               	clrf	(fputc@c+1)^0,c
  5476  001A90  C0A4  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5477  001A94  C0A5  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5478  001A98  EC81  F01D         	call	_fputc	;wreg free
  5479  001A9C                     
  5480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5481  001A9C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5482  001AA0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5483  001AA4  2ADE               	incf	postinc2,f,c
  5484  001AA6  0E00               	movlw	0
  5485  001AA8  22DD               	addwfc	postdec2,f,c
  5486  001AAA  EF27  F00D         	goto	l5086
  5487  001AAE                     l1390:
  5488  001AAE  0012               	return		;funcret
  5489  001AB0                     __end_of_vfpfcnvrt:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function _xtoa *****************
  5493 ;; Defined at:
  5494 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5497 ;;		 -> sprintf@f(6), 
  5498 ;;  d               8   29[COMRAM] unsigned long long 
  5499 ;;  x               1   37[COMRAM] unsigned char 
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  n               8   54[COMRAM] unsigned long long 
  5502 ;;  c               2   64[COMRAM] int 
  5503 ;;  i               2   62[COMRAM] int 
  5504 ;;  w               2   52[COMRAM] int 
  5505 ;;  p               2   50[COMRAM] int 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  2   27[COMRAM] int 
  5508 ;; Registers used:
  5509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5515 ;;      Params:        11       0       0       0       0       0       0       0       0
  5516 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5517 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5518 ;;      Totals:        39       0       0       0       0       0       0       0       0
  5519 ;;Total ram usage:       39 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 4
  5522 ;; This function calls:
  5523 ;;		_isalpha
  5524 ;;		_isupper
  5525 ;;		_pad
  5526 ;;		_toupper
  5527 ;; This function is called by:
  5528 ;;		_vfpfcnvrt
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text28
  5533  002A24                     __ptext28:
  5534                           	callstack 0
  5535  002A24                     _xtoa:
  5536                           	callstack 22
  5537  002A24                     
  5538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5539  002A24  0100               	movlb	0	; () banked
  5540  002A26  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5541  002A28  EF18  F015         	goto	u5191
  5542  002A2C  EF1A  F015         	goto	u5190
  5543  002A30                     u5191:
  5544  002A30  EF1B  F015         	goto	l4798
  5545  002A34                     u5190:
  5546  002A34                     
  5547                           ; BSR set to: 0
  5548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5549  002A34  93F8               	bcf	_flags& (0+255),1,b
  5550  002A36                     l4798:
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5554  002A36  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5555  002A38  EF28  F015         	goto	u5200
  5556  002A3C  51F7               	movf	(_prec+1)& (0+255),w,b
  5557  002A3E  E106               	bnz	u5201
  5558  002A40  05F6               	decf	_prec& (0+255),w,b
  5559  002A42  B0D8               	btfsc	status,0,c
  5560  002A44  EF26  F015         	goto	u5201
  5561  002A48  EF28  F015         	goto	u5200
  5562  002A4C                     u5201:
  5563  002A4C  EF2E  F015         	goto	l1336
  5564  002A50                     u5200:
  5565  002A50                     
  5566                           ; BSR set to: 0
  5567  002A50  0E00               	movlw	0
  5568  002A52  6E34               	movwf	(xtoa@p+1)^0,c
  5569  002A54  0E01               	movlw	1
  5570  002A56  6E33               	movwf	xtoa@p^0,c
  5571  002A58  EF32  F015         	goto	l1338
  5572  002A5C                     l1336:
  5573                           
  5574                           ; BSR set to: 0
  5575  002A5C  C0F6  F033         	movff	_prec,xtoa@p
  5576  002A60  C0F7  F034         	movff	_prec+1,xtoa@p+1
  5577  002A64                     l1338:
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5581  002A64  C0F4  F035         	movff	_width,xtoa@w
  5582  002A68  C0F5  F036         	movff	_width+1,xtoa@w+1
  5583                           
  5584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5585  002A6C  A9F8               	btfss	_flags& (0+255),4,b
  5586  002A6E  EF3B  F015         	goto	u5211
  5587  002A72  EF3D  F015         	goto	u5210
  5588  002A76                     u5211:
  5589  002A76  EF41  F015         	goto	l4804
  5590  002A7A                     u5210:
  5591  002A7A                     
  5592                           ; BSR set to: 0
  5593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5594  002A7A  0EFE               	movlw	254
  5595  002A7C  2635               	addwf	xtoa@w^0,f,c
  5596  002A7E  0EFF               	movlw	255
  5597  002A80  2236               	addwfc	(xtoa@w+1)^0,f,c
  5598  002A82                     l4804:
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5602  002A82  C01E  F037         	movff	xtoa@d,xtoa@n
  5603  002A86  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5604  002A8A  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5605  002A8E  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5606  002A92  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5607  002A96  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5608  002A9A  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5609  002A9E  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5610  002AA2                     
  5611                           ; BSR set to: 0
  5612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5613  002AA2  0E00               	movlw	0
  5614  002AA4  6E40               	movwf	(xtoa@i+1)^0,c
  5615  002AA6  0E4F               	movlw	79
  5616  002AA8  6E3F               	movwf	xtoa@i^0,c
  5617  002AAA                     
  5618                           ; BSR set to: 0
  5619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5620  002AAA  0E00               	movlw	0
  5621  002AAC  0101               	movlb	1	; () banked
  5622  002AAE  6F5D               	movwf	(_dbuf+79)& (0+255),b
  5623                           
  5624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5625  002AB0  EF0D  F016         	goto	l4840
  5626  002AB4                     l4810:
  5627                           
  5628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  5629  002AB4  063F               	decf	xtoa@i^0,f,c
  5630  002AB6  A0D8               	btfss	status,0,c
  5631  002AB8  0640               	decf	(xtoa@i+1)^0,f,c
  5632  002ABA                     
  5633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5634  002ABA  0E0F               	movlw	15
  5635  002ABC  1437               	andwf	xtoa@n^0,w,c
  5636  002ABE  6E41               	movwf	xtoa@c^0,c
  5637  002AC0  6A42               	clrf	(xtoa@c+1)^0,c
  5638  002AC2                     
  5639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5640  002AC2  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5641  002AC4  EF6D  F015         	goto	u5221
  5642  002AC8  5042               	movf	(xtoa@c+1)^0,w,c
  5643  002ACA  E109               	bnz	u5220
  5644  002ACC  0E0A               	movlw	10
  5645  002ACE  5C41               	subwf	xtoa@c^0,w,c
  5646  002AD0  A0D8               	btfss	status,0,c
  5647  002AD2  EF6D  F015         	goto	u5221
  5648  002AD6  EF6F  F015         	goto	u5220
  5649  002ADA                     u5221:
  5650  002ADA  EF77  F015         	goto	l4818
  5651  002ADE                     u5220:
  5652  002ADE  0E57               	movlw	87
  5653  002AE0  2441               	addwf	xtoa@c^0,w,c
  5654  002AE2  6E41               	movwf	xtoa@c^0,c
  5655  002AE4  0E00               	movlw	0
  5656  002AE6  2042               	addwfc	(xtoa@c+1)^0,w,c
  5657  002AE8  6E42               	movwf	(xtoa@c+1)^0,c
  5658  002AEA  EF7D  F015         	goto	l1345
  5659  002AEE                     l4818:
  5660  002AEE  0E30               	movlw	48
  5661  002AF0  2441               	addwf	xtoa@c^0,w,c
  5662  002AF2  6E41               	movwf	xtoa@c^0,c
  5663  002AF4  0E00               	movlw	0
  5664  002AF6  2042               	addwfc	(xtoa@c+1)^0,w,c
  5665  002AF8  6E42               	movwf	(xtoa@c+1)^0,c
  5666  002AFA                     l1345:
  5667  002AFA  0EBF               	movlw	191
  5668  002AFC  6E27               	movwf	??_xtoa^0,c
  5669  002AFE  0EFF               	movlw	255
  5670  002B00  6E28               	movwf	(??_xtoa+1)^0,c
  5671  002B02  5026               	movf	xtoa@x^0,w,c
  5672  002B04  6E29               	movwf	(??_xtoa+2)^0,c
  5673  002B06  6A2A               	clrf	(??_xtoa+3)^0,c
  5674  002B08  5027               	movf	??_xtoa^0,w,c
  5675  002B0A  2629               	addwf	(??_xtoa+2)^0,f,c
  5676  002B0C  5028               	movf	(??_xtoa+1)^0,w,c
  5677  002B0E  222A               	addwfc	(??_xtoa+3)^0,f,c
  5678  002B10  502A               	movf	(??_xtoa+3)^0,w,c
  5679  002B12  E10A               	bnz	u5230
  5680  002B14  0E1A               	movlw	26
  5681  002B16  5C29               	subwf	(??_xtoa+2)^0,w,c
  5682  002B18  A0D8               	btfss	status,0,c
  5683  002B1A  EF91  F015         	goto	u5231
  5684  002B1E  EF94  F015         	goto	u5230
  5685  002B22                     u5231:
  5686  002B22  0E01               	movlw	1
  5687  002B24  EF95  F015         	goto	u5240
  5688  002B28                     u5230:
  5689  002B28  0E00               	movlw	0
  5690  002B2A                     u5240:
  5691  002B2A  6E2F               	movwf	_xtoa$1471^0,c
  5692  002B2C  6A30               	clrf	(_xtoa$1471+1)^0,c
  5693  002B2E  502F               	movf	_xtoa$1471^0,w,c
  5694  002B30  1030               	iorwf	(_xtoa$1471+1)^0,w,c
  5695  002B32  B4D8               	btfsc	status,2,c
  5696  002B34  EF9E  F015         	goto	u5251
  5697  002B38  EFA0  F015         	goto	u5250
  5698  002B3C                     u5251:
  5699  002B3C  EFD0  F015         	goto	l4832
  5700  002B40                     u5250:
  5701  002B40  0E9F               	movlw	159
  5702  002B42  6E27               	movwf	??_xtoa^0,c
  5703  002B44  0EFF               	movlw	255
  5704  002B46  6E28               	movwf	(??_xtoa+1)^0,c
  5705  002B48  0E20               	movlw	32
  5706  002B4A  1041               	iorwf	xtoa@c^0,w,c
  5707  002B4C  6E29               	movwf	(??_xtoa+2)^0,c
  5708  002B4E  0E00               	movlw	0
  5709  002B50  1042               	iorwf	(xtoa@c+1)^0,w,c
  5710  002B52  6E2A               	movwf	(??_xtoa+3)^0,c
  5711  002B54  5027               	movf	??_xtoa^0,w,c
  5712  002B56  2629               	addwf	(??_xtoa+2)^0,f,c
  5713  002B58  5028               	movf	(??_xtoa+1)^0,w,c
  5714  002B5A  222A               	addwfc	(??_xtoa+3)^0,f,c
  5715  002B5C  502A               	movf	(??_xtoa+3)^0,w,c
  5716  002B5E  E10A               	bnz	u5260
  5717  002B60  0E1A               	movlw	26
  5718  002B62  5C29               	subwf	(??_xtoa+2)^0,w,c
  5719  002B64  A0D8               	btfss	status,0,c
  5720  002B66  EFB7  F015         	goto	u5261
  5721  002B6A  EFBA  F015         	goto	u5260
  5722  002B6E                     u5261:
  5723  002B6E  0E01               	movlw	1
  5724  002B70  EFBB  F015         	goto	u5270
  5725  002B74                     u5260:
  5726  002B74  0E00               	movlw	0
  5727  002B76                     u5270:
  5728  002B76  6E31               	movwf	_xtoa$1472^0,c
  5729  002B78  6A32               	clrf	(_xtoa$1472+1)^0,c
  5730  002B7A  5031               	movf	_xtoa$1472^0,w,c
  5731  002B7C  1032               	iorwf	(_xtoa$1472+1)^0,w,c
  5732  002B7E  B4D8               	btfsc	status,2,c
  5733  002B80  EFC4  F015         	goto	u5281
  5734  002B84  EFC6  F015         	goto	u5280
  5735  002B88                     u5281:
  5736  002B88  EFD0  F015         	goto	l4832
  5737  002B8C                     u5280:
  5738  002B8C                     
  5739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5740  002B8C  C041  F007         	movff	xtoa@c,toupper@c
  5741  002B90  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5742  002B94  ECC5  F020         	call	_toupper	;wreg free
  5743  002B98  C007  F041         	movff	?_toupper,xtoa@c
  5744  002B9C  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5745  002BA0                     l4832:
  5746                           
  5747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5748  002BA0  0E0E               	movlw	low _dbuf
  5749  002BA2  243F               	addwf	xtoa@i^0,w,c
  5750  002BA4  6ED9               	movwf	fsr2l,c
  5751  002BA6  0E01               	movlw	high _dbuf
  5752  002BA8  2040               	addwfc	(xtoa@i+1)^0,w,c
  5753  002BAA  6EDA               	movwf	fsr2h,c
  5754  002BAC  C041  FFDF         	movff	xtoa@c,indf2
  5755  002BB0                     
  5756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  5757  002BB0  0633               	decf	xtoa@p^0,f,c
  5758  002BB2  A0D8               	btfss	status,0,c
  5759  002BB4  0634               	decf	(xtoa@p+1)^0,f,c
  5760  002BB6                     
  5761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  5762  002BB6  0635               	decf	xtoa@w^0,f,c
  5763  002BB8  A0D8               	btfss	status,0,c
  5764  002BBA  0636               	decf	(xtoa@w+1)^0,f,c
  5765  002BBC                     
  5766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5767  002BBC  C037  F027         	movff	xtoa@n,??_xtoa
  5768  002BC0  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5769  002BC4  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5770  002BC8  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5771  002BCC  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5772  002BD0  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5773  002BD4  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5774  002BD8  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5775  002BDC  0E05               	movlw	5
  5776  002BDE  EFFA  F015         	goto	u5290
  5777  002BE2                     u5295:
  5778  002BE2  90D8               	bcf	status,0,c
  5779  002BE4  322E               	rrcf	(??_xtoa+7)^0,f,c
  5780  002BE6  322D               	rrcf	(??_xtoa+6)^0,f,c
  5781  002BE8  322C               	rrcf	(??_xtoa+5)^0,f,c
  5782  002BEA  322B               	rrcf	(??_xtoa+4)^0,f,c
  5783  002BEC  322A               	rrcf	(??_xtoa+3)^0,f,c
  5784  002BEE  3229               	rrcf	(??_xtoa+2)^0,f,c
  5785  002BF0  3228               	rrcf	(??_xtoa+1)^0,f,c
  5786  002BF2  3227               	rrcf	??_xtoa^0,f,c
  5787  002BF4                     u5290:
  5788  002BF4  2EE8               	decfsz	wreg,f,c
  5789  002BF6  EFF1  F015         	goto	u5295
  5790  002BFA  C027  F037         	movff	??_xtoa,xtoa@n
  5791  002BFE  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5792  002C02  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5793  002C06  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5794  002C0A  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5795  002C0E  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5796  002C12  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5797  002C16  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5798  002C1A                     l4840:
  5799                           
  5800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5801  002C1A  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5802  002C1C  EF19  F016         	goto	u5301
  5803  002C20  5040               	movf	(xtoa@i+1)^0,w,c
  5804  002C22  E109               	bnz	u5300
  5805  002C24  0E02               	movlw	2
  5806  002C26  5C3F               	subwf	xtoa@i^0,w,c
  5807  002C28  A0D8               	btfss	status,0,c
  5808  002C2A  EF19  F016         	goto	u5301
  5809  002C2E  EF1B  F016         	goto	u5300
  5810  002C32                     u5301:
  5811  002C32  EF4C  F016         	goto	l1359
  5812  002C36                     u5300:
  5813  002C36  5037               	movf	xtoa@n^0,w,c
  5814  002C38  1038               	iorwf	(xtoa@n+1)^0,w,c
  5815  002C3A  1039               	iorwf	(xtoa@n+2)^0,w,c
  5816  002C3C  103A               	iorwf	(xtoa@n+3)^0,w,c
  5817  002C3E  103B               	iorwf	(xtoa@n+4)^0,w,c
  5818  002C40  103C               	iorwf	(xtoa@n+5)^0,w,c
  5819  002C42  103D               	iorwf	(xtoa@n+6)^0,w,c
  5820  002C44  103E               	iorwf	(xtoa@n+7)^0,w,c
  5821  002C46  A4D8               	btfss	status,2,c
  5822  002C48  EF28  F016         	goto	u5311
  5823  002C4C  EF2A  F016         	goto	u5310
  5824  002C50                     u5311:
  5825  002C50  EF5A  F015         	goto	l4810
  5826  002C54                     u5310:
  5827  002C54  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5828  002C56  EF37  F016         	goto	u5320
  5829  002C5A  5034               	movf	(xtoa@p+1)^0,w,c
  5830  002C5C  E106               	bnz	u5321
  5831  002C5E  0433               	decf	xtoa@p^0,w,c
  5832  002C60  B0D8               	btfsc	status,0,c
  5833  002C62  EF35  F016         	goto	u5321
  5834  002C66  EF37  F016         	goto	u5320
  5835  002C6A                     u5321:
  5836  002C6A  EF5A  F015         	goto	l4810
  5837  002C6E                     u5320:
  5838  002C6E  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5839  002C70  EF42  F016         	goto	u5331
  5840  002C74  5036               	movf	(xtoa@w+1)^0,w,c
  5841  002C76  E108               	bnz	u5330
  5842  002C78  0435               	decf	xtoa@w^0,w,c
  5843  002C7A  A0D8               	btfss	status,0,c
  5844  002C7C  EF42  F016         	goto	u5331
  5845  002C80  EF44  F016         	goto	u5330
  5846  002C84                     u5331:
  5847  002C84  EF4C  F016         	goto	l1359
  5848  002C88                     u5330:
  5849  002C88  0100               	movlb	0	; () banked
  5850  002C8A  B3F8               	btfsc	_flags& (0+255),1,b
  5851  002C8C  EF4A  F016         	goto	u5341
  5852  002C90  EF4C  F016         	goto	u5340
  5853  002C94                     u5341:
  5854  002C94  EF5A  F015         	goto	l4810
  5855  002C98                     u5340:
  5856  002C98                     l1359:
  5857                           
  5858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5859  002C98  0100               	movlb	0	; () banked
  5860  002C9A  A9F8               	btfss	_flags& (0+255),4,b
  5861  002C9C  EF52  F016         	goto	u5351
  5862  002CA0  EF54  F016         	goto	u5350
  5863  002CA4                     u5351:
  5864  002CA4  EF6A  F016         	goto	l4856
  5865  002CA8                     u5350:
  5866  002CA8                     
  5867                           ; BSR set to: 0
  5868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  5869  002CA8  063F               	decf	xtoa@i^0,f,c
  5870  002CAA  A0D8               	btfss	status,0,c
  5871  002CAC  0640               	decf	(xtoa@i+1)^0,f,c
  5872  002CAE                     
  5873                           ; BSR set to: 0
  5874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5875  002CAE  0E0E               	movlw	low _dbuf
  5876  002CB0  243F               	addwf	xtoa@i^0,w,c
  5877  002CB2  6ED9               	movwf	fsr2l,c
  5878  002CB4  0E01               	movlw	high _dbuf
  5879  002CB6  2040               	addwfc	(xtoa@i+1)^0,w,c
  5880  002CB8  6EDA               	movwf	fsr2h,c
  5881  002CBA  C026  FFDF         	movff	xtoa@x,indf2
  5882  002CBE                     
  5883                           ; BSR set to: 0
  5884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  5885  002CBE  063F               	decf	xtoa@i^0,f,c
  5886  002CC0  A0D8               	btfss	status,0,c
  5887  002CC2  0640               	decf	(xtoa@i+1)^0,f,c
  5888                           
  5889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5890  002CC4  0E0E               	movlw	low _dbuf
  5891  002CC6  243F               	addwf	xtoa@i^0,w,c
  5892  002CC8  6ED9               	movwf	fsr2l,c
  5893  002CCA  0E01               	movlw	high _dbuf
  5894  002CCC  2040               	addwfc	(xtoa@i+1)^0,w,c
  5895  002CCE  6EDA               	movwf	fsr2h,c
  5896  002CD0  0E30               	movlw	48
  5897  002CD2  6EDF               	movwf	indf2,c
  5898  002CD4                     l4856:
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5902  002CD4  C01C  F011         	movff	xtoa@fp,pad@fp
  5903  002CD8  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5904  002CDC  0E0E               	movlw	low _dbuf
  5905  002CDE  243F               	addwf	xtoa@i^0,w,c
  5906  002CE0  6E13               	movwf	pad@buf^0,c
  5907  002CE2  0E01               	movlw	high _dbuf
  5908  002CE4  2040               	addwfc	(xtoa@i+1)^0,w,c
  5909  002CE6  6E14               	movwf	(pad@buf+1)^0,c
  5910  002CE8  C035  F015         	movff	xtoa@w,pad@p
  5911  002CEC  C036  F016         	movff	xtoa@w+1,pad@p+1
  5912  002CF0  ECE6  F01D         	call	_pad	;wreg free
  5913  002CF4  C011  F01C         	movff	?_pad,?_xtoa
  5914  002CF8  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5915  002CFC  0012               	return		;funcret
  5916  002CFE                     __end_of_xtoa:
  5917                           	callstack 0
  5918                           
  5919 ;; *************** function _toupper *****************
  5920 ;; Defined at:
  5921 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  c               2    6[COMRAM] int 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  2    6[COMRAM] int 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5935 ;;      Params:         2       0       0       0       0       0       0       0       0
  5936 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5937 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5938 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5939 ;;Total ram usage:        8 bytes
  5940 ;; Hardware stack levels used: 1
  5941 ;; Hardware stack levels required when called: 1
  5942 ;; This function calls:
  5943 ;;		_islower
  5944 ;; This function is called by:
  5945 ;;		_xtoa
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text29
  5950  00418A                     __ptext29:
  5951                           	callstack 0
  5952  00418A                     _toupper:
  5953                           	callstack 24
  5954  00418A  0E9F               	movlw	159
  5955  00418C  6E09               	movwf	??_toupper^0,c
  5956  00418E  0EFF               	movlw	255
  5957  004190  6E0A               	movwf	(??_toupper+1)^0,c
  5958  004192  C007  F00B         	movff	toupper@c,??_toupper+2
  5959  004196  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5960  00419A  5009               	movf	??_toupper^0,w,c
  5961  00419C  260B               	addwf	(??_toupper+2)^0,f,c
  5962  00419E  500A               	movf	(??_toupper+1)^0,w,c
  5963  0041A0  220C               	addwfc	(??_toupper+3)^0,f,c
  5964  0041A2  500C               	movf	(??_toupper+3)^0,w,c
  5965  0041A4  E10A               	bnz	u4550
  5966  0041A6  0E1A               	movlw	26
  5967  0041A8  5C0B               	subwf	(??_toupper+2)^0,w,c
  5968  0041AA  A0D8               	btfss	status,0,c
  5969  0041AC  EFDA  F020         	goto	u4551
  5970  0041B0  EFDD  F020         	goto	u4550
  5971  0041B4                     u4551:
  5972  0041B4  0E01               	movlw	1
  5973  0041B6  EFDE  F020         	goto	u4560
  5974  0041BA                     u4550:
  5975  0041BA  0E00               	movlw	0
  5976  0041BC                     u4560:
  5977  0041BC  6E0D               	movwf	_toupper$1644^0,c
  5978  0041BE  6A0E               	clrf	(_toupper$1644+1)^0,c
  5979  0041C0  500D               	movf	_toupper$1644^0,w,c
  5980  0041C2  100E               	iorwf	(_toupper$1644+1)^0,w,c
  5981  0041C4  B4D8               	btfsc	status,2,c
  5982  0041C6  EFE7  F020         	goto	u4571
  5983  0041CA  EFE9  F020         	goto	u4570
  5984  0041CE                     u4571:
  5985  0041CE  EFEF  F020         	goto	l1550
  5986  0041D2                     u4570:
  5987  0041D2  0E5F               	movlw	95
  5988  0041D4  1407               	andwf	toupper@c^0,w,c
  5989  0041D6  6E07               	movwf	?_toupper^0,c
  5990  0041D8  6A08               	clrf	(?_toupper+1)^0,c
  5991  0041DA  EFF3  F020         	goto	l1555
  5992  0041DE                     l1550:
  5993  0041DE  C007  F007         	movff	toupper@c,?_toupper
  5994  0041E2  C008  F008         	movff	toupper@c+1,?_toupper+1
  5995  0041E6                     l1555:
  5996  0041E6  0012               	return		;funcret
  5997  0041E8                     __end_of_toupper:
  5998                           	callstack 0
  5999                           
  6000 ;; *************** function _islower *****************
  6001 ;; Defined at:
  6002 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  c               2    0[COMRAM] int 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;		None
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  2    0[COMRAM] int 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6016 ;;      Params:         2       0       0       0       0       0       0       0       0
  6017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6018 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6019 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6020 ;;Total ram usage:        6 bytes
  6021 ;; Hardware stack levels used: 1
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_toupper
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text30
  6030  004754                     __ptext30:
  6031                           	callstack 0
  6032  004754                     _islower:
  6033                           	callstack 24
  6034  004754  0E9F               	movlw	159
  6035  004756  6E03               	movwf	??_islower^0,c
  6036  004758  0EFF               	movlw	255
  6037  00475A  6E04               	movwf	(??_islower+1)^0,c
  6038  00475C  C001  F005         	movff	islower@c,??_islower+2
  6039  004760  C002  F006         	movff	islower@c+1,??_islower+3
  6040  004764  5003               	movf	??_islower^0,w,c
  6041  004766  2605               	addwf	(??_islower+2)^0,f,c
  6042  004768  5004               	movf	(??_islower+1)^0,w,c
  6043  00476A  2206               	addwfc	(??_islower+3)^0,f,c
  6044  00476C  5006               	movf	(??_islower+3)^0,w,c
  6045  00476E  E10A               	bnz	u3550
  6046  004770  0E1A               	movlw	26
  6047  004772  5C05               	subwf	(??_islower+2)^0,w,c
  6048  004774  A0D8               	btfss	status,0,c
  6049  004776  EFBF  F023         	goto	u3551
  6050  00477A  EFC2  F023         	goto	u3550
  6051  00477E                     u3551:
  6052  00477E  0E01               	movlw	1
  6053  004780  EFC3  F023         	goto	u3560
  6054  004784                     u3550:
  6055  004784  0E00               	movlw	0
  6056  004786                     u3560:
  6057  004786  6E01               	movwf	?_islower^0,c
  6058  004788  6A02               	clrf	(?_islower+1)^0,c
  6059  00478A  0012               	return		;funcret
  6060  00478C                     __end_of_islower:
  6061                           	callstack 0
  6062                           
  6063 ;; *************** function _isalpha *****************
  6064 ;; Defined at:
  6065 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  c               2    0[COMRAM] int 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  2    0[COMRAM] int 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6079 ;;      Params:         2       0       0       0       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6081 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6082 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6083 ;;Total ram usage:        6 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; This function calls:
  6086 ;;		Nothing
  6087 ;; This function is called by:
  6088 ;;		_xtoa
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text31
  6093  0046DE                     __ptext31:
  6094                           	callstack 0
  6095  0046DE                     _isalpha:
  6096                           	callstack 25
  6097  0046DE  0E9F               	movlw	159
  6098  0046E0  6E03               	movwf	??_isalpha^0,c
  6099  0046E2  0EFF               	movlw	255
  6100  0046E4  6E04               	movwf	(??_isalpha+1)^0,c
  6101  0046E6  0E20               	movlw	32
  6102  0046E8  1001               	iorwf	isalpha@c^0,w,c
  6103  0046EA  6E05               	movwf	(??_isalpha+2)^0,c
  6104  0046EC  0E00               	movlw	0
  6105  0046EE  1002               	iorwf	(isalpha@c+1)^0,w,c
  6106  0046F0  6E06               	movwf	(??_isalpha+3)^0,c
  6107  0046F2  5003               	movf	??_isalpha^0,w,c
  6108  0046F4  2605               	addwf	(??_isalpha+2)^0,f,c
  6109  0046F6  5004               	movf	(??_isalpha+1)^0,w,c
  6110  0046F8  2206               	addwfc	(??_isalpha+3)^0,f,c
  6111  0046FA  5006               	movf	(??_isalpha+3)^0,w,c
  6112  0046FC  E10A               	bnz	u4530
  6113  0046FE  0E1A               	movlw	26
  6114  004700  5C05               	subwf	(??_isalpha+2)^0,w,c
  6115  004702  A0D8               	btfss	status,0,c
  6116  004704  EF86  F023         	goto	u4531
  6117  004708  EF89  F023         	goto	u4530
  6118  00470C                     u4531:
  6119  00470C  0E01               	movlw	1
  6120  00470E  EF8A  F023         	goto	u4540
  6121  004712                     u4530:
  6122  004712  0E00               	movlw	0
  6123  004714                     u4540:
  6124  004714  6E01               	movwf	?_isalpha^0,c
  6125  004716  6A02               	clrf	(?_isalpha+1)^0,c
  6126  004718  0012               	return		;funcret
  6127  00471A                     __end_of_isalpha:
  6128                           	callstack 0
  6129                           
  6130 ;; *************** function _strncmp *****************
  6131 ;; Defined at:
  6132 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6135 ;;		 -> vfpfcnvrt@ct(3), 
  6136 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6137 ;;		 -> STR_32(3), 
  6138 ;;  n               2    4[COMRAM] unsigned int 
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6141 ;;		 -> STR_32(3), 
  6142 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6143 ;;		 -> vfpfcnvrt@ct(3), 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  2    0[COMRAM] int 
  6146 ;; Registers used:
  6147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6153 ;;      Params:         6       0       0       0       0       0       0       0       0
  6154 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6155 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6156 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6157 ;;Total ram usage:       11 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_vfpfcnvrt
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text32
  6167  003A2C                     __ptext32:
  6168                           	callstack 0
  6169  003A2C                     _strncmp:
  6170                           	callstack 26
  6171  003A2C  C001  F008         	movff	strncmp@_l,strncmp@l
  6172  003A30  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6173  003A34  C003  F00A         	movff	strncmp@_r,strncmp@r
  6174  003A38  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  6175  003A3C  0605               	decf	strncmp@n^0,f,c
  6176  003A3E  A0D8               	btfss	status,0,c
  6177  003A40  0606               	decf	(strncmp@n+1)^0,f,c
  6178  003A42  2805               	incf	strncmp@n^0,w,c
  6179  003A44  E106               	bnz	u5431
  6180  003A46  2806               	incf	(strncmp@n+1)^0,w,c
  6181  003A48  A4D8               	btfss	status,2,c
  6182  003A4A  EF29  F01D         	goto	u5431
  6183  003A4E  EF2B  F01D         	goto	u5430
  6184  003A52                     u5431:
  6185  003A52  EF38  F01D         	goto	l4910
  6186  003A56                     u5430:
  6187  003A56  0E00               	movlw	0
  6188  003A58  6E02               	movwf	(?_strncmp+1)^0,c
  6189  003A5A  0E00               	movlw	0
  6190  003A5C  6E01               	movwf	?_strncmp^0,c
  6191  003A5E  EF80  F01D         	goto	l1527
  6192  003A62                     l4908:
  6193  003A62  4A08               	infsnz	strncmp@l^0,f,c
  6194  003A64  2A09               	incf	(strncmp@l+1)^0,f,c
  6195  003A66  4A0A               	infsnz	strncmp@r^0,f,c
  6196  003A68  2A0B               	incf	(strncmp@r+1)^0,f,c
  6197  003A6A  0605               	decf	strncmp@n^0,f,c
  6198  003A6C  A0D8               	btfss	status,0,c
  6199  003A6E  0606               	decf	(strncmp@n+1)^0,f,c
  6200  003A70                     l4910:
  6201  003A70  C008  FFD9         	movff	strncmp@l,fsr2l
  6202  003A74  C009  FFDA         	movff	strncmp@l+1,fsr2h
  6203  003A78  50DF               	movf	indf2,w,c
  6204  003A7A  B4D8               	btfsc	status,2,c
  6205  003A7C  EF42  F01D         	goto	u5441
  6206  003A80  EF44  F01D         	goto	u5440
  6207  003A84                     u5441:
  6208  003A84  EF6F  F01D         	goto	l4918
  6209  003A88                     u5440:
  6210  003A88  C00A  FFF6         	movff	strncmp@r,tblptrl
  6211  003A8C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6212  003A90                     	if	0	;tblptru may be non-zero
  6213  003A90                     	endif
  6214  003A90                     	if	0	;tblptru may be non-zero
  6215  003A90                     	endif
  6216  003A90  0008               	tblrd		*
  6217  003A92  50F5               	movf	tablat,w,c
  6218  003A94  0900               	iorlw	0
  6219  003A96  B4D8               	btfsc	status,2,c
  6220  003A98  EF50  F01D         	goto	u5451
  6221  003A9C  EF52  F01D         	goto	u5450
  6222  003AA0                     u5451:
  6223  003AA0  EF6F  F01D         	goto	l4918
  6224  003AA4                     u5450:
  6225  003AA4  5005               	movf	strncmp@n^0,w,c
  6226  003AA6  1006               	iorwf	(strncmp@n+1)^0,w,c
  6227  003AA8  B4D8               	btfsc	status,2,c
  6228  003AAA  EF59  F01D         	goto	u5461
  6229  003AAE  EF5B  F01D         	goto	u5460
  6230  003AB2                     u5461:
  6231  003AB2  EF6F  F01D         	goto	l4918
  6232  003AB6                     u5460:
  6233  003AB6  C008  FFD9         	movff	strncmp@l,fsr2l
  6234  003ABA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  6235  003ABE  50DF               	movf	indf2,w,c
  6236  003AC0  6E07               	movwf	??_strncmp^0,c
  6237  003AC2  C00A  FFF6         	movff	strncmp@r,tblptrl
  6238  003AC6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6239  003ACA                     	if	0	;tblptru may be non-zero
  6240  003ACA                     	endif
  6241  003ACA                     	if	0	;tblptru may be non-zero
  6242  003ACA                     	endif
  6243  003ACA  0008               	tblrd		*
  6244  003ACC  50F5               	movf	tablat,w,c
  6245  003ACE  1807               	xorwf	??_strncmp^0,w,c
  6246  003AD0  B4D8               	btfsc	status,2,c
  6247  003AD2  EF6D  F01D         	goto	u5471
  6248  003AD6  EF6F  F01D         	goto	u5470
  6249  003ADA                     u5471:
  6250  003ADA  EF31  F01D         	goto	l4908
  6251  003ADE                     u5470:
  6252  003ADE                     l4918:
  6253  003ADE  C008  FFD9         	movff	strncmp@l,fsr2l
  6254  003AE2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  6255  003AE6  50DF               	movf	indf2,w,c
  6256  003AE8  6E07               	movwf	??_strncmp^0,c
  6257  003AEA  C00A  FFF6         	movff	strncmp@r,tblptrl
  6258  003AEE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6259  003AF2                     	if	0	;tblptru may be non-zero
  6260  003AF2                     	endif
  6261  003AF2                     	if	0	;tblptru may be non-zero
  6262  003AF2                     	endif
  6263  003AF2  0008               	tblrd		*
  6264  003AF4  50F5               	movf	tablat,w,c
  6265  003AF6  5C07               	subwf	??_strncmp^0,w,c
  6266  003AF8  6E01               	movwf	?_strncmp^0,c
  6267  003AFA  6A02               	clrf	(?_strncmp+1)^0,c
  6268  003AFC  A0D8               	btfss	status,0,c
  6269  003AFE  0602               	decf	(?_strncmp+1)^0,f,c
  6270  003B00                     l1527:
  6271  003B00  0012               	return		;funcret
  6272  003B02                     __end_of_strncmp:
  6273                           	callstack 0
  6274                           
  6275 ;; *************** function _efgtoa *****************
  6276 ;; Defined at:
  6277 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6280 ;;		 -> sprintf@f(6), 
  6281 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  6282 ;;  c               1    6[BANK0 ] unsigned char 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  u               4   64[BANK0 ] unsigned char 
  6285 ;;  g               4   56[BANK0 ] unsigned char 
  6286 ;;  l               4   50[BANK0 ] unsigned char 
  6287 ;;  h               4   46[BANK0 ] unsigned char 
  6288 ;;  ou              4   32[BANK0 ] unsigned char 
  6289 ;;  n               2   62[BANK0 ] int 
  6290 ;;  e               2   60[BANK0 ] int 
  6291 ;;  i               2   54[BANK0 ] int 
  6292 ;;  w               2   42[BANK0 ] int 
  6293 ;;  p               2   40[BANK0 ] int 
  6294 ;;  sign            2   38[BANK0 ] int 
  6295 ;;  d               2   36[BANK0 ] int 
  6296 ;;  m               2   30[BANK0 ] int 
  6297 ;;  ne              2   28[BANK0 ] int 
  6298 ;;  pp              2   26[BANK0 ] int 
  6299 ;;  t               2   24[BANK0 ] int 
  6300 ;;  mode            1   45[BANK0 ] unsigned char 
  6301 ;;  nmode           1   44[BANK0 ] unsigned char 
  6302 ;; Return value:  Size  Location     Type
  6303 ;;                  2    0[BANK0 ] int 
  6304 ;; Registers used:
  6305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6306 ;; Tracked objects:
  6307 ;;		On entry : 0/0
  6308 ;;		On exit  : 0/0
  6309 ;;		Unchanged: 0/0
  6310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6311 ;;      Params:         0       7       0       0       0       0       0       0       0
  6312 ;;      Locals:         0      56       0       0       0       0       0       0       0
  6313 ;;      Temps:          0       5       0       0       0       0       0       0       0
  6314 ;;      Totals:         0      68       0       0       0       0       0       0       0
  6315 ;;Total ram usage:       68 bytes
  6316 ;; Hardware stack levels used: 1
  6317 ;; Hardware stack levels required when called: 4
  6318 ;; This function calls:
  6319 ;;		___awdiv
  6320 ;;		___awmod
  6321 ;;		___fladd
  6322 ;;		___fldiv
  6323 ;;		___fleq
  6324 ;;		___flge
  6325 ;;		___flmul
  6326 ;;		___flneg
  6327 ;;		___flsub
  6328 ;;		___fltol
  6329 ;;		___fpclassifyf
  6330 ;;		_floorf
  6331 ;;		_isupper
  6332 ;;		_pad
  6333 ;;		_strcpy
  6334 ;;		_tolower
  6335 ;; This function is called by:
  6336 ;;		_vfpfcnvrt
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           	psect	text33
  6341  00084A                     __ptext33:
  6342                           	callstack 0
  6343  00084A                     _efgtoa:
  6344                           	callstack 22
  6345  00084A                     
  6346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  6347  00084A  0E00               	movlw	0
  6348  00084C  0100               	movlb	0	; () banked
  6349  00084E  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  6350  000850  0E00               	movlw	0
  6351  000852  6F86               	movwf	efgtoa@sign& (0+255),b
  6352  000854                     
  6353                           ; BSR set to: 0
  6354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  6355  000854  C062  F098         	movff	efgtoa@f,efgtoa@g
  6356  000858  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  6357  00085C  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  6358  000860  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  6359  000864                     
  6360                           ; BSR set to: 0
  6361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  6362  000864  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6363  000866  EF39  F004         	goto	u4650
  6364  00086A  EF37  F004         	goto	u4651
  6365  00086E                     u4651:
  6366  00086E  EF4F  F004         	goto	l4496
  6367  000872                     u4650:
  6368  000872                     
  6369                           ; BSR set to: 0
  6370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  6371  000872  0E00               	movlw	0
  6372  000874  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  6373  000876  0E01               	movlw	1
  6374  000878  6F86               	movwf	efgtoa@sign& (0+255),b
  6375  00087A                     
  6376                           ; BSR set to: 0
  6377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  6378  00087A  C098  F001         	movff	efgtoa@g,___flneg@f1
  6379  00087E  C099  F002         	movff	efgtoa@g+1,___flneg@f1+1
  6380  000882  C09A  F003         	movff	efgtoa@g+2,___flneg@f1+2
  6381  000886  C09B  F004         	movff	efgtoa@g+3,___flneg@f1+3
  6382  00088A  ECE2  F023         	call	___flneg	;wreg free
  6383  00088E  C001  F098         	movff	?___flneg,efgtoa@g
  6384  000892  C002  F099         	movff	?___flneg+1,efgtoa@g+1
  6385  000896  C003  F09A         	movff	?___flneg+2,efgtoa@g+2
  6386  00089A  C004  F09B         	movff	?___flneg+3,efgtoa@g+3
  6387  00089E                     l4496:
  6388                           
  6389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  6390  00089E  0E00               	movlw	0
  6391  0008A0  0100               	movlb	0	; () banked
  6392  0008A2  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  6393  0008A4  0E00               	movlw	0
  6394  0008A6  6F9E               	movwf	efgtoa@n& (0+255),b
  6395  0008A8                     
  6396                           ; BSR set to: 0
  6397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  6398  0008A8  C0F4  F08A         	movff	_width,efgtoa@w
  6399  0008AC  C0F5  F08B         	movff	_width+1,efgtoa@w+1
  6400  0008B0                     
  6401                           ; BSR set to: 0
  6402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  6403  0008B0  5186               	movf	efgtoa@sign& (0+255),w,b
  6404  0008B2  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6405  0008B4  A4D8               	btfss	status,2,c
  6406  0008B6  EF5F  F004         	goto	u4661
  6407  0008BA  EF61  F004         	goto	u4660
  6408  0008BE                     u4661:
  6409  0008BE  EF68  F004         	goto	l4504
  6410  0008C2                     u4660:
  6411  0008C2                     
  6412                           ; BSR set to: 0
  6413  0008C2  A5F8               	btfss	_flags& (0+255),2,b
  6414  0008C4  EF66  F004         	goto	u4671
  6415  0008C8  EF68  F004         	goto	u4670
  6416  0008CC                     u4671:
  6417  0008CC  EF82  F004         	goto	l4516
  6418  0008D0                     u4670:
  6419  0008D0                     l4504:
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  6423  0008D0  5186               	movf	efgtoa@sign& (0+255),w,b
  6424  0008D2  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6425  0008D4  A4D8               	btfss	status,2,c
  6426  0008D6  EF6F  F004         	goto	u4681
  6427  0008DA  EF71  F004         	goto	u4680
  6428  0008DE                     u4681:
  6429  0008DE  EF77  F004         	goto	l4508
  6430  0008E2                     u4680:
  6431  0008E2                     
  6432                           ; BSR set to: 0
  6433  0008E2  0E00               	movlw	0
  6434  0008E4  6F6D               	movwf	(_efgtoa$1449+1)& (0+255),b
  6435  0008E6  0E2B               	movlw	43
  6436  0008E8  6F6C               	movwf	_efgtoa$1449& (0+255),b
  6437  0008EA  EF7B  F004         	goto	l4510
  6438  0008EE                     l4508:
  6439                           
  6440                           ; BSR set to: 0
  6441  0008EE  0E00               	movlw	0
  6442  0008F0  6F6D               	movwf	(_efgtoa$1449+1)& (0+255),b
  6443  0008F2  0E2D               	movlw	45
  6444  0008F4  6F6C               	movwf	_efgtoa$1449& (0+255),b
  6445  0008F6                     l4510:
  6446                           
  6447                           ; BSR set to: 0
  6448  0008F6  C06C  F10E         	movff	_efgtoa$1449,_dbuf
  6449  0008FA                     
  6450                           ; BSR set to: 0
  6451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  6452  0008FA  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  6453  0008FC  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  6454  0008FE                     
  6455                           ; BSR set to: 0
  6456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  6457  0008FE  078A               	decf	efgtoa@w& (0+255),f,b
  6458  000900  A0D8               	btfss	status,0,c
  6459  000902  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6460  000904                     l4516:
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6464  000904  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  6465  000908  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6466  00090C  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6467  000910  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6468  000914  EC97  F01C         	call	___fpclassifyf	;wreg free
  6469  000918  0401               	decf	?___fpclassifyf^0,w,c
  6470  00091A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6471  00091C  A4D8               	btfss	status,2,c
  6472  00091E  EF93  F004         	goto	u4691
  6473  000922  EF95  F004         	goto	u4690
  6474  000926                     u4691:
  6475  000926  EFEC  F004         	goto	l4534
  6476  00092A                     u4690:
  6477  00092A  0EBF               	movlw	191
  6478  00092C  0100               	movlb	0	; () banked
  6479  00092E  6F67               	movwf	??_efgtoa& (0+255),b
  6480  000930  0EFF               	movlw	255
  6481  000932  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6482  000934  5166               	movf	efgtoa@c& (0+255),w,b
  6483  000936  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  6484  000938  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  6485  00093A  5167               	movf	??_efgtoa& (0+255),w,b
  6486  00093C  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6487  00093E  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6488  000940  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6489  000942  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6490  000944  E10A               	bnz	u4700
  6491  000946  0E1A               	movlw	26
  6492  000948  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6493  00094A  A0D8               	btfss	status,0,c
  6494  00094C  EFAA  F004         	goto	u4701
  6495  000950  EFAD  F004         	goto	u4700
  6496  000954                     u4701:
  6497  000954  0E01               	movlw	1
  6498  000956  EFAE  F004         	goto	u4710
  6499  00095A                     u4700:
  6500  00095A  0E00               	movlw	0
  6501  00095C                     u4710:
  6502  00095C  6F6E               	movwf	_efgtoa$1450& (0+255),b
  6503  00095E  6B6F               	clrf	(_efgtoa$1450+1)& (0+255),b
  6504  000960                     
  6505                           ; BSR set to: 0
  6506  000960  516E               	movf	_efgtoa$1450& (0+255),w,b
  6507  000962  116F               	iorwf	(_efgtoa$1450+1)& (0+255),w,b
  6508  000964  B4D8               	btfsc	status,2,c
  6509  000966  EFB7  F004         	goto	u4721
  6510  00096A  EFB9  F004         	goto	u4720
  6511  00096E                     u4721:
  6512  00096E  EFC7  F004         	goto	l4526
  6513  000972                     u4720:
  6514  000972                     
  6515                           ; BSR set to: 0
  6516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  6517  000972  0E0E               	movlw	low _dbuf
  6518  000974  259E               	addwf	efgtoa@n& (0+255),w,b
  6519  000976  6E01               	movwf	strcpy@dest^0,c
  6520  000978  0E01               	movlw	high _dbuf
  6521  00097A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6522  00097C  6E02               	movwf	(strcpy@dest+1)^0,c
  6523  00097E  0E08               	movlw	low STR_22
  6524  000980  6E03               	movwf	strcpy@src^0,c
  6525  000982  0E08               	movlw	high STR_22
  6526  000984  6E04               	movwf	(strcpy@src+1)^0,c
  6527  000986  EC23  F021         	call	_strcpy	;wreg free
  6528                           
  6529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  6530  00098A  EFD3  F004         	goto	l4528
  6531  00098E                     l4526:
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  6535  00098E  0E0E               	movlw	low _dbuf
  6536  000990  259E               	addwf	efgtoa@n& (0+255),w,b
  6537  000992  6E01               	movwf	strcpy@dest^0,c
  6538  000994  0E01               	movlw	high _dbuf
  6539  000996  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6540  000998  6E02               	movwf	(strcpy@dest+1)^0,c
  6541  00099A  0E10               	movlw	low STR_23
  6542  00099C  6E03               	movwf	strcpy@src^0,c
  6543  00099E  0E08               	movlw	high STR_23
  6544  0009A0  6E04               	movwf	(strcpy@src+1)^0,c
  6545  0009A2  EC23  F021         	call	_strcpy	;wreg free
  6546  0009A6                     l4528:
  6547                           
  6548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6549  0009A6  0100               	movlb	0	; () banked
  6550  0009A8  0EFD               	movlw	253
  6551  0009AA  278A               	addwf	efgtoa@w& (0+255),f,b
  6552  0009AC  0EFF               	movlw	255
  6553  0009AE  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6554  0009B0                     l4530:
  6555                           
  6556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6557  0009B0  C060  F011         	movff	efgtoa@fp,pad@fp
  6558  0009B4  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  6559  0009B8  0E0E               	movlw	low _dbuf
  6560  0009BA  6E13               	movwf	pad@buf^0,c
  6561  0009BC  0E01               	movlw	high _dbuf
  6562  0009BE  6E14               	movwf	(pad@buf+1)^0,c
  6563  0009C0  C08A  F015         	movff	efgtoa@w,pad@p
  6564  0009C4  C08B  F016         	movff	efgtoa@w+1,pad@p+1
  6565  0009C8  ECE6  F01D         	call	_pad	;wreg free
  6566  0009CC  C011  F060         	movff	?_pad,?_efgtoa
  6567  0009D0  C012  F061         	movff	?_pad+1,?_efgtoa+1
  6568  0009D4  EF50  F00A         	goto	l1256
  6569  0009D8                     l4534:
  6570                           
  6571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6572  0009D8  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  6573  0009DC  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6574  0009E0  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6575  0009E4  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6576  0009E8  EC97  F01C         	call	___fpclassifyf	;wreg free
  6577  0009EC  5001               	movf	?___fpclassifyf^0,w,c
  6578  0009EE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6579  0009F0  A4D8               	btfss	status,2,c
  6580  0009F2  EFFD  F004         	goto	u4731
  6581  0009F6  EFFF  F004         	goto	u4730
  6582  0009FA                     u4731:
  6583  0009FA  EF3F  F005         	goto	l4552
  6584  0009FE                     u4730:
  6585  0009FE  0EBF               	movlw	191
  6586  000A00  0100               	movlb	0	; () banked
  6587  000A02  6F67               	movwf	??_efgtoa& (0+255),b
  6588  000A04  0EFF               	movlw	255
  6589  000A06  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6590  000A08  5166               	movf	efgtoa@c& (0+255),w,b
  6591  000A0A  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  6592  000A0C  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  6593  000A0E  5167               	movf	??_efgtoa& (0+255),w,b
  6594  000A10  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6595  000A12  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6596  000A14  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6597  000A16  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6598  000A18  E10A               	bnz	u4740
  6599  000A1A  0E1A               	movlw	26
  6600  000A1C  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6601  000A1E  A0D8               	btfss	status,0,c
  6602  000A20  EF14  F005         	goto	u4741
  6603  000A24  EF17  F005         	goto	u4740
  6604  000A28                     u4741:
  6605  000A28  0E01               	movlw	1
  6606  000A2A  EF18  F005         	goto	u4750
  6607  000A2E                     u4740:
  6608  000A2E  0E00               	movlw	0
  6609  000A30                     u4750:
  6610  000A30  6F70               	movwf	_efgtoa$1455& (0+255),b
  6611  000A32  6B71               	clrf	(_efgtoa$1455+1)& (0+255),b
  6612  000A34                     
  6613                           ; BSR set to: 0
  6614  000A34  5170               	movf	_efgtoa$1455& (0+255),w,b
  6615  000A36  1171               	iorwf	(_efgtoa$1455+1)& (0+255),w,b
  6616  000A38  B4D8               	btfsc	status,2,c
  6617  000A3A  EF21  F005         	goto	u4761
  6618  000A3E  EF23  F005         	goto	u4760
  6619  000A42                     u4761:
  6620  000A42  EF31  F005         	goto	l4544
  6621  000A46                     u4760:
  6622  000A46                     
  6623                           ; BSR set to: 0
  6624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  6625  000A46  0E0E               	movlw	low _dbuf
  6626  000A48  259E               	addwf	efgtoa@n& (0+255),w,b
  6627  000A4A  6E01               	movwf	strcpy@dest^0,c
  6628  000A4C  0E01               	movlw	high _dbuf
  6629  000A4E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6630  000A50  6E02               	movwf	(strcpy@dest+1)^0,c
  6631  000A52  0E0C               	movlw	low STR_26
  6632  000A54  6E03               	movwf	strcpy@src^0,c
  6633  000A56  0E08               	movlw	high STR_26
  6634  000A58  6E04               	movwf	(strcpy@src+1)^0,c
  6635  000A5A  EC23  F021         	call	_strcpy	;wreg free
  6636                           
  6637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  6638  000A5E  EFD3  F004         	goto	l4528
  6639  000A62                     l4544:
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  6643  000A62  0E0E               	movlw	low _dbuf
  6644  000A64  259E               	addwf	efgtoa@n& (0+255),w,b
  6645  000A66  6E01               	movwf	strcpy@dest^0,c
  6646  000A68  0E01               	movlw	high _dbuf
  6647  000A6A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6648  000A6C  6E02               	movwf	(strcpy@dest+1)^0,c
  6649  000A6E  0E14               	movlw	low STR_27
  6650  000A70  6E03               	movwf	strcpy@src^0,c
  6651  000A72  0E08               	movlw	high STR_27
  6652  000A74  6E04               	movwf	(strcpy@src+1)^0,c
  6653  000A76  EC23  F021         	call	_strcpy	;wreg free
  6654  000A7A  EFD3  F004         	goto	l4528
  6655  000A7E                     l4552:
  6656                           
  6657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  6658  000A7E  0E00               	movlw	0
  6659  000A80  0100               	movlb	0	; () banked
  6660  000A82  6FA0               	movwf	efgtoa@u& (0+255),b
  6661  000A84  0E00               	movlw	0
  6662  000A86  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  6663  000A88  0E80               	movlw	128
  6664  000A8A  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  6665  000A8C  0E3F               	movlw	63
  6666  000A8E  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  6667                           
  6668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  6669  000A90  0E00               	movlw	0
  6670  000A92  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  6671  000A94  0E00               	movlw	0
  6672  000A96  6F9C               	movwf	efgtoa@e& (0+255),b
  6673  000A98                     
  6674                           ; BSR set to: 0
  6675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  6676  000A98  C098  F001         	movff	efgtoa@g,___fleq@ff1
  6677  000A9C  C099  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  6678  000AA0  C09A  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  6679  000AA4  C09B  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  6680  000AA8  0E00               	movlw	0
  6681  000AAA  6E05               	movwf	___fleq@ff2^0,c
  6682  000AAC  0E00               	movlw	0
  6683  000AAE  6E06               	movwf	(___fleq@ff2+1)^0,c
  6684  000AB0  0E00               	movlw	0
  6685  000AB2  6E07               	movwf	(___fleq@ff2+2)^0,c
  6686  000AB4  0E00               	movlw	0
  6687  000AB6  6E08               	movwf	(___fleq@ff2+3)^0,c
  6688  000AB8  EC65  F01F         	call	___fleq	;wreg free
  6689  000ABC  B0D8               	btfsc	status,0,c
  6690  000ABE  EF63  F005         	goto	u4771
  6691  000AC2  EF65  F005         	goto	u4770
  6692  000AC6                     u4771:
  6693  000AC6  EFE8  F005         	goto	l4570
  6694  000ACA                     u4770:
  6695  000ACA  EF84  F005         	goto	l4562
  6696  000ACE                     l4558:
  6697                           
  6698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  6699  000ACE  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6700  000AD2  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6701  000AD6  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6702  000ADA  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6703  000ADE  0E00               	movlw	0
  6704  000AE0  6E17               	movwf	___flmul@a^0,c
  6705  000AE2  0E00               	movlw	0
  6706  000AE4  6E18               	movwf	(___flmul@a+1)^0,c
  6707  000AE6  0E20               	movlw	32
  6708  000AE8  6E19               	movwf	(___flmul@a+2)^0,c
  6709  000AEA  0E41               	movlw	65
  6710  000AEC  6E1A               	movwf	(___flmul@a+3)^0,c
  6711  000AEE  ECB8  F00F         	call	___flmul	;wreg free
  6712  000AF2  C013  F0A0         	movff	?___flmul,efgtoa@u
  6713  000AF6  C014  F0A1         	movff	?___flmul+1,efgtoa@u+1
  6714  000AFA  C015  F0A2         	movff	?___flmul+2,efgtoa@u+2
  6715  000AFE  C016  F0A3         	movff	?___flmul+3,efgtoa@u+3
  6716  000B02                     
  6717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  6718  000B02  0100               	movlb	0	; () banked
  6719  000B04  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  6720  000B06  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  6721  000B08                     l4562:
  6722                           
  6723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  6724  000B08  C098  F02C         	movff	efgtoa@g,___flge@ff1
  6725  000B0C  C099  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  6726  000B10  C09A  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  6727  000B14  C09B  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  6728  000B18  0E00               	movlw	0
  6729  000B1A  6E17               	movwf	___flmul@a^0,c
  6730  000B1C  0E00               	movlw	0
  6731  000B1E  6E18               	movwf	(___flmul@a+1)^0,c
  6732  000B20  0E20               	movlw	32
  6733  000B22  6E19               	movwf	(___flmul@a+2)^0,c
  6734  000B24  0E41               	movlw	65
  6735  000B26  6E1A               	movwf	(___flmul@a+3)^0,c
  6736  000B28  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6737  000B2C  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6738  000B30  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6739  000B34  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6740  000B38  ECB8  F00F         	call	___flmul	;wreg free
  6741  000B3C  C013  F030         	movff	?___flmul,___flge@ff2
  6742  000B40  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  6743  000B44  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  6744  000B48  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  6745  000B4C  EC96  F01B         	call	___flge	;wreg free
  6746  000B50  B0D8               	btfsc	status,0,c
  6747  000B52  EFAD  F005         	goto	u4781
  6748  000B56  EFAF  F005         	goto	u4780
  6749  000B5A                     u4781:
  6750  000B5A  EF67  F005         	goto	l4558
  6751  000B5E                     u4780:
  6752  000B5E  EFCF  F005         	goto	l4568
  6753  000B62                     l4564:
  6754                           
  6755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  6756  000B62  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  6757  000B66  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  6758  000B6A  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  6759  000B6E  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  6760  000B72  0E00               	movlw	0
  6761  000B74  6E30               	movwf	___fldiv@a^0,c
  6762  000B76  0E00               	movlw	0
  6763  000B78  6E31               	movwf	(___fldiv@a+1)^0,c
  6764  000B7A  0E20               	movlw	32
  6765  000B7C  6E32               	movwf	(___fldiv@a+2)^0,c
  6766  000B7E  0E41               	movlw	65
  6767  000B80  6E33               	movwf	(___fldiv@a+3)^0,c
  6768  000B82  ECCD  F011         	call	___fldiv	;wreg free
  6769  000B86  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  6770  000B8A  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  6771  000B8E  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  6772  000B92  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  6773  000B96                     
  6774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  6775  000B96  0100               	movlb	0	; () banked
  6776  000B98  079C               	decf	efgtoa@e& (0+255),f,b
  6777  000B9A  A0D8               	btfss	status,0,c
  6778  000B9C  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  6779  000B9E                     l4568:
  6780                           
  6781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  6782  000B9E  C098  F02C         	movff	efgtoa@g,___flge@ff1
  6783  000BA2  C099  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  6784  000BA6  C09A  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  6785  000BAA  C09B  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  6786  000BAE  C0A0  F030         	movff	efgtoa@u,___flge@ff2
  6787  000BB2  C0A1  F031         	movff	efgtoa@u+1,___flge@ff2+1
  6788  000BB6  C0A2  F032         	movff	efgtoa@u+2,___flge@ff2+2
  6789  000BBA  C0A3  F033         	movff	efgtoa@u+3,___flge@ff2+3
  6790  000BBE  EC96  F01B         	call	___flge	;wreg free
  6791  000BC2  A0D8               	btfss	status,0,c
  6792  000BC4  EFE6  F005         	goto	u4791
  6793  000BC8  EFE8  F005         	goto	u4790
  6794  000BCC                     u4791:
  6795  000BCC  EFB1  F005         	goto	l4564
  6796  000BD0                     u4790:
  6797  000BD0                     l4570:
  6798                           
  6799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  6800  000BD0  C066  F007         	movff	efgtoa@c,tolower@c
  6801  000BD4  6A08               	clrf	(tolower@c+1)^0,c
  6802  000BD6  EC66  F020         	call	_tolower	;wreg free
  6803  000BDA  5007               	movf	?_tolower^0,w,c
  6804  000BDC  0100               	movlb	0	; () banked
  6805  000BDE  6F8D               	movwf	efgtoa@mode& (0+255),b
  6806  000BE0                     
  6807                           ; BSR set to: 0
  6808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  6809  000BE0  C08D  F08C         	movff	efgtoa@mode,efgtoa@nmode
  6810  000BE4                     
  6811                           ; BSR set to: 0
  6812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  6813  000BE4  0E67               	movlw	103
  6814  000BE6  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6815  000BE8  A4D8               	btfss	status,2,c
  6816  000BEA  EFF9  F005         	goto	u4801
  6817  000BEE  EFFB  F005         	goto	u4800
  6818  000BF2                     u4801:
  6819  000BF2  EF21  F006         	goto	l4584
  6820  000BF6                     u4800:
  6821  000BF6                     
  6822                           ; BSR set to: 0
  6823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  6824  000BF6  51F6               	movf	_prec& (0+255),w,b
  6825  000BF8  11F7               	iorwf	(_prec+1)& (0+255),w,b
  6826  000BFA  A4D8               	btfss	status,2,c
  6827  000BFC  EF02  F006         	goto	u4811
  6828  000C00  EF04  F006         	goto	u4810
  6829  000C04                     u4811:
  6830  000C04  EF08  F006         	goto	l4580
  6831  000C08                     u4810:
  6832  000C08                     
  6833                           ; BSR set to: 0
  6834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  6835  000C08  0E00               	movlw	0
  6836  000C0A  6FF7               	movwf	(_prec+1)& (0+255),b
  6837  000C0C  0E01               	movlw	1
  6838  000C0E  6FF6               	movwf	_prec& (0+255),b
  6839  000C10                     l4580:
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  6843  000C10  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6844  000C12  EF15  F006         	goto	u4820
  6845  000C16  51F7               	movf	(_prec+1)& (0+255),w,b
  6846  000C18  E106               	bnz	u4821
  6847  000C1A  05F6               	decf	_prec& (0+255),w,b
  6848  000C1C  B0D8               	btfsc	status,0,c
  6849  000C1E  EF13  F006         	goto	u4821
  6850  000C22  EF15  F006         	goto	u4820
  6851  000C26                     u4821:
  6852  000C26  EF1B  F006         	goto	l1274
  6853  000C2A                     u4820:
  6854  000C2A                     l4582:
  6855                           
  6856                           ; BSR set to: 0
  6857  000C2A  0E00               	movlw	0
  6858  000C2C  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  6859  000C2E  0E06               	movlw	6
  6860  000C30  6F88               	movwf	efgtoa@p& (0+255),b
  6861  000C32  EF2A  F006         	goto	l4590
  6862  000C36                     l1274:
  6863                           
  6864                           ; BSR set to: 0
  6865  000C36  C0F6  F088         	movff	_prec,efgtoa@p
  6866  000C3A  C0F7  F089         	movff	_prec+1,efgtoa@p+1
  6867  000C3E  EF2A  F006         	goto	l4590
  6868  000C42                     l4584:
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  6872  000C42  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6873  000C44  EF26  F006         	goto	u4831
  6874  000C48  EF28  F006         	goto	u4830
  6875  000C4C                     u4831:
  6876  000C4C  EF15  F006         	goto	l4582
  6877  000C50                     u4830:
  6878  000C50  EF1B  F006         	goto	l1274
  6879  000C54                     l4590:
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  6883  000C54  0E67               	movlw	103
  6884  000C56  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6885  000C58  A4D8               	btfss	status,2,c
  6886  000C5A  EF31  F006         	goto	u4841
  6887  000C5E  EF33  F006         	goto	u4840
  6888  000C62                     u4841:
  6889  000C62  EF62  F006         	goto	l4600
  6890  000C66                     u4840:
  6891  000C66                     
  6892                           ; BSR set to: 0
  6893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  6894  000C66  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  6895  000C68  EF41  F006         	goto	u4850
  6896  000C6C  0EFC               	movlw	252
  6897  000C6E  5D9C               	subwf	efgtoa@e& (0+255),w,b
  6898  000C70  0EFF               	movlw	255
  6899  000C72  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6900  000C74  A0D8               	btfss	status,0,c
  6901  000C76  EF3F  F006         	goto	u4851
  6902  000C7A  EF41  F006         	goto	u4850
  6903  000C7E                     u4851:
  6904  000C7E  EF60  F006         	goto	l4598
  6905  000C82                     u4850:
  6906  000C82                     
  6907                           ; BSR set to: 0
  6908  000C82  0EFF               	movlw	255
  6909  000C84  6F67               	movwf	??_efgtoa& (0+255),b
  6910  000C86  0EFF               	movlw	255
  6911  000C88  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6912  000C8A  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  6913  000C8E  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  6914  000C92  5167               	movf	??_efgtoa& (0+255),w,b
  6915  000C94  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6916  000C96  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6917  000C98  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6918  000C9A  519C               	movf	efgtoa@e& (0+255),w,b
  6919  000C9C  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6920  000C9E  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6921  000CA0  0A80               	xorlw	128
  6922  000CA2  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  6923  000CA4  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  6924  000CA6  0A80               	xorlw	128
  6925  000CA8  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6926  000CAA  A0D8               	btfss	status,0,c
  6927  000CAC  EF5A  F006         	goto	u4861
  6928  000CB0  EF5C  F006         	goto	u4860
  6929  000CB4                     u4861:
  6930  000CB4  EF60  F006         	goto	l4598
  6931  000CB8                     u4860:
  6932  000CB8                     
  6933                           ; BSR set to: 0
  6934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  6935  000CB8  0E66               	movlw	102
  6936  000CBA  6F8C               	movwf	efgtoa@nmode& (0+255),b
  6937                           
  6938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  6939  000CBC  EF62  F006         	goto	l4600
  6940  000CC0                     l4598:
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  6944  000CC0  0E65               	movlw	101
  6945  000CC2  6F8C               	movwf	efgtoa@nmode& (0+255),b
  6946  000CC4                     l4600:
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  6950  000CC4  C088  F07E         	movff	efgtoa@p,efgtoa@m
  6951  000CC8  C089  F07F         	movff	efgtoa@p+1,efgtoa@m+1
  6952  000CCC                     
  6953                           ; BSR set to: 0
  6954                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  6955  000CCC  0E67               	movlw	103
  6956  000CCE  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6957  000CD0  A4D8               	btfss	status,2,c
  6958  000CD2  EF6D  F006         	goto	u4871
  6959  000CD6  EF6F  F006         	goto	u4870
  6960  000CDA                     u4871:
  6961  000CDA  EF7F  F006         	goto	l4608
  6962  000CDE                     u4870:
  6963  000CDE                     
  6964                           ; BSR set to: 0
  6965  000CDE  0E66               	movlw	102
  6966  000CE0  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6967  000CE2  A4D8               	btfss	status,2,c
  6968  000CE4  EF76  F006         	goto	u4881
  6969  000CE8  EF78  F006         	goto	u4880
  6970  000CEC                     u4881:
  6971  000CEC  EF81  F006         	goto	l4610
  6972  000CF0                     u4880:
  6973  000CF0                     
  6974                           ; BSR set to: 0
  6975  000CF0  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6976  000CF2  EF7F  F006         	goto	u4890
  6977  000CF6  EF7D  F006         	goto	u4891
  6978  000CFA                     u4891:
  6979  000CFA  EF81  F006         	goto	l4610
  6980  000CFE                     u4890:
  6981  000CFE                     l4608:
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  6985  000CFE  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  6986  000D00  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  6987  000D02                     l4610:
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  6991  000D02  0E66               	movlw	102
  6992  000D04  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6993  000D06  A4D8               	btfss	status,2,c
  6994  000D08  EF88  F006         	goto	u4901
  6995  000D0C  EF8A  F006         	goto	u4900
  6996  000D10                     u4901:
  6997  000D10  EFAA  F006         	goto	l4620
  6998  000D14                     u4900:
  6999  000D14                     
  7000                           ; BSR set to: 0
  7001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  7002  000D14  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7003  000D16  EF91  F006         	goto	u4910
  7004  000D1A  EF8F  F006         	goto	u4911
  7005  000D1E                     u4911:
  7006  000D1E  EF9D  F006         	goto	l4616
  7007  000D22                     u4910:
  7008  000D22                     
  7009                           ; BSR set to: 0
  7010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  7011  000D22  0E00               	movlw	0
  7012  000D24  6FA0               	movwf	efgtoa@u& (0+255),b
  7013  000D26  0E00               	movlw	0
  7014  000D28  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  7015  000D2A  0E80               	movlw	128
  7016  000D2C  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  7017  000D2E  0E3F               	movlw	63
  7018  000D30  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  7019                           
  7020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  7021  000D32  0E00               	movlw	0
  7022  000D34  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  7023  000D36  0E00               	movlw	0
  7024  000D38  6F9C               	movwf	efgtoa@e& (0+255),b
  7025  000D3A                     l4616:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  7029  000D3A  0E67               	movlw	103
  7030  000D3C  198D               	xorwf	efgtoa@mode& (0+255),w,b
  7031  000D3E  B4D8               	btfsc	status,2,c
  7032  000D40  EFA4  F006         	goto	u4921
  7033  000D44  EFA6  F006         	goto	u4920
  7034  000D48                     u4921:
  7035  000D48  EFAA  F006         	goto	l4620
  7036  000D4C                     u4920:
  7037  000D4C                     
  7038                           ; BSR set to: 0
  7039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  7040  000D4C  519C               	movf	efgtoa@e& (0+255),w,b
  7041  000D4E  277E               	addwf	efgtoa@m& (0+255),f,b
  7042  000D50  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  7043  000D52  237F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7044  000D54                     l4620:
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  7048  000D54  0E00               	movlw	0
  7049  000D56  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7050  000D58  0E00               	movlw	0
  7051  000D5A  6F96               	movwf	efgtoa@i& (0+255),b
  7052  000D5C                     
  7053                           ; BSR set to: 0
  7054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  7055  000D5C  C098  F08E         	movff	efgtoa@g,efgtoa@h
  7056  000D60  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  7057  000D64  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  7058  000D68  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  7059  000D6C                     
  7060                           ; BSR set to: 0
  7061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  7062  000D6C  C0A0  F080         	movff	efgtoa@u,efgtoa@ou
  7063  000D70  C0A1  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  7064  000D74  C0A2  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  7065  000D78  C0A3  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  7066                           
  7067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  7068  000D7C  EF3B  F007         	goto	l4634
  7069  000D80                     l4626:
  7070                           
  7071                           ; BSR set to: 0
  7072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  7073  000D80  C08E  F02C         	movff	efgtoa@h,___fldiv@b
  7074  000D84  C08F  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  7075  000D88  C090  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  7076  000D8C  C091  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  7077  000D90  C0A0  F030         	movff	efgtoa@u,___fldiv@a
  7078  000D94  C0A1  F031         	movff	efgtoa@u+1,___fldiv@a+1
  7079  000D98  C0A2  F032         	movff	efgtoa@u+2,___fldiv@a+2
  7080  000D9C  C0A3  F033         	movff	efgtoa@u+3,___fldiv@a+3
  7081  000DA0  ECCD  F011         	call	___fldiv	;wreg free
  7082  000DA4  C02C  F045         	movff	?___fldiv,floorf@x
  7083  000DA8  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  7084  000DAC  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  7085  000DB0  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  7086  000DB4  ECBC  F017         	call	_floorf	;wreg free
  7087  000DB8  C045  F092         	movff	?_floorf,efgtoa@l
  7088  000DBC  C046  F093         	movff	?_floorf+1,efgtoa@l+1
  7089  000DC0  C047  F094         	movff	?_floorf+2,efgtoa@l+2
  7090  000DC4  C048  F095         	movff	?_floorf+3,efgtoa@l+3
  7091                           
  7092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  7093  000DC8  C092  F055         	movff	efgtoa@l,___fltol@f1
  7094  000DCC  C093  F056         	movff	efgtoa@l+1,___fltol@f1+1
  7095  000DD0  C094  F057         	movff	efgtoa@l+2,___fltol@f1+2
  7096  000DD4  C095  F058         	movff	efgtoa@l+3,___fltol@f1+3
  7097  000DD8  EC13  F01B         	call	___fltol	;wreg free
  7098  000DDC  C055  F084         	movff	?___fltol,efgtoa@d
  7099  000DE0  C056  F085         	movff	?___fltol+1,efgtoa@d+1
  7100  000DE4                     
  7101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  7102  000DE4  C08E  F055         	movff	efgtoa@h,___flsub@b
  7103  000DE8  C08F  F056         	movff	efgtoa@h+1,___flsub@b+1
  7104  000DEC  C090  F057         	movff	efgtoa@h+2,___flsub@b+2
  7105  000DF0  C091  F058         	movff	efgtoa@h+3,___flsub@b+3
  7106  000DF4  C0A0  F017         	movff	efgtoa@u,___flmul@a
  7107  000DF8  C0A1  F018         	movff	efgtoa@u+1,___flmul@a+1
  7108  000DFC  C0A2  F019         	movff	efgtoa@u+2,___flmul@a+2
  7109  000E00  C0A3  F01A         	movff	efgtoa@u+3,___flmul@a+3
  7110  000E04  C092  F013         	movff	efgtoa@l,___flmul@b
  7111  000E08  C093  F014         	movff	efgtoa@l+1,___flmul@b+1
  7112  000E0C  C094  F015         	movff	efgtoa@l+2,___flmul@b+2
  7113  000E10  C095  F016         	movff	efgtoa@l+3,___flmul@b+3
  7114  000E14  ECB8  F00F         	call	___flmul	;wreg free
  7115  000E18  C013  F059         	movff	?___flmul,___flsub@a
  7116  000E1C  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  7117  000E20  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  7118  000E24  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  7119  000E28  EC0A  F023         	call	___flsub	;wreg free
  7120  000E2C  C055  F08E         	movff	?___flsub,efgtoa@h
  7121  000E30  C056  F08F         	movff	?___flsub+1,efgtoa@h+1
  7122  000E34  C057  F090         	movff	?___flsub+2,efgtoa@h+2
  7123  000E38  C058  F091         	movff	?___flsub+3,efgtoa@h+3
  7124  000E3C                     
  7125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  7126  000E3C  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  7127  000E40  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  7128  000E44  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  7129  000E48  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  7130  000E4C  0E00               	movlw	0
  7131  000E4E  6E30               	movwf	___fldiv@a^0,c
  7132  000E50  0E00               	movlw	0
  7133  000E52  6E31               	movwf	(___fldiv@a+1)^0,c
  7134  000E54  0E20               	movlw	32
  7135  000E56  6E32               	movwf	(___fldiv@a+2)^0,c
  7136  000E58  0E41               	movlw	65
  7137  000E5A  6E33               	movwf	(___fldiv@a+3)^0,c
  7138  000E5C  ECCD  F011         	call	___fldiv	;wreg free
  7139  000E60  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  7140  000E64  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  7141  000E68  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  7142  000E6C  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  7143  000E70                     
  7144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  7145  000E70  0100               	movlb	0	; () banked
  7146  000E72  4B96               	infsnz	efgtoa@i& (0+255),f,b
  7147  000E74  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  7148  000E76                     l4634:
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  7152  000E76  517E               	movf	efgtoa@m& (0+255),w,b
  7153  000E78  5D96               	subwf	efgtoa@i& (0+255),w,b
  7154  000E7A  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7155  000E7C  0A80               	xorlw	128
  7156  000E7E  6F67               	movwf	??_efgtoa& (0+255),b
  7157  000E80  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  7158  000E82  0A80               	xorlw	128
  7159  000E84  5967               	subwfb	??_efgtoa& (0+255),w,b
  7160  000E86  A0D8               	btfss	status,0,c
  7161  000E88  EF48  F007         	goto	u4931
  7162  000E8C  EF4A  F007         	goto	u4930
  7163  000E90                     u4931:
  7164  000E90  EFC0  F006         	goto	l4626
  7165  000E94                     u4930:
  7166  000E94                     
  7167                           ; BSR set to: 0
  7168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  7169  000E94  C0A0  F013         	movff	efgtoa@u,___flmul@b
  7170  000E98  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  7171  000E9C  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  7172  000EA0  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  7173  000EA4  0E00               	movlw	0
  7174  000EA6  6E17               	movwf	___flmul@a^0,c
  7175  000EA8  0E00               	movlw	0
  7176  000EAA  6E18               	movwf	(___flmul@a+1)^0,c
  7177  000EAC  0EA0               	movlw	160
  7178  000EAE  6E19               	movwf	(___flmul@a+2)^0,c
  7179  000EB0  0E40               	movlw	64
  7180  000EB2  6E1A               	movwf	(___flmul@a+3)^0,c
  7181  000EB4  ECB8  F00F         	call	___flmul	;wreg free
  7182  000EB8  C013  F092         	movff	?___flmul,efgtoa@l
  7183  000EBC  C014  F093         	movff	?___flmul+1,efgtoa@l+1
  7184  000EC0  C015  F094         	movff	?___flmul+2,efgtoa@l+2
  7185  000EC4  C016  F095         	movff	?___flmul+3,efgtoa@l+3
  7186  000EC8                     
  7187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  7188  000EC8  C08E  F02C         	movff	efgtoa@h,___flge@ff1
  7189  000ECC  C08F  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  7190  000ED0  C090  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  7191  000ED4  C091  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  7192  000ED8  C092  F030         	movff	efgtoa@l,___flge@ff2
  7193  000EDC  C093  F031         	movff	efgtoa@l+1,___flge@ff2+1
  7194  000EE0  C094  F032         	movff	efgtoa@l+2,___flge@ff2+2
  7195  000EE4  C095  F033         	movff	efgtoa@l+3,___flge@ff2+3
  7196  000EE8  EC96  F01B         	call	___flge	;wreg free
  7197  000EEC  B0D8               	btfsc	status,0,c
  7198  000EEE  EF7B  F007         	goto	u4941
  7199  000EF2  EF7D  F007         	goto	u4940
  7200  000EF6                     u4941:
  7201  000EF6  EF88  F007         	goto	l4642
  7202  000EFA                     u4940:
  7203  000EFA                     
  7204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  7205  000EFA  0E00               	movlw	0
  7206  000EFC  0100               	movlb	0	; () banked
  7207  000EFE  6F92               	movwf	efgtoa@l& (0+255),b
  7208  000F00  0E00               	movlw	0
  7209  000F02  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  7210  000F04  0E00               	movlw	0
  7211  000F06  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  7212  000F08  0E00               	movlw	0
  7213  000F0A  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  7214                           
  7215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  7216  000F0C  EFB1  F007         	goto	l4648
  7217  000F10                     l4642:
  7218                           
  7219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  7220  000F10  C08E  F001         	movff	efgtoa@h,___fleq@ff1
  7221  000F14  C08F  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  7222  000F18  C090  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  7223  000F1C  C091  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  7224  000F20  C092  F005         	movff	efgtoa@l,___fleq@ff2
  7225  000F24  C093  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  7226  000F28  C094  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  7227  000F2C  C095  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  7228  000F30  EC65  F01F         	call	___fleq	;wreg free
  7229  000F34  A0D8               	btfss	status,0,c
  7230  000F36  EF9F  F007         	goto	u4951
  7231  000F3A  EFA1  F007         	goto	u4950
  7232  000F3E                     u4951:
  7233  000F3E  EFB1  F007         	goto	l4648
  7234  000F42                     u4950:
  7235  000F42  0100               	movlb	0	; () banked
  7236  000F44  B184               	btfsc	efgtoa@d& (0+255),0,b
  7237  000F46  EFA7  F007         	goto	u4961
  7238  000F4A  EFA9  F007         	goto	u4960
  7239  000F4E                     u4961:
  7240  000F4E  EFB1  F007         	goto	l4648
  7241  000F52                     u4960:
  7242  000F52                     
  7243                           ; BSR set to: 0
  7244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  7245  000F52  0E00               	movlw	0
  7246  000F54  6F92               	movwf	efgtoa@l& (0+255),b
  7247  000F56  0E00               	movlw	0
  7248  000F58  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  7249  000F5A  0E00               	movlw	0
  7250  000F5C  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  7251  000F5E  0E00               	movlw	0
  7252  000F60  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  7253  000F62                     l4648:
  7254                           
  7255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  7256  000F62  C098  F045         	movff	efgtoa@g,___fladd@b
  7257  000F66  C099  F046         	movff	efgtoa@g+1,___fladd@b+1
  7258  000F6A  C09A  F047         	movff	efgtoa@g+2,___fladd@b+2
  7259  000F6E  C09B  F048         	movff	efgtoa@g+3,___fladd@b+3
  7260  000F72  C092  F049         	movff	efgtoa@l,___fladd@a
  7261  000F76  C093  F04A         	movff	efgtoa@l+1,___fladd@a+1
  7262  000F7A  C094  F04B         	movff	efgtoa@l+2,___fladd@a+2
  7263  000F7E  C095  F04C         	movff	efgtoa@l+3,___fladd@a+3
  7264  000F82  EC58  F00D         	call	___fladd	;wreg free
  7265  000F86  C045  F08E         	movff	?___fladd,efgtoa@h
  7266  000F8A  C046  F08F         	movff	?___fladd+1,efgtoa@h+1
  7267  000F8E  C047  F090         	movff	?___fladd+2,efgtoa@h+2
  7268  000F92  C048  F091         	movff	?___fladd+3,efgtoa@h+3
  7269  000F96                     
  7270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  7271  000F96  C08E  F02C         	movff	efgtoa@h,___flge@ff1
  7272  000F9A  C08F  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  7273  000F9E  C090  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  7274  000FA2  C091  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  7275  000FA6  0E00               	movlw	0
  7276  000FA8  6E17               	movwf	___flmul@a^0,c
  7277  000FAA  0E00               	movlw	0
  7278  000FAC  6E18               	movwf	(___flmul@a+1)^0,c
  7279  000FAE  0E20               	movlw	32
  7280  000FB0  6E19               	movwf	(___flmul@a+2)^0,c
  7281  000FB2  0E41               	movlw	65
  7282  000FB4  6E1A               	movwf	(___flmul@a+3)^0,c
  7283  000FB6  C080  F013         	movff	efgtoa@ou,___flmul@b
  7284  000FBA  C081  F014         	movff	efgtoa@ou+1,___flmul@b+1
  7285  000FBE  C082  F015         	movff	efgtoa@ou+2,___flmul@b+2
  7286  000FC2  C083  F016         	movff	efgtoa@ou+3,___flmul@b+3
  7287  000FC6  ECB8  F00F         	call	___flmul	;wreg free
  7288  000FCA  C013  F030         	movff	?___flmul,___flge@ff2
  7289  000FCE  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  7290  000FD2  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  7291  000FD6  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  7292  000FDA  EC96  F01B         	call	___flge	;wreg free
  7293  000FDE  A0D8               	btfss	status,0,c
  7294  000FE0  EFF4  F007         	goto	u4971
  7295  000FE4  EFF6  F007         	goto	u4970
  7296  000FE8                     u4971:
  7297  000FE8  EF1F  F008         	goto	l4660
  7298  000FEC                     u4970:
  7299  000FEC                     
  7300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  7301  000FEC  0100               	movlb	0	; () banked
  7302  000FEE  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  7303  000FF0  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7304  000FF2                     
  7305                           ; BSR set to: 0
  7306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  7307  000FF2  C080  F013         	movff	efgtoa@ou,___flmul@b
  7308  000FF6  C081  F014         	movff	efgtoa@ou+1,___flmul@b+1
  7309  000FFA  C082  F015         	movff	efgtoa@ou+2,___flmul@b+2
  7310  000FFE  C083  F016         	movff	efgtoa@ou+3,___flmul@b+3
  7311  001002  0E00               	movlw	0
  7312  001004  6E17               	movwf	___flmul@a^0,c
  7313  001006  0E00               	movlw	0
  7314  001008  6E18               	movwf	(___flmul@a+1)^0,c
  7315  00100A  0E20               	movlw	32
  7316  00100C  6E19               	movwf	(___flmul@a+2)^0,c
  7317  00100E  0E41               	movlw	65
  7318  001010  6E1A               	movwf	(___flmul@a+3)^0,c
  7319  001012  ECB8  F00F         	call	___flmul	;wreg free
  7320  001016  C013  F080         	movff	?___flmul,efgtoa@ou
  7321  00101A  C014  F081         	movff	?___flmul+1,efgtoa@ou+1
  7322  00101E  C015  F082         	movff	?___flmul+2,efgtoa@ou+2
  7323  001022  C016  F083         	movff	?___flmul+3,efgtoa@ou+3
  7324  001026                     
  7325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  7326  001026  0E66               	movlw	102
  7327  001028  0100               	movlb	0	; () banked
  7328  00102A  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7329  00102C  A4D8               	btfss	status,2,c
  7330  00102E  EF1B  F008         	goto	u4981
  7331  001032  EF1D  F008         	goto	u4980
  7332  001036                     u4981:
  7333  001036  EF1F  F008         	goto	l4660
  7334  00103A                     u4980:
  7335  00103A                     
  7336                           ; BSR set to: 0
  7337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  7338  00103A  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  7339  00103C  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  7340  00103E                     l4660:
  7341                           
  7342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  7343  00103E  C080  F0A0         	movff	efgtoa@ou,efgtoa@u
  7344  001042  C081  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  7345  001046  C082  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  7346  00104A  C083  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  7347  00104E                     
  7348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  7349  00104E  0E65               	movlw	101
  7350  001050  0100               	movlb	0	; () banked
  7351  001052  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7352  001054  B4D8               	btfsc	status,2,c
  7353  001056  EF2F  F008         	goto	u4991
  7354  00105A  EF31  F008         	goto	u4990
  7355  00105E                     u4991:
  7356  00105E  EF37  F008         	goto	l4666
  7357  001062                     u4990:
  7358  001062                     
  7359                           ; BSR set to: 0
  7360  001062  C09C  F07C         	movff	efgtoa@e,efgtoa@ne
  7361  001066  C09D  F07D         	movff	efgtoa@e+1,efgtoa@ne+1
  7362  00106A  EF3B  F008         	goto	l1302
  7363  00106E                     l4666:
  7364                           
  7365                           ; BSR set to: 0
  7366  00106E  0E00               	movlw	0
  7367  001070  6F7D               	movwf	(efgtoa@ne+1)& (0+255),b
  7368  001072  0E00               	movlw	0
  7369  001074  6F7C               	movwf	efgtoa@ne& (0+255),b
  7370  001076                     l1302:
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  7374  001076  0E00               	movlw	0
  7375  001078  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  7376  00107A  0E00               	movlw	0
  7377  00107C  6F7A               	movwf	efgtoa@pp& (0+255),b
  7378                           
  7379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  7380  00107E  0E00               	movlw	0
  7381  001080  6F79               	movwf	(efgtoa@t+1)& (0+255),b
  7382  001082  0E00               	movlw	0
  7383  001084  6F78               	movwf	efgtoa@t& (0+255),b
  7384                           
  7385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  7386  001086  0E00               	movlw	0
  7387  001088  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7388  00108A  0E00               	movlw	0
  7389  00108C  6F96               	movwf	efgtoa@i& (0+255),b
  7390                           
  7391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7392  00108E  EF36  F009         	goto	l4716
  7393  001092                     l4668:
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  7397  001092  C08E  F02C         	movff	efgtoa@h,___fldiv@b
  7398  001096  C08F  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  7399  00109A  C090  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  7400  00109E  C091  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  7401  0010A2  C0A0  F030         	movff	efgtoa@u,___fldiv@a
  7402  0010A6  C0A1  F031         	movff	efgtoa@u+1,___fldiv@a+1
  7403  0010AA  C0A2  F032         	movff	efgtoa@u+2,___fldiv@a+2
  7404  0010AE  C0A3  F033         	movff	efgtoa@u+3,___fldiv@a+3
  7405  0010B2  ECCD  F011         	call	___fldiv	;wreg free
  7406  0010B6  C02C  F045         	movff	?___fldiv,floorf@x
  7407  0010BA  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  7408  0010BE  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  7409  0010C2  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  7410  0010C6  ECBC  F017         	call	_floorf	;wreg free
  7411  0010CA  C045  F092         	movff	?_floorf,efgtoa@l
  7412  0010CE  C046  F093         	movff	?_floorf+1,efgtoa@l+1
  7413  0010D2  C047  F094         	movff	?_floorf+2,efgtoa@l+2
  7414  0010D6  C048  F095         	movff	?_floorf+3,efgtoa@l+3
  7415                           
  7416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  7417  0010DA  C092  F055         	movff	efgtoa@l,___fltol@f1
  7418  0010DE  C093  F056         	movff	efgtoa@l+1,___fltol@f1+1
  7419  0010E2  C094  F057         	movff	efgtoa@l+2,___fltol@f1+2
  7420  0010E6  C095  F058         	movff	efgtoa@l+3,___fltol@f1+3
  7421  0010EA  EC13  F01B         	call	___fltol	;wreg free
  7422  0010EE  C055  F084         	movff	?___fltol,efgtoa@d
  7423  0010F2  C056  F085         	movff	?___fltol+1,efgtoa@d+1
  7424  0010F6                     
  7425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7426  0010F6  0100               	movlb	0	; () banked
  7427  0010F8  B9F8               	btfsc	_flags& (0+255),4,b
  7428  0010FA  EF81  F008         	goto	u5001
  7429  0010FE  EF83  F008         	goto	u5000
  7430  001102                     u5001:
  7431  001102  EFA0  F008         	goto	l4680
  7432  001106                     u5000:
  7433  001106                     
  7434                           ; BSR set to: 0
  7435  001106  5184               	movf	efgtoa@d& (0+255),w,b
  7436  001108  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7437  00110A  A4D8               	btfss	status,2,c
  7438  00110C  EF8A  F008         	goto	u5011
  7439  001110  EF8C  F008         	goto	u5010
  7440  001114                     u5011:
  7441  001114  EFA0  F008         	goto	l4680
  7442  001118                     u5010:
  7443  001118                     
  7444                           ; BSR set to: 0
  7445  001118  0E67               	movlw	103
  7446  00111A  198D               	xorwf	efgtoa@mode& (0+255),w,b
  7447  00111C  A4D8               	btfss	status,2,c
  7448  00111E  EF93  F008         	goto	u5021
  7449  001122  EF95  F008         	goto	u5020
  7450  001126                     u5021:
  7451  001126  EFA0  F008         	goto	l4680
  7452  00112A                     u5020:
  7453  00112A                     
  7454                           ; BSR set to: 0
  7455  00112A  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7456  00112C  EF9C  F008         	goto	u5030
  7457  001130  EF9A  F008         	goto	u5031
  7458  001134                     u5031:
  7459  001134  EFA0  F008         	goto	l4680
  7460  001138                     u5030:
  7461  001138                     
  7462                           ; BSR set to: 0
  7463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  7464  001138  4B78               	infsnz	efgtoa@t& (0+255),f,b
  7465  00113A  2B79               	incf	(efgtoa@t+1)& (0+255),f,b
  7466                           
  7467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  7468  00113C  EFEA  F008         	goto	l4708
  7469  001140                     l4680:
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  7473  001140  517A               	movf	efgtoa@pp& (0+255),w,b
  7474  001142  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7475  001144  A4D8               	btfss	status,2,c
  7476  001146  EFA7  F008         	goto	u5041
  7477  00114A  EFA9  F008         	goto	u5040
  7478  00114E                     u5041:
  7479  00114E  EFD3  F008         	goto	l4700
  7480  001152                     u5040:
  7481  001152                     
  7482                           ; BSR set to: 0
  7483  001152  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7484  001154  EFB0  F008         	goto	u5050
  7485  001158  EFAE  F008         	goto	u5051
  7486  00115C                     u5051:
  7487  00115C  EFD3  F008         	goto	l4700
  7488  001160                     u5050:
  7489  001160                     
  7490                           ; BSR set to: 0
  7491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  7492  001160  0E0E               	movlw	low _dbuf
  7493  001162  259E               	addwf	efgtoa@n& (0+255),w,b
  7494  001164  6ED9               	movwf	fsr2l,c
  7495  001166  0E01               	movlw	high _dbuf
  7496  001168  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7497  00116A  6EDA               	movwf	fsr2h,c
  7498  00116C  0E2E               	movlw	46
  7499  00116E  6EDF               	movwf	indf2,c
  7500  001170                     
  7501                           ; BSR set to: 0
  7502  001170  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7503  001172  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7504  001174                     
  7505                           ; BSR set to: 0
  7506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  7507  001174  078A               	decf	efgtoa@w& (0+255),f,b
  7508  001176  A0D8               	btfss	status,0,c
  7509  001178  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7510  00117A                     
  7511                           ; BSR set to: 0
  7512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  7513  00117A  0E00               	movlw	0
  7514  00117C  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  7515  00117E  0E01               	movlw	1
  7516  001180  6F7A               	movwf	efgtoa@pp& (0+255),b
  7517  001182  EFD3  F008         	goto	l4700
  7518  001186                     l4692:
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  7522  001186  0E0E               	movlw	low _dbuf
  7523  001188  259E               	addwf	efgtoa@n& (0+255),w,b
  7524  00118A  6ED9               	movwf	fsr2l,c
  7525  00118C  0E01               	movlw	high _dbuf
  7526  00118E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7527  001190  6EDA               	movwf	fsr2h,c
  7528  001192  0E30               	movlw	48
  7529  001194  6EDF               	movwf	indf2,c
  7530  001196                     
  7531                           ; BSR set to: 0
  7532  001196  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7533  001198  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7534  00119A                     
  7535                           ; BSR set to: 0
  7536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  7537  00119A  078A               	decf	efgtoa@w& (0+255),f,b
  7538  00119C  A0D8               	btfss	status,0,c
  7539  00119E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7540  0011A0                     
  7541                           ; BSR set to: 0
  7542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  7543  0011A0  0778               	decf	efgtoa@t& (0+255),f,b
  7544  0011A2  A0D8               	btfss	status,0,c
  7545  0011A4  0779               	decf	(efgtoa@t+1)& (0+255),f,b
  7546  0011A6                     l4700:
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  7550  0011A6  5178               	movf	efgtoa@t& (0+255),w,b
  7551  0011A8  1179               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7552  0011AA  A4D8               	btfss	status,2,c
  7553  0011AC  EFDA  F008         	goto	u5061
  7554  0011B0  EFDC  F008         	goto	u5060
  7555  0011B4                     u5061:
  7556  0011B4  EFC3  F008         	goto	l4692
  7557  0011B8                     u5060:
  7558  0011B8                     
  7559                           ; BSR set to: 0
  7560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7561  0011B8  0E0E               	movlw	low _dbuf
  7562  0011BA  259E               	addwf	efgtoa@n& (0+255),w,b
  7563  0011BC  6ED9               	movwf	fsr2l,c
  7564  0011BE  0E01               	movlw	high _dbuf
  7565  0011C0  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7566  0011C2  6EDA               	movwf	fsr2h,c
  7567  0011C4  5184               	movf	efgtoa@d& (0+255),w,b
  7568  0011C6  0F30               	addlw	48
  7569  0011C8  6EDF               	movwf	indf2,c
  7570  0011CA                     
  7571                           ; BSR set to: 0
  7572  0011CA  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7573  0011CC  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7574  0011CE                     
  7575                           ; BSR set to: 0
  7576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  7577  0011CE  078A               	decf	efgtoa@w& (0+255),f,b
  7578  0011D0  A0D8               	btfss	status,0,c
  7579  0011D2  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7580  0011D4                     l4708:
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  7584  0011D4  C08E  F055         	movff	efgtoa@h,___flsub@b
  7585  0011D8  C08F  F056         	movff	efgtoa@h+1,___flsub@b+1
  7586  0011DC  C090  F057         	movff	efgtoa@h+2,___flsub@b+2
  7587  0011E0  C091  F058         	movff	efgtoa@h+3,___flsub@b+3
  7588  0011E4  C0A0  F017         	movff	efgtoa@u,___flmul@a
  7589  0011E8  C0A1  F018         	movff	efgtoa@u+1,___flmul@a+1
  7590  0011EC  C0A2  F019         	movff	efgtoa@u+2,___flmul@a+2
  7591  0011F0  C0A3  F01A         	movff	efgtoa@u+3,___flmul@a+3
  7592  0011F4  C092  F013         	movff	efgtoa@l,___flmul@b
  7593  0011F8  C093  F014         	movff	efgtoa@l+1,___flmul@b+1
  7594  0011FC  C094  F015         	movff	efgtoa@l+2,___flmul@b+2
  7595  001200  C095  F016         	movff	efgtoa@l+3,___flmul@b+3
  7596  001204  ECB8  F00F         	call	___flmul	;wreg free
  7597  001208  C013  F059         	movff	?___flmul,___flsub@a
  7598  00120C  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  7599  001210  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  7600  001214  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  7601  001218  EC0A  F023         	call	___flsub	;wreg free
  7602  00121C  C055  F08E         	movff	?___flsub,efgtoa@h
  7603  001220  C056  F08F         	movff	?___flsub+1,efgtoa@h+1
  7604  001224  C057  F090         	movff	?___flsub+2,efgtoa@h+2
  7605  001228  C058  F091         	movff	?___flsub+3,efgtoa@h+3
  7606  00122C                     
  7607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  7608  00122C  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  7609  001230  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  7610  001234  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  7611  001238  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  7612  00123C  0E00               	movlw	0
  7613  00123E  6E30               	movwf	___fldiv@a^0,c
  7614  001240  0E00               	movlw	0
  7615  001242  6E31               	movwf	(___fldiv@a+1)^0,c
  7616  001244  0E20               	movlw	32
  7617  001246  6E32               	movwf	(___fldiv@a+2)^0,c
  7618  001248  0E41               	movlw	65
  7619  00124A  6E33               	movwf	(___fldiv@a+3)^0,c
  7620  00124C  ECCD  F011         	call	___fldiv	;wreg free
  7621  001250  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  7622  001254  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  7623  001258  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  7624  00125C  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  7625  001260                     
  7626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  7627  001260  0100               	movlb	0	; () banked
  7628  001262  077C               	decf	efgtoa@ne& (0+255),f,b
  7629  001264  A0D8               	btfss	status,0,c
  7630  001266  077D               	decf	(efgtoa@ne+1)& (0+255),f,b
  7631  001268                     
  7632                           ; BSR set to: 0
  7633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  7634  001268  4B96               	infsnz	efgtoa@i& (0+255),f,b
  7635  00126A  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  7636  00126C                     l4716:
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7640  00126C  517E               	movf	efgtoa@m& (0+255),w,b
  7641  00126E  5D96               	subwf	efgtoa@i& (0+255),w,b
  7642  001270  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7643  001272  0A80               	xorlw	128
  7644  001274  6F67               	movwf	??_efgtoa& (0+255),b
  7645  001276  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  7646  001278  0A80               	xorlw	128
  7647  00127A  5967               	subwfb	??_efgtoa& (0+255),w,b
  7648  00127C  B0D8               	btfsc	status,0,c
  7649  00127E  EF43  F009         	goto	u5071
  7650  001282  EF45  F009         	goto	u5070
  7651  001286                     u5071:
  7652  001286  EF53  F009         	goto	l4720
  7653  00128A                     u5070:
  7654  00128A                     
  7655                           ; BSR set to: 0
  7656  00128A  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7657  00128C  EF51  F009         	goto	u5081
  7658  001290  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  7659  001292  E109               	bnz	u5080
  7660  001294  0E4B               	movlw	75
  7661  001296  5D9E               	subwf	efgtoa@n& (0+255),w,b
  7662  001298  A0D8               	btfss	status,0,c
  7663  00129A  EF51  F009         	goto	u5081
  7664  00129E  EF53  F009         	goto	u5080
  7665  0012A2                     u5081:
  7666  0012A2  EF49  F008         	goto	l4668
  7667  0012A6                     u5080:
  7668  0012A6                     l4720:
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7672  0012A6  517A               	movf	efgtoa@pp& (0+255),w,b
  7673  0012A8  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7674  0012AA  A4D8               	btfss	status,2,c
  7675  0012AC  EF5A  F009         	goto	u5091
  7676  0012B0  EF5C  F009         	goto	u5090
  7677  0012B4                     u5091:
  7678  0012B4  EF6D  F009         	goto	l4728
  7679  0012B8                     u5090:
  7680  0012B8                     
  7681                           ; BSR set to: 0
  7682  0012B8  A9F8               	btfss	_flags& (0+255),4,b
  7683  0012BA  EF61  F009         	goto	u5101
  7684  0012BE  EF63  F009         	goto	u5100
  7685  0012C2                     u5101:
  7686  0012C2  EF6D  F009         	goto	l4728
  7687  0012C6                     u5100:
  7688  0012C6                     
  7689                           ; BSR set to: 0
  7690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  7691  0012C6  0E0E               	movlw	low _dbuf
  7692  0012C8  259E               	addwf	efgtoa@n& (0+255),w,b
  7693  0012CA  6ED9               	movwf	fsr2l,c
  7694  0012CC  0E01               	movlw	high _dbuf
  7695  0012CE  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7696  0012D0  6EDA               	movwf	fsr2h,c
  7697  0012D2  0E2E               	movlw	46
  7698  0012D4  6EDF               	movwf	indf2,c
  7699  0012D6                     
  7700                           ; BSR set to: 0
  7701  0012D6  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7702  0012D8  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7703  0012DA                     l4728:
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  7707  0012DA  0E0E               	movlw	low _dbuf
  7708  0012DC  259E               	addwf	efgtoa@n& (0+255),w,b
  7709  0012DE  6ED9               	movwf	fsr2l,c
  7710  0012E0  0E01               	movlw	high _dbuf
  7711  0012E2  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7712  0012E4  6EDA               	movwf	fsr2h,c
  7713  0012E6  0E00               	movlw	0
  7714  0012E8  6EDF               	movwf	indf2,c
  7715  0012EA                     
  7716                           ; BSR set to: 0
  7717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  7718  0012EA  0E65               	movlw	101
  7719  0012EC  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7720  0012EE  A4D8               	btfss	status,2,c
  7721  0012F0  EF7C  F009         	goto	u5111
  7722  0012F4  EF7E  F009         	goto	u5110
  7723  0012F8                     u5111:
  7724  0012F8  EFD8  F004         	goto	l4530
  7725  0012FC                     u5110:
  7726  0012FC                     
  7727                           ; BSR set to: 0
  7728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  7729  0012FC  0E00               	movlw	0
  7730  0012FE  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7731  001300  0E4F               	movlw	79
  7732  001302  6F96               	movwf	efgtoa@i& (0+255),b
  7733  001304                     
  7734                           ; BSR set to: 0
  7735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  7736  001304  0E0E               	movlw	low _dbuf
  7737  001306  2596               	addwf	efgtoa@i& (0+255),w,b
  7738  001308  6ED9               	movwf	fsr2l,c
  7739  00130A  0E01               	movlw	high _dbuf
  7740  00130C  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7741  00130E  6EDA               	movwf	fsr2h,c
  7742  001310  0E00               	movlw	0
  7743  001312  6EDF               	movwf	indf2,c
  7744  001314                     
  7745                           ; BSR set to: 0
  7746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  7747  001314  0E00               	movlw	0
  7748  001316  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  7749  001318  0E00               	movlw	0
  7750  00131A  6F86               	movwf	efgtoa@sign& (0+255),b
  7751  00131C                     
  7752                           ; BSR set to: 0
  7753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  7754  00131C  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7755  00131E  EF95  F009         	goto	u5120
  7756  001322  EF93  F009         	goto	u5121
  7757  001326                     u5121:
  7758  001326  EF9D  F009         	goto	l4744
  7759  00132A                     u5120:
  7760  00132A                     
  7761                           ; BSR set to: 0
  7762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  7763  00132A  0E00               	movlw	0
  7764  00132C  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  7765  00132E  0E01               	movlw	1
  7766  001330  6F86               	movwf	efgtoa@sign& (0+255),b
  7767  001332                     
  7768                           ; BSR set to: 0
  7769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  7770  001332  6D9C               	negf	efgtoa@e& (0+255),b
  7771  001334  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  7772  001336  B0D8               	btfsc	status,0,c
  7773  001338  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7774  00133A                     l4744:
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  7778  00133A  0E00               	movlw	0
  7779  00133C  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  7780  00133E  0E02               	movlw	2
  7781  001340  6F88               	movwf	efgtoa@p& (0+255),b
  7782                           
  7783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7784  001342  EFCE  F009         	goto	l4756
  7785  001346                     l4746:
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  7789  001346  0796               	decf	efgtoa@i& (0+255),f,b
  7790  001348  A0D8               	btfss	status,0,c
  7791  00134A  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7792  00134C                     
  7793                           ; BSR set to: 0
  7794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  7795  00134C  0E0E               	movlw	low _dbuf
  7796  00134E  2596               	addwf	efgtoa@i& (0+255),w,b
  7797  001350  6ED9               	movwf	fsr2l,c
  7798  001352  0E01               	movlw	high _dbuf
  7799  001354  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7800  001356  6EDA               	movwf	fsr2h,c
  7801  001358  C09C  F001         	movff	efgtoa@e,___awmod@dividend
  7802  00135C  C09D  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  7803  001360  0E00               	movlw	0
  7804  001362  6E04               	movwf	(___awmod@divisor+1)^0,c
  7805  001364  0E0A               	movlw	10
  7806  001366  6E03               	movwf	___awmod@divisor^0,c
  7807  001368  EC0D  F01F         	call	___awmod	;wreg free
  7808  00136C  5001               	movf	?___awmod^0,w,c
  7809  00136E  0F30               	addlw	48
  7810  001370  6EDF               	movwf	indf2,c
  7811  001372                     
  7812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  7813  001372  C09C  F001         	movff	efgtoa@e,___awdiv@dividend
  7814  001376  C09D  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  7815  00137A  0E00               	movlw	0
  7816  00137C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7817  00137E  0E0A               	movlw	10
  7818  001380  6E03               	movwf	___awdiv@divisor^0,c
  7819  001382  ECAB  F01E         	call	___awdiv	;wreg free
  7820  001386  C001  F09C         	movff	?___awdiv,efgtoa@e
  7821  00138A  C002  F09D         	movff	?___awdiv+1,efgtoa@e+1
  7822  00138E                     
  7823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  7824  00138E  0100               	movlb	0	; () banked
  7825  001390  0788               	decf	efgtoa@p& (0+255),f,b
  7826  001392  A0D8               	btfss	status,0,c
  7827  001394  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  7828  001396                     
  7829                           ; BSR set to: 0
  7830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  7831  001396  078A               	decf	efgtoa@w& (0+255),f,b
  7832  001398  A0D8               	btfss	status,0,c
  7833  00139A  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7834  00139C                     l4756:
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7838  00139C  519C               	movf	efgtoa@e& (0+255),w,b
  7839  00139E  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7840  0013A0  A4D8               	btfss	status,2,c
  7841  0013A2  EFD5  F009         	goto	u5131
  7842  0013A6  EFD7  F009         	goto	u5130
  7843  0013AA                     u5131:
  7844  0013AA  EFA3  F009         	goto	l4746
  7845  0013AE                     u5130:
  7846  0013AE                     
  7847                           ; BSR set to: 0
  7848  0013AE  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7849  0013B0  EFE4  F009         	goto	u5140
  7850  0013B4  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  7851  0013B6  E106               	bnz	u5141
  7852  0013B8  0588               	decf	efgtoa@p& (0+255),w,b
  7853  0013BA  B0D8               	btfsc	status,0,c
  7854  0013BC  EFE2  F009         	goto	u5141
  7855  0013C0  EFE4  F009         	goto	u5140
  7856  0013C4                     u5141:
  7857  0013C4  EFA3  F009         	goto	l4746
  7858  0013C8                     u5140:
  7859  0013C8                     
  7860                           ; BSR set to: 0
  7861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  7862  0013C8  0796               	decf	efgtoa@i& (0+255),f,b
  7863  0013CA  A0D8               	btfss	status,0,c
  7864  0013CC  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7865  0013CE                     
  7866                           ; BSR set to: 0
  7867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  7868  0013CE  5186               	movf	efgtoa@sign& (0+255),w,b
  7869  0013D0  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7870  0013D2  A4D8               	btfss	status,2,c
  7871  0013D4  EFEE  F009         	goto	u5151
  7872  0013D8  EFF0  F009         	goto	u5150
  7873  0013DC                     u5151:
  7874  0013DC  EFF6  F009         	goto	l4766
  7875  0013E0                     u5150:
  7876  0013E0                     
  7877                           ; BSR set to: 0
  7878  0013E0  0E00               	movlw	0
  7879  0013E2  6F73               	movwf	(_efgtoa$1459+1)& (0+255),b
  7880  0013E4  0E2B               	movlw	43
  7881  0013E6  6F72               	movwf	_efgtoa$1459& (0+255),b
  7882  0013E8  EFFA  F009         	goto	l4768
  7883  0013EC                     l4766:
  7884                           
  7885                           ; BSR set to: 0
  7886  0013EC  0E00               	movlw	0
  7887  0013EE  6F73               	movwf	(_efgtoa$1459+1)& (0+255),b
  7888  0013F0  0E2D               	movlw	45
  7889  0013F2  6F72               	movwf	_efgtoa$1459& (0+255),b
  7890  0013F4                     l4768:
  7891                           
  7892                           ; BSR set to: 0
  7893  0013F4  0E0E               	movlw	low _dbuf
  7894  0013F6  2596               	addwf	efgtoa@i& (0+255),w,b
  7895  0013F8  6ED9               	movwf	fsr2l,c
  7896  0013FA  0E01               	movlw	high _dbuf
  7897  0013FC  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7898  0013FE  6EDA               	movwf	fsr2h,c
  7899  001400  C072  FFDF         	movff	_efgtoa$1459,indf2
  7900  001404                     
  7901                           ; BSR set to: 0
  7902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  7903  001404  078A               	decf	efgtoa@w& (0+255),f,b
  7904  001406  A0D8               	btfss	status,0,c
  7905  001408  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7906  00140A                     
  7907                           ; BSR set to: 0
  7908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7909  00140A  0796               	decf	efgtoa@i& (0+255),f,b
  7910  00140C  A0D8               	btfss	status,0,c
  7911  00140E  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7912  001410                     
  7913                           ; BSR set to: 0
  7914  001410  0EBF               	movlw	191
  7915  001412  6F67               	movwf	??_efgtoa& (0+255),b
  7916  001414  0EFF               	movlw	255
  7917  001416  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  7918  001418  5166               	movf	efgtoa@c& (0+255),w,b
  7919  00141A  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  7920  00141C  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  7921  00141E  5167               	movf	??_efgtoa& (0+255),w,b
  7922  001420  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  7923  001422  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  7924  001424  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7925  001426  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  7926  001428  E10A               	bnz	u5160
  7927  00142A  0E1A               	movlw	26
  7928  00142C  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  7929  00142E  A0D8               	btfss	status,0,c
  7930  001430  EF1C  F00A         	goto	u5161
  7931  001434  EF1F  F00A         	goto	u5160
  7932  001438                     u5161:
  7933  001438  0E01               	movlw	1
  7934  00143A  EF20  F00A         	goto	u5170
  7935  00143E                     u5160:
  7936  00143E  0E00               	movlw	0
  7937  001440                     u5170:
  7938  001440  6F76               	movwf	_efgtoa$1461& (0+255),b
  7939  001442  6B77               	clrf	(_efgtoa$1461+1)& (0+255),b
  7940  001444                     
  7941                           ; BSR set to: 0
  7942  001444  5176               	movf	_efgtoa$1461& (0+255),w,b
  7943  001446  1177               	iorwf	(_efgtoa$1461+1)& (0+255),w,b
  7944  001448  A4D8               	btfss	status,2,c
  7945  00144A  EF29  F00A         	goto	u5181
  7946  00144E  EF2B  F00A         	goto	u5180
  7947  001452                     u5181:
  7948  001452  EF31  F00A         	goto	l4782
  7949  001456                     u5180:
  7950  001456                     
  7951                           ; BSR set to: 0
  7952  001456  0E00               	movlw	0
  7953  001458  6F75               	movwf	(_efgtoa$1460+1)& (0+255),b
  7954  00145A  0E65               	movlw	101
  7955  00145C  6F74               	movwf	_efgtoa$1460& (0+255),b
  7956  00145E  EF35  F00A         	goto	l4784
  7957  001462                     l4782:
  7958                           
  7959                           ; BSR set to: 0
  7960  001462  0E00               	movlw	0
  7961  001464  6F75               	movwf	(_efgtoa$1460+1)& (0+255),b
  7962  001466  0E45               	movlw	69
  7963  001468  6F74               	movwf	_efgtoa$1460& (0+255),b
  7964  00146A                     l4784:
  7965                           
  7966                           ; BSR set to: 0
  7967  00146A  0E0E               	movlw	low _dbuf
  7968  00146C  2596               	addwf	efgtoa@i& (0+255),w,b
  7969  00146E  6ED9               	movwf	fsr2l,c
  7970  001470  0E01               	movlw	high _dbuf
  7971  001472  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7972  001474  6EDA               	movwf	fsr2h,c
  7973  001476  C074  FFDF         	movff	_efgtoa$1460,indf2
  7974  00147A                     
  7975                           ; BSR set to: 0
  7976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  7977  00147A  078A               	decf	efgtoa@w& (0+255),f,b
  7978  00147C  A0D8               	btfss	status,0,c
  7979  00147E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7980  001480                     
  7981                           ; BSR set to: 0
  7982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  7983  001480  0E0E               	movlw	low _dbuf
  7984  001482  259E               	addwf	efgtoa@n& (0+255),w,b
  7985  001484  6E01               	movwf	strcpy@dest^0,c
  7986  001486  0E01               	movlw	high _dbuf
  7987  001488  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7988  00148A  6E02               	movwf	(strcpy@dest+1)^0,c
  7989  00148C  0E0E               	movlw	low _dbuf
  7990  00148E  2596               	addwf	efgtoa@i& (0+255),w,b
  7991  001490  6E03               	movwf	strcpy@src^0,c
  7992  001492  0E01               	movlw	high _dbuf
  7993  001494  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7994  001496  6E04               	movwf	(strcpy@src+1)^0,c
  7995  001498  EC23  F021         	call	_strcpy	;wreg free
  7996  00149C  EFD8  F004         	goto	l4530
  7997  0014A0                     l1256:
  7998  0014A0  0012               	return		;funcret
  7999  0014A2                     __end_of_efgtoa:
  8000                           	callstack 0
  8001                           
  8002 ;; *************** function _tolower *****************
  8003 ;; Defined at:
  8004 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;  c               2    6[COMRAM] int 
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;		None
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  2    6[COMRAM] int 
  8011 ;; Registers used:
  8012 ;;		wreg, status,2, status,0
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8018 ;;      Params:         2       0       0       0       0       0       0       0       0
  8019 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8020 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8021 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8022 ;;Total ram usage:        8 bytes
  8023 ;; Hardware stack levels used: 1
  8024 ;; Hardware stack levels required when called: 1
  8025 ;; This function calls:
  8026 ;;		_isupper
  8027 ;; This function is called by:
  8028 ;;		_efgtoa
  8029 ;;		_vfpfcnvrt
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text34
  8034  0040CC                     __ptext34:
  8035                           	callstack 0
  8036  0040CC                     _tolower:
  8037                           	callstack 25
  8038  0040CC  0EBF               	movlw	191
  8039  0040CE  6E09               	movwf	??_tolower^0,c
  8040  0040D0  0EFF               	movlw	255
  8041  0040D2  6E0A               	movwf	(??_tolower+1)^0,c
  8042  0040D4  C007  F00B         	movff	tolower@c,??_tolower+2
  8043  0040D8  C008  F00C         	movff	tolower@c+1,??_tolower+3
  8044  0040DC  5009               	movf	??_tolower^0,w,c
  8045  0040DE  260B               	addwf	(??_tolower+2)^0,f,c
  8046  0040E0  500A               	movf	(??_tolower+1)^0,w,c
  8047  0040E2  220C               	addwfc	(??_tolower+3)^0,f,c
  8048  0040E4  500C               	movf	(??_tolower+3)^0,w,c
  8049  0040E6  E10A               	bnz	u4400
  8050  0040E8  0E1A               	movlw	26
  8051  0040EA  5C0B               	subwf	(??_tolower+2)^0,w,c
  8052  0040EC  A0D8               	btfss	status,0,c
  8053  0040EE  EF7B  F020         	goto	u4401
  8054  0040F2  EF7E  F020         	goto	u4400
  8055  0040F6                     u4401:
  8056  0040F6  0E01               	movlw	1
  8057  0040F8  EF7F  F020         	goto	u4410
  8058  0040FC                     u4400:
  8059  0040FC  0E00               	movlw	0
  8060  0040FE                     u4410:
  8061  0040FE  6E0D               	movwf	_tolower$1629^0,c
  8062  004100  6A0E               	clrf	(_tolower$1629+1)^0,c
  8063  004102  500D               	movf	_tolower$1629^0,w,c
  8064  004104  100E               	iorwf	(_tolower$1629+1)^0,w,c
  8065  004106  B4D8               	btfsc	status,2,c
  8066  004108  EF88  F020         	goto	u4421
  8067  00410C  EF8A  F020         	goto	u4420
  8068  004110                     u4421:
  8069  004110  EF91  F020         	goto	l1537
  8070  004114                     u4420:
  8071  004114  0E20               	movlw	32
  8072  004116  1007               	iorwf	tolower@c^0,w,c
  8073  004118  6E07               	movwf	?_tolower^0,c
  8074  00411A  5008               	movf	(tolower@c+1)^0,w,c
  8075  00411C  6E08               	movwf	(?_tolower+1)^0,c
  8076  00411E  EF95  F020         	goto	l1542
  8077  004122                     l1537:
  8078  004122  C007  F007         	movff	tolower@c,?_tolower
  8079  004126  C008  F008         	movff	tolower@c+1,?_tolower+1
  8080  00412A                     l1542:
  8081  00412A  0012               	return		;funcret
  8082  00412C                     __end_of_tolower:
  8083                           	callstack 0
  8084                           
  8085 ;; *************** function _isupper *****************
  8086 ;; Defined at:
  8087 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;  c               2    0[COMRAM] int 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;		None
  8092 ;; Return value:  Size  Location     Type
  8093 ;;                  2    0[COMRAM] int 
  8094 ;; Registers used:
  8095 ;;		wreg, status,2, status,0
  8096 ;; Tracked objects:
  8097 ;;		On entry : 0/0
  8098 ;;		On exit  : 0/0
  8099 ;;		Unchanged: 0/0
  8100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8101 ;;      Params:         2       0       0       0       0       0       0       0       0
  8102 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8103 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8104 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8105 ;;Total ram usage:        6 bytes
  8106 ;; Hardware stack levels used: 1
  8107 ;; This function calls:
  8108 ;;		Nothing
  8109 ;; This function is called by:
  8110 ;;		_efgtoa
  8111 ;;		_xtoa
  8112 ;;		_vfpfcnvrt
  8113 ;;		_tolower
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text35
  8118  00478C                     __ptext35:
  8119                           	callstack 0
  8120  00478C                     _isupper:
  8121                           	callstack 25
  8122  00478C  0EBF               	movlw	191
  8123  00478E  6E03               	movwf	??_isupper^0,c
  8124  004790  0EFF               	movlw	255
  8125  004792  6E04               	movwf	(??_isupper+1)^0,c
  8126  004794  C001  F005         	movff	isupper@c,??_isupper+2
  8127  004798  C002  F006         	movff	isupper@c+1,??_isupper+3
  8128  00479C  5003               	movf	??_isupper^0,w,c
  8129  00479E  2605               	addwf	(??_isupper+2)^0,f,c
  8130  0047A0  5004               	movf	(??_isupper+1)^0,w,c
  8131  0047A2  2206               	addwfc	(??_isupper+3)^0,f,c
  8132  0047A4  5006               	movf	(??_isupper+3)^0,w,c
  8133  0047A6  E10A               	bnz	u3530
  8134  0047A8  0E1A               	movlw	26
  8135  0047AA  5C05               	subwf	(??_isupper+2)^0,w,c
  8136  0047AC  A0D8               	btfss	status,0,c
  8137  0047AE  EFDB  F023         	goto	u3531
  8138  0047B2  EFDE  F023         	goto	u3530
  8139  0047B6                     u3531:
  8140  0047B6  0E01               	movlw	1
  8141  0047B8  EFDF  F023         	goto	u3540
  8142  0047BC                     u3530:
  8143  0047BC  0E00               	movlw	0
  8144  0047BE                     u3540:
  8145  0047BE  6E01               	movwf	?_isupper^0,c
  8146  0047C0  6A02               	clrf	(?_isupper+1)^0,c
  8147  0047C2  0012               	return		;funcret
  8148  0047C4                     __end_of_isupper:
  8149                           	callstack 0
  8150                           
  8151 ;; *************** function _strcpy *****************
  8152 ;; Defined at:
  8153 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  dest            2    0[COMRAM] PTR unsigned char 
  8156 ;;		 -> dbuf(80), 
  8157 ;;  src             2    2[COMRAM] PTR const unsigned char 
  8158 ;;		 -> STR_27(4), STR_26(4), STR_23(4), STR_22(4), 
  8159 ;;		 -> dbuf(80), 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  d               2    8[COMRAM] PTR unsigned char 
  8162 ;;		 -> dbuf(80), 
  8163 ;;  s               2    6[COMRAM] PTR const unsigned char 
  8164 ;;		 -> STR_27(4), STR_26(4), STR_23(4), STR_22(4), 
  8165 ;;		 -> dbuf(80), 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  2    0[COMRAM] PTR unsigned char 
  8168 ;; Registers used:
  8169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8175 ;;      Params:         4       0       0       0       0       0       0       0       0
  8176 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8177 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8178 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8179 ;;Total ram usage:       10 bytes
  8180 ;; Hardware stack levels used: 1
  8181 ;; This function calls:
  8182 ;;		Nothing
  8183 ;; This function is called by:
  8184 ;;		_efgtoa
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text36
  8189  004246                     __ptext36:
  8190                           	callstack 0
  8191  004246                     _strcpy:
  8192                           	callstack 25
  8193  004246  C003  F007         	movff	strcpy@src,strcpy@s
  8194  00424A  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  8195  00424E  C001  F009         	movff	strcpy@dest,strcpy@d
  8196  004252  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  8197  004256                     l4398:
  8198  004256  5007               	movf	strcpy@s^0,w,c
  8199  004258  6E05               	movwf	??_strcpy^0,c
  8200  00425A  5008               	movf	(strcpy@s+1)^0,w,c
  8201  00425C  6E06               	movwf	(??_strcpy+1)^0,c
  8202  00425E  4A07               	infsnz	strcpy@s^0,f,c
  8203  004260  2A08               	incf	(strcpy@s+1)^0,f,c
  8204  004262  C005  FFF6         	movff	??_strcpy,tblptrl
  8205  004266  C006  FFF7         	movff	??_strcpy+1,tblptrh
  8206  00426A  6AF8               	clrf	tblptru,c
  8207  00426C  C009  FFD9         	movff	strcpy@d,fsr2l
  8208  004270  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  8209  004274  4A09               	infsnz	strcpy@d^0,f,c
  8210  004276  2A0A               	incf	(strcpy@d+1)^0,f,c
  8211  004278  0E07               	movlw	(high __ramtop+-1)
  8212  00427A  64F7               	cpfsgt	tblptrh,c
  8213  00427C  D003               	bra	u4387
  8214  00427E  0008               	tblrd		*
  8215  004280  50F5               	movf	tablat,w,c
  8216  004282  D005               	bra	u4380
  8217  004284                     u4387:
  8218  004284  CFF6 FFE1          	movff	tblptrl,fsr1l
  8219  004288  CFF7 FFE2          	movff	tblptrh,fsr1h
  8220  00428C  50E7               	movf	indf1,w,c
  8221  00428E                     u4380:
  8222  00428E  6EDF               	movwf	indf2,c
  8223  004290  50DF               	movf	indf2,w,c
  8224  004292  A4D8               	btfss	status,2,c
  8225  004294  EF4E  F021         	goto	u4391
  8226  004298  EF50  F021         	goto	u4390
  8227  00429C                     u4391:
  8228  00429C  EF2B  F021         	goto	l4398
  8229  0042A0                     u4390:
  8230  0042A0  0012               	return		;funcret
  8231  0042A2                     __end_of_strcpy:
  8232                           	callstack 0
  8233                           
  8234 ;; *************** function _pad *****************
  8235 ;; Defined at:
  8236 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8239 ;;		 -> sprintf@f(6), 
  8240 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8241 ;;		 -> dbuf(80), 
  8242 ;;  p               2   20[COMRAM] int 
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;  w               2   25[COMRAM] int 
  8245 ;;  i               2   23[COMRAM] int 
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  2   16[COMRAM] int 
  8248 ;; Registers used:
  8249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8255 ;;      Params:         6       0       0       0       0       0       0       0       0
  8256 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8257 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8258 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8259 ;;Total ram usage:       11 bytes
  8260 ;; Hardware stack levels used: 1
  8261 ;; Hardware stack levels required when called: 3
  8262 ;; This function calls:
  8263 ;;		_fputc
  8264 ;;		_fputs
  8265 ;;		_strlen
  8266 ;; This function is called by:
  8267 ;;		_efgtoa
  8268 ;;		_xtoa
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text37
  8273  003BCC                     __ptext37:
  8274                           	callstack 0
  8275  003BCC                     _pad:
  8276                           	callstack 22
  8277  003BCC                     
  8278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8279  003BCC  0100               	movlb	0	; () banked
  8280  003BCE  A1F8               	btfss	_flags& (0+255),0,b
  8281  003BD0  EFEC  F01D         	goto	u4271
  8282  003BD4  EFEE  F01D         	goto	u4270
  8283  003BD8                     u4271:
  8284  003BD8  EFF8  F01D         	goto	l4356
  8285  003BDC                     u4270:
  8286  003BDC                     
  8287                           ; BSR set to: 0
  8288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8289  003BDC  C013  F00A         	movff	pad@buf,fputs@s
  8290  003BE0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8291  003BE4  C011  F00C         	movff	pad@fp,fputs@fp
  8292  003BE8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8293  003BEC  EC2D  F023         	call	_fputs	;wreg free
  8294  003BF0                     l4356:
  8295                           
  8296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8297  003BF0  BE16               	btfsc	(pad@p+1)^0,7,c
  8298  003BF2  EFFD  F01D         	goto	u4281
  8299  003BF6  EFFF  F01D         	goto	u4280
  8300  003BFA                     u4281:
  8301  003BFA  EF05  F01E         	goto	l4360
  8302  003BFE                     u4280:
  8303  003BFE  C015  F01A         	movff	pad@p,pad@w
  8304  003C02  C016  F01B         	movff	pad@p+1,pad@w+1
  8305  003C06  EF09  F01E         	goto	l1233
  8306  003C0A                     l4360:
  8307  003C0A  0E00               	movlw	0
  8308  003C0C  6E1B               	movwf	(pad@w+1)^0,c
  8309  003C0E  0E00               	movlw	0
  8310  003C10  6E1A               	movwf	pad@w^0,c
  8311  003C12                     l1233:
  8312                           
  8313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8314  003C12  0E00               	movlw	0
  8315  003C14  6E19               	movwf	(pad@i+1)^0,c
  8316  003C16  0E00               	movlw	0
  8317  003C18  6E18               	movwf	pad@i^0,c
  8318                           
  8319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8320  003C1A  EF1B  F01E         	goto	l4366
  8321  003C1E                     l4362:
  8322                           
  8323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8324  003C1E  0E00               	movlw	0
  8325  003C20  6E02               	movwf	(fputc@c+1)^0,c
  8326  003C22  0E20               	movlw	32
  8327  003C24  6E01               	movwf	fputc@c^0,c
  8328  003C26  C011  F003         	movff	pad@fp,fputc@fp
  8329  003C2A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8330  003C2E  EC81  F01D         	call	_fputc	;wreg free
  8331  003C32                     
  8332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8333  003C32  4A18               	infsnz	pad@i^0,f,c
  8334  003C34  2A19               	incf	(pad@i+1)^0,f,c
  8335  003C36                     l4366:
  8336                           
  8337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8338  003C36  501A               	movf	pad@w^0,w,c
  8339  003C38  5C18               	subwf	pad@i^0,w,c
  8340  003C3A  5019               	movf	(pad@i+1)^0,w,c
  8341  003C3C  0A80               	xorlw	128
  8342  003C3E  6E17               	movwf	??_pad^0,c
  8343  003C40  501B               	movf	(pad@w+1)^0,w,c
  8344  003C42  0A80               	xorlw	128
  8345  003C44  5817               	subwfb	??_pad^0,w,c
  8346  003C46  A0D8               	btfss	status,0,c
  8347  003C48  EF28  F01E         	goto	u4291
  8348  003C4C  EF2A  F01E         	goto	u4290
  8349  003C50                     u4291:
  8350  003C50  EF0F  F01E         	goto	l4362
  8351  003C54                     u4290:
  8352  003C54                     
  8353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8354  003C54  0100               	movlb	0	; () banked
  8355  003C56  B1F8               	btfsc	_flags& (0+255),0,b
  8356  003C58  EF30  F01E         	goto	u4301
  8357  003C5C  EF32  F01E         	goto	u4300
  8358  003C60                     u4301:
  8359  003C60  EF3C  F01E         	goto	l4370
  8360  003C64                     u4300:
  8361  003C64                     
  8362                           ; BSR set to: 0
  8363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8364  003C64  C013  F00A         	movff	pad@buf,fputs@s
  8365  003C68  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8366  003C6C  C011  F00C         	movff	pad@fp,fputs@fp
  8367  003C70  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8368  003C74  EC2D  F023         	call	_fputs	;wreg free
  8369  003C78                     l4370:
  8370                           
  8371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8372  003C78  C013  F001         	movff	pad@buf,strlen@s
  8373  003C7C  C014  F002         	movff	pad@buf+1,strlen@s+1
  8374  003C80  EC36  F024         	call	_strlen	;wreg free
  8375  003C84  501A               	movf	pad@w^0,w,c
  8376  003C86  2401               	addwf	?_strlen^0,w,c
  8377  003C88  6E11               	movwf	?_pad^0,c
  8378  003C8A  501B               	movf	(pad@w+1)^0,w,c
  8379  003C8C  2002               	addwfc	(?_strlen+1)^0,w,c
  8380  003C8E  6E12               	movwf	(?_pad+1)^0,c
  8381  003C90  0012               	return		;funcret
  8382  003C92                     __end_of_pad:
  8383                           	callstack 0
  8384                           
  8385 ;; *************** function _strlen *****************
  8386 ;; Defined at:
  8387 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8390 ;;		 -> dbuf(80), 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8393 ;;		 -> dbuf(80), 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  2    0[COMRAM] unsigned int 
  8396 ;; Registers used:
  8397 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8403 ;;      Params:         2       0       0       0       0       0       0       0       0
  8404 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8406 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8407 ;;Total ram usage:        4 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_pad
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           	psect	text38
  8417  00486C                     __ptext38:
  8418                           	callstack 0
  8419  00486C                     _strlen:
  8420                           	callstack 24
  8421  00486C  C001  F003         	movff	strlen@s,strlen@a
  8422  004870  C002  F004         	movff	strlen@s+1,strlen@a+1
  8423  004874  EF3E  F024         	goto	l3888
  8424  004878                     l3886:
  8425  004878  4A01               	infsnz	strlen@s^0,f,c
  8426  00487A  2A02               	incf	(strlen@s+1)^0,f,c
  8427  00487C                     l3888:
  8428  00487C  C001  FFD9         	movff	strlen@s,fsr2l
  8429  004880  C002  FFDA         	movff	strlen@s+1,fsr2h
  8430  004884  50DF               	movf	indf2,w,c
  8431  004886  A4D8               	btfss	status,2,c
  8432  004888  EF48  F024         	goto	u3521
  8433  00488C  EF4A  F024         	goto	u3520
  8434  004890                     u3521:
  8435  004890  EF3C  F024         	goto	l3886
  8436  004894                     u3520:
  8437  004894  5003               	movf	strlen@a^0,w,c
  8438  004896  5C01               	subwf	strlen@s^0,w,c
  8439  004898  6E01               	movwf	?_strlen^0,c
  8440  00489A  5004               	movf	(strlen@a+1)^0,w,c
  8441  00489C  5802               	subwfb	(strlen@s+1)^0,w,c
  8442  00489E  6E02               	movwf	(?_strlen+1)^0,c
  8443  0048A0  0012               	return		;funcret
  8444  0048A2                     __end_of_strlen:
  8445                           	callstack 0
  8446                           
  8447 ;; *************** function _fputs *****************
  8448 ;; Defined at:
  8449 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8452 ;;		 -> dbuf(80), 
  8453 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8454 ;;		 -> sprintf@f(6), 
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;  i               2   14[COMRAM] int 
  8457 ;;  c               1   13[COMRAM] unsigned char 
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  2    9[COMRAM] int 
  8460 ;; Registers used:
  8461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8467 ;;      Params:         4       0       0       0       0       0       0       0       0
  8468 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8470 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8471 ;;Total ram usage:        7 bytes
  8472 ;; Hardware stack levels used: 1
  8473 ;; Hardware stack levels required when called: 2
  8474 ;; This function calls:
  8475 ;;		_fputc
  8476 ;; This function is called by:
  8477 ;;		_pad
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text39
  8482  00465A                     __ptext39:
  8483                           	callstack 0
  8484  00465A                     _fputs:
  8485                           	callstack 22
  8486  00465A  0E00               	movlw	0
  8487  00465C  6E10               	movwf	(fputs@i+1)^0,c
  8488  00465E  0E00               	movlw	0
  8489  004660  6E0F               	movwf	fputs@i^0,c
  8490  004662  EF3E  F023         	goto	l3882
  8491  004666                     l3878:
  8492  004666  C00E  F001         	movff	fputs@c,fputc@c
  8493  00466A  6A02               	clrf	(fputc@c+1)^0,c
  8494  00466C  C00C  F003         	movff	fputs@fp,fputc@fp
  8495  004670  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8496  004674  EC81  F01D         	call	_fputc	;wreg free
  8497  004678  4A0F               	infsnz	fputs@i^0,f,c
  8498  00467A  2A10               	incf	(fputs@i+1)^0,f,c
  8499  00467C                     l3882:
  8500  00467C  500F               	movf	fputs@i^0,w,c
  8501  00467E  240A               	addwf	fputs@s^0,w,c
  8502  004680  6ED9               	movwf	fsr2l,c
  8503  004682  5010               	movf	(fputs@i+1)^0,w,c
  8504  004684  200B               	addwfc	(fputs@s+1)^0,w,c
  8505  004686  6EDA               	movwf	fsr2h,c
  8506  004688  50DF               	movf	indf2,w,c
  8507  00468A  6E0E               	movwf	fputs@c^0,c
  8508  00468C  500E               	movf	fputs@c^0,w,c
  8509  00468E  A4D8               	btfss	status,2,c
  8510  004690  EF4C  F023         	goto	u3511
  8511  004694  EF4E  F023         	goto	u3510
  8512  004698                     u3511:
  8513  004698  EF33  F023         	goto	l3878
  8514  00469C                     u3510:
  8515  00469C  0012               	return		;funcret
  8516  00469E                     __end_of_fputs:
  8517                           	callstack 0
  8518                           
  8519 ;; *************** function _fputc *****************
  8520 ;; Defined at:
  8521 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  c               2    0[COMRAM] int 
  8524 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8525 ;;		 -> sprintf@f(6), 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  2    0[COMRAM] int 
  8530 ;; Registers used:
  8531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8537 ;;      Params:         4       0       0       0       0       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8539 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8540 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8541 ;;Total ram usage:        9 bytes
  8542 ;; Hardware stack levels used: 1
  8543 ;; Hardware stack levels required when called: 1
  8544 ;; This function calls:
  8545 ;;		_putch
  8546 ;; This function is called by:
  8547 ;;		_pad
  8548 ;;		_vfpfcnvrt
  8549 ;;		_fputs
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           	psect	text40
  8554  003B02                     __ptext40:
  8555                           	callstack 0
  8556  003B02                     _fputc:
  8557                           	callstack 22
  8558  003B02  5003               	movf	fputc@fp^0,w,c
  8559  003B04  1004               	iorwf	(fputc@fp+1)^0,w,c
  8560  003B06  B4D8               	btfsc	status,2,c
  8561  003B08  EF88  F01D         	goto	u3081
  8562  003B0C  EF8A  F01D         	goto	u3080
  8563  003B10                     u3081:
  8564  003B10  EF93  F01D         	goto	l3664
  8565  003B14                     u3080:
  8566  003B14  5003               	movf	fputc@fp^0,w,c
  8567  003B16  1004               	iorwf	(fputc@fp+1)^0,w,c
  8568  003B18  A4D8               	btfss	status,2,c
  8569  003B1A  EF91  F01D         	goto	u3091
  8570  003B1E  EF93  F01D         	goto	u3090
  8571  003B22                     u3091:
  8572  003B22  EF98  F01D         	goto	l3666
  8573  003B26                     u3090:
  8574  003B26                     l3664:
  8575  003B26  5001               	movf	fputc@c^0,w,c
  8576  003B28  EC12  F025         	call	_putch
  8577  003B2C  EFE5  F01D         	goto	l1500
  8578  003B30                     l3666:
  8579  003B30  EE20 F004          	lfsr	2,4
  8580  003B34  5003               	movf	fputc@fp^0,w,c
  8581  003B36  26D9               	addwf	fsr2l,f,c
  8582  003B38  5004               	movf	(fputc@fp+1)^0,w,c
  8583  003B3A  22DA               	addwfc	fsr2h,f,c
  8584  003B3C  50DE               	movf	postinc2,w,c
  8585  003B3E  10DE               	iorwf	postinc2,w,c
  8586  003B40  B4D8               	btfsc	status,2,c
  8587  003B42  EFA5  F01D         	goto	u3101
  8588  003B46  EFA7  F01D         	goto	u3100
  8589  003B4A                     u3101:
  8590  003B4A  EFC2  F01D         	goto	l3670
  8591  003B4E                     u3100:
  8592  003B4E  EE20 F004          	lfsr	2,4
  8593  003B52  5003               	movf	fputc@fp^0,w,c
  8594  003B54  26D9               	addwf	fsr2l,f,c
  8595  003B56  5004               	movf	(fputc@fp+1)^0,w,c
  8596  003B58  22DA               	addwfc	fsr2h,f,c
  8597  003B5A  EE10 F002          	lfsr	1,2
  8598  003B5E  5003               	movf	fputc@fp^0,w,c
  8599  003B60  26E1               	addwf	fsr1l,f,c
  8600  003B62  5004               	movf	(fputc@fp+1)^0,w,c
  8601  003B64  22E2               	addwfc	fsr1h,f,c
  8602  003B66  50DE               	movf	postinc2,w,c
  8603  003B68  5CE6               	subwf	postinc1,w,c
  8604  003B6A  50E6               	movf	postinc1,w,c
  8605  003B6C  0A80               	xorlw	128
  8606  003B6E  6E09               	movwf	(??_fputc+4)^0,c
  8607  003B70  50DE               	movf	postinc2,w,c
  8608  003B72  0A80               	xorlw	128
  8609  003B74  5809               	subwfb	(??_fputc+4)^0,w,c
  8610  003B76  B0D8               	btfsc	status,0,c
  8611  003B78  EFC0  F01D         	goto	u3111
  8612  003B7C  EFC2  F01D         	goto	u3110
  8613  003B80                     u3111:
  8614  003B80  EFE5  F01D         	goto	l1500
  8615  003B84                     u3110:
  8616  003B84                     l3670:
  8617  003B84  EE20 F002          	lfsr	2,2
  8618  003B88  5003               	movf	fputc@fp^0,w,c
  8619  003B8A  26D9               	addwf	fsr2l,f,c
  8620  003B8C  5004               	movf	(fputc@fp+1)^0,w,c
  8621  003B8E  22DA               	addwfc	fsr2h,f,c
  8622  003B90  CFDE F005          	movff	postinc2,??_fputc
  8623  003B94  CFDD F006          	movff	postdec2,??_fputc+1
  8624  003B98  C003  FFD9         	movff	fputc@fp,fsr2l
  8625  003B9C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8626  003BA0  CFDE F007          	movff	postinc2,??_fputc+2
  8627  003BA4  CFDD F008          	movff	postdec2,??_fputc+3
  8628  003BA8  5005               	movf	??_fputc^0,w,c
  8629  003BAA  2407               	addwf	(??_fputc+2)^0,w,c
  8630  003BAC  6ED9               	movwf	fsr2l,c
  8631  003BAE  5006               	movf	(??_fputc+1)^0,w,c
  8632  003BB0  2008               	addwfc	(??_fputc+3)^0,w,c
  8633  003BB2  6EDA               	movwf	fsr2h,c
  8634  003BB4  C001  FFDF         	movff	fputc@c,indf2
  8635  003BB8  EE20 F002          	lfsr	2,2
  8636  003BBC  5003               	movf	fputc@fp^0,w,c
  8637  003BBE  26D9               	addwf	fsr2l,f,c
  8638  003BC0  5004               	movf	(fputc@fp+1)^0,w,c
  8639  003BC2  22DA               	addwfc	fsr2h,f,c
  8640  003BC4  2ADE               	incf	postinc2,f,c
  8641  003BC6  0E00               	movlw	0
  8642  003BC8  22DD               	addwfc	postdec2,f,c
  8643  003BCA                     l1500:
  8644  003BCA  0012               	return		;funcret
  8645  003BCC                     __end_of_fputc:
  8646                           	callstack 0
  8647                           
  8648 ;; *************** function _putch *****************
  8649 ;; Defined at:
  8650 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;  c               1    wreg     unsigned char 
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;  c               1    0[COMRAM] unsigned char 
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8664 ;;      Params:         0       0       0       0       0       0       0       0       0
  8665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8667 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8668 ;;Total ram usage:        0 bytes
  8669 ;; Hardware stack levels used: 1
  8670 ;; This function calls:
  8671 ;;		Nothing
  8672 ;; This function is called by:
  8673 ;;		_fputc
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text41
  8678  004A24                     __ptext41:
  8679                           	callstack 0
  8680  004A24                     _putch:
  8681                           	callstack 22
  8682  004A24  0012               	return		;funcret
  8683  004A26                     __end_of_putch:
  8684                           	callstack 0
  8685                           
  8686 ;; *************** function _floorf *****************
  8687 ;; Defined at:
  8688 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  x               4   68[COMRAM] float 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  u               4   84[COMRAM] struct .
  8693 ;;  m               4   78[COMRAM] unsigned long 
  8694 ;;  e               2   82[COMRAM] int 
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  4   68[COMRAM] float 
  8697 ;; Registers used:
  8698 ;;		wreg, status,2, status,0
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8704 ;;      Params:         4       0       0       0       0       0       0       0       0
  8705 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8706 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8707 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8708 ;;Total ram usage:       20 bytes
  8709 ;; Hardware stack levels used: 1
  8710 ;; This function calls:
  8711 ;;		Nothing
  8712 ;; This function is called by:
  8713 ;;		_efgtoa
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text42
  8718  002F78                     __ptext42:
  8719                           	callstack 0
  8720  002F78                     _floorf:
  8721                           	callstack 25
  8722  002F78  C0E2  F055         	movff	floorf@F527,floorf@u
  8723  002F7C  C0E3  F056         	movff	floorf@F527+1,floorf@u+1
  8724  002F80  C0E4  F057         	movff	floorf@F527+2,floorf@u+2
  8725  002F84  C0E5  F058         	movff	floorf@F527+3,floorf@u+3
  8726  002F88  C045  F055         	movff	floorf@x,floorf@u
  8727  002F8C  C046  F056         	movff	floorf@x+1,floorf@u+1
  8728  002F90  C047  F057         	movff	floorf@x+2,floorf@u+2
  8729  002F94  C048  F058         	movff	floorf@x+3,floorf@u+3
  8730  002F98  0E81               	movlw	129
  8731  002F9A  6E49               	movwf	??_floorf^0,c
  8732  002F9C  0EFF               	movlw	255
  8733  002F9E  6E4A               	movwf	(??_floorf+1)^0,c
  8734  002FA0  C055  F04B         	movff	floorf@u,??_floorf+2
  8735  002FA4  C056  F04C         	movff	floorf@u+1,??_floorf+3
  8736  002FA8  C057  F04D         	movff	floorf@u+2,??_floorf+4
  8737  002FAC  C058  F04E         	movff	floorf@u+3,??_floorf+5
  8738  002FB0  0E18               	movlw	24
  8739  002FB2  EFE0  F017         	goto	u4430
  8740  002FB6                     u4435:
  8741  002FB6  90D8               	bcf	status,0,c
  8742  002FB8  324E               	rrcf	(??_floorf+5)^0,f,c
  8743  002FBA  324D               	rrcf	(??_floorf+4)^0,f,c
  8744  002FBC  324C               	rrcf	(??_floorf+3)^0,f,c
  8745  002FBE  324B               	rrcf	(??_floorf+2)^0,f,c
  8746  002FC0                     u4430:
  8747  002FC0  2EE8               	decfsz	wreg,f,c
  8748  002FC2  EFDB  F017         	goto	u4435
  8749  002FC6  504B               	movf	(??_floorf+2)^0,w,c
  8750  002FC8  2449               	addwf	??_floorf^0,w,c
  8751  002FCA  6E53               	movwf	floorf@e^0,c
  8752  002FCC  0E00               	movlw	0
  8753  002FCE  204A               	addwfc	(??_floorf+1)^0,w,c
  8754  002FD0  6E54               	movwf	(floorf@e+1)^0,c
  8755  002FD2  BE54               	btfsc	(floorf@e+1)^0,7,c
  8756  002FD4  EFF5  F017         	goto	u4441
  8757  002FD8  5054               	movf	(floorf@e+1)^0,w,c
  8758  002FDA  E109               	bnz	u4440
  8759  002FDC  0E17               	movlw	23
  8760  002FDE  5C53               	subwf	floorf@e^0,w,c
  8761  002FE0  A0D8               	btfss	status,0,c
  8762  002FE2  EFF5  F017         	goto	u4441
  8763  002FE6  EFF7  F017         	goto	u4440
  8764  002FEA                     u4441:
  8765  002FEA  EF01  F018         	goto	l4416
  8766  002FEE                     u4440:
  8767  002FEE                     l4414:
  8768  002FEE  C045  F045         	movff	floorf@x,?_floorf
  8769  002FF2  C046  F046         	movff	floorf@x+1,?_floorf+1
  8770  002FF6  C047  F047         	movff	floorf@x+2,?_floorf+2
  8771  002FFA  C048  F048         	movff	floorf@x+3,?_floorf+3
  8772  002FFE  EFC4  F018         	goto	l1455
  8773  003002                     l4416:
  8774  003002  BE54               	btfsc	(floorf@e+1)^0,7,c
  8775  003004  EF06  F018         	goto	u4451
  8776  003008  EF08  F018         	goto	u4450
  8777  00300C                     u4451:
  8778  00300C  EF78  F018         	goto	l4426
  8779  003010                     u4450:
  8780  003010  C053  F049         	movff	floorf@e,??_floorf
  8781  003014  0EFF               	movlw	255
  8782  003016  6E4A               	movwf	(??_floorf+1)^0,c
  8783  003018  0EFF               	movlw	255
  8784  00301A  6E4B               	movwf	(??_floorf+2)^0,c
  8785  00301C  0E7F               	movlw	127
  8786  00301E  6E4C               	movwf	(??_floorf+3)^0,c
  8787  003020  0E00               	movlw	0
  8788  003022  6E4D               	movwf	(??_floorf+4)^0,c
  8789  003024                     u4465:
  8790  003024  6649               	tstfsz	??_floorf^0,c
  8791  003026  EF17  F018         	goto	u4466
  8792  00302A  EF1F  F018         	goto	u4467
  8793  00302E                     u4466:
  8794  00302E  344D               	rlcf	(??_floorf+4)^0,w,c
  8795  003030  324D               	rrcf	(??_floorf+4)^0,f,c
  8796  003032  324C               	rrcf	(??_floorf+3)^0,f,c
  8797  003034  324B               	rrcf	(??_floorf+2)^0,f,c
  8798  003036  324A               	rrcf	(??_floorf+1)^0,f,c
  8799  003038  2E49               	decfsz	??_floorf^0,f,c
  8800  00303A  EF12  F018         	goto	u4465
  8801  00303E                     u4467:
  8802  00303E  C04A  F04F         	movff	??_floorf+1,floorf@m
  8803  003042  C04B  F050         	movff	??_floorf+2,floorf@m+1
  8804  003046  C04C  F051         	movff	??_floorf+3,floorf@m+2
  8805  00304A  C04D  F052         	movff	??_floorf+4,floorf@m+3
  8806  00304E  504F               	movf	floorf@m^0,w,c
  8807  003050  1455               	andwf	floorf@u^0,w,c
  8808  003052  6E49               	movwf	??_floorf^0,c
  8809  003054  5050               	movf	(floorf@m+1)^0,w,c
  8810  003056  1456               	andwf	(floorf@u+1)^0,w,c
  8811  003058  6E4A               	movwf	(??_floorf+1)^0,c
  8812  00305A  5051               	movf	(floorf@m+2)^0,w,c
  8813  00305C  1457               	andwf	(floorf@u+2)^0,w,c
  8814  00305E  6E4B               	movwf	(??_floorf+2)^0,c
  8815  003060  5052               	movf	(floorf@m+3)^0,w,c
  8816  003062  1458               	andwf	(floorf@u+3)^0,w,c
  8817  003064  6E4C               	movwf	(??_floorf+3)^0,c
  8818  003066  5049               	movf	??_floorf^0,w,c
  8819  003068  104A               	iorwf	(??_floorf+1)^0,w,c
  8820  00306A  104B               	iorwf	(??_floorf+2)^0,w,c
  8821  00306C  104C               	iorwf	(??_floorf+3)^0,w,c
  8822  00306E  A4D8               	btfss	status,2,c
  8823  003070  EF3C  F018         	goto	u4471
  8824  003074  EF3E  F018         	goto	u4470
  8825  003078                     u4471:
  8826  003078  EF40  F018         	goto	l4422
  8827  00307C                     u4470:
  8828  00307C  EFF7  F017         	goto	l4414
  8829  003080                     l4422:
  8830  003080  C055  F049         	movff	floorf@u,??_floorf
  8831  003084  C056  F04A         	movff	floorf@u+1,??_floorf+1
  8832  003088  C057  F04B         	movff	floorf@u+2,??_floorf+2
  8833  00308C  C058  F04C         	movff	floorf@u+3,??_floorf+3
  8834  003090  0E20               	movlw	32
  8835  003092  EF50  F018         	goto	u4480
  8836  003096                     u4485:
  8837  003096  90D8               	bcf	status,0,c
  8838  003098  324C               	rrcf	(??_floorf+3)^0,f,c
  8839  00309A  324B               	rrcf	(??_floorf+2)^0,f,c
  8840  00309C  324A               	rrcf	(??_floorf+1)^0,f,c
  8841  00309E  3249               	rrcf	??_floorf^0,f,c
  8842  0030A0                     u4480:
  8843  0030A0  2EE8               	decfsz	wreg,f,c
  8844  0030A2  EF4B  F018         	goto	u4485
  8845  0030A6  5049               	movf	??_floorf^0,w,c
  8846  0030A8  104A               	iorwf	(??_floorf+1)^0,w,c
  8847  0030AA  104B               	iorwf	(??_floorf+2)^0,w,c
  8848  0030AC  104C               	iorwf	(??_floorf+3)^0,w,c
  8849  0030AE  B4D8               	btfsc	status,2,c
  8850  0030B0  EF5C  F018         	goto	u4491
  8851  0030B4  EF5E  F018         	goto	u4490
  8852  0030B8                     u4491:
  8853  0030B8  EF66  F018         	goto	l1458
  8854  0030BC                     u4490:
  8855  0030BC  504F               	movf	floorf@m^0,w,c
  8856  0030BE  2655               	addwf	floorf@u^0,f,c
  8857  0030C0  5050               	movf	(floorf@m+1)^0,w,c
  8858  0030C2  2256               	addwfc	(floorf@u+1)^0,f,c
  8859  0030C4  5051               	movf	(floorf@m+2)^0,w,c
  8860  0030C6  2257               	addwfc	(floorf@u+2)^0,f,c
  8861  0030C8  5052               	movf	(floorf@m+3)^0,w,c
  8862  0030CA  2258               	addwfc	(floorf@u+3)^0,f,c
  8863  0030CC                     l1458:
  8864  0030CC  1C4F               	comf	floorf@m^0,w,c
  8865  0030CE  6E49               	movwf	??_floorf^0,c
  8866  0030D0  1C50               	comf	(floorf@m+1)^0,w,c
  8867  0030D2  6E4A               	movwf	(??_floorf+1)^0,c
  8868  0030D4  1C51               	comf	(floorf@m+2)^0,w,c
  8869  0030D6  6E4B               	movwf	(??_floorf+2)^0,c
  8870  0030D8  1C52               	comf	(floorf@m+3)^0,w,c
  8871  0030DA  6E4C               	movwf	(??_floorf+3)^0,c
  8872  0030DC  5049               	movf	??_floorf^0,w,c
  8873  0030DE  1655               	andwf	floorf@u^0,f,c
  8874  0030E0  504A               	movf	(??_floorf+1)^0,w,c
  8875  0030E2  1656               	andwf	(floorf@u+1)^0,f,c
  8876  0030E4  504B               	movf	(??_floorf+2)^0,w,c
  8877  0030E6  1657               	andwf	(floorf@u+2)^0,f,c
  8878  0030E8  504C               	movf	(??_floorf+3)^0,w,c
  8879  0030EA  1658               	andwf	(floorf@u+3)^0,f,c
  8880  0030EC  EFBC  F018         	goto	l4434
  8881  0030F0                     l4426:
  8882  0030F0  C055  F049         	movff	floorf@u,??_floorf
  8883  0030F4  C056  F04A         	movff	floorf@u+1,??_floorf+1
  8884  0030F8  C057  F04B         	movff	floorf@u+2,??_floorf+2
  8885  0030FC  C058  F04C         	movff	floorf@u+3,??_floorf+3
  8886  003100  0E20               	movlw	32
  8887  003102  EF88  F018         	goto	u4500
  8888  003106                     u4505:
  8889  003106  90D8               	bcf	status,0,c
  8890  003108  324C               	rrcf	(??_floorf+3)^0,f,c
  8891  00310A  324B               	rrcf	(??_floorf+2)^0,f,c
  8892  00310C  324A               	rrcf	(??_floorf+1)^0,f,c
  8893  00310E  3249               	rrcf	??_floorf^0,f,c
  8894  003110                     u4500:
  8895  003110  2EE8               	decfsz	wreg,f,c
  8896  003112  EF83  F018         	goto	u4505
  8897  003116  5049               	movf	??_floorf^0,w,c
  8898  003118  104A               	iorwf	(??_floorf+1)^0,w,c
  8899  00311A  104B               	iorwf	(??_floorf+2)^0,w,c
  8900  00311C  104C               	iorwf	(??_floorf+3)^0,w,c
  8901  00311E  A4D8               	btfss	status,2,c
  8902  003120  EF94  F018         	goto	u4511
  8903  003124  EF96  F018         	goto	u4510
  8904  003128                     u4511:
  8905  003128  EFA0  F018         	goto	l4430
  8906  00312C                     u4510:
  8907  00312C  0E00               	movlw	0
  8908  00312E  6E55               	movwf	floorf@u^0,c
  8909  003130  0E00               	movlw	0
  8910  003132  6E56               	movwf	(floorf@u+1)^0,c
  8911  003134  0E00               	movlw	0
  8912  003136  6E57               	movwf	(floorf@u+2)^0,c
  8913  003138  0E00               	movlw	0
  8914  00313A  6E58               	movwf	(floorf@u+3)^0,c
  8915  00313C  EFBC  F018         	goto	l4434
  8916  003140                     l4430:
  8917  003140  90D8               	bcf	status,0,c
  8918  003142  3455               	rlcf	floorf@u^0,w,c
  8919  003144  6E49               	movwf	??_floorf^0,c
  8920  003146  3456               	rlcf	(floorf@u+1)^0,w,c
  8921  003148  6E4A               	movwf	(??_floorf+1)^0,c
  8922  00314A  3457               	rlcf	(floorf@u+2)^0,w,c
  8923  00314C  6E4B               	movwf	(??_floorf+2)^0,c
  8924  00314E  3458               	rlcf	(floorf@u+3)^0,w,c
  8925  003150  6E4C               	movwf	(??_floorf+3)^0,c
  8926  003152  5049               	movf	??_floorf^0,w,c
  8927  003154  104A               	iorwf	(??_floorf+1)^0,w,c
  8928  003156  104B               	iorwf	(??_floorf+2)^0,w,c
  8929  003158  104C               	iorwf	(??_floorf+3)^0,w,c
  8930  00315A  B4D8               	btfsc	status,2,c
  8931  00315C  EFB2  F018         	goto	u4521
  8932  003160  EFB4  F018         	goto	u4520
  8933  003164                     u4521:
  8934  003164  EFBC  F018         	goto	l4434
  8935  003168                     u4520:
  8936  003168  0E00               	movlw	0
  8937  00316A  6E55               	movwf	floorf@u^0,c
  8938  00316C  0E00               	movlw	0
  8939  00316E  6E56               	movwf	(floorf@u+1)^0,c
  8940  003170  0E80               	movlw	128
  8941  003172  6E57               	movwf	(floorf@u+2)^0,c
  8942  003174  0EBF               	movlw	191
  8943  003176  6E58               	movwf	(floorf@u+3)^0,c
  8944  003178                     l4434:
  8945  003178  C055  F045         	movff	floorf@u,?_floorf
  8946  00317C  C056  F046         	movff	floorf@u+1,?_floorf+1
  8947  003180  C057  F047         	movff	floorf@u+2,?_floorf+2
  8948  003184  C058  F048         	movff	floorf@u+3,?_floorf+3
  8949  003188                     l1455:
  8950  003188  0012               	return		;funcret
  8951  00318A                     __end_of_floorf:
  8952                           	callstack 0
  8953                           
  8954 ;; *************** function ___fpclassifyf *****************
  8955 ;; Defined at:
  8956 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;  x               4    0[COMRAM] float 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;  u               4   10[COMRAM] struct .
  8961 ;;  e               2    8[COMRAM] int 
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  2    0[COMRAM] int 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8971 ;;      Params:         4       0       0       0       0       0       0       0       0
  8972 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8973 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8974 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8975 ;;Total ram usage:       14 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; This function calls:
  8978 ;;		Nothing
  8979 ;; This function is called by:
  8980 ;;		_efgtoa
  8981 ;; This function uses a non-reentrant model
  8982 ;;
  8983                           
  8984                           	psect	text43
  8985  00392E                     __ptext43:
  8986                           	callstack 0
  8987  00392E                     ___fpclassifyf:
  8988                           	callstack 25
  8989  00392E  C0E6  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8990  003932  C0E7  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8991  003936  C0E8  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8992  00393A  C0E9  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8993  00393E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8994  003942  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8995  003946  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8996  00394A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8997  00394E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8998  003952  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8999  003956  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9000  00395A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9001  00395E  0E18               	movlw	24
  9002  003960  EFB7  F01C         	goto	u4310
  9003  003964                     u4315:
  9004  003964  90D8               	bcf	status,0,c
  9005  003966  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9006  003968  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9007  00396A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9008  00396C  3205               	rrcf	??___fpclassifyf^0,f,c
  9009  00396E                     u4310:
  9010  00396E  2EE8               	decfsz	wreg,f,c
  9011  003970  EFB2  F01C         	goto	u4315
  9012  003974  5005               	movf	??___fpclassifyf^0,w,c
  9013  003976  6E09               	movwf	___fpclassifyf@e^0,c
  9014  003978  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9015  00397A  5009               	movf	___fpclassifyf@e^0,w,c
  9016  00397C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9017  00397E  A4D8               	btfss	status,2,c
  9018  003980  EFC4  F01C         	goto	u4321
  9019  003984  EFC6  F01C         	goto	u4320
  9020  003988                     u4321:
  9021  003988  EFE6  F01C         	goto	l4386
  9022  00398C                     u4320:
  9023  00398C  90D8               	bcf	status,0,c
  9024  00398E  340B               	rlcf	___fpclassifyf@u^0,w,c
  9025  003990  6E05               	movwf	??___fpclassifyf^0,c
  9026  003992  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9027  003994  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9028  003996  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9029  003998  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9030  00399A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9031  00399C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9032  00399E  5005               	movf	??___fpclassifyf^0,w,c
  9033  0039A0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9034  0039A2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9035  0039A4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9036  0039A6  A4D8               	btfss	status,2,c
  9037  0039A8  EFD8  F01C         	goto	u4331
  9038  0039AC  EFDA  F01C         	goto	u4330
  9039  0039B0                     u4331:
  9040  0039B0  EFE0  F01C         	goto	l4382
  9041  0039B4                     u4330:
  9042  0039B4  0E00               	movlw	0
  9043  0039B6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9044  0039B8  0E02               	movlw	2
  9045  0039BA  6E01               	movwf	?___fpclassifyf^0,c
  9046  0039BC  EF15  F01D         	goto	l1417
  9047  0039C0                     l4382:
  9048  0039C0  0E00               	movlw	0
  9049  0039C2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9050  0039C4  0E03               	movlw	3
  9051  0039C6  6E01               	movwf	?___fpclassifyf^0,c
  9052  0039C8  EF15  F01D         	goto	l1417
  9053  0039CC                     l4386:
  9054  0039CC  2809               	incf	___fpclassifyf@e^0,w,c
  9055  0039CE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9056  0039D0  A4D8               	btfss	status,2,c
  9057  0039D2  EFED  F01C         	goto	u4341
  9058  0039D6  EFEF  F01C         	goto	u4340
  9059  0039DA                     u4341:
  9060  0039DA  EF11  F01D         	goto	l4392
  9061  0039DE                     u4340:
  9062  0039DE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9063  0039E2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9064  0039E6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9065  0039EA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9066  0039EE  0E09               	movlw	9
  9067  0039F0                     u4355:
  9068  0039F0  90D8               	bcf	status,0,c
  9069  0039F2  3605               	rlcf	??___fpclassifyf^0,f,c
  9070  0039F4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9071  0039F6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9072  0039F8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9073  0039FA  2EE8               	decfsz	wreg,f,c
  9074  0039FC  EFF8  F01C         	goto	u4355
  9075  003A00  5005               	movf	??___fpclassifyf^0,w,c
  9076  003A02  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9077  003A04  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9078  003A06  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9079  003A08  B4D8               	btfsc	status,2,c
  9080  003A0A  EF09  F01D         	goto	u4361
  9081  003A0E  EF0C  F01D         	goto	u4360
  9082  003A12                     u4361:
  9083  003A12  0E01               	movlw	1
  9084  003A14  EF0D  F01D         	goto	u4370
  9085  003A18                     u4360:
  9086  003A18  0E00               	movlw	0
  9087  003A1A                     u4370:
  9088  003A1A  6E01               	movwf	?___fpclassifyf^0,c
  9089  003A1C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9090  003A1E  EF15  F01D         	goto	l1417
  9091  003A22                     l4392:
  9092  003A22  0E00               	movlw	0
  9093  003A24  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9094  003A26  0E04               	movlw	4
  9095  003A28  6E01               	movwf	?___fpclassifyf^0,c
  9096  003A2A                     l1417:
  9097  003A2A  0012               	return		;funcret
  9098  003A2C                     __end_of___fpclassifyf:
  9099                           	callstack 0
  9100                           
  9101 ;; *************** function ___fltol *****************
  9102 ;; Defined at:
  9103 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  f1              4   84[COMRAM] int 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;  exp1            1   93[COMRAM] unsigned char 
  9108 ;;  sign1           1   92[COMRAM] unsigned char 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  4   84[COMRAM] long 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9118 ;;      Params:         4       0       0       0       0       0       0       0       0
  9119 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9120 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9121 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9122 ;;Total ram usage:       10 bytes
  9123 ;; Hardware stack levels used: 1
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		_ReadADC
  9128 ;;		_efgtoa
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text44
  9133  003626                     __ptext44:
  9134                           	callstack 0
  9135  003626                     ___fltol:
  9136                           	callstack 25
  9137  003626  3457               	rlcf	(___fltol@f1+2)^0,w,c
  9138  003628  3458               	rlcf	(___fltol@f1+3)^0,w,c
  9139  00362A  6E5E               	movwf	___fltol@exp1^0,c
  9140  00362C  505E               	movf	___fltol@exp1^0,w,c
  9141  00362E  A4D8               	btfss	status,2,c
  9142  003630  EF1C  F01B         	goto	u4201
  9143  003634  EF1E  F01B         	goto	u4200
  9144  003638                     u4201:
  9145  003638  EF28  F01B         	goto	l4314
  9146  00363C                     u4200:
  9147  00363C                     l4310:
  9148  00363C  0E00               	movlw	0
  9149  00363E  6E55               	movwf	?___fltol^0,c
  9150  003640  0E00               	movlw	0
  9151  003642  6E56               	movwf	(?___fltol+1)^0,c
  9152  003644  0E00               	movlw	0
  9153  003646  6E57               	movwf	(?___fltol+2)^0,c
  9154  003648  0E00               	movlw	0
  9155  00364A  6E58               	movwf	(?___fltol+3)^0,c
  9156  00364C  EF95  F01B         	goto	l807
  9157  003650                     l4314:
  9158  003650  C055  F059         	movff	___fltol@f1,??___fltol
  9159  003654  C056  F05A         	movff	___fltol@f1+1,??___fltol+1
  9160  003658  C057  F05B         	movff	___fltol@f1+2,??___fltol+2
  9161  00365C  C058  F05C         	movff	___fltol@f1+3,??___fltol+3
  9162  003660  0E20               	movlw	32
  9163  003662  EF38  F01B         	goto	u4210
  9164  003666                     u4215:
  9165  003666  90D8               	bcf	status,0,c
  9166  003668  325C               	rrcf	(??___fltol+3)^0,f,c
  9167  00366A  325B               	rrcf	(??___fltol+2)^0,f,c
  9168  00366C  325A               	rrcf	(??___fltol+1)^0,f,c
  9169  00366E  3259               	rrcf	??___fltol^0,f,c
  9170  003670                     u4210:
  9171  003670  2EE8               	decfsz	wreg,f,c
  9172  003672  EF33  F01B         	goto	u4215
  9173  003676  5059               	movf	??___fltol^0,w,c
  9174  003678  6E5D               	movwf	___fltol@sign1^0,c
  9175  00367A  8E57               	bsf	(___fltol@f1+2)^0,7,c
  9176  00367C  0EFF               	movlw	255
  9177  00367E  1655               	andwf	___fltol@f1^0,f,c
  9178  003680  0EFF               	movlw	255
  9179  003682  1656               	andwf	(___fltol@f1+1)^0,f,c
  9180  003684  0EFF               	movlw	255
  9181  003686  1657               	andwf	(___fltol@f1+2)^0,f,c
  9182  003688  0E00               	movlw	0
  9183  00368A  1658               	andwf	(___fltol@f1+3)^0,f,c
  9184  00368C  0E96               	movlw	150
  9185  00368E  5E5E               	subwf	___fltol@exp1^0,f,c
  9186  003690  BE5E               	btfsc	___fltol@exp1^0,7,c
  9187  003692  EF4F  F01B         	goto	u4220
  9188  003696  EF4D  F01B         	goto	u4221
  9189  00369A                     u4221:
  9190  00369A  EF65  F01B         	goto	l4334
  9191  00369E                     u4220:
  9192  00369E  505E               	movf	___fltol@exp1^0,w,c
  9193  0036A0  0A80               	xorlw	128
  9194  0036A2  0F97               	addlw	151
  9195  0036A4  B0D8               	btfsc	status,0,c
  9196  0036A6  EF57  F01B         	goto	u4231
  9197  0036AA  EF59  F01B         	goto	u4230
  9198  0036AE                     u4231:
  9199  0036AE  EF5B  F01B         	goto	l4330
  9200  0036B2                     u4230:
  9201  0036B2  EF1E  F01B         	goto	l4310
  9202  0036B6                     l4330:
  9203  0036B6  90D8               	bcf	status,0,c
  9204  0036B8  3258               	rrcf	(___fltol@f1+3)^0,f,c
  9205  0036BA  3257               	rrcf	(___fltol@f1+2)^0,f,c
  9206  0036BC  3256               	rrcf	(___fltol@f1+1)^0,f,c
  9207  0036BE  3255               	rrcf	___fltol@f1^0,f,c
  9208  0036C0  3E5E               	incfsz	___fltol@exp1^0,f,c
  9209  0036C2  EF5B  F01B         	goto	l4330
  9210  0036C6  EF7D  F01B         	goto	l4344
  9211  0036CA                     l4334:
  9212  0036CA  0E1F               	movlw	31
  9213  0036CC  645E               	cpfsgt	___fltol@exp1^0,c
  9214  0036CE  EF6B  F01B         	goto	u4241
  9215  0036D2  EF6D  F01B         	goto	u4240
  9216  0036D6                     u4241:
  9217  0036D6  EF75  F01B         	goto	l4342
  9218  0036DA                     u4240:
  9219  0036DA  EF1E  F01B         	goto	l4310
  9220  0036DE                     l4340:
  9221  0036DE  90D8               	bcf	status,0,c
  9222  0036E0  3655               	rlcf	___fltol@f1^0,f,c
  9223  0036E2  3656               	rlcf	(___fltol@f1+1)^0,f,c
  9224  0036E4  3657               	rlcf	(___fltol@f1+2)^0,f,c
  9225  0036E6  3658               	rlcf	(___fltol@f1+3)^0,f,c
  9226  0036E8  065E               	decf	___fltol@exp1^0,f,c
  9227  0036EA                     l4342:
  9228  0036EA  505E               	movf	___fltol@exp1^0,w,c
  9229  0036EC  A4D8               	btfss	status,2,c
  9230  0036EE  EF7B  F01B         	goto	u4251
  9231  0036F2  EF7D  F01B         	goto	u4250
  9232  0036F6                     u4251:
  9233  0036F6  EF6F  F01B         	goto	l4340
  9234  0036FA                     u4250:
  9235  0036FA                     l4344:
  9236  0036FA  505D               	movf	___fltol@sign1^0,w,c
  9237  0036FC  B4D8               	btfsc	status,2,c
  9238  0036FE  EF83  F01B         	goto	u4261
  9239  003702  EF85  F01B         	goto	u4260
  9240  003706                     u4261:
  9241  003706  EF8D  F01B         	goto	l4348
  9242  00370A                     u4260:
  9243  00370A  1E58               	comf	(___fltol@f1+3)^0,f,c
  9244  00370C  1E57               	comf	(___fltol@f1+2)^0,f,c
  9245  00370E  1E56               	comf	(___fltol@f1+1)^0,f,c
  9246  003710  6C55               	negf	___fltol@f1^0,c
  9247  003712  0E00               	movlw	0
  9248  003714  2256               	addwfc	(___fltol@f1+1)^0,f,c
  9249  003716  2257               	addwfc	(___fltol@f1+2)^0,f,c
  9250  003718  2258               	addwfc	(___fltol@f1+3)^0,f,c
  9251  00371A                     l4348:
  9252  00371A  C055  F055         	movff	___fltol@f1,?___fltol
  9253  00371E  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  9254  003722  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  9255  003726  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  9256  00372A                     l807:
  9257  00372A  0012               	return		;funcret
  9258  00372C                     __end_of___fltol:
  9259                           	callstack 0
  9260                           
  9261 ;; *************** function ___flsub *****************
  9262 ;; Defined at:
  9263 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  b               4   84[COMRAM] long 
  9266 ;;  a               4   88[COMRAM] long 
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;		None
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  4   84[COMRAM] long 
  9271 ;; Registers used:
  9272 ;;		wreg, status,2, status,0, cstack
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9278 ;;      Params:         8       0       0       0       0       0       0       0       0
  9279 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9281 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9282 ;;Total ram usage:        8 bytes
  9283 ;; Hardware stack levels used: 1
  9284 ;; Hardware stack levels required when called: 1
  9285 ;; This function calls:
  9286 ;;		___fladd
  9287 ;; This function is called by:
  9288 ;;		_efgtoa
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text45
  9293  004614                     __ptext45:
  9294                           	callstack 0
  9295  004614                     ___flsub:
  9296                           	callstack 24
  9297  004614  0E00               	movlw	0
  9298  004616  1A59               	xorwf	___flsub@a^0,f,c
  9299  004618  0E00               	movlw	0
  9300  00461A  1A5A               	xorwf	(___flsub@a+1)^0,f,c
  9301  00461C  0E00               	movlw	0
  9302  00461E  1A5B               	xorwf	(___flsub@a+2)^0,f,c
  9303  004620  0E80               	movlw	128
  9304  004622  1A5C               	xorwf	(___flsub@a+3)^0,f,c
  9305  004624  C055  F045         	movff	___flsub@b,___fladd@b
  9306  004628  C056  F046         	movff	___flsub@b+1,___fladd@b+1
  9307  00462C  C057  F047         	movff	___flsub@b+2,___fladd@b+2
  9308  004630  C058  F048         	movff	___flsub@b+3,___fladd@b+3
  9309  004634  C059  F049         	movff	___flsub@a,___fladd@a
  9310  004638  C05A  F04A         	movff	___flsub@a+1,___fladd@a+1
  9311  00463C  C05B  F04B         	movff	___flsub@a+2,___fladd@a+2
  9312  004640  C05C  F04C         	movff	___flsub@a+3,___fladd@a+3
  9313  004644  EC58  F00D         	call	___fladd	;wreg free
  9314  004648  C045  F055         	movff	?___fladd,?___flsub
  9315  00464C  C046  F056         	movff	?___fladd+1,?___flsub+1
  9316  004650  C047  F057         	movff	?___fladd+2,?___flsub+2
  9317  004654  C048  F058         	movff	?___fladd+3,?___flsub+3
  9318  004658  0012               	return		;funcret
  9319  00465A                     __end_of___flsub:
  9320                           	callstack 0
  9321                           
  9322 ;; *************** function ___fladd *****************
  9323 ;; Defined at:
  9324 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  b               4   68[COMRAM] long 
  9327 ;;  a               4   72[COMRAM] long 
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;  grs             1   83[COMRAM] unsigned char 
  9330 ;;  bexp            1   82[COMRAM] unsigned char 
  9331 ;;  aexp            1   81[COMRAM] unsigned char 
  9332 ;;  signs           1   80[COMRAM] unsigned char 
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  4   68[COMRAM] unsigned char 
  9335 ;; Registers used:
  9336 ;;		wreg, status,2, status,0
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9342 ;;      Params:         8       0       0       0       0       0       0       0       0
  9343 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9344 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9345 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9346 ;;Total ram usage:       16 bytes
  9347 ;; Hardware stack levels used: 1
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_ReadADC
  9352 ;;		___flsub
  9353 ;;		_efgtoa
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           	psect	text46
  9358  001AB0                     __ptext46:
  9359                           	callstack 0
  9360  001AB0                     ___fladd:
  9361                           	callstack 24
  9362  001AB0  5048               	movf	(___fladd@b+3)^0,w,c
  9363  001AB2  0B80               	andlw	128
  9364  001AB4  6E51               	movwf	___fladd@signs^0,c
  9365  001AB6  5048               	movf	(___fladd@b+3)^0,w,c
  9366  001AB8  2448               	addwf	(___fladd@b+3)^0,w,c
  9367  001ABA  6E53               	movwf	___fladd@bexp^0,c
  9368  001ABC  AE47               	btfss	(___fladd@b+2)^0,7,c
  9369  001ABE  EF63  F00D         	goto	u3121
  9370  001AC2  EF65  F00D         	goto	u3120
  9371  001AC6                     u3121:
  9372  001AC6  EF66  F00D         	goto	l3680
  9373  001ACA                     u3120:
  9374  001ACA  8053               	bsf	___fladd@bexp^0,0,c
  9375  001ACC                     l3680:
  9376  001ACC  5053               	movf	___fladd@bexp^0,w,c
  9377  001ACE  B4D8               	btfsc	status,2,c
  9378  001AD0  EF6C  F00D         	goto	u3131
  9379  001AD4  EF6E  F00D         	goto	u3130
  9380  001AD8                     u3131:
  9381  001AD8  EF83  F00D         	goto	l3690
  9382  001ADC                     u3130:
  9383  001ADC  2853               	incf	___fladd@bexp^0,w,c
  9384  001ADE  A4D8               	btfss	status,2,c
  9385  001AE0  EF74  F00D         	goto	u3141
  9386  001AE4  EF76  F00D         	goto	u3140
  9387  001AE8                     u3141:
  9388  001AE8  EF7E  F00D         	goto	l3686
  9389  001AEC                     u3140:
  9390  001AEC  0E00               	movlw	0
  9391  001AEE  6E45               	movwf	___fladd@b^0,c
  9392  001AF0  0E00               	movlw	0
  9393  001AF2  6E46               	movwf	(___fladd@b+1)^0,c
  9394  001AF4  0E00               	movlw	0
  9395  001AF6  6E47               	movwf	(___fladd@b+2)^0,c
  9396  001AF8  0E00               	movlw	0
  9397  001AFA  6E48               	movwf	(___fladd@b+3)^0,c
  9398  001AFC                     l3686:
  9399  001AFC  8E47               	bsf	(___fladd@b+2)^0,7,c
  9400  001AFE  0E00               	movlw	0
  9401  001B00  6E48               	movwf	(___fladd@b+3)^0,c
  9402  001B02  EF8B  F00D         	goto	l3692
  9403  001B06                     l3690:
  9404  001B06  0E00               	movlw	0
  9405  001B08  6E45               	movwf	___fladd@b^0,c
  9406  001B0A  0E00               	movlw	0
  9407  001B0C  6E46               	movwf	(___fladd@b+1)^0,c
  9408  001B0E  0E00               	movlw	0
  9409  001B10  6E47               	movwf	(___fladd@b+2)^0,c
  9410  001B12  0E00               	movlw	0
  9411  001B14  6E48               	movwf	(___fladd@b+3)^0,c
  9412  001B16                     l3692:
  9413  001B16  504C               	movf	(___fladd@a+3)^0,w,c
  9414  001B18  0B80               	andlw	128
  9415  001B1A  6E52               	movwf	___fladd@aexp^0,c
  9416  001B1C  5051               	movf	___fladd@signs^0,w,c
  9417  001B1E  1852               	xorwf	___fladd@aexp^0,w,c
  9418  001B20  B4D8               	btfsc	status,2,c
  9419  001B22  EF95  F00D         	goto	u3151
  9420  001B26  EF97  F00D         	goto	u3150
  9421  001B2A                     u3151:
  9422  001B2A  EF98  F00D         	goto	l3698
  9423  001B2E                     u3150:
  9424  001B2E  8C51               	bsf	___fladd@signs^0,6,c
  9425  001B30                     l3698:
  9426  001B30  504C               	movf	(___fladd@a+3)^0,w,c
  9427  001B32  244C               	addwf	(___fladd@a+3)^0,w,c
  9428  001B34  6E52               	movwf	___fladd@aexp^0,c
  9429  001B36  AE4B               	btfss	(___fladd@a+2)^0,7,c
  9430  001B38  EFA0  F00D         	goto	u3161
  9431  001B3C  EFA2  F00D         	goto	u3160
  9432  001B40                     u3161:
  9433  001B40  EFA3  F00D         	goto	l3704
  9434  001B44                     u3160:
  9435  001B44  8052               	bsf	___fladd@aexp^0,0,c
  9436  001B46                     l3704:
  9437  001B46  5052               	movf	___fladd@aexp^0,w,c
  9438  001B48  B4D8               	btfsc	status,2,c
  9439  001B4A  EFA9  F00D         	goto	u3171
  9440  001B4E  EFAB  F00D         	goto	u3170
  9441  001B52                     u3171:
  9442  001B52  EFC0  F00D         	goto	l3714
  9443  001B56                     u3170:
  9444  001B56  2852               	incf	___fladd@aexp^0,w,c
  9445  001B58  A4D8               	btfss	status,2,c
  9446  001B5A  EFB1  F00D         	goto	u3181
  9447  001B5E  EFB3  F00D         	goto	u3180
  9448  001B62                     u3181:
  9449  001B62  EFBB  F00D         	goto	l3710
  9450  001B66                     u3180:
  9451  001B66  0E00               	movlw	0
  9452  001B68  6E49               	movwf	___fladd@a^0,c
  9453  001B6A  0E00               	movlw	0
  9454  001B6C  6E4A               	movwf	(___fladd@a+1)^0,c
  9455  001B6E  0E00               	movlw	0
  9456  001B70  6E4B               	movwf	(___fladd@a+2)^0,c
  9457  001B72  0E00               	movlw	0
  9458  001B74  6E4C               	movwf	(___fladd@a+3)^0,c
  9459  001B76                     l3710:
  9460  001B76  8E4B               	bsf	(___fladd@a+2)^0,7,c
  9461  001B78  0E00               	movlw	0
  9462  001B7A  6E4C               	movwf	(___fladd@a+3)^0,c
  9463  001B7C  EFC8  F00D         	goto	l3716
  9464  001B80                     l3714:
  9465  001B80  0E00               	movlw	0
  9466  001B82  6E49               	movwf	___fladd@a^0,c
  9467  001B84  0E00               	movlw	0
  9468  001B86  6E4A               	movwf	(___fladd@a+1)^0,c
  9469  001B88  0E00               	movlw	0
  9470  001B8A  6E4B               	movwf	(___fladd@a+2)^0,c
  9471  001B8C  0E00               	movlw	0
  9472  001B8E  6E4C               	movwf	(___fladd@a+3)^0,c
  9473  001B90                     l3716:
  9474  001B90  5053               	movf	___fladd@bexp^0,w,c
  9475  001B92  5C52               	subwf	___fladd@aexp^0,w,c
  9476  001B94  B0D8               	btfsc	status,0,c
  9477  001B96  EFCF  F00D         	goto	u3191
  9478  001B9A  EFD1  F00D         	goto	u3190
  9479  001B9E                     u3191:
  9480  001B9E  EFF8  F00D         	goto	l3752
  9481  001BA2                     u3190:
  9482  001BA2  AC51               	btfss	___fladd@signs^0,6,c
  9483  001BA4  EFD6  F00D         	goto	u3201
  9484  001BA8  EFD8  F00D         	goto	u3200
  9485  001BAC                     u3201:
  9486  001BAC  EFDA  F00D         	goto	l3722
  9487  001BB0                     u3200:
  9488  001BB0  0E80               	movlw	128
  9489  001BB2  1A51               	xorwf	___fladd@signs^0,f,c
  9490  001BB4                     l3722:
  9491  001BB4  C053  F054         	movff	___fladd@bexp,___fladd@grs
  9492  001BB8  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  9493  001BBC  C054  F052         	movff	___fladd@grs,___fladd@aexp
  9494  001BC0  C045  F054         	movff	___fladd@b,___fladd@grs
  9495  001BC4  C049  F045         	movff	___fladd@a,___fladd@b
  9496  001BC8  C054  F049         	movff	___fladd@grs,___fladd@a
  9497  001BCC  C046  F054         	movff	___fladd@b+1,___fladd@grs
  9498  001BD0  C04A  F046         	movff	___fladd@a+1,___fladd@b+1
  9499  001BD4  C054  F04A         	movff	___fladd@grs,___fladd@a+1
  9500  001BD8  C047  F054         	movff	___fladd@b+2,___fladd@grs
  9501  001BDC  C04B  F047         	movff	___fladd@a+2,___fladd@b+2
  9502  001BE0  C054  F04B         	movff	___fladd@grs,___fladd@a+2
  9503  001BE4  C048  F054         	movff	___fladd@b+3,___fladd@grs
  9504  001BE8  C04C  F048         	movff	___fladd@a+3,___fladd@b+3
  9505  001BEC  C054  F04C         	movff	___fladd@grs,___fladd@a+3
  9506  001BF0                     l3752:
  9507  001BF0  0E00               	movlw	0
  9508  001BF2  6E54               	movwf	___fladd@grs^0,c
  9509  001BF4  5053               	movf	___fladd@bexp^0,w,c
  9510  001BF6  C052  F04D         	movff	___fladd@aexp,??___fladd
  9511  001BFA  6A4E               	clrf	(??___fladd+1)^0,c
  9512  001BFC  5E4D               	subwf	??___fladd^0,f,c
  9513  001BFE  0E00               	movlw	0
  9514  001C00  5A4E               	subwfb	(??___fladd+1)^0,f,c
  9515  001C02  BE4E               	btfsc	(??___fladd+1)^0,7,c
  9516  001C04  EF0D  F00E         	goto	u3211
  9517  001C08  504E               	movf	(??___fladd+1)^0,w,c
  9518  001C0A  E109               	bnz	u3210
  9519  001C0C  0E1A               	movlw	26
  9520  001C0E  5C4D               	subwf	??___fladd^0,w,c
  9521  001C10  A0D8               	btfss	status,0,c
  9522  001C12  EF0D  F00E         	goto	u3211
  9523  001C16  EF0F  F00E         	goto	u3210
  9524  001C1A                     u3211:
  9525  001C1A  EF46  F00E         	goto	l1039
  9526  001C1E                     u3210:
  9527  001C1E  5045               	movf	___fladd@b^0,w,c
  9528  001C20  1046               	iorwf	(___fladd@b+1)^0,w,c
  9529  001C22  1047               	iorwf	(___fladd@b+2)^0,w,c
  9530  001C24  1048               	iorwf	(___fladd@b+3)^0,w,c
  9531  001C26  A4D8               	btfss	status,2,c
  9532  001C28  EF18  F00E         	goto	u3221
  9533  001C2C  EF1B  F00E         	goto	u3220
  9534  001C30                     u3221:
  9535  001C30  0E01               	movlw	1
  9536  001C32  EF1C  F00E         	goto	u3230
  9537  001C36                     u3220:
  9538  001C36  0E00               	movlw	0
  9539  001C38                     u3230:
  9540  001C38  6E54               	movwf	___fladd@grs^0,c
  9541  001C3A  0E00               	movlw	0
  9542  001C3C  6E45               	movwf	___fladd@b^0,c
  9543  001C3E  0E00               	movlw	0
  9544  001C40  6E46               	movwf	(___fladd@b+1)^0,c
  9545  001C42  0E00               	movlw	0
  9546  001C44  6E47               	movwf	(___fladd@b+2)^0,c
  9547  001C46  0E00               	movlw	0
  9548  001C48  6E48               	movwf	(___fladd@b+3)^0,c
  9549  001C4A  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  9550  001C4E  EF4F  F00E         	goto	l1038
  9551  001C52                     l1040:
  9552  001C52  A054               	btfss	___fladd@grs^0,0,c
  9553  001C54  EF2E  F00E         	goto	u3241
  9554  001C58  EF30  F00E         	goto	u3240
  9555  001C5C                     u3241:
  9556  001C5C  EF36  F00E         	goto	l3764
  9557  001C60                     u3240:
  9558  001C60  90D8               	bcf	status,0,c
  9559  001C62  3054               	rrcf	___fladd@grs^0,w,c
  9560  001C64  0901               	iorlw	1
  9561  001C66  6E54               	movwf	___fladd@grs^0,c
  9562  001C68  EF38  F00E         	goto	l3766
  9563  001C6C                     l3764:
  9564  001C6C  90D8               	bcf	status,0,c
  9565  001C6E  3254               	rrcf	___fladd@grs^0,f,c
  9566  001C70                     l3766:
  9567  001C70  A045               	btfss	___fladd@b^0,0,c
  9568  001C72  EF3D  F00E         	goto	u3251
  9569  001C76  EF3F  F00E         	goto	u3250
  9570  001C7A                     u3251:
  9571  001C7A  EF40  F00E         	goto	l3770
  9572  001C7E                     u3250:
  9573  001C7E  8E54               	bsf	___fladd@grs^0,7,c
  9574  001C80                     l3770:
  9575  001C80  3448               	rlcf	(___fladd@b+3)^0,w,c
  9576  001C82  3248               	rrcf	(___fladd@b+3)^0,f,c
  9577  001C84  3247               	rrcf	(___fladd@b+2)^0,f,c
  9578  001C86  3246               	rrcf	(___fladd@b+1)^0,f,c
  9579  001C88  3245               	rrcf	___fladd@b^0,f,c
  9580  001C8A  2A53               	incf	___fladd@bexp^0,f,c
  9581  001C8C                     l1039:
  9582  001C8C  5052               	movf	___fladd@aexp^0,w,c
  9583  001C8E  5C53               	subwf	___fladd@bexp^0,w,c
  9584  001C90  A0D8               	btfss	status,0,c
  9585  001C92  EF4D  F00E         	goto	u3261
  9586  001C96  EF4F  F00E         	goto	u3260
  9587  001C9A                     u3261:
  9588  001C9A  EF29  F00E         	goto	l1040
  9589  001C9E                     u3260:
  9590  001C9E                     l1038:
  9591  001C9E  BC51               	btfsc	___fladd@signs^0,6,c
  9592  001CA0  EF54  F00E         	goto	u3271
  9593  001CA4  EF56  F00E         	goto	u3270
  9594  001CA8                     u3271:
  9595  001CA8  EF96  F00E         	goto	l3798
  9596  001CAC                     u3270:
  9597  001CAC  5053               	movf	___fladd@bexp^0,w,c
  9598  001CAE  A4D8               	btfss	status,2,c
  9599  001CB0  EF5C  F00E         	goto	u3281
  9600  001CB4  EF5E  F00E         	goto	u3280
  9601  001CB8                     u3281:
  9602  001CB8  EF68  F00E         	goto	l3780
  9603  001CBC                     u3280:
  9604  001CBC  0E00               	movlw	0
  9605  001CBE  6E45               	movwf	?___fladd^0,c
  9606  001CC0  0E00               	movlw	0
  9607  001CC2  6E46               	movwf	(?___fladd+1)^0,c
  9608  001CC4  0E00               	movlw	0
  9609  001CC6  6E47               	movwf	(?___fladd+2)^0,c
  9610  001CC8  0E00               	movlw	0
  9611  001CCA  6E48               	movwf	(?___fladd+3)^0,c
  9612  001CCC  EFB7  F00F         	goto	l1047
  9613  001CD0                     l3780:
  9614  001CD0  5049               	movf	___fladd@a^0,w,c
  9615  001CD2  2645               	addwf	___fladd@b^0,f,c
  9616  001CD4  504A               	movf	(___fladd@a+1)^0,w,c
  9617  001CD6  2246               	addwfc	(___fladd@b+1)^0,f,c
  9618  001CD8  504B               	movf	(___fladd@a+2)^0,w,c
  9619  001CDA  2247               	addwfc	(___fladd@b+2)^0,f,c
  9620  001CDC  504C               	movf	(___fladd@a+3)^0,w,c
  9621  001CDE  2248               	addwfc	(___fladd@b+3)^0,f,c
  9622  001CE0  A048               	btfss	(___fladd@b+3)^0,0,c
  9623  001CE2  EF75  F00E         	goto	u3291
  9624  001CE6  EF77  F00E         	goto	u3290
  9625  001CEA                     u3291:
  9626  001CEA  EF23  F00F         	goto	l3834
  9627  001CEE                     u3290:
  9628  001CEE  A054               	btfss	___fladd@grs^0,0,c
  9629  001CF0  EF7C  F00E         	goto	u3301
  9630  001CF4  EF7E  F00E         	goto	u3300
  9631  001CF8                     u3301:
  9632  001CF8  EF84  F00E         	goto	l3788
  9633  001CFC                     u3300:
  9634  001CFC  90D8               	bcf	status,0,c
  9635  001CFE  3054               	rrcf	___fladd@grs^0,w,c
  9636  001D00  0901               	iorlw	1
  9637  001D02  6E54               	movwf	___fladd@grs^0,c
  9638  001D04  EF86  F00E         	goto	l3790
  9639  001D08                     l3788:
  9640  001D08  90D8               	bcf	status,0,c
  9641  001D0A  3254               	rrcf	___fladd@grs^0,f,c
  9642  001D0C                     l3790:
  9643  001D0C  A045               	btfss	___fladd@b^0,0,c
  9644  001D0E  EF8B  F00E         	goto	u3311
  9645  001D12  EF8D  F00E         	goto	u3310
  9646  001D16                     u3311:
  9647  001D16  EF8E  F00E         	goto	l3794
  9648  001D1A                     u3310:
  9649  001D1A  8E54               	bsf	___fladd@grs^0,7,c
  9650  001D1C                     l3794:
  9651  001D1C  3448               	rlcf	(___fladd@b+3)^0,w,c
  9652  001D1E  3248               	rrcf	(___fladd@b+3)^0,f,c
  9653  001D20  3247               	rrcf	(___fladd@b+2)^0,f,c
  9654  001D22  3246               	rrcf	(___fladd@b+1)^0,f,c
  9655  001D24  3245               	rrcf	___fladd@b^0,f,c
  9656  001D26  2A53               	incf	___fladd@bexp^0,f,c
  9657  001D28  EF23  F00F         	goto	l3834
  9658  001D2C                     l3798:
  9659  001D2C  5049               	movf	___fladd@a^0,w,c
  9660  001D2E  5C45               	subwf	___fladd@b^0,w,c
  9661  001D30  504A               	movf	(___fladd@a+1)^0,w,c
  9662  001D32  5846               	subwfb	(___fladd@b+1)^0,w,c
  9663  001D34  504B               	movf	(___fladd@a+2)^0,w,c
  9664  001D36  5847               	subwfb	(___fladd@b+2)^0,w,c
  9665  001D38  5048               	movf	(___fladd@b+3)^0,w,c
  9666  001D3A  0A80               	xorlw	128
  9667  001D3C  6E4D               	movwf	??___fladd^0,c
  9668  001D3E  504C               	movf	(___fladd@a+3)^0,w,c
  9669  001D40  0A80               	xorlw	128
  9670  001D42  584D               	subwfb	??___fladd^0,w,c
  9671  001D44  B0D8               	btfsc	status,0,c
  9672  001D46  EFA7  F00E         	goto	u3321
  9673  001D4A  EFA9  F00E         	goto	u3320
  9674  001D4E                     u3321:
  9675  001D4E  EFD4  F00E         	goto	l3808
  9676  001D52                     u3320:
  9677  001D52  5045               	movf	___fladd@b^0,w,c
  9678  001D54  5C49               	subwf	___fladd@a^0,w,c
  9679  001D56  6E4D               	movwf	??___fladd^0,c
  9680  001D58  5046               	movf	(___fladd@b+1)^0,w,c
  9681  001D5A  584A               	subwfb	(___fladd@a+1)^0,w,c
  9682  001D5C  6E4E               	movwf	(??___fladd+1)^0,c
  9683  001D5E  5047               	movf	(___fladd@b+2)^0,w,c
  9684  001D60  584B               	subwfb	(___fladd@a+2)^0,w,c
  9685  001D62  6E4F               	movwf	(??___fladd+2)^0,c
  9686  001D64  5048               	movf	(___fladd@b+3)^0,w,c
  9687  001D66  584C               	subwfb	(___fladd@a+3)^0,w,c
  9688  001D68  6E50               	movwf	(??___fladd+3)^0,c
  9689  001D6A  0EFF               	movlw	255
  9690  001D6C  244D               	addwf	??___fladd^0,w,c
  9691  001D6E  6E45               	movwf	___fladd@b^0,c
  9692  001D70  0EFF               	movlw	255
  9693  001D72  204E               	addwfc	(??___fladd+1)^0,w,c
  9694  001D74  6E46               	movwf	(___fladd@b+1)^0,c
  9695  001D76  0EFF               	movlw	255
  9696  001D78  204F               	addwfc	(??___fladd+2)^0,w,c
  9697  001D7A  6E47               	movwf	(___fladd@b+2)^0,c
  9698  001D7C  0EFF               	movlw	255
  9699  001D7E  2050               	addwfc	(??___fladd+3)^0,w,c
  9700  001D80  6E48               	movwf	(___fladd@b+3)^0,c
  9701  001D82  0E80               	movlw	128
  9702  001D84  1A51               	xorwf	___fladd@signs^0,f,c
  9703  001D86  6C54               	negf	___fladd@grs^0,c
  9704  001D88  5054               	movf	___fladd@grs^0,w,c
  9705  001D8A  A4D8               	btfss	status,2,c
  9706  001D8C  EFCA  F00E         	goto	u3331
  9707  001D90  EFCC  F00E         	goto	u3330
  9708  001D94                     u3331:
  9709  001D94  EFDC  F00E         	goto	l1055
  9710  001D98                     u3330:
  9711  001D98  0E01               	movlw	1
  9712  001D9A  2645               	addwf	___fladd@b^0,f,c
  9713  001D9C  0E00               	movlw	0
  9714  001D9E  2246               	addwfc	(___fladd@b+1)^0,f,c
  9715  001DA0  2247               	addwfc	(___fladd@b+2)^0,f,c
  9716  001DA2  2248               	addwfc	(___fladd@b+3)^0,f,c
  9717  001DA4  EFDC  F00E         	goto	l1055
  9718  001DA8                     l3808:
  9719  001DA8  5049               	movf	___fladd@a^0,w,c
  9720  001DAA  5E45               	subwf	___fladd@b^0,f,c
  9721  001DAC  504A               	movf	(___fladd@a+1)^0,w,c
  9722  001DAE  5A46               	subwfb	(___fladd@b+1)^0,f,c
  9723  001DB0  504B               	movf	(___fladd@a+2)^0,w,c
  9724  001DB2  5A47               	subwfb	(___fladd@b+2)^0,f,c
  9725  001DB4  504C               	movf	(___fladd@a+3)^0,w,c
  9726  001DB6  5A48               	subwfb	(___fladd@b+3)^0,f,c
  9727  001DB8                     l1055:
  9728  001DB8  5045               	movf	___fladd@b^0,w,c
  9729  001DBA  1046               	iorwf	(___fladd@b+1)^0,w,c
  9730  001DBC  1047               	iorwf	(___fladd@b+2)^0,w,c
  9731  001DBE  1048               	iorwf	(___fladd@b+3)^0,w,c
  9732  001DC0  A4D8               	btfss	status,2,c
  9733  001DC2  EFE5  F00E         	goto	u3341
  9734  001DC6  EFE7  F00E         	goto	u3340
  9735  001DCA                     u3341:
  9736  001DCA  EF1C  F00F         	goto	l3832
  9737  001DCE                     u3340:
  9738  001DCE  5054               	movf	___fladd@grs^0,w,c
  9739  001DD0  A4D8               	btfss	status,2,c
  9740  001DD2  EFED  F00E         	goto	u3351
  9741  001DD6  EFEF  F00E         	goto	u3350
  9742  001DDA                     u3351:
  9743  001DDA  EF1C  F00F         	goto	l3832
  9744  001DDE                     u3350:
  9745  001DDE  0E00               	movlw	0
  9746  001DE0  6E45               	movwf	?___fladd^0,c
  9747  001DE2  0E00               	movlw	0
  9748  001DE4  6E46               	movwf	(?___fladd+1)^0,c
  9749  001DE6  0E00               	movlw	0
  9750  001DE8  6E47               	movwf	(?___fladd+2)^0,c
  9751  001DEA  0E00               	movlw	0
  9752  001DEC  6E48               	movwf	(?___fladd+3)^0,c
  9753  001DEE  EFB7  F00F         	goto	l1047
  9754  001DF2                     l3816:
  9755  001DF2  90D8               	bcf	status,0,c
  9756  001DF4  3645               	rlcf	___fladd@b^0,f,c
  9757  001DF6  3646               	rlcf	(___fladd@b+1)^0,f,c
  9758  001DF8  3647               	rlcf	(___fladd@b+2)^0,f,c
  9759  001DFA  3648               	rlcf	(___fladd@b+3)^0,f,c
  9760  001DFC  AE54               	btfss	___fladd@grs^0,7,c
  9761  001DFE  EF03  F00F         	goto	u3361
  9762  001E02  EF05  F00F         	goto	u3360
  9763  001E06                     u3361:
  9764  001E06  EF06  F00F         	goto	l3822
  9765  001E0A                     u3360:
  9766  001E0A  8045               	bsf	___fladd@b^0,0,c
  9767  001E0C                     l3822:
  9768  001E0C  A054               	btfss	___fladd@grs^0,0,c
  9769  001E0E  EF0B  F00F         	goto	u3371
  9770  001E12  EF0D  F00F         	goto	u3370
  9771  001E16                     u3371:
  9772  001E16  EF11  F00F         	goto	l3826
  9773  001E1A                     u3370:
  9774  001E1A  80D8               	bsf	status,0,c
  9775  001E1C  3654               	rlcf	___fladd@grs^0,f,c
  9776  001E1E  EF13  F00F         	goto	l3828
  9777  001E22                     l3826:
  9778  001E22  90D8               	bcf	status,0,c
  9779  001E24  3654               	rlcf	___fladd@grs^0,f,c
  9780  001E26                     l3828:
  9781  001E26  5053               	movf	___fladd@bexp^0,w,c
  9782  001E28  B4D8               	btfsc	status,2,c
  9783  001E2A  EF19  F00F         	goto	u3381
  9784  001E2E  EF1B  F00F         	goto	u3380
  9785  001E32                     u3381:
  9786  001E32  EF1C  F00F         	goto	l3832
  9787  001E36                     u3380:
  9788  001E36  0653               	decf	___fladd@bexp^0,f,c
  9789  001E38                     l3832:
  9790  001E38  AE47               	btfss	(___fladd@b+2)^0,7,c
  9791  001E3A  EF21  F00F         	goto	u3391
  9792  001E3E  EF23  F00F         	goto	u3390
  9793  001E42                     u3391:
  9794  001E42  EFF9  F00E         	goto	l3816
  9795  001E46                     u3390:
  9796  001E46                     l3834:
  9797  001E46  0E00               	movlw	0
  9798  001E48  6E52               	movwf	___fladd@aexp^0,c
  9799  001E4A  AE54               	btfss	___fladd@grs^0,7,c
  9800  001E4C  EF2A  F00F         	goto	u3401
  9801  001E50  EF2C  F00F         	goto	u3400
  9802  001E54                     u3401:
  9803  001E54  EF44  F00F         	goto	l1064
  9804  001E58                     u3400:
  9805  001E58  C054  F04D         	movff	___fladd@grs,??___fladd
  9806  001E5C  0E7F               	movlw	127
  9807  001E5E  164D               	andwf	??___fladd^0,f,c
  9808  001E60  B4D8               	btfsc	status,2,c
  9809  001E62  EF35  F00F         	goto	u3411
  9810  001E66  EF37  F00F         	goto	u3410
  9811  001E6A                     u3411:
  9812  001E6A  EF3B  F00F         	goto	l1065
  9813  001E6E                     u3410:
  9814  001E6E                     l3840:
  9815  001E6E  0E01               	movlw	1
  9816  001E70  6E52               	movwf	___fladd@aexp^0,c
  9817  001E72  EF44  F00F         	goto	l1064
  9818  001E76                     l1065:
  9819  001E76  A045               	btfss	___fladd@b^0,0,c
  9820  001E78  EF40  F00F         	goto	u3421
  9821  001E7C  EF42  F00F         	goto	u3420
  9822  001E80                     u3421:
  9823  001E80  EF44  F00F         	goto	l1064
  9824  001E84                     u3420:
  9825  001E84  EF37  F00F         	goto	l3840
  9826  001E88                     l1064:
  9827  001E88  5052               	movf	___fladd@aexp^0,w,c
  9828  001E8A  B4D8               	btfsc	status,2,c
  9829  001E8C  EF4A  F00F         	goto	u3431
  9830  001E90  EF4C  F00F         	goto	u3430
  9831  001E94                     u3431:
  9832  001E94  EF77  F00F         	goto	l3852
  9833  001E98                     u3430:
  9834  001E98  0E01               	movlw	1
  9835  001E9A  2645               	addwf	___fladd@b^0,f,c
  9836  001E9C  0E00               	movlw	0
  9837  001E9E  2246               	addwfc	(___fladd@b+1)^0,f,c
  9838  001EA0  2247               	addwfc	(___fladd@b+2)^0,f,c
  9839  001EA2  2248               	addwfc	(___fladd@b+3)^0,f,c
  9840  001EA4  A048               	btfss	(___fladd@b+3)^0,0,c
  9841  001EA6  EF57  F00F         	goto	u3441
  9842  001EAA  EF59  F00F         	goto	u3440
  9843  001EAE                     u3441:
  9844  001EAE  EF77  F00F         	goto	l3852
  9845  001EB2                     u3440:
  9846  001EB2  C045  F04D         	movff	___fladd@b,??___fladd
  9847  001EB6  C046  F04E         	movff	___fladd@b+1,??___fladd+1
  9848  001EBA  C047  F04F         	movff	___fladd@b+2,??___fladd+2
  9849  001EBE  C048  F050         	movff	___fladd@b+3,??___fladd+3
  9850  001EC2  3450               	rlcf	(??___fladd+3)^0,w,c
  9851  001EC4  3250               	rrcf	(??___fladd+3)^0,f,c
  9852  001EC6  324F               	rrcf	(??___fladd+2)^0,f,c
  9853  001EC8  324E               	rrcf	(??___fladd+1)^0,f,c
  9854  001ECA  324D               	rrcf	??___fladd^0,f,c
  9855  001ECC  C04D  F045         	movff	??___fladd,___fladd@b
  9856  001ED0  C04E  F046         	movff	??___fladd+1,___fladd@b+1
  9857  001ED4  C04F  F047         	movff	??___fladd+2,___fladd@b+2
  9858  001ED8  C050  F048         	movff	??___fladd+3,___fladd@b+3
  9859  001EDC  2853               	incf	___fladd@bexp^0,w,c
  9860  001EDE  B4D8               	btfsc	status,2,c
  9861  001EE0  EF74  F00F         	goto	u3451
  9862  001EE4  EF76  F00F         	goto	u3450
  9863  001EE8                     u3451:
  9864  001EE8  EF77  F00F         	goto	l3852
  9865  001EEC                     u3450:
  9866  001EEC  2A53               	incf	___fladd@bexp^0,f,c
  9867  001EEE                     l3852:
  9868  001EEE  2853               	incf	___fladd@bexp^0,w,c
  9869  001EF0  B4D8               	btfsc	status,2,c
  9870  001EF2  EF7D  F00F         	goto	u3461
  9871  001EF6  EF7F  F00F         	goto	u3460
  9872  001EFA                     u3461:
  9873  001EFA  EF87  F00F         	goto	l3856
  9874  001EFE                     u3460:
  9875  001EFE  5053               	movf	___fladd@bexp^0,w,c
  9876  001F00  A4D8               	btfss	status,2,c
  9877  001F02  EF85  F00F         	goto	u3471
  9878  001F06  EF87  F00F         	goto	u3470
  9879  001F0A                     u3471:
  9880  001F0A  EF99  F00F         	goto	l3860
  9881  001F0E                     u3470:
  9882  001F0E                     l3856:
  9883  001F0E  0E00               	movlw	0
  9884  001F10  6E45               	movwf	___fladd@b^0,c
  9885  001F12  0E00               	movlw	0
  9886  001F14  6E46               	movwf	(___fladd@b+1)^0,c
  9887  001F16  0E00               	movlw	0
  9888  001F18  6E47               	movwf	(___fladd@b+2)^0,c
  9889  001F1A  0E00               	movlw	0
  9890  001F1C  6E48               	movwf	(___fladd@b+3)^0,c
  9891  001F1E  5053               	movf	___fladd@bexp^0,w,c
  9892  001F20  A4D8               	btfss	status,2,c
  9893  001F22  EF95  F00F         	goto	u3481
  9894  001F26  EF97  F00F         	goto	u3480
  9895  001F2A                     u3481:
  9896  001F2A  EF99  F00F         	goto	l3860
  9897  001F2E                     u3480:
  9898  001F2E  0E00               	movlw	0
  9899  001F30  6E51               	movwf	___fladd@signs^0,c
  9900  001F32                     l3860:
  9901  001F32  A053               	btfss	___fladd@bexp^0,0,c
  9902  001F34  EF9E  F00F         	goto	u3491
  9903  001F38  EFA0  F00F         	goto	u3490
  9904  001F3C                     u3491:
  9905  001F3C  EFA3  F00F         	goto	l3864
  9906  001F40                     u3490:
  9907  001F40  8E47               	bsf	(___fladd@b+2)^0,7,c
  9908  001F42  EFA4  F00F         	goto	l3866
  9909  001F46                     l3864:
  9910  001F46  9E47               	bcf	(___fladd@b+2)^0,7,c
  9911  001F48                     l3866:
  9912  001F48  90D8               	bcf	status,0,c
  9913  001F4A  3053               	rrcf	___fladd@bexp^0,w,c
  9914  001F4C  6E48               	movwf	(___fladd@b+3)^0,c
  9915  001F4E  AE51               	btfss	___fladd@signs^0,7,c
  9916  001F50  EFAC  F00F         	goto	u3501
  9917  001F54  EFAE  F00F         	goto	u3500
  9918  001F58                     u3501:
  9919  001F58  EFAF  F00F         	goto	l3872
  9920  001F5C                     u3500:
  9921  001F5C  8E48               	bsf	(___fladd@b+3)^0,7,c
  9922  001F5E                     l3872:
  9923  001F5E  C045  F045         	movff	___fladd@b,?___fladd
  9924  001F62  C046  F046         	movff	___fladd@b+1,?___fladd+1
  9925  001F66  C047  F047         	movff	___fladd@b+2,?___fladd+2
  9926  001F6A  C048  F048         	movff	___fladd@b+3,?___fladd+3
  9927  001F6E                     l1047:
  9928  001F6E  0012               	return		;funcret
  9929  001F70                     __end_of___fladd:
  9930                           	callstack 0
  9931                           
  9932 ;; *************** function ___flneg *****************
  9933 ;; Defined at:
  9934 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;  f1              4    0[COMRAM] unsigned char 
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  4    0[COMRAM] unsigned char 
  9941 ;; Registers used:
  9942 ;;		wreg, status,2, status,0
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9948 ;;      Params:         4       0       0       0       0       0       0       0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9951 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9952 ;;Total ram usage:        4 bytes
  9953 ;; Hardware stack levels used: 1
  9954 ;; This function calls:
  9955 ;;		Nothing
  9956 ;; This function is called by:
  9957 ;;		_efgtoa
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text47
  9962  0047C4                     __ptext47:
  9963                           	callstack 0
  9964  0047C4                     ___flneg:
  9965                           	callstack 25
  9966  0047C4  5001               	movf	___flneg@f1^0,w,c
  9967  0047C6  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9968  0047C8  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9969  0047CA  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9970  0047CC  B4D8               	btfsc	status,2,c
  9971  0047CE  EFEB  F023         	goto	u4191
  9972  0047D2  EFED  F023         	goto	u4190
  9973  0047D6                     u4191:
  9974  0047D6  EFF5  F023         	goto	l4304
  9975  0047DA                     u4190:
  9976  0047DA  0E00               	movlw	0
  9977  0047DC  1A01               	xorwf	___flneg@f1^0,f,c
  9978  0047DE  0E00               	movlw	0
  9979  0047E0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9980  0047E2  0E00               	movlw	0
  9981  0047E4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9982  0047E6  0E80               	movlw	128
  9983  0047E8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9984  0047EA                     l4304:
  9985  0047EA  C001  F001         	movff	___flneg@f1,?___flneg
  9986  0047EE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9987  0047F2  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9988  0047F6  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9989  0047FA  0012               	return		;funcret
  9990  0047FC                     __end_of___flneg:
  9991                           	callstack 0
  9992                           
  9993 ;; *************** function ___flmul *****************
  9994 ;; Defined at:
  9995 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  b               4   18[COMRAM] unsigned char 
  9998 ;;  a               4   22[COMRAM] unsigned char 
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;  prod            4   37[COMRAM] struct .
 10001 ;;  grs             4   31[COMRAM] unsigned long 
 10002 ;;  temp            2   41[COMRAM] struct .
 10003 ;;  bexp            1   36[COMRAM] unsigned char 
 10004 ;;  aexp            1   35[COMRAM] unsigned char 
 10005 ;;  sign            1   30[COMRAM] unsigned char 
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  4   18[COMRAM] unsigned char 
 10008 ;; Registers used:
 10009 ;;		wreg, status,2, status,0, prodl, prodh
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10015 ;;      Params:         8       0       0       0       0       0       0       0       0
 10016 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10017 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10018 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10019 ;;Total ram usage:       25 bytes
 10020 ;; Hardware stack levels used: 1
 10021 ;; This function calls:
 10022 ;;		Nothing
 10023 ;; This function is called by:
 10024 ;;		_ReadADC
 10025 ;;		_efgtoa
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text48
 10030  001F70                     __ptext48:
 10031                           	callstack 0
 10032  001F70                     ___flmul:
 10033                           	callstack 25
 10034  001F70  5016               	movf	(___flmul@b+3)^0,w,c
 10035  001F72  0B80               	andlw	128
 10036  001F74  6E1F               	movwf	___flmul@sign^0,c
 10037  001F76  5016               	movf	(___flmul@b+3)^0,w,c
 10038  001F78  2416               	addwf	(___flmul@b+3)^0,w,c
 10039  001F7A  6E25               	movwf	___flmul@bexp^0,c
 10040  001F7C  AE15               	btfss	(___flmul@b+2)^0,7,c
 10041  001F7E  EFC3  F00F         	goto	u3801
 10042  001F82  EFC5  F00F         	goto	u3800
 10043  001F86                     u3801:
 10044  001F86  EFC6  F00F         	goto	l4052
 10045  001F8A                     u3800:
 10046  001F8A  8025               	bsf	___flmul@bexp^0,0,c
 10047  001F8C                     l4052:
 10048  001F8C  5025               	movf	___flmul@bexp^0,w,c
 10049  001F8E  B4D8               	btfsc	status,2,c
 10050  001F90  EFCC  F00F         	goto	u3811
 10051  001F94  EFCE  F00F         	goto	u3810
 10052  001F98                     u3811:
 10053  001F98  EFE1  F00F         	goto	l4060
 10054  001F9C                     u3810:
 10055  001F9C  2825               	incf	___flmul@bexp^0,w,c
 10056  001F9E  A4D8               	btfss	status,2,c
 10057  001FA0  EFD4  F00F         	goto	u3821
 10058  001FA4  EFD6  F00F         	goto	u3820
 10059  001FA8                     u3821:
 10060  001FA8  EFDE  F00F         	goto	l4058
 10061  001FAC                     u3820:
 10062  001FAC  0E00               	movlw	0
 10063  001FAE  6E13               	movwf	___flmul@b^0,c
 10064  001FB0  0E00               	movlw	0
 10065  001FB2  6E14               	movwf	(___flmul@b+1)^0,c
 10066  001FB4  0E00               	movlw	0
 10067  001FB6  6E15               	movwf	(___flmul@b+2)^0,c
 10068  001FB8  0E00               	movlw	0
 10069  001FBA  6E16               	movwf	(___flmul@b+3)^0,c
 10070  001FBC                     l4058:
 10071  001FBC  8E15               	bsf	(___flmul@b+2)^0,7,c
 10072  001FBE  EFE9  F00F         	goto	l4062
 10073  001FC2                     l4060:
 10074  001FC2  0E00               	movlw	0
 10075  001FC4  6E13               	movwf	___flmul@b^0,c
 10076  001FC6  0E00               	movlw	0
 10077  001FC8  6E14               	movwf	(___flmul@b+1)^0,c
 10078  001FCA  0E00               	movlw	0
 10079  001FCC  6E15               	movwf	(___flmul@b+2)^0,c
 10080  001FCE  0E00               	movlw	0
 10081  001FD0  6E16               	movwf	(___flmul@b+3)^0,c
 10082  001FD2                     l4062:
 10083  001FD2  501A               	movf	(___flmul@a+3)^0,w,c
 10084  001FD4  0B80               	andlw	128
 10085  001FD6  1A1F               	xorwf	___flmul@sign^0,f,c
 10086  001FD8  501A               	movf	(___flmul@a+3)^0,w,c
 10087  001FDA  241A               	addwf	(___flmul@a+3)^0,w,c
 10088  001FDC  6E24               	movwf	___flmul@aexp^0,c
 10089  001FDE  AE19               	btfss	(___flmul@a+2)^0,7,c
 10090  001FE0  EFF4  F00F         	goto	u3831
 10091  001FE4  EFF6  F00F         	goto	u3830
 10092  001FE8                     u3831:
 10093  001FE8  EFF7  F00F         	goto	l4070
 10094  001FEC                     u3830:
 10095  001FEC  8024               	bsf	___flmul@aexp^0,0,c
 10096  001FEE                     l4070:
 10097  001FEE  5024               	movf	___flmul@aexp^0,w,c
 10098  001FF0  B4D8               	btfsc	status,2,c
 10099  001FF2  EFFD  F00F         	goto	u3841
 10100  001FF6  EFFF  F00F         	goto	u3840
 10101  001FFA                     u3841:
 10102  001FFA  EF12  F010         	goto	l4078
 10103  001FFE                     u3840:
 10104  001FFE  2824               	incf	___flmul@aexp^0,w,c
 10105  002000  A4D8               	btfss	status,2,c
 10106  002002  EF05  F010         	goto	u3851
 10107  002006  EF07  F010         	goto	u3850
 10108  00200A                     u3851:
 10109  00200A  EF0F  F010         	goto	l4076
 10110  00200E                     u3850:
 10111  00200E  0E00               	movlw	0
 10112  002010  6E17               	movwf	___flmul@a^0,c
 10113  002012  0E00               	movlw	0
 10114  002014  6E18               	movwf	(___flmul@a+1)^0,c
 10115  002016  0E00               	movlw	0
 10116  002018  6E19               	movwf	(___flmul@a+2)^0,c
 10117  00201A  0E00               	movlw	0
 10118  00201C  6E1A               	movwf	(___flmul@a+3)^0,c
 10119  00201E                     l4076:
 10120  00201E  8E19               	bsf	(___flmul@a+2)^0,7,c
 10121  002020  EF1A  F010         	goto	l1124
 10122  002024                     l4078:
 10123  002024  0E00               	movlw	0
 10124  002026  6E17               	movwf	___flmul@a^0,c
 10125  002028  0E00               	movlw	0
 10126  00202A  6E18               	movwf	(___flmul@a+1)^0,c
 10127  00202C  0E00               	movlw	0
 10128  00202E  6E19               	movwf	(___flmul@a+2)^0,c
 10129  002030  0E00               	movlw	0
 10130  002032  6E1A               	movwf	(___flmul@a+3)^0,c
 10131  002034                     l1124:
 10132  002034  5024               	movf	___flmul@aexp^0,w,c
 10133  002036  B4D8               	btfsc	status,2,c
 10134  002038  EF20  F010         	goto	u3861
 10135  00203C  EF22  F010         	goto	u3860
 10136  002040                     u3861:
 10137  002040  EF2A  F010         	goto	l4082
 10138  002044                     u3860:
 10139  002044  5025               	movf	___flmul@bexp^0,w,c
 10140  002046  A4D8               	btfss	status,2,c
 10141  002048  EF28  F010         	goto	u3871
 10142  00204C  EF2A  F010         	goto	u3870
 10143  002050                     u3871:
 10144  002050  EF34  F010         	goto	l4086
 10145  002054                     u3870:
 10146  002054                     l4082:
 10147  002054  0E00               	movlw	0
 10148  002056  6E13               	movwf	?___flmul^0,c
 10149  002058  0E00               	movlw	0
 10150  00205A  6E14               	movwf	(?___flmul+1)^0,c
 10151  00205C  0E00               	movlw	0
 10152  00205E  6E15               	movwf	(?___flmul+2)^0,c
 10153  002060  0E00               	movlw	0
 10154  002062  6E16               	movwf	(?___flmul+3)^0,c
 10155  002064  EFCC  F011         	goto	l1128
 10156  002068                     l4086:
 10157  002068  5019               	movf	(___flmul@a+2)^0,w,c
 10158  00206A  0213               	mulwf	___flmul@b^0,c
 10159  00206C  CFF3 F02A          	movff	prodl,___flmul@temp
 10160  002070  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10161  002074  502A               	movf	___flmul@temp^0,w,c
 10162  002076  6E20               	movwf	___flmul@grs^0,c
 10163  002078  6A21               	clrf	(___flmul@grs+1)^0,c
 10164  00207A  6A22               	clrf	(___flmul@grs+2)^0,c
 10165  00207C  6A23               	clrf	(___flmul@grs+3)^0,c
 10166  00207E  502B               	movf	(___flmul@temp+1)^0,w,c
 10167  002080  6E26               	movwf	___flmul@prod^0,c
 10168  002082  6A27               	clrf	(___flmul@prod+1)^0,c
 10169  002084  6A28               	clrf	(___flmul@prod+2)^0,c
 10170  002086  6A29               	clrf	(___flmul@prod+3)^0,c
 10171  002088  5018               	movf	(___flmul@a+1)^0,w,c
 10172  00208A  0214               	mulwf	(___flmul@b+1)^0,c
 10173  00208C  CFF3 F02A          	movff	prodl,___flmul@temp
 10174  002090  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10175  002094  502A               	movf	___flmul@temp^0,w,c
 10176  002096  2620               	addwf	___flmul@grs^0,f,c
 10177  002098  0E00               	movlw	0
 10178  00209A  2221               	addwfc	(___flmul@grs+1)^0,f,c
 10179  00209C  2222               	addwfc	(___flmul@grs+2)^0,f,c
 10180  00209E  2223               	addwfc	(___flmul@grs+3)^0,f,c
 10181  0020A0  502B               	movf	(___flmul@temp+1)^0,w,c
 10182  0020A2  2626               	addwf	___flmul@prod^0,f,c
 10183  0020A4  0E00               	movlw	0
 10184  0020A6  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10185  0020A8  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10186  0020AA  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10187  0020AC  5017               	movf	___flmul@a^0,w,c
 10188  0020AE  0215               	mulwf	(___flmul@b+2)^0,c
 10189  0020B0  CFF3 F02A          	movff	prodl,___flmul@temp
 10190  0020B4  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10191  0020B8  502A               	movf	___flmul@temp^0,w,c
 10192  0020BA  2620               	addwf	___flmul@grs^0,f,c
 10193  0020BC  0E00               	movlw	0
 10194  0020BE  2221               	addwfc	(___flmul@grs+1)^0,f,c
 10195  0020C0  2222               	addwfc	(___flmul@grs+2)^0,f,c
 10196  0020C2  2223               	addwfc	(___flmul@grs+3)^0,f,c
 10197  0020C4  502B               	movf	(___flmul@temp+1)^0,w,c
 10198  0020C6  2626               	addwf	___flmul@prod^0,f,c
 10199  0020C8  0E00               	movlw	0
 10200  0020CA  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10201  0020CC  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10202  0020CE  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10203  0020D0  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 10204  0020D4  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 10205  0020D8  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 10206  0020DC  6A20               	clrf	___flmul@grs^0,c
 10207  0020DE  5017               	movf	___flmul@a^0,w,c
 10208  0020E0  0214               	mulwf	(___flmul@b+1)^0,c
 10209  0020E2  CFF3 F02A          	movff	prodl,___flmul@temp
 10210  0020E6  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10211  0020EA  502A               	movf	___flmul@temp^0,w,c
 10212  0020EC  2620               	addwf	___flmul@grs^0,f,c
 10213  0020EE  502B               	movf	(___flmul@temp+1)^0,w,c
 10214  0020F0  2221               	addwfc	(___flmul@grs+1)^0,f,c
 10215  0020F2  0E00               	movlw	0
 10216  0020F4  2222               	addwfc	(___flmul@grs+2)^0,f,c
 10217  0020F6  0E00               	movlw	0
 10218  0020F8  2223               	addwfc	(___flmul@grs+3)^0,f,c
 10219  0020FA  5018               	movf	(___flmul@a+1)^0,w,c
 10220  0020FC  0213               	mulwf	___flmul@b^0,c
 10221  0020FE  CFF3 F02A          	movff	prodl,___flmul@temp
 10222  002102  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10223  002106  502A               	movf	___flmul@temp^0,w,c
 10224  002108  2620               	addwf	___flmul@grs^0,f,c
 10225  00210A  502B               	movf	(___flmul@temp+1)^0,w,c
 10226  00210C  2221               	addwfc	(___flmul@grs+1)^0,f,c
 10227  00210E  0E00               	movlw	0
 10228  002110  2222               	addwfc	(___flmul@grs+2)^0,f,c
 10229  002112  0E00               	movlw	0
 10230  002114  2223               	addwfc	(___flmul@grs+3)^0,f,c
 10231  002116  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 10232  00211A  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 10233  00211E  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 10234  002122  6A20               	clrf	___flmul@grs^0,c
 10235  002124  5017               	movf	___flmul@a^0,w,c
 10236  002126  0213               	mulwf	___flmul@b^0,c
 10237  002128  CFF3 F02A          	movff	prodl,___flmul@temp
 10238  00212C  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10239  002130  502A               	movf	___flmul@temp^0,w,c
 10240  002132  2620               	addwf	___flmul@grs^0,f,c
 10241  002134  502B               	movf	(___flmul@temp+1)^0,w,c
 10242  002136  2221               	addwfc	(___flmul@grs+1)^0,f,c
 10243  002138  0E00               	movlw	0
 10244  00213A  2222               	addwfc	(___flmul@grs+2)^0,f,c
 10245  00213C  0E00               	movlw	0
 10246  00213E  2223               	addwfc	(___flmul@grs+3)^0,f,c
 10247  002140  5019               	movf	(___flmul@a+2)^0,w,c
 10248  002142  0214               	mulwf	(___flmul@b+1)^0,c
 10249  002144  CFF3 F02A          	movff	prodl,___flmul@temp
 10250  002148  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10251  00214C  502A               	movf	___flmul@temp^0,w,c
 10252  00214E  2626               	addwf	___flmul@prod^0,f,c
 10253  002150  502B               	movf	(___flmul@temp+1)^0,w,c
 10254  002152  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10255  002154  0E00               	movlw	0
 10256  002156  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10257  002158  0E00               	movlw	0
 10258  00215A  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10259  00215C  5018               	movf	(___flmul@a+1)^0,w,c
 10260  00215E  0215               	mulwf	(___flmul@b+2)^0,c
 10261  002160  CFF3 F02A          	movff	prodl,___flmul@temp
 10262  002164  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10263  002168  502A               	movf	___flmul@temp^0,w,c
 10264  00216A  2626               	addwf	___flmul@prod^0,f,c
 10265  00216C  502B               	movf	(___flmul@temp+1)^0,w,c
 10266  00216E  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10267  002170  0E00               	movlw	0
 10268  002172  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10269  002174  0E00               	movlw	0
 10270  002176  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10271  002178  5019               	movf	(___flmul@a+2)^0,w,c
 10272  00217A  0215               	mulwf	(___flmul@b+2)^0,c
 10273  00217C  CFF3 F02A          	movff	prodl,___flmul@temp
 10274  002180  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10275  002184  502A               	movf	___flmul@temp^0,w,c
 10276  002186  6E1B               	movwf	??___flmul^0,c
 10277  002188  502B               	movf	(___flmul@temp+1)^0,w,c
 10278  00218A  6E1C               	movwf	(??___flmul+1)^0,c
 10279  00218C  6A1D               	clrf	(??___flmul+2)^0,c
 10280  00218E  6A1E               	clrf	(??___flmul+3)^0,c
 10281  002190  C01D  F01E         	movff	??___flmul+2,??___flmul+3
 10282  002194  C01C  F01D         	movff	??___flmul+1,??___flmul+2
 10283  002198  C01B  F01C         	movff	??___flmul,??___flmul+1
 10284  00219C  6A1B               	clrf	??___flmul^0,c
 10285  00219E  501B               	movf	??___flmul^0,w,c
 10286  0021A0  2626               	addwf	___flmul@prod^0,f,c
 10287  0021A2  501C               	movf	(??___flmul+1)^0,w,c
 10288  0021A4  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10289  0021A6  501D               	movf	(??___flmul+2)^0,w,c
 10290  0021A8  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10291  0021AA  501E               	movf	(??___flmul+3)^0,w,c
 10292  0021AC  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10293  0021AE  C020  F01B         	movff	___flmul@grs,??___flmul
 10294  0021B2  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
 10295  0021B6  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
 10296  0021BA  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
 10297  0021BE  0E19               	movlw	25
 10298  0021C0  EFE7  F010         	goto	u3880
 10299  0021C4                     u3885:
 10300  0021C4  90D8               	bcf	status,0,c
 10301  0021C6  321E               	rrcf	(??___flmul+3)^0,f,c
 10302  0021C8  321D               	rrcf	(??___flmul+2)^0,f,c
 10303  0021CA  321C               	rrcf	(??___flmul+1)^0,f,c
 10304  0021CC  321B               	rrcf	??___flmul^0,f,c
 10305  0021CE                     u3880:
 10306  0021CE  2EE8               	decfsz	wreg,f,c
 10307  0021D0  EFE2  F010         	goto	u3885
 10308  0021D4  501B               	movf	??___flmul^0,w,c
 10309  0021D6  2626               	addwf	___flmul@prod^0,f,c
 10310  0021D8  501C               	movf	(??___flmul+1)^0,w,c
 10311  0021DA  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10312  0021DC  501D               	movf	(??___flmul+2)^0,w,c
 10313  0021DE  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10314  0021E0  501E               	movf	(??___flmul+3)^0,w,c
 10315  0021E2  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10316  0021E4  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 10317  0021E8  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 10318  0021EC  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 10319  0021F0  6A20               	clrf	___flmul@grs^0,c
 10320  0021F2  5024               	movf	___flmul@aexp^0,w,c
 10321  0021F4  C025  F01B         	movff	___flmul@bexp,??___flmul
 10322  0021F8  6A1C               	clrf	(??___flmul+1)^0,c
 10323  0021FA  261B               	addwf	??___flmul^0,f,c
 10324  0021FC  0E00               	movlw	0
 10325  0021FE  221C               	addwfc	(??___flmul+1)^0,f,c
 10326  002200  0E82               	movlw	130
 10327  002202  241B               	addwf	??___flmul^0,w,c
 10328  002204  6E2A               	movwf	___flmul@temp^0,c
 10329  002206  0EFF               	movlw	255
 10330  002208  201C               	addwfc	(??___flmul+1)^0,w,c
 10331  00220A  6E2B               	movwf	(___flmul@temp+1)^0,c
 10332  00220C  EF1D  F011         	goto	l4134
 10333  002210                     l4128:
 10334  002210  90D8               	bcf	status,0,c
 10335  002212  3626               	rlcf	___flmul@prod^0,f,c
 10336  002214  3627               	rlcf	(___flmul@prod+1)^0,f,c
 10337  002216  3628               	rlcf	(___flmul@prod+2)^0,f,c
 10338  002218  3629               	rlcf	(___flmul@prod+3)^0,f,c
 10339  00221A  AE23               	btfss	(___flmul@grs+3)^0,7,c
 10340  00221C  EF12  F011         	goto	u3891
 10341  002220  EF14  F011         	goto	u3890
 10342  002224                     u3891:
 10343  002224  EF15  F011         	goto	l1131
 10344  002228                     u3890:
 10345  002228  8026               	bsf	___flmul@prod^0,0,c
 10346  00222A                     l1131:
 10347  00222A  90D8               	bcf	status,0,c
 10348  00222C  3620               	rlcf	___flmul@grs^0,f,c
 10349  00222E  3621               	rlcf	(___flmul@grs+1)^0,f,c
 10350  002230  3622               	rlcf	(___flmul@grs+2)^0,f,c
 10351  002232  3623               	rlcf	(___flmul@grs+3)^0,f,c
 10352  002234  062A               	decf	___flmul@temp^0,f,c
 10353  002236  A0D8               	btfss	status,0,c
 10354  002238  062B               	decf	(___flmul@temp+1)^0,f,c
 10355  00223A                     l4134:
 10356  00223A  AE28               	btfss	(___flmul@prod+2)^0,7,c
 10357  00223C  EF22  F011         	goto	u3901
 10358  002240  EF24  F011         	goto	u3900
 10359  002244                     u3901:
 10360  002244  EF08  F011         	goto	l4128
 10361  002248                     u3900:
 10362  002248  0E00               	movlw	0
 10363  00224A  6E24               	movwf	___flmul@aexp^0,c
 10364  00224C  AE23               	btfss	(___flmul@grs+3)^0,7,c
 10365  00224E  EF2B  F011         	goto	u3911
 10366  002252  EF2D  F011         	goto	u3910
 10367  002256                     u3911:
 10368  002256  EF51  F011         	goto	l1133
 10369  00225A                     u3910:
 10370  00225A  0EFF               	movlw	255
 10371  00225C  1420               	andwf	___flmul@grs^0,w,c
 10372  00225E  6E1B               	movwf	??___flmul^0,c
 10373  002260  0EFF               	movlw	255
 10374  002262  1421               	andwf	(___flmul@grs+1)^0,w,c
 10375  002264  6E1C               	movwf	(??___flmul+1)^0,c
 10376  002266  0EFF               	movlw	255
 10377  002268  1422               	andwf	(___flmul@grs+2)^0,w,c
 10378  00226A  6E1D               	movwf	(??___flmul+2)^0,c
 10379  00226C  0E7F               	movlw	127
 10380  00226E  1423               	andwf	(___flmul@grs+3)^0,w,c
 10381  002270  6E1E               	movwf	(??___flmul+3)^0,c
 10382  002272  501B               	movf	??___flmul^0,w,c
 10383  002274  101C               	iorwf	(??___flmul+1)^0,w,c
 10384  002276  101D               	iorwf	(??___flmul+2)^0,w,c
 10385  002278  101E               	iorwf	(??___flmul+3)^0,w,c
 10386  00227A  B4D8               	btfsc	status,2,c
 10387  00227C  EF42  F011         	goto	u3921
 10388  002280  EF44  F011         	goto	u3920
 10389  002284                     u3921:
 10390  002284  EF48  F011         	goto	l1134
 10391  002288                     u3920:
 10392  002288                     l4142:
 10393  002288  0E01               	movlw	1
 10394  00228A  6E24               	movwf	___flmul@aexp^0,c
 10395  00228C  EF51  F011         	goto	l1133
 10396  002290                     l1134:
 10397  002290  A026               	btfss	___flmul@prod^0,0,c
 10398  002292  EF4D  F011         	goto	u3931
 10399  002296  EF4F  F011         	goto	u3930
 10400  00229A                     u3931:
 10401  00229A  EF51  F011         	goto	l1133
 10402  00229E                     u3930:
 10403  00229E  EF44  F011         	goto	l4142
 10404  0022A2                     l1133:
 10405  0022A2  5024               	movf	___flmul@aexp^0,w,c
 10406  0022A4  B4D8               	btfsc	status,2,c
 10407  0022A6  EF57  F011         	goto	u3941
 10408  0022AA  EF59  F011         	goto	u3940
 10409  0022AE                     u3941:
 10410  0022AE  EF7D  F011         	goto	l4154
 10411  0022B2                     u3940:
 10412  0022B2  0E01               	movlw	1
 10413  0022B4  2626               	addwf	___flmul@prod^0,f,c
 10414  0022B6  0E00               	movlw	0
 10415  0022B8  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10416  0022BA  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10417  0022BC  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10418  0022BE  A029               	btfss	(___flmul@prod+3)^0,0,c
 10419  0022C0  EF64  F011         	goto	u3951
 10420  0022C4  EF66  F011         	goto	u3950
 10421  0022C8                     u3951:
 10422  0022C8  EF7D  F011         	goto	l4154
 10423  0022CC                     u3950:
 10424  0022CC  C026  F01B         	movff	___flmul@prod,??___flmul
 10425  0022D0  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
 10426  0022D4  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
 10427  0022D8  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
 10428  0022DC  341E               	rlcf	(??___flmul+3)^0,w,c
 10429  0022DE  321E               	rrcf	(??___flmul+3)^0,f,c
 10430  0022E0  321D               	rrcf	(??___flmul+2)^0,f,c
 10431  0022E2  321C               	rrcf	(??___flmul+1)^0,f,c
 10432  0022E4  321B               	rrcf	??___flmul^0,f,c
 10433  0022E6  C01B  F026         	movff	??___flmul,___flmul@prod
 10434  0022EA  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
 10435  0022EE  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
 10436  0022F2  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
 10437  0022F6  4A2A               	infsnz	___flmul@temp^0,f,c
 10438  0022F8  2A2B               	incf	(___flmul@temp+1)^0,f,c
 10439  0022FA                     l4154:
 10440  0022FA  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
 10441  0022FC  EF88  F011         	goto	u3961
 10442  002300  502B               	movf	(___flmul@temp+1)^0,w,c
 10443  002302  E108               	bnz	u3960
 10444  002304  282A               	incf	___flmul@temp^0,w,c
 10445  002306  A0D8               	btfss	status,0,c
 10446  002308  EF88  F011         	goto	u3961
 10447  00230C  EF8A  F011         	goto	u3960
 10448  002310                     u3961:
 10449  002310  EF94  F011         	goto	l4158
 10450  002314                     u3960:
 10451  002314  0E00               	movlw	0
 10452  002316  6E26               	movwf	___flmul@prod^0,c
 10453  002318  0E00               	movlw	0
 10454  00231A  6E27               	movwf	(___flmul@prod+1)^0,c
 10455  00231C  0E80               	movlw	128
 10456  00231E  6E28               	movwf	(___flmul@prod+2)^0,c
 10457  002320  0E7F               	movlw	127
 10458  002322  6E29               	movwf	(___flmul@prod+3)^0,c
 10459  002324  EFC2  F011         	goto	l4170
 10460  002328                     l4158:
 10461  002328  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
 10462  00232A  EFA1  F011         	goto	u3970
 10463  00232E  502B               	movf	(___flmul@temp+1)^0,w,c
 10464  002330  E106               	bnz	u3971
 10465  002332  042A               	decf	___flmul@temp^0,w,c
 10466  002334  B0D8               	btfsc	status,0,c
 10467  002336  EF9F  F011         	goto	u3971
 10468  00233A  EFA1  F011         	goto	u3970
 10469  00233E                     u3971:
 10470  00233E  EFAD  F011         	goto	l1141
 10471  002342                     u3970:
 10472  002342  0E00               	movlw	0
 10473  002344  6E26               	movwf	___flmul@prod^0,c
 10474  002346  0E00               	movlw	0
 10475  002348  6E27               	movwf	(___flmul@prod+1)^0,c
 10476  00234A  0E00               	movlw	0
 10477  00234C  6E28               	movwf	(___flmul@prod+2)^0,c
 10478  00234E  0E00               	movlw	0
 10479  002350  6E29               	movwf	(___flmul@prod+3)^0,c
 10480  002352  0E00               	movlw	0
 10481  002354  6E1F               	movwf	___flmul@sign^0,c
 10482  002356  EFC2  F011         	goto	l4170
 10483  00235A                     l1141:
 10484  00235A  C02A  F025         	movff	___flmul@temp,___flmul@bexp
 10485  00235E  0EFF               	movlw	255
 10486  002360  1626               	andwf	___flmul@prod^0,f,c
 10487  002362  0EFF               	movlw	255
 10488  002364  1627               	andwf	(___flmul@prod+1)^0,f,c
 10489  002366  0E7F               	movlw	127
 10490  002368  1628               	andwf	(___flmul@prod+2)^0,f,c
 10491  00236A  0E00               	movlw	0
 10492  00236C  1629               	andwf	(___flmul@prod+3)^0,f,c
 10493  00236E  A025               	btfss	___flmul@bexp^0,0,c
 10494  002370  EFBC  F011         	goto	u3981
 10495  002374  EFBE  F011         	goto	u3980
 10496  002378                     u3981:
 10497  002378  EFBF  F011         	goto	l4168
 10498  00237C                     u3980:
 10499  00237C  8E28               	bsf	(___flmul@prod+2)^0,7,c
 10500  00237E                     l4168:
 10501  00237E  90D8               	bcf	status,0,c
 10502  002380  3025               	rrcf	___flmul@bexp^0,w,c
 10503  002382  6E29               	movwf	(___flmul@prod+3)^0,c
 10504  002384                     l4170:
 10505  002384  501F               	movf	___flmul@sign^0,w,c
 10506  002386  1229               	iorwf	(___flmul@prod+3)^0,f,c
 10507  002388  C026  F013         	movff	___flmul@prod,?___flmul
 10508  00238C  C027  F014         	movff	___flmul@prod+1,?___flmul+1
 10509  002390  C028  F015         	movff	___flmul@prod+2,?___flmul+2
 10510  002394  C029  F016         	movff	___flmul@prod+3,?___flmul+3
 10511  002398                     l1128:
 10512  002398  0012               	return		;funcret
 10513  00239A                     __end_of___flmul:
 10514                           	callstack 0
 10515                           
 10516 ;; *************** function ___flge *****************
 10517 ;; Defined at:
 10518 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;  ff1             4   43[COMRAM] unsigned char 
 10521 ;;  ff2             4   47[COMRAM] unsigned char 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;		None
 10524 ;; Return value:  Size  Location     Type
 10525 ;;		None               void
 10526 ;; Registers used:
 10527 ;;		wreg, status,2, status,0
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10533 ;;      Params:         8       0       0       0       0       0       0       0       0
 10534 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10535 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10536 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10537 ;;Total ram usage:       12 bytes
 10538 ;; Hardware stack levels used: 1
 10539 ;; This function calls:
 10540 ;;		Nothing
 10541 ;; This function is called by:
 10542 ;;		_Estados
 10543 ;;		_efgtoa
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           	psect	text49
 10548  00372C                     __ptext49:
 10549                           	callstack 0
 10550  00372C                     ___flge:
 10551                           	callstack 25
 10552  00372C  0E00               	movlw	0
 10553  00372E  142C               	andwf	___flge@ff1^0,w,c
 10554  003730  6E34               	movwf	??___flge^0,c
 10555  003732  0E00               	movlw	0
 10556  003734  142D               	andwf	(___flge@ff1+1)^0,w,c
 10557  003736  6E35               	movwf	(??___flge+1)^0,c
 10558  003738  0E80               	movlw	128
 10559  00373A  142E               	andwf	(___flge@ff1+2)^0,w,c
 10560  00373C  6E36               	movwf	(??___flge+2)^0,c
 10561  00373E  0E7F               	movlw	127
 10562  003740  142F               	andwf	(___flge@ff1+3)^0,w,c
 10563  003742  6E37               	movwf	(??___flge+3)^0,c
 10564  003744  5034               	movf	??___flge^0,w,c
 10565  003746  1035               	iorwf	(??___flge+1)^0,w,c
 10566  003748  1036               	iorwf	(??___flge+2)^0,w,c
 10567  00374A  1037               	iorwf	(??___flge+3)^0,w,c
 10568  00374C  A4D8               	btfss	status,2,c
 10569  00374E  EFAB  F01B         	goto	u4141
 10570  003752  EFAD  F01B         	goto	u4140
 10571  003756                     u4141:
 10572  003756  EFB5  F01B         	goto	l4282
 10573  00375A                     u4140:
 10574  00375A  0E00               	movlw	0
 10575  00375C  6E2C               	movwf	___flge@ff1^0,c
 10576  00375E  0E00               	movlw	0
 10577  003760  6E2D               	movwf	(___flge@ff1+1)^0,c
 10578  003762  0E00               	movlw	0
 10579  003764  6E2E               	movwf	(___flge@ff1+2)^0,c
 10580  003766  0E00               	movlw	0
 10581  003768  6E2F               	movwf	(___flge@ff1+3)^0,c
 10582  00376A                     l4282:
 10583  00376A  0E00               	movlw	0
 10584  00376C  1430               	andwf	___flge@ff2^0,w,c
 10585  00376E  6E34               	movwf	??___flge^0,c
 10586  003770  0E00               	movlw	0
 10587  003772  1431               	andwf	(___flge@ff2+1)^0,w,c
 10588  003774  6E35               	movwf	(??___flge+1)^0,c
 10589  003776  0E80               	movlw	128
 10590  003778  1432               	andwf	(___flge@ff2+2)^0,w,c
 10591  00377A  6E36               	movwf	(??___flge+2)^0,c
 10592  00377C  0E7F               	movlw	127
 10593  00377E  1433               	andwf	(___flge@ff2+3)^0,w,c
 10594  003780  6E37               	movwf	(??___flge+3)^0,c
 10595  003782  5034               	movf	??___flge^0,w,c
 10596  003784  1035               	iorwf	(??___flge+1)^0,w,c
 10597  003786  1036               	iorwf	(??___flge+2)^0,w,c
 10598  003788  1037               	iorwf	(??___flge+3)^0,w,c
 10599  00378A  A4D8               	btfss	status,2,c
 10600  00378C  EFCA  F01B         	goto	u4151
 10601  003790  EFCC  F01B         	goto	u4150
 10602  003794                     u4151:
 10603  003794  EFD4  F01B         	goto	l4286
 10604  003798                     u4150:
 10605  003798  0E00               	movlw	0
 10606  00379A  6E30               	movwf	___flge@ff2^0,c
 10607  00379C  0E00               	movlw	0
 10608  00379E  6E31               	movwf	(___flge@ff2+1)^0,c
 10609  0037A0  0E00               	movlw	0
 10610  0037A2  6E32               	movwf	(___flge@ff2+2)^0,c
 10611  0037A4  0E00               	movlw	0
 10612  0037A6  6E33               	movwf	(___flge@ff2+3)^0,c
 10613  0037A8                     l4286:
 10614  0037A8  AE2F               	btfss	(___flge@ff1+3)^0,7,c
 10615  0037AA  EFD9  F01B         	goto	u4161
 10616  0037AE  EFDB  F01B         	goto	u4160
 10617  0037B2                     u4161:
 10618  0037B2  EFE4  F01B         	goto	l4290
 10619  0037B6                     u4160:
 10620  0037B6  6C2C               	negf	___flge@ff1^0,c
 10621  0037B8  1E2D               	comf	(___flge@ff1+1)^0,f,c
 10622  0037BA  B0D8               	btfsc	status,0,c
 10623  0037BC  2A2D               	incf	(___flge@ff1+1)^0,f,c
 10624  0037BE  1E2E               	comf	(___flge@ff1+2)^0,f,c
 10625  0037C0  B0D8               	btfsc	status,0,c
 10626  0037C2  2A2E               	incf	(___flge@ff1+2)^0,f,c
 10627  0037C4  0E80               	movlw	128
 10628  0037C6  562F               	subfwb	(___flge@ff1+3)^0,f,c
 10629  0037C8                     l4290:
 10630  0037C8  AE33               	btfss	(___flge@ff2+3)^0,7,c
 10631  0037CA  EFE9  F01B         	goto	u4171
 10632  0037CE  EFEB  F01B         	goto	u4170
 10633  0037D2                     u4171:
 10634  0037D2  EFF4  F01B         	goto	l775
 10635  0037D6                     u4170:
 10636  0037D6  6C30               	negf	___flge@ff2^0,c
 10637  0037D8  1E31               	comf	(___flge@ff2+1)^0,f,c
 10638  0037DA  B0D8               	btfsc	status,0,c
 10639  0037DC  2A31               	incf	(___flge@ff2+1)^0,f,c
 10640  0037DE  1E32               	comf	(___flge@ff2+2)^0,f,c
 10641  0037E0  B0D8               	btfsc	status,0,c
 10642  0037E2  2A32               	incf	(___flge@ff2+2)^0,f,c
 10643  0037E4  0E80               	movlw	128
 10644  0037E6  5633               	subfwb	(___flge@ff2+3)^0,f,c
 10645  0037E8                     l775:
 10646  0037E8  0E00               	movlw	0
 10647  0037EA  1A2C               	xorwf	___flge@ff1^0,f,c
 10648  0037EC  0E00               	movlw	0
 10649  0037EE  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
 10650  0037F0  0E00               	movlw	0
 10651  0037F2  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
 10652  0037F4  0E80               	movlw	128
 10653  0037F6  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
 10654  0037F8  0E00               	movlw	0
 10655  0037FA  1A30               	xorwf	___flge@ff2^0,f,c
 10656  0037FC  0E00               	movlw	0
 10657  0037FE  1A31               	xorwf	(___flge@ff2+1)^0,f,c
 10658  003800  0E00               	movlw	0
 10659  003802  1A32               	xorwf	(___flge@ff2+2)^0,f,c
 10660  003804  0E80               	movlw	128
 10661  003806  1A33               	xorwf	(___flge@ff2+3)^0,f,c
 10662  003808  5030               	movf	___flge@ff2^0,w,c
 10663  00380A  5C2C               	subwf	___flge@ff1^0,w,c
 10664  00380C  5031               	movf	(___flge@ff2+1)^0,w,c
 10665  00380E  582D               	subwfb	(___flge@ff1+1)^0,w,c
 10666  003810  5032               	movf	(___flge@ff2+2)^0,w,c
 10667  003812  582E               	subwfb	(___flge@ff1+2)^0,w,c
 10668  003814  5033               	movf	(___flge@ff2+3)^0,w,c
 10669  003816  582F               	subwfb	(___flge@ff1+3)^0,w,c
 10670  003818  B0D8               	btfsc	status,0,c
 10671  00381A  EF11  F01C         	goto	u4181
 10672  00381E  EF13  F01C         	goto	u4180
 10673  003822                     u4181:
 10674  003822  EF16  F01C         	goto	l4296
 10675  003826                     u4180:
 10676  003826  90D8               	bcf	status,0,c
 10677  003828  EF17  F01C         	goto	l780
 10678  00382C                     l4296:
 10679  00382C  80D8               	bsf	status,0,c
 10680  00382E                     l780:
 10681  00382E  0012               	return		;funcret
 10682  003830                     __end_of___flge:
 10683                           	callstack 0
 10684                           
 10685 ;; *************** function ___fleq *****************
 10686 ;; Defined at:
 10687 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  ff1             4    0[COMRAM] unsigned char 
 10690 ;;  ff2             4    4[COMRAM] unsigned char 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;		None
 10693 ;; Return value:  Size  Location     Type
 10694 ;;		None               void
 10695 ;; Registers used:
 10696 ;;		wreg, status,2, status,0
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10702 ;;      Params:         8       0       0       0       0       0       0       0       0
 10703 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10704 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10705 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10706 ;;Total ram usage:       12 bytes
 10707 ;; Hardware stack levels used: 1
 10708 ;; This function calls:
 10709 ;;		Nothing
 10710 ;; This function is called by:
 10711 ;;		_efgtoa
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           	psect	text50
 10716  003ECA                     __ptext50:
 10717                           	callstack 0
 10718  003ECA                     ___fleq:
 10719                           	callstack 25
 10720  003ECA  0E00               	movlw	0
 10721  003ECC  1401               	andwf	___fleq@ff1^0,w,c
 10722  003ECE  6E09               	movwf	??___fleq^0,c
 10723  003ED0  0E00               	movlw	0
 10724  003ED2  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10725  003ED4  6E0A               	movwf	(??___fleq+1)^0,c
 10726  003ED6  0E80               	movlw	128
 10727  003ED8  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10728  003EDA  6E0B               	movwf	(??___fleq+2)^0,c
 10729  003EDC  0E7F               	movlw	127
 10730  003EDE  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10731  003EE0  6E0C               	movwf	(??___fleq+3)^0,c
 10732  003EE2  5009               	movf	??___fleq^0,w,c
 10733  003EE4  100A               	iorwf	(??___fleq+1)^0,w,c
 10734  003EE6  100B               	iorwf	(??___fleq+2)^0,w,c
 10735  003EE8  100C               	iorwf	(??___fleq+3)^0,w,c
 10736  003EEA  A4D8               	btfss	status,2,c
 10737  003EEC  EF7A  F01F         	goto	u4111
 10738  003EF0  EF7C  F01F         	goto	u4110
 10739  003EF4                     u4111:
 10740  003EF4  EF84  F01F         	goto	l4266
 10741  003EF8                     u4110:
 10742  003EF8  0E00               	movlw	0
 10743  003EFA  6E01               	movwf	___fleq@ff1^0,c
 10744  003EFC  0E00               	movlw	0
 10745  003EFE  6E02               	movwf	(___fleq@ff1+1)^0,c
 10746  003F00  0E00               	movlw	0
 10747  003F02  6E03               	movwf	(___fleq@ff1+2)^0,c
 10748  003F04  0E00               	movlw	0
 10749  003F06  6E04               	movwf	(___fleq@ff1+3)^0,c
 10750  003F08                     l4266:
 10751  003F08  0E00               	movlw	0
 10752  003F0A  1405               	andwf	___fleq@ff2^0,w,c
 10753  003F0C  6E09               	movwf	??___fleq^0,c
 10754  003F0E  0E00               	movlw	0
 10755  003F10  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10756  003F12  6E0A               	movwf	(??___fleq+1)^0,c
 10757  003F14  0E80               	movlw	128
 10758  003F16  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10759  003F18  6E0B               	movwf	(??___fleq+2)^0,c
 10760  003F1A  0E7F               	movlw	127
 10761  003F1C  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10762  003F1E  6E0C               	movwf	(??___fleq+3)^0,c
 10763  003F20  5009               	movf	??___fleq^0,w,c
 10764  003F22  100A               	iorwf	(??___fleq+1)^0,w,c
 10765  003F24  100B               	iorwf	(??___fleq+2)^0,w,c
 10766  003F26  100C               	iorwf	(??___fleq+3)^0,w,c
 10767  003F28  A4D8               	btfss	status,2,c
 10768  003F2A  EF99  F01F         	goto	u4121
 10769  003F2E  EF9B  F01F         	goto	u4120
 10770  003F32                     u4121:
 10771  003F32  EFA3  F01F         	goto	l4270
 10772  003F36                     u4120:
 10773  003F36  0E00               	movlw	0
 10774  003F38  6E05               	movwf	___fleq@ff2^0,c
 10775  003F3A  0E00               	movlw	0
 10776  003F3C  6E06               	movwf	(___fleq@ff2+1)^0,c
 10777  003F3E  0E00               	movlw	0
 10778  003F40  6E07               	movwf	(___fleq@ff2+2)^0,c
 10779  003F42  0E00               	movlw	0
 10780  003F44  6E08               	movwf	(___fleq@ff2+3)^0,c
 10781  003F46                     l4270:
 10782  003F46  5005               	movf	___fleq@ff2^0,w,c
 10783  003F48  1801               	xorwf	___fleq@ff1^0,w,c
 10784  003F4A  E10F               	bnz	u4130
 10785  003F4C  5006               	movf	(___fleq@ff2+1)^0,w,c
 10786  003F4E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10787  003F50  E10C               	bnz	u4130
 10788  003F52  5007               	movf	(___fleq@ff2+2)^0,w,c
 10789  003F54  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10790  003F56  E109               	bnz	u4130
 10791  003F58  5008               	movf	(___fleq@ff2+3)^0,w,c
 10792  003F5A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10793  003F5C  B4D8               	btfsc	status,2,c
 10794  003F5E  EFB3  F01F         	goto	u4131
 10795  003F62  EFB5  F01F         	goto	u4130
 10796  003F66                     u4131:
 10797  003F66  EFB8  F01F         	goto	l4274
 10798  003F6A                     u4130:
 10799  003F6A  90D8               	bcf	status,0,c
 10800  003F6C  EFB9  F01F         	goto	l769
 10801  003F70                     l4274:
 10802  003F70  80D8               	bsf	status,0,c
 10803  003F72                     l769:
 10804  003F72  0012               	return		;funcret
 10805  003F74                     __end_of___fleq:
 10806                           	callstack 0
 10807                           
 10808 ;; *************** function ___fldiv *****************
 10809 ;; Defined at:
 10810 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;  b               4   43[COMRAM] unsigned char 
 10813 ;;  a               4   47[COMRAM] unsigned char 
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;  grs             4   62[COMRAM] unsigned long 
 10816 ;;  rem             4   55[COMRAM] unsigned long 
 10817 ;;  new_exp         2   60[COMRAM] short 
 10818 ;;  aexp            1   67[COMRAM] unsigned char 
 10819 ;;  bexp            1   66[COMRAM] unsigned char 
 10820 ;;  sign            1   59[COMRAM] unsigned char 
 10821 ;; Return value:  Size  Location     Type
 10822 ;;                  4   43[COMRAM] unsigned char 
 10823 ;; Registers used:
 10824 ;;		wreg, status,2, status,0
 10825 ;; Tracked objects:
 10826 ;;		On entry : 0/0
 10827 ;;		On exit  : 0/0
 10828 ;;		Unchanged: 0/0
 10829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10830 ;;      Params:         8       0       0       0       0       0       0       0       0
 10831 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10832 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10833 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10834 ;;Total ram usage:       25 bytes
 10835 ;; Hardware stack levels used: 1
 10836 ;; This function calls:
 10837 ;;		Nothing
 10838 ;; This function is called by:
 10839 ;;		_ReadADC
 10840 ;;		_efgtoa
 10841 ;; This function uses a non-reentrant model
 10842 ;;
 10843                           
 10844                           	psect	text51
 10845  00239A                     __ptext51:
 10846                           	callstack 0
 10847  00239A                     ___fldiv:
 10848                           	callstack 25
 10849  00239A  502F               	movf	(___fldiv@b+3)^0,w,c
 10850  00239C  0B80               	andlw	128
 10851  00239E  6E3C               	movwf	___fldiv@sign^0,c
 10852  0023A0  502F               	movf	(___fldiv@b+3)^0,w,c
 10853  0023A2  242F               	addwf	(___fldiv@b+3)^0,w,c
 10854  0023A4  6E43               	movwf	___fldiv@bexp^0,c
 10855  0023A6  AE2E               	btfss	(___fldiv@b+2)^0,7,c
 10856  0023A8  EFD8  F011         	goto	u3571
 10857  0023AC  EFDA  F011         	goto	u3570
 10858  0023B0                     u3571:
 10859  0023B0  EFDB  F011         	goto	l3914
 10860  0023B4                     u3570:
 10861  0023B4  8043               	bsf	___fldiv@bexp^0,0,c
 10862  0023B6                     l3914:
 10863  0023B6  5043               	movf	___fldiv@bexp^0,w,c
 10864  0023B8  B4D8               	btfsc	status,2,c
 10865  0023BA  EFE1  F011         	goto	u3581
 10866  0023BE  EFE3  F011         	goto	u3580
 10867  0023C2                     u3581:
 10868  0023C2  EFF8  F011         	goto	l3924
 10869  0023C6                     u3580:
 10870  0023C6  2843               	incf	___fldiv@bexp^0,w,c
 10871  0023C8  A4D8               	btfss	status,2,c
 10872  0023CA  EFE9  F011         	goto	u3591
 10873  0023CE  EFEB  F011         	goto	u3590
 10874  0023D2                     u3591:
 10875  0023D2  EFF3  F011         	goto	l3920
 10876  0023D6                     u3590:
 10877  0023D6  0E00               	movlw	0
 10878  0023D8  6E2C               	movwf	___fldiv@b^0,c
 10879  0023DA  0E00               	movlw	0
 10880  0023DC  6E2D               	movwf	(___fldiv@b+1)^0,c
 10881  0023DE  0E00               	movlw	0
 10882  0023E0  6E2E               	movwf	(___fldiv@b+2)^0,c
 10883  0023E2  0E00               	movlw	0
 10884  0023E4  6E2F               	movwf	(___fldiv@b+3)^0,c
 10885  0023E6                     l3920:
 10886  0023E6  8E2E               	bsf	(___fldiv@b+2)^0,7,c
 10887  0023E8  0E00               	movlw	0
 10888  0023EA  6E2F               	movwf	(___fldiv@b+3)^0,c
 10889  0023EC  EF00  F012         	goto	l3926
 10890  0023F0                     l3924:
 10891  0023F0  0E00               	movlw	0
 10892  0023F2  6E2C               	movwf	___fldiv@b^0,c
 10893  0023F4  0E00               	movlw	0
 10894  0023F6  6E2D               	movwf	(___fldiv@b+1)^0,c
 10895  0023F8  0E00               	movlw	0
 10896  0023FA  6E2E               	movwf	(___fldiv@b+2)^0,c
 10897  0023FC  0E00               	movlw	0
 10898  0023FE  6E2F               	movwf	(___fldiv@b+3)^0,c
 10899  002400                     l3926:
 10900  002400  5033               	movf	(___fldiv@a+3)^0,w,c
 10901  002402  0B80               	andlw	128
 10902  002404  1A3C               	xorwf	___fldiv@sign^0,f,c
 10903  002406  5033               	movf	(___fldiv@a+3)^0,w,c
 10904  002408  2433               	addwf	(___fldiv@a+3)^0,w,c
 10905  00240A  6E44               	movwf	___fldiv@aexp^0,c
 10906  00240C  AE32               	btfss	(___fldiv@a+2)^0,7,c
 10907  00240E  EF0B  F012         	goto	u3601
 10908  002412  EF0D  F012         	goto	u3600
 10909  002416                     u3601:
 10910  002416  EF0E  F012         	goto	l3934
 10911  00241A                     u3600:
 10912  00241A  8044               	bsf	___fldiv@aexp^0,0,c
 10913  00241C                     l3934:
 10914  00241C  5044               	movf	___fldiv@aexp^0,w,c
 10915  00241E  B4D8               	btfsc	status,2,c
 10916  002420  EF14  F012         	goto	u3611
 10917  002424  EF16  F012         	goto	u3610
 10918  002428                     u3611:
 10919  002428  EF2B  F012         	goto	l3944
 10920  00242C                     u3610:
 10921  00242C  2844               	incf	___fldiv@aexp^0,w,c
 10922  00242E  A4D8               	btfss	status,2,c
 10923  002430  EF1C  F012         	goto	u3621
 10924  002434  EF1E  F012         	goto	u3620
 10925  002438                     u3621:
 10926  002438  EF26  F012         	goto	l3940
 10927  00243C                     u3620:
 10928  00243C  0E00               	movlw	0
 10929  00243E  6E30               	movwf	___fldiv@a^0,c
 10930  002440  0E00               	movlw	0
 10931  002442  6E31               	movwf	(___fldiv@a+1)^0,c
 10932  002444  0E00               	movlw	0
 10933  002446  6E32               	movwf	(___fldiv@a+2)^0,c
 10934  002448  0E00               	movlw	0
 10935  00244A  6E33               	movwf	(___fldiv@a+3)^0,c
 10936  00244C                     l3940:
 10937  00244C  8E32               	bsf	(___fldiv@a+2)^0,7,c
 10938  00244E  0E00               	movlw	0
 10939  002450  6E33               	movwf	(___fldiv@a+3)^0,c
 10940  002452  EF33  F012         	goto	l3946
 10941  002456                     l3944:
 10942  002456  0E00               	movlw	0
 10943  002458  6E30               	movwf	___fldiv@a^0,c
 10944  00245A  0E00               	movlw	0
 10945  00245C  6E31               	movwf	(___fldiv@a+1)^0,c
 10946  00245E  0E00               	movlw	0
 10947  002460  6E32               	movwf	(___fldiv@a+2)^0,c
 10948  002462  0E00               	movlw	0
 10949  002464  6E33               	movwf	(___fldiv@a+3)^0,c
 10950  002466                     l3946:
 10951  002466  5030               	movf	___fldiv@a^0,w,c
 10952  002468  1031               	iorwf	(___fldiv@a+1)^0,w,c
 10953  00246A  1032               	iorwf	(___fldiv@a+2)^0,w,c
 10954  00246C  1033               	iorwf	(___fldiv@a+3)^0,w,c
 10955  00246E  A4D8               	btfss	status,2,c
 10956  002470  EF3C  F012         	goto	u3631
 10957  002474  EF3E  F012         	goto	u3630
 10958  002478                     u3631:
 10959  002478  EF56  F012         	goto	l3958
 10960  00247C                     u3630:
 10961  00247C  0E00               	movlw	0
 10962  00247E  6E2C               	movwf	___fldiv@b^0,c
 10963  002480  0E00               	movlw	0
 10964  002482  6E2D               	movwf	(___fldiv@b+1)^0,c
 10965  002484  0E00               	movlw	0
 10966  002486  6E2E               	movwf	(___fldiv@b+2)^0,c
 10967  002488  0E00               	movlw	0
 10968  00248A  6E2F               	movwf	(___fldiv@b+3)^0,c
 10969  00248C  0E80               	movlw	128
 10970  00248E  122E               	iorwf	(___fldiv@b+2)^0,f,c
 10971  002490  0E7F               	movlw	127
 10972  002492  122F               	iorwf	(___fldiv@b+3)^0,f,c
 10973  002494                     l3952:
 10974  002494  503C               	movf	___fldiv@sign^0,w,c
 10975  002496  122F               	iorwf	(___fldiv@b+3)^0,f,c
 10976  002498  C02C  F02C         	movff	___fldiv@b,?___fldiv
 10977  00249C  C02D  F02D         	movff	___fldiv@b+1,?___fldiv+1
 10978  0024A0  C02E  F02E         	movff	___fldiv@b+2,?___fldiv+2
 10979  0024A4  C02F  F02F         	movff	___fldiv@b+3,?___fldiv+3
 10980  0024A8  EF99  F013         	goto	l1092
 10981  0024AC                     l3958:
 10982  0024AC  5043               	movf	___fldiv@bexp^0,w,c
 10983  0024AE  A4D8               	btfss	status,2,c
 10984  0024B0  EF5C  F012         	goto	u3641
 10985  0024B4  EF5E  F012         	goto	u3640
 10986  0024B8                     u3641:
 10987  0024B8  EF68  F012         	goto	l3966
 10988  0024BC                     u3640:
 10989  0024BC  0E00               	movlw	0
 10990  0024BE  6E2C               	movwf	?___fldiv^0,c
 10991  0024C0  0E00               	movlw	0
 10992  0024C2  6E2D               	movwf	(?___fldiv+1)^0,c
 10993  0024C4  0E00               	movlw	0
 10994  0024C6  6E2E               	movwf	(?___fldiv+2)^0,c
 10995  0024C8  0E00               	movlw	0
 10996  0024CA  6E2F               	movwf	(?___fldiv+3)^0,c
 10997  0024CC  EF99  F013         	goto	l1092
 10998  0024D0                     l3966:
 10999  0024D0  5044               	movf	___fldiv@aexp^0,w,c
 11000  0024D2  C043  F034         	movff	___fldiv@bexp,??___fldiv
 11001  0024D6  6A35               	clrf	(??___fldiv+1)^0,c
 11002  0024D8  5E34               	subwf	??___fldiv^0,f,c
 11003  0024DA  0E00               	movlw	0
 11004  0024DC  5A35               	subwfb	(??___fldiv+1)^0,f,c
 11005  0024DE  0E7F               	movlw	127
 11006  0024E0  2434               	addwf	??___fldiv^0,w,c
 11007  0024E2  6E3D               	movwf	___fldiv@new_exp^0,c
 11008  0024E4  0E00               	movlw	0
 11009  0024E6  2035               	addwfc	(??___fldiv+1)^0,w,c
 11010  0024E8  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 11011  0024EA  C02C  F038         	movff	___fldiv@b,___fldiv@rem
 11012  0024EE  C02D  F039         	movff	___fldiv@b+1,___fldiv@rem+1
 11013  0024F2  C02E  F03A         	movff	___fldiv@b+2,___fldiv@rem+2
 11014  0024F6  C02F  F03B         	movff	___fldiv@b+3,___fldiv@rem+3
 11015  0024FA  0E00               	movlw	0
 11016  0024FC  6E2C               	movwf	___fldiv@b^0,c
 11017  0024FE  0E00               	movlw	0
 11018  002500  6E2D               	movwf	(___fldiv@b+1)^0,c
 11019  002502  0E00               	movlw	0
 11020  002504  6E2E               	movwf	(___fldiv@b+2)^0,c
 11021  002506  0E00               	movlw	0
 11022  002508  6E2F               	movwf	(___fldiv@b+3)^0,c
 11023  00250A  0E00               	movlw	0
 11024  00250C  6E3F               	movwf	___fldiv@grs^0,c
 11025  00250E  0E00               	movlw	0
 11026  002510  6E40               	movwf	(___fldiv@grs+1)^0,c
 11027  002512  0E00               	movlw	0
 11028  002514  6E41               	movwf	(___fldiv@grs+2)^0,c
 11029  002516  0E00               	movlw	0
 11030  002518  6E42               	movwf	(___fldiv@grs+3)^0,c
 11031  00251A  0E00               	movlw	0
 11032  00251C  6E44               	movwf	___fldiv@aexp^0,c
 11033  00251E  EFC9  F012         	goto	l1094
 11034  002522                     l3976:
 11035  002522  5044               	movf	___fldiv@aexp^0,w,c
 11036  002524  B4D8               	btfsc	status,2,c
 11037  002526  EF97  F012         	goto	u3651
 11038  00252A  EF99  F012         	goto	u3650
 11039  00252E                     u3651:
 11040  00252E  EFB0  F012         	goto	l3984
 11041  002532                     u3650:
 11042  002532  90D8               	bcf	status,0,c
 11043  002534  3638               	rlcf	___fldiv@rem^0,f,c
 11044  002536  3639               	rlcf	(___fldiv@rem+1)^0,f,c
 11045  002538  363A               	rlcf	(___fldiv@rem+2)^0,f,c
 11046  00253A  363B               	rlcf	(___fldiv@rem+3)^0,f,c
 11047  00253C  90D8               	bcf	status,0,c
 11048  00253E  362C               	rlcf	___fldiv@b^0,f,c
 11049  002540  362D               	rlcf	(___fldiv@b+1)^0,f,c
 11050  002542  362E               	rlcf	(___fldiv@b+2)^0,f,c
 11051  002544  362F               	rlcf	(___fldiv@b+3)^0,f,c
 11052  002546  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 11053  002548  EFA8  F012         	goto	u3661
 11054  00254C  EFAA  F012         	goto	u3660
 11055  002550                     u3661:
 11056  002550  EFAB  F012         	goto	l1097
 11057  002554                     u3660:
 11058  002554  802C               	bsf	___fldiv@b^0,0,c
 11059  002556                     l1097:
 11060  002556  90D8               	bcf	status,0,c
 11061  002558  363F               	rlcf	___fldiv@grs^0,f,c
 11062  00255A  3640               	rlcf	(___fldiv@grs+1)^0,f,c
 11063  00255C  3641               	rlcf	(___fldiv@grs+2)^0,f,c
 11064  00255E  3642               	rlcf	(___fldiv@grs+3)^0,f,c
 11065  002560                     l3984:
 11066  002560  5030               	movf	___fldiv@a^0,w,c
 11067  002562  5C38               	subwf	___fldiv@rem^0,w,c
 11068  002564  5031               	movf	(___fldiv@a+1)^0,w,c
 11069  002566  5839               	subwfb	(___fldiv@rem+1)^0,w,c
 11070  002568  5032               	movf	(___fldiv@a+2)^0,w,c
 11071  00256A  583A               	subwfb	(___fldiv@rem+2)^0,w,c
 11072  00256C  5033               	movf	(___fldiv@a+3)^0,w,c
 11073  00256E  583B               	subwfb	(___fldiv@rem+3)^0,w,c
 11074  002570  A0D8               	btfss	status,0,c
 11075  002572  EFBD  F012         	goto	u3671
 11076  002576  EFBF  F012         	goto	u3670
 11077  00257A                     u3671:
 11078  00257A  EFC8  F012         	goto	l3990
 11079  00257E                     u3670:
 11080  00257E  8C42               	bsf	(___fldiv@grs+3)^0,6,c
 11081  002580  5030               	movf	___fldiv@a^0,w,c
 11082  002582  5E38               	subwf	___fldiv@rem^0,f,c
 11083  002584  5031               	movf	(___fldiv@a+1)^0,w,c
 11084  002586  5A39               	subwfb	(___fldiv@rem+1)^0,f,c
 11085  002588  5032               	movf	(___fldiv@a+2)^0,w,c
 11086  00258A  5A3A               	subwfb	(___fldiv@rem+2)^0,f,c
 11087  00258C  5033               	movf	(___fldiv@a+3)^0,w,c
 11088  00258E  5A3B               	subwfb	(___fldiv@rem+3)^0,f,c
 11089  002590                     l3990:
 11090  002590  2A44               	incf	___fldiv@aexp^0,f,c
 11091  002592                     l1094:
 11092  002592  0E19               	movlw	25
 11093  002594  6444               	cpfsgt	___fldiv@aexp^0,c
 11094  002596  EFCF  F012         	goto	u3681
 11095  00259A  EFD1  F012         	goto	u3680
 11096  00259E                     u3681:
 11097  00259E  EF91  F012         	goto	l3976
 11098  0025A2                     u3680:
 11099  0025A2  5038               	movf	___fldiv@rem^0,w,c
 11100  0025A4  1039               	iorwf	(___fldiv@rem+1)^0,w,c
 11101  0025A6  103A               	iorwf	(___fldiv@rem+2)^0,w,c
 11102  0025A8  103B               	iorwf	(___fldiv@rem+3)^0,w,c
 11103  0025AA  B4D8               	btfsc	status,2,c
 11104  0025AC  EFDA  F012         	goto	u3691
 11105  0025B0  EFDC  F012         	goto	u3690
 11106  0025B4                     u3691:
 11107  0025B4  EFF4  F012         	goto	l4002
 11108  0025B8                     u3690:
 11109  0025B8  803F               	bsf	___fldiv@grs^0,0,c
 11110  0025BA  EFF4  F012         	goto	l4002
 11111  0025BE                     l3996:
 11112  0025BE  90D8               	bcf	status,0,c
 11113  0025C0  362C               	rlcf	___fldiv@b^0,f,c
 11114  0025C2  362D               	rlcf	(___fldiv@b+1)^0,f,c
 11115  0025C4  362E               	rlcf	(___fldiv@b+2)^0,f,c
 11116  0025C6  362F               	rlcf	(___fldiv@b+3)^0,f,c
 11117  0025C8  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 11118  0025CA  EFE9  F012         	goto	u3701
 11119  0025CE  EFEB  F012         	goto	u3700
 11120  0025D2                     u3701:
 11121  0025D2  EFEC  F012         	goto	l1103
 11122  0025D6                     u3700:
 11123  0025D6  802C               	bsf	___fldiv@b^0,0,c
 11124  0025D8                     l1103:
 11125  0025D8  90D8               	bcf	status,0,c
 11126  0025DA  363F               	rlcf	___fldiv@grs^0,f,c
 11127  0025DC  3640               	rlcf	(___fldiv@grs+1)^0,f,c
 11128  0025DE  3641               	rlcf	(___fldiv@grs+2)^0,f,c
 11129  0025E0  3642               	rlcf	(___fldiv@grs+3)^0,f,c
 11130  0025E2  063D               	decf	___fldiv@new_exp^0,f,c
 11131  0025E4  A0D8               	btfss	status,0,c
 11132  0025E6  063E               	decf	(___fldiv@new_exp+1)^0,f,c
 11133  0025E8                     l4002:
 11134  0025E8  AE2E               	btfss	(___fldiv@b+2)^0,7,c
 11135  0025EA  EFF9  F012         	goto	u3711
 11136  0025EE  EFFB  F012         	goto	u3710
 11137  0025F2                     u3711:
 11138  0025F2  EFDF  F012         	goto	l3996
 11139  0025F6                     u3710:
 11140  0025F6  0E00               	movlw	0
 11141  0025F8  6E44               	movwf	___fldiv@aexp^0,c
 11142  0025FA  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 11143  0025FC  EF02  F013         	goto	u3721
 11144  002600  EF04  F013         	goto	u3720
 11145  002604                     u3721:
 11146  002604  EF28  F013         	goto	l1105
 11147  002608                     u3720:
 11148  002608  0EFF               	movlw	255
 11149  00260A  143F               	andwf	___fldiv@grs^0,w,c
 11150  00260C  6E34               	movwf	??___fldiv^0,c
 11151  00260E  0EFF               	movlw	255
 11152  002610  1440               	andwf	(___fldiv@grs+1)^0,w,c
 11153  002612  6E35               	movwf	(??___fldiv+1)^0,c
 11154  002614  0EFF               	movlw	255
 11155  002616  1441               	andwf	(___fldiv@grs+2)^0,w,c
 11156  002618  6E36               	movwf	(??___fldiv+2)^0,c
 11157  00261A  0E7F               	movlw	127
 11158  00261C  1442               	andwf	(___fldiv@grs+3)^0,w,c
 11159  00261E  6E37               	movwf	(??___fldiv+3)^0,c
 11160  002620  5034               	movf	??___fldiv^0,w,c
 11161  002622  1035               	iorwf	(??___fldiv+1)^0,w,c
 11162  002624  1036               	iorwf	(??___fldiv+2)^0,w,c
 11163  002626  1037               	iorwf	(??___fldiv+3)^0,w,c
 11164  002628  B4D8               	btfsc	status,2,c
 11165  00262A  EF19  F013         	goto	u3731
 11166  00262E  EF1B  F013         	goto	u3730
 11167  002632                     u3731:
 11168  002632  EF1F  F013         	goto	l1106
 11169  002636                     u3730:
 11170  002636                     l4010:
 11171  002636  0E01               	movlw	1
 11172  002638  6E44               	movwf	___fldiv@aexp^0,c
 11173  00263A  EF28  F013         	goto	l1105
 11174  00263E                     l1106:
 11175  00263E  A02C               	btfss	___fldiv@b^0,0,c
 11176  002640  EF24  F013         	goto	u3741
 11177  002644  EF26  F013         	goto	u3740
 11178  002648                     u3741:
 11179  002648  EF28  F013         	goto	l1105
 11180  00264C                     u3740:
 11181  00264C  EF1B  F013         	goto	l4010
 11182  002650                     l1105:
 11183  002650  5044               	movf	___fldiv@aexp^0,w,c
 11184  002652  B4D8               	btfsc	status,2,c
 11185  002654  EF2E  F013         	goto	u3751
 11186  002658  EF30  F013         	goto	u3750
 11187  00265C                     u3751:
 11188  00265C  EF54  F013         	goto	l4022
 11189  002660                     u3750:
 11190  002660  0E01               	movlw	1
 11191  002662  262C               	addwf	___fldiv@b^0,f,c
 11192  002664  0E00               	movlw	0
 11193  002666  222D               	addwfc	(___fldiv@b+1)^0,f,c
 11194  002668  222E               	addwfc	(___fldiv@b+2)^0,f,c
 11195  00266A  222F               	addwfc	(___fldiv@b+3)^0,f,c
 11196  00266C  A02F               	btfss	(___fldiv@b+3)^0,0,c
 11197  00266E  EF3B  F013         	goto	u3761
 11198  002672  EF3D  F013         	goto	u3760
 11199  002676                     u3761:
 11200  002676  EF54  F013         	goto	l4022
 11201  00267A                     u3760:
 11202  00267A  C02C  F034         	movff	___fldiv@b,??___fldiv
 11203  00267E  C02D  F035         	movff	___fldiv@b+1,??___fldiv+1
 11204  002682  C02E  F036         	movff	___fldiv@b+2,??___fldiv+2
 11205  002686  C02F  F037         	movff	___fldiv@b+3,??___fldiv+3
 11206  00268A  3437               	rlcf	(??___fldiv+3)^0,w,c
 11207  00268C  3237               	rrcf	(??___fldiv+3)^0,f,c
 11208  00268E  3236               	rrcf	(??___fldiv+2)^0,f,c
 11209  002690  3235               	rrcf	(??___fldiv+1)^0,f,c
 11210  002692  3234               	rrcf	??___fldiv^0,f,c
 11211  002694  C034  F02C         	movff	??___fldiv,___fldiv@b
 11212  002698  C035  F02D         	movff	??___fldiv+1,___fldiv@b+1
 11213  00269C  C036  F02E         	movff	??___fldiv+2,___fldiv@b+2
 11214  0026A0  C037  F02F         	movff	??___fldiv+3,___fldiv@b+3
 11215  0026A4  4A3D               	infsnz	___fldiv@new_exp^0,f,c
 11216  0026A6  2A3E               	incf	(___fldiv@new_exp+1)^0,f,c
 11217  0026A8                     l4022:
 11218  0026A8  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11219  0026AA  EF5F  F013         	goto	u3771
 11220  0026AE  503E               	movf	(___fldiv@new_exp+1)^0,w,c
 11221  0026B0  E108               	bnz	u3770
 11222  0026B2  283D               	incf	___fldiv@new_exp^0,w,c
 11223  0026B4  A0D8               	btfss	status,0,c
 11224  0026B6  EF5F  F013         	goto	u3771
 11225  0026BA  EF61  F013         	goto	u3770
 11226  0026BE                     u3771:
 11227  0026BE  EF6C  F013         	goto	l4026
 11228  0026C2                     u3770:
 11229  0026C2  0E00               	movlw	0
 11230  0026C4  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 11231  0026C6  683D               	setf	___fldiv@new_exp^0,c
 11232  0026C8  0E00               	movlw	0
 11233  0026CA  6E2C               	movwf	___fldiv@b^0,c
 11234  0026CC  0E00               	movlw	0
 11235  0026CE  6E2D               	movwf	(___fldiv@b+1)^0,c
 11236  0026D0  0E00               	movlw	0
 11237  0026D2  6E2E               	movwf	(___fldiv@b+2)^0,c
 11238  0026D4  0E00               	movlw	0
 11239  0026D6  6E2F               	movwf	(___fldiv@b+3)^0,c
 11240  0026D8                     l4026:
 11241  0026D8  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11242  0026DA  EF79  F013         	goto	u3780
 11243  0026DE  503E               	movf	(___fldiv@new_exp+1)^0,w,c
 11244  0026E0  E106               	bnz	u3781
 11245  0026E2  043D               	decf	___fldiv@new_exp^0,w,c
 11246  0026E4  B0D8               	btfsc	status,0,c
 11247  0026E6  EF77  F013         	goto	u3781
 11248  0026EA  EF79  F013         	goto	u3780
 11249  0026EE                     u3781:
 11250  0026EE  EF87  F013         	goto	l4030
 11251  0026F2                     u3780:
 11252  0026F2  0E00               	movlw	0
 11253  0026F4  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 11254  0026F6  0E00               	movlw	0
 11255  0026F8  6E3D               	movwf	___fldiv@new_exp^0,c
 11256  0026FA  0E00               	movlw	0
 11257  0026FC  6E2C               	movwf	___fldiv@b^0,c
 11258  0026FE  0E00               	movlw	0
 11259  002700  6E2D               	movwf	(___fldiv@b+1)^0,c
 11260  002702  0E00               	movlw	0
 11261  002704  6E2E               	movwf	(___fldiv@b+2)^0,c
 11262  002706  0E00               	movlw	0
 11263  002708  6E2F               	movwf	(___fldiv@b+3)^0,c
 11264  00270A  0E00               	movlw	0
 11265  00270C  6E3C               	movwf	___fldiv@sign^0,c
 11266  00270E                     l4030:
 11267  00270E  C03D  F043         	movff	___fldiv@new_exp,___fldiv@bexp
 11268  002712  A043               	btfss	___fldiv@bexp^0,0,c
 11269  002714  EF8E  F013         	goto	u3791
 11270  002718  EF90  F013         	goto	u3790
 11271  00271C                     u3791:
 11272  00271C  EF93  F013         	goto	l4036
 11273  002720                     u3790:
 11274  002720  8E2E               	bsf	(___fldiv@b+2)^0,7,c
 11275  002722  EF94  F013         	goto	l4038
 11276  002726                     l4036:
 11277  002726  9E2E               	bcf	(___fldiv@b+2)^0,7,c
 11278  002728                     l4038:
 11279  002728  90D8               	bcf	status,0,c
 11280  00272A  3043               	rrcf	___fldiv@bexp^0,w,c
 11281  00272C  6E2F               	movwf	(___fldiv@b+3)^0,c
 11282  00272E  EF4A  F012         	goto	l3952
 11283  002732                     l1092:
 11284  002732  0012               	return		;funcret
 11285  002734                     __end_of___fldiv:
 11286                           	callstack 0
 11287                           
 11288 ;; *************** function ___awmod *****************
 11289 ;; Defined at:
 11290 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 11291 ;; Parameters:    Size  Location     Type
 11292 ;;  dividend        2    0[COMRAM] int 
 11293 ;;  divisor         2    2[COMRAM] int 
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;  sign            1    5[COMRAM] unsigned char 
 11296 ;;  counter         1    4[COMRAM] unsigned char 
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  2    0[COMRAM] int 
 11299 ;; Registers used:
 11300 ;;		wreg, status,2, status,0
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11306 ;;      Params:         4       0       0       0       0       0       0       0       0
 11307 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11309 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11310 ;;Total ram usage:        6 bytes
 11311 ;; Hardware stack levels used: 1
 11312 ;; This function calls:
 11313 ;;		Nothing
 11314 ;; This function is called by:
 11315 ;;		_efgtoa
 11316 ;; This function uses a non-reentrant model
 11317 ;;
 11318                           
 11319                           	psect	text52
 11320  003E1A                     __ptext52:
 11321                           	callstack 0
 11322  003E1A                     ___awmod:
 11323                           	callstack 25
 11324  003E1A  0E00               	movlw	0
 11325  003E1C  6E06               	movwf	___awmod@sign^0,c
 11326  003E1E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11327  003E20  EF16  F01F         	goto	u4050
 11328  003E24  EF14  F01F         	goto	u4051
 11329  003E28                     u4051:
 11330  003E28  EF1C  F01F         	goto	l4234
 11331  003E2C                     u4050:
 11332  003E2C  6C01               	negf	___awmod@dividend^0,c
 11333  003E2E  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11334  003E30  B0D8               	btfsc	status,0,c
 11335  003E32  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11336  003E34  0E01               	movlw	1
 11337  003E36  6E06               	movwf	___awmod@sign^0,c
 11338  003E38                     l4234:
 11339  003E38  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11340  003E3A  EF23  F01F         	goto	u4060
 11341  003E3E  EF21  F01F         	goto	u4061
 11342  003E42                     u4061:
 11343  003E42  EF27  F01F         	goto	l4238
 11344  003E46                     u4060:
 11345  003E46  6C03               	negf	___awmod@divisor^0,c
 11346  003E48  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11347  003E4A  B0D8               	btfsc	status,0,c
 11348  003E4C  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11349  003E4E                     l4238:
 11350  003E4E  5003               	movf	___awmod@divisor^0,w,c
 11351  003E50  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11352  003E52  B4D8               	btfsc	status,2,c
 11353  003E54  EF2E  F01F         	goto	u4071
 11354  003E58  EF30  F01F         	goto	u4070
 11355  003E5C                     u4071:
 11356  003E5C  EF54  F01F         	goto	l4254
 11357  003E60                     u4070:
 11358  003E60  0E01               	movlw	1
 11359  003E62  6E05               	movwf	___awmod@counter^0,c
 11360  003E64  EF38  F01F         	goto	l4244
 11361  003E68                     l4242:
 11362  003E68  90D8               	bcf	status,0,c
 11363  003E6A  3603               	rlcf	___awmod@divisor^0,f,c
 11364  003E6C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11365  003E6E  2A05               	incf	___awmod@counter^0,f,c
 11366  003E70                     l4244:
 11367  003E70  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11368  003E72  EF3D  F01F         	goto	u4081
 11369  003E76  EF3F  F01F         	goto	u4080
 11370  003E7A                     u4081:
 11371  003E7A  EF34  F01F         	goto	l4242
 11372  003E7E                     u4080:
 11373  003E7E                     l4246:
 11374  003E7E  5003               	movf	___awmod@divisor^0,w,c
 11375  003E80  5C01               	subwf	___awmod@dividend^0,w,c
 11376  003E82  5004               	movf	(___awmod@divisor+1)^0,w,c
 11377  003E84  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11378  003E86  A0D8               	btfss	status,0,c
 11379  003E88  EF48  F01F         	goto	u4091
 11380  003E8C  EF4A  F01F         	goto	u4090
 11381  003E90                     u4091:
 11382  003E90  EF4E  F01F         	goto	l4250
 11383  003E94                     u4090:
 11384  003E94  5003               	movf	___awmod@divisor^0,w,c
 11385  003E96  5E01               	subwf	___awmod@dividend^0,f,c
 11386  003E98  5004               	movf	(___awmod@divisor+1)^0,w,c
 11387  003E9A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11388  003E9C                     l4250:
 11389  003E9C  90D8               	bcf	status,0,c
 11390  003E9E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11391  003EA0  3203               	rrcf	___awmod@divisor^0,f,c
 11392  003EA2  2E05               	decfsz	___awmod@counter^0,f,c
 11393  003EA4  EF3F  F01F         	goto	l4246
 11394  003EA8                     l4254:
 11395  003EA8  5006               	movf	___awmod@sign^0,w,c
 11396  003EAA  B4D8               	btfsc	status,2,c
 11397  003EAC  EF5A  F01F         	goto	u4101
 11398  003EB0  EF5C  F01F         	goto	u4100
 11399  003EB4                     u4101:
 11400  003EB4  EF60  F01F         	goto	l4258
 11401  003EB8                     u4100:
 11402  003EB8  6C01               	negf	___awmod@dividend^0,c
 11403  003EBA  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11404  003EBC  B0D8               	btfsc	status,0,c
 11405  003EBE  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11406  003EC0                     l4258:
 11407  003EC0  C001  F001         	movff	___awmod@dividend,?___awmod
 11408  003EC4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11409  003EC8  0012               	return		;funcret
 11410  003ECA                     __end_of___awmod:
 11411                           	callstack 0
 11412                           
 11413 ;; *************** function ___awdiv *****************
 11414 ;; Defined at:
 11415 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  dividend        2    0[COMRAM] int 
 11418 ;;  divisor         2    2[COMRAM] int 
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;  quotient        2    6[COMRAM] int 
 11421 ;;  sign            1    5[COMRAM] unsigned char 
 11422 ;;  counter         1    4[COMRAM] unsigned char 
 11423 ;; Return value:  Size  Location     Type
 11424 ;;                  2    0[COMRAM] int 
 11425 ;; Registers used:
 11426 ;;		wreg, status,2, status,0
 11427 ;; Tracked objects:
 11428 ;;		On entry : 0/0
 11429 ;;		On exit  : 0/0
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11432 ;;      Params:         4       0       0       0       0       0       0       0       0
 11433 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11434 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11435 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11436 ;;Total ram usage:        8 bytes
 11437 ;; Hardware stack levels used: 1
 11438 ;; This function calls:
 11439 ;;		Nothing
 11440 ;; This function is called by:
 11441 ;;		_efgtoa
 11442 ;; This function uses a non-reentrant model
 11443 ;;
 11444                           
 11445                           	psect	text53
 11446  003D56                     __ptext53:
 11447                           	callstack 0
 11448  003D56                     ___awdiv:
 11449                           	callstack 25
 11450  003D56  0E00               	movlw	0
 11451  003D58  6E06               	movwf	___awdiv@sign^0,c
 11452  003D5A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11453  003D5C  EFB4  F01E         	goto	u3990
 11454  003D60  EFB2  F01E         	goto	u3991
 11455  003D64                     u3991:
 11456  003D64  EFBA  F01E         	goto	l4190
 11457  003D68                     u3990:
 11458  003D68  6C03               	negf	___awdiv@divisor^0,c
 11459  003D6A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11460  003D6C  B0D8               	btfsc	status,0,c
 11461  003D6E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11462  003D70  0E01               	movlw	1
 11463  003D72  6E06               	movwf	___awdiv@sign^0,c
 11464  003D74                     l4190:
 11465  003D74  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11466  003D76  EFC1  F01E         	goto	u4000
 11467  003D7A  EFBF  F01E         	goto	u4001
 11468  003D7E                     u4001:
 11469  003D7E  EFC7  F01E         	goto	l4196
 11470  003D82                     u4000:
 11471  003D82  6C01               	negf	___awdiv@dividend^0,c
 11472  003D84  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11473  003D86  B0D8               	btfsc	status,0,c
 11474  003D88  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11475  003D8A  0E01               	movlw	1
 11476  003D8C  1A06               	xorwf	___awdiv@sign^0,f,c
 11477  003D8E                     l4196:
 11478  003D8E  0E00               	movlw	0
 11479  003D90  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11480  003D92  0E00               	movlw	0
 11481  003D94  6E07               	movwf	___awdiv@quotient^0,c
 11482  003D96  5003               	movf	___awdiv@divisor^0,w,c
 11483  003D98  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11484  003D9A  B4D8               	btfsc	status,2,c
 11485  003D9C  EFD2  F01E         	goto	u4011
 11486  003DA0  EFD4  F01E         	goto	u4010
 11487  003DA4                     u4011:
 11488  003DA4  EFFC  F01E         	goto	l4218
 11489  003DA8                     u4010:
 11490  003DA8  0E01               	movlw	1
 11491  003DAA  6E05               	movwf	___awdiv@counter^0,c
 11492  003DAC  EFDC  F01E         	goto	l4204
 11493  003DB0                     l4202:
 11494  003DB0  90D8               	bcf	status,0,c
 11495  003DB2  3603               	rlcf	___awdiv@divisor^0,f,c
 11496  003DB4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11497  003DB6  2A05               	incf	___awdiv@counter^0,f,c
 11498  003DB8                     l4204:
 11499  003DB8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11500  003DBA  EFE1  F01E         	goto	u4021
 11501  003DBE  EFE3  F01E         	goto	u4020
 11502  003DC2                     u4021:
 11503  003DC2  EFD8  F01E         	goto	l4202
 11504  003DC6                     u4020:
 11505  003DC6                     l4206:
 11506  003DC6  90D8               	bcf	status,0,c
 11507  003DC8  3607               	rlcf	___awdiv@quotient^0,f,c
 11508  003DCA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11509  003DCC  5003               	movf	___awdiv@divisor^0,w,c
 11510  003DCE  5C01               	subwf	___awdiv@dividend^0,w,c
 11511  003DD0  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11512  003DD2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11513  003DD4  A0D8               	btfss	status,0,c
 11514  003DD6  EFEF  F01E         	goto	u4031
 11515  003DDA  EFF1  F01E         	goto	u4030
 11516  003DDE                     u4031:
 11517  003DDE  EFF6  F01E         	goto	l4214
 11518  003DE2                     u4030:
 11519  003DE2  5003               	movf	___awdiv@divisor^0,w,c
 11520  003DE4  5E01               	subwf	___awdiv@dividend^0,f,c
 11521  003DE6  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11522  003DE8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11523  003DEA  8007               	bsf	___awdiv@quotient^0,0,c
 11524  003DEC                     l4214:
 11525  003DEC  90D8               	bcf	status,0,c
 11526  003DEE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11527  003DF0  3203               	rrcf	___awdiv@divisor^0,f,c
 11528  003DF2  2E05               	decfsz	___awdiv@counter^0,f,c
 11529  003DF4  EFE3  F01E         	goto	l4206
 11530  003DF8                     l4218:
 11531  003DF8  5006               	movf	___awdiv@sign^0,w,c
 11532  003DFA  B4D8               	btfsc	status,2,c
 11533  003DFC  EF02  F01F         	goto	u4041
 11534  003E00  EF04  F01F         	goto	u4040
 11535  003E04                     u4041:
 11536  003E04  EF08  F01F         	goto	l4222
 11537  003E08                     u4040:
 11538  003E08  6C07               	negf	___awdiv@quotient^0,c
 11539  003E0A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11540  003E0C  B0D8               	btfsc	status,0,c
 11541  003E0E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11542  003E10                     l4222:
 11543  003E10  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11544  003E14  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11545  003E18  0012               	return		;funcret
 11546  003E1A                     __end_of___awdiv:
 11547                           	callstack 0
 11548                           
 11549 ;; *************** function _atoi *****************
 11550 ;; Defined at:
 11551 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 11552 ;; Parameters:    Size  Location     Type
 11553 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11554 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
 11555 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 11556 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;  n               2   20[COMRAM] int 
 11559 ;;  neg             2   13[COMRAM] int 
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  2    7[COMRAM] int 
 11562 ;; Registers used:
 11563 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11564 ;; Tracked objects:
 11565 ;;		On entry : 0/0
 11566 ;;		On exit  : 0/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11569 ;;      Params:         2       0       0       0       0       0       0       0       0
 11570 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11571 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11572 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11573 ;;Total ram usage:       15 bytes
 11574 ;; Hardware stack levels used: 1
 11575 ;; Hardware stack levels required when called: 1
 11576 ;; This function calls:
 11577 ;;		___wmul
 11578 ;;		_isdigit
 11579 ;;		_isspace
 11580 ;; This function is called by:
 11581 ;;		_vfpfcnvrt
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           	psect	text54
 11586  00333E                     __ptext54:
 11587                           	callstack 0
 11588  00333E                     _atoi:
 11589                           	callstack 25
 11590  00333E  0E00               	movlw	0
 11591  003340  6E16               	movwf	(atoi@n+1)^0,c
 11592  003342  0E00               	movlw	0
 11593  003344  6E15               	movwf	atoi@n^0,c
 11594  003346  0E00               	movlw	0
 11595  003348  6E0F               	movwf	(atoi@neg+1)^0,c
 11596  00334A  0E00               	movlw	0
 11597  00334C  6E0E               	movwf	atoi@neg^0,c
 11598  00334E  EFAB  F019         	goto	l4864
 11599  003352                     l4862:
 11600  003352  4A08               	infsnz	atoi@s^0,f,c
 11601  003354  2A09               	incf	(atoi@s+1)^0,f,c
 11602  003356                     l4864:
 11603  003356  0E01               	movlw	1
 11604  003358  6E14               	movwf	_atoi$1526^0,c
 11605  00335A  C008  FFF6         	movff	atoi@s,tblptrl
 11606  00335E  C009  FFF7         	movff	atoi@s+1,tblptrh
 11607  003362                     	if	0	;tblptru may be non-zero
 11608  003362                     	endif
 11609  003362                     	if	0	;tblptru may be non-zero
 11610  003362                     	endif
 11611  003362  0008               	tblrd		*
 11612  003364  50F5               	movf	tablat,w,c
 11613  003366  0A20               	xorlw	32
 11614  003368  B4D8               	btfsc	status,2,c
 11615  00336A  EFB9  F019         	goto	u5361
 11616  00336E  EFBB  F019         	goto	u5360
 11617  003372                     u5361:
 11618  003372  EFD8  F019         	goto	l4872
 11619  003376                     u5360:
 11620  003376  0EF7               	movlw	247
 11621  003378  6E0A               	movwf	??_atoi^0,c
 11622  00337A  0EFF               	movlw	255
 11623  00337C  6E0B               	movwf	(??_atoi+1)^0,c
 11624  00337E  C008  FFF6         	movff	atoi@s,tblptrl
 11625  003382  C009  FFF7         	movff	atoi@s+1,tblptrh
 11626  003386                     	if	0	;tblptru may be non-zero
 11627  003386                     	endif
 11628  003386                     	if	0	;tblptru may be non-zero
 11629  003386                     	endif
 11630  003386  0008               	tblrd		*
 11631  003388  50F5               	movf	tablat,w,c
 11632  00338A  6E0C               	movwf	(??_atoi+2)^0,c
 11633  00338C  6A0D               	clrf	(??_atoi+3)^0,c
 11634  00338E  500A               	movf	??_atoi^0,w,c
 11635  003390  260C               	addwf	(??_atoi+2)^0,f,c
 11636  003392  500B               	movf	(??_atoi+1)^0,w,c
 11637  003394  220D               	addwfc	(??_atoi+3)^0,f,c
 11638  003396  500D               	movf	(??_atoi+3)^0,w,c
 11639  003398  E109               	bnz	u5370
 11640  00339A  0E05               	movlw	5
 11641  00339C  5C0C               	subwf	(??_atoi+2)^0,w,c
 11642  00339E  A0D8               	btfss	status,0,c
 11643  0033A0  EFD4  F019         	goto	u5371
 11644  0033A4  EFD6  F019         	goto	u5370
 11645  0033A8                     u5371:
 11646  0033A8  EFD8  F019         	goto	l4872
 11647  0033AC                     u5370:
 11648  0033AC  0E00               	movlw	0
 11649  0033AE  6E14               	movwf	_atoi$1526^0,c
 11650  0033B0                     l4872:
 11651  0033B0  C014  F010         	movff	_atoi$1526,_atoi$1525
 11652  0033B4  6A11               	clrf	(_atoi$1525+1)^0,c
 11653  0033B6  5010               	movf	_atoi$1525^0,w,c
 11654  0033B8  1011               	iorwf	(_atoi$1525+1)^0,w,c
 11655  0033BA  A4D8               	btfss	status,2,c
 11656  0033BC  EFE2  F019         	goto	u5381
 11657  0033C0  EFE4  F019         	goto	u5380
 11658  0033C4                     u5381:
 11659  0033C4  EFA9  F019         	goto	l4862
 11660  0033C8                     u5380:
 11661  0033C8  EFEE  F019         	goto	l4882
 11662  0033CC                     l4878:
 11663  0033CC  0E00               	movlw	0
 11664  0033CE  6E0F               	movwf	(atoi@neg+1)^0,c
 11665  0033D0  0E01               	movlw	1
 11666  0033D2  6E0E               	movwf	atoi@neg^0,c
 11667  0033D4                     l4880:
 11668  0033D4  4A08               	infsnz	atoi@s^0,f,c
 11669  0033D6  2A09               	incf	(atoi@s+1)^0,f,c
 11670  0033D8  EF23  F01A         	goto	l4888
 11671  0033DC                     l4882:
 11672  0033DC  C008  FFF6         	movff	atoi@s,tblptrl
 11673  0033E0  C009  FFF7         	movff	atoi@s+1,tblptrh
 11674  0033E4                     	if	0	;tblptru may be non-zero
 11675  0033E4                     	endif
 11676  0033E4                     	if	0	;tblptru may be non-zero
 11677  0033E4                     	endif
 11678  0033E4  0008               	tblrd		*
 11679  0033E6  50F5               	movf	tablat,w,c
 11680  0033E8  6E0A               	movwf	??_atoi^0,c
 11681  0033EA  6A0B               	clrf	(??_atoi+1)^0,c
 11682                           
 11683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11684                           ; Switch size 1, requested type "simple"
 11685                           ; Number of cases is 1, Range of values is 0 to 0
 11686                           ; switch strategies available:
 11687                           ; Name         Instructions Cycles
 11688                           ; simple_byte            4     3 (average)
 11689                           ;	Chosen strategy is simple_byte
 11690  0033EC  500B               	movf	(??_atoi+1)^0,w,c
 11691  0033EE  0A00               	xorlw	0	; case 0
 11692  0033F0  B4D8               	btfsc	status,2,c
 11693  0033F2  EFFD  F019         	goto	l5724
 11694  0033F6  EF23  F01A         	goto	l4888
 11695  0033FA                     l5724:
 11696                           
 11697                           ; Switch size 1, requested type "simple"
 11698                           ; Number of cases is 2, Range of values is 43 to 45
 11699                           ; switch strategies available:
 11700                           ; Name         Instructions Cycles
 11701                           ; simple_byte            7     4 (average)
 11702                           ;	Chosen strategy is simple_byte
 11703  0033FA  500A               	movf	??_atoi^0,w,c
 11704  0033FC  0A2B               	xorlw	43	; case 43
 11705  0033FE  B4D8               	btfsc	status,2,c
 11706  003400  EFEA  F019         	goto	l4880
 11707  003404  0A06               	xorlw	6	; case 45
 11708  003406  B4D8               	btfsc	status,2,c
 11709  003408  EFE6  F019         	goto	l4878
 11710  00340C  EF23  F01A         	goto	l4888
 11711  003410                     l4884:
 11712  003410  C015  F001         	movff	atoi@n,___wmul@multiplier
 11713  003414  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11714  003418  0E00               	movlw	0
 11715  00341A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11716  00341C  0E0A               	movlw	10
 11717  00341E  6E03               	movwf	___wmul@multiplicand^0,c
 11718  003420  ECB0  F024         	call	___wmul	;wreg free
 11719  003424  C008  FFF6         	movff	atoi@s,tblptrl
 11720  003428  C009  FFF7         	movff	atoi@s+1,tblptrh
 11721  00342C                     	if	0	;tblptru may be non-zero
 11722  00342C                     	endif
 11723  00342C                     	if	0	;tblptru may be non-zero
 11724  00342C                     	endif
 11725  00342C  0008               	tblrd		*
 11726  00342E  50F5               	movf	tablat,w,c
 11727  003430  5E01               	subwf	?___wmul^0,f,c
 11728  003432  0E00               	movlw	0
 11729  003434  5A02               	subwfb	(?___wmul+1)^0,f,c
 11730  003436  0E30               	movlw	48
 11731  003438  2401               	addwf	?___wmul^0,w,c
 11732  00343A  6E15               	movwf	atoi@n^0,c
 11733  00343C  0E00               	movlw	0
 11734  00343E  2002               	addwfc	(?___wmul+1)^0,w,c
 11735  003440  6E16               	movwf	(atoi@n+1)^0,c
 11736  003442  EFEA  F019         	goto	l4880
 11737  003446                     l4888:
 11738  003446  0ED0               	movlw	208
 11739  003448  6E0A               	movwf	??_atoi^0,c
 11740  00344A  0EFF               	movlw	255
 11741  00344C  6E0B               	movwf	(??_atoi+1)^0,c
 11742  00344E  C008  FFF6         	movff	atoi@s,tblptrl
 11743  003452  C009  FFF7         	movff	atoi@s+1,tblptrh
 11744  003456                     	if	0	;tblptru may be non-zero
 11745  003456                     	endif
 11746  003456                     	if	0	;tblptru may be non-zero
 11747  003456                     	endif
 11748  003456  0008               	tblrd		*
 11749  003458  50F5               	movf	tablat,w,c
 11750  00345A  6E0C               	movwf	(??_atoi+2)^0,c
 11751  00345C  6A0D               	clrf	(??_atoi+3)^0,c
 11752  00345E  500A               	movf	??_atoi^0,w,c
 11753  003460  260C               	addwf	(??_atoi+2)^0,f,c
 11754  003462  500B               	movf	(??_atoi+1)^0,w,c
 11755  003464  220D               	addwfc	(??_atoi+3)^0,f,c
 11756  003466  500D               	movf	(??_atoi+3)^0,w,c
 11757  003468  E10A               	bnz	u5390
 11758  00346A  0E0A               	movlw	10
 11759  00346C  5C0C               	subwf	(??_atoi+2)^0,w,c
 11760  00346E  A0D8               	btfss	status,0,c
 11761  003470  EF3C  F01A         	goto	u5391
 11762  003474  EF3F  F01A         	goto	u5390
 11763  003478                     u5391:
 11764  003478  0E01               	movlw	1
 11765  00347A  EF40  F01A         	goto	u5400
 11766  00347E                     u5390:
 11767  00347E  0E00               	movlw	0
 11768  003480                     u5400:
 11769  003480  6E12               	movwf	_atoi$1527^0,c
 11770  003482  6A13               	clrf	(_atoi$1527+1)^0,c
 11771  003484  5012               	movf	_atoi$1527^0,w,c
 11772  003486  1013               	iorwf	(_atoi$1527+1)^0,w,c
 11773  003488  A4D8               	btfss	status,2,c
 11774  00348A  EF49  F01A         	goto	u5411
 11775  00348E  EF4B  F01A         	goto	u5410
 11776  003492                     u5411:
 11777  003492  EF08  F01A         	goto	l4884
 11778  003496                     u5410:
 11779  003496  500E               	movf	atoi@neg^0,w,c
 11780  003498  100F               	iorwf	(atoi@neg+1)^0,w,c
 11781  00349A  A4D8               	btfss	status,2,c
 11782  00349C  EF52  F01A         	goto	u5421
 11783  0034A0  EF54  F01A         	goto	u5420
 11784  0034A4                     u5421:
 11785  0034A4  EF62  F01A         	goto	l1446
 11786  0034A8                     u5420:
 11787  0034A8  C015  F00A         	movff	atoi@n,??_atoi
 11788  0034AC  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11789  0034B0  1E0A               	comf	??_atoi^0,f,c
 11790  0034B2  1E0B               	comf	(??_atoi+1)^0,f,c
 11791  0034B4  4A0A               	infsnz	??_atoi^0,f,c
 11792  0034B6  2A0B               	incf	(??_atoi+1)^0,f,c
 11793  0034B8  C00A  F008         	movff	??_atoi,?_atoi
 11794  0034BC  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11795  0034C0  EF66  F01A         	goto	l1449
 11796  0034C4                     l1446:
 11797  0034C4  C015  F008         	movff	atoi@n,?_atoi
 11798  0034C8  C016  F009         	movff	atoi@n+1,?_atoi+1
 11799  0034CC                     l1449:
 11800  0034CC  0012               	return		;funcret
 11801  0034CE                     __end_of_atoi:
 11802                           	callstack 0
 11803                           
 11804 ;; *************** function _isspace *****************
 11805 ;; Defined at:
 11806 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;  c               2    0[COMRAM] int 
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;		None
 11811 ;; Return value:  Size  Location     Type
 11812 ;;                  2    0[COMRAM] int 
 11813 ;; Registers used:
 11814 ;;		wreg, status,2, status,0
 11815 ;; Tracked objects:
 11816 ;;		On entry : 0/0
 11817 ;;		On exit  : 0/0
 11818 ;;		Unchanged: 0/0
 11819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11820 ;;      Params:         2       0       0       0       0       0       0       0       0
 11821 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11822 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11823 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11824 ;;Total ram usage:        7 bytes
 11825 ;; Hardware stack levels used: 1
 11826 ;; This function calls:
 11827 ;;		Nothing
 11828 ;; This function is called by:
 11829 ;;		_atoi
 11830 ;; This function uses a non-reentrant model
 11831 ;;
 11832                           
 11833                           	psect	text55
 11834  004402                     __ptext55:
 11835                           	callstack 0
 11836  004402                     _isspace:
 11837                           	callstack 25
 11838  004402  0E01               	movlw	1
 11839  004404  6E07               	movwf	_isspace$1565^0,c
 11840  004406  0E20               	movlw	32
 11841  004408  1801               	xorwf	isspace@c^0,w,c
 11842  00440A  1002               	iorwf	(isspace@c+1)^0,w,c
 11843  00440C  B4D8               	btfsc	status,2,c
 11844  00440E  EF0B  F022         	goto	u4601
 11845  004412  EF0D  F022         	goto	u4600
 11846  004416                     u4601:
 11847  004416  EF26  F022         	goto	l4464
 11848  00441A                     u4600:
 11849  00441A  0EF7               	movlw	247
 11850  00441C  6E03               	movwf	??_isspace^0,c
 11851  00441E  0EFF               	movlw	255
 11852  004420  6E04               	movwf	(??_isspace+1)^0,c
 11853  004422  C001  F005         	movff	isspace@c,??_isspace+2
 11854  004426  C002  F006         	movff	isspace@c+1,??_isspace+3
 11855  00442A  5003               	movf	??_isspace^0,w,c
 11856  00442C  2605               	addwf	(??_isspace+2)^0,f,c
 11857  00442E  5004               	movf	(??_isspace+1)^0,w,c
 11858  004430  2206               	addwfc	(??_isspace+3)^0,f,c
 11859  004432  5006               	movf	(??_isspace+3)^0,w,c
 11860  004434  E109               	bnz	u4610
 11861  004436  0E05               	movlw	5
 11862  004438  5C05               	subwf	(??_isspace+2)^0,w,c
 11863  00443A  A0D8               	btfss	status,0,c
 11864  00443C  EF22  F022         	goto	u4611
 11865  004440  EF24  F022         	goto	u4610
 11866  004444                     u4611:
 11867  004444  EF26  F022         	goto	l4464
 11868  004448                     u4610:
 11869  004448  0E00               	movlw	0
 11870  00444A  6E07               	movwf	_isspace$1565^0,c
 11871  00444C                     l4464:
 11872  00444C  C007  F001         	movff	_isspace$1565,?_isspace
 11873  004450  6A02               	clrf	(?_isspace+1)^0,c
 11874  004452  0012               	return		;funcret
 11875  004454                     __end_of_isspace:
 11876                           	callstack 0
 11877                           
 11878 ;; *************** function _isdigit *****************
 11879 ;; Defined at:
 11880 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;  c               2    0[COMRAM] int 
 11883 ;; Auto vars:     Size  Location     Type
 11884 ;;		None
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  2    0[COMRAM] int 
 11887 ;; Registers used:
 11888 ;;		wreg, status,2, status,0
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11894 ;;      Params:         2       0       0       0       0       0       0       0       0
 11895 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11896 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11897 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11898 ;;Total ram usage:        6 bytes
 11899 ;; Hardware stack levels used: 1
 11900 ;; This function calls:
 11901 ;;		Nothing
 11902 ;; This function is called by:
 11903 ;;		_vfpfcnvrt
 11904 ;;		_atoi
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text56
 11909  0047FC                     __ptext56:
 11910                           	callstack 0
 11911  0047FC                     _isdigit:
 11912                           	callstack 26
 11913  0047FC  0ED0               	movlw	208
 11914  0047FE  6E03               	movwf	??_isdigit^0,c
 11915  004800  0EFF               	movlw	255
 11916  004802  6E04               	movwf	(??_isdigit+1)^0,c
 11917  004804  C001  F005         	movff	isdigit@c,??_isdigit+2
 11918  004808  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11919  00480C  5003               	movf	??_isdigit^0,w,c
 11920  00480E  2605               	addwf	(??_isdigit+2)^0,f,c
 11921  004810  5004               	movf	(??_isdigit+1)^0,w,c
 11922  004812  2206               	addwfc	(??_isdigit+3)^0,f,c
 11923  004814  5006               	movf	(??_isdigit+3)^0,w,c
 11924  004816  E10A               	bnz	u4580
 11925  004818  0E0A               	movlw	10
 11926  00481A  5C05               	subwf	(??_isdigit+2)^0,w,c
 11927  00481C  A0D8               	btfss	status,0,c
 11928  00481E  EF13  F024         	goto	u4581
 11929  004822  EF16  F024         	goto	u4580
 11930  004826                     u4581:
 11931  004826  0E01               	movlw	1
 11932  004828  EF17  F024         	goto	u4590
 11933  00482C                     u4580:
 11934  00482C  0E00               	movlw	0
 11935  00482E                     u4590:
 11936  00482E  6E01               	movwf	?_isdigit^0,c
 11937  004830  6A02               	clrf	(?_isdigit+1)^0,c
 11938  004832  0012               	return		;funcret
 11939  004834                     __end_of_isdigit:
 11940                           	callstack 0
 11941                           
 11942 ;; *************** function ___wmul *****************
 11943 ;; Defined at:
 11944 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 11945 ;; Parameters:    Size  Location     Type
 11946 ;;  multiplier      2    0[COMRAM] unsigned int 
 11947 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;  product         2    4[COMRAM] unsigned int 
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  2    0[COMRAM] unsigned int 
 11952 ;; Registers used:
 11953 ;;		wreg, status,2, status,0, prodl, prodh
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11959 ;;      Params:         4       0       0       0       0       0       0       0       0
 11960 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11961 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11962 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11963 ;;Total ram usage:        6 bytes
 11964 ;; Hardware stack levels used: 1
 11965 ;; This function calls:
 11966 ;;		Nothing
 11967 ;; This function is called by:
 11968 ;;		_atoi
 11969 ;; This function uses a non-reentrant model
 11970 ;;
 11971                           
 11972                           	psect	text57
 11973  004960                     __ptext57:
 11974                           	callstack 0
 11975  004960                     ___wmul:
 11976                           	callstack 25
 11977  004960  5001               	movf	___wmul@multiplier^0,w,c
 11978  004962  0203               	mulwf	___wmul@multiplicand^0,c
 11979  004964  CFF3 F005          	movff	prodl,___wmul@product
 11980  004968  CFF4 F006          	movff	prodh,___wmul@product+1
 11981  00496C  5001               	movf	___wmul@multiplier^0,w,c
 11982  00496E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11983  004970  50F3               	movf	243,w,c
 11984  004972  2606               	addwf	(___wmul@product+1)^0,f,c
 11985  004974  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11986  004976  0203               	mulwf	___wmul@multiplicand^0,c
 11987  004978  50F3               	movf	243,w,c
 11988  00497A  2606               	addwf	(___wmul@product+1)^0,f,c
 11989  00497C  C005  F001         	movff	___wmul@product,?___wmul
 11990  004980  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11991  004984  0012               	return		;funcret
 11992  004986                     __end_of___wmul:
 11993                           	callstack 0
 11994                           
 11995 ;; *************** function _LCD_String_xy *****************
 11996 ;; Defined at:
 11997 ;;		line 124 in file "LCD_caracter.c"
 11998 ;; Parameters:    Size  Location     Type
 11999 ;;  row             1    wreg     unsigned char 
 12000 ;;  pos             1   10[COMRAM] unsigned char 
 12001 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 12002 ;;		 -> Stemp(20), RTC_Calendario@date(10), RTC_Calendario@hours(10), STR_2(3), 
 12003 ;;		 -> STR_1(3), 
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;  row             1   13[COMRAM] unsigned char 
 12006 ;;  location        1   14[COMRAM] unsigned char 
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  1    wreg      void 
 12009 ;; Registers used:
 12010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12016 ;;      Params:         3       0       0       0       0       0       0       0       0
 12017 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12018 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12019 ;;      Totals:         5       0       0       0       0       0       0       0       0
 12020 ;;Total ram usage:        5 bytes
 12021 ;; Hardware stack levels used: 1
 12022 ;; Hardware stack levels required when called: 3
 12023 ;; This function calls:
 12024 ;;		_LCD_Command
 12025 ;;		_LCD_String
 12026 ;; This function is called by:
 12027 ;;		_RTC_Calendario
 12028 ;;		_Estado_Soleado
 12029 ;;		_Estado_Nublado
 12030 ;;		_Estado_Lluvioso
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           	psect	text58
 12035  00469E                     __ptext58:
 12036                           	callstack 0
 12037  00469E                     _LCD_String_xy:
 12038                           	callstack 26
 12039                           
 12040                           ;incstack = 0
 12041                           ;LCD_String_xy@row stored from wreg
 12042  00469E  6E0E               	movwf	LCD_String_xy@row^0,c
 12043  0046A0                     
 12044                           ;LCD_caracter.c: 127:     if(row<=1)
 12045  0046A0  0E02               	movlw	2
 12046  0046A2  600E               	cpfslt	LCD_String_xy@row^0,c
 12047  0046A4  EF56  F023         	goto	u5941
 12048  0046A8  EF58  F023         	goto	u5940
 12049  0046AC                     u5941:
 12050  0046AC  EF61  F023         	goto	l5290
 12051  0046B0                     u5940:
 12052  0046B0                     
 12053                           ;LCD_caracter.c: 128:     {;LCD_caracter.c: 129:         location=(0x80) | ((pos) & 0x0f
      +                          );
 12054  0046B0  500B               	movf	LCD_String_xy@pos^0,w,c
 12055  0046B2  0B0F               	andlw	15
 12056  0046B4  0980               	iorlw	128
 12057  0046B6  6E0F               	movwf	LCD_String_xy@location^0,c
 12058  0046B8                     
 12059                           ;LCD_caracter.c: 130:         LCD_Command(location);
 12060  0046B8  500F               	movf	LCD_String_xy@location^0,w,c
 12061  0046BA  EC52  F022         	call	_LCD_Command
 12062                           
 12063                           ;LCD_caracter.c: 131:     }
 12064  0046BE  EF68  F023         	goto	l5294
 12065  0046C2                     l5290:
 12066                           
 12067                           ;LCD_caracter.c: 133:     {;LCD_caracter.c: 134:         location=(0xC0) | ((pos) & 0x0f
      +                          );
 12068  0046C2  500B               	movf	LCD_String_xy@pos^0,w,c
 12069  0046C4  0B0F               	andlw	15
 12070  0046C6  09C0               	iorlw	192
 12071  0046C8  6E0F               	movwf	LCD_String_xy@location^0,c
 12072  0046CA                     
 12073                           ;LCD_caracter.c: 135:         LCD_Command(location);
 12074  0046CA  500F               	movf	LCD_String_xy@location^0,w,c
 12075  0046CC  EC52  F022         	call	_LCD_Command
 12076  0046D0                     l5294:
 12077                           
 12078                           ;LCD_caracter.c: 139:     LCD_String(msg);
 12079  0046D0  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 12080  0046D4  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 12081  0046D8  ECF4  F020         	call	_LCD_String	;wreg free
 12082  0046DC  0012               	return		;funcret
 12083  0046DE                     __end_of_LCD_String_xy:
 12084                           	callstack 0
 12085                           
 12086 ;; *************** function _LCD_String *****************
 12087 ;; Defined at:
 12088 ;;		line 101 in file "LCD_caracter.c"
 12089 ;; Parameters:    Size  Location     Type
 12090 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 12091 ;;		 -> Stemp(20), STR_18(4), STR_17(4), STR_16(4), 
 12092 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
 12093 ;;		 -> RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), 
 12094 ;;		 -> RTC_Calendario@mins(10), RTC_Calendario@secs(10), STR_2(3), STR_1(3), 
 12095 ;; Auto vars:     Size  Location     Type
 12096 ;;		None
 12097 ;; Return value:  Size  Location     Type
 12098 ;;                  1    wreg      void 
 12099 ;; Registers used:
 12100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12101 ;; Tracked objects:
 12102 ;;		On entry : 0/0
 12103 ;;		On exit  : 0/0
 12104 ;;		Unchanged: 0/0
 12105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12106 ;;      Params:         2       0       0       0       0       0       0       0       0
 12107 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12108 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12109 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12110 ;;Total ram usage:        2 bytes
 12111 ;; Hardware stack levels used: 1
 12112 ;; Hardware stack levels required when called: 2
 12113 ;; This function calls:
 12114 ;;		_LCD_Char
 12115 ;; This function is called by:
 12116 ;;		_LCD_String_xy
 12117 ;;		_RTC_Calendario
 12118 ;; This function uses a non-reentrant model
 12119 ;;
 12120                           
 12121                           	psect	text59
 12122  0041E8                     __ptext59:
 12123                           	callstack 0
 12124  0041E8                     _LCD_String:
 12125                           	callstack 26
 12126  0041E8                     
 12127                           ;LCD_caracter.c: 101: void LCD_String(const char *msg);LCD_caracter.c: 102: {;LCD_caract
      +                          er.c: 103:  while((*msg)!=0)
 12128  0041E8  EF0A  F021         	goto	l5136
 12129  0041EC                     l5132:
 12130                           
 12131                           ;LCD_caracter.c: 104:  {;LCD_caracter.c: 105:    LCD_Char(*msg);
 12132  0041EC  C009  FFF6         	movff	LCD_String@msg,tblptrl
 12133  0041F0  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 12134  0041F4  6AF8               	clrf	tblptru,c
 12135  0041F6  0E07               	movlw	(high __ramtop+-1)
 12136  0041F8  64F7               	cpfsgt	tblptrh,c
 12137  0041FA  D003               	bra	u5707
 12138  0041FC  0008               	tblrd		*
 12139  0041FE  50F5               	movf	tablat,w,c
 12140  004200  D005               	bra	u5700
 12141  004202                     u5707:
 12142  004202  CFF6 FFE1          	movff	tblptrl,fsr1l
 12143  004206  CFF7 FFE2          	movff	tblptrh,fsr1h
 12144  00420A  50E7               	movf	indf1,w,c
 12145  00420C                     u5700:
 12146  00420C  EC78  F022         	call	_LCD_Char
 12147  004210                     
 12148                           ;LCD_caracter.c: 106:    msg++;
 12149  004210  4A09               	infsnz	LCD_String@msg^0,f,c
 12150  004212  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 12151  004214                     l5136:
 12152                           
 12153                           ;LCD_caracter.c: 103:  while((*msg)!=0)
 12154  004214  C009  FFF6         	movff	LCD_String@msg,tblptrl
 12155  004218  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 12156  00421C  6AF8               	clrf	tblptru,c
 12157  00421E  0E07               	movlw	(high __ramtop+-1)
 12158  004220  64F7               	cpfsgt	tblptrh,c
 12159  004222  D003               	bra	u5717
 12160  004224  0008               	tblrd		*
 12161  004226  50F5               	movf	tablat,w,c
 12162  004228  D005               	bra	u5710
 12163  00422A                     u5717:
 12164  00422A  CFF6 FFE1          	movff	tblptrl,fsr1l
 12165  00422E  CFF7 FFE2          	movff	tblptrh,fsr1h
 12166  004232  50E7               	movf	indf1,w,c
 12167  004234                     u5710:
 12168  004234  0900               	iorlw	0
 12169  004236  A4D8               	btfss	status,2,c
 12170  004238  EF20  F021         	goto	u5721
 12171  00423C  EF22  F021         	goto	u5720
 12172  004240                     u5721:
 12173  004240  EFF6  F020         	goto	l5132
 12174  004244                     u5720:
 12175  004244  0012               	return		;funcret
 12176  004246                     __end_of_LCD_String:
 12177                           	callstack 0
 12178                           
 12179 ;; *************** function _LCD_Custom_Char *****************
 12180 ;; Defined at:
 12181 ;;		line 174 in file "LCD_caracter.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;  loc             1    wreg     unsigned char 
 12184 ;;  msg             2    8[COMRAM] PTR unsigned char 
 12185 ;;		 -> character1(8), character3(8), character2(8), 
 12186 ;; Auto vars:     Size  Location     Type
 12187 ;;  loc             1   10[COMRAM] unsigned char 
 12188 ;;  i               1   11[COMRAM] unsigned char 
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1    wreg      void 
 12191 ;; Registers used:
 12192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12193 ;; Tracked objects:
 12194 ;;		On entry : 0/0
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12198 ;;      Params:         2       0       0       0       0       0       0       0       0
 12199 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12200 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12201 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12202 ;;Total ram usage:        4 bytes
 12203 ;; Hardware stack levels used: 1
 12204 ;; Hardware stack levels required when called: 2
 12205 ;; This function calls:
 12206 ;;		_LCD_Char
 12207 ;;		_LCD_Command
 12208 ;; This function is called by:
 12209 ;;		_Estado_Soleado
 12210 ;;		_Estado_Nublado
 12211 ;;		_Estado_Lluvioso
 12212 ;; This function uses a non-reentrant model
 12213 ;;
 12214                           
 12215                           	psect	text60
 12216  004586                     __ptext60:
 12217                           	callstack 0
 12218  004586                     _LCD_Custom_Char:
 12219                           	callstack 27
 12220                           
 12221                           ;incstack = 0
 12222                           ;LCD_Custom_Char@loc stored from wreg
 12223  004586  6E0B               	movwf	LCD_Custom_Char@loc^0,c
 12224  004588                     
 12225                           ;LCD_caracter.c: 174: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_
      +                          caracter.c: 175: {;LCD_caracter.c: 176:     unsigned char i;;LCD_caracter.c: 177:     if
      +                           (loc< 8 )
 12226  004588  0E08               	movlw	8
 12227  00458A  600B               	cpfslt	LCD_Custom_Char@loc^0,c
 12228  00458C  EFCA  F022         	goto	u5951
 12229  004590  EFCC  F022         	goto	u5950
 12230  004594                     u5951:
 12231  004594  EFE6  F022         	goto	l115
 12232  004598                     u5950:
 12233  004598                     
 12234                           ;LCD_caracter.c: 178:     {;LCD_caracter.c: 179:      LCD_Command ( 0x40 +(loc* 8 ));
 12235  004598  500B               	movf	LCD_Custom_Char@loc^0,w,c
 12236  00459A  0D08               	mullw	8
 12237  00459C  50F3               	movf	243,w,c
 12238  00459E  0F40               	addlw	64
 12239  0045A0  EC52  F022         	call	_LCD_Command
 12240  0045A4                     
 12241                           ;LCD_caracter.c: 180:        for (i= 0 ;i< 8 ;i++)
 12242  0045A4  0E00               	movlw	0
 12243  0045A6  6E0C               	movwf	LCD_Custom_Char@i^0,c
 12244  0045A8                     l5306:
 12245                           
 12246                           ;LCD_caracter.c: 181:            LCD_Char (msg[i]);
 12247  0045A8  500C               	movf	LCD_Custom_Char@i^0,w,c
 12248  0045AA  2409               	addwf	LCD_Custom_Char@msg^0,w,c
 12249  0045AC  6ED9               	movwf	fsr2l,c
 12250  0045AE  0E00               	movlw	0
 12251  0045B0  200A               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
 12252  0045B2  6EDA               	movwf	fsr2h,c
 12253  0045B4  50DF               	movf	indf2,w,c
 12254  0045B6  EC78  F022         	call	_LCD_Char
 12255  0045BA  2A0C               	incf	LCD_Custom_Char@i^0,f,c
 12256  0045BC  0E07               	movlw	7
 12257  0045BE  640C               	cpfsgt	LCD_Custom_Char@i^0,c
 12258  0045C0  EFE4  F022         	goto	u5961
 12259  0045C4  EFE6  F022         	goto	u5960
 12260  0045C8                     u5961:
 12261  0045C8  EFD4  F022         	goto	l5306
 12262  0045CC                     u5960:
 12263  0045CC                     l115:
 12264  0045CC  0012               	return		;funcret
 12265  0045CE                     __end_of_LCD_Custom_Char:
 12266                           	callstack 0
 12267                           
 12268 ;; *************** function _LCD_Command *****************
 12269 ;; Defined at:
 12270 ;;		line 48 in file "LCD_caracter.c"
 12271 ;; Parameters:    Size  Location     Type
 12272 ;;  cmd             1    wreg     unsigned char 
 12273 ;; Auto vars:     Size  Location     Type
 12274 ;;  cmd             1    7[COMRAM] unsigned char 
 12275 ;; Return value:  Size  Location     Type
 12276 ;;                  1    wreg      void 
 12277 ;; Registers used:
 12278 ;;		wreg, status,2, status,0, cstack
 12279 ;; Tracked objects:
 12280 ;;		On entry : 0/0
 12281 ;;		On exit  : 0/0
 12282 ;;		Unchanged: 0/0
 12283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12284 ;;      Params:         0       0       0       0       0       0       0       0       0
 12285 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12286 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12287 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12288 ;;Total ram usage:        2 bytes
 12289 ;; Hardware stack levels used: 1
 12290 ;; Hardware stack levels required when called: 1
 12291 ;; This function calls:
 12292 ;;		_LCD_MSdelay
 12293 ;; This function is called by:
 12294 ;;		_LCD_Init
 12295 ;;		_LCD_String_xy
 12296 ;;		_LCD_Clear
 12297 ;;		_LCD_Custom_Char
 12298 ;;		_Estado_Soleado
 12299 ;;		_Estado_Nublado
 12300 ;;		_Estado_Lluvioso
 12301 ;; This function uses a non-reentrant model
 12302 ;;
 12303                           
 12304                           	psect	text61
 12305  0044A4                     __ptext61:
 12306                           	callstack 0
 12307  0044A4                     _LCD_Command:
 12308                           	callstack 27
 12309                           
 12310                           ;incstack = 0
 12311                           ;LCD_Command@cmd stored from wreg
 12312  0044A4  6E08               	movwf	LCD_Command@cmd^0,c
 12313  0044A6                     
 12314                           ;LCD_caracter.c: 48: void LCD_Command(unsigned char cmd );LCD_caracter.c: 49: {;LCD_cara
      +                          cter.c: 50:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 12315  0044A6  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 12316  0044AA  0EF0               	movlw	240
 12317  0044AC  1607               	andwf	??_LCD_Command^0,f,c
 12318  0044AE  508C               	movf	140,w,c	;volatile
 12319  0044B0  0B0F               	andlw	15
 12320  0044B2  1007               	iorwf	??_LCD_Command^0,w,c
 12321  0044B4  6E8C               	movwf	140,c	;volatile
 12322  0044B6                     
 12323                           ;LCD_caracter.c: 51:  LATD0 = 0;
 12324  0044B6  908C               	bcf	3980,0,c	;volatile
 12325  0044B8                     
 12326                           ;LCD_caracter.c: 52:  LATD1 = 1;
 12327  0044B8  828C               	bsf	3980,1,c	;volatile
 12328  0044BA                     
 12329                           ;LCD_caracter.c: 53:  __nop();
 12330  0044BA  F000               	nop	
 12331  0044BC                     
 12332                           ;LCD_caracter.c: 54:  LATD1 = 0;
 12333  0044BC  928C               	bcf	3980,1,c	;volatile
 12334  0044BE                     
 12335                           ;LCD_caracter.c: 55:  LCD_MSdelay(1);
 12336  0044BE  0E00               	movlw	0
 12337  0044C0  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12338  0044C2  0E01               	movlw	1
 12339  0044C4  6E01               	movwf	LCD_MSdelay@val^0,c
 12340  0044C6  EC9E  F022         	call	_LCD_MSdelay	;wreg free
 12341  0044CA                     
 12342                           ;LCD_caracter.c: 56:     LATD = (LATD & 0x0f) | (cmd<<4);
 12343  0044CA  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 12344  0044CE  3A07               	swapf	??_LCD_Command^0,f,c
 12345  0044D0  0EF0               	movlw	240
 12346  0044D2  1607               	andwf	??_LCD_Command^0,f,c
 12347  0044D4  508C               	movf	140,w,c	;volatile
 12348  0044D6  0B0F               	andlw	15
 12349  0044D8  1007               	iorwf	??_LCD_Command^0,w,c
 12350  0044DA  6E8C               	movwf	140,c	;volatile
 12351  0044DC                     
 12352                           ;LCD_caracter.c: 57:  LATD1 = 1;
 12353  0044DC  828C               	bsf	3980,1,c	;volatile
 12354  0044DE                     
 12355                           ;LCD_caracter.c: 58:  __nop();
 12356  0044DE  F000               	nop	
 12357  0044E0                     
 12358                           ;LCD_caracter.c: 59:  LATD1 = 0;
 12359  0044E0  928C               	bcf	3980,1,c	;volatile
 12360                           
 12361                           ;LCD_caracter.c: 60:  LCD_MSdelay(3);
 12362  0044E2  0E00               	movlw	0
 12363  0044E4  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12364  0044E6  0E03               	movlw	3
 12365  0044E8  6E01               	movwf	LCD_MSdelay@val^0,c
 12366  0044EA  EC9E  F022         	call	_LCD_MSdelay	;wreg free
 12367  0044EE  0012               	return		;funcret
 12368  0044F0                     __end_of_LCD_Command:
 12369                           	callstack 0
 12370                           
 12371 ;; *************** function _LCD_Char *****************
 12372 ;; Defined at:
 12373 ;;		line 75 in file "LCD_caracter.c"
 12374 ;; Parameters:    Size  Location     Type
 12375 ;;  dat             1    wreg     unsigned char 
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;  dat             1    7[COMRAM] unsigned char 
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  1    wreg      void 
 12380 ;; Registers used:
 12381 ;;		wreg, status,2, status,0, cstack
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/0
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12387 ;;      Params:         0       0       0       0       0       0       0       0       0
 12388 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12389 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12390 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12391 ;;Total ram usage:        2 bytes
 12392 ;; Hardware stack levels used: 1
 12393 ;; Hardware stack levels required when called: 1
 12394 ;; This function calls:
 12395 ;;		_LCD_MSdelay
 12396 ;; This function is called by:
 12397 ;;		_LCD_String
 12398 ;;		_LCD_Custom_Char
 12399 ;;		_Estado_Soleado
 12400 ;;		_Estado_Nublado
 12401 ;;		_Estado_Lluvioso
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           	psect	text62
 12406  0044F0                     __ptext62:
 12407                           	callstack 0
 12408  0044F0                     _LCD_Char:
 12409                           	callstack 26
 12410                           
 12411                           ;incstack = 0
 12412                           ;LCD_Char@dat stored from wreg
 12413  0044F0  6E08               	movwf	LCD_Char@dat^0,c
 12414  0044F2                     
 12415                           ;LCD_caracter.c: 75: void LCD_Char(unsigned char dat);LCD_caracter.c: 76: {;LCD_caracter
      +                          .c: 77:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 12416  0044F2  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12417  0044F6  0EF0               	movlw	240
 12418  0044F8  1607               	andwf	??_LCD_Char^0,f,c
 12419  0044FA  508C               	movf	140,w,c	;volatile
 12420  0044FC  0B0F               	andlw	15
 12421  0044FE  1007               	iorwf	??_LCD_Char^0,w,c
 12422  004500  6E8C               	movwf	140,c	;volatile
 12423  004502                     
 12424                           ;LCD_caracter.c: 78:  LATD0 = 1;
 12425  004502  808C               	bsf	3980,0,c	;volatile
 12426  004504                     
 12427                           ;LCD_caracter.c: 79:  LATD1 = 1;
 12428  004504  828C               	bsf	3980,1,c	;volatile
 12429  004506                     
 12430                           ;LCD_caracter.c: 80:  __nop();
 12431  004506  F000               	nop	
 12432  004508                     
 12433                           ;LCD_caracter.c: 81:  LATD1 = 0;
 12434  004508  928C               	bcf	3980,1,c	;volatile
 12435  00450A                     
 12436                           ;LCD_caracter.c: 82:  LCD_MSdelay(1);
 12437  00450A  0E00               	movlw	0
 12438  00450C  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12439  00450E  0E01               	movlw	1
 12440  004510  6E01               	movwf	LCD_MSdelay@val^0,c
 12441  004512  EC9E  F022         	call	_LCD_MSdelay	;wreg free
 12442  004516                     
 12443                           ;LCD_caracter.c: 83:     LATD = (LATD & 0x0f) | (dat<<4);
 12444  004516  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12445  00451A  3A07               	swapf	??_LCD_Char^0,f,c
 12446  00451C  0EF0               	movlw	240
 12447  00451E  1607               	andwf	??_LCD_Char^0,f,c
 12448  004520  508C               	movf	140,w,c	;volatile
 12449  004522  0B0F               	andlw	15
 12450  004524  1007               	iorwf	??_LCD_Char^0,w,c
 12451  004526  6E8C               	movwf	140,c	;volatile
 12452  004528                     
 12453                           ;LCD_caracter.c: 84:  LATD1 = 1;
 12454  004528  828C               	bsf	3980,1,c	;volatile
 12455  00452A                     
 12456                           ;LCD_caracter.c: 85:  __nop();
 12457  00452A  F000               	nop	
 12458  00452C                     
 12459                           ;LCD_caracter.c: 86:  LATD1 = 0;
 12460  00452C  928C               	bcf	3980,1,c	;volatile
 12461                           
 12462                           ;LCD_caracter.c: 87:  LCD_MSdelay(3);
 12463  00452E  0E00               	movlw	0
 12464  004530  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12465  004532  0E03               	movlw	3
 12466  004534  6E01               	movwf	LCD_MSdelay@val^0,c
 12467  004536  EC9E  F022         	call	_LCD_MSdelay	;wreg free
 12468  00453A  0012               	return		;funcret
 12469  00453C                     __end_of_LCD_Char:
 12470                           	callstack 0
 12471                           
 12472 ;; *************** function _LCD_MSdelay *****************
 12473 ;; Defined at:
 12474 ;;		line 199 in file "LCD_caracter.c"
 12475 ;; Parameters:    Size  Location     Type
 12476 ;;  val             2    0[COMRAM] unsigned int 
 12477 ;; Auto vars:     Size  Location     Type
 12478 ;;  j               2    4[COMRAM] unsigned int 
 12479 ;;  i               2    2[COMRAM] unsigned int 
 12480 ;; Return value:  Size  Location     Type
 12481 ;;                  1    wreg      void 
 12482 ;; Registers used:
 12483 ;;		wreg, status,2, status,0
 12484 ;; Tracked objects:
 12485 ;;		On entry : 0/0
 12486 ;;		On exit  : 0/0
 12487 ;;		Unchanged: 0/0
 12488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12489 ;;      Params:         2       0       0       0       0       0       0       0       0
 12490 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12491 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12492 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12493 ;;Total ram usage:        6 bytes
 12494 ;; Hardware stack levels used: 1
 12495 ;; This function calls:
 12496 ;;		Nothing
 12497 ;; This function is called by:
 12498 ;;		_main
 12499 ;;		_LCD_Init
 12500 ;;		_LCD_Command
 12501 ;;		_LCD_Char
 12502 ;;		_LCD_Clear
 12503 ;;		_RTC_Calendario
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507                           	psect	text63
 12508  00453C                     __ptext63:
 12509                           	callstack 0
 12510  00453C                     _LCD_MSdelay:
 12511                           	callstack 26
 12512  00453C                     
 12513                           ;LCD_caracter.c: 199: void LCD_MSdelay(unsigned int val);LCD_caracter.c: 200: {;LCD_cara
      +                          cter.c: 201:  unsigned int i,j;;LCD_caracter.c: 202:  for(i=0;i<val;i++)
 12514  00453C  0E00               	movlw	0
 12515  00453E  6E04               	movwf	(LCD_MSdelay@i+1)^0,c
 12516  004540  0E00               	movlw	0
 12517  004542  6E03               	movwf	LCD_MSdelay@i^0,c
 12518  004544  EFB7  F022         	goto	l4482
 12519  004548                     l4470:
 12520                           
 12521                           ;LCD_caracter.c: 203:      for(j=0;j<165;j++);
 12522  004548  0E00               	movlw	0
 12523  00454A  6E06               	movwf	(LCD_MSdelay@j+1)^0,c
 12524  00454C  0E00               	movlw	0
 12525  00454E  6E05               	movwf	LCD_MSdelay@j^0,c
 12526  004550                     l4476:
 12527  004550  4A05               	infsnz	LCD_MSdelay@j^0,f,c
 12528  004552  2A06               	incf	(LCD_MSdelay@j+1)^0,f,c
 12529  004554  5006               	movf	(LCD_MSdelay@j+1)^0,w,c
 12530  004556  E109               	bnz	u4620
 12531  004558  0EA5               	movlw	165
 12532  00455A  5C05               	subwf	LCD_MSdelay@j^0,w,c
 12533  00455C  A0D8               	btfss	status,0,c
 12534  00455E  EFB3  F022         	goto	u4621
 12535  004562  EFB5  F022         	goto	u4620
 12536  004566                     u4621:
 12537  004566  EFA8  F022         	goto	l4476
 12538  00456A                     u4620:
 12539  00456A  4A03               	infsnz	LCD_MSdelay@i^0,f,c
 12540  00456C  2A04               	incf	(LCD_MSdelay@i+1)^0,f,c
 12541  00456E                     l4482:
 12542  00456E  5001               	movf	LCD_MSdelay@val^0,w,c
 12543  004570  5C03               	subwf	LCD_MSdelay@i^0,w,c
 12544  004572  5002               	movf	(LCD_MSdelay@val+1)^0,w,c
 12545  004574  5804               	subwfb	(LCD_MSdelay@i+1)^0,w,c
 12546  004576  A0D8               	btfss	status,0,c
 12547  004578  EFC0  F022         	goto	u4631
 12548  00457C  EFC2  F022         	goto	u4630
 12549  004580                     u4631:
 12550  004580  EFA4  F022         	goto	l4470
 12551  004584                     u4630:
 12552  004584  0012               	return		;funcret
 12553  004586                     __end_of_LCD_MSdelay:
 12554                           	callstack 0
 12555                           
 12556                           	psect	rparam
 12557  0000                     
 12558                           	psect	idloc
 12559                           
 12560                           ;Config register IDLOC0 @ 0x200000
 12561                           ;	unspecified, using default values
 12562  200000                     	org	2097152
 12563  200000  FF                 	db	255
 12564                           
 12565                           ;Config register IDLOC1 @ 0x200001
 12566                           ;	unspecified, using default values
 12567  200001                     	org	2097153
 12568  200001  FF                 	db	255
 12569                           
 12570                           ;Config register IDLOC2 @ 0x200002
 12571                           ;	unspecified, using default values
 12572  200002                     	org	2097154
 12573  200002  FF                 	db	255
 12574                           
 12575                           ;Config register IDLOC3 @ 0x200003
 12576                           ;	unspecified, using default values
 12577  200003                     	org	2097155
 12578  200003  FF                 	db	255
 12579                           
 12580                           ;Config register IDLOC4 @ 0x200004
 12581                           ;	unspecified, using default values
 12582  200004                     	org	2097156
 12583  200004  FF                 	db	255
 12584                           
 12585                           ;Config register IDLOC5 @ 0x200005
 12586                           ;	unspecified, using default values
 12587  200005                     	org	2097157
 12588  200005  FF                 	db	255
 12589                           
 12590                           ;Config register IDLOC6 @ 0x200006
 12591                           ;	unspecified, using default values
 12592  200006                     	org	2097158
 12593  200006  FF                 	db	255
 12594                           
 12595                           ;Config register IDLOC7 @ 0x200007
 12596                           ;	unspecified, using default values
 12597  200007                     	org	2097159
 12598  200007  FF                 	db	255
 12599                           
 12600                           	psect	config
 12601                           
 12602                           ;Config register CONFIG1L @ 0x300000
 12603                           ;	PLL Prescaler Selection bits
 12604                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12605                           ;	System Clock Postscaler Selection bits
 12606                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12607                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12608                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12609  300000                     	org	3145728
 12610  300000  00                 	db	0
 12611                           
 12612                           ;Config register CONFIG1H @ 0x300001
 12613                           ;	Oscillator Selection bits
 12614                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12615                           ;	Fail-Safe Clock Monitor Enable bit
 12616                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12617                           ;	Internal/External Oscillator Switchover bit
 12618                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12619  300001                     	org	3145729
 12620  300001  09                 	db	9
 12621                           
 12622                           ;Config register CONFIG2L @ 0x300002
 12623                           ;	Power-up Timer Enable bit
 12624                           ;	PWRT = ON, PWRT enabled
 12625                           ;	Brown-out Reset Enable bits
 12626                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12627                           ;	Brown-out Reset Voltage bits
 12628                           ;	BORV = 3, Minimum setting 2.05V
 12629                           ;	USB Voltage Regulator Enable bit
 12630                           ;	VREGEN = OFF, USB voltage regulator disabled
 12631  300002                     	org	3145730
 12632  300002  18                 	db	24
 12633                           
 12634                           ;Config register CONFIG2H @ 0x300003
 12635                           ;	Watchdog Timer Enable bit
 12636                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12637                           ;	Watchdog Timer Postscale Select bits
 12638                           ;	WDTPS = 32768, 1:32768
 12639  300003                     	org	3145731
 12640  300003  1E                 	db	30
 12641                           
 12642                           ; Padding undefined space
 12643  300004                     	org	3145732
 12644  300004  FF                 	db	255
 12645                           
 12646                           ;Config register CONFIG3H @ 0x300005
 12647                           ;	CCP2 MUX bit
 12648                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12649                           ;	PORTB A/D Enable bit
 12650                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12651                           ;	Low-Power Timer 1 Oscillator Enable bit
 12652                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12653                           ;	MCLR Pin Enable bit
 12654                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12655  300005                     	org	3145733
 12656  300005  81                 	db	129
 12657                           
 12658                           ;Config register CONFIG4L @ 0x300006
 12659                           ;	Stack Full/Underflow Reset Enable bit
 12660                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12661                           ;	Single-Supply ICSP Enable bit
 12662                           ;	LVP = OFF, Single-Supply ICSP disabled
 12663                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12664                           ;	ICPRT = OFF, ICPORT disabled
 12665                           ;	Extended Instruction Set Enable bit
 12666                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12667                           ;	Background Debugger Enable bit
 12668                           ;	DEBUG = 0x1, unprogrammed default
 12669  300006                     	org	3145734
 12670  300006  80                 	db	128
 12671                           
 12672                           ; Padding undefined space
 12673  300007                     	org	3145735
 12674  300007  FF                 	db	255
 12675                           
 12676                           ;Config register CONFIG5L @ 0x300008
 12677                           ;	Code Protection bit
 12678                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12679                           ;	Code Protection bit
 12680                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12681                           ;	Code Protection bit
 12682                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12683                           ;	Code Protection bit
 12684                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12685  300008                     	org	3145736
 12686  300008  0F                 	db	15
 12687                           
 12688                           ;Config register CONFIG5H @ 0x300009
 12689                           ;	Boot Block Code Protection bit
 12690                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12691                           ;	Data EEPROM Code Protection bit
 12692                           ;	CPD = OFF, Data EEPROM is not code-protected
 12693  300009                     	org	3145737
 12694  300009  C0                 	db	192
 12695                           
 12696                           ;Config register CONFIG6L @ 0x30000A
 12697                           ;	Write Protection bit
 12698                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12699                           ;	Write Protection bit
 12700                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12701                           ;	Write Protection bit
 12702                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12703                           ;	Write Protection bit
 12704                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12705  30000A                     	org	3145738
 12706  30000A  0F                 	db	15
 12707                           
 12708                           ;Config register CONFIG6H @ 0x30000B
 12709                           ;	Configuration Register Write Protection bit
 12710                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12711                           ;	Boot Block Write Protection bit
 12712                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12713                           ;	Data EEPROM Write Protection bit
 12714                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12715  30000B                     	org	3145739
 12716  30000B  E0                 	db	224
 12717                           
 12718                           ;Config register CONFIG7L @ 0x30000C
 12719                           ;	Table Read Protection bit
 12720                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12721                           ;	Table Read Protection bit
 12722                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12723                           ;	Table Read Protection bit
 12724                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12725                           ;	Table Read Protection bit
 12726                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12727  30000C                     	org	3145740
 12728  30000C  0F                 	db	15
 12729                           
 12730                           ;Config register CONFIG7H @ 0x30000D
 12731                           ;	Boot Block Table Read Protection bit
 12732                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12733  30000D                     	org	3145741
 12734  30000D  40                 	db	64
 12735                           tosu	equ	0xFFF
 12736                           tosh	equ	0xFFE
 12737                           tosl	equ	0xFFD
 12738                           stkptr	equ	0xFFC
 12739                           pclatu	equ	0xFFB
 12740                           pclath	equ	0xFFA
 12741                           pcl	equ	0xFF9
 12742                           tblptru	equ	0xFF8
 12743                           tblptrh	equ	0xFF7
 12744                           tblptrl	equ	0xFF6
 12745                           tablat	equ	0xFF5
 12746                           prodh	equ	0xFF4
 12747                           prodl	equ	0xFF3
 12748                           indf0	equ	0xFEF
 12749                           postinc0	equ	0xFEE
 12750                           postdec0	equ	0xFED
 12751                           preinc0	equ	0xFEC
 12752                           plusw0	equ	0xFEB
 12753                           fsr0h	equ	0xFEA
 12754                           fsr0l	equ	0xFE9
 12755                           wreg	equ	0xFE8
 12756                           indf1	equ	0xFE7
 12757                           postinc1	equ	0xFE6
 12758                           postdec1	equ	0xFE5
 12759                           preinc1	equ	0xFE4
 12760                           plusw1	equ	0xFE3
 12761                           fsr1h	equ	0xFE2
 12762                           fsr1l	equ	0xFE1
 12763                           bsr	equ	0xFE0
 12764                           indf2	equ	0xFDF
 12765                           postinc2	equ	0xFDE
 12766                           postdec2	equ	0xFDD
 12767                           preinc2	equ	0xFDC
 12768                           plusw2	equ	0xFDB
 12769                           fsr2h	equ	0xFDA
 12770                           fsr2l	equ	0xFD9
 12771                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    0
    Data        55
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    130     156
    BANK1           256     68     237
    BANK2           256      0      20
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1314_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character3(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    _PlayCancion->_play
    _play->_delay_us
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_LCD_MSdelay
    _LCD_Char->_LCD_MSdelay

Critical Paths under _main in BANK0

    _main->_RTC_Calendario
    _RTC_Calendario->_sprintf
    _Estados->_ReadADC
    _Estado_Soleado->_sprintf
    _Estado_Nublado->_sprintf
    _Estado_Lluvioso->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_RTC_Calendario

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  202388
                                            126 BANK0      4     4      0
                    _Estado_Lluvioso
                     _Estado_Nublado
                     _Estado_Soleado
                            _Estados
                           _I2C_Init
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                     _RTC_Calendario
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendario                                      71    71      0   48540
                                            124 BANK0      2     2      0
                                              0 BANK1     68    68      0
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                         _LCD_String
                      _LCD_String_xy
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1444
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1444
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Estados                                              6     4      2   11492
                                              6 BANK0      6     4      2
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _ReadLUZ                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              6     4      2    8609
                                              0 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              4 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (1) _Estado_Soleado                                       0     0      0   47583
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                        _PlayCancion
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _PlayCancion                                          2     2      0    2002
                                             18 COMRAM     2     2      0
                               _play
 ---------------------------------------------------------------------------------
 (3) _play                                                13     7      6    2002
                                              5 COMRAM    13     7      6
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Estado_Nublado                                       0     0      0   45581
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Estado_Lluvioso                                      0     0      0   45581
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   38295
                                            108 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   36264
                                            100 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   35876
                                             68 BANK0     32    26      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5327
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   24672
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             68 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                             84 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             84 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2566
                                             68 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2310
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             43 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    3948
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    1853
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     2      2    1850
                                              8 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     744
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0     744
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (5) _LCD_MSdelay                                          6     4      2     700
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Estado_Lluvioso
     _LCD_Char
       _LCD_MSdelay
     _LCD_Command
       _LCD_MSdelay
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ReadLUZ (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _Estado_Nublado
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
     _LCD_String_xy
     _sprintf
   _Estado_Soleado
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
     _LCD_String_xy
     _PlayCancion
       _play
         _delay_us
     _sprintf
   _Estados
     _ReadADC
       ___fladd
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
     _ReadLUZ
     ___flge
     ___xxtofl
   _I2C_Init
   _LCD_Clear
     _LCD_Command
     _LCD_MSdelay
   _LCD_Init
     _LCD_Command
     _LCD_MSdelay
   _LCD_MSdelay
   _RTC_Calendario
     _I2C_Init
     _I2C_Stop
     _LCD_Clear
     _LCD_Init
     _LCD_MSdelay
     _LCD_String
     _LCD_String_xy
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      14       9        7.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     44      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9C       5       97.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FC      20        0.0%
DATA                 0      0     1FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 04 12:09:15 2021

                          ?_LCD_MSdelay 0001                            ___fldiv@aexp 0044  
                          ___fldiv@bexp 0043                                       _i 005F  
                    __size_of_I2C_Ready 0012                            ___fldiv@sign 003C  
                    __size_of_I2C_Start 002E                            ?_LCD_Command 0001  
                           _SSPSTATbits 000FC7                      __size_of_I2C_Write 0022  
                                    l92 44EE                                      l95 453A  
                                    l89 4902                            ___awdiv@sign 0006  
                   ___wmul@multiplicand 0003                             ?_LCD_String 0009  
                       _LCD_Custom_Char 4586  RTC_Read_Calendar@read_calendar_address 0004  
                                   l101 4244                                     l106 46DC  
                                   l123 4584                                     l115 45CC  
                                   l204 403E                                     l109 4A10  
                                   l206 404C                                     l207 4068  
                                   l241 48D2                                     l161 3868  
                                   l313 4612                                     l163 3876  
                                   l252 3624                                     l164 392C  
                                   l420 4936                                     l316 42FA  
                                   l501 4188                                     l413 4908  
                                   l510 4984                                     l422 4944  
                                   l239 48AE                                     l415 4916  
                                   l431 49D2                                     l504 4354  
                                   l424 495E                                     l328 2A22  
                                   l249 3D54                                     l441 49EE  
                                   l417 4930                                     l433 49D4  
                                   l450 49E8                                     l507 43AE  
                                   l444 49FC                                     l437 49A6  
                                   l429 49C4                                     l390 4752  
                                   l447 49DA                                     l393 49C0  
                                   l385 471E                                     l387 472C  
                                   l396 4A12                                     l741 3E18  
                                   l389 474C                                     l494 2F76  
                                   l398 4A20                                     l807 372A  
                                   l399 4A22                                     l754 3EC8  
                                   l780 382E                                     l775 37E8  
                                   l784 47FA                                     l769 3F72  
                                   _PEN 007E2A                                     _Day 0106  
                       __end_of_I2C_Ack 49FE                                     _pad 3BCC  
                                   _min 010A                                     _sec 010C  
                                   _luz 00EA                            ___awmod@sign 0006  
                                   wreg 000FE8                            ___flmul@aexp 0024  
                          ___flmul@bexp 0025                            ___flmul@sign 001F  
                          ___flmul@temp 002A                            ___flmul@prod 0026  
                           LCD_Char@dat 0008                            ___fltol@exp1 005E  
                                  l1103 25D8                                    l1040 1C52  
                                  l1105 2650                                    l1106 263E  
                                  l1131 222A                                    l1124 2034  
                                  l1141 235A                                    l1133 22A2  
                                  l1134 2290                                    l1038 1C9E  
                                  l1302 1076                                    l1055 1DB8  
                                  l1047 1F6E                                    l1039 1C8C  
                                  l1128 2398                                    l1064 1E88  
                                  l1080 4658                                    l1065 1E76  
                                  l1233 3C12                                    l1092 2732  
                                  l1500 3BCA                                    l1236 3C54  
                                  l1172 3278                                    l1165 31E0  
                                  l1094 2592                                    l1238 3C90  
                                  l1406 40C2                                    l1511 4A24  
                                  l1407 40CA                                    l4000 25D6  
                                  l1256 14A0                                    l1336 2A5C  
                                  l1168 333C                                    l1097 2556  
                                  l1417 3A2A                                    l1361 2CFC  
                                  l1345 2AFA                                    l4010 2636  
                                  l4002 25E8                                    l1274 0C36  
                                  l1338 2A64                                    l1523 48A0  
                                  l1179 32D4                                    l4020 26A4  
                                  l4004 25F6                                    l4100 20D0  
                                  l1508 469C                                    l1188 4400  
                                  l1517 42A0                                    l1446 34C4  
                                  l4030 270E                                    l4014 2660  
                                  l4022 26A8                                    l4006 25FA  
                                  l4110 2116                                    l4102 20DE  
                                  l1542 412A                                    l1550 41DE  
                                  l1390 1AAE                                    l1471 4832  
                                  l1455 3188                                    l1527 3B00  
                                  l1359 2C98                                    l1375 1594  
                                  l4200 3DA8                                    l4032 2712  
                                  l4024 26C2                                    l4016 266C  
                                  l4008 2608                                    l4120 2184  
                                  l4112 2130                                    l4104 20EA  
                                  l1449 34CC                                    l1537 4122  
                                  l1465 4718                                    l1561 478A  
                                  l4210 3DE2                                    l4202 3DB0  
                                  l4034 2720                                    l4026 26D8  
                                  l4018 267A                                    l4130 221A  
                                  l4122 21AE                                    l4114 2140  
                                  l4106 20FA                                    l4050 1F8A  
                                  l1458 30CC                                    l5010 15C8  
                                  l5002 152E                                    l1555 41E6  
                                  l4220 3E08                                    l4212 3DEA  
                                  l4204 3DB8                                    l4036 2726  
                                  l4028 26F2                                    l4140 225A  
                                  l4132 2228                                    l4124 21E4  
                                  l4116 215C                                    l4108 2106  
                                  l4060 1FC2                                    l4052 1F8C  
                                  l4300 47C4                                    l5020 165C  
                                  l5012 15D0                                    l5004 1582  
                                  l1485 47C2                                    l1397 190E  
                                  l5110 44A6                                    l4222 3E10  
                                  l4214 3DEC                                    l4206 3DC6  
                                  l4230 3E2C                                    l4038 2728  
                                  l4150 22CC                                    l4142 2288  
                                  l4134 223A                                    l4126 21F2  
                                  l4118 2168                                    l4070 1FEE  
                                  l4062 1FD2                                    l4054 1F9C  
                                  l4046 1F70                                    l4302 47DA  
                                  l4310 363C                                    l5030 16E6  
                                  l5022 166A                                    l5014 15DE  
                                  l5006 15A2                                    l1479 4452  
                                  l5120 44BE                                    l5112 44B6  
                                  l4216 3DF2                                    l4208 3DCC  
                                  l4240 3E60                                    l4232 3E34  
                                  l4160 2342                                    l4152 22F6  
                                  l4136 2248                                    l4128 2210  
                                  l4080 2044                                    l4072 1FFE  
                                  l4064 1FD8                                    l4056 1FAC  
                                  l4048 1F7C                                    l4304 47EA  
                                  l4320 368C                                    l4400 40CC  
                                  l5040 177C                                    l5032 16F6  
                                  l5016 1602                                    l5008 15A4  
                                  l5122 44CA                                    l5114 44B8  
                                  l5130 41E8                                    l4218 3DF8  
                                  l4250 3E9C                                    l4242 3E68  
                                  l4234 3E38                                    l4226 3E1A  
                                  l4162 235E                                    l4170 2384  
                                  l4146 22B2                                    l4154 22FA  
                                  l4138 224C                                    l4090 207E  
                                  l4082 2054                                    l4074 200E  
                                  l4066 1FDE                                    l4058 1FBC  
                                  l4330 36B6                                    l4322 3690  
                                  l4314 3650                                    l4410 2F78  
                                  l5042 1792                                    l5050 17FC  
                                  l5034 1728                                    l5026 16B2  
                                  l5018 163C                                    l5210 31F0  
                                  l5202 49C2                                    l5124 44DC  
                                  l5116 44BA                                    l5300 45A4  
                                  l5132 41EC                                    l4252 3EA2  
                                  l4244 3E70                                    l4236 3E46  
                                  l4228 3E1E                                    l4172 2388  
                                  l4164 236E                                    l4156 2314  
                                  l4148 22BE                                    l4092 2094  
                                  l4076 201E                                    l4068 1FEC  
                                  l3700 1B36                                    l4340 36DE  
                                  l4332 36C0                                    l4324 369E  
                                  l4316 367A                                    l4308 3626  
                                  l4412 2F98                                    l4404 4102  
                                  l4500 08B0                                    l5060 18DE  
                                  l5052 182A                                    l5044 17A0  
                                  l5036 1738                                    l5028 16C4  
                                  l5140 3CA2                                    l5220 322E  
                                  l5212 3206                                    l5204 318C  
                                  l5126 44DE                                    l5118 44BC  
                                  l5310 45BC                                    l5134 4210  
                                  l4190 3D74                                    l4182 3D56  
                                  l4246 3E7E                                    l4254 3EA8  
                                  l4238 3E4E                                    l4270 3F46  
                                  l4262 3ECA                                    l4166 237C  
                                  l4158 2328                                    l4094 20A0  
                                  l4086 2068                                    l4078 2024  
                                  l3710 1B76                                    l3702 1B44  
                                  l4342 36EA                                    l4334 36CA  
                                  l4318 367C                                    l4430 3140  
                                  l4422 3080                                    l4414 2FEE  
                                  l4406 4114                                    l4510 08F6  
                                  l4502 08C2                                    l5070 196A  
                                  l5046 17D0                                    l5038 176A  
                                  l5150 3CE0                                    l5142 3CBC  
                                  l5230 32B6                                    l5222 3260  
                                  l5206 319C                                    l5128 44E0  
                                  l5136 4214                                    l4192 3D82  
                                  l4184 3D5A                                    l4256 3EB8  
                                  l4248 3E94                                    l4272 3F6A  
                                  l4264 3EF8                                    l4280 375A  
                                  l4168 237E                                    l4096 20B8  
                                  l4088 2074                                    l3800 1D52  
                                  l3720 1BB0                                    l3712 1B78  
                                  l3704 1B46                                    l4176 4614  
                                  l4344 36FA                                    l4432 3168  
                                  l4424 30BC                                    l4416 3002  
                                  l4360 3C0A                                    l4352 3BCC  
                                  l4600 0CC4                                    l4512 08FA  
                                  l4504 08D0                                    l5072 1980  
                                  l5080 1A08                                    l5056 1898  
                                  l5160 3D0A                                    l5152 3CE8  
                                  l5144 3CD0                                    l5240 330C  
                                  l5232 32C4                                    l5224 3262  
                                  l5216 321A                                    l5208 31AA  
                                  l5320 3866                                    l5312 3830  
                                  l5400 2734                                    l5306 45A8  
                                  l4194 3D8A                                    l4186 3D68  
                                  l4258 3EC0                                    l4274 3F70  
                                  l4266 3F08                                    l4290 37C8  
                                  l4282 376A                                    l4098 20C4  
                                  l3810 1DCE                                    l3802 1D86  
                                  l3730 1BC4                                    l3722 1BB4  
                                  l3706 1B56                                    l3714 1B80  
                                  l4178 4624                                    l4346 370A  
                                  l4434 3178                                    l4418 3010  
                                  l4426 30F0                                    l4370 3C78  
                                  l4362 3C1E                                    l4354 3BDC  
                                  l4610 0D02                                    l4602 0CCC  
                                  l4530 09B0                                    l4522 0960  
                                  l4514 08FE                                    l4506 08E2  
                                  l4442 418A                                    l5082 1A2C  
                                  l5090 1A5C                                    l5074 198E  
                                  l5058 18AA                                    l5066 1922  
                                  l5250 406A                                    l5162 3D12  
                                  l5154 3CEA                                    l5146 3CD2  
                                  l5138 3C92                                    l5242 331C  
                                  l5234 32E2                                    l5226 326E  
                                  l5218 3222                                    l5322 387E  
                                  l5314 3834                                    l5330 4002  
                                  l5170 4906                                    l5410 2758  
                                  l5402 273A                                    l5308 45BA  
                                  l4452 47FC                                    l4460 441A  
                                  l4196 3D8E                                    l4188 3D70  
                                  l4268 3F36                                    l4292 37D6  
                                  l4284 3798                                    l3820 1E0A  
                                  l3812 1DDE                                    l3804 1D88  
                                  l3740 1BD8                                    l3732 1BC8  
                                  l3724 1BB8                                    l3716 1B90  
                                  l3708 1B66                                    l4348 371A  
                                  l4380 39B4                                    l4428 312C  
                                  l3660 3B02                                    l4364 3C32  
                                  l4356 3BF0                                    l4700 11A6  
                                  l4612 0D14                                    l4620 0D54  
                                  l4604 0CDE                                    l4540 0A34  
                                  l4524 0972                                    l4508 08EE  
                                  l4516 0904                                    l5092 1A6A  
                                  l5084 1A3A                                    l5076 19CC  
                                  l5068 1946                                    l5252 4072  
                                  l5156 3CF6                                    l5148 3CD4  
                                  l5244 332A                                    l5236 32E4  
                                  l5228 32AA                                    l5324 388A  
                                  l5316 3862                                    l5340 4054  
                                  l5332 4006                                    l5260 49AC  
                                  l5420 278C                                    l5412 275C  
                                  l5404 274C                                    l4470 4548  
                                  l3902 4960                                    l4462 4448  
                                  l4198 3D96                                    l3910 23A6  
                                  l4294 3826                                    l4286 37A8  
                                  l4278 372C                                    l3830 1E36  
                                  l3822 1E0C                                    l3806 1D98  
                                  l3750 1BEC                                    l3742 1BDC  
                                  l3734 1BCC                                    l3726 1BBC  
                                  l3718 1BA2                                    l4382 39C0  
                                  l4374 392E                                    l3670 3B84  
                                  l3662 3B14                                    l4366 3C36  
                                  l4358 3BFE                                    l4710 122C  
                                  l4702 11B8                                    l4630 0E3C  
                                  l4622 0D5C                                    l4614 0D22  
                                  l4606 0CF0                                    l4542 0A46  
                                  l4526 098E                                    l4518 092A  
                                  l4534 09D8                                    l4438 46DE  
                                  l4446 41C0                                    l5086 1A4E  
                                  l5254 4080                                    l5166 3D1A  
                                  l5158 3CFE                                    l5350 34F8  
                                  l5246 332C                                    l5238 32E8  
                                  l5326 3924                                    l5318 3864  
                                  l5342 4060                                    l5334 4038  
                                  l5262 49BC                                    l5270 48E4  
                                  l5190 471C                                    l5182 4958  
                                  l5174 492A                                    l5430 27FA  
                                  l5422 27A2                                    l5414 2768  
                                  l5406 2750                                    ?_pad 0011  
                                  l4480 456A                                    l3904 497C  
                                  l4464 444C                                    l4456 4402  
                                  l3920 23E6                                    l3912 23B4  
                                  l4296 382C                                    l4288 37B6  
                                  l3840 1E6E                                    l3824 1E1A  
                                  l3816 1DF2                                    l3832 1E38  
                                  l3808 1DA8                                    l3760 1C4A  
                                  l3744 1BE0                                    l3736 1BD0  
                                  l3728 1BC0                                    l3752 1BF0  
                                  l3680 1ACC                                    l4392 3A22  
                                  l4376 394E                                    l3664 3B26  
                                  l4368 3C64                                    l4720 12A6  
                                  l4712 1260                                    l4704 11CA  
                                  l4640 0EFA                                    l4632 0E70  
                                  l4624 0D6C                                    l4616 0D3A  
                                  l4608 0CFE                                    l4560 0B02  
                                  l4544 0A62                                    l4536 09FE  
                                  l4552 0A7E                                    l4528 09A6  
                                  l4448 41D2                                    l4800 2A50  
                                  l5096 1A78                                    l5256 40A6  
                                  l5168 3D36                                    l5360 35BE  
                                  l5352 352C                                    l5336 403A  
                                  l5520 2D10                                    l5264 49BE  
                                  l5280 49FE                                    l5272 48EA  
                                  l5192 4730                                    l5184 495E  
                                  l5504 29B0                                    l5512 29C0  
                                  l5440 284E                                    l5432 2818  
                                  l5424 27B4                                    l5416 276E  
                                  l5408 2754                                    l5600 3F88  
                                  l4482 456E                                    l5290 46C2  
                                  l5282 46A0                                    l4458 4406  
                                  l3930 240C                                    l3922 23E8  
                                  l3914 23B6                                    l3850 1EEC  
                                  l3826 1E22                                    l3818 1DFC  
                                  l3834 1E46                                    l3770 1C80  
                                  l3762 1C60                                    l3754 1BF4  
                                  l3746 1BE4                                    l3738 1BD4  
                                  l3682 1ADC                                    l3690 1B06  
                                  l3674 1AB0                                    l4378 398C  
                                  l4386 39CC                                    l3666 3B30  
                                  l4730 12EA                                    l4722 12B8  
                                  l4714 1268                                    l4706 11CE  
                                  l4650 0F96                                    l4642 0F10  
                                  l4626 0D80                                    l4634 0E76  
                                  l4618 0D4C                                    l4562 0B08  
                                  l4570 0BD0                                    l4554 0A98  
                                  l4490 0864                                    l4810 2AB4  
                                  l4802 2A7A                                    l5098 1A9C  
                                  l5362 35DA                                    l5354 3548  
                                  l5346 34CE                                    l5338 403C  
                                  l5530 2DF2                                    l5522 2D36  
                                  l5258 49A8                                    l5274 48F0  
                                  l5266 48D4                                    l5194 4740  
                                  l5178 4934                                    l5370 45E2  
                                  l5442 286C                                    l5434 282A  
                                  l5426 27BE                                    l5418 277E  
                                  l5602 3F8C                                    l4476 4550  
                                  l4468 453C                                    l5292 46CA  
                                  l5284 46A0                                    l3940 244C  
                                  l3932 241A                                    l3916 23C6  
                                  l3924 23F0                                    l3908 239A  
                                  l3860 1F32                                    l3844 1E98  
                                  l3852 1EEE                                    l3836 1E4A  
                                  l3828 1E26                                    l3780 1CD0  
                                  l3772 1C8A                                    l3764 1C6C  
                                  l3756 1C1E                                    l3748 1BE8  
                                  l3692 1B16                                    l3684 1AEC  
                                  l3676 1ABC                                    l4388 39DE  
                                  l3668 3B4E                                    l4396 4246  
                                  l4740 132A                                    l4732 12FC  
                                  l4724 12C6                                    l4708 11D4  
                                  l4716 126C                                    l4652 0FEC  
                                  l4660 103E                                    l4644 0F42  
                                  l4636 0E94                                    l4628 0DE4  
                                  l4580 0C10                                    l4572 0BE0  
                                  l4564 0B62                                    l4492 0872  
                                  l4812 2ABA                                    l4804 2A82  
                                  l5364 360E                                    l5356 357C  
                                  l5348 34EA                                    l5540 2E64  
                                  l5524 2D5C                                    l5276 48F6  
                                  l5268 48D8                                    l4484 4A12  
                                  l5196 4748                                    l5380 42C6  
                                  l5372 45F2                                    l5460 2904  
                                  l5444 288A                                    l5452 28BE  
                                  l5436 2836                                    l5428 27DC  
                                  l5604 3F9C                                    l5612 3FB4  
                                  l4478 4554                                    l5294 46D0  
                                  l5286 46B0                                    l3950 248C  
                                  l3942 244E                                    l3934 241C  
                                  l3926 2400                                    l3918 23D6  
                                  l3870 1F5C                                    l3862 1F40  
                                  l3854 1EFE                                    l3846 1EA4  
                                  l3838 1E58                                    l3790 1D0C  
                                  l3782 1CE0                                    l3774 1CAC  
                                  l3766 1C70                                    l3758 1C3A  
                                  l3694 1B1C                                    l3686 1AFC  
                                  l3678 1ACA                                    l4398 4256  
                                  l4750 1372                                    l4742 1332  
                                  l4734 1304                                    l4726 12D6  
                                  l4718 128A                                    l4670 10F6  
                                  l4662 104E                                    l4654 0FF2  
                                  l4646 0F52                                    l4638 0EC8  
                                  l4590 0C54                                    l4582 0C2A  
                                  l4574 0BE4                                    l4566 0B96  
                                  l4558 0ACE                                    l4494 087A  
                                  l4486 084A                                    l4910 3A70  
                                  l4902 3A2C                                    l4830 2B8C  
                                  l4822 2B2E                                    l4814 2AC2  
                                  l4806 2AA2                                    l5390 43C2  
                                  l5358 358A                                    l5542 2E96  
                                  l5550 2ED6                                    l5526 2D8E  
                                  l5518 2CFE                                    l5278 48FC  
                                  l5198 4750                                    l5382 42D6  
                                  l5374 4602                                    l5462 2922  
                                  l5454 28C4                                    l5446 28A8  
                                  l5438 2846                                    l5606 3FA4  
                                  l5614 3FEA                                    l5296 4588  
                                  l5288 46B8                                    l3960 24BC  
                                  l3952 2494                                    l3936 242C  
                                  l3944 2456                                    l3928 2406  
                                  l3872 1F5E                                    l3864 1F46  
                                  l3856 1F0E                                    l3848 1EB2  
                                  l3792 1D1A                                    l3784 1CEE  
                                  l3776 1CBC                                    l3768 1C7E  
                                  l3696 1B2E                                    l3688 1AFE  
                                  l3880 4678                                    l4760 13C8  
                                  l4752 138E                                    l4744 133A  
                                  l4736 1314                                    l4728 12DA  
                                  l4672 1106                                    l4680 1140  
                                  l4664 1062                                    l4656 1026  
                                  l4648 0F62                                    l4592 0C66  
                                  l4576 0BF6                                    l4584 0C42  
                                  l4568 0B9E                                    l4496 089E  
                                  l4488 0854                                    l4912 3A88  
                                  l4904 3A56                                    l4824 2B40  
                                  l4832 2BA0                                    l4816 2ADE  
                                  l4840 2C1A                                    l4808 2AAA  
                                  l5392 43CA                                    l5560 412C  
                                  l5552 2F08                                    l5544 2EC8  
                                  l5528 2DC0                                    l5536 2E00  
                                  l5384 42E6                                    l5376 42A4  
                                  l5368 45D0                                    l5720 29E4  
                                  l5480 2970                                    l5464 2934  
                                  l5456 28C8                                    l5608 3FAC  
                                  l4930 4508                                    l4922 44F2  
                                  l5298 4598                                    l3970 24FA  
                                  l3962 24BC                                    l3954 2498  
                                  l3946 2466                                    l3938 243C  
                                  l3866 1F48                                    l3858 1F2E  
                                  l3794 1D1C                                    l3786 1CFC  
                                  l3698 1B30                                    l3882 467C  
                                  l3890 4894                                    l4770 1404  
                                  l4762 13CE                                    l4754 1396  
                                  l4746 1346                                    l4738 131C  
                                  l4690 117A                                    l4682 1152  
                                  l4674 1118                                    l4666 106E  
                                  l4658 103A                                    l4594 0C82  
                                  l4578 0C08                                    l4498 08A8  
                                  l4914 3AA4                                    l4850 2CA8  
                                  l4842 2C36                                    l4834 2BB0  
                                  l4818 2AEE                                    l5722 1554  
                                  l5394 43D2                                    l5562 4132  
                                  l5554 2F3A                                    l5538 2E32  
                                  l5386 42F6                                    l5378 42B6  
                                  l5474 2960                                    l5466 2940  
                                  l5458 28E6                                    l4940 452C  
                                  l4932 450A                                    l4924 4502  
                                  l5724 33FA                                    l4860 333E  
                                  l3980 2546                                    l3972 250A  
                                  l3948 247C                                    l3868 1F4E  
                                  l3796 1D26                                    l3788 1D08  
                                  l3876 465A                                    l3884 486C  
                                  l4780 1456                                    l4772 140A  
                                  l4764 13E0                                    l4748 134C  
                                  l4756 139C                                    l4692 1186  
                                  l4684 1160                                    l4676 112A  
                                  l4668 1092                                    l4596 0CB8  
                                  l4916 3AB6                                    l4908 3A62  
                                  l4852 2CAE                                    l4844 2C54  
                                  l4836 2BB6                                    l4828 2B7A  
                                  l5396 43EE                                    l5388 43B0  
                                  l5572 42FC                                    l5564 4158  
                                  l5556 2F6C                                    l5492 2990  
                                  l5468 2950                                    l4934 4516  
                                  l4926 4504                                    l4870 33AC  
                                  l4862 3352                                    l3990 2590  
                                  l3982 2554                                    l3974 251A  
                                  l3966 24D0                                    l3958 24AC  
                                  l3798 1D2C                                    l3878 4666  
                                  l3886 4878                                    l3894 478C  
                                  l4782 1462                                    l4774 1410  
                                  l4766 13EC                                    l4758 13AE  
                                  l4694 1196                                    l4686 1170  
                                  l4678 1138                                    l4598 0CC0  
                                  l4918 3ADE                                    l4854 2CBE  
                                  l4846 2C6E                                    l4838 2BBC  
                                  l5582 4356                                    l5574 4302  
                                  l4942 48A2                                    l5566 416A  
                                  l4950 498C                                    l5486 2980  
                                  l5718 3FCC                                    l4936 4528  
                                  l4928 4506                                    l4880 33D4  
                                  l4872 33B0                                    l4864 3356  
                                  l3992 25A2                                    l3984 2560  
                                  l3976 2522                                    l3968 24EA  
                                  l3888 487C                                    l4784 146A  
                                  l4768 13F4                                    l4696 119A  
                                  l4688 1174                                    l4856 2CD4  
                                  l4848 2C88                                    l5584 435C  
                                  l5576 4328                                    l4944 48B0  
                                  l5568 4184                                    l4960 49A4  
                                  l4952 4990                                    l5592 3F74  
                                  l4938 452A                                    l4882 33DC  
                                  l4866 335A                                    l3994 25B8  
                                  l3986 257E                                    l3978 2532  
                                  l4786 147A                                    l4778 1444  
                                  l4698 11A0                                    l3898 4754  
                                  l4794 2A24                                    l4970 14C6  
                                  l5586 4382                                    l5578 433A  
                                  l4946 48B4                                    l4954 499E  
                                  l5498 29A0                                    l5594 3F7C  
                                  l4892 3484                                    l4884 3410  
                                  l4876 33B6                                    l4868 3376  
                                  l3996 25BE                                    l3988 2580  
                                  l4788 1480                                    l4796 2A34  
                                  l4980 14F8                                    l4972 14D4  
                                  l5588 4394                                    l4964 49EA  
                                  l4948 4988                                    l5596 3F80  
                                  l4894 3496                                    l4878 33CC  
                                  l3998 25C8                                    l4798 2A36  
                                  l4990 1516                                    l4982 150A  
                                  l4974 14E6                                    l4966 49D6  
                                  l5598 3F84                                    l4896 34A8  
                                  l4888 3446                                    l4976 14EA  
                                  l4968 14A2                                    l4994 151C  
                                  l4986 1510                                    l4978 14F6  
                                  l4998 1522                                    STR_1 0846  
                                  STR_2 0843                                    STR_3 0818  
                                  STR_4 0820                                    STR_5 0820  
                                  STR_6 0818                                    STR_7 0820  
                                  STR_8 0820                                    STR_9 081C  
                                  u3100 3B4E                                    u3101 3B4A  
                                  u3110 3B84                                    u3111 3B80  
                                  u4000 3D82                                    u3200 1BB0  
                                  u3120 1ACA                                    _LATD 000F8C  
                                  u4001 3D7E                                    u3201 1BAC  
                                  u3121 1AC6                                    u4010 3DA8  
                                  u3210 1C1E                                    u3130 1ADC  
                                  u4011 3DA4                                    u3211 1C1A  
                                  u3131 1AD8                                    u4020 3DC6  
                                  u4100 3EB8                                    u3300 1CFC  
                                  u3220 1C36                                    u3140 1AEC  
                                  u4021 3DC2                                    u4101 3EB4  
                                  u3301 1CF8                                    u3221 1C30  
                                  u3141 1AE8                                    u4030 3DE2  
                                  u4110 3EF8                                    u3310 1D1A  
                                  u3230 1C38                                    u3150 1B2E  
                                  u4031 3DDE                                    u4111 3EF4  
                                  u3311 1D16                                    u3151 1B2A  
                                  u4040 3E08                                    u4120 3F36  
                                  u3400 1E58                                    u3320 1D52  
                                  u3240 1C60                                    u3160 1B44  
                                  u4200 363C                                    u3080 3B14  
                                  u5000 1106                                    u4041 3E04  
                                  u4121 3F32                                    u3401 1E54  
                                  u3321 1D4E                                    u3241 1C5C  
                                  u3161 1B40                                    u4201 3638  
                                  u3081 3B10                                    u5001 1102  
                                  u4050 3E2C                                    u4130 3F6A  
                                  u3410 1E6E                                    u3330 1D98  
                                  u3250 1C7E                                    u3170 1B56  
                                  u4210 3670                                    u3090 3B26  
                                  u5010 1118                                    u4051 3E28  
                                  u4131 3F66                                    u3411 1E6A  
                                  u3331 1D94                                    u3251 1C7A  
                                  u3171 1B52                                    u3091 3B22  
                                  u5011 1114                                    u4060 3E46  
                                  u4140 375A                                    u3500 1F5C  
                                  u3420 1E84                                    u3340 1DCE  
                                  u3260 1C9E                                    u3180 1B66  
                                  u4220 369E                                    u4300 3C64  
                                  u5100 12C6                                    u5020 112A  
                                  u4061 3E42                                    u4141 3756  
                                  u3501 1F58                                    u3421 1E80  
                                  u3341 1DCA                                    u3261 1C9A  
                                  u3181 1B62                                    u4221 369A  
                                  u4301 3C60                                    u5101 12C2  
                                  u5021 1126                                    u4070 3E60  
                                  u4150 3798                                    u3430 1E98  
                                  u3350 1DDE                                    u3270 1CAC  
                                  u3190 1BA2                                    u4230 36B2  
                                  u4310 396E                                    u3510 469C  
                                  u5110 12FC                                    u5030 1138  
                                  u4071 3E5C                                    u4151 3794  
                                  u3431 1E94                                    u3351 1DDA  
                                  u3271 1CA8                                    u3191 1B9E  
                                  u4231 36AE                                    u4215 3666  
                                  u3511 4698                                    u5111 12F8  
                                  u5031 1134                                    u4080 3E7E  
                                  u3600 241A                                    u4160 37B6  
                                  u3440 1EB2                                    u3360 1E0A  
                                  u3280 1CBC                                    u4240 36DA  
                                  u4320 398C                                    u3520 4894  
                                  u4400 40FC                                    u5120 132A  
                                  u5040 1152                                    u5200 2A50  
                                  u6000 277E                                    u4081 3E7A  
                                  u3601 2416                                    u4161 37B2  
                                  u3441 1EAE                                    u3361 1E06  
                                  u3281 1CB8                                    u4241 36D6  
                                  u4321 3988                                    u3521 4890  
                                  u4401 40F6                                    u5121 1326  
                                  u5041 114E                                    u5201 2A4C  
                                  u6001 277A                                    u4090 3E94  
                                  u3610 242C                                    u4170 37D6  
                                  u3450 1EEC                                    u3370 1E1A  
                                  u3290 1CEE                                    u4250 36FA  
                                  u4330 39B4                                    u3530 47BC  
                                  u4410 40FE                                    u5130 13AE  
                                  u5050 1160                                    u5210 2A7A  
                                  u6010 278C                                    u4091 3E90  
                                  u3611 2428                                    u4171 37D2  
                                  u3451 1EE8                                    u3371 1E16  
                                  u3291 1CEA                                    u4251 36F6  
                                  u4331 39B0                                    u4315 3964  
                                  u3531 47B6                                    u5131 13AA  
                                  u5051 115C                                    u5211 2A76  
                                  u6011 2788                                    u3700 25D6  
                                  u3620 243C                                    u4180 3826  
                                  u3460 1EFE                                    u3380 1E36  
                                  u4260 370A                                    u4340 39DE  
                                  u4500 3110                                    u3540 47BE  
                                  u4420 4114                                    u5140 13C8  
                                  u5060 11B8                                    u5300 2C36  
                                  u5220 2ADE                                    u6100 2F3A  
                                  u6020 2D8E                                    u3701 25D2  
                                  u3621 2438                                    u4181 3822  
                                  u3461 1EFA                                    u3381 1E32  
                                  u4261 3706                                    u4341 39DA  
                                  u4421 4110                                    u5141 13C4  
                                  u5061 11B4                                    u5301 2C32  
                                  u5221 2ADA                                    u6101 2F36  
                                  u6021 2D8A                                    u3710 25F6  
                                  u3630 247C                                    u4190 47DA  
                                  u3470 1F0E                                    u3390 1E46  
                                  u4510 312C                                    u4430 2FC0  
                                  u4270 3BDC                                    u5150 13E0  
                                  u5070 128A                                    u3550 4784  
                                  u5310 2C54                                    u5230 2B28  
                                  u6110 2F6C                                    u6030 2DC0  
                                  u3711 25F2                                    u3631 2478  
                                  u4191 47D6                                    u3471 1F0A  
                                  u3391 1E42                                    u4511 3128  
                                  u4271 3BD8                                    u5151 13DC  
                                  u5071 1286                                    u3551 477E  
                                  u5311 2C50                                    u5231 2B22  
                                  u6111 2F68                                    u6031 2DBC  
                                  u4600 441A                                    u5400 3480  
                                  u3720 2608                                    u3640 24BC  
                                  u3800 1F8A                                    u3480 1F2E  
                                  u4360 3A18                                    u4520 3168  
                                  u4440 2FEE                                    u4280 3BFE  
                                  u5160 143E                                    u5080 12A6  
                                  u3560 4786                                    u5320 2C6E  
                                  u5240 2B2A                                    u6040 2DF2  
                                  u4601 4416                                    u3721 2604  
                                  u3641 24B8                                    u3801 1F86  
                                  u3481 1F2A                                    u4361 3A12  
                                  u4521 3164                                    u4505 3106  
                                  u4441 2FEA                                    u4281 3BFA  
                                  u5161 1438                                    u5081 12A2  
                                  u5321 2C6A                                    u6041 2DEE  
                                  u4610 4448                                    u5410 3496  
                                  u3730 2636                                    u3650 2532  
                                  u3570 23B4                                    u3810 1F9C  
                                  u3490 1F40                                    u4370 3A1A  
                                  u4450 3010                                    u4290 3C54  
                                  u5170 1440                                    u5090 12B8  
                                  u4530 4712                                    u5330 2C88  
                                  u5250 2B40                                    u6050 2E32  
                                  u4611 4444                                    u5411 3492  
                                  u3731 2632                                    u3651 252E  
                                  u3571 23B0                                    u3811 1F98  
                                  u3491 1F3C                                    u4355 39F0  
                                  u4451 300C                                    u4435 2FB6  
                                  u4291 3C50                                    u5091 12B4  
                                  u4531 470C                                    u5331 2C84  
                                  u5251 2B3C                                    u6051 2E2E  
                                  u4620 456A                                    u5420 34A8  
                                  u3740 264C                                    u3660 2554  
                                  u3580 23C6                                    u3900 2248  
                                  u3820 1FAC                                    u4380 428E  
                                  u5180 1456                                    u4700 095A  
                                  u4540 4714                                    u5340 2C98  
                                  u5260 2B74                                    u6060 2E64  
                                  u5500 49FC                                    u4621 4566  
                                  u5421 34A4                                    u3741 2648  
                                  u3661 2550                                    u3581 23C2  
                                  u3901 2244                                    u3821 1FA8  
                                  u5181 1452                                    u4701 0954  
                                  u5341 2C94                                    u5261 2B6E  
                                  u6061 2E60                                    u5501 49F8  
                                  u4630 4584                                    u3750 2660  
                                  u3670 257E                                    u3590 23D6  
                                  u3910 225A                                    u3830 1FEC  
                                  u4470 307C                                    u4390 42A0  
                                  u4710 095C                                    u5430 3A56  
                                  u4550 41BA                                    u5350 2CA8  
                                  u5270 2B76                                    u5190 2A34  
                                  u6070 2E96                                    u5510 49E8  
                                  u4631 4580                                    u3751 265C  
                                  u3671 257A                                    u3591 23D2  
                                  u3911 2256                                    u3831 1FE8  
                                  u4471 3078                                    u4391 429C  
                                  u5431 3A52                                    u4551 41B4  
                                  u5351 2CA4                                    u5191 2A30  
                                  u6207 35E4                                    u6071 2E92  
                                  u5511 49E4                                    u5360 3376  
                                  u3760 267A                                    u3680 25A2  
                                  u3920 2288                                    u3840 1FFE  
                                  u4480 30A0                                    u4800 0BF6  
                                  u4720 0972                                    u5440 3A88  
                                  u4560 41BC                                    u5280 2B8C  
                                  u5600 16F6                                    u5520 14C6  
                                  u6080 2EC8                                    u4640 4A20  
                                  u5361 3372                                    u3761 2676  
                                  u3681 259E                                    u3921 2284  
                                  u3841 1FFA                                    u4465 3024  
                                  u4801 0BF2                                    u4721 096E  
                                  u5441 3A84                                    u5281 2B88  
                                  u5601 16F2                                    u5521 14C2  
                                  u6217 3618                                    u6081 2EC4  
                                  u4641 4A1C                                    u5370 33AC  
                                  u3770 26C2                                    u3690 25B8  
                                  u3930 229E                                    u3850 200E  
                                  u4490 30BC                                    u4466 302E  
                                  u4810 0C08                                    u4730 09FE  
                                  u4650 0872                                    u5450 3AA4  
                                  u4570 41D2                                    u5290 2BF4  
                                  u5610 1738                                    u5530 1594  
                                  u6090 2F08                                    u5371 33A8  
                                  u3771 26BE                                    u3691 25B4  
                                  u3931 229A                                    u3851 200A  
                                  u4491 30B8                                    u4467 303E  
                                  u4387 4284                                    u4811 0C04  
                                  u4731 09FA                                    u4651 086E  
                                  u5451 3AA0                                    u4571 41CE  
                                  u5611 1734                                    u5531 1590  
                                  u6091 2F04                                    u5700 420C  
                                  u4580 482C                                    u5380 33C8  
                                  u3780 26F2                                    u3940 22B2  
                                  u3860 2044                                    u4900 0D14  
                                  u4820 0C2A                                    u4740 0A2E  
                                  u4660 08C2                                    u5460 3AB6  
                                  u5620 177C                                    u5540 15A2  
                                  _RCEN 007E2B                                    u4581 4826  
                                  u5381 33C4                                    u3781 26EE  
                                  u3941 22AE                                    u3861 2040  
                                  u4485 3096                                    u4901 0D10  
                                  u4821 0C26                                    u4741 0A28  
                                  u4661 08BE                                    u5461 3AB2  
                                  u5621 1778                                    u5541 159E  
                                  u6157 34F0                                    u5710 4234  
                                  u4590 482E                                    u5390 347E  
                                  u3790 2720                                    u3950 22CC  
                                  u3870 2054                                    u4910 0D22  
                                  u4830 0C50                                    u4750 0A30  
                                  u4670 08D0                                    u5470 3ADE  
                                  u5630 182A                                    u5550 15C8  
                                  u5391 3478                                    u3791 271C  
                                  u3951 22C8                                    u3871 2050  
                                  u4911 0D1E                                    u4831 0C4C  
                                  u4671 08CC                                    u5471 3ADA  
                                  u5295 2BE2                                    u5631 1826  
                                  u5551 15C4                                    u6167 351E  
                                  u5720 4244                                    u3960 2314  
                                  u3880 21CE                                    u4920 0D4C  
                                  u4840 0C66                                    u4760 0A46  
                                  u4680 08E2                                    u5640 1892  
                                  u5560 1602                                    u5480 48D2  
                                  u5800 472C                                    u5721 4240  
                                  u3961 2310                                    u4921 0D48  
                                  u4841 0C62                                    u4761 0A42  
                                  u4681 08DE                                    u5641 188C  
                                  u5561 15FE                                    u5481 48CE  
                                  u6177 3552                                    u5801 4728  
                                  u3970 2342                                    u3890 2228  
                                  u4930 0E94                                    u4850 0C82  
                                  u4770 0ACA                                    u4690 092A  
                                  u5650 1894                                    u5570 16AC  
                                  u5730 3CCA                                    u5810 4740  
                                  u5490 499E                                    u5707 4202  
                                  u3971 233E                                    u3891 2224  
                                  u4931 0E90                                    u4851 0C7E  
                                  u4771 0AC6                                    u4691 0926  
                                  u5571 16A6                                    u6187 3582  
                                  u5811 473C                                    u5491 499A  
                                  u3980 237C                                    u4940 0EFA  
                                  u4860 0CB8                                    u4780 0B5E  
                                  u5660 18AA                                    u5580 16AE  
                                  u5740 3D36                                    u5900 32E2  
                                  u5820 49D2                                    u5717 422A  
                                  u3981 2378                                    u3885 21C4  
                                  u4941 0EF6                                    u4861 0CB4  
                                  u4781 0B5A                                    u5661 18A6  
                                  u5741 3D32                                    u6197 35B0  
                                  u5901 32DE                                    u5821 49CE  
                                  u3990 3D68                                    u4950 0F42  
                                  u4870 0CDE                                    u4790 0BD0  
                                  u5670 1946                                    u5590 16C4  
                                  u5750 3D54                                    u5910 331C  
                                  u5830 319C                                    u3991 3D64  
                                  u4951 0F3E                                    u4871 0CDA  
                                  u4791 0BCC                                    u5671 1942  
                                  u5591 16C0                                    u5751 3D50  
                                  u5735 3CC4                                    u5911 3318  
                                  u5831 3198                                    u4960 0F52  
                                  u4880 0CF0                                    u5680 196A  
                                  u5920 332A                                    u5840 31AA  
                                  u5760 4916                                    u4961 0F4E  
                                  u4881 0CEC                                    u5681 1966  
                                  u5921 3326                                    u5841 31A6  
                                  u5761 4912                                    u4970 0FEC  
                                  u4890 0CFE                                    u5690 1A2C  
                                  u5930 40C2                                    u5850 3206  
                                  u5770 4926                                    u4971 0FE8  
                                  u4891 0CFA                                    u5691 1A28  
                                  u5931 40BE                                    u5851 3202  
                                  u5771 4922                                    u5940 46B0  
                                  u4980 103A                                    u5860 325C  
                                  u5780 4944                                    u5941 46AC  
                                  u4981 1036                                    u5861 3258  
                                  u5781 4940                                    u5950 4598  
                                  u4990 1062                                    u5870 32A6  
                                  u5790 4954                                    u5951 4594  
                                  u4991 105E                                    u5871 32A2  
                                  u5791 4950                                    u5960 45CC  
                                  u5880 32C4                                    u5961 45C8  
                                  u5881 32C0                                    u5890 32D4  
                                  u5970 3876                                    u5891 32D0  
                                  u5971 3872                                    u5980 404C  
                                  u5981 4048                                    u5991 2744  
                     ??_Estado_Lluvioso 005F                                    _RSEN 007E29  
                                  _Date 0104                                    _Year 0100  
                                  _Sluz 0200                                    _dbuf 010E  
                                  _atoi 333E                                    _main 3F74  
                       ?_RTC_Read_Clock 0001                                    _hour 0108  
                      __end_of_I2C_Nack 49EA                      __size_of_LCD_Clear 0014  
                                  _play 3C92                                    _prec 00F6  
                      __end_of_I2C_Init 49C2                        __end_of_I2C_Read 4754  
                                  _nout 00F2                                    pad@i 0018  
                                  pad@p 0015                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  _xtoa 2A24                        __end_of_I2C_Stop 49D6  
                         ___fpclassifyf 392E                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0000  
                       ___fldiv@new_exp 003D                           _LCD_String_xy 469E  
                          _tolower$1629 000D                            ___param_bank 000000  
                       __end_of_ReadADC 392E                         __end_of_ReadLUZ 406A  
                       __end_of_Estados 2F78        RTC_Read_Clock@read_clock_address 0004  
                                 ??_pad 0017                        __end_of_LCD_Char 453C  
                      __end_of_LCD_Init 4904                           ReadADC@result 0064  
                          LCD_MSdelay@i 0003                            LCD_MSdelay@j 0005  
                         ___fltol@sign1 005D                                   ?_atoi 0008  
                       __end_of___fladd 1F70                                   ?_main 0001  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                       __end_of___fldiv 2734                         __end_of___awdiv 3E1A  
                       __end_of___flneg 47FC                                   ?_play 0006  
                                 STR_10 081C                                   STR_11 0818  
                                 STR_20 0801                                   STR_12 0834  
                                 STR_21 0801                                   STR_13 0830  
                                 STR_30 0840                                   STR_14 0828  
                                 STR_22 0808                                   STR_15 0824  
                                 STR_23 0810                                   STR_32 0840  
                                 STR_16 083C                                   STR_17 082C  
                                 STR_18 0838                                   STR_26 080C  
                                 STR_27 0814                                   STR_19 0801  
                       __end_of___awmod 3ECA                         __end_of___flmul 239A  
                       __end_of___flsub 465A                         __end_of___fltol 372C  
                       ___awdiv@divisor 0003                                   ?_xtoa 001C  
                                 _LATD0 007C60                                   _LATD1 007C61  
                                 _LATE0 007C68                                   _LATE1 007C69  
                                 _LATE2 007C6A                         ___awdiv@counter 0005  
                          vfpfcnvrt@fmt 00A6                            vfpfcnvrt@llu 00AE  
                                 _TRISA 000F92                                   _TRISD 000F95  
                                 _SSPIE 007CEB                                   _TRISE 000F96  
                                 _SSPIF 007CF3                                   _Month 0102  
                                 _Stemp 015E                                   _flags 00F8  
                                 _fputc 3B02                         __end_of_isalpha 471A  
                                 _fputs 465A                         __end_of_isdigit 4834  
                     __end_of_I2C_Ready 4A24                                   atoi@n 0015  
                                 pad@fp 0011                                   atoi@s 0008  
                                 _width 00F4                                   _putch 4A24  
                       __end_of_islower 478C                         __end_of_isspace 4454  
                     __end_of_I2C_Start 4932                       __end_of_I2C_Write 49A8  
                       __end_of_isupper 47C4                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 status 000FD8                     __size_of_LCD_String 005E  
                       __end_of_sprintf 4402                          ?___fpclassifyf 0001  
                       __end_of_tolower 412C                                   xtoa@c 0041  
                                 xtoa@d 001E                                   xtoa@i 003F  
                                 xtoa@n 0037                                   xtoa@p 0033  
                                 xtoa@w 0035                                   xtoa@x 0026  
                       __end_of_strncmp 3B02                         __end_of_toupper 41E8  
                         ??_PlayCancion 0013                          ?_LCD_String_xy 000B  
                          _toupper$1644 000D                 __end_of_LCD_Custom_Char 45CE  
                       __initialization 4454                            __end_of_atoi 34CE  
                          __end_of_main 4002                            __end_of_play 3D56  
                          __end_of_xtoa 2CFE                          _Estado_Nublado 42FC  
                             ??_I2C_Ack 0001                          _Estado_Soleado 412C  
                                ??_atoi 000A                                  ??_main 00DE  
                                ??_play 000C                                  ??_xtoa 0027  
                     __end_of_LCD_Clear 4A12                           __activetblptr 000002  
                                ?_fputc 0001                                  ?_fputs 000A  
                                _ADRESH 000FC4                                  _ADRESL 000FC3  
                      ___awdiv@dividend 0001                                  ?_putch 0001  
                      LCD_String_xy@msg 000C                        LCD_String_xy@pos 000B  
                      LCD_String_xy@row 000E                                  _OSCCON 000FD3  
                         vfpfcnvrt@done 00B6                                  _SSPADD 000FC8  
                                _TRISB0 007C98                                  _TRISB1 007C99  
                                _SSPBUF 000FC9                        __end_of___xxtofl 333E  
                             ??_ReadADC 0062                               ??_ReadLUZ 0003  
                             ??_Estados 005F                        __end_of_delay_us 48D4  
                      ??_RTC_Calendario 00DC                            vfprintf@cfmt 00CA  
                                ___flge 372C                  __end_of_Estado_Nublado 4356  
                                ___fleq 3ECA                               ??___fladd 004D  
                                ___wmul 4960                               ??___fldiv 0034  
                             ??___awdiv 0005                               ??___flneg 0005  
                __end_of_Estado_Soleado 418A                               ??___awmod 0005  
                             ??___flmul 001B                               ??___flsub 005D  
                             ??___fltol 0059                                  _efgtoa 084A  
                   __end_of_PlayCancion 3626                                  _floorf 2F78  
                  __size_of_LCD_MSdelay 004A                                  clear_0 447A  
                                clear_1 4486                                  clear_2 4492  
                      ___awdiv@quotient 0007                         ___awmod@divisor 0003  
                                isa$std 000001                                  _tempar 00EE  
                                _result 00FA                         ___awmod@counter 0005  
                    _I2C_Repeated_Start 4932                                  pad@buf 0013  
                  __size_of_LCD_Command 004C                                  _strcpy 4246  
                                _strlen 486C                                  fputc@c 0001  
                                fputs@c 000E                        LCD_Custom_Char@i 000C  
                                fputs@i 000F                               ?_I2C_Nack 0001  
                                fputs@s 000A                               ??_isalpha 0003  
                             ??_isdigit 0003                               ?_I2C_Init 0001  
                             ?_I2C_Read 0001                                  play@fn 0011  
                             ?_I2C_Stop 0001                         ___fpclassifyf@e 0009  
                       ___fpclassifyf@u 000B                         ___fpclassifyf@x 0001  
                             ??_islower 0003                            __mediumconst 0000  
                             ??_isspace 0003                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 40CC  
                             ??_sprintf 005F                               ??_tolower 0009  
                                xtoa@fp 001C                               ??_strncmp 0007  
                             ??_toupper 0009                              ___flge@ff1 002C  
                            ___flge@ff2 0030                         ??___fpclassifyf 0005  
                          ___xxtofl@arg 000F                            ___xxtofl@exp 000E  
                          ___xxtofl@val 0005                              ___fleq@ff1 0001  
                            ___fleq@ff2 0005                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 449A  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000E  
                            ___flneg@f1 0001                           ___rparam_used 000001  
                            ___fltol@f1 0055                    ??_I2C_Repeated_Start 0002  
                      ?_LCD_Custom_Char 0009                          __pcstackCOMRAM 0001  
                           play@CiclosL 000F                         ?_Estado_Nublado 0001  
                          __pidataBANK1 4834                         ?_Estado_Soleado 0001  
                         __end_of_fputc 3BCC                           __end_of_fputs 469E  
                         __end_of_putch 4A26                            ??_LCD_String 000B  
                       _Estado_Lluvioso 4356                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                        ??_RTC_Read_Clock 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00E2  
                            __pbssBANK1 0100                              __pbssBANK2 0200  
                            ??_LCD_Char 0007                              _character1 01E5  
                            _character2 01DD                              _character3 01D5  
                            ??_LCD_Init 0009                      __end_of_LCD_String 4246  
                           _PlayCancion 34CE                            I2C_Read@flag 0001  
                               ?___flge 002C                                 ?___fleq 0001  
                        I2C_Read@buffer 0002                                 ?___wmul 0001  
                        LCD_MSdelay@val 0001                                 ?_efgtoa 0060  
                               ?_floorf 0045                                 _I2C_Ack 49EA  
                               _ACKSTAT 007E2E                                 ?_strcpy 0001  
                               ?_strlen 0001                               ?___xxtofl 0005  
                             ?_delay_us 0001                      __size_of_vfpfcnvrt 060E  
                               _SSPCON1 000FC6                                 _SSPCON2 000FC5  
                               _SSPSTAT 000FC7                               _I2C_Ready 4A12  
                               _ReadADC 3830                               _I2C_Start 4904  
                               _ReadLUZ 4002                               _I2C_Write 4986  
                               _Estados 2CFE                           LCD_String@msg 0009  
                               __Hparam 0000                                 __Lparam 0000  
                       __size_of___flge 0104                         __size_of___fleq 00AA  
                               ___fladd 1AB0                       _RTC_Read_Calendar 42A2  
                               ___fldiv 239A                                 ___awdiv 3D56  
                               ___flneg 47C4                                 ___awmod 3E1A  
                               ___flmul 1F70                 __end_of_Estado_Lluvioso 43B0  
                               ___flsub 4614                                 ___fltol 3626  
                       __size_of___wmul 0026                               ?_vfprintf 00C4  
                          __psmallconst 0800                         __size_of_efgtoa 0C58  
                    ?_RTC_Read_Calendar 0001                         __size_of_floorf 0212  
                               __pcinit 4454                                 __ramtop 0800  
                               __ptext0 3F74                                 __ptext1 2734  
                               __ptext2 45CE                                 __ptext3 42A2  
                               __ptext4 49C2                                 __ptext5 4904  
                               __ptext6 4932                                 __ptext7 4986  
                               __ptext8 471A                                 __ptext9 4A12  
                       __size_of_strcpy 005C                         __size_of_strlen 0036  
                          __size_of_pad 00C6                                 _isalpha 46DE  
                               _isdigit 47FC                              ??___xxtofl 0009  
                      ___awmod@dividend 0001                     ??_RTC_Read_Calendar 0003  
                               _islower 4754                                 _isspace 4402  
                            ??_delay_us 0003                                 _isupper 478C  
                               efgtoa@c 0066                                 efgtoa@d 0084  
                               efgtoa@e 009C                                 efgtoa@f 0062  
                               efgtoa@g 0098                                 efgtoa@h 008E  
                               efgtoa@i 0096                                 efgtoa@l 0092  
                               efgtoa@m 007E                                 efgtoa@n 009E  
                               efgtoa@p 0088                                 efgtoa@t 0078  
                               efgtoa@u 00A0                                 efgtoa@w 008A  
                             _LCD_Clear 49FE                                 atoi@neg 000E  
                               _sprintf 43B0                                 _tolower 40CC  
                               _strncmp 3A2C                                 _toupper 418A  
                  end_of_initialization 449A                                 floorf@e 0053  
                               floorf@m 004F                                 floorf@u 0055  
                               floorf@x 0045                                 fputc@fp 0003  
                        LCD_Command@cmd 0008                           __Lmediumconst 0000  
                               fputs@fp 000C                              ?_I2C_Ready 0001  
                            ?_I2C_Start 0001                              ?_I2C_Write 0001  
             __end_of_RTC_Read_Calendar 42FC                       __end_of_vfpfcnvrt 1AB0  
                            efgtoa@mode 008D                              efgtoa@sign 0086  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                              ??_vfprintf 005F  
                               strcpy@d 0009                                 strlen@a 0003  
                               strcpy@s 0007                                 strlen@s 0001  
                           ___fladd@grs 0054                           ___xxtofl@sign 000D  
                             _TRISCbits 000F94                              ?_LCD_Clear 0001  
                     __size_of_I2C_Nack 0014                       __size_of_I2C_Init 001A  
                     __size_of_I2C_Read 003A                             ___fldiv@grs 003F  
                           ___fldiv@rem 0038                       __size_of_I2C_Stop 0014  
                           ___flmul@grs 0020                            _Estados$1880 0068  
                      ??_Estado_Nublado 005F                        ??_Estado_Soleado 005F  
                     __size_of_LCD_Char 004C                       __size_of_LCD_Init 0030  
                         ??_LCD_MSdelay 0003                           ??_LCD_Command 0007  
                      ?_Estado_Lluvioso 0001                          __end_of___flge 3830  
                        __end_of___fleq 3F74                             vfpfcnvrt@ap 00A8  
                           vfpfcnvrt@ct 00C0                             vfpfcnvrt@fp 00A4  
                        __end_of___wmul 4986                          __end_of_efgtoa 14A2  
                        __end_of_floorf 318A                              floorf@F527 00E2  
                        __end_of_strcpy 42A2                          __end_of_strlen 48A2  
                   start_initialization 4454                             __end_of_pad 3C92  
  I2C_Repeated_Start@slave_read_address 0002                   __end_of___fpclassifyf 3A2C  
                           ??_I2C_Ready 0001                             ??_I2C_Start 0002  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 46DE  
                          ?_PlayCancion 0001              __size_of_RTC_Read_Calendar 005A  
                           vfprintf@fmt 00C6             __size_of_I2C_Repeated_Start 002E  
                              ??___flge 0034                                ??___fleq 0009  
                              ??___wmul 0005                                ??_efgtoa 0067  
                           __pdataBANK1 01B6                                ??_floorf 0049  
                              ?_I2C_Ack 0001                     __end_of_LCD_MSdelay 4586  
                              ??_strcpy 0005                                ??_strlen 0003  
              __size_of_LCD_Custom_Char 0048                               ___fladd@a 0049  
                             ___fladd@b 0045                            play@duracion 000A  
                             ___fldiv@a 0030                               ___fldiv@b 002C  
               __size_of_RTC_Calendario 02F0                     __end_of_LCD_Command 44F0  
                             ___flmul@a 0017                               ___flmul@b 0013  
                           __pbssCOMRAM 005F                               ___flsub@a 0059  
                             ___flsub@b 0055                           __pcstackBANK0 0060  
                         __pcstackBANK1 0172                             ??_LCD_Clear 0009  
                     __size_of___xxtofl 01B4                       __size_of_delay_us 0032  
                              ?_ReadADC 0060                               _atoi$1525 0010  
                             _atoi$1526 0014                               _atoi$1527 0012  
                              ?_ReadLUZ 0001                              play@octava 0008  
                              ?_Estados 0066                             _efgtoa$1450 006E  
                           _efgtoa$1460 0074                             _efgtoa$1461 0076  
                           _efgtoa$1455 0070                             _efgtoa$1449 006C  
                           _efgtoa$1459 0072                                ?___fladd 0045  
                              ?___fldiv 002C                                ?___awdiv 0001  
                              ?___flneg 0001                                ?___awmod 0001  
                              ?___flmul 0013                                ?___flsub 0055  
                              ?___fltol 0055                       __size_of_vfprintf 0062  
                           __smallconst 0800                                _I2C_Nack 49D6  
                              ?_isalpha 0001                                ?_isdigit 0001  
                              _I2C_Init 49A8                                _I2C_Read 471A  
                              _I2C_Stop 49C2                                ?_islower 0001  
                              ?_isspace 0001                                ?_isupper 0001  
                 LCD_String_xy@location 000F                                ?_sprintf 00CC  
                              ?_tolower 0007                          __size_of_fputc 00CA  
                        __size_of_fputs 0044                                ?_strncmp 0001  
                              ?_toupper 0007                          __size_of_putch 0002  
                              _LCD_Char 44F0                                _LCD_Init 48D4  
                  play@mS_Transcurridos 000D                          ___wmul@product 0005  
                              _LATCbits 000F8B                               delay_us@i 0004  
               __size_of_RTC_Read_Clock 0046                             _LCD_MSdelay 453C  
                           _LCD_Command 44A4                               _vfpfcnvrt 14A2  
                             _xtoa$1471 002F                               _xtoa$1472 0031  
                      __size_of_I2C_Ack 0014                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 0001                            _isspace$1565 0007  
                     ??_LCD_Custom_Char 000B                              vfpfcnvrt@c 00C3  
                            vfpfcnvrt@f 00BC                               copy_data0 4468  
                              _FreqNota 01B6            I2C_Start@slave_write_address 0002  
                          delay_us@nota 0001                        __size_of_ReadADC 00FE  
                      __size_of_ReadLUZ 0068                                __Hrparam 0000  
                      __size_of_Estados 027A                              vfprintf@ap 00C8  
                              __Lrparam 0000                              vfprintf@fp 00C4  
                  __size_of_PlayCancion 0158                           I2C_Write@data 0001  
                      __size_of___fladd 04C0                        __size_of___fldiv 039A  
                      __size_of___awdiv 00C4                        __size_of___flneg 0038  
                      __size_of___awmod 00B0                        __size_of___flmul 042A  
                      __size_of___flsub 0046                        __size_of___fltol 0106  
                            ?_vfpfcnvrt 00A4                      ___fpclassifyf@F465 00E6  
                        _RTC_Calendario 2734                              sprintf@fmt 00CE  
                              ___xxtofl 318A                        __size_of_isalpha 003C  
                      __size_of_isdigit 0038                                _delay_us 48A2  
                      __size_of_islower 0038                        __size_of_isspace 0052  
                              __ptext10 49D6                                __ptext11 49EA  
                              __ptext20 34CE                                __ptext12 48D4  
                              __ptext21 3C92                                __ptext13 49FE  
                              __ptext30 4754                                __ptext22 48A2  
                              __ptext14 49A8                                __ptext31 46DE  
                              __ptext23 42FC                                __ptext15 2CFE  
                              __ptext40 3B02                                __ptext32 3A2C  
                              __ptext24 4356                                __ptext16 4002  
                              __ptext41 4A24                                __ptext33 084A  
                              __ptext25 43B0                                __ptext17 3830  
                              __ptext50 3ECA                                __ptext42 2F78  
                              __ptext34 40CC                                __ptext26 406A  
                              __ptext18 318A                                __ptext51 239A  
                              __ptext43 392E                                __ptext35 478C  
                              __ptext27 14A2                                __ptext19 412C  
                              __ptext60 4586                                __ptext52 3E1A  
                              __ptext44 3626                                __ptext36 4246  
                              __ptext28 2A24                                __ptext61 44A4  
                              __ptext53 3D56                                __ptext45 4614  
                              __ptext37 3BCC                                __ptext29 418A  
                              __ptext62 44F0                                __ptext54 333E  
                              __ptext46 1AB0                                __ptext38 486C  
                              __ptext63 453C                                __ptext55 4402  
                              __ptext47 47C4                                __ptext39 465A  
                              __ptext56 47FC                                __ptext48 1F70  
                              __ptext57 4960                                __ptext49 372C  
                              __ptext58 469E                                __ptext59 41E8  
                      __size_of_isupper 0038                        __size_of_sprintf 0052  
                      __size_of_tolower 0060                              strcpy@dest 0001  
                      __size_of_strncmp 00D6                        __size_of_toupper 005E  
                         __size_of_atoi 0190                           __size_of_main 008E  
                         __size_of_play 00C4                           __size_of_xtoa 02DA  
                              efgtoa@fp 0060                                efgtoa@ne 007C  
                              efgtoa@pp 007A                                efgtoa@ou 0080  
                              isa$xinst 000000                                _vfprintf 406A  
                              main@caso 00E0                  __end_of_RTC_Calendario 2A24  
                            _LCD_String 41E8                          _vfpfcnvrt$1490 00BA  
                        _vfpfcnvrt$1486 00B8                __size_of_Estado_Lluvioso 005A  
                              isalpha@c 0001                                isdigit@c 0001  
                    LCD_Custom_Char@loc 000B                      LCD_Custom_Char@msg 0009  
                             sprintf@ap 00D4                                play@nota 0006  
                              islower@c 0001                                isspace@c 0001  
                             strcpy@src 0003              __end_of_I2C_Repeated_Start 4960  
                              isupper@c 0001                          _RTC_Read_Clock 45CE  
                             strncmp@_l 0001                               strncmp@_r 0003  
                            _OSCCONbits 000FD3                             efgtoa@nmode 008C  
                   RTC_Calendario@F3579 01CE                             ??_vfpfcnvrt 00AA  
               __size_of_Estado_Nublado 005A                         ?_RTC_Calendario 0001  
                   RTC_Calendario@AM_PM 01B5                 __size_of_Estado_Soleado 005E  
                              sprintf@f 00D6                                tolower@c 0007  
                              sprintf@s 00CC                  __size_of___fpclassifyf 00FE  
                              strncmp@l 0008                                strncmp@n 0005  
                              strncmp@r 000A                                toupper@c 0007  
                __size_of_LCD_String_xy 0040                     RTC_Calendario@hours 01AB  
                   RTC_Calendario@month 0183                             _SSPCON2bits 000FC5  
                         ___fladd@signs 0051                      RTC_Calendario@date 0179  
                    RTC_Calendario@days 0172                      RTC_Calendario@mins 01A1  
                    RTC_Calendario@secs 0197                      RTC_Calendario@year 018D  
                          ___fladd@aexp 0052                            ___fladd@bexp 0053  
                __end_of_RTC_Read_Clock 4614  
