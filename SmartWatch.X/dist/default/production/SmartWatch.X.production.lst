

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 20 11:19:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataBANK1
    96  003E36                     __pidataBANK1:
    97                           	callstack 0
    98                           
    99                           ;initializer for _character3
   100  003E36  00                 	db	0
   101  003E37  00                 	db	0
   102  003E38  0E                 	db	14
   103  003E39  1F                 	db	31
   104  003E3A  0E                 	db	14
   105  003E3B  00                 	db	0
   106  003E3C  00                 	db	0
   107  003E3D  00                 	db	0
   108                           
   109                           ;initializer for _character2
   110  003E3E  15                 	db	21
   111  003E3F  0E                 	db	14
   112  003E40  11                 	db	17
   113  003E41  11                 	db	17
   114  003E42  0E                 	db	14
   115  003E43  15                 	db	21
   116  003E44  00                 	db	0
   117  003E45  00                 	db	0
   118                           
   119                           ;initializer for _character1
   120  003E46  0E                 	db	14
   121  003E47  1F                 	db	31
   122  003E48  1F                 	db	31
   123  003E49  0E                 	db	14
   124  003E4A  00                 	db	0
   125  003E4B  0A                 	db	10
   126  003E4C  0A                 	db	10
   127  003E4D  00                 	db	0
   128  0000                     _ADRESL	set	4035
   129  0000                     _ADRESH	set	4036
   130  0000                     _ADCON2bits	set	4032
   131  0000                     _ADCON0bits	set	4034
   132  0000                     _ADCON1bits	set	4033
   133  0000                     _OSCCONbits	set	4051
   134  0000                     _TRISA	set	3986
   135  0000                     _TRISD	set	3989
   136  0000                     _LATB	set	3978
   137  0000                     _TRISB	set	3987
   138  0000                     _TRISE	set	3990
   139  0000                     _OSCCON	set	4051
   140  0000                     _LATB3	set	31827
   141  0000                     _LATB2	set	31826
   142  0000                     _LATE2	set	31850
   143  0000                     _LATE1	set	31849
   144  0000                     _LATE0	set	31848
   145                           
   146                           	psect	smallconst
   147  000800                     __psmallconst:
   148                           	callstack 0
   149  000800  00                 	db	0
   150  000801                     STR_1:
   151  000801  20                 	db	32
   152  000802  42                 	db	66	;'B'
   153  000803  75                 	db	117	;'u'
   154  000804  65                 	db	101	;'e'
   155  000805  6E                 	db	110	;'n'
   156  000806  6F                 	db	111	;'o'
   157  000807  73                 	db	115	;'s'
   158  000808  20                 	db	32
   159  000809  44                 	db	68	;'D'
   160  00080A  69                 	db	105	;'i'
   161  00080B  61                 	db	97	;'a'
   162  00080C  73                 	db	115	;'s'
   163  00080D  20                 	db	32
   164  00080E  00                 	db	0
   165  00080F                     STR_2:
   166  00080F  25                 	db	37
   167  000810  30                 	db	48	;'0'
   168  000811  2E                 	db	46
   169  000812  31                 	db	49	;'1'
   170  000813  66                 	db	102	;'f'
   171  000814  20                 	db	32
   172  000815  43                 	db	67	;'C'
   173  000816  00                 	db	0
   174  000817                     STR_3:
   175  000817  25                 	db	37
   176  000818  30                 	db	48	;'0'
   177  000819  2E                 	db	46
   178  00081A  31                 	db	49	;'1'
   179  00081B  66                 	db	102	;'f'
   180  00081C  00                 	db	0
   181  00081D                     STR_8:
   182  00081D  49                 	db	73	;'I'
   183  00081E  4E                 	db	78	;'N'
   184  00081F  46                 	db	70	;'F'
   185  000820  00                 	db	0
   186  000821                     STR_12:
   187  000821  4E                 	db	78	;'N'
   188  000822  41                 	db	65	;'A'
   189  000823  4E                 	db	78	;'N'
   190  000824  00                 	db	0
   191  000825                     STR_9:
   192  000825  69                 	db	105	;'i'
   193  000826  6E                 	db	110	;'n'
   194  000827  66                 	db	102	;'f'
   195  000828  00                 	db	0
   196  000829                     STR_13:
   197  000829  6E                 	db	110	;'n'
   198  00082A  61                 	db	97	;'a'
   199  00082B  6E                 	db	110	;'n'
   200  00082C  00                 	db	0
   201  00082D                     STR_16:
   202  00082D  6C                 	db	108	;'l'
   203  00082E  66                 	db	102	;'f'
   204  00082F  00                 	db	0
   205  000830  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210  003C3A                     __pcinit:
   211                           	callstack 0
   212  003C3A                     start_initialization:
   213                           	callstack 0
   214  003C3A                     __initialization:
   215                           	callstack 0
   216                           
   217                           ; Initialize objects allocated to BANK1 (24 bytes)
   218                           ; load TBLPTR registers with __pidataBANK1
   219  003C3A  0E36               	movlw	low __pidataBANK1
   220  003C3C  6EF6               	movwf	tblptrl,c
   221  003C3E  0E3E               	movlw	high __pidataBANK1
   222  003C40  6EF7               	movwf	tblptrh,c
   223  003C42  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   224  003C44  6EF8               	movwf	tblptru,c
   225  003C46  EE01  F078         	lfsr	0,__pdataBANK1
   226  003C4A  EE10 F018          	lfsr	1,24
   227  003C4E                     copy_data0:
   228  003C4E  0009               	tblrd		*+
   229  003C50  CFF5 FFEE          	movff	tablat,postinc0
   230  003C54  50E5               	movf	postdec1,w,c
   231  003C56  50E1               	movf	fsr1l,w,c
   232  003C58  E1FA               	bnz	copy_data0
   233                           
   234                           ; Clear objects allocated to BANK1 (120 bytes)
   235  003C5A  EE01  F000         	lfsr	0,__pbssBANK1
   236  003C5E  0E78               	movlw	120
   237  003C60                     clear_0:
   238  003C60  6AEE               	clrf	postinc0,c
   239  003C62  06E8               	decf	wreg,f,c
   240  003C64  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to BANK0 (35 bytes)
   243  003C66  EE00  F0DA         	lfsr	0,__pbssBANK0
   244  003C6A  0E23               	movlw	35
   245  003C6C                     clear_1:
   246  003C6C  6AEE               	clrf	postinc0,c
   247  003C6E  06E8               	decf	wreg,f,c
   248  003C70  E1FD               	bnz	clear_1
   249                           
   250                           ; Clear objects allocated to COMRAM (1 bytes)
   251  003C72  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   252  003C74                     end_of_initialization:
   253                           	callstack 0
   254  003C74                     __end_of__initialization:
   255                           	callstack 0
   256  003C74  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  003C76  6EF8               	movwf	tblptru,c
   258  003C78  0100               	movlb	0
   259  003C7A  EF39  F00F         	goto	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMRAM
   262  00005F                     __pbssCOMRAM:
   263                           	callstack 0
   264  00005F                     _counter_digito:
   265                           	callstack 0
   266  00005F                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269  0000DA                     __pbssBANK0:
   270                           	callstack 0
   271  0000DA                     floorf@F527:
   272                           	callstack 0
   273  0000DA                     	ds	4
   274  0000DE                     ___fpclassifyf@F465:
   275                           	callstack 0
   276  0000DE                     	ds	4
   277  0000E2                     _temperatura:
   278                           	callstack 0
   279  0000E2                     	ds	4
   280  0000E6                     _temp:
   281                           	callstack 0
   282  0000E6                     	ds	4
   283  0000EA                     _luz:
   284                           	callstack 0
   285  0000EA                     	ds	4
   286  0000EE                     _tempar:
   287                           	callstack 0
   288  0000EE                     	ds	4
   289  0000F2                     _nout:
   290                           	callstack 0
   291  0000F2                     	ds	2
   292  0000F4                     _width:
   293                           	callstack 0
   294  0000F4                     	ds	2
   295  0000F6                     _prec:
   296                           	callstack 0
   297  0000F6                     	ds	2
   298  0000F8                     _flags:
   299                           	callstack 0
   300  0000F8                     	ds	2
   301  0000FA                     _value_adc:
   302                           	callstack 0
   303  0000FA                     	ds	2
   304  0000FC                     _lm35:
   305                           	callstack 0
   306  0000FC                     	ds	1
   307                           
   308                           	psect	bssBANK1
   309  000100                     __pbssBANK1:
   310                           	callstack 0
   311  000100                     _dbuf:
   312                           	callstack 0
   313  000100                     	ds	80
   314  000150                     _Sluz:
   315                           	callstack 0
   316  000150                     	ds	20
   317  000164                     _Stemp:
   318                           	callstack 0
   319  000164                     	ds	20
   320                           
   321                           	psect	dataBANK1
   322  000178                     __pdataBANK1:
   323                           	callstack 0
   324  000178                     _character3:
   325                           	callstack 0
   326  000178                     	ds	8
   327  000180                     _character2:
   328                           	callstack 0
   329  000180                     	ds	8
   330  000188                     _character1:
   331                           	callstack 0
   332  000188                     	ds	8
   333                           
   334                           	psect	cstackBANK0
   335  000060                     __pcstackBANK0:
   336                           	callstack 0
   337  000060                     ___fltol@sign1:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x0
   341  000060                     	ds	1
   342  000061                     ___fltol@exp1:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x1
   346  000061                     	ds	1
   347  000062                     ?_ReadADC:
   348                           	callstack 0
   349  000062                     ?_efgtoa:
   350                           	callstack 0
   351  000062                     efgtoa@fp:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x2
   355  000062                     	ds	2
   356  000064                     ??_ReadADC:
   357  000064                     efgtoa@f:
   358                           	callstack 0
   359                           
   360                           ; 4 bytes @ 0x4
   361  000064                     	ds	2
   362  000066                     ReadADC@result:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x6
   366  000066                     	ds	2
   367  000068                     efgtoa@c:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x8
   371  000068                     	ds	1
   372  000069                     ??_efgtoa:
   373                           
   374                           ; 1 bytes @ 0x9
   375  000069                     	ds	5
   376  00006E                     _efgtoa$987:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0xE
   380  00006E                     	ds	2
   381  000070                     _efgtoa$988:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x10
   385  000070                     	ds	2
   386  000072                     _efgtoa$993:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x12
   390  000072                     	ds	2
   391  000074                     _efgtoa$997:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x14
   395  000074                     	ds	2
   396  000076                     _efgtoa$998:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x16
   400  000076                     	ds	2
   401  000078                     _efgtoa$999:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x18
   405  000078                     	ds	2
   406  00007A                     efgtoa@t:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x1A
   410  00007A                     	ds	2
   411  00007C                     efgtoa@pp:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x1C
   415  00007C                     	ds	2
   416  00007E                     efgtoa@ne:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x1E
   420  00007E                     	ds	2
   421  000080                     efgtoa@m:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x20
   425  000080                     	ds	2
   426  000082                     efgtoa@ou:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x22
   430  000082                     	ds	4
   431  000086                     efgtoa@d:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x26
   435  000086                     	ds	2
   436  000088                     efgtoa@sign:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x28
   440  000088                     	ds	2
   441  00008A                     efgtoa@p:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x2A
   445  00008A                     	ds	2
   446  00008C                     efgtoa@w:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x2C
   450  00008C                     	ds	2
   451  00008E                     efgtoa@nmode:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x2E
   455  00008E                     	ds	1
   456  00008F                     efgtoa@mode:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x2F
   460  00008F                     	ds	1
   461  000090                     efgtoa@h:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x30
   465  000090                     	ds	4
   466  000094                     efgtoa@l:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x34
   470  000094                     	ds	4
   471  000098                     efgtoa@i:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x38
   475  000098                     	ds	2
   476  00009A                     efgtoa@g:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x3A
   480  00009A                     	ds	4
   481  00009E                     efgtoa@e:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x3E
   485  00009E                     	ds	2
   486  0000A0                     efgtoa@n:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x40
   490  0000A0                     	ds	2
   491  0000A2                     efgtoa@u:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x42
   495  0000A2                     	ds	4
   496  0000A6                     ?_vfpfcnvrt:
   497                           	callstack 0
   498  0000A6                     vfpfcnvrt@fp:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x46
   502  0000A6                     	ds	2
   503  0000A8                     vfpfcnvrt@fmt:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x48
   507  0000A8                     	ds	2
   508  0000AA                     vfpfcnvrt@ap:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x4A
   512  0000AA                     	ds	2
   513  0000AC                     ??_vfpfcnvrt:
   514                           
   515                           ; 1 bytes @ 0x4C
   516  0000AC                     	ds	4
   517  0000B0                     vfpfcnvrt@done:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x50
   521  0000B0                     	ds	2
   522  0000B2                     _vfpfcnvrt$1013:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x52
   526  0000B2                     	ds	2
   527  0000B4                     _vfpfcnvrt$1017:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x54
   531  0000B4                     	ds	2
   532  0000B6                     vfpfcnvrt@f:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x56
   536  0000B6                     	ds	4
   537  0000BA                     vfpfcnvrt@ct:
   538                           	callstack 0
   539                           
   540                           ; 3 bytes @ 0x5A
   541  0000BA                     	ds	3
   542  0000BD                     vfpfcnvrt@c:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x5D
   546  0000BD                     	ds	1
   547  0000BE                     ?_vfprintf:
   548                           	callstack 0
   549  0000BE                     vfprintf@fp:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x5E
   553  0000BE                     	ds	2
   554  0000C0                     vfprintf@fmt:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x60
   558  0000C0                     	ds	2
   559  0000C2                     vfprintf@ap:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x62
   563  0000C2                     	ds	2
   564  0000C4                     vfprintf@cfmt:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x64
   568  0000C4                     	ds	2
   569  0000C6                     ?_sprintf:
   570                           	callstack 0
   571  0000C6                     sprintf@s:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x66
   575  0000C6                     	ds	2
   576  0000C8                     sprintf@fmt:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x68
   580  0000C8                     	ds	6
   581  0000CE                     sprintf@ap:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x6E
   585  0000CE                     	ds	2
   586  0000D0                     sprintf@f:
   587                           	callstack 0
   588                           
   589                           ; 6 bytes @ 0x70
   590  0000D0                     	ds	6
   591  0000D6                     _main$1339:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x76
   595  0000D6                     	ds	4
   596                           
   597                           	psect	cstackCOMRAM
   598  000001                     __pcstackCOMRAM:
   599                           	callstack 0
   600  000001                     ?_ReadLUZ:
   601                           	callstack 0
   602  000001                     ?_strlen:
   603                           	callstack 0
   604  000001                     ?___fpclassifyf:
   605                           	callstack 0
   606  000001                     ?_isupper:
   607                           	callstack 0
   608  000001                     ?_isdigit:
   609                           	callstack 0
   610  000001                     ?_strncmp:
   611                           	callstack 0
   612  000001                     ?_isspace:
   613                           	callstack 0
   614  000001                     ?___wmul:
   615                           	callstack 0
   616  000001                     ?___awdiv:
   617                           	callstack 0
   618  000001                     ?___awmod:
   619                           	callstack 0
   620  000001                     ?___flneg:
   621                           	callstack 0
   622  000001                     MSdelay@val:
   623                           	callstack 0
   624  000001                     ___wmul@multiplier:
   625                           	callstack 0
   626  000001                     ___awdiv@dividend:
   627                           	callstack 0
   628  000001                     ___awmod@dividend:
   629                           	callstack 0
   630  000001                     isdigit@c:
   631                           	callstack 0
   632  000001                     isspace@c:
   633                           	callstack 0
   634  000001                     isupper@c:
   635                           	callstack 0
   636  000001                     fputc@c:
   637                           	callstack 0
   638  000001                     strcpy@dest:
   639                           	callstack 0
   640  000001                     strlen@s:
   641                           	callstack 0
   642  000001                     strncmp@_l:
   643                           	callstack 0
   644  000001                     ___fleq@ff1:
   645                           	callstack 0
   646  000001                     ___flneg@f1:
   647                           	callstack 0
   648  000001                     ___fpclassifyf@x:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x0
   652  000001                     	ds	2
   653  000003                     ??_ReadLUZ:
   654  000003                     ??_isupper:
   655  000003                     ??_isdigit:
   656  000003                     ??_isspace:
   657  000003                     MSdelay@i:
   658                           	callstack 0
   659  000003                     ___wmul@multiplicand:
   660                           	callstack 0
   661  000003                     ___awdiv@divisor:
   662                           	callstack 0
   663  000003                     ___awmod@divisor:
   664                           	callstack 0
   665  000003                     fputc@fp:
   666                           	callstack 0
   667  000003                     strcpy@src:
   668                           	callstack 0
   669  000003                     strlen@a:
   670                           	callstack 0
   671  000003                     strncmp@_r:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x2
   675  000003                     	ds	2
   676  000005                     ??_fputc:
   677  000005                     ??___fpclassifyf:
   678  000005                     ??_strcpy:
   679  000005                     ___awdiv@counter:
   680                           	callstack 0
   681  000005                     ___awmod@counter:
   682                           	callstack 0
   683  000005                     MSdelay@j:
   684                           	callstack 0
   685  000005                     ReadLUZ@result:
   686                           	callstack 0
   687  000005                     ___wmul@product:
   688                           	callstack 0
   689  000005                     strncmp@n:
   690                           	callstack 0
   691  000005                     ___fleq@ff2:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x4
   695  000005                     	ds	1
   696  000006                     ___awdiv@sign:
   697                           	callstack 0
   698  000006                     ___awmod@sign:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x5
   702  000006                     	ds	1
   703  000007                     ??_LCD_Command:
   704  000007                     ??_LCD_Char:
   705  000007                     ??_strncmp:
   706  000007                     ?_tolower:
   707                           	callstack 0
   708  000007                     ?___xxtofl:
   709                           	callstack 0
   710  000007                     _isspace$1082:
   711                           	callstack 0
   712  000007                     ___awdiv@quotient:
   713                           	callstack 0
   714  000007                     strcpy@s:
   715                           	callstack 0
   716  000007                     tolower@c:
   717                           	callstack 0
   718  000007                     ___xxtofl@val:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x6
   722  000007                     	ds	1
   723  000008                     ?_atoi:
   724                           	callstack 0
   725  000008                     LCD_Command@cmd:
   726                           	callstack 0
   727  000008                     LCD_Char@dat:
   728                           	callstack 0
   729  000008                     atoi@s:
   730                           	callstack 0
   731  000008                     strncmp@l:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x7
   735  000008                     	ds	1
   736  000009                     ??_tolower:
   737  000009                     ??___fleq:
   738  000009                     LCD_String@msg:
   739                           	callstack 0
   740  000009                     LCD_Custom_Char@msg:
   741                           	callstack 0
   742  000009                     ___fpclassifyf@e:
   743                           	callstack 0
   744  000009                     strcpy@d:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x8
   748  000009                     	ds	1
   749  00000A                     ??_atoi:
   750  00000A                     fputs@s:
   751                           	callstack 0
   752  00000A                     strncmp@r:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x9
   756  00000A                     	ds	1
   757  00000B                     ??___xxtofl:
   758  00000B                     LCD_String_xy@pos:
   759                           	callstack 0
   760  00000B                     LCD_Custom_Char@loc:
   761                           	callstack 0
   762  00000B                     ___fpclassifyf@u:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0xA
   766  00000B                     	ds	1
   767  00000C                     LCD_Custom_Char@i:
   768                           	callstack 0
   769  00000C                     LCD_String_xy@msg:
   770                           	callstack 0
   771  00000C                     fputs@fp:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0xB
   775  00000C                     	ds	1
   776  00000D                     _tolower$1146:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0xC
   780  00000D                     	ds	1
   781  00000E                     LCD_String_xy@row:
   782                           	callstack 0
   783  00000E                     fputs@c:
   784                           	callstack 0
   785  00000E                     atoi@neg:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0xD
   789  00000E                     	ds	1
   790  00000F                     LCD_String_xy@location:
   791                           	callstack 0
   792  00000F                     ___xxtofl@sign:
   793                           	callstack 0
   794  00000F                     fputs@i:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0xE
   798  00000F                     	ds	1
   799  000010                     ___xxtofl@exp:
   800                           	callstack 0
   801  000010                     _atoi$1051:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0xF
   805  000010                     	ds	1
   806  000011                     ?_pad:
   807                           	callstack 0
   808  000011                     pad@fp:
   809                           	callstack 0
   810  000011                     ___xxtofl@arg:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x10
   814  000011                     	ds	1
   815  000012                     _atoi$1053:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x11
   819  000012                     	ds	1
   820  000013                     pad@buf:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x12
   824  000013                     	ds	1
   825  000014                     _atoi$1052:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x13
   829  000014                     	ds	1
   830  000015                     ?___flmul:
   831                           	callstack 0
   832  000015                     pad@p:
   833                           	callstack 0
   834  000015                     atoi@n:
   835                           	callstack 0
   836  000015                     ___flmul@b:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x14
   840  000015                     	ds	2
   841  000017                     ??_pad:
   842                           
   843                           ; 1 bytes @ 0x16
   844  000017                     	ds	1
   845  000018                     pad@i:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x17
   849  000018                     	ds	1
   850  000019                     ___flmul@a:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x18
   854  000019                     	ds	1
   855  00001A                     pad@w:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x19
   859  00001A                     	ds	3
   860  00001D                     ??___flmul:
   861                           
   862                           ; 1 bytes @ 0x1C
   863  00001D                     	ds	4
   864  000021                     ___flmul@sign:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x20
   868  000021                     	ds	1
   869  000022                     ___flmul@grs:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x21
   873  000022                     	ds	4
   874  000026                     ___flmul@aexp:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x25
   878  000026                     	ds	1
   879  000027                     ___flmul@bexp:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x26
   883  000027                     	ds	1
   884  000028                     ___flmul@prod:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x27
   888  000028                     	ds	4
   889  00002C                     ___flmul@temp:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x2B
   893  00002C                     	ds	2
   894  00002E                     ?___fldiv:
   895                           	callstack 0
   896  00002E                     ___flge@ff1:
   897                           	callstack 0
   898  00002E                     ___fldiv@b:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x2D
   902  00002E                     	ds	4
   903  000032                     ___flge@ff2:
   904                           	callstack 0
   905  000032                     ___fldiv@a:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x31
   909  000032                     	ds	4
   910  000036                     ??___fldiv:
   911  000036                     ??___flge:
   912                           
   913                           ; 1 bytes @ 0x35
   914  000036                     	ds	4
   915  00003A                     ___fldiv@rem:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x39
   919  00003A                     	ds	4
   920  00003E                     ___fldiv@sign:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x3D
   924  00003E                     	ds	1
   925  00003F                     ___fldiv@new_exp:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x3E
   929  00003F                     	ds	2
   930  000041                     ___fldiv@grs:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x40
   934  000041                     	ds	4
   935  000045                     ___fldiv@bexp:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x44
   939  000045                     	ds	1
   940  000046                     ___fldiv@aexp:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x45
   944  000046                     	ds	1
   945  000047                     ?___fladd:
   946                           	callstack 0
   947  000047                     ?_floorf:
   948                           	callstack 0
   949  000047                     ___fladd@b:
   950                           	callstack 0
   951  000047                     floorf@x:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x46
   955  000047                     	ds	4
   956  00004B                     ??_floorf:
   957  00004B                     ___fladd@a:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x4A
   961  00004B                     	ds	4
   962  00004F                     ??___fladd:
   963                           
   964                           ; 1 bytes @ 0x4E
   965  00004F                     	ds	2
   966  000051                     floorf@m:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x50
   970  000051                     	ds	2
   971  000053                     ___fladd@signs:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x52
   975  000053                     	ds	1
   976  000054                     ___fladd@aexp:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x53
   980  000054                     	ds	1
   981  000055                     ___fladd@bexp:
   982                           	callstack 0
   983  000055                     floorf@e:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x54
   987  000055                     	ds	1
   988  000056                     ___fladd@grs:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x55
   992  000056                     	ds	1
   993  000057                     ?___flsub:
   994                           	callstack 0
   995  000057                     ?___fltol:
   996                           	callstack 0
   997  000057                     ___fltol@f1:
   998                           	callstack 0
   999  000057                     ___flsub@b:
  1000                           	callstack 0
  1001  000057                     floorf@u:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x56
  1005  000057                     	ds	4
  1006  00005B                     ??___fltol:
  1007  00005B                     ___flsub@a:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x5A
  1011  00005B                     	ds	4
  1012  00005F                     
  1013                           ; 1 bytes @ 0x5E
  1014 ;;
  1015 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1016 ;;
  1017 ;; *************** function _main *****************
  1018 ;; Defined at:
  1019 ;;		line 35 in file "smart_main.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0
  1034 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1036 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1037 ;;Total ram usage:        4 bytes
  1038 ;; Hardware stack levels required when called: 8
  1039 ;; This function calls:
  1040 ;;		_LCD_Char
  1041 ;;		_LCD_Clear
  1042 ;;		_LCD_Command
  1043 ;;		_LCD_Custom_Char
  1044 ;;		_LCD_Init
  1045 ;;		_LCD_String_xy
  1046 ;;		_ReadADC
  1047 ;;		_ReadLUZ
  1048 ;;		___flge
  1049 ;;		___xxtofl
  1050 ;;		_sprintf
  1051 ;; This function is called by:
  1052 ;;		Startup code after reset
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text0
  1057  001E72                     __ptext0:
  1058                           	callstack 0
  1059  001E72                     _main:
  1060                           	callstack 23
  1061  001E72                     
  1062                           ;smart_main.c: 37:     OSCCON=0x72;
  1063  001E72  0E72               	movlw	114
  1064  001E74  6ED3               	movwf	211,c	;volatile
  1065                           
  1066                           ;smart_main.c: 38:     TRISE=0x00;
  1067  001E76  0E00               	movlw	0
  1068  001E78  6E96               	movwf	150,c	;volatile
  1069  001E7A                     
  1070                           ;smart_main.c: 41:  LCD_Init();
  1071  001E7A  ECF0  F01E         	call	_LCD_Init	;wreg free
  1072  001E7E                     
  1073                           ;smart_main.c: 42:  LCD_String_xy ( 1 , 0 , " Buenos Dias " );
  1074  001E7E  0E00               	movlw	0
  1075  001E80  6E0B               	movwf	LCD_String_xy@pos^0,c
  1076  001E82  0E01               	movlw	low STR_1
  1077  001E84  6E0C               	movwf	LCD_String_xy@msg^0,c
  1078  001E86  0E08               	movlw	high STR_1
  1079  001E88  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1080  001E8A  0E01               	movlw	1
  1081  001E8C  EC61  F01E         	call	_LCD_String_xy
  1082  001E90                     l4335:
  1083                           
  1084                           ;smart_main.c: 43:     LCD_Clear();
  1085  001E90  EC27  F01F         	call	_LCD_Clear	;wreg free
  1086  001E94                     
  1087                           ;smart_main.c: 56:         tempar = ReadADC();
  1088  001E94  EC61  F019         	call	_ReadADC	;wreg free
  1089  001E98  0100               	movlb	0	; () banked
  1090  001E9A  C062  F0D6         	movff	?_ReadADC,_main$1339
  1091  001E9E  C063  F0D7         	movff	?_ReadADC+1,_main$1339+1
  1092  001EA2  6BD8               	clrf	(_main$1339+2)& (0+255),b
  1093  001EA4  6BD9               	clrf	(_main$1339+3)& (0+255),b
  1094  001EA6                     
  1095                           ; BSR set to: 0
  1096                           ;smart_main.c: 56:         tempar = ReadADC();
  1097  001EA6  C0D6  F007         	movff	_main$1339,___xxtofl@val
  1098  001EAA  C0D7  F008         	movff	_main$1339+1,___xxtofl@val+1
  1099  001EAE  C0D8  F009         	movff	_main$1339+2,___xxtofl@val+2
  1100  001EB2  C0D9  F00A         	movff	_main$1339+3,___xxtofl@val+3
  1101  001EB6  0E00               	movlw	0
  1102  001EB8  EC3A  F016         	call	___xxtofl
  1103  001EBC  C007  F0EE         	movff	?___xxtofl,_tempar
  1104  001EC0  C008  F0EF         	movff	?___xxtofl+1,_tempar+1
  1105  001EC4  C009  F0F0         	movff	?___xxtofl+2,_tempar+2
  1106  001EC8  C00A  F0F1         	movff	?___xxtofl+3,_tempar+3
  1107  001ECC                     
  1108                           ;smart_main.c: 57:         luz = ReadLUZ();
  1109  001ECC  EC22  F01C         	call	_ReadLUZ	;wreg free
  1110  001ED0  C001  F007         	movff	?_ReadLUZ,___xxtofl@val
  1111  001ED4  C002  F008         	movff	?_ReadLUZ+1,___xxtofl@val+1
  1112  001ED8  6A09               	clrf	(___xxtofl@val+2)^0,c
  1113  001EDA  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1114  001EDC  0E00               	movlw	0
  1115  001EDE  EC3A  F016         	call	___xxtofl
  1116  001EE2  C007  F0EA         	movff	?___xxtofl,_luz
  1117  001EE6  C008  F0EB         	movff	?___xxtofl+1,_luz+1
  1118  001EEA  C009  F0EC         	movff	?___xxtofl+2,_luz+2
  1119  001EEE  C00A  F0ED         	movff	?___xxtofl+3,_luz+3
  1120  001EF2                     
  1121                           ;smart_main.c: 58:         if(tempar >20&&(luz>0&&luz<200)){
  1122  001EF2  0E00               	movlw	0
  1123  001EF4  6E2E               	movwf	___flge@ff1^0,c
  1124  001EF6  0E00               	movlw	0
  1125  001EF8  6E2F               	movwf	(___flge@ff1+1)^0,c
  1126  001EFA  0EA0               	movlw	160
  1127  001EFC  6E30               	movwf	(___flge@ff1+2)^0,c
  1128  001EFE  0E41               	movlw	65
  1129  001F00  6E31               	movwf	(___flge@ff1+3)^0,c
  1130  001F02  C0EE  F032         	movff	_tempar,___flge@ff2
  1131  001F06  C0EF  F033         	movff	_tempar+1,___flge@ff2+1
  1132  001F0A  C0F0  F034         	movff	_tempar+2,___flge@ff2+2
  1133  001F0E  C0F1  F035         	movff	_tempar+3,___flge@ff2+3
  1134  001F12  EC60  F018         	call	___flge	;wreg free
  1135  001F16  B0D8               	btfsc	status,0,c
  1136  001F18  EF90  F00F         	goto	u5111
  1137  001F1C  EF92  F00F         	goto	u5110
  1138  001F20                     u5111:
  1139  001F20  EF0C  F010         	goto	l4367
  1140  001F24                     u5110:
  1141  001F24  0E00               	movlw	0
  1142  001F26  6E2E               	movwf	___flge@ff1^0,c
  1143  001F28  0E00               	movlw	0
  1144  001F2A  6E2F               	movwf	(___flge@ff1+1)^0,c
  1145  001F2C  0E00               	movlw	0
  1146  001F2E  6E30               	movwf	(___flge@ff1+2)^0,c
  1147  001F30  0E00               	movlw	0
  1148  001F32  6E31               	movwf	(___flge@ff1+3)^0,c
  1149  001F34  C0EA  F032         	movff	_luz,___flge@ff2
  1150  001F38  C0EB  F033         	movff	_luz+1,___flge@ff2+1
  1151  001F3C  C0EC  F034         	movff	_luz+2,___flge@ff2+2
  1152  001F40  C0ED  F035         	movff	_luz+3,___flge@ff2+3
  1153  001F44  EC60  F018         	call	___flge	;wreg free
  1154  001F48  B0D8               	btfsc	status,0,c
  1155  001F4A  EFA9  F00F         	goto	u5121
  1156  001F4E  EFAB  F00F         	goto	u5120
  1157  001F52                     u5121:
  1158  001F52  EF0C  F010         	goto	l4367
  1159  001F56                     u5120:
  1160  001F56  C0EA  F02E         	movff	_luz,___flge@ff1
  1161  001F5A  C0EB  F02F         	movff	_luz+1,___flge@ff1+1
  1162  001F5E  C0EC  F030         	movff	_luz+2,___flge@ff1+2
  1163  001F62  C0ED  F031         	movff	_luz+3,___flge@ff1+3
  1164  001F66  0E00               	movlw	0
  1165  001F68  6E32               	movwf	___flge@ff2^0,c
  1166  001F6A  0E00               	movlw	0
  1167  001F6C  6E33               	movwf	(___flge@ff2+1)^0,c
  1168  001F6E  0E48               	movlw	72
  1169  001F70  6E34               	movwf	(___flge@ff2+2)^0,c
  1170  001F72  0E43               	movlw	67
  1171  001F74  6E35               	movwf	(___flge@ff2+3)^0,c
  1172  001F76  EC60  F018         	call	___flge	;wreg free
  1173  001F7A  B0D8               	btfsc	status,0,c
  1174  001F7C  EFC2  F00F         	goto	u5131
  1175  001F80  EFC4  F00F         	goto	u5130
  1176  001F84                     u5131:
  1177  001F84  EF0C  F010         	goto	l4367
  1178  001F88                     u5130:
  1179  001F88                     
  1180                           ;smart_main.c: 59:             sprintf(Stemp, "%0.1f C", tempar);
  1181  001F88  0E64               	movlw	low _Stemp
  1182  001F8A  0100               	movlb	0	; () banked
  1183  001F8C  6FC6               	movwf	sprintf@s& (0+255),b
  1184  001F8E  0E01               	movlw	high _Stemp
  1185  001F90  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1186  001F92  0E0F               	movlw	low STR_2
  1187  001F94  6FC8               	movwf	sprintf@fmt& (0+255),b
  1188  001F96  0E08               	movlw	high STR_2
  1189  001F98  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1190  001F9A  C0EE  F0CA         	movff	_tempar,?_sprintf+4
  1191  001F9E  C0EF  F0CB         	movff	_tempar+1,?_sprintf+5
  1192  001FA2  C0F0  F0CC         	movff	_tempar+2,?_sprintf+6
  1193  001FA6  C0F1  F0CD         	movff	_tempar+3,?_sprintf+7
  1194  001FAA  EC13  F01D         	call	_sprintf	;wreg free
  1195  001FAE                     
  1196                           ;smart_main.c: 60:             LCD_String_xy(1, 0, Stemp);
  1197  001FAE  0E00               	movlw	0
  1198  001FB0  6E0B               	movwf	LCD_String_xy@pos^0,c
  1199  001FB2  0E64               	movlw	low _Stemp
  1200  001FB4  6E0C               	movwf	LCD_String_xy@msg^0,c
  1201  001FB6  0E01               	movlw	high _Stemp
  1202  001FB8  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1203  001FBA  0E01               	movlw	1
  1204  001FBC  EC61  F01E         	call	_LCD_String_xy
  1205  001FC0                     
  1206                           ;smart_main.c: 61:             sprintf(Sluz, "%0.1f", luz);
  1207  001FC0  0E50               	movlw	low _Sluz
  1208  001FC2  0100               	movlb	0	; () banked
  1209  001FC4  6FC6               	movwf	sprintf@s& (0+255),b
  1210  001FC6  0E01               	movlw	high _Sluz
  1211  001FC8  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1212  001FCA  0E17               	movlw	low STR_3
  1213  001FCC  6FC8               	movwf	sprintf@fmt& (0+255),b
  1214  001FCE  0E08               	movlw	high STR_3
  1215  001FD0  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1216  001FD2  C0EA  F0CA         	movff	_luz,?_sprintf+4
  1217  001FD6  C0EB  F0CB         	movff	_luz+1,?_sprintf+5
  1218  001FDA  C0EC  F0CC         	movff	_luz+2,?_sprintf+6
  1219  001FDE  C0ED  F0CD         	movff	_luz+3,?_sprintf+7
  1220  001FE2  EC13  F01D         	call	_sprintf	;wreg free
  1221                           
  1222                           ;smart_main.c: 62:             LCD_String_xy(1, 6, Sluz);
  1223  001FE6  0E06               	movlw	6
  1224  001FE8  6E0B               	movwf	LCD_String_xy@pos^0,c
  1225  001FEA  0E50               	movlw	low _Sluz
  1226  001FEC  6E0C               	movwf	LCD_String_xy@msg^0,c
  1227  001FEE  0E01               	movlw	high _Sluz
  1228  001FF0  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1229  001FF2  0E01               	movlw	1
  1230  001FF4  EC61  F01E         	call	_LCD_String_xy
  1231  001FF8                     
  1232                           ;smart_main.c: 63:             LCD_Custom_Char ( 0 ,character2);
  1233  001FF8  0E80               	movlw	low _character2
  1234  001FFA  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1235  001FFC  0E01               	movlw	high _character2
  1236  001FFE  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1237  002000  0E00               	movlw	0
  1238  002002  ECD6  F01D         	call	_LCD_Custom_Char
  1239  002006                     
  1240                           ;smart_main.c: 64:             LCD_Command ( 0xc0);
  1241  002006  0EC0               	movlw	192
  1242  002008  EC8B  F01D         	call	_LCD_Command
  1243  00200C                     
  1244                           ;smart_main.c: 65:             LCD_Char (0);
  1245  00200C  0E00               	movlw	0
  1246  00200E  EC65  F01D         	call	_LCD_Char
  1247  002012                     
  1248                           ;smart_main.c: 66:             LATE0 = 0;
  1249  002012  908D               	bcf	3981,0,c	;volatile
  1250  002014                     
  1251                           ;smart_main.c: 67:             LATE1 = 0;
  1252  002014  928D               	bcf	3981,1,c	;volatile
  1253  002016                     
  1254                           ;smart_main.c: 68:             LATE2 = 0;
  1255  002016  948D               	bcf	3981,2,c	;volatile
  1256  002018                     l4367:
  1257                           
  1258                           ;smart_main.c: 70:         if((tempar >10||tempar<=20)&&(luz>200&&luz<500)){
  1259  002018  0E00               	movlw	0
  1260  00201A  6E2E               	movwf	___flge@ff1^0,c
  1261  00201C  0E00               	movlw	0
  1262  00201E  6E2F               	movwf	(___flge@ff1+1)^0,c
  1263  002020  0E20               	movlw	32
  1264  002022  6E30               	movwf	(___flge@ff1+2)^0,c
  1265  002024  0E41               	movlw	65
  1266  002026  6E31               	movwf	(___flge@ff1+3)^0,c
  1267  002028  C0EE  F032         	movff	_tempar,___flge@ff2
  1268  00202C  C0EF  F033         	movff	_tempar+1,___flge@ff2+1
  1269  002030  C0F0  F034         	movff	_tempar+2,___flge@ff2+2
  1270  002034  C0F1  F035         	movff	_tempar+3,___flge@ff2+3
  1271  002038  EC60  F018         	call	___flge	;wreg free
  1272  00203C  A0D8               	btfss	status,0,c
  1273  00203E  EF23  F010         	goto	u5141
  1274  002042  EF25  F010         	goto	u5140
  1275  002046                     u5141:
  1276  002046  EF3E  F010         	goto	l4371
  1277  00204A                     u5140:
  1278  00204A  0E00               	movlw	0
  1279  00204C  6E2E               	movwf	___flge@ff1^0,c
  1280  00204E  0E00               	movlw	0
  1281  002050  6E2F               	movwf	(___flge@ff1+1)^0,c
  1282  002052  0EA0               	movlw	160
  1283  002054  6E30               	movwf	(___flge@ff1+2)^0,c
  1284  002056  0E41               	movlw	65
  1285  002058  6E31               	movwf	(___flge@ff1+3)^0,c
  1286  00205A  C0EE  F032         	movff	_tempar,___flge@ff2
  1287  00205E  C0EF  F033         	movff	_tempar+1,___flge@ff2+1
  1288  002062  C0F0  F034         	movff	_tempar+2,___flge@ff2+2
  1289  002066  C0F1  F035         	movff	_tempar+3,___flge@ff2+3
  1290  00206A  EC60  F018         	call	___flge	;wreg free
  1291  00206E  A0D8               	btfss	status,0,c
  1292  002070  EF3C  F010         	goto	u5151
  1293  002074  EF3E  F010         	goto	u5150
  1294  002078                     u5151:
  1295  002078  EFB8  F010         	goto	l4393
  1296  00207C                     u5150:
  1297  00207C                     l4371:
  1298  00207C  0E00               	movlw	0
  1299  00207E  6E2E               	movwf	___flge@ff1^0,c
  1300  002080  0E00               	movlw	0
  1301  002082  6E2F               	movwf	(___flge@ff1+1)^0,c
  1302  002084  0E48               	movlw	72
  1303  002086  6E30               	movwf	(___flge@ff1+2)^0,c
  1304  002088  0E43               	movlw	67
  1305  00208A  6E31               	movwf	(___flge@ff1+3)^0,c
  1306  00208C  C0EA  F032         	movff	_luz,___flge@ff2
  1307  002090  C0EB  F033         	movff	_luz+1,___flge@ff2+1
  1308  002094  C0EC  F034         	movff	_luz+2,___flge@ff2+2
  1309  002098  C0ED  F035         	movff	_luz+3,___flge@ff2+3
  1310  00209C  EC60  F018         	call	___flge	;wreg free
  1311  0020A0  B0D8               	btfsc	status,0,c
  1312  0020A2  EF55  F010         	goto	u5161
  1313  0020A6  EF57  F010         	goto	u5160
  1314  0020AA                     u5161:
  1315  0020AA  EFB8  F010         	goto	l4393
  1316  0020AE                     u5160:
  1317  0020AE  C0EA  F02E         	movff	_luz,___flge@ff1
  1318  0020B2  C0EB  F02F         	movff	_luz+1,___flge@ff1+1
  1319  0020B6  C0EC  F030         	movff	_luz+2,___flge@ff1+2
  1320  0020BA  C0ED  F031         	movff	_luz+3,___flge@ff1+3
  1321  0020BE  0E00               	movlw	0
  1322  0020C0  6E32               	movwf	___flge@ff2^0,c
  1323  0020C2  0E00               	movlw	0
  1324  0020C4  6E33               	movwf	(___flge@ff2+1)^0,c
  1325  0020C6  0EFA               	movlw	250
  1326  0020C8  6E34               	movwf	(___flge@ff2+2)^0,c
  1327  0020CA  0E43               	movlw	67
  1328  0020CC  6E35               	movwf	(___flge@ff2+3)^0,c
  1329  0020CE  EC60  F018         	call	___flge	;wreg free
  1330  0020D2  B0D8               	btfsc	status,0,c
  1331  0020D4  EF6E  F010         	goto	u5171
  1332  0020D8  EF70  F010         	goto	u5170
  1333  0020DC                     u5171:
  1334  0020DC  EFB8  F010         	goto	l4393
  1335  0020E0                     u5170:
  1336  0020E0                     
  1337                           ;smart_main.c: 71:             sprintf(Stemp, "%0.1f C", tempar);
  1338  0020E0  0E64               	movlw	low _Stemp
  1339  0020E2  0100               	movlb	0	; () banked
  1340  0020E4  6FC6               	movwf	sprintf@s& (0+255),b
  1341  0020E6  0E01               	movlw	high _Stemp
  1342  0020E8  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1343  0020EA  0E0F               	movlw	low STR_2
  1344  0020EC  6FC8               	movwf	sprintf@fmt& (0+255),b
  1345  0020EE  0E08               	movlw	high STR_2
  1346  0020F0  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1347  0020F2  C0EE  F0CA         	movff	_tempar,?_sprintf+4
  1348  0020F6  C0EF  F0CB         	movff	_tempar+1,?_sprintf+5
  1349  0020FA  C0F0  F0CC         	movff	_tempar+2,?_sprintf+6
  1350  0020FE  C0F1  F0CD         	movff	_tempar+3,?_sprintf+7
  1351  002102  EC13  F01D         	call	_sprintf	;wreg free
  1352  002106                     
  1353                           ;smart_main.c: 72:             LCD_String_xy(1, 0, Stemp);
  1354  002106  0E00               	movlw	0
  1355  002108  6E0B               	movwf	LCD_String_xy@pos^0,c
  1356  00210A  0E64               	movlw	low _Stemp
  1357  00210C  6E0C               	movwf	LCD_String_xy@msg^0,c
  1358  00210E  0E01               	movlw	high _Stemp
  1359  002110  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1360  002112  0E01               	movlw	1
  1361  002114  EC61  F01E         	call	_LCD_String_xy
  1362  002118                     
  1363                           ;smart_main.c: 73:             sprintf(Sluz, "%0.1f", luz);
  1364  002118  0E50               	movlw	low _Sluz
  1365  00211A  0100               	movlb	0	; () banked
  1366  00211C  6FC6               	movwf	sprintf@s& (0+255),b
  1367  00211E  0E01               	movlw	high _Sluz
  1368  002120  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1369  002122  0E17               	movlw	low STR_3
  1370  002124  6FC8               	movwf	sprintf@fmt& (0+255),b
  1371  002126  0E08               	movlw	high STR_3
  1372  002128  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1373  00212A  C0EA  F0CA         	movff	_luz,?_sprintf+4
  1374  00212E  C0EB  F0CB         	movff	_luz+1,?_sprintf+5
  1375  002132  C0EC  F0CC         	movff	_luz+2,?_sprintf+6
  1376  002136  C0ED  F0CD         	movff	_luz+3,?_sprintf+7
  1377  00213A  EC13  F01D         	call	_sprintf	;wreg free
  1378                           
  1379                           ;smart_main.c: 74:             LCD_String_xy(1, 6, Sluz);
  1380  00213E  0E06               	movlw	6
  1381  002140  6E0B               	movwf	LCD_String_xy@pos^0,c
  1382  002142  0E50               	movlw	low _Sluz
  1383  002144  6E0C               	movwf	LCD_String_xy@msg^0,c
  1384  002146  0E01               	movlw	high _Sluz
  1385  002148  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1386  00214A  0E01               	movlw	1
  1387  00214C  EC61  F01E         	call	_LCD_String_xy
  1388  002150                     
  1389                           ;smart_main.c: 75:             LCD_Custom_Char ( 0 ,character1);
  1390  002150  0E88               	movlw	low _character1
  1391  002152  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1392  002154  0E01               	movlw	high _character1
  1393  002156  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1394  002158  0E00               	movlw	0
  1395  00215A  ECD6  F01D         	call	_LCD_Custom_Char
  1396  00215E                     
  1397                           ;smart_main.c: 76:             LCD_Command ( 0xc0);
  1398  00215E  0EC0               	movlw	192
  1399  002160  EC8B  F01D         	call	_LCD_Command
  1400  002164                     
  1401                           ;smart_main.c: 77:             LCD_Char (0);
  1402  002164  0E00               	movlw	0
  1403  002166  EC65  F01D         	call	_LCD_Char
  1404  00216A                     
  1405                           ;smart_main.c: 78:             LATE0 = 1;
  1406  00216A  808D               	bsf	3981,0,c	;volatile
  1407  00216C                     
  1408                           ;smart_main.c: 79:             LATE1 = 1;
  1409  00216C  828D               	bsf	3981,1,c	;volatile
  1410  00216E                     
  1411                           ;smart_main.c: 80:             LATE2 = 0;
  1412  00216E  948D               	bcf	3981,2,c	;volatile
  1413  002170                     l4393:
  1414                           
  1415                           ;smart_main.c: 82:         if(tempar <10&&(luz>500&&luz<1500)){
  1416  002170  C0EE  F02E         	movff	_tempar,___flge@ff1
  1417  002174  C0EF  F02F         	movff	_tempar+1,___flge@ff1+1
  1418  002178  C0F0  F030         	movff	_tempar+2,___flge@ff1+2
  1419  00217C  C0F1  F031         	movff	_tempar+3,___flge@ff1+3
  1420  002180  0E00               	movlw	0
  1421  002182  6E32               	movwf	___flge@ff2^0,c
  1422  002184  0E00               	movlw	0
  1423  002186  6E33               	movwf	(___flge@ff2+1)^0,c
  1424  002188  0E20               	movlw	32
  1425  00218A  6E34               	movwf	(___flge@ff2+2)^0,c
  1426  00218C  0E41               	movlw	65
  1427  00218E  6E35               	movwf	(___flge@ff2+3)^0,c
  1428  002190  EC60  F018         	call	___flge	;wreg free
  1429  002194  B0D8               	btfsc	status,0,c
  1430  002196  EFCF  F010         	goto	u5181
  1431  00219A  EFD1  F010         	goto	u5180
  1432  00219E                     u5181:
  1433  00219E  EF48  F00F         	goto	l4335
  1434  0021A2                     u5180:
  1435  0021A2  0E00               	movlw	0
  1436  0021A4  6E2E               	movwf	___flge@ff1^0,c
  1437  0021A6  0E00               	movlw	0
  1438  0021A8  6E2F               	movwf	(___flge@ff1+1)^0,c
  1439  0021AA  0EFA               	movlw	250
  1440  0021AC  6E30               	movwf	(___flge@ff1+2)^0,c
  1441  0021AE  0E43               	movlw	67
  1442  0021B0  6E31               	movwf	(___flge@ff1+3)^0,c
  1443  0021B2  C0EA  F032         	movff	_luz,___flge@ff2
  1444  0021B6  C0EB  F033         	movff	_luz+1,___flge@ff2+1
  1445  0021BA  C0EC  F034         	movff	_luz+2,___flge@ff2+2
  1446  0021BE  C0ED  F035         	movff	_luz+3,___flge@ff2+3
  1447  0021C2  EC60  F018         	call	___flge	;wreg free
  1448  0021C6  B0D8               	btfsc	status,0,c
  1449  0021C8  EFE8  F010         	goto	u5191
  1450  0021CC  EFEA  F010         	goto	u5190
  1451  0021D0                     u5191:
  1452  0021D0  EF48  F00F         	goto	l4335
  1453  0021D4                     u5190:
  1454  0021D4  C0EA  F02E         	movff	_luz,___flge@ff1
  1455  0021D8  C0EB  F02F         	movff	_luz+1,___flge@ff1+1
  1456  0021DC  C0EC  F030         	movff	_luz+2,___flge@ff1+2
  1457  0021E0  C0ED  F031         	movff	_luz+3,___flge@ff1+3
  1458  0021E4  0E00               	movlw	0
  1459  0021E6  6E32               	movwf	___flge@ff2^0,c
  1460  0021E8  0E80               	movlw	128
  1461  0021EA  6E33               	movwf	(___flge@ff2+1)^0,c
  1462  0021EC  0EBB               	movlw	187
  1463  0021EE  6E34               	movwf	(___flge@ff2+2)^0,c
  1464  0021F0  0E44               	movlw	68
  1465  0021F2  6E35               	movwf	(___flge@ff2+3)^0,c
  1466  0021F4  EC60  F018         	call	___flge	;wreg free
  1467  0021F8  B0D8               	btfsc	status,0,c
  1468  0021FA  EF01  F011         	goto	u5201
  1469  0021FE  EF03  F011         	goto	u5200
  1470  002202                     u5201:
  1471  002202  EF48  F00F         	goto	l4335
  1472  002206                     u5200:
  1473  002206                     
  1474                           ;smart_main.c: 83:             sprintf(Stemp, "%0.1f C", tempar);
  1475  002206  0E64               	movlw	low _Stemp
  1476  002208  0100               	movlb	0	; () banked
  1477  00220A  6FC6               	movwf	sprintf@s& (0+255),b
  1478  00220C  0E01               	movlw	high _Stemp
  1479  00220E  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1480  002210  0E0F               	movlw	low STR_2
  1481  002212  6FC8               	movwf	sprintf@fmt& (0+255),b
  1482  002214  0E08               	movlw	high STR_2
  1483  002216  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1484  002218  C0EE  F0CA         	movff	_tempar,?_sprintf+4
  1485  00221C  C0EF  F0CB         	movff	_tempar+1,?_sprintf+5
  1486  002220  C0F0  F0CC         	movff	_tempar+2,?_sprintf+6
  1487  002224  C0F1  F0CD         	movff	_tempar+3,?_sprintf+7
  1488  002228  EC13  F01D         	call	_sprintf	;wreg free
  1489  00222C                     
  1490                           ;smart_main.c: 84:             LCD_String_xy(1, 0, Stemp);
  1491  00222C  0E00               	movlw	0
  1492  00222E  6E0B               	movwf	LCD_String_xy@pos^0,c
  1493  002230  0E64               	movlw	low _Stemp
  1494  002232  6E0C               	movwf	LCD_String_xy@msg^0,c
  1495  002234  0E01               	movlw	high _Stemp
  1496  002236  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1497  002238  0E01               	movlw	1
  1498  00223A  EC61  F01E         	call	_LCD_String_xy
  1499  00223E                     
  1500                           ;smart_main.c: 85:             sprintf(Sluz, "%0.1f", luz);
  1501  00223E  0E50               	movlw	low _Sluz
  1502  002240  0100               	movlb	0	; () banked
  1503  002242  6FC6               	movwf	sprintf@s& (0+255),b
  1504  002244  0E01               	movlw	high _Sluz
  1505  002246  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1506  002248  0E17               	movlw	low STR_3
  1507  00224A  6FC8               	movwf	sprintf@fmt& (0+255),b
  1508  00224C  0E08               	movlw	high STR_3
  1509  00224E  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1510  002250  C0EA  F0CA         	movff	_luz,?_sprintf+4
  1511  002254  C0EB  F0CB         	movff	_luz+1,?_sprintf+5
  1512  002258  C0EC  F0CC         	movff	_luz+2,?_sprintf+6
  1513  00225C  C0ED  F0CD         	movff	_luz+3,?_sprintf+7
  1514  002260  EC13  F01D         	call	_sprintf	;wreg free
  1515                           
  1516                           ;smart_main.c: 86:             LCD_String_xy(1, 6, Sluz);
  1517  002264  0E06               	movlw	6
  1518  002266  6E0B               	movwf	LCD_String_xy@pos^0,c
  1519  002268  0E50               	movlw	low _Sluz
  1520  00226A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1521  00226C  0E01               	movlw	high _Sluz
  1522  00226E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1523  002270  0E01               	movlw	1
  1524  002272  EC61  F01E         	call	_LCD_String_xy
  1525  002276                     
  1526                           ;smart_main.c: 87:             LCD_Custom_Char ( 0 ,character1);
  1527  002276  0E88               	movlw	low _character1
  1528  002278  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1529  00227A  0E01               	movlw	high _character1
  1530  00227C  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1531  00227E  0E00               	movlw	0
  1532  002280  ECD6  F01D         	call	_LCD_Custom_Char
  1533  002284                     
  1534                           ;smart_main.c: 88:             LCD_Command ( 0xc0);
  1535  002284  0EC0               	movlw	192
  1536  002286  EC8B  F01D         	call	_LCD_Command
  1537  00228A                     
  1538                           ;smart_main.c: 89:             LCD_Char (0);
  1539  00228A  0E00               	movlw	0
  1540  00228C  EC65  F01D         	call	_LCD_Char
  1541  002290                     
  1542                           ;smart_main.c: 90:             LATE0 = 1;
  1543  002290  808D               	bsf	3981,0,c	;volatile
  1544  002292                     
  1545                           ;smart_main.c: 91:             LATE1 = 1;
  1546  002292  828D               	bsf	3981,1,c	;volatile
  1547  002294                     
  1548                           ;smart_main.c: 92:             LATE2 = 1;
  1549  002294  848D               	bsf	3981,2,c	;volatile
  1550  002296  EF48  F00F         	goto	l4335
  1551  00229A  EF00  F000         	goto	start
  1552  00229E                     __end_of_main:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _sprintf *****************
  1556 ;; Defined at:
  1557 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  s               2  102[BANK0 ] PTR unsigned char 
  1560 ;;		 -> Sluz(20), Stemp(20), 
  1561 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  1562 ;;		 -> STR_7(6), STR_6(8), STR_5(6), STR_4(8), 
  1563 ;;		 -> STR_3(6), STR_2(8), 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  f               6  112[BANK0 ] struct _IO_FILE
  1566 ;;  ap              2  110[BANK0 ] PTR void [1]
  1567 ;;		 -> ?_sprintf(2), 
  1568 ;;  ret             2    0        int 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  2  102[BANK0 ] int 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1578 ;;      Params:         0       8       0       0       0       0       0       0       0
  1579 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1581 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1582 ;;Total ram usage:       16 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; Hardware stack levels required when called: 7
  1585 ;; This function calls:
  1586 ;;		_vfprintf
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text1
  1593  003A26                     __ptext1:
  1594                           	callstack 0
  1595  003A26                     _sprintf:
  1596                           	callstack 23
  1597  003A26  0ECA               	movlw	low (?_sprintf+4)
  1598  003A28  0100               	movlb	0	; () banked
  1599  003A2A  6FCE               	movwf	sprintf@ap& (0+255),b
  1600  003A2C  0E00               	movlw	high (?_sprintf+4)
  1601  003A2E  6FCF               	movwf	(sprintf@ap+1)& (0+255),b
  1602  003A30  C0C6  F0D0         	movff	sprintf@s,sprintf@f
  1603  003A34  C0C7  F0D1         	movff	sprintf@s+1,sprintf@f+1
  1604  003A38                     
  1605                           ; BSR set to: 0
  1606  003A38  0E00               	movlw	0
  1607  003A3A  6FD3               	movwf	(sprintf@f+3)& (0+255),b
  1608  003A3C  0E00               	movlw	0
  1609  003A3E  6FD2               	movwf	(sprintf@f+2)& (0+255),b
  1610  003A40                     
  1611                           ; BSR set to: 0
  1612  003A40  0E00               	movlw	0
  1613  003A42  6FD5               	movwf	(sprintf@f+5)& (0+255),b
  1614  003A44  0E00               	movlw	0
  1615  003A46  6FD4               	movwf	(sprintf@f+4)& (0+255),b
  1616  003A48                     
  1617                           ; BSR set to: 0
  1618  003A48  0ED0               	movlw	low sprintf@f
  1619  003A4A  6FBE               	movwf	vfprintf@fp& (0+255),b
  1620  003A4C  0E00               	movlw	high sprintf@f
  1621  003A4E  6FBF               	movwf	(vfprintf@fp+1)& (0+255),b
  1622  003A50  C0C8  F0C0         	movff	sprintf@fmt,vfprintf@fmt
  1623  003A54  C0C9  F0C1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1624  003A58  0ECE               	movlw	low sprintf@ap
  1625  003A5A  6FC2               	movwf	vfprintf@ap& (0+255),b
  1626  003A5C  0E00               	movlw	high sprintf@ap
  1627  003A5E  6FC3               	movwf	(vfprintf@ap+1)& (0+255),b
  1628  003A60  EC55  F01C         	call	_vfprintf	;wreg free
  1629  003A64  0100               	movlb	0	; () banked
  1630  003A66  51D2               	movf	(sprintf@f+2)& (0+255),w,b
  1631  003A68  25C6               	addwf	sprintf@s& (0+255),w,b
  1632  003A6A  6ED9               	movwf	fsr2l,c
  1633  003A6C  51D3               	movf	(sprintf@f+3)& (0+255),w,b
  1634  003A6E  21C7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1635  003A70  6EDA               	movwf	fsr2h,c
  1636  003A72  0E00               	movlw	0
  1637  003A74  6EDF               	movwf	indf2,c
  1638  003A76                     
  1639                           ; BSR set to: 0
  1640  003A76  0012               	return		;funcret
  1641  003A78                     __end_of_sprintf:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function _vfprintf *****************
  1645 ;; Defined at:
  1646 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  fp              2   94[BANK0 ] PTR struct _IO_FILE
  1649 ;;		 -> sprintf@f(6), 
  1650 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  1651 ;;		 -> STR_7(6), STR_6(8), STR_5(6), STR_4(8), 
  1652 ;;		 -> STR_3(6), STR_2(8), 
  1653 ;;  ap              2   98[BANK0 ] PTR PTR void 
  1654 ;;		 -> sprintf@ap(2), 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  cfmt            2  100[BANK0 ] PTR unsigned char 
  1657 ;;		 -> STR_7(6), STR_6(8), STR_5(6), STR_4(8), 
  1658 ;;		 -> STR_3(6), STR_2(8), 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2   94[BANK0 ] int 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         0       6       0       0       0       0       0       0       0
  1669 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1672 ;;Total ram usage:        8 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 6
  1675 ;; This function calls:
  1676 ;;		_vfpfcnvrt
  1677 ;; This function is called by:
  1678 ;;		_sprintf
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text2
  1683  0038AA                     __ptext2:
  1684                           	callstack 0
  1685  0038AA                     _vfprintf:
  1686                           	callstack 23
  1687  0038AA                     
  1688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1689  0038AA  C0C0  F0C4         	movff	vfprintf@fmt,vfprintf@cfmt
  1690  0038AE  C0C1  F0C5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1691  0038B2                     
  1692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1693  0038B2  0E00               	movlw	0
  1694  0038B4  0100               	movlb	0	; () banked
  1695  0038B6  6FF3               	movwf	(_nout+1)& (0+255),b
  1696  0038B8  0E00               	movlw	0
  1697  0038BA  6FF2               	movwf	_nout& (0+255),b
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1700  0038BC  EF73  F01C         	goto	l4235
  1701  0038C0                     l4233:
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1705  0038C0  C0BE  F0A6         	movff	vfprintf@fp,vfpfcnvrt@fp
  1706  0038C4  C0BF  F0A7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1707  0038C8  0EC4               	movlw	low vfprintf@cfmt
  1708  0038CA  6FA8               	movwf	vfpfcnvrt@fmt& (0+255),b
  1709  0038CC  0E00               	movlw	high vfprintf@cfmt
  1710  0038CE  6FA9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1711  0038D0  C0C2  F0AA         	movff	vfprintf@ap,vfpfcnvrt@ap
  1712  0038D4  C0C3  F0AB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1713  0038D8  EC45  F00A         	call	_vfpfcnvrt	;wreg free
  1714  0038DC  0100               	movlb	0	; () banked
  1715  0038DE  51A6               	movf	?_vfpfcnvrt& (0+255),w,b
  1716  0038E0  27F2               	addwf	_nout& (0+255),f,b
  1717  0038E2  51A7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1718  0038E4  23F3               	addwfc	(_nout+1)& (0+255),f,b
  1719  0038E6                     l4235:
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1723  0038E6  C0C4  FFF6         	movff	vfprintf@cfmt,tblptrl
  1724  0038EA  C0C5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1725  0038EE                     	if	0	;tblptru may be non-zero
  1726  0038EE                     	endif
  1727  0038EE                     	if	0	;tblptru may be non-zero
  1728  0038EE                     	endif
  1729  0038EE  0008               	tblrd		*
  1730  0038F0  50F5               	movf	tablat,w,c
  1731  0038F2  0900               	iorlw	0
  1732  0038F4  A4D8               	btfss	status,2,c
  1733  0038F6  EF7F  F01C         	goto	u5051
  1734  0038FA  EF81  F01C         	goto	u5050
  1735  0038FE                     u5051:
  1736  0038FE  EF60  F01C         	goto	l4233
  1737  003902                     u5050:
  1738  003902                     
  1739                           ; BSR set to: 0
  1740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1741  003902  C0F2  F0BE         	movff	_nout,?_vfprintf
  1742  003906  C0F3  F0BF         	movff	_nout+1,?_vfprintf+1
  1743  00390A                     
  1744                           ; BSR set to: 0
  1745  00390A  0012               	return		;funcret
  1746  00390C                     __end_of_vfprintf:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _vfpfcnvrt *****************
  1750 ;; Defined at:
  1751 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  1754 ;;		 -> sprintf@f(6), 
  1755 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  1756 ;;		 -> vfprintf@cfmt(2), 
  1757 ;;  ap              2   74[BANK0 ] PTR PTR void 
  1758 ;;		 -> sprintf@ap(2), 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  llu             8    0        unsigned long long 
  1761 ;;  ll              8    0        long long 
  1762 ;;  f               4   86[BANK0 ] long long 
  1763 ;;  ct              3   90[BANK0 ] unsigned char [3]
  1764 ;;  vp              3    0        PTR void 
  1765 ;;  cp              3    0        PTR unsigned char 
  1766 ;;  done            2   80[BANK0 ] int 
  1767 ;;  i               2    0        int 
  1768 ;;  c               1   93[BANK0 ] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  2   70[BANK0 ] int 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         0       6       0       0       0       0       0       0       0
  1779 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1780 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1781 ;;      Totals:         0      24       0       0       0       0       0       0       0
  1782 ;;Total ram usage:       24 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 5
  1785 ;; This function calls:
  1786 ;;		_atoi
  1787 ;;		_efgtoa
  1788 ;;		_fputc
  1789 ;;		_isdigit
  1790 ;;		_isupper
  1791 ;;		_strncmp
  1792 ;;		_tolower
  1793 ;; This function is called by:
  1794 ;;		_vfprintf
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text3
  1799  00148A                     __ptext3:
  1800                           	callstack 0
  1801  00148A                     _vfpfcnvrt:
  1802                           	callstack 23
  1803  00148A                     
  1804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1805  00148A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1806  00148E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1807  001492  CFDE FFF6          	movff	postinc2,tblptrl
  1808  001496  CFDD FFF7          	movff	postdec2,tblptrh
  1809  00149A                     	if	0	;tblptru may be non-zero
  1810  00149A                     	endif
  1811  00149A                     	if	0	;tblptru may be non-zero
  1812  00149A                     	endif
  1813  00149A  0008               	tblrd		*
  1814  00149C  50F5               	movf	tablat,w,c
  1815  00149E  0A25               	xorlw	37
  1816  0014A0  A4D8               	btfss	status,2,c
  1817  0014A2  EF55  F00A         	goto	u4761
  1818  0014A6  EF57  F00A         	goto	u4760
  1819  0014AA                     u4761:
  1820  0014AA  EFBD  F00C         	goto	l4141
  1821  0014AE                     u4760:
  1822  0014AE                     
  1823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1824  0014AE  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1825  0014B2  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1826  0014B6  2ADE               	incf	postinc2,f,c
  1827  0014B8  0E00               	movlw	0
  1828  0014BA  22DD               	addwfc	postdec2,f,c
  1829  0014BC                     
  1830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1831  0014BC  0E00               	movlw	0
  1832  0014BE  0100               	movlb	0	; () banked
  1833  0014C0  6FF5               	movwf	(_width+1)& (0+255),b
  1834  0014C2  0E00               	movlw	0
  1835  0014C4  6FF4               	movwf	_width& (0+255),b
  1836  0014C6  C0F4  F0F8         	movff	_width,_flags
  1837  0014CA  C0F5  F0F9         	movff	_width+1,_flags+1
  1838  0014CE                     
  1839                           ; BSR set to: 0
  1840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1841  0014CE  69F6               	setf	_prec& (0+255),b
  1842  0014D0  69F7               	setf	(_prec+1)& (0+255),b
  1843  0014D2                     
  1844                           ; BSR set to: 0
  1845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1846  0014D2  0E00               	movlw	0
  1847  0014D4  6FB1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1848  0014D6  0E00               	movlw	0
  1849  0014D8  6FB0               	movwf	vfpfcnvrt@done& (0+255),b
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1852  0014DA  EFB5  F00A         	goto	l4063
  1853  0014DE                     l4037:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1857  0014DE  81F8               	bsf	_flags& (0+255),0,b
  1858  0014E0                     l4039:
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1862  0014E0  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1863  0014E4  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1864  0014E8  2ADE               	incf	postinc2,f,c
  1865  0014EA  0E00               	movlw	0
  1866  0014EC  22DD               	addwfc	postdec2,f,c
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1869  0014EE  EFB5  F00A         	goto	l4063
  1870  0014F2                     l4041:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1874  0014F2  83F8               	bsf	_flags& (0+255),1,b
  1875  0014F4  EF70  F00A         	goto	l4039
  1876  0014F8                     l4045:
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1880  0014F8  85F8               	bsf	_flags& (0+255),2,b
  1881  0014FA  EF70  F00A         	goto	l4039
  1882  0014FE                     l4049:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1886  0014FE  87F8               	bsf	_flags& (0+255),3,b
  1887  001500  EF70  F00A         	goto	l4039
  1888  001504                     l4053:
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1892  001504  89F8               	bsf	_flags& (0+255),4,b
  1893  001506  EF70  F00A         	goto	l4039
  1894  00150A                     l4057:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1898  00150A  0E00               	movlw	0
  1899  00150C  6FB1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1900  00150E  0E01               	movlw	1
  1901  001510  6FB0               	movwf	vfpfcnvrt@done& (0+255),b
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1904  001512  EFB5  F00A         	goto	l4063
  1905  001516                     l4061:
  1906                           
  1907                           ; BSR set to: 0
  1908  001516  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1909  00151A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1910  00151E  CFDE FFF6          	movff	postinc2,tblptrl
  1911  001522  CFDD FFF7          	movff	postdec2,tblptrh
  1912  001526                     	if	0	;tblptru may be non-zero
  1913  001526                     	endif
  1914  001526                     	if	0	;tblptru may be non-zero
  1915  001526                     	endif
  1916  001526  0008               	tblrd		*
  1917  001528  50F5               	movf	tablat,w,c
  1918  00152A  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  1919  00152C  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1920                           
  1921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1922                           ; Switch size 1, requested type "simple"
  1923                           ; Number of cases is 1, Range of values is 0 to 0
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte            4     3 (average)
  1927                           ;	Chosen strategy is simple_byte
  1928  00152E  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1929  001530  0A00               	xorlw	0	; case 0
  1930  001532  B4D8               	btfsc	status,2,c
  1931  001534  EF9E  F00A         	goto	l4469
  1932  001538  EF85  F00A         	goto	l4057
  1933  00153C                     l4469:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ; Switch size 1, requested type "simple"
  1937                           ; Number of cases is 5, Range of values is 32 to 48
  1938                           ; switch strategies available:
  1939                           ; Name         Instructions Cycles
  1940                           ; simple_byte           16     9 (average)
  1941                           ;	Chosen strategy is simple_byte
  1942  00153C  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  1943  00153E  0A20               	xorlw	32	; case 32
  1944  001540  B4D8               	btfsc	status,2,c
  1945  001542  EF7F  F00A         	goto	l4049
  1946  001546  0A03               	xorlw	3	; case 35
  1947  001548  B4D8               	btfsc	status,2,c
  1948  00154A  EF82  F00A         	goto	l4053
  1949  00154E  0A08               	xorlw	8	; case 43
  1950  001550  B4D8               	btfsc	status,2,c
  1951  001552  EF7C  F00A         	goto	l4045
  1952  001556  0A06               	xorlw	6	; case 45
  1953  001558  B4D8               	btfsc	status,2,c
  1954  00155A  EF6F  F00A         	goto	l4037
  1955  00155E  0A1D               	xorlw	29	; case 48
  1956  001560  B4D8               	btfsc	status,2,c
  1957  001562  EF79  F00A         	goto	l4041
  1958  001566  EF85  F00A         	goto	l4057
  1959  00156A                     l4063:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1963  00156A  51B0               	movf	vfpfcnvrt@done& (0+255),w,b
  1964  00156C  11B1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1965  00156E  B4D8               	btfsc	status,2,c
  1966  001570  EFBC  F00A         	goto	u4771
  1967  001574  EFBE  F00A         	goto	u4770
  1968  001578                     u4771:
  1969  001578  EF8B  F00A         	goto	l4061
  1970  00157C                     u4770:
  1971  00157C                     
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1974  00157C  A1F8               	btfss	_flags& (0+255),0,b
  1975  00157E  EFC3  F00A         	goto	u4781
  1976  001582  EFC5  F00A         	goto	u4780
  1977  001586                     u4781:
  1978  001586  EFC6  F00A         	goto	l4067
  1979  00158A                     u4780:
  1980  00158A                     
  1981                           ; BSR set to: 0
  1982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1983  00158A  93F8               	bcf	_flags& (0+255),1,b
  1984  00158C                     l4067:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1988  00158C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1989  001590  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1990  001594  CFDE FFF6          	movff	postinc2,tblptrl
  1991  001598  CFDD FFF7          	movff	postdec2,tblptrh
  1992  00159C                     	if	0	;tblptru may be non-zero
  1993  00159C                     	endif
  1994  00159C                     	if	0	;tblptru may be non-zero
  1995  00159C                     	endif
  1996  00159C  0008               	tblrd		*
  1997  00159E  50F5               	movf	tablat,w,c
  1998  0015A0  0A2E               	xorlw	46
  1999  0015A2  A4D8               	btfss	status,2,c
  2000  0015A4  EFD6  F00A         	goto	u4791
  2001  0015A8  EFD8  F00A         	goto	u4790
  2002  0015AC                     u4791:
  2003  0015AC  EF56  F00B         	goto	l4087
  2004  0015B0                     u4790:
  2005  0015B0                     
  2006                           ; BSR set to: 0
  2007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2008  0015B0  0E00               	movlw	0
  2009  0015B2  6FF7               	movwf	(_prec+1)& (0+255),b
  2010  0015B4  0E00               	movlw	0
  2011  0015B6  6FF6               	movwf	_prec& (0+255),b
  2012  0015B8                     
  2013                           ; BSR set to: 0
  2014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2015  0015B8  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2016  0015BC  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2017  0015C0  2ADE               	incf	postinc2,f,c
  2018  0015C2  0E00               	movlw	0
  2019  0015C4  22DD               	addwfc	postdec2,f,c
  2020  0015C6                     
  2021                           ; BSR set to: 0
  2022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2023  0015C6  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2024  0015CA  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2025  0015CE  CFDE FFF6          	movff	postinc2,tblptrl
  2026  0015D2  CFDD FFF7          	movff	postdec2,tblptrh
  2027  0015D6                     	if	0	;tblptru may be non-zero
  2028  0015D6                     	endif
  2029  0015D6                     	if	0	;tblptru may be non-zero
  2030  0015D6                     	endif
  2031  0015D6  0008               	tblrd		*
  2032  0015D8  50F5               	movf	tablat,w,c
  2033  0015DA  0A2A               	xorlw	42
  2034  0015DC  A4D8               	btfss	status,2,c
  2035  0015DE  EFF3  F00A         	goto	u4801
  2036  0015E2  EFF5  F00A         	goto	u4800
  2037  0015E6                     u4801:
  2038  0015E6  EF12  F00B         	goto	l4077
  2039  0015EA                     u4800:
  2040  0015EA                     
  2041                           ; BSR set to: 0
  2042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2043  0015EA  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2044  0015EE  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2045  0015F2  2ADE               	incf	postinc2,f,c
  2046  0015F4  0E00               	movlw	0
  2047  0015F6  22DD               	addwfc	postdec2,f,c
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2050  0015F8  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2051  0015FC  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2052  001600  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  2053  001604  0E02               	movlw	2
  2054  001606  26DE               	addwf	postinc2,f,c
  2055  001608  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  2056  00160C  0E00               	movlw	0
  2057  00160E  22DD               	addwfc	postdec2,f,c
  2058  001610  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2059  001614  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2060  001618  CFDE F0F6          	movff	postinc2,_prec
  2061  00161C  CFDD F0F7          	movff	postdec2,_prec+1
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2064  001620  EF56  F00B         	goto	l4087
  2065  001624                     l4077:
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2069  001624  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2070  001628  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2071  00162C  CFDE F008          	movff	postinc2,atoi@s
  2072  001630  CFDD F009          	movff	postdec2,atoi@s+1
  2073  001634  EC14  F017         	call	_atoi	;wreg free
  2074  001638  C008  F0F6         	movff	?_atoi,_prec
  2075  00163C  C009  F0F7         	movff	?_atoi+1,_prec+1
  2076                           
  2077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2078  001640  EF29  F00B         	goto	l4081
  2079  001644                     l4079:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2083  001644  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2084  001648  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2085  00164C  2ADE               	incf	postinc2,f,c
  2086  00164E  0E00               	movlw	0
  2087  001650  22DD               	addwfc	postdec2,f,c
  2088  001652                     l4081:
  2089  001652  0ED0               	movlw	208
  2090  001654  0100               	movlb	0	; () banked
  2091  001656  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  2092  001658  0EFF               	movlw	255
  2093  00165A  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2094  00165C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2095  001660  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2096  001664  CFDE FFF6          	movff	postinc2,tblptrl
  2097  001668  CFDD FFF7          	movff	postdec2,tblptrh
  2098  00166C                     	if	0	;tblptru may be non-zero
  2099  00166C                     	endif
  2100  00166C                     	if	0	;tblptru may be non-zero
  2101  00166C                     	endif
  2102  00166C  0008               	tblrd		*
  2103  00166E  50F5               	movf	tablat,w,c
  2104  001670  6FAE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2105  001672  6BAF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2106  001674  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  2107  001676  27AE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2108  001678  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2109  00167A  23AF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2110  00167C  51AF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2111  00167E  E10A               	bnz	u4810
  2112  001680  0E0A               	movlw	10
  2113  001682  5DAE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2114  001684  A0D8               	btfss	status,0,c
  2115  001686  EF47  F00B         	goto	u4811
  2116  00168A  EF4A  F00B         	goto	u4810
  2117  00168E                     u4811:
  2118  00168E  0E01               	movlw	1
  2119  001690  EF4B  F00B         	goto	u4820
  2120  001694                     u4810:
  2121  001694  0E00               	movlw	0
  2122  001696                     u4820:
  2123  001696  6FB2               	movwf	_vfpfcnvrt$1013& (0+255),b
  2124  001698  6BB3               	clrf	(_vfpfcnvrt$1013+1)& (0+255),b
  2125  00169A                     
  2126                           ; BSR set to: 0
  2127  00169A  51B2               	movf	_vfpfcnvrt$1013& (0+255),w,b
  2128  00169C  11B3               	iorwf	(_vfpfcnvrt$1013+1)& (0+255),w,b
  2129  00169E  A4D8               	btfss	status,2,c
  2130  0016A0  EF54  F00B         	goto	u4831
  2131  0016A4  EF56  F00B         	goto	u4830
  2132  0016A8                     u4831:
  2133  0016A8  EF22  F00B         	goto	l4079
  2134  0016AC                     u4830:
  2135  0016AC                     l4087:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2139  0016AC  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2140  0016B0  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2141  0016B4  CFDE FFF6          	movff	postinc2,tblptrl
  2142  0016B8  CFDD FFF7          	movff	postdec2,tblptrh
  2143  0016BC                     	if	0	;tblptru may be non-zero
  2144  0016BC                     	endif
  2145  0016BC                     	if	0	;tblptru may be non-zero
  2146  0016BC                     	endif
  2147  0016BC  0008               	tblrd		*
  2148  0016BE  50F5               	movf	tablat,w,c
  2149  0016C0  6E07               	movwf	tolower@c^0,c
  2150  0016C2  6A08               	clrf	(tolower@c+1)^0,c
  2151  0016C4  EC86  F01C         	call	_tolower	;wreg free
  2152  0016C8  5007               	movf	?_tolower^0,w,c
  2153  0016CA  0100               	movlb	0	; () banked
  2154  0016CC  6FBA               	movwf	vfpfcnvrt@ct& (0+255),b
  2155  0016CE                     
  2156                           ; BSR set to: 0
  2157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2158  0016CE  51BA               	movf	vfpfcnvrt@ct& (0+255),w,b
  2159  0016D0  B4D8               	btfsc	status,2,c
  2160  0016D2  EF6D  F00B         	goto	u4841
  2161  0016D6  EF6F  F00B         	goto	u4840
  2162  0016DA                     u4841:
  2163  0016DA  EFA9  F00B         	goto	l4097
  2164  0016DE                     u4840:
  2165  0016DE                     
  2166                           ; BSR set to: 0
  2167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2168  0016DE  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2169  0016E2  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2170  0016E6  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  2171  0016EA  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  2172  0016EE  0E01               	movlw	1
  2173  0016F0  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  2174  0016F2  0E00               	movlw	0
  2175  0016F4  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2176  0016F6  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2177  0016FA  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2178  0016FE                     	if	0	;tblptru may be non-zero
  2179  0016FE                     	endif
  2180  0016FE                     	if	0	;tblptru may be non-zero
  2181  0016FE                     	endif
  2182  0016FE  0008               	tblrd		*
  2183  001700  50F5               	movf	tablat,w,c
  2184  001702  6E07               	movwf	tolower@c^0,c
  2185  001704  6A08               	clrf	(tolower@c+1)^0,c
  2186  001706  EC86  F01C         	call	_tolower	;wreg free
  2187  00170A  5007               	movf	?_tolower^0,w,c
  2188  00170C  0100               	movlb	0	; () banked
  2189  00170E  6FBB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2190  001710                     
  2191                           ; BSR set to: 0
  2192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2193  001710  51BB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2194  001712  B4D8               	btfsc	status,2,c
  2195  001714  EF8E  F00B         	goto	u4851
  2196  001718  EF90  F00B         	goto	u4850
  2197  00171C                     u4851:
  2198  00171C  EFA9  F00B         	goto	l4097
  2199  001720                     u4850:
  2200  001720                     
  2201                           ; BSR set to: 0
  2202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2203  001720  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2204  001724  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2205  001728  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  2206  00172C  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  2207  001730  0E02               	movlw	2
  2208  001732  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  2209  001734  0E00               	movlw	0
  2210  001736  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2211  001738  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2212  00173C  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2213  001740                     	if	0	;tblptru may be non-zero
  2214  001740                     	endif
  2215  001740                     	if	0	;tblptru may be non-zero
  2216  001740                     	endif
  2217  001740  0008               	tblrd		*
  2218  001742  50F5               	movf	tablat,w,c
  2219  001744  6E07               	movwf	tolower@c^0,c
  2220  001746  6A08               	clrf	(tolower@c+1)^0,c
  2221  001748  EC86  F01C         	call	_tolower	;wreg free
  2222  00174C  5007               	movf	?_tolower^0,w,c
  2223  00174E  0100               	movlb	0	; () banked
  2224  001750  6FBC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2225  001752                     l4097:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2229  001752  0E66               	movlw	102
  2230  001754  19BA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2231  001756  A4D8               	btfss	status,2,c
  2232  001758  EFB0  F00B         	goto	u4861
  2233  00175C  EFB2  F00B         	goto	u4860
  2234  001760                     u4861:
  2235  001760  EFF2  F00B         	goto	l4109
  2236  001764                     u4860:
  2237  001764                     
  2238                           ; BSR set to: 0
  2239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2240  001764  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2241  001768  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2242  00176C  CFDE FFF6          	movff	postinc2,tblptrl
  2243  001770  CFDD FFF7          	movff	postdec2,tblptrh
  2244  001774                     	if	0	;tblptru may be non-zero
  2245  001774                     	endif
  2246  001774                     	if	0	;tblptru may be non-zero
  2247  001774                     	endif
  2248  001774  0008               	tblrd		*
  2249  001776  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  2250  00177A                     
  2251                           ; BSR set to: 0
  2252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2253  00177A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2254  00177E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2255  001782  2ADE               	incf	postinc2,f,c
  2256  001784  0E00               	movlw	0
  2257  001786  22DD               	addwfc	postdec2,f,c
  2258  001788                     
  2259                           ; BSR set to: 0
  2260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2261  001788  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2262  00178C  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2263  001790  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  2264  001794  0E04               	movlw	4
  2265  001796  26DE               	addwf	postinc2,f,c
  2266  001798  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  2267  00179C  0E00               	movlw	0
  2268  00179E  22DD               	addwfc	postdec2,f,c
  2269  0017A0  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2270  0017A4  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2271  0017A8  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f
  2272  0017AC  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+1
  2273  0017B0  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+2
  2274  0017B4  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+3
  2275  0017B8                     l4105:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2279  0017B8  C0A6  F062         	movff	vfpfcnvrt@fp,efgtoa@fp
  2280  0017BC  C0A7  F063         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2281  0017C0  C0B6  F064         	movff	vfpfcnvrt@f,efgtoa@f
  2282  0017C4  C0B7  F065         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2283  0017C8  C0B8  F066         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2284  0017CC  C0B9  F067         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2285  0017D0  C0BD  F068         	movff	vfpfcnvrt@c,efgtoa@c
  2286  0017D4  EC19  F004         	call	_efgtoa	;wreg free
  2287  0017D8  C062  F0A6         	movff	?_efgtoa,?_vfpfcnvrt
  2288  0017DC  C063  F0A7         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2289  0017E0  EFD8  F00C         	goto	l1021
  2290  0017E4                     l4109:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2294  0017E4  0EBA               	movlw	low vfpfcnvrt@ct
  2295  0017E6  6E01               	movwf	strncmp@_l^0,c
  2296  0017E8  0E00               	movlw	high vfpfcnvrt@ct
  2297  0017EA  6E02               	movwf	(strncmp@_l+1)^0,c
  2298  0017EC  0E2D               	movlw	low STR_16
  2299  0017EE  6E03               	movwf	strncmp@_r^0,c
  2300  0017F0  0E08               	movlw	high STR_16
  2301  0017F2  6E04               	movwf	(strncmp@_r+1)^0,c
  2302  0017F4  0E00               	movlw	0
  2303  0017F6  6E06               	movwf	(strncmp@n+1)^0,c
  2304  0017F8  0E02               	movlw	2
  2305  0017FA  6E05               	movwf	strncmp@n^0,c
  2306  0017FC  ECE0  F019         	call	_strncmp	;wreg free
  2307  001800  5001               	movf	?_strncmp^0,w,c
  2308  001802  1002               	iorwf	(?_strncmp+1)^0,w,c
  2309  001804  A4D8               	btfss	status,2,c
  2310  001806  EF07  F00C         	goto	u4871
  2311  00180A  EF09  F00C         	goto	u4870
  2312  00180E                     u4871:
  2313  00180E  EF85  F00C         	goto	l4125
  2314  001812                     u4870:
  2315  001812                     
  2316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2317  001812  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2318  001816  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2319  00181A  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  2320  00181E  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  2321  001822  0E01               	movlw	1
  2322  001824  0100               	movlb	0	; () banked
  2323  001826  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  2324  001828  0E00               	movlw	0
  2325  00182A  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2326  00182C  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2327  001830  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2328  001834                     	if	0	;tblptru may be non-zero
  2329  001834                     	endif
  2330  001834                     	if	0	;tblptru may be non-zero
  2331  001834                     	endif
  2332  001834  0008               	tblrd		*
  2333  001836  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  2334  00183A  0EBF               	movlw	191
  2335  00183C  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  2336  00183E  0EFF               	movlw	255
  2337  001840  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2338  001842  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2339  001846  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2340  00184A  CFDE FFF6          	movff	postinc2,tblptrl
  2341  00184E  CFDD FFF7          	movff	postdec2,tblptrh
  2342  001852                     	if	0	;tblptru may be non-zero
  2343  001852                     	endif
  2344  001852                     	if	0	;tblptru may be non-zero
  2345  001852                     	endif
  2346  001852  0008               	tblrd		*
  2347  001854  50F5               	movf	tablat,w,c
  2348  001856  6FAE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2349  001858  6BAF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2350  00185A  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  2351  00185C  27AE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2352  00185E  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2353  001860  23AF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2354  001862  51AF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2355  001864  E10A               	bnz	u4880
  2356  001866  0E1A               	movlw	26
  2357  001868  5DAE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2358  00186A  A0D8               	btfss	status,0,c
  2359  00186C  EF3A  F00C         	goto	u4881
  2360  001870  EF3D  F00C         	goto	u4880
  2361  001874                     u4881:
  2362  001874  0E01               	movlw	1
  2363  001876  EF3E  F00C         	goto	u4890
  2364  00187A                     u4880:
  2365  00187A  0E00               	movlw	0
  2366  00187C                     u4890:
  2367  00187C  6FB4               	movwf	_vfpfcnvrt$1017& (0+255),b
  2368  00187E  6BB5               	clrf	(_vfpfcnvrt$1017+1)& (0+255),b
  2369  001880                     
  2370                           ; BSR set to: 0
  2371  001880  51B4               	movf	_vfpfcnvrt$1017& (0+255),w,b
  2372  001882  11B5               	iorwf	(_vfpfcnvrt$1017+1)& (0+255),w,b
  2373  001884  B4D8               	btfsc	status,2,c
  2374  001886  EF47  F00C         	goto	u4901
  2375  00188A  EF49  F00C         	goto	u4900
  2376  00188E                     u4901:
  2377  00188E  EF63  F00C         	goto	l4119
  2378  001892                     u4900:
  2379  001892                     
  2380                           ; BSR set to: 0
  2381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2382  001892  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2383  001896  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2384  00189A  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  2385  00189E  0E04               	movlw	4
  2386  0018A0  26DE               	addwf	postinc2,f,c
  2387  0018A2  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  2388  0018A6  0E00               	movlw	0
  2389  0018A8  22DD               	addwfc	postdec2,f,c
  2390  0018AA  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2391  0018AE  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2392  0018B2  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f
  2393  0018B6  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+1
  2394  0018BA  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+2
  2395  0018BE  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+3
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2398  0018C2  EF7B  F00C         	goto	l1028
  2399  0018C6                     l4119:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2403  0018C6  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2404  0018CA  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2405  0018CE  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  2406  0018D2  0E04               	movlw	4
  2407  0018D4  26DE               	addwf	postinc2,f,c
  2408  0018D6  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  2409  0018DA  0E00               	movlw	0
  2410  0018DC  22DD               	addwfc	postdec2,f,c
  2411  0018DE  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2412  0018E2  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2413  0018E6  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f
  2414  0018EA  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+1
  2415  0018EE  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+2
  2416  0018F2  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+3
  2417  0018F6                     l1028:
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2421  0018F6  0E02               	movlw	2
  2422  0018F8  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2423  0018FC  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2424  001900  26DE               	addwf	postinc2,f,c
  2425  001902  0E00               	movlw	0
  2426  001904  22DD               	addwfc	postdec2,f,c
  2427  001906  EFDC  F00B         	goto	l4105
  2428  00190A                     l4125:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2431  00190A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432  00190E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  001912  CFDE FFF6          	movff	postinc2,tblptrl
  2434  001916  CFDD FFF7          	movff	postdec2,tblptrh
  2435  00191A                     	if	0	;tblptru may be non-zero
  2436  00191A                     	endif
  2437  00191A                     	if	0	;tblptru may be non-zero
  2438  00191A                     	endif
  2439  00191A  0008               	tblrd		*
  2440  00191C  50F5               	movf	tablat,w,c
  2441  00191E  0A25               	xorlw	37
  2442  001920  A4D8               	btfss	status,2,c
  2443  001922  EF95  F00C         	goto	u4911
  2444  001926  EF97  F00C         	goto	u4910
  2445  00192A                     u4911:
  2446  00192A  EFAF  F00C         	goto	l4135
  2447  00192E                     u4910:
  2448  00192E                     
  2449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2450  00192E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2451  001932  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2452  001936  2ADE               	incf	postinc2,f,c
  2453  001938  0E00               	movlw	0
  2454  00193A  22DD               	addwfc	postdec2,f,c
  2455  00193C                     
  2456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2457  00193C  0E00               	movlw	0
  2458  00193E  6E02               	movwf	(fputc@c+1)^0,c
  2459  001940  0E25               	movlw	37
  2460  001942  6E01               	movwf	fputc@c^0,c
  2461  001944  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2462  001948  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2463  00194C  EC4B  F01A         	call	_fputc	;wreg free
  2464  001950                     l4131:
  2465                           
  2466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2467  001950  0E00               	movlw	0
  2468  001952  0100               	movlb	0	; () banked
  2469  001954  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2470  001956  0E01               	movlw	1
  2471  001958  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  2472  00195A  EFD8  F00C         	goto	l1021
  2473  00195E                     l4135:
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2476  00195E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2477  001962  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2478  001966  2ADE               	incf	postinc2,f,c
  2479  001968  0E00               	movlw	0
  2480  00196A  22DD               	addwfc	postdec2,f,c
  2481  00196C                     
  2482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2483  00196C  0E00               	movlw	0
  2484  00196E  0100               	movlb	0	; () banked
  2485  001970  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2486  001972  0E00               	movlw	0
  2487  001974  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  2488  001976  EFD8  F00C         	goto	l1021
  2489  00197A                     l4141:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2492  00197A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493  00197E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  001982  CFDE FFF6          	movff	postinc2,tblptrl
  2495  001986  CFDD FFF7          	movff	postdec2,tblptrh
  2496  00198A                     	if	0	;tblptru may be non-zero
  2497  00198A                     	endif
  2498  00198A                     	if	0	;tblptru may be non-zero
  2499  00198A                     	endif
  2500  00198A  0008               	tblrd		*
  2501  00198C  50F5               	movf	tablat,w,c
  2502  00198E  6E01               	movwf	fputc@c^0,c
  2503  001990  6A02               	clrf	(fputc@c+1)^0,c
  2504  001992  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2505  001996  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2506  00199A  EC4B  F01A         	call	_fputc	;wreg free
  2507  00199E                     
  2508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2509  00199E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2510  0019A2  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2511  0019A6  2ADE               	incf	postinc2,f,c
  2512  0019A8  0E00               	movlw	0
  2513  0019AA  22DD               	addwfc	postdec2,f,c
  2514  0019AC  EFA8  F00C         	goto	l4131
  2515  0019B0                     l1021:
  2516  0019B0  0012               	return		;funcret
  2517  0019B2                     __end_of_vfpfcnvrt:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _strncmp *****************
  2521 ;; Defined at:
  2522 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2525 ;;		 -> vfpfcnvrt@ct(3), 
  2526 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2527 ;;		 -> STR_18(3), 
  2528 ;;  n               2    4[COMRAM] unsigned int 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2531 ;;		 -> STR_18(3), 
  2532 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2533 ;;		 -> vfpfcnvrt@ct(3), 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  2    0[COMRAM] int 
  2536 ;; Registers used:
  2537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2543 ;;      Params:         6       0       0       0       0       0       0       0       0
  2544 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2545 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2546 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2547 ;;Total ram usage:       11 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_vfpfcnvrt
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text4
  2557  0033C0                     __ptext4:
  2558                           	callstack 0
  2559  0033C0                     _strncmp:
  2560                           	callstack 27
  2561  0033C0  C001  F008         	movff	strncmp@_l,strncmp@l
  2562  0033C4  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2563  0033C8  C003  F00A         	movff	strncmp@_r,strncmp@r
  2564  0033CC  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2565  0033D0  0605               	decf	strncmp@n^0,f,c
  2566  0033D2  A0D8               	btfss	status,0,c
  2567  0033D4  0606               	decf	(strncmp@n+1)^0,f,c
  2568  0033D6  2805               	incf	strncmp@n^0,w,c
  2569  0033D8  E106               	bnz	u4711
  2570  0033DA  2806               	incf	(strncmp@n+1)^0,w,c
  2571  0033DC  A4D8               	btfss	status,2,c
  2572  0033DE  EFF3  F019         	goto	u4711
  2573  0033E2  EFF5  F019         	goto	u4710
  2574  0033E6                     u4711:
  2575  0033E6  EF02  F01A         	goto	l3995
  2576  0033EA                     u4710:
  2577  0033EA  0E00               	movlw	0
  2578  0033EC  6E02               	movwf	(?_strncmp+1)^0,c
  2579  0033EE  0E00               	movlw	0
  2580  0033F0  6E01               	movwf	?_strncmp^0,c
  2581  0033F2  EF4A  F01A         	goto	l1149
  2582  0033F6                     l3993:
  2583  0033F6  4A08               	infsnz	strncmp@l^0,f,c
  2584  0033F8  2A09               	incf	(strncmp@l+1)^0,f,c
  2585  0033FA  4A0A               	infsnz	strncmp@r^0,f,c
  2586  0033FC  2A0B               	incf	(strncmp@r+1)^0,f,c
  2587  0033FE  0605               	decf	strncmp@n^0,f,c
  2588  003400  A0D8               	btfss	status,0,c
  2589  003402  0606               	decf	(strncmp@n+1)^0,f,c
  2590  003404                     l3995:
  2591  003404  C008  FFD9         	movff	strncmp@l,fsr2l
  2592  003408  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2593  00340C  50DF               	movf	indf2,w,c
  2594  00340E  B4D8               	btfsc	status,2,c
  2595  003410  EF0C  F01A         	goto	u4721
  2596  003414  EF0E  F01A         	goto	u4720
  2597  003418                     u4721:
  2598  003418  EF39  F01A         	goto	l4003
  2599  00341C                     u4720:
  2600  00341C  C00A  FFF6         	movff	strncmp@r,tblptrl
  2601  003420  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2602  003424                     	if	0	;tblptru may be non-zero
  2603  003424                     	endif
  2604  003424                     	if	0	;tblptru may be non-zero
  2605  003424                     	endif
  2606  003424  0008               	tblrd		*
  2607  003426  50F5               	movf	tablat,w,c
  2608  003428  0900               	iorlw	0
  2609  00342A  B4D8               	btfsc	status,2,c
  2610  00342C  EF1A  F01A         	goto	u4731
  2611  003430  EF1C  F01A         	goto	u4730
  2612  003434                     u4731:
  2613  003434  EF39  F01A         	goto	l4003
  2614  003438                     u4730:
  2615  003438  5005               	movf	strncmp@n^0,w,c
  2616  00343A  1006               	iorwf	(strncmp@n+1)^0,w,c
  2617  00343C  B4D8               	btfsc	status,2,c
  2618  00343E  EF23  F01A         	goto	u4741
  2619  003442  EF25  F01A         	goto	u4740
  2620  003446                     u4741:
  2621  003446  EF39  F01A         	goto	l4003
  2622  00344A                     u4740:
  2623  00344A  C008  FFD9         	movff	strncmp@l,fsr2l
  2624  00344E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2625  003452  50DF               	movf	indf2,w,c
  2626  003454  6E07               	movwf	??_strncmp^0,c
  2627  003456  C00A  FFF6         	movff	strncmp@r,tblptrl
  2628  00345A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2629  00345E                     	if	0	;tblptru may be non-zero
  2630  00345E                     	endif
  2631  00345E                     	if	0	;tblptru may be non-zero
  2632  00345E                     	endif
  2633  00345E  0008               	tblrd		*
  2634  003460  50F5               	movf	tablat,w,c
  2635  003462  1807               	xorwf	??_strncmp^0,w,c
  2636  003464  B4D8               	btfsc	status,2,c
  2637  003466  EF37  F01A         	goto	u4751
  2638  00346A  EF39  F01A         	goto	u4750
  2639  00346E                     u4751:
  2640  00346E  EFFB  F019         	goto	l3993
  2641  003472                     u4750:
  2642  003472                     l4003:
  2643  003472  C008  FFD9         	movff	strncmp@l,fsr2l
  2644  003476  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2645  00347A  50DF               	movf	indf2,w,c
  2646  00347C  6E07               	movwf	??_strncmp^0,c
  2647  00347E  C00A  FFF6         	movff	strncmp@r,tblptrl
  2648  003482  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2649  003486                     	if	0	;tblptru may be non-zero
  2650  003486                     	endif
  2651  003486                     	if	0	;tblptru may be non-zero
  2652  003486                     	endif
  2653  003486  0008               	tblrd		*
  2654  003488  50F5               	movf	tablat,w,c
  2655  00348A  5C07               	subwf	??_strncmp^0,w,c
  2656  00348C  6E01               	movwf	?_strncmp^0,c
  2657  00348E  6A02               	clrf	(?_strncmp+1)^0,c
  2658  003490  A0D8               	btfss	status,0,c
  2659  003492  0602               	decf	(?_strncmp+1)^0,f,c
  2660  003494                     l1149:
  2661  003494  0012               	return		;funcret
  2662  003496                     __end_of_strncmp:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _efgtoa *****************
  2666 ;; Defined at:
  2667 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2670 ;;		 -> sprintf@f(6), 
  2671 ;;  f               4    4[BANK0 ] PTR struct _IO_FILE
  2672 ;;  c               1    8[BANK0 ] unsigned char 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  u               4   66[BANK0 ] unsigned char 
  2675 ;;  g               4   58[BANK0 ] unsigned char 
  2676 ;;  l               4   52[BANK0 ] unsigned char 
  2677 ;;  h               4   48[BANK0 ] unsigned char 
  2678 ;;  ou              4   34[BANK0 ] unsigned char 
  2679 ;;  n               2   64[BANK0 ] int 
  2680 ;;  e               2   62[BANK0 ] int 
  2681 ;;  i               2   56[BANK0 ] int 
  2682 ;;  w               2   44[BANK0 ] int 
  2683 ;;  p               2   42[BANK0 ] int 
  2684 ;;  sign            2   40[BANK0 ] int 
  2685 ;;  d               2   38[BANK0 ] int 
  2686 ;;  m               2   32[BANK0 ] int 
  2687 ;;  ne              2   30[BANK0 ] int 
  2688 ;;  pp              2   28[BANK0 ] int 
  2689 ;;  t               2   26[BANK0 ] int 
  2690 ;;  mode            1   47[BANK0 ] unsigned char 
  2691 ;;  nmode           1   46[BANK0 ] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  2    2[BANK0 ] int 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2701 ;;      Params:         0       7       0       0       0       0       0       0       0
  2702 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2703 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2704 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2705 ;;Total ram usage:       68 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; Hardware stack levels required when called: 4
  2708 ;; This function calls:
  2709 ;;		___awdiv
  2710 ;;		___awmod
  2711 ;;		___fladd
  2712 ;;		___fldiv
  2713 ;;		___fleq
  2714 ;;		___flge
  2715 ;;		___flmul
  2716 ;;		___flneg
  2717 ;;		___flsub
  2718 ;;		___fltol
  2719 ;;		___fpclassifyf
  2720 ;;		_floorf
  2721 ;;		_isupper
  2722 ;;		_pad
  2723 ;;		_strcpy
  2724 ;;		_tolower
  2725 ;; This function is called by:
  2726 ;;		_vfpfcnvrt
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text5
  2731  000832                     __ptext5:
  2732                           	callstack 0
  2733  000832                     _efgtoa:
  2734                           	callstack 23
  2735  000832                     
  2736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2737  000832  0E00               	movlw	0
  2738  000834  0100               	movlb	0	; () banked
  2739  000836  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  2740  000838  0E00               	movlw	0
  2741  00083A  6F88               	movwf	efgtoa@sign& (0+255),b
  2742  00083C                     
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2745  00083C  C064  F09A         	movff	efgtoa@f,efgtoa@g
  2746  000840  C065  F09B         	movff	efgtoa@f+1,efgtoa@g+1
  2747  000844  C066  F09C         	movff	efgtoa@f+2,efgtoa@g+2
  2748  000848  C067  F09D         	movff	efgtoa@f+3,efgtoa@g+3
  2749  00084C                     
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2752  00084C  BF9D               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2753  00084E  EF2D  F004         	goto	u4100
  2754  000852  EF2B  F004         	goto	u4101
  2755  000856                     u4101:
  2756  000856  EF43  F004         	goto	l3647
  2757  00085A                     u4100:
  2758  00085A                     
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2761  00085A  0E00               	movlw	0
  2762  00085C  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  2763  00085E  0E01               	movlw	1
  2764  000860  6F88               	movwf	efgtoa@sign& (0+255),b
  2765  000862                     
  2766                           ; BSR set to: 0
  2767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2768  000862  C09A  F001         	movff	efgtoa@g,___flneg@f1
  2769  000866  C09B  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2770  00086A  C09C  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2771  00086E  C09D  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2772  000872  EC9D  F01E         	call	___flneg	;wreg free
  2773  000876  C001  F09A         	movff	?___flneg,efgtoa@g
  2774  00087A  C002  F09B         	movff	?___flneg+1,efgtoa@g+1
  2775  00087E  C003  F09C         	movff	?___flneg+2,efgtoa@g+2
  2776  000882  C004  F09D         	movff	?___flneg+3,efgtoa@g+3
  2777  000886                     l3647:
  2778                           
  2779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2780  000886  0E00               	movlw	0
  2781  000888  0100               	movlb	0	; () banked
  2782  00088A  6FA1               	movwf	(efgtoa@n+1)& (0+255),b
  2783  00088C  0E00               	movlw	0
  2784  00088E  6FA0               	movwf	efgtoa@n& (0+255),b
  2785  000890                     
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2788  000890  C0F4  F08C         	movff	_width,efgtoa@w
  2789  000894  C0F5  F08D         	movff	_width+1,efgtoa@w+1
  2790  000898                     
  2791                           ; BSR set to: 0
  2792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2793  000898  5188               	movf	efgtoa@sign& (0+255),w,b
  2794  00089A  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2795  00089C  A4D8               	btfss	status,2,c
  2796  00089E  EF53  F004         	goto	u4111
  2797  0008A2  EF55  F004         	goto	u4110
  2798  0008A6                     u4111:
  2799  0008A6  EF5C  F004         	goto	l3655
  2800  0008AA                     u4110:
  2801  0008AA                     
  2802                           ; BSR set to: 0
  2803  0008AA  A5F8               	btfss	_flags& (0+255),2,b
  2804  0008AC  EF5A  F004         	goto	u4121
  2805  0008B0  EF5C  F004         	goto	u4120
  2806  0008B4                     u4121:
  2807  0008B4  EF76  F004         	goto	l3667
  2808  0008B8                     u4120:
  2809  0008B8                     l3655:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2813  0008B8  5188               	movf	efgtoa@sign& (0+255),w,b
  2814  0008BA  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2815  0008BC  A4D8               	btfss	status,2,c
  2816  0008BE  EF63  F004         	goto	u4131
  2817  0008C2  EF65  F004         	goto	u4130
  2818  0008C6                     u4131:
  2819  0008C6  EF6B  F004         	goto	l3659
  2820  0008CA                     u4130:
  2821  0008CA                     
  2822                           ; BSR set to: 0
  2823  0008CA  0E00               	movlw	0
  2824  0008CC  6F6F               	movwf	(_efgtoa$987+1)& (0+255),b
  2825  0008CE  0E2B               	movlw	43
  2826  0008D0  6F6E               	movwf	_efgtoa$987& (0+255),b
  2827  0008D2  EF6F  F004         	goto	l3661
  2828  0008D6                     l3659:
  2829                           
  2830                           ; BSR set to: 0
  2831  0008D6  0E00               	movlw	0
  2832  0008D8  6F6F               	movwf	(_efgtoa$987+1)& (0+255),b
  2833  0008DA  0E2D               	movlw	45
  2834  0008DC  6F6E               	movwf	_efgtoa$987& (0+255),b
  2835  0008DE                     l3661:
  2836                           
  2837                           ; BSR set to: 0
  2838  0008DE  C06E  F100         	movff	_efgtoa$987,_dbuf
  2839  0008E2                     
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2842  0008E2  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  2843  0008E4  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  2844  0008E6                     
  2845                           ; BSR set to: 0
  2846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2847  0008E6  078C               	decf	efgtoa@w& (0+255),f,b
  2848  0008E8  A0D8               	btfss	status,0,c
  2849  0008EA  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  2850  0008EC                     l3667:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2854  0008EC  C09A  F001         	movff	efgtoa@g,___fpclassifyf@x
  2855  0008F0  C09B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2856  0008F4  C09C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2857  0008F8  C09D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2858  0008FC  ECE2  F018         	call	___fpclassifyf	;wreg free
  2859  000900  0401               	decf	?___fpclassifyf^0,w,c
  2860  000902  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2861  000904  A4D8               	btfss	status,2,c
  2862  000906  EF87  F004         	goto	u4141
  2863  00090A  EF89  F004         	goto	u4140
  2864  00090E                     u4141:
  2865  00090E  EFE0  F004         	goto	l3685
  2866  000912                     u4140:
  2867  000912  0EBF               	movlw	191
  2868  000914  0100               	movlb	0	; () banked
  2869  000916  6F69               	movwf	??_efgtoa& (0+255),b
  2870  000918  0EFF               	movlw	255
  2871  00091A  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  2872  00091C  5168               	movf	efgtoa@c& (0+255),w,b
  2873  00091E  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  2874  000920  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  2875  000922  5169               	movf	??_efgtoa& (0+255),w,b
  2876  000924  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  2877  000926  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  2878  000928  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2879  00092A  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  2880  00092C  E10A               	bnz	u4150
  2881  00092E  0E1A               	movlw	26
  2882  000930  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  2883  000932  A0D8               	btfss	status,0,c
  2884  000934  EF9E  F004         	goto	u4151
  2885  000938  EFA1  F004         	goto	u4150
  2886  00093C                     u4151:
  2887  00093C  0E01               	movlw	1
  2888  00093E  EFA2  F004         	goto	u4160
  2889  000942                     u4150:
  2890  000942  0E00               	movlw	0
  2891  000944                     u4160:
  2892  000944  6F70               	movwf	_efgtoa$988& (0+255),b
  2893  000946  6B71               	clrf	(_efgtoa$988+1)& (0+255),b
  2894  000948                     
  2895                           ; BSR set to: 0
  2896  000948  5170               	movf	_efgtoa$988& (0+255),w,b
  2897  00094A  1171               	iorwf	(_efgtoa$988+1)& (0+255),w,b
  2898  00094C  B4D8               	btfsc	status,2,c
  2899  00094E  EFAB  F004         	goto	u4171
  2900  000952  EFAD  F004         	goto	u4170
  2901  000956                     u4171:
  2902  000956  EFBB  F004         	goto	l3677
  2903  00095A                     u4170:
  2904  00095A                     
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2907  00095A  0E00               	movlw	low _dbuf
  2908  00095C  25A0               	addwf	efgtoa@n& (0+255),w,b
  2909  00095E  6E01               	movwf	strcpy@dest^0,c
  2910  000960  0E01               	movlw	high _dbuf
  2911  000962  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2912  000964  6E02               	movwf	(strcpy@dest+1)^0,c
  2913  000966  0E1D               	movlw	low STR_8
  2914  000968  6E03               	movwf	strcpy@src^0,c
  2915  00096A  0E08               	movlw	high STR_8
  2916  00096C  6E04               	movwf	(strcpy@src+1)^0,c
  2917  00096E  ECE5  F01C         	call	_strcpy	;wreg free
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2920  000972  EFC7  F004         	goto	l3679
  2921  000976                     l3677:
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2925  000976  0E00               	movlw	low _dbuf
  2926  000978  25A0               	addwf	efgtoa@n& (0+255),w,b
  2927  00097A  6E01               	movwf	strcpy@dest^0,c
  2928  00097C  0E01               	movlw	high _dbuf
  2929  00097E  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2930  000980  6E02               	movwf	(strcpy@dest+1)^0,c
  2931  000982  0E25               	movlw	low STR_9
  2932  000984  6E03               	movwf	strcpy@src^0,c
  2933  000986  0E08               	movlw	high STR_9
  2934  000988  6E04               	movwf	(strcpy@src+1)^0,c
  2935  00098A  ECE5  F01C         	call	_strcpy	;wreg free
  2936  00098E                     l3679:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2939  00098E  0100               	movlb	0	; () banked
  2940  000990  0EFD               	movlw	253
  2941  000992  278C               	addwf	efgtoa@w& (0+255),f,b
  2942  000994  0EFF               	movlw	255
  2943  000996  238D               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2944  000998                     l3681:
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2947  000998  C062  F011         	movff	efgtoa@fp,pad@fp
  2948  00099C  C063  F012         	movff	efgtoa@fp+1,pad@fp+1
  2949  0009A0  0E00               	movlw	low _dbuf
  2950  0009A2  6E13               	movwf	pad@buf^0,c
  2951  0009A4  0E01               	movlw	high _dbuf
  2952  0009A6  6E14               	movwf	(pad@buf+1)^0,c
  2953  0009A8  C08C  F015         	movff	efgtoa@w,pad@p
  2954  0009AC  C08D  F016         	movff	efgtoa@w+1,pad@p+1
  2955  0009B0  ECB0  F01A         	call	_pad	;wreg free
  2956  0009B4  C011  F062         	movff	?_pad,?_efgtoa
  2957  0009B8  C012  F063         	movff	?_pad+1,?_efgtoa+1
  2958  0009BC  EF44  F00A         	goto	l917
  2959  0009C0                     l3685:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2962  0009C0  C09A  F001         	movff	efgtoa@g,___fpclassifyf@x
  2963  0009C4  C09B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2964  0009C8  C09C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2965  0009CC  C09D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2966  0009D0  ECE2  F018         	call	___fpclassifyf	;wreg free
  2967  0009D4  5001               	movf	?___fpclassifyf^0,w,c
  2968  0009D6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2969  0009D8  A4D8               	btfss	status,2,c
  2970  0009DA  EFF1  F004         	goto	u4181
  2971  0009DE  EFF3  F004         	goto	u4180
  2972  0009E2                     u4181:
  2973  0009E2  EF33  F005         	goto	l3703
  2974  0009E6                     u4180:
  2975  0009E6  0EBF               	movlw	191
  2976  0009E8  0100               	movlb	0	; () banked
  2977  0009EA  6F69               	movwf	??_efgtoa& (0+255),b
  2978  0009EC  0EFF               	movlw	255
  2979  0009EE  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  2980  0009F0  5168               	movf	efgtoa@c& (0+255),w,b
  2981  0009F2  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  2982  0009F4  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  2983  0009F6  5169               	movf	??_efgtoa& (0+255),w,b
  2984  0009F8  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  2985  0009FA  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  2986  0009FC  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2987  0009FE  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  2988  000A00  E10A               	bnz	u4190
  2989  000A02  0E1A               	movlw	26
  2990  000A04  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  2991  000A06  A0D8               	btfss	status,0,c
  2992  000A08  EF08  F005         	goto	u4191
  2993  000A0C  EF0B  F005         	goto	u4190
  2994  000A10                     u4191:
  2995  000A10  0E01               	movlw	1
  2996  000A12  EF0C  F005         	goto	u4200
  2997  000A16                     u4190:
  2998  000A16  0E00               	movlw	0
  2999  000A18                     u4200:
  3000  000A18  6F72               	movwf	_efgtoa$993& (0+255),b
  3001  000A1A  6B73               	clrf	(_efgtoa$993+1)& (0+255),b
  3002  000A1C                     
  3003                           ; BSR set to: 0
  3004  000A1C  5172               	movf	_efgtoa$993& (0+255),w,b
  3005  000A1E  1173               	iorwf	(_efgtoa$993+1)& (0+255),w,b
  3006  000A20  B4D8               	btfsc	status,2,c
  3007  000A22  EF15  F005         	goto	u4211
  3008  000A26  EF17  F005         	goto	u4210
  3009  000A2A                     u4211:
  3010  000A2A  EF25  F005         	goto	l3695
  3011  000A2E                     u4210:
  3012  000A2E                     
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3015  000A2E  0E00               	movlw	low _dbuf
  3016  000A30  25A0               	addwf	efgtoa@n& (0+255),w,b
  3017  000A32  6E01               	movwf	strcpy@dest^0,c
  3018  000A34  0E01               	movlw	high _dbuf
  3019  000A36  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3020  000A38  6E02               	movwf	(strcpy@dest+1)^0,c
  3021  000A3A  0E21               	movlw	low STR_12
  3022  000A3C  6E03               	movwf	strcpy@src^0,c
  3023  000A3E  0E08               	movlw	high STR_12
  3024  000A40  6E04               	movwf	(strcpy@src+1)^0,c
  3025  000A42  ECE5  F01C         	call	_strcpy	;wreg free
  3026                           
  3027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3028  000A46  EFC7  F004         	goto	l3679
  3029  000A4A                     l3695:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3033  000A4A  0E00               	movlw	low _dbuf
  3034  000A4C  25A0               	addwf	efgtoa@n& (0+255),w,b
  3035  000A4E  6E01               	movwf	strcpy@dest^0,c
  3036  000A50  0E01               	movlw	high _dbuf
  3037  000A52  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3038  000A54  6E02               	movwf	(strcpy@dest+1)^0,c
  3039  000A56  0E29               	movlw	low STR_13
  3040  000A58  6E03               	movwf	strcpy@src^0,c
  3041  000A5A  0E08               	movlw	high STR_13
  3042  000A5C  6E04               	movwf	(strcpy@src+1)^0,c
  3043  000A5E  ECE5  F01C         	call	_strcpy	;wreg free
  3044  000A62  EFC7  F004         	goto	l3679
  3045  000A66                     l3703:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3048  000A66  0E00               	movlw	0
  3049  000A68  0100               	movlb	0	; () banked
  3050  000A6A  6FA2               	movwf	efgtoa@u& (0+255),b
  3051  000A6C  0E00               	movlw	0
  3052  000A6E  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  3053  000A70  0E80               	movlw	128
  3054  000A72  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  3055  000A74  0E3F               	movlw	63
  3056  000A76  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3059  000A78  0E00               	movlw	0
  3060  000A7A  6F9F               	movwf	(efgtoa@e+1)& (0+255),b
  3061  000A7C  0E00               	movlw	0
  3062  000A7E  6F9E               	movwf	efgtoa@e& (0+255),b
  3063  000A80                     
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3066  000A80  C09A  F001         	movff	efgtoa@g,___fleq@ff1
  3067  000A84  C09B  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3068  000A88  C09C  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3069  000A8C  C09D  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3070  000A90  0E00               	movlw	0
  3071  000A92  6E05               	movwf	___fleq@ff2^0,c
  3072  000A94  0E00               	movlw	0
  3073  000A96  6E06               	movwf	(___fleq@ff2+1)^0,c
  3074  000A98  0E00               	movlw	0
  3075  000A9A  6E07               	movwf	(___fleq@ff2+2)^0,c
  3076  000A9C  0E00               	movlw	0
  3077  000A9E  6E08               	movwf	(___fleq@ff2+3)^0,c
  3078  000AA0  ECCD  F01B         	call	___fleq	;wreg free
  3079  000AA4  B0D8               	btfsc	status,0,c
  3080  000AA6  EF57  F005         	goto	u4221
  3081  000AAA  EF59  F005         	goto	u4220
  3082  000AAE                     u4221:
  3083  000AAE  EFDC  F005         	goto	l3721
  3084  000AB2                     u4220:
  3085  000AB2  EF78  F005         	goto	l3713
  3086  000AB6                     l3709:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3089  000AB6  C0A2  F015         	movff	efgtoa@u,___flmul@b
  3090  000ABA  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  3091  000ABE  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  3092  000AC2  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  3093  000AC6  0E00               	movlw	0
  3094  000AC8  6E19               	movwf	___flmul@a^0,c
  3095  000ACA  0E00               	movlw	0
  3096  000ACC  6E1A               	movwf	(___flmul@a+1)^0,c
  3097  000ACE  0E20               	movlw	32
  3098  000AD0  6E1B               	movwf	(___flmul@a+2)^0,c
  3099  000AD2  0E41               	movlw	65
  3100  000AD4  6E1C               	movwf	(___flmul@a+3)^0,c
  3101  000AD6  EC4F  F011         	call	___flmul	;wreg free
  3102  000ADA  C015  F0A2         	movff	?___flmul,efgtoa@u
  3103  000ADE  C016  F0A3         	movff	?___flmul+1,efgtoa@u+1
  3104  000AE2  C017  F0A4         	movff	?___flmul+2,efgtoa@u+2
  3105  000AE6  C018  F0A5         	movff	?___flmul+3,efgtoa@u+3
  3106  000AEA                     
  3107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3108  000AEA  0100               	movlb	0	; () banked
  3109  000AEC  4B9E               	infsnz	efgtoa@e& (0+255),f,b
  3110  000AEE  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  3111  000AF0                     l3713:
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3114  000AF0  C09A  F02E         	movff	efgtoa@g,___flge@ff1
  3115  000AF4  C09B  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  3116  000AF8  C09C  F030         	movff	efgtoa@g+2,___flge@ff1+2
  3117  000AFC  C09D  F031         	movff	efgtoa@g+3,___flge@ff1+3
  3118  000B00  0E00               	movlw	0
  3119  000B02  6E19               	movwf	___flmul@a^0,c
  3120  000B04  0E00               	movlw	0
  3121  000B06  6E1A               	movwf	(___flmul@a+1)^0,c
  3122  000B08  0E20               	movlw	32
  3123  000B0A  6E1B               	movwf	(___flmul@a+2)^0,c
  3124  000B0C  0E41               	movlw	65
  3125  000B0E  6E1C               	movwf	(___flmul@a+3)^0,c
  3126  000B10  C0A2  F015         	movff	efgtoa@u,___flmul@b
  3127  000B14  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  3128  000B18  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  3129  000B1C  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  3130  000B20  EC4F  F011         	call	___flmul	;wreg free
  3131  000B24  C015  F032         	movff	?___flmul,___flge@ff2
  3132  000B28  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  3133  000B2C  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  3134  000B30  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  3135  000B34  EC60  F018         	call	___flge	;wreg free
  3136  000B38  B0D8               	btfsc	status,0,c
  3137  000B3A  EFA1  F005         	goto	u4231
  3138  000B3E  EFA3  F005         	goto	u4230
  3139  000B42                     u4231:
  3140  000B42  EF5B  F005         	goto	l3709
  3141  000B46                     u4230:
  3142  000B46  EFC3  F005         	goto	l3719
  3143  000B4A                     l3715:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3146  000B4A  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  3147  000B4E  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  3148  000B52  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  3149  000B56  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  3150  000B5A  0E00               	movlw	0
  3151  000B5C  6E32               	movwf	___fldiv@a^0,c
  3152  000B5E  0E00               	movlw	0
  3153  000B60  6E33               	movwf	(___fldiv@a+1)^0,c
  3154  000B62  0E20               	movlw	32
  3155  000B64  6E34               	movwf	(___fldiv@a+2)^0,c
  3156  000B66  0E41               	movlw	65
  3157  000B68  6E35               	movwf	(___fldiv@a+3)^0,c
  3158  000B6A  EC64  F013         	call	___fldiv	;wreg free
  3159  000B6E  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  3160  000B72  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  3161  000B76  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  3162  000B7A  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  3163  000B7E                     
  3164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3165  000B7E  0100               	movlb	0	; () banked
  3166  000B80  079E               	decf	efgtoa@e& (0+255),f,b
  3167  000B82  A0D8               	btfss	status,0,c
  3168  000B84  079F               	decf	(efgtoa@e+1)& (0+255),f,b
  3169  000B86                     l3719:
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3172  000B86  C09A  F02E         	movff	efgtoa@g,___flge@ff1
  3173  000B8A  C09B  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  3174  000B8E  C09C  F030         	movff	efgtoa@g+2,___flge@ff1+2
  3175  000B92  C09D  F031         	movff	efgtoa@g+3,___flge@ff1+3
  3176  000B96  C0A2  F032         	movff	efgtoa@u,___flge@ff2
  3177  000B9A  C0A3  F033         	movff	efgtoa@u+1,___flge@ff2+1
  3178  000B9E  C0A4  F034         	movff	efgtoa@u+2,___flge@ff2+2
  3179  000BA2  C0A5  F035         	movff	efgtoa@u+3,___flge@ff2+3
  3180  000BA6  EC60  F018         	call	___flge	;wreg free
  3181  000BAA  A0D8               	btfss	status,0,c
  3182  000BAC  EFDA  F005         	goto	u4241
  3183  000BB0  EFDC  F005         	goto	u4240
  3184  000BB4                     u4241:
  3185  000BB4  EFA5  F005         	goto	l3715
  3186  000BB8                     u4240:
  3187  000BB8                     l3721:
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3190  000BB8  C068  F007         	movff	efgtoa@c,tolower@c
  3191  000BBC  6A08               	clrf	(tolower@c+1)^0,c
  3192  000BBE  EC86  F01C         	call	_tolower	;wreg free
  3193  000BC2  5007               	movf	?_tolower^0,w,c
  3194  000BC4  0100               	movlb	0	; () banked
  3195  000BC6  6F8F               	movwf	efgtoa@mode& (0+255),b
  3196  000BC8                     
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3199  000BC8  C08F  F08E         	movff	efgtoa@mode,efgtoa@nmode
  3200  000BCC                     
  3201                           ; BSR set to: 0
  3202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3203  000BCC  0E67               	movlw	103
  3204  000BCE  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3205  000BD0  A4D8               	btfss	status,2,c
  3206  000BD2  EFED  F005         	goto	u4251
  3207  000BD6  EFEF  F005         	goto	u4250
  3208  000BDA                     u4251:
  3209  000BDA  EF15  F006         	goto	l3735
  3210  000BDE                     u4250:
  3211  000BDE                     
  3212                           ; BSR set to: 0
  3213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3214  000BDE  51F6               	movf	_prec& (0+255),w,b
  3215  000BE0  11F7               	iorwf	(_prec+1)& (0+255),w,b
  3216  000BE2  A4D8               	btfss	status,2,c
  3217  000BE4  EFF6  F005         	goto	u4261
  3218  000BE8  EFF8  F005         	goto	u4260
  3219  000BEC                     u4261:
  3220  000BEC  EFFC  F005         	goto	l3731
  3221  000BF0                     u4260:
  3222  000BF0                     
  3223                           ; BSR set to: 0
  3224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3225  000BF0  0E00               	movlw	0
  3226  000BF2  6FF7               	movwf	(_prec+1)& (0+255),b
  3227  000BF4  0E01               	movlw	1
  3228  000BF6  6FF6               	movwf	_prec& (0+255),b
  3229  000BF8                     l3731:
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3233  000BF8  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  3234  000BFA  EF09  F006         	goto	u4270
  3235  000BFE  51F7               	movf	(_prec+1)& (0+255),w,b
  3236  000C00  E106               	bnz	u4271
  3237  000C02  05F6               	decf	_prec& (0+255),w,b
  3238  000C04  B0D8               	btfsc	status,0,c
  3239  000C06  EF07  F006         	goto	u4271
  3240  000C0A  EF09  F006         	goto	u4270
  3241  000C0E                     u4271:
  3242  000C0E  EF0F  F006         	goto	l935
  3243  000C12                     u4270:
  3244  000C12                     l3733:
  3245                           
  3246                           ; BSR set to: 0
  3247  000C12  0E00               	movlw	0
  3248  000C14  6F8B               	movwf	(efgtoa@p+1)& (0+255),b
  3249  000C16  0E06               	movlw	6
  3250  000C18  6F8A               	movwf	efgtoa@p& (0+255),b
  3251  000C1A  EF1E  F006         	goto	l3741
  3252  000C1E                     l935:
  3253                           
  3254                           ; BSR set to: 0
  3255  000C1E  C0F6  F08A         	movff	_prec,efgtoa@p
  3256  000C22  C0F7  F08B         	movff	_prec+1,efgtoa@p+1
  3257  000C26  EF1E  F006         	goto	l3741
  3258  000C2A                     l3735:
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3262  000C2A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  3263  000C2C  EF1A  F006         	goto	u4281
  3264  000C30  EF1C  F006         	goto	u4280
  3265  000C34                     u4281:
  3266  000C34  EF09  F006         	goto	l3733
  3267  000C38                     u4280:
  3268  000C38  EF0F  F006         	goto	l935
  3269  000C3C                     l3741:
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3273  000C3C  0E67               	movlw	103
  3274  000C3E  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3275  000C40  A4D8               	btfss	status,2,c
  3276  000C42  EF25  F006         	goto	u4291
  3277  000C46  EF27  F006         	goto	u4290
  3278  000C4A                     u4291:
  3279  000C4A  EF56  F006         	goto	l3751
  3280  000C4E                     u4290:
  3281  000C4E                     
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3284  000C4E  AF9F               	btfss	(efgtoa@e+1)& (0+255),7,b
  3285  000C50  EF35  F006         	goto	u4300
  3286  000C54  0EFC               	movlw	252
  3287  000C56  5D9E               	subwf	efgtoa@e& (0+255),w,b
  3288  000C58  0EFF               	movlw	255
  3289  000C5A  599F               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3290  000C5C  A0D8               	btfss	status,0,c
  3291  000C5E  EF33  F006         	goto	u4301
  3292  000C62  EF35  F006         	goto	u4300
  3293  000C66                     u4301:
  3294  000C66  EF54  F006         	goto	l3749
  3295  000C6A                     u4300:
  3296  000C6A                     
  3297                           ; BSR set to: 0
  3298  000C6A  0EFF               	movlw	255
  3299  000C6C  6F69               	movwf	??_efgtoa& (0+255),b
  3300  000C6E  0EFF               	movlw	255
  3301  000C70  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  3302  000C72  C08A  F06B         	movff	efgtoa@p,??_efgtoa+2
  3303  000C76  C08B  F06C         	movff	efgtoa@p+1,??_efgtoa+3
  3304  000C7A  5169               	movf	??_efgtoa& (0+255),w,b
  3305  000C7C  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  3306  000C7E  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  3307  000C80  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3308  000C82  519E               	movf	efgtoa@e& (0+255),w,b
  3309  000C84  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  3310  000C86  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  3311  000C88  0A80               	xorlw	128
  3312  000C8A  6F6D               	movwf	(??_efgtoa+4)& (0+255),b
  3313  000C8C  519F               	movf	(efgtoa@e+1)& (0+255),w,b
  3314  000C8E  0A80               	xorlw	128
  3315  000C90  596D               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3316  000C92  A0D8               	btfss	status,0,c
  3317  000C94  EF4E  F006         	goto	u4311
  3318  000C98  EF50  F006         	goto	u4310
  3319  000C9C                     u4311:
  3320  000C9C  EF54  F006         	goto	l3749
  3321  000CA0                     u4310:
  3322  000CA0                     
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3325  000CA0  0E66               	movlw	102
  3326  000CA2  6F8E               	movwf	efgtoa@nmode& (0+255),b
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3329  000CA4  EF56  F006         	goto	l3751
  3330  000CA8                     l3749:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3334  000CA8  0E65               	movlw	101
  3335  000CAA  6F8E               	movwf	efgtoa@nmode& (0+255),b
  3336  000CAC                     l3751:
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3340  000CAC  C08A  F080         	movff	efgtoa@p,efgtoa@m
  3341  000CB0  C08B  F081         	movff	efgtoa@p+1,efgtoa@m+1
  3342  000CB4                     
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3345  000CB4  0E67               	movlw	103
  3346  000CB6  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3347  000CB8  A4D8               	btfss	status,2,c
  3348  000CBA  EF61  F006         	goto	u4321
  3349  000CBE  EF63  F006         	goto	u4320
  3350  000CC2                     u4321:
  3351  000CC2  EF73  F006         	goto	l3759
  3352  000CC6                     u4320:
  3353  000CC6                     
  3354                           ; BSR set to: 0
  3355  000CC6  0E66               	movlw	102
  3356  000CC8  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3357  000CCA  A4D8               	btfss	status,2,c
  3358  000CCC  EF6A  F006         	goto	u4331
  3359  000CD0  EF6C  F006         	goto	u4330
  3360  000CD4                     u4331:
  3361  000CD4  EF75  F006         	goto	l3761
  3362  000CD8                     u4330:
  3363  000CD8                     
  3364                           ; BSR set to: 0
  3365  000CD8  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3366  000CDA  EF73  F006         	goto	u4340
  3367  000CDE  EF71  F006         	goto	u4341
  3368  000CE2                     u4341:
  3369  000CE2  EF75  F006         	goto	l3761
  3370  000CE6                     u4340:
  3371  000CE6                     l3759:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3375  000CE6  4B80               	infsnz	efgtoa@m& (0+255),f,b
  3376  000CE8  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  3377  000CEA                     l3761:
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3381  000CEA  0E66               	movlw	102
  3382  000CEC  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3383  000CEE  A4D8               	btfss	status,2,c
  3384  000CF0  EF7C  F006         	goto	u4351
  3385  000CF4  EF7E  F006         	goto	u4350
  3386  000CF8                     u4351:
  3387  000CF8  EF9E  F006         	goto	l3771
  3388  000CFC                     u4350:
  3389  000CFC                     
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3392  000CFC  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3393  000CFE  EF85  F006         	goto	u4360
  3394  000D02  EF83  F006         	goto	u4361
  3395  000D06                     u4361:
  3396  000D06  EF91  F006         	goto	l3767
  3397  000D0A                     u4360:
  3398  000D0A                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3401  000D0A  0E00               	movlw	0
  3402  000D0C  6FA2               	movwf	efgtoa@u& (0+255),b
  3403  000D0E  0E00               	movlw	0
  3404  000D10  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  3405  000D12  0E80               	movlw	128
  3406  000D14  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  3407  000D16  0E3F               	movlw	63
  3408  000D18  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3411  000D1A  0E00               	movlw	0
  3412  000D1C  6F9F               	movwf	(efgtoa@e+1)& (0+255),b
  3413  000D1E  0E00               	movlw	0
  3414  000D20  6F9E               	movwf	efgtoa@e& (0+255),b
  3415  000D22                     l3767:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3419  000D22  0E67               	movlw	103
  3420  000D24  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3421  000D26  B4D8               	btfsc	status,2,c
  3422  000D28  EF98  F006         	goto	u4371
  3423  000D2C  EF9A  F006         	goto	u4370
  3424  000D30                     u4371:
  3425  000D30  EF9E  F006         	goto	l3771
  3426  000D34                     u4370:
  3427  000D34                     
  3428                           ; BSR set to: 0
  3429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3430  000D34  519E               	movf	efgtoa@e& (0+255),w,b
  3431  000D36  2780               	addwf	efgtoa@m& (0+255),f,b
  3432  000D38  519F               	movf	(efgtoa@e+1)& (0+255),w,b
  3433  000D3A  2381               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3434  000D3C                     l3771:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3438  000D3C  0E00               	movlw	0
  3439  000D3E  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  3440  000D40  0E00               	movlw	0
  3441  000D42  6F98               	movwf	efgtoa@i& (0+255),b
  3442  000D44                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3445  000D44  C09A  F090         	movff	efgtoa@g,efgtoa@h
  3446  000D48  C09B  F091         	movff	efgtoa@g+1,efgtoa@h+1
  3447  000D4C  C09C  F092         	movff	efgtoa@g+2,efgtoa@h+2
  3448  000D50  C09D  F093         	movff	efgtoa@g+3,efgtoa@h+3
  3449  000D54                     
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3452  000D54  C0A2  F082         	movff	efgtoa@u,efgtoa@ou
  3453  000D58  C0A3  F083         	movff	efgtoa@u+1,efgtoa@ou+1
  3454  000D5C  C0A4  F084         	movff	efgtoa@u+2,efgtoa@ou+2
  3455  000D60  C0A5  F085         	movff	efgtoa@u+3,efgtoa@ou+3
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3458  000D64  EF2F  F007         	goto	l3785
  3459  000D68                     l3777:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3463  000D68  C090  F02E         	movff	efgtoa@h,___fldiv@b
  3464  000D6C  C091  F02F         	movff	efgtoa@h+1,___fldiv@b+1
  3465  000D70  C092  F030         	movff	efgtoa@h+2,___fldiv@b+2
  3466  000D74  C093  F031         	movff	efgtoa@h+3,___fldiv@b+3
  3467  000D78  C0A2  F032         	movff	efgtoa@u,___fldiv@a
  3468  000D7C  C0A3  F033         	movff	efgtoa@u+1,___fldiv@a+1
  3469  000D80  C0A4  F034         	movff	efgtoa@u+2,___fldiv@a+2
  3470  000D84  C0A5  F035         	movff	efgtoa@u+3,___fldiv@a+3
  3471  000D88  EC64  F013         	call	___fldiv	;wreg free
  3472  000D8C  C02E  F047         	movff	?___fldiv,floorf@x
  3473  000D90  C02F  F048         	movff	?___fldiv+1,floorf@x+1
  3474  000D94  C030  F049         	movff	?___fldiv+2,floorf@x+2
  3475  000D98  C031  F04A         	movff	?___fldiv+3,floorf@x+3
  3476  000D9C  EC31  F015         	call	_floorf	;wreg free
  3477  000DA0  C047  F094         	movff	?_floorf,efgtoa@l
  3478  000DA4  C048  F095         	movff	?_floorf+1,efgtoa@l+1
  3479  000DA8  C049  F096         	movff	?_floorf+2,efgtoa@l+2
  3480  000DAC  C04A  F097         	movff	?_floorf+3,efgtoa@l+3
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3483  000DB0  C094  F057         	movff	efgtoa@l,___fltol@f1
  3484  000DB4  C095  F058         	movff	efgtoa@l+1,___fltol@f1+1
  3485  000DB8  C096  F059         	movff	efgtoa@l+2,___fltol@f1+2
  3486  000DBC  C097  F05A         	movff	efgtoa@l+3,___fltol@f1+3
  3487  000DC0  ECDC  F017         	call	___fltol	;wreg free
  3488  000DC4  C057  F086         	movff	?___fltol,efgtoa@d
  3489  000DC8  C058  F087         	movff	?___fltol+1,efgtoa@d+1
  3490  000DCC                     
  3491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3492  000DCC  C090  F057         	movff	efgtoa@h,___flsub@b
  3493  000DD0  C091  F058         	movff	efgtoa@h+1,___flsub@b+1
  3494  000DD4  C092  F059         	movff	efgtoa@h+2,___flsub@b+2
  3495  000DD8  C093  F05A         	movff	efgtoa@h+3,___flsub@b+3
  3496  000DDC  C0A2  F019         	movff	efgtoa@u,___flmul@a
  3497  000DE0  C0A3  F01A         	movff	efgtoa@u+1,___flmul@a+1
  3498  000DE4  C0A4  F01B         	movff	efgtoa@u+2,___flmul@a+2
  3499  000DE8  C0A5  F01C         	movff	efgtoa@u+3,___flmul@a+3
  3500  000DEC  C094  F015         	movff	efgtoa@l,___flmul@b
  3501  000DF0  C095  F016         	movff	efgtoa@l+1,___flmul@b+1
  3502  000DF4  C096  F017         	movff	efgtoa@l+2,___flmul@b+2
  3503  000DF8  C097  F018         	movff	efgtoa@l+3,___flmul@b+3
  3504  000DFC  EC4F  F011         	call	___flmul	;wreg free
  3505  000E00  C015  F05B         	movff	?___flmul,___flsub@a
  3506  000E04  C016  F05C         	movff	?___flmul+1,___flsub@a+1
  3507  000E08  C017  F05D         	movff	?___flmul+2,___flsub@a+2
  3508  000E0C  C018  F05E         	movff	?___flmul+3,___flsub@a+3
  3509  000E10  ECFA  F01D         	call	___flsub	;wreg free
  3510  000E14  C057  F090         	movff	?___flsub,efgtoa@h
  3511  000E18  C058  F091         	movff	?___flsub+1,efgtoa@h+1
  3512  000E1C  C059  F092         	movff	?___flsub+2,efgtoa@h+2
  3513  000E20  C05A  F093         	movff	?___flsub+3,efgtoa@h+3
  3514  000E24                     
  3515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3516  000E24  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  3517  000E28  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  3518  000E2C  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  3519  000E30  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  3520  000E34  0E00               	movlw	0
  3521  000E36  6E32               	movwf	___fldiv@a^0,c
  3522  000E38  0E00               	movlw	0
  3523  000E3A  6E33               	movwf	(___fldiv@a+1)^0,c
  3524  000E3C  0E20               	movlw	32
  3525  000E3E  6E34               	movwf	(___fldiv@a+2)^0,c
  3526  000E40  0E41               	movlw	65
  3527  000E42  6E35               	movwf	(___fldiv@a+3)^0,c
  3528  000E44  EC64  F013         	call	___fldiv	;wreg free
  3529  000E48  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  3530  000E4C  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  3531  000E50  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  3532  000E54  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  3533  000E58                     
  3534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3535  000E58  0100               	movlb	0	; () banked
  3536  000E5A  4B98               	infsnz	efgtoa@i& (0+255),f,b
  3537  000E5C  2B99               	incf	(efgtoa@i+1)& (0+255),f,b
  3538  000E5E                     l3785:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3542  000E5E  5180               	movf	efgtoa@m& (0+255),w,b
  3543  000E60  5D98               	subwf	efgtoa@i& (0+255),w,b
  3544  000E62  5199               	movf	(efgtoa@i+1)& (0+255),w,b
  3545  000E64  0A80               	xorlw	128
  3546  000E66  6F69               	movwf	??_efgtoa& (0+255),b
  3547  000E68  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  3548  000E6A  0A80               	xorlw	128
  3549  000E6C  5969               	subwfb	??_efgtoa& (0+255),w,b
  3550  000E6E  A0D8               	btfss	status,0,c
  3551  000E70  EF3C  F007         	goto	u4381
  3552  000E74  EF3E  F007         	goto	u4380
  3553  000E78                     u4381:
  3554  000E78  EFB4  F006         	goto	l3777
  3555  000E7C                     u4380:
  3556  000E7C                     
  3557                           ; BSR set to: 0
  3558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3559  000E7C  C0A2  F015         	movff	efgtoa@u,___flmul@b
  3560  000E80  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  3561  000E84  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  3562  000E88  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  3563  000E8C  0E00               	movlw	0
  3564  000E8E  6E19               	movwf	___flmul@a^0,c
  3565  000E90  0E00               	movlw	0
  3566  000E92  6E1A               	movwf	(___flmul@a+1)^0,c
  3567  000E94  0EA0               	movlw	160
  3568  000E96  6E1B               	movwf	(___flmul@a+2)^0,c
  3569  000E98  0E40               	movlw	64
  3570  000E9A  6E1C               	movwf	(___flmul@a+3)^0,c
  3571  000E9C  EC4F  F011         	call	___flmul	;wreg free
  3572  000EA0  C015  F094         	movff	?___flmul,efgtoa@l
  3573  000EA4  C016  F095         	movff	?___flmul+1,efgtoa@l+1
  3574  000EA8  C017  F096         	movff	?___flmul+2,efgtoa@l+2
  3575  000EAC  C018  F097         	movff	?___flmul+3,efgtoa@l+3
  3576  000EB0                     
  3577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3578  000EB0  C090  F02E         	movff	efgtoa@h,___flge@ff1
  3579  000EB4  C091  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  3580  000EB8  C092  F030         	movff	efgtoa@h+2,___flge@ff1+2
  3581  000EBC  C093  F031         	movff	efgtoa@h+3,___flge@ff1+3
  3582  000EC0  C094  F032         	movff	efgtoa@l,___flge@ff2
  3583  000EC4  C095  F033         	movff	efgtoa@l+1,___flge@ff2+1
  3584  000EC8  C096  F034         	movff	efgtoa@l+2,___flge@ff2+2
  3585  000ECC  C097  F035         	movff	efgtoa@l+3,___flge@ff2+3
  3586  000ED0  EC60  F018         	call	___flge	;wreg free
  3587  000ED4  B0D8               	btfsc	status,0,c
  3588  000ED6  EF6F  F007         	goto	u4391
  3589  000EDA  EF71  F007         	goto	u4390
  3590  000EDE                     u4391:
  3591  000EDE  EF7C  F007         	goto	l3793
  3592  000EE2                     u4390:
  3593  000EE2                     
  3594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3595  000EE2  0E00               	movlw	0
  3596  000EE4  0100               	movlb	0	; () banked
  3597  000EE6  6F94               	movwf	efgtoa@l& (0+255),b
  3598  000EE8  0E00               	movlw	0
  3599  000EEA  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  3600  000EEC  0E00               	movlw	0
  3601  000EEE  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  3602  000EF0  0E00               	movlw	0
  3603  000EF2  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3606  000EF4  EFA5  F007         	goto	l3799
  3607  000EF8                     l3793:
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3610  000EF8  C090  F001         	movff	efgtoa@h,___fleq@ff1
  3611  000EFC  C091  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3612  000F00  C092  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3613  000F04  C093  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3614  000F08  C094  F005         	movff	efgtoa@l,___fleq@ff2
  3615  000F0C  C095  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3616  000F10  C096  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3617  000F14  C097  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3618  000F18  ECCD  F01B         	call	___fleq	;wreg free
  3619  000F1C  A0D8               	btfss	status,0,c
  3620  000F1E  EF93  F007         	goto	u4401
  3621  000F22  EF95  F007         	goto	u4400
  3622  000F26                     u4401:
  3623  000F26  EFA5  F007         	goto	l3799
  3624  000F2A                     u4400:
  3625  000F2A  0100               	movlb	0	; () banked
  3626  000F2C  B186               	btfsc	efgtoa@d& (0+255),0,b
  3627  000F2E  EF9B  F007         	goto	u4411
  3628  000F32  EF9D  F007         	goto	u4410
  3629  000F36                     u4411:
  3630  000F36  EFA5  F007         	goto	l3799
  3631  000F3A                     u4410:
  3632  000F3A                     
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3635  000F3A  0E00               	movlw	0
  3636  000F3C  6F94               	movwf	efgtoa@l& (0+255),b
  3637  000F3E  0E00               	movlw	0
  3638  000F40  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  3639  000F42  0E00               	movlw	0
  3640  000F44  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  3641  000F46  0E00               	movlw	0
  3642  000F48  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  3643  000F4A                     l3799:
  3644                           
  3645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3646  000F4A  C09A  F047         	movff	efgtoa@g,___fladd@b
  3647  000F4E  C09B  F048         	movff	efgtoa@g+1,___fladd@b+1
  3648  000F52  C09C  F049         	movff	efgtoa@g+2,___fladd@b+2
  3649  000F56  C09D  F04A         	movff	efgtoa@g+3,___fladd@b+3
  3650  000F5A  C094  F04B         	movff	efgtoa@l,___fladd@a
  3651  000F5E  C095  F04C         	movff	efgtoa@l+1,___fladd@a+1
  3652  000F62  C096  F04D         	movff	efgtoa@l+2,___fladd@a+2
  3653  000F66  C097  F04E         	movff	efgtoa@l+3,___fladd@a+3
  3654  000F6A  ECD9  F00C         	call	___fladd	;wreg free
  3655  000F6E  C047  F090         	movff	?___fladd,efgtoa@h
  3656  000F72  C048  F091         	movff	?___fladd+1,efgtoa@h+1
  3657  000F76  C049  F092         	movff	?___fladd+2,efgtoa@h+2
  3658  000F7A  C04A  F093         	movff	?___fladd+3,efgtoa@h+3
  3659  000F7E                     
  3660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3661  000F7E  C090  F02E         	movff	efgtoa@h,___flge@ff1
  3662  000F82  C091  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  3663  000F86  C092  F030         	movff	efgtoa@h+2,___flge@ff1+2
  3664  000F8A  C093  F031         	movff	efgtoa@h+3,___flge@ff1+3
  3665  000F8E  0E00               	movlw	0
  3666  000F90  6E19               	movwf	___flmul@a^0,c
  3667  000F92  0E00               	movlw	0
  3668  000F94  6E1A               	movwf	(___flmul@a+1)^0,c
  3669  000F96  0E20               	movlw	32
  3670  000F98  6E1B               	movwf	(___flmul@a+2)^0,c
  3671  000F9A  0E41               	movlw	65
  3672  000F9C  6E1C               	movwf	(___flmul@a+3)^0,c
  3673  000F9E  C082  F015         	movff	efgtoa@ou,___flmul@b
  3674  000FA2  C083  F016         	movff	efgtoa@ou+1,___flmul@b+1
  3675  000FA6  C084  F017         	movff	efgtoa@ou+2,___flmul@b+2
  3676  000FAA  C085  F018         	movff	efgtoa@ou+3,___flmul@b+3
  3677  000FAE  EC4F  F011         	call	___flmul	;wreg free
  3678  000FB2  C015  F032         	movff	?___flmul,___flge@ff2
  3679  000FB6  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  3680  000FBA  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  3681  000FBE  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  3682  000FC2  EC60  F018         	call	___flge	;wreg free
  3683  000FC6  A0D8               	btfss	status,0,c
  3684  000FC8  EFE8  F007         	goto	u4421
  3685  000FCC  EFEA  F007         	goto	u4420
  3686  000FD0                     u4421:
  3687  000FD0  EF13  F008         	goto	l3811
  3688  000FD4                     u4420:
  3689  000FD4                     
  3690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3691  000FD4  0100               	movlb	0	; () banked
  3692  000FD6  4B9E               	infsnz	efgtoa@e& (0+255),f,b
  3693  000FD8  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  3694  000FDA                     
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3697  000FDA  C082  F015         	movff	efgtoa@ou,___flmul@b
  3698  000FDE  C083  F016         	movff	efgtoa@ou+1,___flmul@b+1
  3699  000FE2  C084  F017         	movff	efgtoa@ou+2,___flmul@b+2
  3700  000FE6  C085  F018         	movff	efgtoa@ou+3,___flmul@b+3
  3701  000FEA  0E00               	movlw	0
  3702  000FEC  6E19               	movwf	___flmul@a^0,c
  3703  000FEE  0E00               	movlw	0
  3704  000FF0  6E1A               	movwf	(___flmul@a+1)^0,c
  3705  000FF2  0E20               	movlw	32
  3706  000FF4  6E1B               	movwf	(___flmul@a+2)^0,c
  3707  000FF6  0E41               	movlw	65
  3708  000FF8  6E1C               	movwf	(___flmul@a+3)^0,c
  3709  000FFA  EC4F  F011         	call	___flmul	;wreg free
  3710  000FFE  C015  F082         	movff	?___flmul,efgtoa@ou
  3711  001002  C016  F083         	movff	?___flmul+1,efgtoa@ou+1
  3712  001006  C017  F084         	movff	?___flmul+2,efgtoa@ou+2
  3713  00100A  C018  F085         	movff	?___flmul+3,efgtoa@ou+3
  3714  00100E                     
  3715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3716  00100E  0E66               	movlw	102
  3717  001010  0100               	movlb	0	; () banked
  3718  001012  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3719  001014  A4D8               	btfss	status,2,c
  3720  001016  EF0F  F008         	goto	u4431
  3721  00101A  EF11  F008         	goto	u4430
  3722  00101E                     u4431:
  3723  00101E  EF13  F008         	goto	l3811
  3724  001022                     u4430:
  3725  001022                     
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3728  001022  4B80               	infsnz	efgtoa@m& (0+255),f,b
  3729  001024  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  3730  001026                     l3811:
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3733  001026  C082  F0A2         	movff	efgtoa@ou,efgtoa@u
  3734  00102A  C083  F0A3         	movff	efgtoa@ou+1,efgtoa@u+1
  3735  00102E  C084  F0A4         	movff	efgtoa@ou+2,efgtoa@u+2
  3736  001032  C085  F0A5         	movff	efgtoa@ou+3,efgtoa@u+3
  3737  001036                     
  3738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3739  001036  0E65               	movlw	101
  3740  001038  0100               	movlb	0	; () banked
  3741  00103A  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3742  00103C  B4D8               	btfsc	status,2,c
  3743  00103E  EF23  F008         	goto	u4441
  3744  001042  EF25  F008         	goto	u4440
  3745  001046                     u4441:
  3746  001046  EF2B  F008         	goto	l3817
  3747  00104A                     u4440:
  3748  00104A                     
  3749                           ; BSR set to: 0
  3750  00104A  C09E  F07E         	movff	efgtoa@e,efgtoa@ne
  3751  00104E  C09F  F07F         	movff	efgtoa@e+1,efgtoa@ne+1
  3752  001052  EF2F  F008         	goto	l963
  3753  001056                     l3817:
  3754                           
  3755                           ; BSR set to: 0
  3756  001056  0E00               	movlw	0
  3757  001058  6F7F               	movwf	(efgtoa@ne+1)& (0+255),b
  3758  00105A  0E00               	movlw	0
  3759  00105C  6F7E               	movwf	efgtoa@ne& (0+255),b
  3760  00105E                     l963:
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3764  00105E  0E00               	movlw	0
  3765  001060  6F7D               	movwf	(efgtoa@pp+1)& (0+255),b
  3766  001062  0E00               	movlw	0
  3767  001064  6F7C               	movwf	efgtoa@pp& (0+255),b
  3768                           
  3769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3770  001066  0E00               	movlw	0
  3771  001068  6F7B               	movwf	(efgtoa@t+1)& (0+255),b
  3772  00106A  0E00               	movlw	0
  3773  00106C  6F7A               	movwf	efgtoa@t& (0+255),b
  3774                           
  3775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3776  00106E  0E00               	movlw	0
  3777  001070  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  3778  001072  0E00               	movlw	0
  3779  001074  6F98               	movwf	efgtoa@i& (0+255),b
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3782  001076  EF2A  F009         	goto	l3867
  3783  00107A                     l3819:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3787  00107A  C090  F02E         	movff	efgtoa@h,___fldiv@b
  3788  00107E  C091  F02F         	movff	efgtoa@h+1,___fldiv@b+1
  3789  001082  C092  F030         	movff	efgtoa@h+2,___fldiv@b+2
  3790  001086  C093  F031         	movff	efgtoa@h+3,___fldiv@b+3
  3791  00108A  C0A2  F032         	movff	efgtoa@u,___fldiv@a
  3792  00108E  C0A3  F033         	movff	efgtoa@u+1,___fldiv@a+1
  3793  001092  C0A4  F034         	movff	efgtoa@u+2,___fldiv@a+2
  3794  001096  C0A5  F035         	movff	efgtoa@u+3,___fldiv@a+3
  3795  00109A  EC64  F013         	call	___fldiv	;wreg free
  3796  00109E  C02E  F047         	movff	?___fldiv,floorf@x
  3797  0010A2  C02F  F048         	movff	?___fldiv+1,floorf@x+1
  3798  0010A6  C030  F049         	movff	?___fldiv+2,floorf@x+2
  3799  0010AA  C031  F04A         	movff	?___fldiv+3,floorf@x+3
  3800  0010AE  EC31  F015         	call	_floorf	;wreg free
  3801  0010B2  C047  F094         	movff	?_floorf,efgtoa@l
  3802  0010B6  C048  F095         	movff	?_floorf+1,efgtoa@l+1
  3803  0010BA  C049  F096         	movff	?_floorf+2,efgtoa@l+2
  3804  0010BE  C04A  F097         	movff	?_floorf+3,efgtoa@l+3
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3807  0010C2  C094  F057         	movff	efgtoa@l,___fltol@f1
  3808  0010C6  C095  F058         	movff	efgtoa@l+1,___fltol@f1+1
  3809  0010CA  C096  F059         	movff	efgtoa@l+2,___fltol@f1+2
  3810  0010CE  C097  F05A         	movff	efgtoa@l+3,___fltol@f1+3
  3811  0010D2  ECDC  F017         	call	___fltol	;wreg free
  3812  0010D6  C057  F086         	movff	?___fltol,efgtoa@d
  3813  0010DA  C058  F087         	movff	?___fltol+1,efgtoa@d+1
  3814  0010DE                     
  3815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3816  0010DE  0100               	movlb	0	; () banked
  3817  0010E0  B9F8               	btfsc	_flags& (0+255),4,b
  3818  0010E2  EF75  F008         	goto	u4451
  3819  0010E6  EF77  F008         	goto	u4450
  3820  0010EA                     u4451:
  3821  0010EA  EF94  F008         	goto	l3831
  3822  0010EE                     u4450:
  3823  0010EE                     
  3824                           ; BSR set to: 0
  3825  0010EE  5186               	movf	efgtoa@d& (0+255),w,b
  3826  0010F0  1187               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3827  0010F2  A4D8               	btfss	status,2,c
  3828  0010F4  EF7E  F008         	goto	u4461
  3829  0010F8  EF80  F008         	goto	u4460
  3830  0010FC                     u4461:
  3831  0010FC  EF94  F008         	goto	l3831
  3832  001100                     u4460:
  3833  001100                     
  3834                           ; BSR set to: 0
  3835  001100  0E67               	movlw	103
  3836  001102  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3837  001104  A4D8               	btfss	status,2,c
  3838  001106  EF87  F008         	goto	u4471
  3839  00110A  EF89  F008         	goto	u4470
  3840  00110E                     u4471:
  3841  00110E  EF94  F008         	goto	l3831
  3842  001112                     u4470:
  3843  001112                     
  3844                           ; BSR set to: 0
  3845  001112  BF7F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3846  001114  EF90  F008         	goto	u4480
  3847  001118  EF8E  F008         	goto	u4481
  3848  00111C                     u4481:
  3849  00111C  EF94  F008         	goto	l3831
  3850  001120                     u4480:
  3851  001120                     
  3852                           ; BSR set to: 0
  3853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3854  001120  4B7A               	infsnz	efgtoa@t& (0+255),f,b
  3855  001122  2B7B               	incf	(efgtoa@t+1)& (0+255),f,b
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3858  001124  EFDE  F008         	goto	l3859
  3859  001128                     l3831:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3863  001128  517C               	movf	efgtoa@pp& (0+255),w,b
  3864  00112A  117D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3865  00112C  A4D8               	btfss	status,2,c
  3866  00112E  EF9B  F008         	goto	u4491
  3867  001132  EF9D  F008         	goto	u4490
  3868  001136                     u4491:
  3869  001136  EFC7  F008         	goto	l3851
  3870  00113A                     u4490:
  3871  00113A                     
  3872                           ; BSR set to: 0
  3873  00113A  BF7F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3874  00113C  EFA4  F008         	goto	u4500
  3875  001140  EFA2  F008         	goto	u4501
  3876  001144                     u4501:
  3877  001144  EFC7  F008         	goto	l3851
  3878  001148                     u4500:
  3879  001148                     
  3880                           ; BSR set to: 0
  3881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3882  001148  0E00               	movlw	low _dbuf
  3883  00114A  25A0               	addwf	efgtoa@n& (0+255),w,b
  3884  00114C  6ED9               	movwf	fsr2l,c
  3885  00114E  0E01               	movlw	high _dbuf
  3886  001150  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3887  001152  6EDA               	movwf	fsr2h,c
  3888  001154  0E2E               	movlw	46
  3889  001156  6EDF               	movwf	indf2,c
  3890  001158                     
  3891                           ; BSR set to: 0
  3892  001158  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  3893  00115A  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  3894  00115C                     
  3895                           ; BSR set to: 0
  3896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3897  00115C  078C               	decf	efgtoa@w& (0+255),f,b
  3898  00115E  A0D8               	btfss	status,0,c
  3899  001160  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  3900  001162                     
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3903  001162  0E00               	movlw	0
  3904  001164  6F7D               	movwf	(efgtoa@pp+1)& (0+255),b
  3905  001166  0E01               	movlw	1
  3906  001168  6F7C               	movwf	efgtoa@pp& (0+255),b
  3907  00116A  EFC7  F008         	goto	l3851
  3908  00116E                     l3843:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3912  00116E  0E00               	movlw	low _dbuf
  3913  001170  25A0               	addwf	efgtoa@n& (0+255),w,b
  3914  001172  6ED9               	movwf	fsr2l,c
  3915  001174  0E01               	movlw	high _dbuf
  3916  001176  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3917  001178  6EDA               	movwf	fsr2h,c
  3918  00117A  0E30               	movlw	48
  3919  00117C  6EDF               	movwf	indf2,c
  3920  00117E                     
  3921                           ; BSR set to: 0
  3922  00117E  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  3923  001180  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  3924  001182                     
  3925                           ; BSR set to: 0
  3926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3927  001182  078C               	decf	efgtoa@w& (0+255),f,b
  3928  001184  A0D8               	btfss	status,0,c
  3929  001186  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  3930  001188                     
  3931                           ; BSR set to: 0
  3932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3933  001188  077A               	decf	efgtoa@t& (0+255),f,b
  3934  00118A  A0D8               	btfss	status,0,c
  3935  00118C  077B               	decf	(efgtoa@t+1)& (0+255),f,b
  3936  00118E                     l3851:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3940  00118E  517A               	movf	efgtoa@t& (0+255),w,b
  3941  001190  117B               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3942  001192  A4D8               	btfss	status,2,c
  3943  001194  EFCE  F008         	goto	u4511
  3944  001198  EFD0  F008         	goto	u4510
  3945  00119C                     u4511:
  3946  00119C  EFB7  F008         	goto	l3843
  3947  0011A0                     u4510:
  3948  0011A0                     
  3949                           ; BSR set to: 0
  3950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3951  0011A0  0E00               	movlw	low _dbuf
  3952  0011A2  25A0               	addwf	efgtoa@n& (0+255),w,b
  3953  0011A4  6ED9               	movwf	fsr2l,c
  3954  0011A6  0E01               	movlw	high _dbuf
  3955  0011A8  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3956  0011AA  6EDA               	movwf	fsr2h,c
  3957  0011AC  5186               	movf	efgtoa@d& (0+255),w,b
  3958  0011AE  0F30               	addlw	48
  3959  0011B0  6EDF               	movwf	indf2,c
  3960  0011B2                     
  3961                           ; BSR set to: 0
  3962  0011B2  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  3963  0011B4  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  3964  0011B6                     
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3967  0011B6  078C               	decf	efgtoa@w& (0+255),f,b
  3968  0011B8  A0D8               	btfss	status,0,c
  3969  0011BA  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  3970  0011BC                     l3859:
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3974  0011BC  C090  F057         	movff	efgtoa@h,___flsub@b
  3975  0011C0  C091  F058         	movff	efgtoa@h+1,___flsub@b+1
  3976  0011C4  C092  F059         	movff	efgtoa@h+2,___flsub@b+2
  3977  0011C8  C093  F05A         	movff	efgtoa@h+3,___flsub@b+3
  3978  0011CC  C0A2  F019         	movff	efgtoa@u,___flmul@a
  3979  0011D0  C0A3  F01A         	movff	efgtoa@u+1,___flmul@a+1
  3980  0011D4  C0A4  F01B         	movff	efgtoa@u+2,___flmul@a+2
  3981  0011D8  C0A5  F01C         	movff	efgtoa@u+3,___flmul@a+3
  3982  0011DC  C094  F015         	movff	efgtoa@l,___flmul@b
  3983  0011E0  C095  F016         	movff	efgtoa@l+1,___flmul@b+1
  3984  0011E4  C096  F017         	movff	efgtoa@l+2,___flmul@b+2
  3985  0011E8  C097  F018         	movff	efgtoa@l+3,___flmul@b+3
  3986  0011EC  EC4F  F011         	call	___flmul	;wreg free
  3987  0011F0  C015  F05B         	movff	?___flmul,___flsub@a
  3988  0011F4  C016  F05C         	movff	?___flmul+1,___flsub@a+1
  3989  0011F8  C017  F05D         	movff	?___flmul+2,___flsub@a+2
  3990  0011FC  C018  F05E         	movff	?___flmul+3,___flsub@a+3
  3991  001200  ECFA  F01D         	call	___flsub	;wreg free
  3992  001204  C057  F090         	movff	?___flsub,efgtoa@h
  3993  001208  C058  F091         	movff	?___flsub+1,efgtoa@h+1
  3994  00120C  C059  F092         	movff	?___flsub+2,efgtoa@h+2
  3995  001210  C05A  F093         	movff	?___flsub+3,efgtoa@h+3
  3996  001214                     
  3997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3998  001214  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  3999  001218  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  4000  00121C  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  4001  001220  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  4002  001224  0E00               	movlw	0
  4003  001226  6E32               	movwf	___fldiv@a^0,c
  4004  001228  0E00               	movlw	0
  4005  00122A  6E33               	movwf	(___fldiv@a+1)^0,c
  4006  00122C  0E20               	movlw	32
  4007  00122E  6E34               	movwf	(___fldiv@a+2)^0,c
  4008  001230  0E41               	movlw	65
  4009  001232  6E35               	movwf	(___fldiv@a+3)^0,c
  4010  001234  EC64  F013         	call	___fldiv	;wreg free
  4011  001238  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  4012  00123C  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  4013  001240  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  4014  001244  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  4015  001248                     
  4016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4017  001248  0100               	movlb	0	; () banked
  4018  00124A  077E               	decf	efgtoa@ne& (0+255),f,b
  4019  00124C  A0D8               	btfss	status,0,c
  4020  00124E  077F               	decf	(efgtoa@ne+1)& (0+255),f,b
  4021  001250                     
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4024  001250  4B98               	infsnz	efgtoa@i& (0+255),f,b
  4025  001252  2B99               	incf	(efgtoa@i+1)& (0+255),f,b
  4026  001254                     l3867:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4030  001254  5180               	movf	efgtoa@m& (0+255),w,b
  4031  001256  5D98               	subwf	efgtoa@i& (0+255),w,b
  4032  001258  5199               	movf	(efgtoa@i+1)& (0+255),w,b
  4033  00125A  0A80               	xorlw	128
  4034  00125C  6F69               	movwf	??_efgtoa& (0+255),b
  4035  00125E  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  4036  001260  0A80               	xorlw	128
  4037  001262  5969               	subwfb	??_efgtoa& (0+255),w,b
  4038  001264  B0D8               	btfsc	status,0,c
  4039  001266  EF37  F009         	goto	u4521
  4040  00126A  EF39  F009         	goto	u4520
  4041  00126E                     u4521:
  4042  00126E  EF47  F009         	goto	l3871
  4043  001272                     u4520:
  4044  001272                     
  4045                           ; BSR set to: 0
  4046  001272  BFA1               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4047  001274  EF45  F009         	goto	u4531
  4048  001278  51A1               	movf	(efgtoa@n+1)& (0+255),w,b
  4049  00127A  E109               	bnz	u4530
  4050  00127C  0E4B               	movlw	75
  4051  00127E  5DA0               	subwf	efgtoa@n& (0+255),w,b
  4052  001280  A0D8               	btfss	status,0,c
  4053  001282  EF45  F009         	goto	u4531
  4054  001286  EF47  F009         	goto	u4530
  4055  00128A                     u4531:
  4056  00128A  EF3D  F008         	goto	l3819
  4057  00128E                     u4530:
  4058  00128E                     l3871:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4062  00128E  517C               	movf	efgtoa@pp& (0+255),w,b
  4063  001290  117D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4064  001292  A4D8               	btfss	status,2,c
  4065  001294  EF4E  F009         	goto	u4541
  4066  001298  EF50  F009         	goto	u4540
  4067  00129C                     u4541:
  4068  00129C  EF61  F009         	goto	l3879
  4069  0012A0                     u4540:
  4070  0012A0                     
  4071                           ; BSR set to: 0
  4072  0012A0  A9F8               	btfss	_flags& (0+255),4,b
  4073  0012A2  EF55  F009         	goto	u4551
  4074  0012A6  EF57  F009         	goto	u4550
  4075  0012AA                     u4551:
  4076  0012AA  EF61  F009         	goto	l3879
  4077  0012AE                     u4550:
  4078  0012AE                     
  4079                           ; BSR set to: 0
  4080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4081  0012AE  0E00               	movlw	low _dbuf
  4082  0012B0  25A0               	addwf	efgtoa@n& (0+255),w,b
  4083  0012B2  6ED9               	movwf	fsr2l,c
  4084  0012B4  0E01               	movlw	high _dbuf
  4085  0012B6  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4086  0012B8  6EDA               	movwf	fsr2h,c
  4087  0012BA  0E2E               	movlw	46
  4088  0012BC  6EDF               	movwf	indf2,c
  4089  0012BE                     
  4090                           ; BSR set to: 0
  4091  0012BE  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  4092  0012C0  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  4093  0012C2                     l3879:
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4097  0012C2  0E00               	movlw	low _dbuf
  4098  0012C4  25A0               	addwf	efgtoa@n& (0+255),w,b
  4099  0012C6  6ED9               	movwf	fsr2l,c
  4100  0012C8  0E01               	movlw	high _dbuf
  4101  0012CA  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4102  0012CC  6EDA               	movwf	fsr2h,c
  4103  0012CE  0E00               	movlw	0
  4104  0012D0  6EDF               	movwf	indf2,c
  4105  0012D2                     
  4106                           ; BSR set to: 0
  4107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4108  0012D2  0E65               	movlw	101
  4109  0012D4  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  4110  0012D6  A4D8               	btfss	status,2,c
  4111  0012D8  EF70  F009         	goto	u4561
  4112  0012DC  EF72  F009         	goto	u4560
  4113  0012E0                     u4561:
  4114  0012E0  EFCC  F004         	goto	l3681
  4115  0012E4                     u4560:
  4116  0012E4                     
  4117                           ; BSR set to: 0
  4118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4119  0012E4  0E00               	movlw	0
  4120  0012E6  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  4121  0012E8  0E4F               	movlw	79
  4122  0012EA  6F98               	movwf	efgtoa@i& (0+255),b
  4123  0012EC                     
  4124                           ; BSR set to: 0
  4125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4126  0012EC  0E00               	movlw	low _dbuf
  4127  0012EE  2598               	addwf	efgtoa@i& (0+255),w,b
  4128  0012F0  6ED9               	movwf	fsr2l,c
  4129  0012F2  0E01               	movlw	high _dbuf
  4130  0012F4  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4131  0012F6  6EDA               	movwf	fsr2h,c
  4132  0012F8  0E00               	movlw	0
  4133  0012FA  6EDF               	movwf	indf2,c
  4134  0012FC                     
  4135                           ; BSR set to: 0
  4136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4137  0012FC  0E00               	movlw	0
  4138  0012FE  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  4139  001300  0E00               	movlw	0
  4140  001302  6F88               	movwf	efgtoa@sign& (0+255),b
  4141  001304                     
  4142                           ; BSR set to: 0
  4143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4144  001304  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4145  001306  EF89  F009         	goto	u4570
  4146  00130A  EF87  F009         	goto	u4571
  4147  00130E                     u4571:
  4148  00130E  EF91  F009         	goto	l3895
  4149  001312                     u4570:
  4150  001312                     
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4153  001312  0E00               	movlw	0
  4154  001314  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  4155  001316  0E01               	movlw	1
  4156  001318  6F88               	movwf	efgtoa@sign& (0+255),b
  4157  00131A                     
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4160  00131A  6D9E               	negf	efgtoa@e& (0+255),b
  4161  00131C  1F9F               	comf	(efgtoa@e+1)& (0+255),f,b
  4162  00131E  B0D8               	btfsc	status,0,c
  4163  001320  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  4164  001322                     l3895:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4168  001322  0E00               	movlw	0
  4169  001324  6F8B               	movwf	(efgtoa@p+1)& (0+255),b
  4170  001326  0E02               	movlw	2
  4171  001328  6F8A               	movwf	efgtoa@p& (0+255),b
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4174  00132A  EFC2  F009         	goto	l3907
  4175  00132E                     l3897:
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4179  00132E  0798               	decf	efgtoa@i& (0+255),f,b
  4180  001330  A0D8               	btfss	status,0,c
  4181  001332  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  4182  001334                     
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4185  001334  0E00               	movlw	low _dbuf
  4186  001336  2598               	addwf	efgtoa@i& (0+255),w,b
  4187  001338  6ED9               	movwf	fsr2l,c
  4188  00133A  0E01               	movlw	high _dbuf
  4189  00133C  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4190  00133E  6EDA               	movwf	fsr2h,c
  4191  001340  C09E  F001         	movff	efgtoa@e,___awmod@dividend
  4192  001344  C09F  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4193  001348  0E00               	movlw	0
  4194  00134A  6E04               	movwf	(___awmod@divisor+1)^0,c
  4195  00134C  0E0A               	movlw	10
  4196  00134E  6E03               	movwf	___awmod@divisor^0,c
  4197  001350  EC75  F01B         	call	___awmod	;wreg free
  4198  001354  5001               	movf	?___awmod^0,w,c
  4199  001356  0F30               	addlw	48
  4200  001358  6EDF               	movwf	indf2,c
  4201  00135A                     
  4202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4203  00135A  C09E  F001         	movff	efgtoa@e,___awdiv@dividend
  4204  00135E  C09F  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4205  001362  0E00               	movlw	0
  4206  001364  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4207  001366  0E0A               	movlw	10
  4208  001368  6E03               	movwf	___awdiv@divisor^0,c
  4209  00136A  EC13  F01B         	call	___awdiv	;wreg free
  4210  00136E  C001  F09E         	movff	?___awdiv,efgtoa@e
  4211  001372  C002  F09F         	movff	?___awdiv+1,efgtoa@e+1
  4212  001376                     
  4213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4214  001376  0100               	movlb	0	; () banked
  4215  001378  078A               	decf	efgtoa@p& (0+255),f,b
  4216  00137A  A0D8               	btfss	status,0,c
  4217  00137C  078B               	decf	(efgtoa@p+1)& (0+255),f,b
  4218  00137E                     
  4219                           ; BSR set to: 0
  4220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4221  00137E  078C               	decf	efgtoa@w& (0+255),f,b
  4222  001380  A0D8               	btfss	status,0,c
  4223  001382  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  4224  001384                     l3907:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4228  001384  519E               	movf	efgtoa@e& (0+255),w,b
  4229  001386  119F               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4230  001388  A4D8               	btfss	status,2,c
  4231  00138A  EFC9  F009         	goto	u4581
  4232  00138E  EFCB  F009         	goto	u4580
  4233  001392                     u4581:
  4234  001392  EF97  F009         	goto	l3897
  4235  001396                     u4580:
  4236  001396                     
  4237                           ; BSR set to: 0
  4238  001396  BF8B               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4239  001398  EFD8  F009         	goto	u4590
  4240  00139C  518B               	movf	(efgtoa@p+1)& (0+255),w,b
  4241  00139E  E106               	bnz	u4591
  4242  0013A0  058A               	decf	efgtoa@p& (0+255),w,b
  4243  0013A2  B0D8               	btfsc	status,0,c
  4244  0013A4  EFD6  F009         	goto	u4591
  4245  0013A8  EFD8  F009         	goto	u4590
  4246  0013AC                     u4591:
  4247  0013AC  EF97  F009         	goto	l3897
  4248  0013B0                     u4590:
  4249  0013B0                     
  4250                           ; BSR set to: 0
  4251                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4252  0013B0  0798               	decf	efgtoa@i& (0+255),f,b
  4253  0013B2  A0D8               	btfss	status,0,c
  4254  0013B4  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  4255  0013B6                     
  4256                           ; BSR set to: 0
  4257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4258  0013B6  5188               	movf	efgtoa@sign& (0+255),w,b
  4259  0013B8  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4260  0013BA  A4D8               	btfss	status,2,c
  4261  0013BC  EFE2  F009         	goto	u4601
  4262  0013C0  EFE4  F009         	goto	u4600
  4263  0013C4                     u4601:
  4264  0013C4  EFEA  F009         	goto	l3917
  4265  0013C8                     u4600:
  4266  0013C8                     
  4267                           ; BSR set to: 0
  4268  0013C8  0E00               	movlw	0
  4269  0013CA  6F75               	movwf	(_efgtoa$997+1)& (0+255),b
  4270  0013CC  0E2B               	movlw	43
  4271  0013CE  6F74               	movwf	_efgtoa$997& (0+255),b
  4272  0013D0  EFEE  F009         	goto	l3919
  4273  0013D4                     l3917:
  4274                           
  4275                           ; BSR set to: 0
  4276  0013D4  0E00               	movlw	0
  4277  0013D6  6F75               	movwf	(_efgtoa$997+1)& (0+255),b
  4278  0013D8  0E2D               	movlw	45
  4279  0013DA  6F74               	movwf	_efgtoa$997& (0+255),b
  4280  0013DC                     l3919:
  4281                           
  4282                           ; BSR set to: 0
  4283  0013DC  0E00               	movlw	low _dbuf
  4284  0013DE  2598               	addwf	efgtoa@i& (0+255),w,b
  4285  0013E0  6ED9               	movwf	fsr2l,c
  4286  0013E2  0E01               	movlw	high _dbuf
  4287  0013E4  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4288  0013E6  6EDA               	movwf	fsr2h,c
  4289  0013E8  C074  FFDF         	movff	_efgtoa$997,indf2
  4290  0013EC                     
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4293  0013EC  078C               	decf	efgtoa@w& (0+255),f,b
  4294  0013EE  A0D8               	btfss	status,0,c
  4295  0013F0  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  4296  0013F2                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4299  0013F2  0798               	decf	efgtoa@i& (0+255),f,b
  4300  0013F4  A0D8               	btfss	status,0,c
  4301  0013F6  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  4302  0013F8                     
  4303                           ; BSR set to: 0
  4304  0013F8  0EBF               	movlw	191
  4305  0013FA  6F69               	movwf	??_efgtoa& (0+255),b
  4306  0013FC  0EFF               	movlw	255
  4307  0013FE  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  4308  001400  5168               	movf	efgtoa@c& (0+255),w,b
  4309  001402  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  4310  001404  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  4311  001406  5169               	movf	??_efgtoa& (0+255),w,b
  4312  001408  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  4313  00140A  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  4314  00140C  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4315  00140E  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  4316  001410  E10A               	bnz	u4610
  4317  001412  0E1A               	movlw	26
  4318  001414  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  4319  001416  A0D8               	btfss	status,0,c
  4320  001418  EF10  F00A         	goto	u4611
  4321  00141C  EF13  F00A         	goto	u4610
  4322  001420                     u4611:
  4323  001420  0E01               	movlw	1
  4324  001422  EF14  F00A         	goto	u4620
  4325  001426                     u4610:
  4326  001426  0E00               	movlw	0
  4327  001428                     u4620:
  4328  001428  6F78               	movwf	_efgtoa$999& (0+255),b
  4329  00142A  6B79               	clrf	(_efgtoa$999+1)& (0+255),b
  4330  00142C                     
  4331                           ; BSR set to: 0
  4332  00142C  5178               	movf	_efgtoa$999& (0+255),w,b
  4333  00142E  1179               	iorwf	(_efgtoa$999+1)& (0+255),w,b
  4334  001430  A4D8               	btfss	status,2,c
  4335  001432  EF1D  F00A         	goto	u4631
  4336  001436  EF1F  F00A         	goto	u4630
  4337  00143A                     u4631:
  4338  00143A  EF25  F00A         	goto	l3933
  4339  00143E                     u4630:
  4340  00143E                     
  4341                           ; BSR set to: 0
  4342  00143E  0E00               	movlw	0
  4343  001440  6F77               	movwf	(_efgtoa$998+1)& (0+255),b
  4344  001442  0E65               	movlw	101
  4345  001444  6F76               	movwf	_efgtoa$998& (0+255),b
  4346  001446  EF29  F00A         	goto	l3935
  4347  00144A                     l3933:
  4348                           
  4349                           ; BSR set to: 0
  4350  00144A  0E00               	movlw	0
  4351  00144C  6F77               	movwf	(_efgtoa$998+1)& (0+255),b
  4352  00144E  0E45               	movlw	69
  4353  001450  6F76               	movwf	_efgtoa$998& (0+255),b
  4354  001452                     l3935:
  4355                           
  4356                           ; BSR set to: 0
  4357  001452  0E00               	movlw	low _dbuf
  4358  001454  2598               	addwf	efgtoa@i& (0+255),w,b
  4359  001456  6ED9               	movwf	fsr2l,c
  4360  001458  0E01               	movlw	high _dbuf
  4361  00145A  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4362  00145C  6EDA               	movwf	fsr2h,c
  4363  00145E  C076  FFDF         	movff	_efgtoa$998,indf2
  4364  001462                     
  4365                           ; BSR set to: 0
  4366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4367  001462  078C               	decf	efgtoa@w& (0+255),f,b
  4368  001464  A0D8               	btfss	status,0,c
  4369  001466  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  4370  001468                     
  4371                           ; BSR set to: 0
  4372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4373  001468  0E00               	movlw	low _dbuf
  4374  00146A  25A0               	addwf	efgtoa@n& (0+255),w,b
  4375  00146C  6E01               	movwf	strcpy@dest^0,c
  4376  00146E  0E01               	movlw	high _dbuf
  4377  001470  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4378  001472  6E02               	movwf	(strcpy@dest+1)^0,c
  4379  001474  0E00               	movlw	low _dbuf
  4380  001476  2598               	addwf	efgtoa@i& (0+255),w,b
  4381  001478  6E03               	movwf	strcpy@src^0,c
  4382  00147A  0E01               	movlw	high _dbuf
  4383  00147C  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4384  00147E  6E04               	movwf	(strcpy@src+1)^0,c
  4385  001480  ECE5  F01C         	call	_strcpy	;wreg free
  4386  001484  EFCC  F004         	goto	l3681
  4387  001488                     l917:
  4388  001488  0012               	return		;funcret
  4389  00148A                     __end_of_efgtoa:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function _tolower *****************
  4393 ;; Defined at:
  4394 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  c               2    6[COMRAM] int 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  2    6[COMRAM] int 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4408 ;;      Params:         2       0       0       0       0       0       0       0       0
  4409 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4410 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4411 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4412 ;;Total ram usage:        8 bytes
  4413 ;; Hardware stack levels used: 1
  4414 ;; Hardware stack levels required when called: 1
  4415 ;; This function calls:
  4416 ;;		_isupper
  4417 ;; This function is called by:
  4418 ;;		_efgtoa
  4419 ;;		_vfpfcnvrt
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           	psect	text6
  4424  00390C                     __ptext6:
  4425                           	callstack 0
  4426  00390C                     _tolower:
  4427                           	callstack 26
  4428  00390C  0EBF               	movlw	191
  4429  00390E  6E09               	movwf	??_tolower^0,c
  4430  003910  0EFF               	movlw	255
  4431  003912  6E0A               	movwf	(??_tolower+1)^0,c
  4432  003914  C007  F00B         	movff	tolower@c,??_tolower+2
  4433  003918  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4434  00391C  5009               	movf	??_tolower^0,w,c
  4435  00391E  260B               	addwf	(??_tolower+2)^0,f,c
  4436  003920  500A               	movf	(??_tolower+1)^0,w,c
  4437  003922  220C               	addwfc	(??_tolower+3)^0,f,c
  4438  003924  500C               	movf	(??_tolower+3)^0,w,c
  4439  003926  E10A               	bnz	u3910
  4440  003928  0E1A               	movlw	26
  4441  00392A  5C0B               	subwf	(??_tolower+2)^0,w,c
  4442  00392C  A0D8               	btfss	status,0,c
  4443  00392E  EF9B  F01C         	goto	u3911
  4444  003932  EF9E  F01C         	goto	u3910
  4445  003936                     u3911:
  4446  003936  0E01               	movlw	1
  4447  003938  EF9F  F01C         	goto	u3920
  4448  00393C                     u3910:
  4449  00393C  0E00               	movlw	0
  4450  00393E                     u3920:
  4451  00393E  6E0D               	movwf	_tolower$1146^0,c
  4452  003940  6A0E               	clrf	(_tolower$1146+1)^0,c
  4453  003942  500D               	movf	_tolower$1146^0,w,c
  4454  003944  100E               	iorwf	(_tolower$1146+1)^0,w,c
  4455  003946  B4D8               	btfsc	status,2,c
  4456  003948  EFA8  F01C         	goto	u3931
  4457  00394C  EFAA  F01C         	goto	u3930
  4458  003950                     u3931:
  4459  003950  EFB1  F01C         	goto	l1159
  4460  003954                     u3930:
  4461  003954  0E20               	movlw	32
  4462  003956  1007               	iorwf	tolower@c^0,w,c
  4463  003958  6E07               	movwf	?_tolower^0,c
  4464  00395A  5008               	movf	(tolower@c+1)^0,w,c
  4465  00395C  6E08               	movwf	(?_tolower+1)^0,c
  4466  00395E  EFB5  F01C         	goto	l1164
  4467  003962                     l1159:
  4468  003962  C007  F007         	movff	tolower@c,?_tolower
  4469  003966  C008  F008         	movff	tolower@c+1,?_tolower+1
  4470  00396A                     l1164:
  4471  00396A  0012               	return		;funcret
  4472  00396C                     __end_of_tolower:
  4473                           	callstack 0
  4474                           
  4475 ;; *************** function _isupper *****************
  4476 ;; Defined at:
  4477 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  c               2    0[COMRAM] int 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  2    0[COMRAM] int 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4491 ;;      Params:         2       0       0       0       0       0       0       0       0
  4492 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4493 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4494 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4495 ;;Total ram usage:        6 bytes
  4496 ;; Hardware stack levels used: 1
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_efgtoa
  4501 ;;		_vfpfcnvrt
  4502 ;;		_tolower
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text7
  4507  003D02                     __ptext7:
  4508                           	callstack 0
  4509  003D02                     _isupper:
  4510                           	callstack 26
  4511  003D02  0EBF               	movlw	191
  4512  003D04  6E03               	movwf	??_isupper^0,c
  4513  003D06  0EFF               	movlw	255
  4514  003D08  6E04               	movwf	(??_isupper+1)^0,c
  4515  003D0A  C001  F005         	movff	isupper@c,??_isupper+2
  4516  003D0E  C002  F006         	movff	isupper@c+1,??_isupper+3
  4517  003D12  5003               	movf	??_isupper^0,w,c
  4518  003D14  2605               	addwf	(??_isupper+2)^0,f,c
  4519  003D16  5004               	movf	(??_isupper+1)^0,w,c
  4520  003D18  2206               	addwfc	(??_isupper+3)^0,f,c
  4521  003D1A  5006               	movf	(??_isupper+3)^0,w,c
  4522  003D1C  E10A               	bnz	u3060
  4523  003D1E  0E1A               	movlw	26
  4524  003D20  5C05               	subwf	(??_isupper+2)^0,w,c
  4525  003D22  A0D8               	btfss	status,0,c
  4526  003D24  EF96  F01E         	goto	u3061
  4527  003D28  EF99  F01E         	goto	u3060
  4528  003D2C                     u3061:
  4529  003D2C  0E01               	movlw	1
  4530  003D2E  EF9A  F01E         	goto	u3070
  4531  003D32                     u3060:
  4532  003D32  0E00               	movlw	0
  4533  003D34                     u3070:
  4534  003D34  6E01               	movwf	?_isupper^0,c
  4535  003D36  6A02               	clrf	(?_isupper+1)^0,c
  4536  003D38  0012               	return		;funcret
  4537  003D3A                     __end_of_isupper:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function _strcpy *****************
  4541 ;; Defined at:
  4542 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4545 ;;		 -> dbuf(80), 
  4546 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4547 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  4548 ;;		 -> dbuf(80), 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  d               2    8[COMRAM] PTR unsigned char 
  4551 ;;		 -> dbuf(80), 
  4552 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4553 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  4554 ;;		 -> dbuf(80), 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  2    0[COMRAM] PTR unsigned char 
  4557 ;; Registers used:
  4558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4564 ;;      Params:         4       0       0       0       0       0       0       0       0
  4565 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4566 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4567 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4568 ;;Total ram usage:       10 bytes
  4569 ;; Hardware stack levels used: 1
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_efgtoa
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text8
  4578  0039CA                     __ptext8:
  4579                           	callstack 0
  4580  0039CA                     _strcpy:
  4581                           	callstack 26
  4582  0039CA  C003  F007         	movff	strcpy@src,strcpy@s
  4583  0039CE  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4584  0039D2  C001  F009         	movff	strcpy@dest,strcpy@d
  4585  0039D6  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4586  0039DA                     l3565:
  4587  0039DA  5007               	movf	strcpy@s^0,w,c
  4588  0039DC  6E05               	movwf	??_strcpy^0,c
  4589  0039DE  5008               	movf	(strcpy@s+1)^0,w,c
  4590  0039E0  6E06               	movwf	(??_strcpy+1)^0,c
  4591  0039E2  4A07               	infsnz	strcpy@s^0,f,c
  4592  0039E4  2A08               	incf	(strcpy@s+1)^0,f,c
  4593  0039E6  C005  FFF6         	movff	??_strcpy,tblptrl
  4594  0039EA  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4595  0039EE  6AF8               	clrf	tblptru,c
  4596  0039F0  C009  FFD9         	movff	strcpy@d,fsr2l
  4597  0039F4  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4598  0039F8  4A09               	infsnz	strcpy@d^0,f,c
  4599  0039FA  2A0A               	incf	(strcpy@d+1)^0,f,c
  4600  0039FC  0E07               	movlw	(high __ramtop+-1)
  4601  0039FE  64F7               	cpfsgt	tblptrh,c
  4602  003A00  D003               	bra	u3897
  4603  003A02  0008               	tblrd		*
  4604  003A04  50F5               	movf	tablat,w,c
  4605  003A06  D005               	bra	u3890
  4606  003A08                     u3897:
  4607  003A08  CFF6 FFE1          	movff	tblptrl,fsr1l
  4608  003A0C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4609  003A10  50E7               	movf	indf1,w,c
  4610  003A12                     u3890:
  4611  003A12  6EDF               	movwf	indf2,c
  4612  003A14  50DF               	movf	indf2,w,c
  4613  003A16  A4D8               	btfss	status,2,c
  4614  003A18  EF10  F01D         	goto	u3901
  4615  003A1C  EF12  F01D         	goto	u3900
  4616  003A20                     u3901:
  4617  003A20  EFED  F01C         	goto	l3565
  4618  003A24                     u3900:
  4619  003A24  0012               	return		;funcret
  4620  003A26                     __end_of_strcpy:
  4621                           	callstack 0
  4622                           
  4623 ;; *************** function _pad *****************
  4624 ;; Defined at:
  4625 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4628 ;;		 -> sprintf@f(6), 
  4629 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4630 ;;		 -> dbuf(80), 
  4631 ;;  p               2   20[COMRAM] int 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  w               2   25[COMRAM] int 
  4634 ;;  i               2   23[COMRAM] int 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  2   16[COMRAM] int 
  4637 ;; Registers used:
  4638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4644 ;;      Params:         6       0       0       0       0       0       0       0       0
  4645 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4646 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4647 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4648 ;;Total ram usage:       11 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; Hardware stack levels required when called: 3
  4651 ;; This function calls:
  4652 ;;		_fputc
  4653 ;;		_fputs
  4654 ;;		_strlen
  4655 ;; This function is called by:
  4656 ;;		_efgtoa
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text9
  4661  003560                     __ptext9:
  4662                           	callstack 0
  4663  003560                     _pad:
  4664                           	callstack 23
  4665  003560                     
  4666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4667  003560  0100               	movlb	0	; () banked
  4668  003562  A1F8               	btfss	_flags& (0+255),0,b
  4669  003564  EFB6  F01A         	goto	u3781
  4670  003568  EFB8  F01A         	goto	u3780
  4671  00356C                     u3781:
  4672  00356C  EFC2  F01A         	goto	l3523
  4673  003570                     u3780:
  4674  003570                     
  4675                           ; BSR set to: 0
  4676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4677  003570  C013  F00A         	movff	pad@buf,fputs@s
  4678  003574  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4679  003578  C011  F00C         	movff	pad@fp,fputs@fp
  4680  00357C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4681  003580  EC3F  F01E         	call	_fputs	;wreg free
  4682  003584                     l3523:
  4683                           
  4684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4685  003584  BE16               	btfsc	(pad@p+1)^0,7,c
  4686  003586  EFC7  F01A         	goto	u3791
  4687  00358A  EFC9  F01A         	goto	u3790
  4688  00358E                     u3791:
  4689  00358E  EFCF  F01A         	goto	l3527
  4690  003592                     u3790:
  4691  003592  C015  F01A         	movff	pad@p,pad@w
  4692  003596  C016  F01B         	movff	pad@p+1,pad@w+1
  4693  00359A  EFD3  F01A         	goto	l894
  4694  00359E                     l3527:
  4695  00359E  0E00               	movlw	0
  4696  0035A0  6E1B               	movwf	(pad@w+1)^0,c
  4697  0035A2  0E00               	movlw	0
  4698  0035A4  6E1A               	movwf	pad@w^0,c
  4699  0035A6                     l894:
  4700                           
  4701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4702  0035A6  0E00               	movlw	0
  4703  0035A8  6E19               	movwf	(pad@i+1)^0,c
  4704  0035AA  0E00               	movlw	0
  4705  0035AC  6E18               	movwf	pad@i^0,c
  4706                           
  4707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4708  0035AE  EFE5  F01A         	goto	l3533
  4709  0035B2                     l3529:
  4710                           
  4711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4712  0035B2  0E00               	movlw	0
  4713  0035B4  6E02               	movwf	(fputc@c+1)^0,c
  4714  0035B6  0E20               	movlw	32
  4715  0035B8  6E01               	movwf	fputc@c^0,c
  4716  0035BA  C011  F003         	movff	pad@fp,fputc@fp
  4717  0035BE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4718  0035C2  EC4B  F01A         	call	_fputc	;wreg free
  4719  0035C6                     
  4720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4721  0035C6  4A18               	infsnz	pad@i^0,f,c
  4722  0035C8  2A19               	incf	(pad@i+1)^0,f,c
  4723  0035CA                     l3533:
  4724                           
  4725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4726  0035CA  501A               	movf	pad@w^0,w,c
  4727  0035CC  5C18               	subwf	pad@i^0,w,c
  4728  0035CE  5019               	movf	(pad@i+1)^0,w,c
  4729  0035D0  0A80               	xorlw	128
  4730  0035D2  6E17               	movwf	??_pad^0,c
  4731  0035D4  501B               	movf	(pad@w+1)^0,w,c
  4732  0035D6  0A80               	xorlw	128
  4733  0035D8  5817               	subwfb	??_pad^0,w,c
  4734  0035DA  A0D8               	btfss	status,0,c
  4735  0035DC  EFF2  F01A         	goto	u3801
  4736  0035E0  EFF4  F01A         	goto	u3800
  4737  0035E4                     u3801:
  4738  0035E4  EFD9  F01A         	goto	l3529
  4739  0035E8                     u3800:
  4740  0035E8                     
  4741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4742  0035E8  0100               	movlb	0	; () banked
  4743  0035EA  B1F8               	btfsc	_flags& (0+255),0,b
  4744  0035EC  EFFA  F01A         	goto	u3811
  4745  0035F0  EFFC  F01A         	goto	u3810
  4746  0035F4                     u3811:
  4747  0035F4  EF06  F01B         	goto	l3537
  4748  0035F8                     u3810:
  4749  0035F8                     
  4750                           ; BSR set to: 0
  4751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4752  0035F8  C013  F00A         	movff	pad@buf,fputs@s
  4753  0035FC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4754  003600  C011  F00C         	movff	pad@fp,fputs@fp
  4755  003604  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4756  003608  EC3F  F01E         	call	_fputs	;wreg free
  4757  00360C                     l3537:
  4758                           
  4759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4760  00360C  C013  F001         	movff	pad@buf,strlen@s
  4761  003610  C014  F002         	movff	pad@buf+1,strlen@s+1
  4762  003614  ECD5  F01E         	call	_strlen	;wreg free
  4763  003618  501A               	movf	pad@w^0,w,c
  4764  00361A  2401               	addwf	?_strlen^0,w,c
  4765  00361C  6E11               	movwf	?_pad^0,c
  4766  00361E  501B               	movf	(pad@w+1)^0,w,c
  4767  003620  2002               	addwfc	(?_strlen+1)^0,w,c
  4768  003622  6E12               	movwf	(?_pad+1)^0,c
  4769  003624  0012               	return		;funcret
  4770  003626                     __end_of_pad:
  4771                           	callstack 0
  4772                           
  4773 ;; *************** function _strlen *****************
  4774 ;; Defined at:
  4775 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4778 ;;		 -> dbuf(80), 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4781 ;;		 -> dbuf(80), 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  2    0[COMRAM] unsigned int 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4791 ;;      Params:         2       0       0       0       0       0       0       0       0
  4792 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4794 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4795 ;;Total ram usage:        4 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_pad
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text10
  4805  003DAA                     __ptext10:
  4806                           	callstack 0
  4807  003DAA                     _strlen:
  4808                           	callstack 25
  4809  003DAA  C001  F003         	movff	strlen@s,strlen@a
  4810  003DAE  C002  F004         	movff	strlen@s+1,strlen@a+1
  4811  003DB2  EFDD  F01E         	goto	l3059
  4812  003DB6                     l3057:
  4813  003DB6  4A01               	infsnz	strlen@s^0,f,c
  4814  003DB8  2A02               	incf	(strlen@s+1)^0,f,c
  4815  003DBA                     l3059:
  4816  003DBA  C001  FFD9         	movff	strlen@s,fsr2l
  4817  003DBE  C002  FFDA         	movff	strlen@s+1,fsr2h
  4818  003DC2  50DF               	movf	indf2,w,c
  4819  003DC4  A4D8               	btfss	status,2,c
  4820  003DC6  EFE7  F01E         	goto	u3051
  4821  003DCA  EFE9  F01E         	goto	u3050
  4822  003DCE                     u3051:
  4823  003DCE  EFDB  F01E         	goto	l3057
  4824  003DD2                     u3050:
  4825  003DD2  5003               	movf	strlen@a^0,w,c
  4826  003DD4  5C01               	subwf	strlen@s^0,w,c
  4827  003DD6  6E01               	movwf	?_strlen^0,c
  4828  003DD8  5004               	movf	(strlen@a+1)^0,w,c
  4829  003DDA  5802               	subwfb	(strlen@s+1)^0,w,c
  4830  003DDC  6E02               	movwf	(?_strlen+1)^0,c
  4831  003DDE  0012               	return		;funcret
  4832  003DE0                     __end_of_strlen:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function _fputs *****************
  4836 ;; Defined at:
  4837 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4840 ;;		 -> dbuf(80), 
  4841 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4842 ;;		 -> sprintf@f(6), 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  i               2   14[COMRAM] int 
  4845 ;;  c               1   13[COMRAM] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  2    9[COMRAM] int 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4855 ;;      Params:         4       0       0       0       0       0       0       0       0
  4856 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4858 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4859 ;;Total ram usage:        7 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 2
  4862 ;; This function calls:
  4863 ;;		_fputc
  4864 ;; This function is called by:
  4865 ;;		_pad
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text11
  4870  003C7E                     __ptext11:
  4871                           	callstack 0
  4872  003C7E                     _fputs:
  4873                           	callstack 23
  4874  003C7E  0E00               	movlw	0
  4875  003C80  6E10               	movwf	(fputs@i+1)^0,c
  4876  003C82  0E00               	movlw	0
  4877  003C84  6E0F               	movwf	fputs@i^0,c
  4878  003C86  EF50  F01E         	goto	l3053
  4879  003C8A                     l3049:
  4880  003C8A  C00E  F001         	movff	fputs@c,fputc@c
  4881  003C8E  6A02               	clrf	(fputc@c+1)^0,c
  4882  003C90  C00C  F003         	movff	fputs@fp,fputc@fp
  4883  003C94  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4884  003C98  EC4B  F01A         	call	_fputc	;wreg free
  4885  003C9C  4A0F               	infsnz	fputs@i^0,f,c
  4886  003C9E  2A10               	incf	(fputs@i+1)^0,f,c
  4887  003CA0                     l3053:
  4888  003CA0  500F               	movf	fputs@i^0,w,c
  4889  003CA2  240A               	addwf	fputs@s^0,w,c
  4890  003CA4  6ED9               	movwf	fsr2l,c
  4891  003CA6  5010               	movf	(fputs@i+1)^0,w,c
  4892  003CA8  200B               	addwfc	(fputs@s+1)^0,w,c
  4893  003CAA  6EDA               	movwf	fsr2h,c
  4894  003CAC  50DF               	movf	indf2,w,c
  4895  003CAE  6E0E               	movwf	fputs@c^0,c
  4896  003CB0  500E               	movf	fputs@c^0,w,c
  4897  003CB2  A4D8               	btfss	status,2,c
  4898  003CB4  EF5E  F01E         	goto	u3041
  4899  003CB8  EF60  F01E         	goto	u3040
  4900  003CBC                     u3041:
  4901  003CBC  EF45  F01E         	goto	l3049
  4902  003CC0                     u3040:
  4903  003CC0  0012               	return		;funcret
  4904  003CC2                     __end_of_fputs:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function _fputc *****************
  4908 ;; Defined at:
  4909 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  c               2    0[COMRAM] int 
  4912 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4913 ;;		 -> sprintf@f(6), 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;		None
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  2    0[COMRAM] int 
  4918 ;; Registers used:
  4919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4925 ;;      Params:         4       0       0       0       0       0       0       0       0
  4926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4927 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4928 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4929 ;;Total ram usage:        9 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 1
  4932 ;; This function calls:
  4933 ;;		_putch
  4934 ;; This function is called by:
  4935 ;;		_pad
  4936 ;;		_vfpfcnvrt
  4937 ;;		_fputs
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text12
  4942  003496                     __ptext12:
  4943                           	callstack 0
  4944  003496                     _fputc:
  4945                           	callstack 26
  4946  003496  5003               	movf	fputc@fp^0,w,c
  4947  003498  1004               	iorwf	(fputc@fp+1)^0,w,c
  4948  00349A  B4D8               	btfsc	status,2,c
  4949  00349C  EF52  F01A         	goto	u2611
  4950  0034A0  EF54  F01A         	goto	u2610
  4951  0034A4                     u2611:
  4952  0034A4  EF5D  F01A         	goto	l2835
  4953  0034A8                     u2610:
  4954  0034A8  5003               	movf	fputc@fp^0,w,c
  4955  0034AA  1004               	iorwf	(fputc@fp+1)^0,w,c
  4956  0034AC  A4D8               	btfss	status,2,c
  4957  0034AE  EF5B  F01A         	goto	u2621
  4958  0034B2  EF5D  F01A         	goto	u2620
  4959  0034B6                     u2621:
  4960  0034B6  EF62  F01A         	goto	l2837
  4961  0034BA                     u2620:
  4962  0034BA                     l2835:
  4963  0034BA  5001               	movf	fputc@c^0,w,c
  4964  0034BC  EC31  F01F         	call	_putch
  4965  0034C0  EFAF  F01A         	goto	l1122
  4966  0034C4                     l2837:
  4967  0034C4  EE20 F004          	lfsr	2,4
  4968  0034C8  5003               	movf	fputc@fp^0,w,c
  4969  0034CA  26D9               	addwf	fsr2l,f,c
  4970  0034CC  5004               	movf	(fputc@fp+1)^0,w,c
  4971  0034CE  22DA               	addwfc	fsr2h,f,c
  4972  0034D0  50DE               	movf	postinc2,w,c
  4973  0034D2  10DE               	iorwf	postinc2,w,c
  4974  0034D4  B4D8               	btfsc	status,2,c
  4975  0034D6  EF6F  F01A         	goto	u2631
  4976  0034DA  EF71  F01A         	goto	u2630
  4977  0034DE                     u2631:
  4978  0034DE  EF8C  F01A         	goto	l2841
  4979  0034E2                     u2630:
  4980  0034E2  EE20 F004          	lfsr	2,4
  4981  0034E6  5003               	movf	fputc@fp^0,w,c
  4982  0034E8  26D9               	addwf	fsr2l,f,c
  4983  0034EA  5004               	movf	(fputc@fp+1)^0,w,c
  4984  0034EC  22DA               	addwfc	fsr2h,f,c
  4985  0034EE  EE10 F002          	lfsr	1,2
  4986  0034F2  5003               	movf	fputc@fp^0,w,c
  4987  0034F4  26E1               	addwf	fsr1l,f,c
  4988  0034F6  5004               	movf	(fputc@fp+1)^0,w,c
  4989  0034F8  22E2               	addwfc	fsr1h,f,c
  4990  0034FA  50DE               	movf	postinc2,w,c
  4991  0034FC  5CE6               	subwf	postinc1,w,c
  4992  0034FE  50E6               	movf	postinc1,w,c
  4993  003500  0A80               	xorlw	128
  4994  003502  6E09               	movwf	(??_fputc+4)^0,c
  4995  003504  50DE               	movf	postinc2,w,c
  4996  003506  0A80               	xorlw	128
  4997  003508  5809               	subwfb	(??_fputc+4)^0,w,c
  4998  00350A  B0D8               	btfsc	status,0,c
  4999  00350C  EF8A  F01A         	goto	u2641
  5000  003510  EF8C  F01A         	goto	u2640
  5001  003514                     u2641:
  5002  003514  EFAF  F01A         	goto	l1122
  5003  003518                     u2640:
  5004  003518                     l2841:
  5005  003518  EE20 F002          	lfsr	2,2
  5006  00351C  5003               	movf	fputc@fp^0,w,c
  5007  00351E  26D9               	addwf	fsr2l,f,c
  5008  003520  5004               	movf	(fputc@fp+1)^0,w,c
  5009  003522  22DA               	addwfc	fsr2h,f,c
  5010  003524  CFDE F005          	movff	postinc2,??_fputc
  5011  003528  CFDD F006          	movff	postdec2,??_fputc+1
  5012  00352C  C003  FFD9         	movff	fputc@fp,fsr2l
  5013  003530  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5014  003534  CFDE F007          	movff	postinc2,??_fputc+2
  5015  003538  CFDD F008          	movff	postdec2,??_fputc+3
  5016  00353C  5005               	movf	??_fputc^0,w,c
  5017  00353E  2407               	addwf	(??_fputc+2)^0,w,c
  5018  003540  6ED9               	movwf	fsr2l,c
  5019  003542  5006               	movf	(??_fputc+1)^0,w,c
  5020  003544  2008               	addwfc	(??_fputc+3)^0,w,c
  5021  003546  6EDA               	movwf	fsr2h,c
  5022  003548  C001  FFDF         	movff	fputc@c,indf2
  5023  00354C  EE20 F002          	lfsr	2,2
  5024  003550  5003               	movf	fputc@fp^0,w,c
  5025  003552  26D9               	addwf	fsr2l,f,c
  5026  003554  5004               	movf	(fputc@fp+1)^0,w,c
  5027  003556  22DA               	addwfc	fsr2h,f,c
  5028  003558  2ADE               	incf	postinc2,f,c
  5029  00355A  0E00               	movlw	0
  5030  00355C  22DD               	addwfc	postdec2,f,c
  5031  00355E                     l1122:
  5032  00355E  0012               	return		;funcret
  5033  003560                     __end_of_fputc:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _putch *****************
  5037 ;; Defined at:
  5038 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  c               1    wreg     unsigned char 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  c               1    0[COMRAM] unsigned char 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5052 ;;      Params:         0       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_fputc
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text13
  5066  003E62                     __ptext13:
  5067                           	callstack 0
  5068  003E62                     _putch:
  5069                           	callstack 26
  5070  003E62  0012               	return		;funcret
  5071  003E64                     __end_of_putch:
  5072                           	callstack 0
  5073                           
  5074 ;; *************** function _floorf *****************
  5075 ;; Defined at:
  5076 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  x               4   70[COMRAM] float 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  u               4   86[COMRAM] struct .
  5081 ;;  m               4   80[COMRAM] unsigned long 
  5082 ;;  e               2   84[COMRAM] int 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  4   70[COMRAM] float 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2, status,0
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5092 ;;      Params:         4       0       0       0       0       0       0       0       0
  5093 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5094 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5095 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5096 ;;Total ram usage:       20 bytes
  5097 ;; Hardware stack levels used: 1
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_efgtoa
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text14
  5106  002A62                     __ptext14:
  5107                           	callstack 0
  5108  002A62                     _floorf:
  5109                           	callstack 26
  5110  002A62  C0DA  F057         	movff	floorf@F527,floorf@u
  5111  002A66  C0DB  F058         	movff	floorf@F527+1,floorf@u+1
  5112  002A6A  C0DC  F059         	movff	floorf@F527+2,floorf@u+2
  5113  002A6E  C0DD  F05A         	movff	floorf@F527+3,floorf@u+3
  5114  002A72  C047  F057         	movff	floorf@x,floorf@u
  5115  002A76  C048  F058         	movff	floorf@x+1,floorf@u+1
  5116  002A7A  C049  F059         	movff	floorf@x+2,floorf@u+2
  5117  002A7E  C04A  F05A         	movff	floorf@x+3,floorf@u+3
  5118  002A82  0E81               	movlw	129
  5119  002A84  6E4B               	movwf	??_floorf^0,c
  5120  002A86  0EFF               	movlw	255
  5121  002A88  6E4C               	movwf	(??_floorf+1)^0,c
  5122  002A8A  C057  F04D         	movff	floorf@u,??_floorf+2
  5123  002A8E  C058  F04E         	movff	floorf@u+1,??_floorf+3
  5124  002A92  C059  F04F         	movff	floorf@u+2,??_floorf+4
  5125  002A96  C05A  F050         	movff	floorf@u+3,??_floorf+5
  5126  002A9A  0E18               	movlw	24
  5127  002A9C  EF55  F015         	goto	u3940
  5128  002AA0                     u3945:
  5129  002AA0  90D8               	bcf	status,0,c
  5130  002AA2  3250               	rrcf	(??_floorf+5)^0,f,c
  5131  002AA4  324F               	rrcf	(??_floorf+4)^0,f,c
  5132  002AA6  324E               	rrcf	(??_floorf+3)^0,f,c
  5133  002AA8  324D               	rrcf	(??_floorf+2)^0,f,c
  5134  002AAA                     u3940:
  5135  002AAA  2EE8               	decfsz	wreg,f,c
  5136  002AAC  EF50  F015         	goto	u3945
  5137  002AB0  504D               	movf	(??_floorf+2)^0,w,c
  5138  002AB2  244B               	addwf	??_floorf^0,w,c
  5139  002AB4  6E55               	movwf	floorf@e^0,c
  5140  002AB6  0E00               	movlw	0
  5141  002AB8  204C               	addwfc	(??_floorf+1)^0,w,c
  5142  002ABA  6E56               	movwf	(floorf@e+1)^0,c
  5143  002ABC  BE56               	btfsc	(floorf@e+1)^0,7,c
  5144  002ABE  EF6A  F015         	goto	u3951
  5145  002AC2  5056               	movf	(floorf@e+1)^0,w,c
  5146  002AC4  E109               	bnz	u3950
  5147  002AC6  0E17               	movlw	23
  5148  002AC8  5C55               	subwf	floorf@e^0,w,c
  5149  002ACA  A0D8               	btfss	status,0,c
  5150  002ACC  EF6A  F015         	goto	u3951
  5151  002AD0  EF6C  F015         	goto	u3950
  5152  002AD4                     u3951:
  5153  002AD4  EF76  F015         	goto	l3583
  5154  002AD8                     u3950:
  5155  002AD8                     l3581:
  5156  002AD8  C047  F047         	movff	floorf@x,?_floorf
  5157  002ADC  C048  F048         	movff	floorf@x+1,?_floorf+1
  5158  002AE0  C049  F049         	movff	floorf@x+2,?_floorf+2
  5159  002AE4  C04A  F04A         	movff	floorf@x+3,?_floorf+3
  5160  002AE8  EF39  F016         	goto	l1083
  5161  002AEC                     l3583:
  5162  002AEC  BE56               	btfsc	(floorf@e+1)^0,7,c
  5163  002AEE  EF7B  F015         	goto	u3961
  5164  002AF2  EF7D  F015         	goto	u3960
  5165  002AF6                     u3961:
  5166  002AF6  EFED  F015         	goto	l3593
  5167  002AFA                     u3960:
  5168  002AFA  C055  F04B         	movff	floorf@e,??_floorf
  5169  002AFE  0EFF               	movlw	255
  5170  002B00  6E4C               	movwf	(??_floorf+1)^0,c
  5171  002B02  0EFF               	movlw	255
  5172  002B04  6E4D               	movwf	(??_floorf+2)^0,c
  5173  002B06  0E7F               	movlw	127
  5174  002B08  6E4E               	movwf	(??_floorf+3)^0,c
  5175  002B0A  0E00               	movlw	0
  5176  002B0C  6E4F               	movwf	(??_floorf+4)^0,c
  5177  002B0E                     u3975:
  5178  002B0E  664B               	tstfsz	??_floorf^0,c
  5179  002B10  EF8C  F015         	goto	u3976
  5180  002B14  EF94  F015         	goto	u3977
  5181  002B18                     u3976:
  5182  002B18  344F               	rlcf	(??_floorf+4)^0,w,c
  5183  002B1A  324F               	rrcf	(??_floorf+4)^0,f,c
  5184  002B1C  324E               	rrcf	(??_floorf+3)^0,f,c
  5185  002B1E  324D               	rrcf	(??_floorf+2)^0,f,c
  5186  002B20  324C               	rrcf	(??_floorf+1)^0,f,c
  5187  002B22  2E4B               	decfsz	??_floorf^0,f,c
  5188  002B24  EF87  F015         	goto	u3975
  5189  002B28                     u3977:
  5190  002B28  C04C  F051         	movff	??_floorf+1,floorf@m
  5191  002B2C  C04D  F052         	movff	??_floorf+2,floorf@m+1
  5192  002B30  C04E  F053         	movff	??_floorf+3,floorf@m+2
  5193  002B34  C04F  F054         	movff	??_floorf+4,floorf@m+3
  5194  002B38  5051               	movf	floorf@m^0,w,c
  5195  002B3A  1457               	andwf	floorf@u^0,w,c
  5196  002B3C  6E4B               	movwf	??_floorf^0,c
  5197  002B3E  5052               	movf	(floorf@m+1)^0,w,c
  5198  002B40  1458               	andwf	(floorf@u+1)^0,w,c
  5199  002B42  6E4C               	movwf	(??_floorf+1)^0,c
  5200  002B44  5053               	movf	(floorf@m+2)^0,w,c
  5201  002B46  1459               	andwf	(floorf@u+2)^0,w,c
  5202  002B48  6E4D               	movwf	(??_floorf+2)^0,c
  5203  002B4A  5054               	movf	(floorf@m+3)^0,w,c
  5204  002B4C  145A               	andwf	(floorf@u+3)^0,w,c
  5205  002B4E  6E4E               	movwf	(??_floorf+3)^0,c
  5206  002B50  504B               	movf	??_floorf^0,w,c
  5207  002B52  104C               	iorwf	(??_floorf+1)^0,w,c
  5208  002B54  104D               	iorwf	(??_floorf+2)^0,w,c
  5209  002B56  104E               	iorwf	(??_floorf+3)^0,w,c
  5210  002B58  A4D8               	btfss	status,2,c
  5211  002B5A  EFB1  F015         	goto	u3981
  5212  002B5E  EFB3  F015         	goto	u3980
  5213  002B62                     u3981:
  5214  002B62  EFB5  F015         	goto	l3589
  5215  002B66                     u3980:
  5216  002B66  EF6C  F015         	goto	l3581
  5217  002B6A                     l3589:
  5218  002B6A  C057  F04B         	movff	floorf@u,??_floorf
  5219  002B6E  C058  F04C         	movff	floorf@u+1,??_floorf+1
  5220  002B72  C059  F04D         	movff	floorf@u+2,??_floorf+2
  5221  002B76  C05A  F04E         	movff	floorf@u+3,??_floorf+3
  5222  002B7A  0E20               	movlw	32
  5223  002B7C  EFC5  F015         	goto	u3990
  5224  002B80                     u3995:
  5225  002B80  90D8               	bcf	status,0,c
  5226  002B82  324E               	rrcf	(??_floorf+3)^0,f,c
  5227  002B84  324D               	rrcf	(??_floorf+2)^0,f,c
  5228  002B86  324C               	rrcf	(??_floorf+1)^0,f,c
  5229  002B88  324B               	rrcf	??_floorf^0,f,c
  5230  002B8A                     u3990:
  5231  002B8A  2EE8               	decfsz	wreg,f,c
  5232  002B8C  EFC0  F015         	goto	u3995
  5233  002B90  504B               	movf	??_floorf^0,w,c
  5234  002B92  104C               	iorwf	(??_floorf+1)^0,w,c
  5235  002B94  104D               	iorwf	(??_floorf+2)^0,w,c
  5236  002B96  104E               	iorwf	(??_floorf+3)^0,w,c
  5237  002B98  B4D8               	btfsc	status,2,c
  5238  002B9A  EFD1  F015         	goto	u4001
  5239  002B9E  EFD3  F015         	goto	u4000
  5240  002BA2                     u4001:
  5241  002BA2  EFDB  F015         	goto	l1086
  5242  002BA6                     u4000:
  5243  002BA6  5051               	movf	floorf@m^0,w,c
  5244  002BA8  2657               	addwf	floorf@u^0,f,c
  5245  002BAA  5052               	movf	(floorf@m+1)^0,w,c
  5246  002BAC  2258               	addwfc	(floorf@u+1)^0,f,c
  5247  002BAE  5053               	movf	(floorf@m+2)^0,w,c
  5248  002BB0  2259               	addwfc	(floorf@u+2)^0,f,c
  5249  002BB2  5054               	movf	(floorf@m+3)^0,w,c
  5250  002BB4  225A               	addwfc	(floorf@u+3)^0,f,c
  5251  002BB6                     l1086:
  5252  002BB6  1C51               	comf	floorf@m^0,w,c
  5253  002BB8  6E4B               	movwf	??_floorf^0,c
  5254  002BBA  1C52               	comf	(floorf@m+1)^0,w,c
  5255  002BBC  6E4C               	movwf	(??_floorf+1)^0,c
  5256  002BBE  1C53               	comf	(floorf@m+2)^0,w,c
  5257  002BC0  6E4D               	movwf	(??_floorf+2)^0,c
  5258  002BC2  1C54               	comf	(floorf@m+3)^0,w,c
  5259  002BC4  6E4E               	movwf	(??_floorf+3)^0,c
  5260  002BC6  504B               	movf	??_floorf^0,w,c
  5261  002BC8  1657               	andwf	floorf@u^0,f,c
  5262  002BCA  504C               	movf	(??_floorf+1)^0,w,c
  5263  002BCC  1658               	andwf	(floorf@u+1)^0,f,c
  5264  002BCE  504D               	movf	(??_floorf+2)^0,w,c
  5265  002BD0  1659               	andwf	(floorf@u+2)^0,f,c
  5266  002BD2  504E               	movf	(??_floorf+3)^0,w,c
  5267  002BD4  165A               	andwf	(floorf@u+3)^0,f,c
  5268  002BD6  EF31  F016         	goto	l3601
  5269  002BDA                     l3593:
  5270  002BDA  C057  F04B         	movff	floorf@u,??_floorf
  5271  002BDE  C058  F04C         	movff	floorf@u+1,??_floorf+1
  5272  002BE2  C059  F04D         	movff	floorf@u+2,??_floorf+2
  5273  002BE6  C05A  F04E         	movff	floorf@u+3,??_floorf+3
  5274  002BEA  0E20               	movlw	32
  5275  002BEC  EFFD  F015         	goto	u4010
  5276  002BF0                     u4015:
  5277  002BF0  90D8               	bcf	status,0,c
  5278  002BF2  324E               	rrcf	(??_floorf+3)^0,f,c
  5279  002BF4  324D               	rrcf	(??_floorf+2)^0,f,c
  5280  002BF6  324C               	rrcf	(??_floorf+1)^0,f,c
  5281  002BF8  324B               	rrcf	??_floorf^0,f,c
  5282  002BFA                     u4010:
  5283  002BFA  2EE8               	decfsz	wreg,f,c
  5284  002BFC  EFF8  F015         	goto	u4015
  5285  002C00  504B               	movf	??_floorf^0,w,c
  5286  002C02  104C               	iorwf	(??_floorf+1)^0,w,c
  5287  002C04  104D               	iorwf	(??_floorf+2)^0,w,c
  5288  002C06  104E               	iorwf	(??_floorf+3)^0,w,c
  5289  002C08  A4D8               	btfss	status,2,c
  5290  002C0A  EF09  F016         	goto	u4021
  5291  002C0E  EF0B  F016         	goto	u4020
  5292  002C12                     u4021:
  5293  002C12  EF15  F016         	goto	l3597
  5294  002C16                     u4020:
  5295  002C16  0E00               	movlw	0
  5296  002C18  6E57               	movwf	floorf@u^0,c
  5297  002C1A  0E00               	movlw	0
  5298  002C1C  6E58               	movwf	(floorf@u+1)^0,c
  5299  002C1E  0E00               	movlw	0
  5300  002C20  6E59               	movwf	(floorf@u+2)^0,c
  5301  002C22  0E00               	movlw	0
  5302  002C24  6E5A               	movwf	(floorf@u+3)^0,c
  5303  002C26  EF31  F016         	goto	l3601
  5304  002C2A                     l3597:
  5305  002C2A  90D8               	bcf	status,0,c
  5306  002C2C  3457               	rlcf	floorf@u^0,w,c
  5307  002C2E  6E4B               	movwf	??_floorf^0,c
  5308  002C30  3458               	rlcf	(floorf@u+1)^0,w,c
  5309  002C32  6E4C               	movwf	(??_floorf+1)^0,c
  5310  002C34  3459               	rlcf	(floorf@u+2)^0,w,c
  5311  002C36  6E4D               	movwf	(??_floorf+2)^0,c
  5312  002C38  345A               	rlcf	(floorf@u+3)^0,w,c
  5313  002C3A  6E4E               	movwf	(??_floorf+3)^0,c
  5314  002C3C  504B               	movf	??_floorf^0,w,c
  5315  002C3E  104C               	iorwf	(??_floorf+1)^0,w,c
  5316  002C40  104D               	iorwf	(??_floorf+2)^0,w,c
  5317  002C42  104E               	iorwf	(??_floorf+3)^0,w,c
  5318  002C44  B4D8               	btfsc	status,2,c
  5319  002C46  EF27  F016         	goto	u4031
  5320  002C4A  EF29  F016         	goto	u4030
  5321  002C4E                     u4031:
  5322  002C4E  EF31  F016         	goto	l3601
  5323  002C52                     u4030:
  5324  002C52  0E00               	movlw	0
  5325  002C54  6E57               	movwf	floorf@u^0,c
  5326  002C56  0E00               	movlw	0
  5327  002C58  6E58               	movwf	(floorf@u+1)^0,c
  5328  002C5A  0E80               	movlw	128
  5329  002C5C  6E59               	movwf	(floorf@u+2)^0,c
  5330  002C5E  0EBF               	movlw	191
  5331  002C60  6E5A               	movwf	(floorf@u+3)^0,c
  5332  002C62                     l3601:
  5333  002C62  C057  F047         	movff	floorf@u,?_floorf
  5334  002C66  C058  F048         	movff	floorf@u+1,?_floorf+1
  5335  002C6A  C059  F049         	movff	floorf@u+2,?_floorf+2
  5336  002C6E  C05A  F04A         	movff	floorf@u+3,?_floorf+3
  5337  002C72                     l1083:
  5338  002C72  0012               	return		;funcret
  5339  002C74                     __end_of_floorf:
  5340                           	callstack 0
  5341                           
  5342 ;; *************** function ___fpclassifyf *****************
  5343 ;; Defined at:
  5344 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  x               4    0[COMRAM] float 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  u               4   10[COMRAM] struct .
  5349 ;;  e               2    8[COMRAM] int 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  2    0[COMRAM] int 
  5352 ;; Registers used:
  5353 ;;		wreg, status,2, status,0
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5359 ;;      Params:         4       0       0       0       0       0       0       0       0
  5360 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5361 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5362 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5363 ;;Total ram usage:       14 bytes
  5364 ;; Hardware stack levels used: 1
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_efgtoa
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text15
  5373  0031C4                     __ptext15:
  5374                           	callstack 0
  5375  0031C4                     ___fpclassifyf:
  5376                           	callstack 26
  5377  0031C4  C0DE  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5378  0031C8  C0DF  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5379  0031CC  C0E0  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5380  0031D0  C0E1  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5381  0031D4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5382  0031D8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5383  0031DC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5384  0031E0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5385  0031E4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5386  0031E8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5387  0031EC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5388  0031F0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5389  0031F4  0E18               	movlw	24
  5390  0031F6  EF02  F019         	goto	u3820
  5391  0031FA                     u3825:
  5392  0031FA  90D8               	bcf	status,0,c
  5393  0031FC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5394  0031FE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5395  003200  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5396  003202  3205               	rrcf	??___fpclassifyf^0,f,c
  5397  003204                     u3820:
  5398  003204  2EE8               	decfsz	wreg,f,c
  5399  003206  EFFD  F018         	goto	u3825
  5400  00320A  5005               	movf	??___fpclassifyf^0,w,c
  5401  00320C  6E09               	movwf	___fpclassifyf@e^0,c
  5402  00320E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5403  003210  5009               	movf	___fpclassifyf@e^0,w,c
  5404  003212  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5405  003214  A4D8               	btfss	status,2,c
  5406  003216  EF0F  F019         	goto	u3831
  5407  00321A  EF11  F019         	goto	u3830
  5408  00321E                     u3831:
  5409  00321E  EF31  F019         	goto	l3553
  5410  003222                     u3830:
  5411  003222  90D8               	bcf	status,0,c
  5412  003224  340B               	rlcf	___fpclassifyf@u^0,w,c
  5413  003226  6E05               	movwf	??___fpclassifyf^0,c
  5414  003228  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5415  00322A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5416  00322C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5417  00322E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5418  003230  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5419  003232  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5420  003234  5005               	movf	??___fpclassifyf^0,w,c
  5421  003236  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5422  003238  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5423  00323A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5424  00323C  A4D8               	btfss	status,2,c
  5425  00323E  EF23  F019         	goto	u3841
  5426  003242  EF25  F019         	goto	u3840
  5427  003246                     u3841:
  5428  003246  EF2B  F019         	goto	l3549
  5429  00324A                     u3840:
  5430  00324A  0E00               	movlw	0
  5431  00324C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5432  00324E  0E02               	movlw	2
  5433  003250  6E01               	movwf	?___fpclassifyf^0,c
  5434  003252  EF60  F019         	goto	l1045
  5435  003256                     l3549:
  5436  003256  0E00               	movlw	0
  5437  003258  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5438  00325A  0E03               	movlw	3
  5439  00325C  6E01               	movwf	?___fpclassifyf^0,c
  5440  00325E  EF60  F019         	goto	l1045
  5441  003262                     l3553:
  5442  003262  2809               	incf	___fpclassifyf@e^0,w,c
  5443  003264  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5444  003266  A4D8               	btfss	status,2,c
  5445  003268  EF38  F019         	goto	u3851
  5446  00326C  EF3A  F019         	goto	u3850
  5447  003270                     u3851:
  5448  003270  EF5C  F019         	goto	l3559
  5449  003274                     u3850:
  5450  003274  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5451  003278  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5452  00327C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5453  003280  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5454  003284  0E09               	movlw	9
  5455  003286                     u3865:
  5456  003286  90D8               	bcf	status,0,c
  5457  003288  3605               	rlcf	??___fpclassifyf^0,f,c
  5458  00328A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5459  00328C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5460  00328E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5461  003290  2EE8               	decfsz	wreg,f,c
  5462  003292  EF43  F019         	goto	u3865
  5463  003296  5005               	movf	??___fpclassifyf^0,w,c
  5464  003298  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5465  00329A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5466  00329C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5467  00329E  B4D8               	btfsc	status,2,c
  5468  0032A0  EF54  F019         	goto	u3871
  5469  0032A4  EF57  F019         	goto	u3870
  5470  0032A8                     u3871:
  5471  0032A8  0E01               	movlw	1
  5472  0032AA  EF58  F019         	goto	u3880
  5473  0032AE                     u3870:
  5474  0032AE  0E00               	movlw	0
  5475  0032B0                     u3880:
  5476  0032B0  6E01               	movwf	?___fpclassifyf^0,c
  5477  0032B2  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5478  0032B4  EF60  F019         	goto	l1045
  5479  0032B8                     l3559:
  5480  0032B8  0E00               	movlw	0
  5481  0032BA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5482  0032BC  0E04               	movlw	4
  5483  0032BE  6E01               	movwf	?___fpclassifyf^0,c
  5484  0032C0                     l1045:
  5485  0032C0  0012               	return		;funcret
  5486  0032C2                     __end_of___fpclassifyf:
  5487                           	callstack 0
  5488                           
  5489 ;; *************** function ___flsub *****************
  5490 ;; Defined at:
  5491 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  b               4   86[COMRAM] int 
  5494 ;;  a               4   90[COMRAM] int 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  4   86[COMRAM] int 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5506 ;;      Params:         8       0       0       0       0       0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5509 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5510 ;;Total ram usage:        8 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 1
  5513 ;; This function calls:
  5514 ;;		___fladd
  5515 ;; This function is called by:
  5516 ;;		_efgtoa
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text16
  5521  003BF4                     __ptext16:
  5522                           	callstack 0
  5523  003BF4                     ___flsub:
  5524                           	callstack 25
  5525  003BF4  0E00               	movlw	0
  5526  003BF6  1A5B               	xorwf	___flsub@a^0,f,c
  5527  003BF8  0E00               	movlw	0
  5528  003BFA  1A5C               	xorwf	(___flsub@a+1)^0,f,c
  5529  003BFC  0E00               	movlw	0
  5530  003BFE  1A5D               	xorwf	(___flsub@a+2)^0,f,c
  5531  003C00  0E80               	movlw	128
  5532  003C02  1A5E               	xorwf	(___flsub@a+3)^0,f,c
  5533  003C04  C057  F047         	movff	___flsub@b,___fladd@b
  5534  003C08  C058  F048         	movff	___flsub@b+1,___fladd@b+1
  5535  003C0C  C059  F049         	movff	___flsub@b+2,___fladd@b+2
  5536  003C10  C05A  F04A         	movff	___flsub@b+3,___fladd@b+3
  5537  003C14  C05B  F04B         	movff	___flsub@a,___fladd@a
  5538  003C18  C05C  F04C         	movff	___flsub@a+1,___fladd@a+1
  5539  003C1C  C05D  F04D         	movff	___flsub@a+2,___fladd@a+2
  5540  003C20  C05E  F04E         	movff	___flsub@a+3,___fladd@a+3
  5541  003C24  ECD9  F00C         	call	___fladd	;wreg free
  5542  003C28  C047  F057         	movff	?___fladd,?___flsub
  5543  003C2C  C048  F058         	movff	?___fladd+1,?___flsub+1
  5544  003C30  C049  F059         	movff	?___fladd+2,?___flsub+2
  5545  003C34  C04A  F05A         	movff	?___fladd+3,?___flsub+3
  5546  003C38  0012               	return		;funcret
  5547  003C3A                     __end_of___flsub:
  5548                           	callstack 0
  5549                           
  5550 ;; *************** function ___flneg *****************
  5551 ;; Defined at:
  5552 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  f1              4    0[COMRAM] int 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;		None
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  4    0[COMRAM] int 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5566 ;;      Params:         4       0       0       0       0       0       0       0       0
  5567 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5569 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5570 ;;Total ram usage:        4 bytes
  5571 ;; Hardware stack levels used: 1
  5572 ;; This function calls:
  5573 ;;		Nothing
  5574 ;; This function is called by:
  5575 ;;		_efgtoa
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text17
  5580  003D3A                     __ptext17:
  5581                           	callstack 0
  5582  003D3A                     ___flneg:
  5583                           	callstack 26
  5584  003D3A  5001               	movf	___flneg@f1^0,w,c
  5585  003D3C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5586  003D3E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5587  003D40  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5588  003D42  B4D8               	btfsc	status,2,c
  5589  003D44  EFA6  F01E         	goto	u3701
  5590  003D48  EFA8  F01E         	goto	u3700
  5591  003D4C                     u3701:
  5592  003D4C  EFB0  F01E         	goto	l3471
  5593  003D50                     u3700:
  5594  003D50  0E00               	movlw	0
  5595  003D52  1A01               	xorwf	___flneg@f1^0,f,c
  5596  003D54  0E00               	movlw	0
  5597  003D56  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5598  003D58  0E00               	movlw	0
  5599  003D5A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5600  003D5C  0E80               	movlw	128
  5601  003D5E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5602  003D60                     l3471:
  5603  003D60  C001  F001         	movff	___flneg@f1,?___flneg
  5604  003D64  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5605  003D68  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5606  003D6C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5607  003D70  0012               	return		;funcret
  5608  003D72                     __end_of___flneg:
  5609                           	callstack 0
  5610                           
  5611 ;; *************** function ___flge *****************
  5612 ;; Defined at:
  5613 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  ff1             4   45[COMRAM] int 
  5616 ;;  ff2             4   49[COMRAM] int 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;		None
  5619 ;; Return value:  Size  Location     Type
  5620 ;;		None               void
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5628 ;;      Params:         8       0       0       0       0       0       0       0       0
  5629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5630 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5631 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5632 ;;Total ram usage:       12 bytes
  5633 ;; Hardware stack levels used: 1
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_main
  5638 ;;		_efgtoa
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text18
  5643  0030C0                     __ptext18:
  5644                           	callstack 0
  5645  0030C0                     ___flge:
  5646                           	callstack 26
  5647  0030C0  0E00               	movlw	0
  5648  0030C2  142E               	andwf	___flge@ff1^0,w,c
  5649  0030C4  6E36               	movwf	??___flge^0,c
  5650  0030C6  0E00               	movlw	0
  5651  0030C8  142F               	andwf	(___flge@ff1+1)^0,w,c
  5652  0030CA  6E37               	movwf	(??___flge+1)^0,c
  5653  0030CC  0E80               	movlw	128
  5654  0030CE  1430               	andwf	(___flge@ff1+2)^0,w,c
  5655  0030D0  6E38               	movwf	(??___flge+2)^0,c
  5656  0030D2  0E7F               	movlw	127
  5657  0030D4  1431               	andwf	(___flge@ff1+3)^0,w,c
  5658  0030D6  6E39               	movwf	(??___flge+3)^0,c
  5659  0030D8  5036               	movf	??___flge^0,w,c
  5660  0030DA  1037               	iorwf	(??___flge+1)^0,w,c
  5661  0030DC  1038               	iorwf	(??___flge+2)^0,w,c
  5662  0030DE  1039               	iorwf	(??___flge+3)^0,w,c
  5663  0030E0  A4D8               	btfss	status,2,c
  5664  0030E2  EF75  F018         	goto	u3651
  5665  0030E6  EF77  F018         	goto	u3650
  5666  0030EA                     u3651:
  5667  0030EA  EF7F  F018         	goto	l3449
  5668  0030EE                     u3650:
  5669  0030EE  0E00               	movlw	0
  5670  0030F0  6E2E               	movwf	___flge@ff1^0,c
  5671  0030F2  0E00               	movlw	0
  5672  0030F4  6E2F               	movwf	(___flge@ff1+1)^0,c
  5673  0030F6  0E00               	movlw	0
  5674  0030F8  6E30               	movwf	(___flge@ff1+2)^0,c
  5675  0030FA  0E00               	movlw	0
  5676  0030FC  6E31               	movwf	(___flge@ff1+3)^0,c
  5677  0030FE                     l3449:
  5678  0030FE  0E00               	movlw	0
  5679  003100  1432               	andwf	___flge@ff2^0,w,c
  5680  003102  6E36               	movwf	??___flge^0,c
  5681  003104  0E00               	movlw	0
  5682  003106  1433               	andwf	(___flge@ff2+1)^0,w,c
  5683  003108  6E37               	movwf	(??___flge+1)^0,c
  5684  00310A  0E80               	movlw	128
  5685  00310C  1434               	andwf	(___flge@ff2+2)^0,w,c
  5686  00310E  6E38               	movwf	(??___flge+2)^0,c
  5687  003110  0E7F               	movlw	127
  5688  003112  1435               	andwf	(___flge@ff2+3)^0,w,c
  5689  003114  6E39               	movwf	(??___flge+3)^0,c
  5690  003116  5036               	movf	??___flge^0,w,c
  5691  003118  1037               	iorwf	(??___flge+1)^0,w,c
  5692  00311A  1038               	iorwf	(??___flge+2)^0,w,c
  5693  00311C  1039               	iorwf	(??___flge+3)^0,w,c
  5694  00311E  A4D8               	btfss	status,2,c
  5695  003120  EF94  F018         	goto	u3661
  5696  003124  EF96  F018         	goto	u3660
  5697  003128                     u3661:
  5698  003128  EF9E  F018         	goto	l3453
  5699  00312C                     u3660:
  5700  00312C  0E00               	movlw	0
  5701  00312E  6E32               	movwf	___flge@ff2^0,c
  5702  003130  0E00               	movlw	0
  5703  003132  6E33               	movwf	(___flge@ff2+1)^0,c
  5704  003134  0E00               	movlw	0
  5705  003136  6E34               	movwf	(___flge@ff2+2)^0,c
  5706  003138  0E00               	movlw	0
  5707  00313A  6E35               	movwf	(___flge@ff2+3)^0,c
  5708  00313C                     l3453:
  5709  00313C  AE31               	btfss	(___flge@ff1+3)^0,7,c
  5710  00313E  EFA3  F018         	goto	u3671
  5711  003142  EFA5  F018         	goto	u3670
  5712  003146                     u3671:
  5713  003146  EFAE  F018         	goto	l3457
  5714  00314A                     u3670:
  5715  00314A  6C2E               	negf	___flge@ff1^0,c
  5716  00314C  1E2F               	comf	(___flge@ff1+1)^0,f,c
  5717  00314E  B0D8               	btfsc	status,0,c
  5718  003150  2A2F               	incf	(___flge@ff1+1)^0,f,c
  5719  003152  1E30               	comf	(___flge@ff1+2)^0,f,c
  5720  003154  B0D8               	btfsc	status,0,c
  5721  003156  2A30               	incf	(___flge@ff1+2)^0,f,c
  5722  003158  0E80               	movlw	128
  5723  00315A  5631               	subfwb	(___flge@ff1+3)^0,f,c
  5724  00315C                     l3457:
  5725  00315C  AE35               	btfss	(___flge@ff2+3)^0,7,c
  5726  00315E  EFB3  F018         	goto	u3681
  5727  003162  EFB5  F018         	goto	u3680
  5728  003166                     u3681:
  5729  003166  EFBE  F018         	goto	l440
  5730  00316A                     u3680:
  5731  00316A  6C32               	negf	___flge@ff2^0,c
  5732  00316C  1E33               	comf	(___flge@ff2+1)^0,f,c
  5733  00316E  B0D8               	btfsc	status,0,c
  5734  003170  2A33               	incf	(___flge@ff2+1)^0,f,c
  5735  003172  1E34               	comf	(___flge@ff2+2)^0,f,c
  5736  003174  B0D8               	btfsc	status,0,c
  5737  003176  2A34               	incf	(___flge@ff2+2)^0,f,c
  5738  003178  0E80               	movlw	128
  5739  00317A  5635               	subfwb	(___flge@ff2+3)^0,f,c
  5740  00317C                     l440:
  5741  00317C  0E00               	movlw	0
  5742  00317E  1A2E               	xorwf	___flge@ff1^0,f,c
  5743  003180  0E00               	movlw	0
  5744  003182  1A2F               	xorwf	(___flge@ff1+1)^0,f,c
  5745  003184  0E00               	movlw	0
  5746  003186  1A30               	xorwf	(___flge@ff1+2)^0,f,c
  5747  003188  0E80               	movlw	128
  5748  00318A  1A31               	xorwf	(___flge@ff1+3)^0,f,c
  5749  00318C  0E00               	movlw	0
  5750  00318E  1A32               	xorwf	___flge@ff2^0,f,c
  5751  003190  0E00               	movlw	0
  5752  003192  1A33               	xorwf	(___flge@ff2+1)^0,f,c
  5753  003194  0E00               	movlw	0
  5754  003196  1A34               	xorwf	(___flge@ff2+2)^0,f,c
  5755  003198  0E80               	movlw	128
  5756  00319A  1A35               	xorwf	(___flge@ff2+3)^0,f,c
  5757  00319C  5032               	movf	___flge@ff2^0,w,c
  5758  00319E  5C2E               	subwf	___flge@ff1^0,w,c
  5759  0031A0  5033               	movf	(___flge@ff2+1)^0,w,c
  5760  0031A2  582F               	subwfb	(___flge@ff1+1)^0,w,c
  5761  0031A4  5034               	movf	(___flge@ff2+2)^0,w,c
  5762  0031A6  5830               	subwfb	(___flge@ff1+2)^0,w,c
  5763  0031A8  5035               	movf	(___flge@ff2+3)^0,w,c
  5764  0031AA  5831               	subwfb	(___flge@ff1+3)^0,w,c
  5765  0031AC  B0D8               	btfsc	status,0,c
  5766  0031AE  EFDB  F018         	goto	u3691
  5767  0031B2  EFDD  F018         	goto	u3690
  5768  0031B6                     u3691:
  5769  0031B6  EFE0  F018         	goto	l3463
  5770  0031BA                     u3690:
  5771  0031BA  90D8               	bcf	status,0,c
  5772  0031BC  EFE1  F018         	goto	l445
  5773  0031C0                     l3463:
  5774  0031C0  80D8               	bsf	status,0,c
  5775  0031C2                     l445:
  5776  0031C2  0012               	return		;funcret
  5777  0031C4                     __end_of___flge:
  5778                           	callstack 0
  5779                           
  5780 ;; *************** function ___fleq *****************
  5781 ;; Defined at:
  5782 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  ff1             4    0[COMRAM] int 
  5785 ;;  ff2             4    4[COMRAM] int 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;		None               void
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5797 ;;      Params:         8       0       0       0       0       0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5799 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5800 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5801 ;;Total ram usage:       12 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_efgtoa
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text19
  5811  00379A                     __ptext19:
  5812                           	callstack 0
  5813  00379A                     ___fleq:
  5814                           	callstack 26
  5815  00379A  0E00               	movlw	0
  5816  00379C  1401               	andwf	___fleq@ff1^0,w,c
  5817  00379E  6E09               	movwf	??___fleq^0,c
  5818  0037A0  0E00               	movlw	0
  5819  0037A2  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5820  0037A4  6E0A               	movwf	(??___fleq+1)^0,c
  5821  0037A6  0E80               	movlw	128
  5822  0037A8  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5823  0037AA  6E0B               	movwf	(??___fleq+2)^0,c
  5824  0037AC  0E7F               	movlw	127
  5825  0037AE  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5826  0037B0  6E0C               	movwf	(??___fleq+3)^0,c
  5827  0037B2  5009               	movf	??___fleq^0,w,c
  5828  0037B4  100A               	iorwf	(??___fleq+1)^0,w,c
  5829  0037B6  100B               	iorwf	(??___fleq+2)^0,w,c
  5830  0037B8  100C               	iorwf	(??___fleq+3)^0,w,c
  5831  0037BA  A4D8               	btfss	status,2,c
  5832  0037BC  EFE2  F01B         	goto	u3621
  5833  0037C0  EFE4  F01B         	goto	u3620
  5834  0037C4                     u3621:
  5835  0037C4  EFEC  F01B         	goto	l3433
  5836  0037C8                     u3620:
  5837  0037C8  0E00               	movlw	0
  5838  0037CA  6E01               	movwf	___fleq@ff1^0,c
  5839  0037CC  0E00               	movlw	0
  5840  0037CE  6E02               	movwf	(___fleq@ff1+1)^0,c
  5841  0037D0  0E00               	movlw	0
  5842  0037D2  6E03               	movwf	(___fleq@ff1+2)^0,c
  5843  0037D4  0E00               	movlw	0
  5844  0037D6  6E04               	movwf	(___fleq@ff1+3)^0,c
  5845  0037D8                     l3433:
  5846  0037D8  0E00               	movlw	0
  5847  0037DA  1405               	andwf	___fleq@ff2^0,w,c
  5848  0037DC  6E09               	movwf	??___fleq^0,c
  5849  0037DE  0E00               	movlw	0
  5850  0037E0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5851  0037E2  6E0A               	movwf	(??___fleq+1)^0,c
  5852  0037E4  0E80               	movlw	128
  5853  0037E6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5854  0037E8  6E0B               	movwf	(??___fleq+2)^0,c
  5855  0037EA  0E7F               	movlw	127
  5856  0037EC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5857  0037EE  6E0C               	movwf	(??___fleq+3)^0,c
  5858  0037F0  5009               	movf	??___fleq^0,w,c
  5859  0037F2  100A               	iorwf	(??___fleq+1)^0,w,c
  5860  0037F4  100B               	iorwf	(??___fleq+2)^0,w,c
  5861  0037F6  100C               	iorwf	(??___fleq+3)^0,w,c
  5862  0037F8  A4D8               	btfss	status,2,c
  5863  0037FA  EF01  F01C         	goto	u3631
  5864  0037FE  EF03  F01C         	goto	u3630
  5865  003802                     u3631:
  5866  003802  EF0B  F01C         	goto	l3437
  5867  003806                     u3630:
  5868  003806  0E00               	movlw	0
  5869  003808  6E05               	movwf	___fleq@ff2^0,c
  5870  00380A  0E00               	movlw	0
  5871  00380C  6E06               	movwf	(___fleq@ff2+1)^0,c
  5872  00380E  0E00               	movlw	0
  5873  003810  6E07               	movwf	(___fleq@ff2+2)^0,c
  5874  003812  0E00               	movlw	0
  5875  003814  6E08               	movwf	(___fleq@ff2+3)^0,c
  5876  003816                     l3437:
  5877  003816  5005               	movf	___fleq@ff2^0,w,c
  5878  003818  1801               	xorwf	___fleq@ff1^0,w,c
  5879  00381A  E10F               	bnz	u3640
  5880  00381C  5006               	movf	(___fleq@ff2+1)^0,w,c
  5881  00381E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5882  003820  E10C               	bnz	u3640
  5883  003822  5007               	movf	(___fleq@ff2+2)^0,w,c
  5884  003824  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5885  003826  E109               	bnz	u3640
  5886  003828  5008               	movf	(___fleq@ff2+3)^0,w,c
  5887  00382A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5888  00382C  B4D8               	btfsc	status,2,c
  5889  00382E  EF1B  F01C         	goto	u3641
  5890  003832  EF1D  F01C         	goto	u3640
  5891  003836                     u3641:
  5892  003836  EF20  F01C         	goto	l3441
  5893  00383A                     u3640:
  5894  00383A  90D8               	bcf	status,0,c
  5895  00383C  EF21  F01C         	goto	l434
  5896  003840                     l3441:
  5897  003840  80D8               	bsf	status,0,c
  5898  003842                     l434:
  5899  003842  0012               	return		;funcret
  5900  003844                     __end_of___fleq:
  5901                           	callstack 0
  5902                           
  5903 ;; *************** function ___awmod *****************
  5904 ;; Defined at:
  5905 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;  dividend        2    0[COMRAM] int 
  5908 ;;  divisor         2    2[COMRAM] int 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  sign            1    5[COMRAM] unsigned char 
  5911 ;;  counter         1    4[COMRAM] unsigned char 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  2    0[COMRAM] int 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5921 ;;      Params:         4       0       0       0       0       0       0       0       0
  5922 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5924 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5925 ;;Total ram usage:        6 bytes
  5926 ;; Hardware stack levels used: 1
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_efgtoa
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text20
  5935  0036EA                     __ptext20:
  5936                           	callstack 0
  5937  0036EA                     ___awmod:
  5938                           	callstack 26
  5939  0036EA  0E00               	movlw	0
  5940  0036EC  6E06               	movwf	___awmod@sign^0,c
  5941  0036EE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5942  0036F0  EF7E  F01B         	goto	u3560
  5943  0036F4  EF7C  F01B         	goto	u3561
  5944  0036F8                     u3561:
  5945  0036F8  EF84  F01B         	goto	l3401
  5946  0036FC                     u3560:
  5947  0036FC  6C01               	negf	___awmod@dividend^0,c
  5948  0036FE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5949  003700  B0D8               	btfsc	status,0,c
  5950  003702  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5951  003704  0E01               	movlw	1
  5952  003706  6E06               	movwf	___awmod@sign^0,c
  5953  003708                     l3401:
  5954  003708  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5955  00370A  EF8B  F01B         	goto	u3570
  5956  00370E  EF89  F01B         	goto	u3571
  5957  003712                     u3571:
  5958  003712  EF8F  F01B         	goto	l3405
  5959  003716                     u3570:
  5960  003716  6C03               	negf	___awmod@divisor^0,c
  5961  003718  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5962  00371A  B0D8               	btfsc	status,0,c
  5963  00371C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5964  00371E                     l3405:
  5965  00371E  5003               	movf	___awmod@divisor^0,w,c
  5966  003720  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5967  003722  B4D8               	btfsc	status,2,c
  5968  003724  EF96  F01B         	goto	u3581
  5969  003728  EF98  F01B         	goto	u3580
  5970  00372C                     u3581:
  5971  00372C  EFBC  F01B         	goto	l3421
  5972  003730                     u3580:
  5973  003730  0E01               	movlw	1
  5974  003732  6E05               	movwf	___awmod@counter^0,c
  5975  003734  EFA0  F01B         	goto	l3411
  5976  003738                     l3409:
  5977  003738  90D8               	bcf	status,0,c
  5978  00373A  3603               	rlcf	___awmod@divisor^0,f,c
  5979  00373C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5980  00373E  2A05               	incf	___awmod@counter^0,f,c
  5981  003740                     l3411:
  5982  003740  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5983  003742  EFA5  F01B         	goto	u3591
  5984  003746  EFA7  F01B         	goto	u3590
  5985  00374A                     u3591:
  5986  00374A  EF9C  F01B         	goto	l3409
  5987  00374E                     u3590:
  5988  00374E                     l3413:
  5989  00374E  5003               	movf	___awmod@divisor^0,w,c
  5990  003750  5C01               	subwf	___awmod@dividend^0,w,c
  5991  003752  5004               	movf	(___awmod@divisor+1)^0,w,c
  5992  003754  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5993  003756  A0D8               	btfss	status,0,c
  5994  003758  EFB0  F01B         	goto	u3601
  5995  00375C  EFB2  F01B         	goto	u3600
  5996  003760                     u3601:
  5997  003760  EFB6  F01B         	goto	l3417
  5998  003764                     u3600:
  5999  003764  5003               	movf	___awmod@divisor^0,w,c
  6000  003766  5E01               	subwf	___awmod@dividend^0,f,c
  6001  003768  5004               	movf	(___awmod@divisor+1)^0,w,c
  6002  00376A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6003  00376C                     l3417:
  6004  00376C  90D8               	bcf	status,0,c
  6005  00376E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6006  003770  3203               	rrcf	___awmod@divisor^0,f,c
  6007  003772  2E05               	decfsz	___awmod@counter^0,f,c
  6008  003774  EFA7  F01B         	goto	l3413
  6009  003778                     l3421:
  6010  003778  5006               	movf	___awmod@sign^0,w,c
  6011  00377A  B4D8               	btfsc	status,2,c
  6012  00377C  EFC2  F01B         	goto	u3611
  6013  003780  EFC4  F01B         	goto	u3610
  6014  003784                     u3611:
  6015  003784  EFC8  F01B         	goto	l3425
  6016  003788                     u3610:
  6017  003788  6C01               	negf	___awmod@dividend^0,c
  6018  00378A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6019  00378C  B0D8               	btfsc	status,0,c
  6020  00378E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6021  003790                     l3425:
  6022  003790  C001  F001         	movff	___awmod@dividend,?___awmod
  6023  003794  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6024  003798  0012               	return		;funcret
  6025  00379A                     __end_of___awmod:
  6026                           	callstack 0
  6027                           
  6028 ;; *************** function ___awdiv *****************
  6029 ;; Defined at:
  6030 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  dividend        2    0[COMRAM] int 
  6033 ;;  divisor         2    2[COMRAM] int 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  quotient        2    6[COMRAM] int 
  6036 ;;  sign            1    5[COMRAM] unsigned char 
  6037 ;;  counter         1    4[COMRAM] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  2    0[COMRAM] int 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6047 ;;      Params:         4       0       0       0       0       0       0       0       0
  6048 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6050 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6051 ;;Total ram usage:        8 bytes
  6052 ;; Hardware stack levels used: 1
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_efgtoa
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text21
  6061  003626                     __ptext21:
  6062                           	callstack 0
  6063  003626                     ___awdiv:
  6064                           	callstack 26
  6065  003626  0E00               	movlw	0
  6066  003628  6E06               	movwf	___awdiv@sign^0,c
  6067  00362A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6068  00362C  EF1C  F01B         	goto	u3500
  6069  003630  EF1A  F01B         	goto	u3501
  6070  003634                     u3501:
  6071  003634  EF22  F01B         	goto	l3357
  6072  003638                     u3500:
  6073  003638  6C03               	negf	___awdiv@divisor^0,c
  6074  00363A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6075  00363C  B0D8               	btfsc	status,0,c
  6076  00363E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6077  003640  0E01               	movlw	1
  6078  003642  6E06               	movwf	___awdiv@sign^0,c
  6079  003644                     l3357:
  6080  003644  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6081  003646  EF29  F01B         	goto	u3510
  6082  00364A  EF27  F01B         	goto	u3511
  6083  00364E                     u3511:
  6084  00364E  EF2F  F01B         	goto	l3363
  6085  003652                     u3510:
  6086  003652  6C01               	negf	___awdiv@dividend^0,c
  6087  003654  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6088  003656  B0D8               	btfsc	status,0,c
  6089  003658  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6090  00365A  0E01               	movlw	1
  6091  00365C  1A06               	xorwf	___awdiv@sign^0,f,c
  6092  00365E                     l3363:
  6093  00365E  0E00               	movlw	0
  6094  003660  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6095  003662  0E00               	movlw	0
  6096  003664  6E07               	movwf	___awdiv@quotient^0,c
  6097  003666  5003               	movf	___awdiv@divisor^0,w,c
  6098  003668  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6099  00366A  B4D8               	btfsc	status,2,c
  6100  00366C  EF3A  F01B         	goto	u3521
  6101  003670  EF3C  F01B         	goto	u3520
  6102  003674                     u3521:
  6103  003674  EF64  F01B         	goto	l3385
  6104  003678                     u3520:
  6105  003678  0E01               	movlw	1
  6106  00367A  6E05               	movwf	___awdiv@counter^0,c
  6107  00367C  EF44  F01B         	goto	l3371
  6108  003680                     l3369:
  6109  003680  90D8               	bcf	status,0,c
  6110  003682  3603               	rlcf	___awdiv@divisor^0,f,c
  6111  003684  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6112  003686  2A05               	incf	___awdiv@counter^0,f,c
  6113  003688                     l3371:
  6114  003688  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6115  00368A  EF49  F01B         	goto	u3531
  6116  00368E  EF4B  F01B         	goto	u3530
  6117  003692                     u3531:
  6118  003692  EF40  F01B         	goto	l3369
  6119  003696                     u3530:
  6120  003696                     l3373:
  6121  003696  90D8               	bcf	status,0,c
  6122  003698  3607               	rlcf	___awdiv@quotient^0,f,c
  6123  00369A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6124  00369C  5003               	movf	___awdiv@divisor^0,w,c
  6125  00369E  5C01               	subwf	___awdiv@dividend^0,w,c
  6126  0036A0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6127  0036A2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6128  0036A4  A0D8               	btfss	status,0,c
  6129  0036A6  EF57  F01B         	goto	u3541
  6130  0036AA  EF59  F01B         	goto	u3540
  6131  0036AE                     u3541:
  6132  0036AE  EF5E  F01B         	goto	l3381
  6133  0036B2                     u3540:
  6134  0036B2  5003               	movf	___awdiv@divisor^0,w,c
  6135  0036B4  5E01               	subwf	___awdiv@dividend^0,f,c
  6136  0036B6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6137  0036B8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6138  0036BA  8007               	bsf	___awdiv@quotient^0,0,c
  6139  0036BC                     l3381:
  6140  0036BC  90D8               	bcf	status,0,c
  6141  0036BE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6142  0036C0  3203               	rrcf	___awdiv@divisor^0,f,c
  6143  0036C2  2E05               	decfsz	___awdiv@counter^0,f,c
  6144  0036C4  EF4B  F01B         	goto	l3373
  6145  0036C8                     l3385:
  6146  0036C8  5006               	movf	___awdiv@sign^0,w,c
  6147  0036CA  B4D8               	btfsc	status,2,c
  6148  0036CC  EF6A  F01B         	goto	u3551
  6149  0036D0  EF6C  F01B         	goto	u3550
  6150  0036D4                     u3551:
  6151  0036D4  EF70  F01B         	goto	l3389
  6152  0036D8                     u3550:
  6153  0036D8  6C07               	negf	___awdiv@quotient^0,c
  6154  0036DA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6155  0036DC  B0D8               	btfsc	status,0,c
  6156  0036DE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6157  0036E0                     l3389:
  6158  0036E0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6159  0036E4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6160  0036E8  0012               	return		;funcret
  6161  0036EA                     __end_of___awdiv:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function _atoi *****************
  6165 ;; Defined at:
  6166 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6169 ;;		 -> STR_7(6), STR_6(8), STR_5(6), STR_4(8), 
  6170 ;;		 -> STR_3(6), STR_2(8), 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  n               2   20[COMRAM] int 
  6173 ;;  neg             2   13[COMRAM] int 
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  2    7[COMRAM] int 
  6176 ;; Registers used:
  6177 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6183 ;;      Params:         2       0       0       0       0       0       0       0       0
  6184 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6185 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6186 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6187 ;;Total ram usage:       15 bytes
  6188 ;; Hardware stack levels used: 1
  6189 ;; Hardware stack levels required when called: 1
  6190 ;; This function calls:
  6191 ;;		___wmul
  6192 ;;		_isdigit
  6193 ;;		_isspace
  6194 ;; This function is called by:
  6195 ;;		_vfpfcnvrt
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text22
  6200  002E28                     __ptext22:
  6201                           	callstack 0
  6202  002E28                     _atoi:
  6203                           	callstack 26
  6204  002E28  0E00               	movlw	0
  6205  002E2A  6E16               	movwf	(atoi@n+1)^0,c
  6206  002E2C  0E00               	movlw	0
  6207  002E2E  6E15               	movwf	atoi@n^0,c
  6208  002E30  0E00               	movlw	0
  6209  002E32  6E0F               	movwf	(atoi@neg+1)^0,c
  6210  002E34  0E00               	movlw	0
  6211  002E36  6E0E               	movwf	atoi@neg^0,c
  6212  002E38  EF20  F017         	goto	l3949
  6213  002E3C                     l3947:
  6214  002E3C  4A08               	infsnz	atoi@s^0,f,c
  6215  002E3E  2A09               	incf	(atoi@s+1)^0,f,c
  6216  002E40                     l3949:
  6217  002E40  0E01               	movlw	1
  6218  002E42  6E14               	movwf	_atoi$1052^0,c
  6219  002E44  C008  FFF6         	movff	atoi@s,tblptrl
  6220  002E48  C009  FFF7         	movff	atoi@s+1,tblptrh
  6221  002E4C                     	if	0	;tblptru may be non-zero
  6222  002E4C                     	endif
  6223  002E4C                     	if	0	;tblptru may be non-zero
  6224  002E4C                     	endif
  6225  002E4C  0008               	tblrd		*
  6226  002E4E  50F5               	movf	tablat,w,c
  6227  002E50  0A20               	xorlw	32
  6228  002E52  B4D8               	btfsc	status,2,c
  6229  002E54  EF2E  F017         	goto	u4641
  6230  002E58  EF30  F017         	goto	u4640
  6231  002E5C                     u4641:
  6232  002E5C  EF4D  F017         	goto	l3957
  6233  002E60                     u4640:
  6234  002E60  0EF7               	movlw	247
  6235  002E62  6E0A               	movwf	??_atoi^0,c
  6236  002E64  0EFF               	movlw	255
  6237  002E66  6E0B               	movwf	(??_atoi+1)^0,c
  6238  002E68  C008  FFF6         	movff	atoi@s,tblptrl
  6239  002E6C  C009  FFF7         	movff	atoi@s+1,tblptrh
  6240  002E70                     	if	0	;tblptru may be non-zero
  6241  002E70                     	endif
  6242  002E70                     	if	0	;tblptru may be non-zero
  6243  002E70                     	endif
  6244  002E70  0008               	tblrd		*
  6245  002E72  50F5               	movf	tablat,w,c
  6246  002E74  6E0C               	movwf	(??_atoi+2)^0,c
  6247  002E76  6A0D               	clrf	(??_atoi+3)^0,c
  6248  002E78  500A               	movf	??_atoi^0,w,c
  6249  002E7A  260C               	addwf	(??_atoi+2)^0,f,c
  6250  002E7C  500B               	movf	(??_atoi+1)^0,w,c
  6251  002E7E  220D               	addwfc	(??_atoi+3)^0,f,c
  6252  002E80  500D               	movf	(??_atoi+3)^0,w,c
  6253  002E82  E109               	bnz	u4650
  6254  002E84  0E05               	movlw	5
  6255  002E86  5C0C               	subwf	(??_atoi+2)^0,w,c
  6256  002E88  A0D8               	btfss	status,0,c
  6257  002E8A  EF49  F017         	goto	u4651
  6258  002E8E  EF4B  F017         	goto	u4650
  6259  002E92                     u4651:
  6260  002E92  EF4D  F017         	goto	l3957
  6261  002E96                     u4650:
  6262  002E96  0E00               	movlw	0
  6263  002E98  6E14               	movwf	_atoi$1052^0,c
  6264  002E9A                     l3957:
  6265  002E9A  C014  F010         	movff	_atoi$1052,_atoi$1051
  6266  002E9E  6A11               	clrf	(_atoi$1051+1)^0,c
  6267  002EA0  5010               	movf	_atoi$1051^0,w,c
  6268  002EA2  1011               	iorwf	(_atoi$1051+1)^0,w,c
  6269  002EA4  A4D8               	btfss	status,2,c
  6270  002EA6  EF57  F017         	goto	u4661
  6271  002EAA  EF59  F017         	goto	u4660
  6272  002EAE                     u4661:
  6273  002EAE  EF1E  F017         	goto	l3947
  6274  002EB2                     u4660:
  6275  002EB2  EF63  F017         	goto	l3967
  6276  002EB6                     l3963:
  6277  002EB6  0E00               	movlw	0
  6278  002EB8  6E0F               	movwf	(atoi@neg+1)^0,c
  6279  002EBA  0E01               	movlw	1
  6280  002EBC  6E0E               	movwf	atoi@neg^0,c
  6281  002EBE                     l3965:
  6282  002EBE  4A08               	infsnz	atoi@s^0,f,c
  6283  002EC0  2A09               	incf	(atoi@s+1)^0,f,c
  6284  002EC2  EF98  F017         	goto	l3973
  6285  002EC6                     l3967:
  6286  002EC6  C008  FFF6         	movff	atoi@s,tblptrl
  6287  002ECA  C009  FFF7         	movff	atoi@s+1,tblptrh
  6288  002ECE                     	if	0	;tblptru may be non-zero
  6289  002ECE                     	endif
  6290  002ECE                     	if	0	;tblptru may be non-zero
  6291  002ECE                     	endif
  6292  002ECE  0008               	tblrd		*
  6293  002ED0  50F5               	movf	tablat,w,c
  6294  002ED2  6E0A               	movwf	??_atoi^0,c
  6295  002ED4  6A0B               	clrf	(??_atoi+1)^0,c
  6296                           
  6297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6298                           ; Switch size 1, requested type "simple"
  6299                           ; Number of cases is 1, Range of values is 0 to 0
  6300                           ; switch strategies available:
  6301                           ; Name         Instructions Cycles
  6302                           ; simple_byte            4     3 (average)
  6303                           ;	Chosen strategy is simple_byte
  6304  002ED6  500B               	movf	(??_atoi+1)^0,w,c
  6305  002ED8  0A00               	xorlw	0	; case 0
  6306  002EDA  B4D8               	btfsc	status,2,c
  6307  002EDC  EF72  F017         	goto	l4471
  6308  002EE0  EF98  F017         	goto	l3973
  6309  002EE4                     l4471:
  6310                           
  6311                           ; Switch size 1, requested type "simple"
  6312                           ; Number of cases is 2, Range of values is 43 to 45
  6313                           ; switch strategies available:
  6314                           ; Name         Instructions Cycles
  6315                           ; simple_byte            7     4 (average)
  6316                           ;	Chosen strategy is simple_byte
  6317  002EE4  500A               	movf	??_atoi^0,w,c
  6318  002EE6  0A2B               	xorlw	43	; case 43
  6319  002EE8  B4D8               	btfsc	status,2,c
  6320  002EEA  EF5F  F017         	goto	l3965
  6321  002EEE  0A06               	xorlw	6	; case 45
  6322  002EF0  B4D8               	btfsc	status,2,c
  6323  002EF2  EF5B  F017         	goto	l3963
  6324  002EF6  EF98  F017         	goto	l3973
  6325  002EFA                     l3969:
  6326  002EFA  C015  F001         	movff	atoi@n,___wmul@multiplier
  6327  002EFE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6328  002F02  0E00               	movlw	0
  6329  002F04  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6330  002F06  0E0A               	movlw	10
  6331  002F08  6E03               	movwf	___wmul@multiplicand^0,c
  6332  002F0A  EC08  F01F         	call	___wmul	;wreg free
  6333  002F0E  C008  FFF6         	movff	atoi@s,tblptrl
  6334  002F12  C009  FFF7         	movff	atoi@s+1,tblptrh
  6335  002F16                     	if	0	;tblptru may be non-zero
  6336  002F16                     	endif
  6337  002F16                     	if	0	;tblptru may be non-zero
  6338  002F16                     	endif
  6339  002F16  0008               	tblrd		*
  6340  002F18  50F5               	movf	tablat,w,c
  6341  002F1A  5E01               	subwf	?___wmul^0,f,c
  6342  002F1C  0E00               	movlw	0
  6343  002F1E  5A02               	subwfb	(?___wmul+1)^0,f,c
  6344  002F20  0E30               	movlw	48
  6345  002F22  2401               	addwf	?___wmul^0,w,c
  6346  002F24  6E15               	movwf	atoi@n^0,c
  6347  002F26  0E00               	movlw	0
  6348  002F28  2002               	addwfc	(?___wmul+1)^0,w,c
  6349  002F2A  6E16               	movwf	(atoi@n+1)^0,c
  6350  002F2C  EF5F  F017         	goto	l3965
  6351  002F30                     l3973:
  6352  002F30  0ED0               	movlw	208
  6353  002F32  6E0A               	movwf	??_atoi^0,c
  6354  002F34  0EFF               	movlw	255
  6355  002F36  6E0B               	movwf	(??_atoi+1)^0,c
  6356  002F38  C008  FFF6         	movff	atoi@s,tblptrl
  6357  002F3C  C009  FFF7         	movff	atoi@s+1,tblptrh
  6358  002F40                     	if	0	;tblptru may be non-zero
  6359  002F40                     	endif
  6360  002F40                     	if	0	;tblptru may be non-zero
  6361  002F40                     	endif
  6362  002F40  0008               	tblrd		*
  6363  002F42  50F5               	movf	tablat,w,c
  6364  002F44  6E0C               	movwf	(??_atoi+2)^0,c
  6365  002F46  6A0D               	clrf	(??_atoi+3)^0,c
  6366  002F48  500A               	movf	??_atoi^0,w,c
  6367  002F4A  260C               	addwf	(??_atoi+2)^0,f,c
  6368  002F4C  500B               	movf	(??_atoi+1)^0,w,c
  6369  002F4E  220D               	addwfc	(??_atoi+3)^0,f,c
  6370  002F50  500D               	movf	(??_atoi+3)^0,w,c
  6371  002F52  E10A               	bnz	u4670
  6372  002F54  0E0A               	movlw	10
  6373  002F56  5C0C               	subwf	(??_atoi+2)^0,w,c
  6374  002F58  A0D8               	btfss	status,0,c
  6375  002F5A  EFB1  F017         	goto	u4671
  6376  002F5E  EFB4  F017         	goto	u4670
  6377  002F62                     u4671:
  6378  002F62  0E01               	movlw	1
  6379  002F64  EFB5  F017         	goto	u4680
  6380  002F68                     u4670:
  6381  002F68  0E00               	movlw	0
  6382  002F6A                     u4680:
  6383  002F6A  6E12               	movwf	_atoi$1053^0,c
  6384  002F6C  6A13               	clrf	(_atoi$1053+1)^0,c
  6385  002F6E  5012               	movf	_atoi$1053^0,w,c
  6386  002F70  1013               	iorwf	(_atoi$1053+1)^0,w,c
  6387  002F72  A4D8               	btfss	status,2,c
  6388  002F74  EFBE  F017         	goto	u4691
  6389  002F78  EFC0  F017         	goto	u4690
  6390  002F7C                     u4691:
  6391  002F7C  EF7D  F017         	goto	l3969
  6392  002F80                     u4690:
  6393  002F80  500E               	movf	atoi@neg^0,w,c
  6394  002F82  100F               	iorwf	(atoi@neg+1)^0,w,c
  6395  002F84  A4D8               	btfss	status,2,c
  6396  002F86  EFC7  F017         	goto	u4701
  6397  002F8A  EFC9  F017         	goto	u4700
  6398  002F8E                     u4701:
  6399  002F8E  EFD7  F017         	goto	l1074
  6400  002F92                     u4700:
  6401  002F92  C015  F00A         	movff	atoi@n,??_atoi
  6402  002F96  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6403  002F9A  1E0A               	comf	??_atoi^0,f,c
  6404  002F9C  1E0B               	comf	(??_atoi+1)^0,f,c
  6405  002F9E  4A0A               	infsnz	??_atoi^0,f,c
  6406  002FA0  2A0B               	incf	(??_atoi+1)^0,f,c
  6407  002FA2  C00A  F008         	movff	??_atoi,?_atoi
  6408  002FA6  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6409  002FAA  EFDB  F017         	goto	l1077
  6410  002FAE                     l1074:
  6411  002FAE  C015  F008         	movff	atoi@n,?_atoi
  6412  002FB2  C016  F009         	movff	atoi@n+1,?_atoi+1
  6413  002FB6                     l1077:
  6414  002FB6  0012               	return		;funcret
  6415  002FB8                     __end_of_atoi:
  6416                           	callstack 0
  6417                           
  6418 ;; *************** function _isspace *****************
  6419 ;; Defined at:
  6420 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  c               2    0[COMRAM] int 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;		None
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  2    0[COMRAM] int 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6434 ;;      Params:         2       0       0       0       0       0       0       0       0
  6435 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6436 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6437 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6438 ;;Total ram usage:        7 bytes
  6439 ;; Hardware stack levels used: 1
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_atoi
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text23
  6448  003A78                     __ptext23:
  6449                           	callstack 0
  6450  003A78                     _isspace:
  6451                           	callstack 26
  6452  003A78  0E01               	movlw	1
  6453  003A7A  6E07               	movwf	_isspace$1082^0,c
  6454  003A7C  0E20               	movlw	32
  6455  003A7E  1801               	xorwf	isspace@c^0,w,c
  6456  003A80  1002               	iorwf	(isspace@c+1)^0,w,c
  6457  003A82  B4D8               	btfsc	status,2,c
  6458  003A84  EF46  F01D         	goto	u4061
  6459  003A88  EF48  F01D         	goto	u4060
  6460  003A8C                     u4061:
  6461  003A8C  EF61  F01D         	goto	l3617
  6462  003A90                     u4060:
  6463  003A90  0EF7               	movlw	247
  6464  003A92  6E03               	movwf	??_isspace^0,c
  6465  003A94  0EFF               	movlw	255
  6466  003A96  6E04               	movwf	(??_isspace+1)^0,c
  6467  003A98  C001  F005         	movff	isspace@c,??_isspace+2
  6468  003A9C  C002  F006         	movff	isspace@c+1,??_isspace+3
  6469  003AA0  5003               	movf	??_isspace^0,w,c
  6470  003AA2  2605               	addwf	(??_isspace+2)^0,f,c
  6471  003AA4  5004               	movf	(??_isspace+1)^0,w,c
  6472  003AA6  2206               	addwfc	(??_isspace+3)^0,f,c
  6473  003AA8  5006               	movf	(??_isspace+3)^0,w,c
  6474  003AAA  E109               	bnz	u4070
  6475  003AAC  0E05               	movlw	5
  6476  003AAE  5C05               	subwf	(??_isspace+2)^0,w,c
  6477  003AB0  A0D8               	btfss	status,0,c
  6478  003AB2  EF5D  F01D         	goto	u4071
  6479  003AB6  EF5F  F01D         	goto	u4070
  6480  003ABA                     u4071:
  6481  003ABA  EF61  F01D         	goto	l3617
  6482  003ABE                     u4070:
  6483  003ABE  0E00               	movlw	0
  6484  003AC0  6E07               	movwf	_isspace$1082^0,c
  6485  003AC2                     l3617:
  6486  003AC2  C007  F001         	movff	_isspace$1082,?_isspace
  6487  003AC6  6A02               	clrf	(?_isspace+1)^0,c
  6488  003AC8  0012               	return		;funcret
  6489  003ACA                     __end_of_isspace:
  6490                           	callstack 0
  6491                           
  6492 ;; *************** function _isdigit *****************
  6493 ;; Defined at:
  6494 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;  c               2    0[COMRAM] int 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;		None
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  2    0[COMRAM] int 
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6508 ;;      Params:         2       0       0       0       0       0       0       0       0
  6509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6510 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6511 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6512 ;;Total ram usage:        6 bytes
  6513 ;; Hardware stack levels used: 1
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_vfpfcnvrt
  6518 ;;		_atoi
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text24
  6523  003D72                     __ptext24:
  6524                           	callstack 0
  6525  003D72                     _isdigit:
  6526                           	callstack 27
  6527  003D72  0ED0               	movlw	208
  6528  003D74  6E03               	movwf	??_isdigit^0,c
  6529  003D76  0EFF               	movlw	255
  6530  003D78  6E04               	movwf	(??_isdigit+1)^0,c
  6531  003D7A  C001  F005         	movff	isdigit@c,??_isdigit+2
  6532  003D7E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6533  003D82  5003               	movf	??_isdigit^0,w,c
  6534  003D84  2605               	addwf	(??_isdigit+2)^0,f,c
  6535  003D86  5004               	movf	(??_isdigit+1)^0,w,c
  6536  003D88  2206               	addwfc	(??_isdigit+3)^0,f,c
  6537  003D8A  5006               	movf	(??_isdigit+3)^0,w,c
  6538  003D8C  E10A               	bnz	u4040
  6539  003D8E  0E0A               	movlw	10
  6540  003D90  5C05               	subwf	(??_isdigit+2)^0,w,c
  6541  003D92  A0D8               	btfss	status,0,c
  6542  003D94  EFCE  F01E         	goto	u4041
  6543  003D98  EFD1  F01E         	goto	u4040
  6544  003D9C                     u4041:
  6545  003D9C  0E01               	movlw	1
  6546  003D9E  EFD2  F01E         	goto	u4050
  6547  003DA2                     u4040:
  6548  003DA2  0E00               	movlw	0
  6549  003DA4                     u4050:
  6550  003DA4  6E01               	movwf	?_isdigit^0,c
  6551  003DA6  6A02               	clrf	(?_isdigit+1)^0,c
  6552  003DA8  0012               	return		;funcret
  6553  003DAA                     __end_of_isdigit:
  6554                           	callstack 0
  6555                           
  6556 ;; *************** function ___wmul *****************
  6557 ;; Defined at:
  6558 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  multiplier      2    0[COMRAM] unsigned int 
  6561 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;  product         2    4[COMRAM] unsigned int 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  2    0[COMRAM] unsigned int 
  6566 ;; Registers used:
  6567 ;;		wreg, status,2, status,0, prodl, prodh
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6573 ;;      Params:         4       0       0       0       0       0       0       0       0
  6574 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6576 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6577 ;;Total ram usage:        6 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		_atoi
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text25
  6587  003E10                     __ptext25:
  6588                           	callstack 0
  6589  003E10                     ___wmul:
  6590                           	callstack 26
  6591  003E10  5001               	movf	___wmul@multiplier^0,w,c
  6592  003E12  0203               	mulwf	___wmul@multiplicand^0,c
  6593  003E14  CFF3 F005          	movff	prodl,___wmul@product
  6594  003E18  CFF4 F006          	movff	prodh,___wmul@product+1
  6595  003E1C  5001               	movf	___wmul@multiplier^0,w,c
  6596  003E1E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6597  003E20  50F3               	movf	243,w,c
  6598  003E22  2606               	addwf	(___wmul@product+1)^0,f,c
  6599  003E24  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6600  003E26  0203               	mulwf	___wmul@multiplicand^0,c
  6601  003E28  50F3               	movf	243,w,c
  6602  003E2A  2606               	addwf	(___wmul@product+1)^0,f,c
  6603  003E2C  C005  F001         	movff	___wmul@product,?___wmul
  6604  003E30  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6605  003E34  0012               	return		;funcret
  6606  003E36                     __end_of___wmul:
  6607                           	callstack 0
  6608                           
  6609 ;; *************** function _ReadLUZ *****************
  6610 ;; Defined at:
  6611 ;;		line 12 in file "Sensor_luz.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;		None
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  result          2    4[COMRAM] unsigned short 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  2    0[COMRAM] unsigned short 
  6618 ;; Registers used:
  6619 ;;		wreg, status,2
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6625 ;;      Params:         2       0       0       0       0       0       0       0       0
  6626 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6627 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6628 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6629 ;;Total ram usage:        6 bytes
  6630 ;; Hardware stack levels used: 1
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_main
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text26
  6639  003844                     __ptext26:
  6640                           	callstack 0
  6641  003844                     _ReadLUZ:
  6642                           	callstack 30
  6643  003844                     
  6644                           ;Sensor_luz.c: 14:     uint16_t result;;Sensor_luz.c: 16:     TRISD = 0x00;
  6645  003844  0E00               	movlw	0
  6646  003846  6E95               	movwf	149,c	;volatile
  6647  003848                     
  6648                           ;Sensor_luz.c: 17:     TRISA = 0xFF;
  6649  003848  6892               	setf	146,c	;volatile
  6650                           
  6651                           ;Sensor_luz.c: 19:     OSCCONbits.IRCF = 0b111;
  6652  00384A  0E70               	movlw	112
  6653  00384C  12D3               	iorwf	211,f,c	;volatile
  6654                           
  6655                           ;Sensor_luz.c: 20:     OSCCONbits.SCS = 0b10;
  6656  00384E  50D3               	movf	211,w,c	;volatile
  6657  003850  0BFC               	andlw	-4
  6658  003852  0902               	iorlw	2
  6659  003854  6ED3               	movwf	211,c	;volatile
  6660                           
  6661                           ;Sensor_luz.c: 23:     ADCON1bits.PCFG = 0b1101;
  6662  003856  50C1               	movf	193,w,c	;volatile
  6663  003858  0BF0               	andlw	-16
  6664  00385A  090D               	iorlw	13
  6665  00385C  6EC1               	movwf	193,c	;volatile
  6666                           
  6667                           ;Sensor_luz.c: 24:     ADCON1bits.VCFG = 0b00;
  6668  00385E  0ECF               	movlw	-49
  6669  003860  16C1               	andwf	193,f,c	;volatile
  6670                           
  6671                           ;Sensor_luz.c: 25:     ADCON0bits.CHS = 0b0001;
  6672  003862  50C2               	movf	194,w,c	;volatile
  6673  003864  0BC3               	andlw	-61
  6674  003866  0904               	iorlw	4
  6675  003868  6EC2               	movwf	194,c	;volatile
  6676                           
  6677                           ;Sensor_luz.c: 26:     ADCON2bits.ACQT = 0b010;
  6678  00386A  50C0               	movf	192,w,c	;volatile
  6679  00386C  0BC7               	andlw	-57
  6680  00386E  0910               	iorlw	16
  6681  003870  6EC0               	movwf	192,c	;volatile
  6682                           
  6683                           ;Sensor_luz.c: 27:     ADCON2bits.ADCS = 0b001;
  6684  003872  50C0               	movf	192,w,c	;volatile
  6685  003874  0BF8               	andlw	-8
  6686  003876  0901               	iorlw	1
  6687  003878  6EC0               	movwf	192,c	;volatile
  6688  00387A                     
  6689                           ;Sensor_luz.c: 28:     ADCON2bits.ADFM = 1;
  6690  00387A  8EC0               	bsf	192,7,c	;volatile
  6691  00387C                     
  6692                           ;Sensor_luz.c: 29:     ADCON0bits.ADON = 1;
  6693  00387C  80C2               	bsf	194,0,c	;volatile
  6694  00387E                     
  6695                           ;Sensor_luz.c: 44:         ADCON0bits.GO_DONE = 1;
  6696  00387E  82C2               	bsf	194,1,c	;volatile
  6697  003880                     l167:
  6698  003880  B2C2               	btfsc	194,1,c	;volatile
  6699  003882  EF45  F01C         	goto	u5081
  6700  003886  EF47  F01C         	goto	u5080
  6701  00388A                     u5081:
  6702  00388A  EF40  F01C         	goto	l167
  6703  00388E                     u5080:
  6704  00388E                     
  6705                           ;Sensor_luz.c: 46:         result = ADRESH;
  6706  00388E  CFC4 F005          	movff	4036,ReadLUZ@result	;volatile
  6707  003892  6A06               	clrf	(ReadLUZ@result+1)^0,c
  6708  003894                     
  6709                           ;Sensor_luz.c: 47:         result = (result << 8) + ADRESL;
  6710  003894  5005               	movf	ReadLUZ@result^0,w,c
  6711  003896  6E03               	movwf	??_ReadLUZ^0,c
  6712  003898  50C3               	movf	195,w,c	;volatile
  6713  00389A  6E05               	movwf	ReadLUZ@result^0,c
  6714  00389C  C003  F006         	movff	??_ReadLUZ,ReadLUZ@result+1
  6715  0038A0                     
  6716                           ;Sensor_luz.c: 49:         return result;
  6717  0038A0  C005  F001         	movff	ReadLUZ@result,?_ReadLUZ
  6718  0038A4  C006  F002         	movff	ReadLUZ@result+1,?_ReadLUZ+1
  6719  0038A8  0012               	return		;funcret
  6720  0038AA                     __end_of_ReadLUZ:
  6721                           	callstack 0
  6722                           
  6723 ;; *************** function _ReadADC *****************
  6724 ;; Defined at:
  6725 ;;		line 16 in file "Temperatura.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;		None
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  result          2    6[BANK0 ] unsigned short 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  2    2[BANK0 ] unsigned short 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6739 ;;      Params:         0       2       0       0       0       0       0       0       0
  6740 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6741 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6742 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6743 ;;Total ram usage:        6 bytes
  6744 ;; Hardware stack levels used: 1
  6745 ;; Hardware stack levels required when called: 1
  6746 ;; This function calls:
  6747 ;;		___fladd
  6748 ;;		___fldiv
  6749 ;;		___flmul
  6750 ;;		___fltol
  6751 ;;		___xxtofl
  6752 ;; This function is called by:
  6753 ;;		_main
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text27
  6758  0032C2                     __ptext27:
  6759                           	callstack 0
  6760  0032C2                     _ReadADC:
  6761                           	callstack 29
  6762  0032C2                     
  6763                           ;Temperatura.c: 18:     uint16_t result;;Temperatura.c: 20:     TRISD = 0x00;
  6764  0032C2  0E00               	movlw	0
  6765  0032C4  6E95               	movwf	149,c	;volatile
  6766  0032C6                     
  6767                           ;Temperatura.c: 21:     TRISA = 0xFF;
  6768  0032C6  6892               	setf	146,c	;volatile
  6769                           
  6770                           ;Temperatura.c: 23:     OSCCONbits.IRCF = 0b111;
  6771  0032C8  0E70               	movlw	112
  6772  0032CA  12D3               	iorwf	211,f,c	;volatile
  6773                           
  6774                           ;Temperatura.c: 24:     OSCCONbits.SCS = 0b10;
  6775  0032CC  50D3               	movf	211,w,c	;volatile
  6776  0032CE  0BFC               	andlw	-4
  6777  0032D0  0902               	iorlw	2
  6778  0032D2  6ED3               	movwf	211,c	;volatile
  6779                           
  6780                           ;Temperatura.c: 27:     ADCON1bits.PCFG = 0b1110;
  6781  0032D4  50C1               	movf	193,w,c	;volatile
  6782  0032D6  0BF0               	andlw	-16
  6783  0032D8  090E               	iorlw	14
  6784  0032DA  6EC1               	movwf	193,c	;volatile
  6785                           
  6786                           ;Temperatura.c: 28:     ADCON1bits.VCFG = 0b00;
  6787  0032DC  0ECF               	movlw	-49
  6788  0032DE  16C1               	andwf	193,f,c	;volatile
  6789                           
  6790                           ;Temperatura.c: 29:     ADCON0bits.CHS = 0b0000;
  6791  0032E0  0EC3               	movlw	-61
  6792  0032E2  16C2               	andwf	194,f,c	;volatile
  6793                           
  6794                           ;Temperatura.c: 30:     ADCON2bits.ACQT = 0b010;
  6795  0032E4  50C0               	movf	192,w,c	;volatile
  6796  0032E6  0BC7               	andlw	-57
  6797  0032E8  0910               	iorlw	16
  6798  0032EA  6EC0               	movwf	192,c	;volatile
  6799                           
  6800                           ;Temperatura.c: 31:     ADCON2bits.ADCS = 0b001;
  6801  0032EC  50C0               	movf	192,w,c	;volatile
  6802  0032EE  0BF8               	andlw	-8
  6803  0032F0  0901               	iorlw	1
  6804  0032F2  6EC0               	movwf	192,c	;volatile
  6805  0032F4                     
  6806                           ;Temperatura.c: 32:     ADCON2bits.ADFM = 1;
  6807  0032F4  8EC0               	bsf	192,7,c	;volatile
  6808  0032F6                     
  6809                           ;Temperatura.c: 33:     ADCON0bits.ADON = 1;
  6810  0032F6  80C2               	bsf	194,0,c	;volatile
  6811  0032F8                     
  6812                           ;Temperatura.c: 48:         ADCON0bits.GO_DONE = 1;
  6813  0032F8  82C2               	bsf	194,1,c	;volatile
  6814  0032FA                     l142:
  6815  0032FA  B2C2               	btfsc	194,1,c	;volatile
  6816  0032FC  EF82  F019         	goto	u5071
  6817  003300  EF84  F019         	goto	u5070
  6818  003304                     u5071:
  6819  003304  EF7D  F019         	goto	l142
  6820  003308                     u5070:
  6821  003308                     
  6822                           ;Temperatura.c: 50:         result = ADRESH;
  6823  003308  CFC4 F066          	movff	4036,ReadADC@result	;volatile
  6824  00330C  0100               	movlb	0	; () banked
  6825  00330E  6B67               	clrf	(ReadADC@result+1)& (0+255),b
  6826  003310                     
  6827                           ; BSR set to: 0
  6828                           ;Temperatura.c: 51:         result = (result << 8) + ADRESL;
  6829  003310  5166               	movf	ReadADC@result& (0+255),w,b
  6830  003312  6F64               	movwf	??_ReadADC& (0+255),b
  6831  003314  50C3               	movf	195,w,c	;volatile
  6832  003316  6F66               	movwf	ReadADC@result& (0+255),b
  6833  003318  C064  F067         	movff	??_ReadADC,ReadADC@result+1
  6834  00331C                     
  6835                           ; BSR set to: 0
  6836                           ;Temperatura.c: 52:         result = ((result*500.0)/1023.0)-50;
  6837  00331C  0E00               	movlw	0
  6838  00331E  6E4B               	movwf	___fladd@a^0,c
  6839  003320  0E00               	movlw	0
  6840  003322  6E4C               	movwf	(___fladd@a+1)^0,c
  6841  003324  0E48               	movlw	72
  6842  003326  6E4D               	movwf	(___fladd@a+2)^0,c
  6843  003328  0EC2               	movlw	194
  6844  00332A  6E4E               	movwf	(___fladd@a+3)^0,c
  6845  00332C  0E00               	movlw	0
  6846  00332E  6E32               	movwf	___fldiv@a^0,c
  6847  003330  0EC0               	movlw	192
  6848  003332  6E33               	movwf	(___fldiv@a+1)^0,c
  6849  003334  0E7F               	movlw	127
  6850  003336  6E34               	movwf	(___fldiv@a+2)^0,c
  6851  003338  0E44               	movlw	68
  6852  00333A  6E35               	movwf	(___fldiv@a+3)^0,c
  6853  00333C  0E00               	movlw	0
  6854  00333E  6E19               	movwf	___flmul@a^0,c
  6855  003340  0E00               	movlw	0
  6856  003342  6E1A               	movwf	(___flmul@a+1)^0,c
  6857  003344  0EFA               	movlw	250
  6858  003346  6E1B               	movwf	(___flmul@a+2)^0,c
  6859  003348  0E43               	movlw	67
  6860  00334A  6E1C               	movwf	(___flmul@a+3)^0,c
  6861  00334C  C066  F007         	movff	ReadADC@result,___xxtofl@val
  6862  003350  C067  F008         	movff	ReadADC@result+1,___xxtofl@val+1
  6863  003354  6A09               	clrf	(___xxtofl@val+2)^0,c
  6864  003356  6A0A               	clrf	(___xxtofl@val+3)^0,c
  6865  003358  0E00               	movlw	0
  6866  00335A  EC3A  F016         	call	___xxtofl
  6867  00335E  C007  F015         	movff	?___xxtofl,___flmul@b
  6868  003362  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  6869  003366  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  6870  00336A  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  6871  00336E  EC4F  F011         	call	___flmul	;wreg free
  6872  003372  C015  F02E         	movff	?___flmul,___fldiv@b
  6873  003376  C016  F02F         	movff	?___flmul+1,___fldiv@b+1
  6874  00337A  C017  F030         	movff	?___flmul+2,___fldiv@b+2
  6875  00337E  C018  F031         	movff	?___flmul+3,___fldiv@b+3
  6876  003382  EC64  F013         	call	___fldiv	;wreg free
  6877  003386  C02E  F047         	movff	?___fldiv,___fladd@b
  6878  00338A  C02F  F048         	movff	?___fldiv+1,___fladd@b+1
  6879  00338E  C030  F049         	movff	?___fldiv+2,___fladd@b+2
  6880  003392  C031  F04A         	movff	?___fldiv+3,___fladd@b+3
  6881  003396  ECD9  F00C         	call	___fladd	;wreg free
  6882  00339A  C047  F057         	movff	?___fladd,___fltol@f1
  6883  00339E  C048  F058         	movff	?___fladd+1,___fltol@f1+1
  6884  0033A2  C049  F059         	movff	?___fladd+2,___fltol@f1+2
  6885  0033A6  C04A  F05A         	movff	?___fladd+3,___fltol@f1+3
  6886  0033AA  ECDC  F017         	call	___fltol	;wreg free
  6887  0033AE  C057  F066         	movff	?___fltol,ReadADC@result
  6888  0033B2  C058  F067         	movff	?___fltol+1,ReadADC@result+1
  6889  0033B6                     
  6890                           ;Temperatura.c: 54:         return result;
  6891  0033B6  C066  F062         	movff	ReadADC@result,?_ReadADC
  6892  0033BA  C067  F063         	movff	ReadADC@result+1,?_ReadADC+1
  6893  0033BE  0012               	return		;funcret
  6894  0033C0                     __end_of_ReadADC:
  6895                           	callstack 0
  6896                           
  6897 ;; *************** function ___xxtofl *****************
  6898 ;; Defined at:
  6899 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  sign            1    wreg     unsigned char 
  6902 ;;  val             4    6[COMRAM] long 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;  sign            1   14[COMRAM] unsigned char 
  6905 ;;  arg             4   16[COMRAM] unsigned long 
  6906 ;;  exp             1   15[COMRAM] unsigned char 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  4    6[COMRAM] unsigned char 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6916 ;;      Params:         4       0       0       0       0       0       0       0       0
  6917 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6918 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6919 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6920 ;;Total ram usage:       14 bytes
  6921 ;; Hardware stack levels used: 1
  6922 ;; This function calls:
  6923 ;;		Nothing
  6924 ;; This function is called by:
  6925 ;;		_main
  6926 ;;		_ReadADC
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text28
  6931  002C74                     __ptext28:
  6932                           	callstack 0
  6933  002C74                     ___xxtofl:
  6934                           	callstack 30
  6935                           
  6936                           ;incstack = 0
  6937                           ;___xxtofl@sign stored from wreg
  6938  002C74  6E0F               	movwf	___xxtofl@sign^0,c
  6939  002C76  500F               	movf	___xxtofl@sign^0,w,c
  6940  002C78  B4D8               	btfsc	status,2,c
  6941  002C7A  EF41  F016         	goto	u4951
  6942  002C7E  EF43  F016         	goto	u4950
  6943  002C82                     u4951:
  6944  002C82  EF65  F016         	goto	l830
  6945  002C86                     u4950:
  6946  002C86  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  6947  002C88  EF4A  F016         	goto	u4960
  6948  002C8C  EF48  F016         	goto	u4961
  6949  002C90                     u4961:
  6950  002C90  EF65  F016         	goto	l830
  6951  002C94                     u4960:
  6952  002C94  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  6953  002C98  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  6954  002C9C  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  6955  002CA0  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  6956  002CA4  1E0B               	comf	??___xxtofl^0,f,c
  6957  002CA6  1E0C               	comf	(??___xxtofl+1)^0,f,c
  6958  002CA8  1E0D               	comf	(??___xxtofl+2)^0,f,c
  6959  002CAA  1E0E               	comf	(??___xxtofl+3)^0,f,c
  6960  002CAC  2A0B               	incf	??___xxtofl^0,f,c
  6961  002CAE  0E00               	movlw	0
  6962  002CB0  220C               	addwfc	(??___xxtofl+1)^0,f,c
  6963  002CB2  220D               	addwfc	(??___xxtofl+2)^0,f,c
  6964  002CB4  220E               	addwfc	(??___xxtofl+3)^0,f,c
  6965  002CB6  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  6966  002CBA  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  6967  002CBE  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  6968  002CC2  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  6969  002CC6  EF6D  F016         	goto	l4189
  6970  002CCA                     l830:
  6971  002CCA  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  6972  002CCE  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6973  002CD2  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6974  002CD6  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6975  002CDA                     l4189:
  6976  002CDA  5007               	movf	___xxtofl@val^0,w,c
  6977  002CDC  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  6978  002CDE  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  6979  002CE0  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  6980  002CE2  A4D8               	btfss	status,2,c
  6981  002CE4  EF76  F016         	goto	u4971
  6982  002CE8  EF78  F016         	goto	u4970
  6983  002CEC                     u4971:
  6984  002CEC  EF82  F016         	goto	l4195
  6985  002CF0                     u4970:
  6986  002CF0  0E00               	movlw	0
  6987  002CF2  6E07               	movwf	?___xxtofl^0,c
  6988  002CF4  0E00               	movlw	0
  6989  002CF6  6E08               	movwf	(?___xxtofl+1)^0,c
  6990  002CF8  0E00               	movlw	0
  6991  002CFA  6E09               	movwf	(?___xxtofl+2)^0,c
  6992  002CFC  0E00               	movlw	0
  6993  002CFE  6E0A               	movwf	(?___xxtofl+3)^0,c
  6994  002D00  EF13  F017         	goto	l833
  6995  002D04                     l4195:
  6996  002D04  0E96               	movlw	150
  6997  002D06  6E10               	movwf	___xxtofl@exp^0,c
  6998  002D08  EF8C  F016         	goto	l4199
  6999  002D0C                     l4197:
  7000  002D0C  2A10               	incf	___xxtofl@exp^0,f,c
  7001  002D0E  90D8               	bcf	status,0,c
  7002  002D10  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  7003  002D12  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  7004  002D14  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  7005  002D16  3211               	rrcf	___xxtofl@arg^0,f,c
  7006  002D18                     l4199:
  7007  002D18  0E00               	movlw	0
  7008  002D1A  1411               	andwf	___xxtofl@arg^0,w,c
  7009  002D1C  6E0B               	movwf	??___xxtofl^0,c
  7010  002D1E  0E00               	movlw	0
  7011  002D20  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  7012  002D22  6E0C               	movwf	(??___xxtofl+1)^0,c
  7013  002D24  0E00               	movlw	0
  7014  002D26  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  7015  002D28  6E0D               	movwf	(??___xxtofl+2)^0,c
  7016  002D2A  0EFE               	movlw	254
  7017  002D2C  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  7018  002D2E  6E0E               	movwf	(??___xxtofl+3)^0,c
  7019  002D30  500B               	movf	??___xxtofl^0,w,c
  7020  002D32  100C               	iorwf	(??___xxtofl+1)^0,w,c
  7021  002D34  100D               	iorwf	(??___xxtofl+2)^0,w,c
  7022  002D36  100E               	iorwf	(??___xxtofl+3)^0,w,c
  7023  002D38  A4D8               	btfss	status,2,c
  7024  002D3A  EFA1  F016         	goto	u4981
  7025  002D3E  EFA3  F016         	goto	u4980
  7026  002D42                     u4981:
  7027  002D42  EF86  F016         	goto	l4197
  7028  002D46                     u4980:
  7029  002D46  EFB1  F016         	goto	l837
  7030  002D4A                     l4201:
  7031  002D4A  2A10               	incf	___xxtofl@exp^0,f,c
  7032  002D4C  0E01               	movlw	1
  7033  002D4E  2611               	addwf	___xxtofl@arg^0,f,c
  7034  002D50  0E00               	movlw	0
  7035  002D52  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  7036  002D54  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  7037  002D56  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  7038  002D58  90D8               	bcf	status,0,c
  7039  002D5A  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  7040  002D5C  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  7041  002D5E  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  7042  002D60  3211               	rrcf	___xxtofl@arg^0,f,c
  7043  002D62                     l837:
  7044  002D62  0E00               	movlw	0
  7045  002D64  1411               	andwf	___xxtofl@arg^0,w,c
  7046  002D66  6E0B               	movwf	??___xxtofl^0,c
  7047  002D68  0E00               	movlw	0
  7048  002D6A  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  7049  002D6C  6E0C               	movwf	(??___xxtofl+1)^0,c
  7050  002D6E  0E00               	movlw	0
  7051  002D70  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  7052  002D72  6E0D               	movwf	(??___xxtofl+2)^0,c
  7053  002D74  0EFF               	movlw	255
  7054  002D76  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  7055  002D78  6E0E               	movwf	(??___xxtofl+3)^0,c
  7056  002D7A  500B               	movf	??___xxtofl^0,w,c
  7057  002D7C  100C               	iorwf	(??___xxtofl+1)^0,w,c
  7058  002D7E  100D               	iorwf	(??___xxtofl+2)^0,w,c
  7059  002D80  100E               	iorwf	(??___xxtofl+3)^0,w,c
  7060  002D82  A4D8               	btfss	status,2,c
  7061  002D84  EFC6  F016         	goto	u4991
  7062  002D88  EFC8  F016         	goto	u4990
  7063  002D8C                     u4991:
  7064  002D8C  EFA5  F016         	goto	l4201
  7065  002D90                     u4990:
  7066  002D90  EFD0  F016         	goto	l4209
  7067  002D94                     l4207:
  7068  002D94  0610               	decf	___xxtofl@exp^0,f,c
  7069  002D96  90D8               	bcf	status,0,c
  7070  002D98  3611               	rlcf	___xxtofl@arg^0,f,c
  7071  002D9A  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  7072  002D9C  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  7073  002D9E  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  7074  002DA0                     l4209:
  7075  002DA0  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  7076  002DA2  EFD5  F016         	goto	u5001
  7077  002DA6  EFD7  F016         	goto	u5000
  7078  002DAA                     u5001:
  7079  002DAA  EFDF  F016         	goto	l844
  7080  002DAE                     u5000:
  7081  002DAE  0E02               	movlw	2
  7082  002DB0  6010               	cpfslt	___xxtofl@exp^0,c
  7083  002DB2  EFDD  F016         	goto	u5011
  7084  002DB6  EFDF  F016         	goto	u5010
  7085  002DBA                     u5011:
  7086  002DBA  EFCA  F016         	goto	l4207
  7087  002DBE                     u5010:
  7088  002DBE                     l844:
  7089  002DBE  B010               	btfsc	___xxtofl@exp^0,0,c
  7090  002DC0  EFE4  F016         	goto	u5021
  7091  002DC4  EFE6  F016         	goto	u5020
  7092  002DC8                     u5021:
  7093  002DC8  EFE7  F016         	goto	l4215
  7094  002DCC                     u5020:
  7095  002DCC  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  7096  002DCE                     l4215:
  7097  002DCE  90D8               	bcf	status,0,c
  7098  002DD0  3210               	rrcf	___xxtofl@exp^0,f,c
  7099  002DD2  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  7100  002DD6  6A0C               	clrf	(??___xxtofl+1)^0,c
  7101  002DD8  6A0D               	clrf	(??___xxtofl+2)^0,c
  7102  002DDA  6A0E               	clrf	(??___xxtofl+3)^0,c
  7103  002DDC  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  7104  002DE0  6A0D               	clrf	(??___xxtofl+2)^0,c
  7105  002DE2  6A0C               	clrf	(??___xxtofl+1)^0,c
  7106  002DE4  6A0B               	clrf	??___xxtofl^0,c
  7107  002DE6  500B               	movf	??___xxtofl^0,w,c
  7108  002DE8  1211               	iorwf	___xxtofl@arg^0,f,c
  7109  002DEA  500C               	movf	(??___xxtofl+1)^0,w,c
  7110  002DEC  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  7111  002DEE  500D               	movf	(??___xxtofl+2)^0,w,c
  7112  002DF0  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  7113  002DF2  500E               	movf	(??___xxtofl+3)^0,w,c
  7114  002DF4  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  7115  002DF6  500F               	movf	___xxtofl@sign^0,w,c
  7116  002DF8  B4D8               	btfsc	status,2,c
  7117  002DFA  EF01  F017         	goto	u5031
  7118  002DFE  EF03  F017         	goto	u5030
  7119  002E02                     u5031:
  7120  002E02  EF0B  F017         	goto	l4225
  7121  002E06                     u5030:
  7122  002E06  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  7123  002E08  EF0A  F017         	goto	u5040
  7124  002E0C  EF08  F017         	goto	u5041
  7125  002E10                     u5041:
  7126  002E10  EF0B  F017         	goto	l4225
  7127  002E14                     u5040:
  7128  002E14  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  7129  002E16                     l4225:
  7130  002E16  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  7131  002E1A  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  7132  002E1E  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  7133  002E22  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  7134  002E26                     l833:
  7135  002E26  0012               	return		;funcret
  7136  002E28                     __end_of___xxtofl:
  7137                           	callstack 0
  7138                           
  7139 ;; *************** function ___fltol *****************
  7140 ;; Defined at:
  7141 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  f1              4   86[COMRAM] unsigned char 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;  exp1            1    1[BANK0 ] unsigned char 
  7146 ;;  sign1           1    0[BANK0 ] unsigned char 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  4   86[COMRAM] long 
  7149 ;; Registers used:
  7150 ;;		wreg, status,2, status,0
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7156 ;;      Params:         4       0       0       0       0       0       0       0       0
  7157 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7158 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7159 ;;      Totals:         8       2       0       0       0       0       0       0       0
  7160 ;;Total ram usage:       10 bytes
  7161 ;; Hardware stack levels used: 1
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_ReadADC
  7166 ;;		_efgtoa
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           
  7170                           	psect	text29
  7171  002FB8                     __ptext29:
  7172                           	callstack 0
  7173  002FB8                     ___fltol:
  7174                           	callstack 26
  7175  002FB8  3459               	rlcf	(___fltol@f1+2)^0,w,c
  7176  002FBA  345A               	rlcf	(___fltol@f1+3)^0,w,c
  7177  002FBC  0100               	movlb	0	; () banked
  7178  002FBE  6F61               	movwf	___fltol@exp1& (0+255),b
  7179  002FC0  5161               	movf	___fltol@exp1& (0+255),w,b
  7180  002FC2  A4D8               	btfss	status,2,c
  7181  002FC4  EFE6  F017         	goto	u3711
  7182  002FC8  EFE8  F017         	goto	u3710
  7183  002FCC                     u3711:
  7184  002FCC  EFF2  F017         	goto	l3481
  7185  002FD0                     u3710:
  7186  002FD0                     l3477:
  7187                           
  7188                           ; BSR set to: 0
  7189  002FD0  0E00               	movlw	0
  7190  002FD2  6E57               	movwf	?___fltol^0,c
  7191  002FD4  0E00               	movlw	0
  7192  002FD6  6E58               	movwf	(?___fltol+1)^0,c
  7193  002FD8  0E00               	movlw	0
  7194  002FDA  6E59               	movwf	(?___fltol+2)^0,c
  7195  002FDC  0E00               	movlw	0
  7196  002FDE  6E5A               	movwf	(?___fltol+3)^0,c
  7197  002FE0  EF5F  F018         	goto	l472
  7198  002FE4                     l3481:
  7199                           
  7200                           ; BSR set to: 0
  7201  002FE4  C057  F05B         	movff	___fltol@f1,??___fltol
  7202  002FE8  C058  F05C         	movff	___fltol@f1+1,??___fltol+1
  7203  002FEC  C059  F05D         	movff	___fltol@f1+2,??___fltol+2
  7204  002FF0  C05A  F05E         	movff	___fltol@f1+3,??___fltol+3
  7205  002FF4  0E20               	movlw	32
  7206  002FF6  EF02  F018         	goto	u3720
  7207  002FFA                     u3725:
  7208  002FFA  90D8               	bcf	status,0,c
  7209  002FFC  325E               	rrcf	(??___fltol+3)^0,f,c
  7210  002FFE  325D               	rrcf	(??___fltol+2)^0,f,c
  7211  003000  325C               	rrcf	(??___fltol+1)^0,f,c
  7212  003002  325B               	rrcf	??___fltol^0,f,c
  7213  003004                     u3720:
  7214  003004  2EE8               	decfsz	wreg,f,c
  7215  003006  EFFD  F017         	goto	u3725
  7216  00300A  505B               	movf	??___fltol^0,w,c
  7217  00300C  6F60               	movwf	___fltol@sign1& (0+255),b
  7218  00300E                     
  7219                           ; BSR set to: 0
  7220  00300E  8E59               	bsf	(___fltol@f1+2)^0,7,c
  7221  003010                     
  7222                           ; BSR set to: 0
  7223  003010  0EFF               	movlw	255
  7224  003012  1657               	andwf	___fltol@f1^0,f,c
  7225  003014  0EFF               	movlw	255
  7226  003016  1658               	andwf	(___fltol@f1+1)^0,f,c
  7227  003018  0EFF               	movlw	255
  7228  00301A  1659               	andwf	(___fltol@f1+2)^0,f,c
  7229  00301C  0E00               	movlw	0
  7230  00301E  165A               	andwf	(___fltol@f1+3)^0,f,c
  7231  003020                     
  7232                           ; BSR set to: 0
  7233  003020  0E96               	movlw	150
  7234  003022  5F61               	subwf	___fltol@exp1& (0+255),f,b
  7235  003024                     
  7236                           ; BSR set to: 0
  7237  003024  BF61               	btfsc	___fltol@exp1& (0+255),7,b
  7238  003026  EF19  F018         	goto	u3730
  7239  00302A  EF17  F018         	goto	u3731
  7240  00302E                     u3731:
  7241  00302E  EF2F  F018         	goto	l3501
  7242  003032                     u3730:
  7243  003032                     
  7244                           ; BSR set to: 0
  7245  003032  5161               	movf	___fltol@exp1& (0+255),w,b
  7246  003034  0A80               	xorlw	128
  7247  003036  0F97               	addlw	151
  7248  003038  B0D8               	btfsc	status,0,c
  7249  00303A  EF21  F018         	goto	u3741
  7250  00303E  EF23  F018         	goto	u3740
  7251  003042                     u3741:
  7252  003042  EF25  F018         	goto	l3497
  7253  003046                     u3740:
  7254  003046  EFE8  F017         	goto	l3477
  7255  00304A                     l3497:
  7256                           
  7257                           ; BSR set to: 0
  7258  00304A  90D8               	bcf	status,0,c
  7259  00304C  325A               	rrcf	(___fltol@f1+3)^0,f,c
  7260  00304E  3259               	rrcf	(___fltol@f1+2)^0,f,c
  7261  003050  3258               	rrcf	(___fltol@f1+1)^0,f,c
  7262  003052  3257               	rrcf	___fltol@f1^0,f,c
  7263  003054                     
  7264                           ; BSR set to: 0
  7265  003054  3F61               	incfsz	___fltol@exp1& (0+255),f,b
  7266  003056  EF25  F018         	goto	l3497
  7267  00305A  EF47  F018         	goto	l3511
  7268  00305E                     l3501:
  7269                           
  7270                           ; BSR set to: 0
  7271  00305E  0E1F               	movlw	31
  7272  003060  6561               	cpfsgt	___fltol@exp1& (0+255),b
  7273  003062  EF35  F018         	goto	u3751
  7274  003066  EF37  F018         	goto	u3750
  7275  00306A                     u3751:
  7276  00306A  EF3F  F018         	goto	l3509
  7277  00306E                     u3750:
  7278  00306E  EFE8  F017         	goto	l3477
  7279  003072                     l3507:
  7280                           
  7281                           ; BSR set to: 0
  7282  003072  90D8               	bcf	status,0,c
  7283  003074  3657               	rlcf	___fltol@f1^0,f,c
  7284  003076  3658               	rlcf	(___fltol@f1+1)^0,f,c
  7285  003078  3659               	rlcf	(___fltol@f1+2)^0,f,c
  7286  00307A  365A               	rlcf	(___fltol@f1+3)^0,f,c
  7287  00307C  0761               	decf	___fltol@exp1& (0+255),f,b
  7288  00307E                     l3509:
  7289                           
  7290                           ; BSR set to: 0
  7291  00307E  5161               	movf	___fltol@exp1& (0+255),w,b
  7292  003080  A4D8               	btfss	status,2,c
  7293  003082  EF45  F018         	goto	u3761
  7294  003086  EF47  F018         	goto	u3760
  7295  00308A                     u3761:
  7296  00308A  EF39  F018         	goto	l3507
  7297  00308E                     u3760:
  7298  00308E                     l3511:
  7299                           
  7300                           ; BSR set to: 0
  7301  00308E  5160               	movf	___fltol@sign1& (0+255),w,b
  7302  003090  B4D8               	btfsc	status,2,c
  7303  003092  EF4D  F018         	goto	u3771
  7304  003096  EF4F  F018         	goto	u3770
  7305  00309A                     u3771:
  7306  00309A  EF57  F018         	goto	l3515
  7307  00309E                     u3770:
  7308  00309E                     
  7309                           ; BSR set to: 0
  7310  00309E  1E5A               	comf	(___fltol@f1+3)^0,f,c
  7311  0030A0  1E59               	comf	(___fltol@f1+2)^0,f,c
  7312  0030A2  1E58               	comf	(___fltol@f1+1)^0,f,c
  7313  0030A4  6C57               	negf	___fltol@f1^0,c
  7314  0030A6  0E00               	movlw	0
  7315  0030A8  2258               	addwfc	(___fltol@f1+1)^0,f,c
  7316  0030AA  2259               	addwfc	(___fltol@f1+2)^0,f,c
  7317  0030AC  225A               	addwfc	(___fltol@f1+3)^0,f,c
  7318  0030AE                     l3515:
  7319                           
  7320                           ; BSR set to: 0
  7321  0030AE  C057  F057         	movff	___fltol@f1,?___fltol
  7322  0030B2  C058  F058         	movff	___fltol@f1+1,?___fltol+1
  7323  0030B6  C059  F059         	movff	___fltol@f1+2,?___fltol+2
  7324  0030BA  C05A  F05A         	movff	___fltol@f1+3,?___fltol+3
  7325  0030BE                     l472:
  7326                           
  7327                           ; BSR set to: 0
  7328  0030BE  0012               	return		;funcret
  7329  0030C0                     __end_of___fltol:
  7330                           	callstack 0
  7331                           
  7332 ;; *************** function ___flmul *****************
  7333 ;; Defined at:
  7334 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  b               4   20[COMRAM] long 
  7337 ;;  a               4   24[COMRAM] long 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  prod            4   39[COMRAM] struct .
  7340 ;;  grs             4   33[COMRAM] unsigned long 
  7341 ;;  temp            2   43[COMRAM] struct .
  7342 ;;  bexp            1   38[COMRAM] unsigned char 
  7343 ;;  aexp            1   37[COMRAM] unsigned char 
  7344 ;;  sign            1   32[COMRAM] unsigned char 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  4   20[COMRAM] unsigned char 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2, status,0, prodl, prodh
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7354 ;;      Params:         8       0       0       0       0       0       0       0       0
  7355 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7356 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7357 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7358 ;;Total ram usage:       25 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_ReadADC
  7364 ;;		_efgtoa
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           	psect	text30
  7369  00229E                     __ptext30:
  7370                           	callstack 0
  7371  00229E                     ___flmul:
  7372                           	callstack 26
  7373  00229E  5018               	movf	(___flmul@b+3)^0,w,c
  7374  0022A0  0B80               	andlw	128
  7375  0022A2  6E21               	movwf	___flmul@sign^0,c
  7376  0022A4  5018               	movf	(___flmul@b+3)^0,w,c
  7377  0022A6  2418               	addwf	(___flmul@b+3)^0,w,c
  7378  0022A8  6E27               	movwf	___flmul@bexp^0,c
  7379  0022AA  AE17               	btfss	(___flmul@b+2)^0,7,c
  7380  0022AC  EF5A  F011         	goto	u3311
  7381  0022B0  EF5C  F011         	goto	u3310
  7382  0022B4                     u3311:
  7383  0022B4  EF5D  F011         	goto	l3219
  7384  0022B8                     u3310:
  7385  0022B8  8027               	bsf	___flmul@bexp^0,0,c
  7386  0022BA                     l3219:
  7387  0022BA  5027               	movf	___flmul@bexp^0,w,c
  7388  0022BC  B4D8               	btfsc	status,2,c
  7389  0022BE  EF63  F011         	goto	u3321
  7390  0022C2  EF65  F011         	goto	u3320
  7391  0022C6                     u3321:
  7392  0022C6  EF78  F011         	goto	l3227
  7393  0022CA                     u3320:
  7394  0022CA  2827               	incf	___flmul@bexp^0,w,c
  7395  0022CC  A4D8               	btfss	status,2,c
  7396  0022CE  EF6B  F011         	goto	u3331
  7397  0022D2  EF6D  F011         	goto	u3330
  7398  0022D6                     u3331:
  7399  0022D6  EF75  F011         	goto	l3225
  7400  0022DA                     u3330:
  7401  0022DA  0E00               	movlw	0
  7402  0022DC  6E15               	movwf	___flmul@b^0,c
  7403  0022DE  0E00               	movlw	0
  7404  0022E0  6E16               	movwf	(___flmul@b+1)^0,c
  7405  0022E2  0E00               	movlw	0
  7406  0022E4  6E17               	movwf	(___flmul@b+2)^0,c
  7407  0022E6  0E00               	movlw	0
  7408  0022E8  6E18               	movwf	(___flmul@b+3)^0,c
  7409  0022EA                     l3225:
  7410  0022EA  8E17               	bsf	(___flmul@b+2)^0,7,c
  7411  0022EC  EF80  F011         	goto	l3229
  7412  0022F0                     l3227:
  7413  0022F0  0E00               	movlw	0
  7414  0022F2  6E15               	movwf	___flmul@b^0,c
  7415  0022F4  0E00               	movlw	0
  7416  0022F6  6E16               	movwf	(___flmul@b+1)^0,c
  7417  0022F8  0E00               	movlw	0
  7418  0022FA  6E17               	movwf	(___flmul@b+2)^0,c
  7419  0022FC  0E00               	movlw	0
  7420  0022FE  6E18               	movwf	(___flmul@b+3)^0,c
  7421  002300                     l3229:
  7422  002300  501C               	movf	(___flmul@a+3)^0,w,c
  7423  002302  0B80               	andlw	128
  7424  002304  1A21               	xorwf	___flmul@sign^0,f,c
  7425  002306  501C               	movf	(___flmul@a+3)^0,w,c
  7426  002308  241C               	addwf	(___flmul@a+3)^0,w,c
  7427  00230A  6E26               	movwf	___flmul@aexp^0,c
  7428  00230C  AE1B               	btfss	(___flmul@a+2)^0,7,c
  7429  00230E  EF8B  F011         	goto	u3341
  7430  002312  EF8D  F011         	goto	u3340
  7431  002316                     u3341:
  7432  002316  EF8E  F011         	goto	l3237
  7433  00231A                     u3340:
  7434  00231A  8026               	bsf	___flmul@aexp^0,0,c
  7435  00231C                     l3237:
  7436  00231C  5026               	movf	___flmul@aexp^0,w,c
  7437  00231E  B4D8               	btfsc	status,2,c
  7438  002320  EF94  F011         	goto	u3351
  7439  002324  EF96  F011         	goto	u3350
  7440  002328                     u3351:
  7441  002328  EFA9  F011         	goto	l3245
  7442  00232C                     u3350:
  7443  00232C  2826               	incf	___flmul@aexp^0,w,c
  7444  00232E  A4D8               	btfss	status,2,c
  7445  002330  EF9C  F011         	goto	u3361
  7446  002334  EF9E  F011         	goto	u3360
  7447  002338                     u3361:
  7448  002338  EFA6  F011         	goto	l3243
  7449  00233C                     u3360:
  7450  00233C  0E00               	movlw	0
  7451  00233E  6E19               	movwf	___flmul@a^0,c
  7452  002340  0E00               	movlw	0
  7453  002342  6E1A               	movwf	(___flmul@a+1)^0,c
  7454  002344  0E00               	movlw	0
  7455  002346  6E1B               	movwf	(___flmul@a+2)^0,c
  7456  002348  0E00               	movlw	0
  7457  00234A  6E1C               	movwf	(___flmul@a+3)^0,c
  7458  00234C                     l3243:
  7459  00234C  8E1B               	bsf	(___flmul@a+2)^0,7,c
  7460  00234E  EFB1  F011         	goto	l789
  7461  002352                     l3245:
  7462  002352  0E00               	movlw	0
  7463  002354  6E19               	movwf	___flmul@a^0,c
  7464  002356  0E00               	movlw	0
  7465  002358  6E1A               	movwf	(___flmul@a+1)^0,c
  7466  00235A  0E00               	movlw	0
  7467  00235C  6E1B               	movwf	(___flmul@a+2)^0,c
  7468  00235E  0E00               	movlw	0
  7469  002360  6E1C               	movwf	(___flmul@a+3)^0,c
  7470  002362                     l789:
  7471  002362  5026               	movf	___flmul@aexp^0,w,c
  7472  002364  B4D8               	btfsc	status,2,c
  7473  002366  EFB7  F011         	goto	u3371
  7474  00236A  EFB9  F011         	goto	u3370
  7475  00236E                     u3371:
  7476  00236E  EFC1  F011         	goto	l3249
  7477  002372                     u3370:
  7478  002372  5027               	movf	___flmul@bexp^0,w,c
  7479  002374  A4D8               	btfss	status,2,c
  7480  002376  EFBF  F011         	goto	u3381
  7481  00237A  EFC1  F011         	goto	u3380
  7482  00237E                     u3381:
  7483  00237E  EFCB  F011         	goto	l3253
  7484  002382                     u3380:
  7485  002382                     l3249:
  7486  002382  0E00               	movlw	0
  7487  002384  6E15               	movwf	?___flmul^0,c
  7488  002386  0E00               	movlw	0
  7489  002388  6E16               	movwf	(?___flmul+1)^0,c
  7490  00238A  0E00               	movlw	0
  7491  00238C  6E17               	movwf	(?___flmul+2)^0,c
  7492  00238E  0E00               	movlw	0
  7493  002390  6E18               	movwf	(?___flmul+3)^0,c
  7494  002392  EF63  F013         	goto	l793
  7495  002396                     l3253:
  7496  002396  501B               	movf	(___flmul@a+2)^0,w,c
  7497  002398  0215               	mulwf	___flmul@b^0,c
  7498  00239A  CFF3 F02C          	movff	prodl,___flmul@temp
  7499  00239E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7500  0023A2  502C               	movf	___flmul@temp^0,w,c
  7501  0023A4  6E22               	movwf	___flmul@grs^0,c
  7502  0023A6  6A23               	clrf	(___flmul@grs+1)^0,c
  7503  0023A8  6A24               	clrf	(___flmul@grs+2)^0,c
  7504  0023AA  6A25               	clrf	(___flmul@grs+3)^0,c
  7505  0023AC  502D               	movf	(___flmul@temp+1)^0,w,c
  7506  0023AE  6E28               	movwf	___flmul@prod^0,c
  7507  0023B0  6A29               	clrf	(___flmul@prod+1)^0,c
  7508  0023B2  6A2A               	clrf	(___flmul@prod+2)^0,c
  7509  0023B4  6A2B               	clrf	(___flmul@prod+3)^0,c
  7510  0023B6  501A               	movf	(___flmul@a+1)^0,w,c
  7511  0023B8  0216               	mulwf	(___flmul@b+1)^0,c
  7512  0023BA  CFF3 F02C          	movff	prodl,___flmul@temp
  7513  0023BE  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7514  0023C2  502C               	movf	___flmul@temp^0,w,c
  7515  0023C4  2622               	addwf	___flmul@grs^0,f,c
  7516  0023C6  0E00               	movlw	0
  7517  0023C8  2223               	addwfc	(___flmul@grs+1)^0,f,c
  7518  0023CA  2224               	addwfc	(___flmul@grs+2)^0,f,c
  7519  0023CC  2225               	addwfc	(___flmul@grs+3)^0,f,c
  7520  0023CE  502D               	movf	(___flmul@temp+1)^0,w,c
  7521  0023D0  2628               	addwf	___flmul@prod^0,f,c
  7522  0023D2  0E00               	movlw	0
  7523  0023D4  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7524  0023D6  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7525  0023D8  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7526  0023DA  5019               	movf	___flmul@a^0,w,c
  7527  0023DC  0217               	mulwf	(___flmul@b+2)^0,c
  7528  0023DE  CFF3 F02C          	movff	prodl,___flmul@temp
  7529  0023E2  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7530  0023E6  502C               	movf	___flmul@temp^0,w,c
  7531  0023E8  2622               	addwf	___flmul@grs^0,f,c
  7532  0023EA  0E00               	movlw	0
  7533  0023EC  2223               	addwfc	(___flmul@grs+1)^0,f,c
  7534  0023EE  2224               	addwfc	(___flmul@grs+2)^0,f,c
  7535  0023F0  2225               	addwfc	(___flmul@grs+3)^0,f,c
  7536  0023F2  502D               	movf	(___flmul@temp+1)^0,w,c
  7537  0023F4  2628               	addwf	___flmul@prod^0,f,c
  7538  0023F6  0E00               	movlw	0
  7539  0023F8  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7540  0023FA  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7541  0023FC  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7542  0023FE  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7543  002402  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7544  002406  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7545  00240A  6A22               	clrf	___flmul@grs^0,c
  7546  00240C  5019               	movf	___flmul@a^0,w,c
  7547  00240E  0216               	mulwf	(___flmul@b+1)^0,c
  7548  002410  CFF3 F02C          	movff	prodl,___flmul@temp
  7549  002414  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7550  002418  502C               	movf	___flmul@temp^0,w,c
  7551  00241A  2622               	addwf	___flmul@grs^0,f,c
  7552  00241C  502D               	movf	(___flmul@temp+1)^0,w,c
  7553  00241E  2223               	addwfc	(___flmul@grs+1)^0,f,c
  7554  002420  0E00               	movlw	0
  7555  002422  2224               	addwfc	(___flmul@grs+2)^0,f,c
  7556  002424  0E00               	movlw	0
  7557  002426  2225               	addwfc	(___flmul@grs+3)^0,f,c
  7558  002428  501A               	movf	(___flmul@a+1)^0,w,c
  7559  00242A  0215               	mulwf	___flmul@b^0,c
  7560  00242C  CFF3 F02C          	movff	prodl,___flmul@temp
  7561  002430  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7562  002434  502C               	movf	___flmul@temp^0,w,c
  7563  002436  2622               	addwf	___flmul@grs^0,f,c
  7564  002438  502D               	movf	(___flmul@temp+1)^0,w,c
  7565  00243A  2223               	addwfc	(___flmul@grs+1)^0,f,c
  7566  00243C  0E00               	movlw	0
  7567  00243E  2224               	addwfc	(___flmul@grs+2)^0,f,c
  7568  002440  0E00               	movlw	0
  7569  002442  2225               	addwfc	(___flmul@grs+3)^0,f,c
  7570  002444  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7571  002448  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7572  00244C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7573  002450  6A22               	clrf	___flmul@grs^0,c
  7574  002452  5019               	movf	___flmul@a^0,w,c
  7575  002454  0215               	mulwf	___flmul@b^0,c
  7576  002456  CFF3 F02C          	movff	prodl,___flmul@temp
  7577  00245A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7578  00245E  502C               	movf	___flmul@temp^0,w,c
  7579  002460  2622               	addwf	___flmul@grs^0,f,c
  7580  002462  502D               	movf	(___flmul@temp+1)^0,w,c
  7581  002464  2223               	addwfc	(___flmul@grs+1)^0,f,c
  7582  002466  0E00               	movlw	0
  7583  002468  2224               	addwfc	(___flmul@grs+2)^0,f,c
  7584  00246A  0E00               	movlw	0
  7585  00246C  2225               	addwfc	(___flmul@grs+3)^0,f,c
  7586  00246E  501B               	movf	(___flmul@a+2)^0,w,c
  7587  002470  0216               	mulwf	(___flmul@b+1)^0,c
  7588  002472  CFF3 F02C          	movff	prodl,___flmul@temp
  7589  002476  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7590  00247A  502C               	movf	___flmul@temp^0,w,c
  7591  00247C  2628               	addwf	___flmul@prod^0,f,c
  7592  00247E  502D               	movf	(___flmul@temp+1)^0,w,c
  7593  002480  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7594  002482  0E00               	movlw	0
  7595  002484  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7596  002486  0E00               	movlw	0
  7597  002488  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7598  00248A  501A               	movf	(___flmul@a+1)^0,w,c
  7599  00248C  0217               	mulwf	(___flmul@b+2)^0,c
  7600  00248E  CFF3 F02C          	movff	prodl,___flmul@temp
  7601  002492  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7602  002496  502C               	movf	___flmul@temp^0,w,c
  7603  002498  2628               	addwf	___flmul@prod^0,f,c
  7604  00249A  502D               	movf	(___flmul@temp+1)^0,w,c
  7605  00249C  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7606  00249E  0E00               	movlw	0
  7607  0024A0  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7608  0024A2  0E00               	movlw	0
  7609  0024A4  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7610  0024A6  501B               	movf	(___flmul@a+2)^0,w,c
  7611  0024A8  0217               	mulwf	(___flmul@b+2)^0,c
  7612  0024AA  CFF3 F02C          	movff	prodl,___flmul@temp
  7613  0024AE  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7614  0024B2  502C               	movf	___flmul@temp^0,w,c
  7615  0024B4  6E1D               	movwf	??___flmul^0,c
  7616  0024B6  502D               	movf	(___flmul@temp+1)^0,w,c
  7617  0024B8  6E1E               	movwf	(??___flmul+1)^0,c
  7618  0024BA  6A1F               	clrf	(??___flmul+2)^0,c
  7619  0024BC  6A20               	clrf	(??___flmul+3)^0,c
  7620  0024BE  C01F  F020         	movff	??___flmul+2,??___flmul+3
  7621  0024C2  C01E  F01F         	movff	??___flmul+1,??___flmul+2
  7622  0024C6  C01D  F01E         	movff	??___flmul,??___flmul+1
  7623  0024CA  6A1D               	clrf	??___flmul^0,c
  7624  0024CC  501D               	movf	??___flmul^0,w,c
  7625  0024CE  2628               	addwf	___flmul@prod^0,f,c
  7626  0024D0  501E               	movf	(??___flmul+1)^0,w,c
  7627  0024D2  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7628  0024D4  501F               	movf	(??___flmul+2)^0,w,c
  7629  0024D6  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7630  0024D8  5020               	movf	(??___flmul+3)^0,w,c
  7631  0024DA  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7632  0024DC  C022  F01D         	movff	___flmul@grs,??___flmul
  7633  0024E0  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
  7634  0024E4  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
  7635  0024E8  C025  F020         	movff	___flmul@grs+3,??___flmul+3
  7636  0024EC  0E19               	movlw	25
  7637  0024EE  EF7E  F012         	goto	u3390
  7638  0024F2                     u3395:
  7639  0024F2  90D8               	bcf	status,0,c
  7640  0024F4  3220               	rrcf	(??___flmul+3)^0,f,c
  7641  0024F6  321F               	rrcf	(??___flmul+2)^0,f,c
  7642  0024F8  321E               	rrcf	(??___flmul+1)^0,f,c
  7643  0024FA  321D               	rrcf	??___flmul^0,f,c
  7644  0024FC                     u3390:
  7645  0024FC  2EE8               	decfsz	wreg,f,c
  7646  0024FE  EF79  F012         	goto	u3395
  7647  002502  501D               	movf	??___flmul^0,w,c
  7648  002504  2628               	addwf	___flmul@prod^0,f,c
  7649  002506  501E               	movf	(??___flmul+1)^0,w,c
  7650  002508  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7651  00250A  501F               	movf	(??___flmul+2)^0,w,c
  7652  00250C  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7653  00250E  5020               	movf	(??___flmul+3)^0,w,c
  7654  002510  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7655  002512  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7656  002516  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7657  00251A  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7658  00251E  6A22               	clrf	___flmul@grs^0,c
  7659  002520  5026               	movf	___flmul@aexp^0,w,c
  7660  002522  C027  F01D         	movff	___flmul@bexp,??___flmul
  7661  002526  6A1E               	clrf	(??___flmul+1)^0,c
  7662  002528  261D               	addwf	??___flmul^0,f,c
  7663  00252A  0E00               	movlw	0
  7664  00252C  221E               	addwfc	(??___flmul+1)^0,f,c
  7665  00252E  0E82               	movlw	130
  7666  002530  241D               	addwf	??___flmul^0,w,c
  7667  002532  6E2C               	movwf	___flmul@temp^0,c
  7668  002534  0EFF               	movlw	255
  7669  002536  201E               	addwfc	(??___flmul+1)^0,w,c
  7670  002538  6E2D               	movwf	(___flmul@temp+1)^0,c
  7671  00253A  EFB4  F012         	goto	l3301
  7672  00253E                     l3295:
  7673  00253E  90D8               	bcf	status,0,c
  7674  002540  3628               	rlcf	___flmul@prod^0,f,c
  7675  002542  3629               	rlcf	(___flmul@prod+1)^0,f,c
  7676  002544  362A               	rlcf	(___flmul@prod+2)^0,f,c
  7677  002546  362B               	rlcf	(___flmul@prod+3)^0,f,c
  7678  002548  AE25               	btfss	(___flmul@grs+3)^0,7,c
  7679  00254A  EFA9  F012         	goto	u3401
  7680  00254E  EFAB  F012         	goto	u3400
  7681  002552                     u3401:
  7682  002552  EFAC  F012         	goto	l796
  7683  002556                     u3400:
  7684  002556  8028               	bsf	___flmul@prod^0,0,c
  7685  002558                     l796:
  7686  002558  90D8               	bcf	status,0,c
  7687  00255A  3622               	rlcf	___flmul@grs^0,f,c
  7688  00255C  3623               	rlcf	(___flmul@grs+1)^0,f,c
  7689  00255E  3624               	rlcf	(___flmul@grs+2)^0,f,c
  7690  002560  3625               	rlcf	(___flmul@grs+3)^0,f,c
  7691  002562  062C               	decf	___flmul@temp^0,f,c
  7692  002564  A0D8               	btfss	status,0,c
  7693  002566  062D               	decf	(___flmul@temp+1)^0,f,c
  7694  002568                     l3301:
  7695  002568  AE2A               	btfss	(___flmul@prod+2)^0,7,c
  7696  00256A  EFB9  F012         	goto	u3411
  7697  00256E  EFBB  F012         	goto	u3410
  7698  002572                     u3411:
  7699  002572  EF9F  F012         	goto	l3295
  7700  002576                     u3410:
  7701  002576  0E00               	movlw	0
  7702  002578  6E26               	movwf	___flmul@aexp^0,c
  7703  00257A  AE25               	btfss	(___flmul@grs+3)^0,7,c
  7704  00257C  EFC2  F012         	goto	u3421
  7705  002580  EFC4  F012         	goto	u3420
  7706  002584                     u3421:
  7707  002584  EFE8  F012         	goto	l798
  7708  002588                     u3420:
  7709  002588  0EFF               	movlw	255
  7710  00258A  1422               	andwf	___flmul@grs^0,w,c
  7711  00258C  6E1D               	movwf	??___flmul^0,c
  7712  00258E  0EFF               	movlw	255
  7713  002590  1423               	andwf	(___flmul@grs+1)^0,w,c
  7714  002592  6E1E               	movwf	(??___flmul+1)^0,c
  7715  002594  0EFF               	movlw	255
  7716  002596  1424               	andwf	(___flmul@grs+2)^0,w,c
  7717  002598  6E1F               	movwf	(??___flmul+2)^0,c
  7718  00259A  0E7F               	movlw	127
  7719  00259C  1425               	andwf	(___flmul@grs+3)^0,w,c
  7720  00259E  6E20               	movwf	(??___flmul+3)^0,c
  7721  0025A0  501D               	movf	??___flmul^0,w,c
  7722  0025A2  101E               	iorwf	(??___flmul+1)^0,w,c
  7723  0025A4  101F               	iorwf	(??___flmul+2)^0,w,c
  7724  0025A6  1020               	iorwf	(??___flmul+3)^0,w,c
  7725  0025A8  B4D8               	btfsc	status,2,c
  7726  0025AA  EFD9  F012         	goto	u3431
  7727  0025AE  EFDB  F012         	goto	u3430
  7728  0025B2                     u3431:
  7729  0025B2  EFDF  F012         	goto	l799
  7730  0025B6                     u3430:
  7731  0025B6                     l3309:
  7732  0025B6  0E01               	movlw	1
  7733  0025B8  6E26               	movwf	___flmul@aexp^0,c
  7734  0025BA  EFE8  F012         	goto	l798
  7735  0025BE                     l799:
  7736  0025BE  A028               	btfss	___flmul@prod^0,0,c
  7737  0025C0  EFE4  F012         	goto	u3441
  7738  0025C4  EFE6  F012         	goto	u3440
  7739  0025C8                     u3441:
  7740  0025C8  EFE8  F012         	goto	l798
  7741  0025CC                     u3440:
  7742  0025CC  EFDB  F012         	goto	l3309
  7743  0025D0                     l798:
  7744  0025D0  5026               	movf	___flmul@aexp^0,w,c
  7745  0025D2  B4D8               	btfsc	status,2,c
  7746  0025D4  EFEE  F012         	goto	u3451
  7747  0025D8  EFF0  F012         	goto	u3450
  7748  0025DC                     u3451:
  7749  0025DC  EF14  F013         	goto	l3321
  7750  0025E0                     u3450:
  7751  0025E0  0E01               	movlw	1
  7752  0025E2  2628               	addwf	___flmul@prod^0,f,c
  7753  0025E4  0E00               	movlw	0
  7754  0025E6  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7755  0025E8  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7756  0025EA  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7757  0025EC  A02B               	btfss	(___flmul@prod+3)^0,0,c
  7758  0025EE  EFFB  F012         	goto	u3461
  7759  0025F2  EFFD  F012         	goto	u3460
  7760  0025F6                     u3461:
  7761  0025F6  EF14  F013         	goto	l3321
  7762  0025FA                     u3460:
  7763  0025FA  C028  F01D         	movff	___flmul@prod,??___flmul
  7764  0025FE  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
  7765  002602  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
  7766  002606  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
  7767  00260A  3420               	rlcf	(??___flmul+3)^0,w,c
  7768  00260C  3220               	rrcf	(??___flmul+3)^0,f,c
  7769  00260E  321F               	rrcf	(??___flmul+2)^0,f,c
  7770  002610  321E               	rrcf	(??___flmul+1)^0,f,c
  7771  002612  321D               	rrcf	??___flmul^0,f,c
  7772  002614  C01D  F028         	movff	??___flmul,___flmul@prod
  7773  002618  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
  7774  00261C  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
  7775  002620  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
  7776  002624  4A2C               	infsnz	___flmul@temp^0,f,c
  7777  002626  2A2D               	incf	(___flmul@temp+1)^0,f,c
  7778  002628                     l3321:
  7779  002628  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  7780  00262A  EF1F  F013         	goto	u3471
  7781  00262E  502D               	movf	(___flmul@temp+1)^0,w,c
  7782  002630  E108               	bnz	u3470
  7783  002632  282C               	incf	___flmul@temp^0,w,c
  7784  002634  A0D8               	btfss	status,0,c
  7785  002636  EF1F  F013         	goto	u3471
  7786  00263A  EF21  F013         	goto	u3470
  7787  00263E                     u3471:
  7788  00263E  EF2B  F013         	goto	l3325
  7789  002642                     u3470:
  7790  002642  0E00               	movlw	0
  7791  002644  6E28               	movwf	___flmul@prod^0,c
  7792  002646  0E00               	movlw	0
  7793  002648  6E29               	movwf	(___flmul@prod+1)^0,c
  7794  00264A  0E80               	movlw	128
  7795  00264C  6E2A               	movwf	(___flmul@prod+2)^0,c
  7796  00264E  0E7F               	movlw	127
  7797  002650  6E2B               	movwf	(___flmul@prod+3)^0,c
  7798  002652  EF59  F013         	goto	l3337
  7799  002656                     l3325:
  7800  002656  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  7801  002658  EF38  F013         	goto	u3480
  7802  00265C  502D               	movf	(___flmul@temp+1)^0,w,c
  7803  00265E  E106               	bnz	u3481
  7804  002660  042C               	decf	___flmul@temp^0,w,c
  7805  002662  B0D8               	btfsc	status,0,c
  7806  002664  EF36  F013         	goto	u3481
  7807  002668  EF38  F013         	goto	u3480
  7808  00266C                     u3481:
  7809  00266C  EF44  F013         	goto	l806
  7810  002670                     u3480:
  7811  002670  0E00               	movlw	0
  7812  002672  6E28               	movwf	___flmul@prod^0,c
  7813  002674  0E00               	movlw	0
  7814  002676  6E29               	movwf	(___flmul@prod+1)^0,c
  7815  002678  0E00               	movlw	0
  7816  00267A  6E2A               	movwf	(___flmul@prod+2)^0,c
  7817  00267C  0E00               	movlw	0
  7818  00267E  6E2B               	movwf	(___flmul@prod+3)^0,c
  7819  002680  0E00               	movlw	0
  7820  002682  6E21               	movwf	___flmul@sign^0,c
  7821  002684  EF59  F013         	goto	l3337
  7822  002688                     l806:
  7823  002688  C02C  F027         	movff	___flmul@temp,___flmul@bexp
  7824  00268C  0EFF               	movlw	255
  7825  00268E  1628               	andwf	___flmul@prod^0,f,c
  7826  002690  0EFF               	movlw	255
  7827  002692  1629               	andwf	(___flmul@prod+1)^0,f,c
  7828  002694  0E7F               	movlw	127
  7829  002696  162A               	andwf	(___flmul@prod+2)^0,f,c
  7830  002698  0E00               	movlw	0
  7831  00269A  162B               	andwf	(___flmul@prod+3)^0,f,c
  7832  00269C  A027               	btfss	___flmul@bexp^0,0,c
  7833  00269E  EF53  F013         	goto	u3491
  7834  0026A2  EF55  F013         	goto	u3490
  7835  0026A6                     u3491:
  7836  0026A6  EF56  F013         	goto	l3335
  7837  0026AA                     u3490:
  7838  0026AA  8E2A               	bsf	(___flmul@prod+2)^0,7,c
  7839  0026AC                     l3335:
  7840  0026AC  90D8               	bcf	status,0,c
  7841  0026AE  3027               	rrcf	___flmul@bexp^0,w,c
  7842  0026B0  6E2B               	movwf	(___flmul@prod+3)^0,c
  7843  0026B2                     l3337:
  7844  0026B2  5021               	movf	___flmul@sign^0,w,c
  7845  0026B4  122B               	iorwf	(___flmul@prod+3)^0,f,c
  7846  0026B6  C028  F015         	movff	___flmul@prod,?___flmul
  7847  0026BA  C029  F016         	movff	___flmul@prod+1,?___flmul+1
  7848  0026BE  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
  7849  0026C2  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
  7850  0026C6                     l793:
  7851  0026C6  0012               	return		;funcret
  7852  0026C8                     __end_of___flmul:
  7853                           	callstack 0
  7854                           
  7855 ;; *************** function ___fldiv *****************
  7856 ;; Defined at:
  7857 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  b               4   45[COMRAM] unsigned char 
  7860 ;;  a               4   49[COMRAM] unsigned char 
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;  grs             4   64[COMRAM] unsigned long 
  7863 ;;  rem             4   57[COMRAM] unsigned long 
  7864 ;;  new_exp         2   62[COMRAM] short 
  7865 ;;  aexp            1   69[COMRAM] unsigned char 
  7866 ;;  bexp            1   68[COMRAM] unsigned char 
  7867 ;;  sign            1   61[COMRAM] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  4   45[COMRAM] unsigned char 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7877 ;;      Params:         8       0       0       0       0       0       0       0       0
  7878 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7879 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7880 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7881 ;;Total ram usage:       25 bytes
  7882 ;; Hardware stack levels used: 1
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_ReadADC
  7887 ;;		_efgtoa
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           	psect	text31
  7892  0026C8                     __ptext31:
  7893                           	callstack 0
  7894  0026C8                     ___fldiv:
  7895                           	callstack 26
  7896  0026C8  5031               	movf	(___fldiv@b+3)^0,w,c
  7897  0026CA  0B80               	andlw	128
  7898  0026CC  6E3E               	movwf	___fldiv@sign^0,c
  7899  0026CE  5031               	movf	(___fldiv@b+3)^0,w,c
  7900  0026D0  2431               	addwf	(___fldiv@b+3)^0,w,c
  7901  0026D2  6E45               	movwf	___fldiv@bexp^0,c
  7902  0026D4  AE30               	btfss	(___fldiv@b+2)^0,7,c
  7903  0026D6  EF6F  F013         	goto	u3081
  7904  0026DA  EF71  F013         	goto	u3080
  7905  0026DE                     u3081:
  7906  0026DE  EF72  F013         	goto	l3081
  7907  0026E2                     u3080:
  7908  0026E2  8045               	bsf	___fldiv@bexp^0,0,c
  7909  0026E4                     l3081:
  7910  0026E4  5045               	movf	___fldiv@bexp^0,w,c
  7911  0026E6  B4D8               	btfsc	status,2,c
  7912  0026E8  EF78  F013         	goto	u3091
  7913  0026EC  EF7A  F013         	goto	u3090
  7914  0026F0                     u3091:
  7915  0026F0  EF8F  F013         	goto	l3091
  7916  0026F4                     u3090:
  7917  0026F4  2845               	incf	___fldiv@bexp^0,w,c
  7918  0026F6  A4D8               	btfss	status,2,c
  7919  0026F8  EF80  F013         	goto	u3101
  7920  0026FC  EF82  F013         	goto	u3100
  7921  002700                     u3101:
  7922  002700  EF8A  F013         	goto	l3087
  7923  002704                     u3100:
  7924  002704  0E00               	movlw	0
  7925  002706  6E2E               	movwf	___fldiv@b^0,c
  7926  002708  0E00               	movlw	0
  7927  00270A  6E2F               	movwf	(___fldiv@b+1)^0,c
  7928  00270C  0E00               	movlw	0
  7929  00270E  6E30               	movwf	(___fldiv@b+2)^0,c
  7930  002710  0E00               	movlw	0
  7931  002712  6E31               	movwf	(___fldiv@b+3)^0,c
  7932  002714                     l3087:
  7933  002714  8E30               	bsf	(___fldiv@b+2)^0,7,c
  7934  002716  0E00               	movlw	0
  7935  002718  6E31               	movwf	(___fldiv@b+3)^0,c
  7936  00271A  EF97  F013         	goto	l3093
  7937  00271E                     l3091:
  7938  00271E  0E00               	movlw	0
  7939  002720  6E2E               	movwf	___fldiv@b^0,c
  7940  002722  0E00               	movlw	0
  7941  002724  6E2F               	movwf	(___fldiv@b+1)^0,c
  7942  002726  0E00               	movlw	0
  7943  002728  6E30               	movwf	(___fldiv@b+2)^0,c
  7944  00272A  0E00               	movlw	0
  7945  00272C  6E31               	movwf	(___fldiv@b+3)^0,c
  7946  00272E                     l3093:
  7947  00272E  5035               	movf	(___fldiv@a+3)^0,w,c
  7948  002730  0B80               	andlw	128
  7949  002732  1A3E               	xorwf	___fldiv@sign^0,f,c
  7950  002734  5035               	movf	(___fldiv@a+3)^0,w,c
  7951  002736  2435               	addwf	(___fldiv@a+3)^0,w,c
  7952  002738  6E46               	movwf	___fldiv@aexp^0,c
  7953  00273A  AE34               	btfss	(___fldiv@a+2)^0,7,c
  7954  00273C  EFA2  F013         	goto	u3111
  7955  002740  EFA4  F013         	goto	u3110
  7956  002744                     u3111:
  7957  002744  EFA5  F013         	goto	l3101
  7958  002748                     u3110:
  7959  002748  8046               	bsf	___fldiv@aexp^0,0,c
  7960  00274A                     l3101:
  7961  00274A  5046               	movf	___fldiv@aexp^0,w,c
  7962  00274C  B4D8               	btfsc	status,2,c
  7963  00274E  EFAB  F013         	goto	u3121
  7964  002752  EFAD  F013         	goto	u3120
  7965  002756                     u3121:
  7966  002756  EFC2  F013         	goto	l3111
  7967  00275A                     u3120:
  7968  00275A  2846               	incf	___fldiv@aexp^0,w,c
  7969  00275C  A4D8               	btfss	status,2,c
  7970  00275E  EFB3  F013         	goto	u3131
  7971  002762  EFB5  F013         	goto	u3130
  7972  002766                     u3131:
  7973  002766  EFBD  F013         	goto	l3107
  7974  00276A                     u3130:
  7975  00276A  0E00               	movlw	0
  7976  00276C  6E32               	movwf	___fldiv@a^0,c
  7977  00276E  0E00               	movlw	0
  7978  002770  6E33               	movwf	(___fldiv@a+1)^0,c
  7979  002772  0E00               	movlw	0
  7980  002774  6E34               	movwf	(___fldiv@a+2)^0,c
  7981  002776  0E00               	movlw	0
  7982  002778  6E35               	movwf	(___fldiv@a+3)^0,c
  7983  00277A                     l3107:
  7984  00277A  8E34               	bsf	(___fldiv@a+2)^0,7,c
  7985  00277C  0E00               	movlw	0
  7986  00277E  6E35               	movwf	(___fldiv@a+3)^0,c
  7987  002780  EFCA  F013         	goto	l3113
  7988  002784                     l3111:
  7989  002784  0E00               	movlw	0
  7990  002786  6E32               	movwf	___fldiv@a^0,c
  7991  002788  0E00               	movlw	0
  7992  00278A  6E33               	movwf	(___fldiv@a+1)^0,c
  7993  00278C  0E00               	movlw	0
  7994  00278E  6E34               	movwf	(___fldiv@a+2)^0,c
  7995  002790  0E00               	movlw	0
  7996  002792  6E35               	movwf	(___fldiv@a+3)^0,c
  7997  002794                     l3113:
  7998  002794  5032               	movf	___fldiv@a^0,w,c
  7999  002796  1033               	iorwf	(___fldiv@a+1)^0,w,c
  8000  002798  1034               	iorwf	(___fldiv@a+2)^0,w,c
  8001  00279A  1035               	iorwf	(___fldiv@a+3)^0,w,c
  8002  00279C  A4D8               	btfss	status,2,c
  8003  00279E  EFD3  F013         	goto	u3141
  8004  0027A2  EFD5  F013         	goto	u3140
  8005  0027A6                     u3141:
  8006  0027A6  EFED  F013         	goto	l3125
  8007  0027AA                     u3140:
  8008  0027AA  0E00               	movlw	0
  8009  0027AC  6E2E               	movwf	___fldiv@b^0,c
  8010  0027AE  0E00               	movlw	0
  8011  0027B0  6E2F               	movwf	(___fldiv@b+1)^0,c
  8012  0027B2  0E00               	movlw	0
  8013  0027B4  6E30               	movwf	(___fldiv@b+2)^0,c
  8014  0027B6  0E00               	movlw	0
  8015  0027B8  6E31               	movwf	(___fldiv@b+3)^0,c
  8016  0027BA  0E80               	movlw	128
  8017  0027BC  1230               	iorwf	(___fldiv@b+2)^0,f,c
  8018  0027BE  0E7F               	movlw	127
  8019  0027C0  1231               	iorwf	(___fldiv@b+3)^0,f,c
  8020  0027C2                     l3119:
  8021  0027C2  503E               	movf	___fldiv@sign^0,w,c
  8022  0027C4  1231               	iorwf	(___fldiv@b+3)^0,f,c
  8023  0027C6  C02E  F02E         	movff	___fldiv@b,?___fldiv
  8024  0027CA  C02F  F02F         	movff	___fldiv@b+1,?___fldiv+1
  8025  0027CE  C030  F030         	movff	___fldiv@b+2,?___fldiv+2
  8026  0027D2  C031  F031         	movff	___fldiv@b+3,?___fldiv+3
  8027  0027D6  EF30  F015         	goto	l757
  8028  0027DA                     l3125:
  8029  0027DA  5045               	movf	___fldiv@bexp^0,w,c
  8030  0027DC  A4D8               	btfss	status,2,c
  8031  0027DE  EFF3  F013         	goto	u3151
  8032  0027E2  EFF5  F013         	goto	u3150
  8033  0027E6                     u3151:
  8034  0027E6  EFFF  F013         	goto	l3133
  8035  0027EA                     u3150:
  8036  0027EA  0E00               	movlw	0
  8037  0027EC  6E2E               	movwf	?___fldiv^0,c
  8038  0027EE  0E00               	movlw	0
  8039  0027F0  6E2F               	movwf	(?___fldiv+1)^0,c
  8040  0027F2  0E00               	movlw	0
  8041  0027F4  6E30               	movwf	(?___fldiv+2)^0,c
  8042  0027F6  0E00               	movlw	0
  8043  0027F8  6E31               	movwf	(?___fldiv+3)^0,c
  8044  0027FA  EF30  F015         	goto	l757
  8045  0027FE                     l3133:
  8046  0027FE  5046               	movf	___fldiv@aexp^0,w,c
  8047  002800  C045  F036         	movff	___fldiv@bexp,??___fldiv
  8048  002804  6A37               	clrf	(??___fldiv+1)^0,c
  8049  002806  5E36               	subwf	??___fldiv^0,f,c
  8050  002808  0E00               	movlw	0
  8051  00280A  5A37               	subwfb	(??___fldiv+1)^0,f,c
  8052  00280C  0E7F               	movlw	127
  8053  00280E  2436               	addwf	??___fldiv^0,w,c
  8054  002810  6E3F               	movwf	___fldiv@new_exp^0,c
  8055  002812  0E00               	movlw	0
  8056  002814  2037               	addwfc	(??___fldiv+1)^0,w,c
  8057  002816  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  8058  002818  C02E  F03A         	movff	___fldiv@b,___fldiv@rem
  8059  00281C  C02F  F03B         	movff	___fldiv@b+1,___fldiv@rem+1
  8060  002820  C030  F03C         	movff	___fldiv@b+2,___fldiv@rem+2
  8061  002824  C031  F03D         	movff	___fldiv@b+3,___fldiv@rem+3
  8062  002828  0E00               	movlw	0
  8063  00282A  6E2E               	movwf	___fldiv@b^0,c
  8064  00282C  0E00               	movlw	0
  8065  00282E  6E2F               	movwf	(___fldiv@b+1)^0,c
  8066  002830  0E00               	movlw	0
  8067  002832  6E30               	movwf	(___fldiv@b+2)^0,c
  8068  002834  0E00               	movlw	0
  8069  002836  6E31               	movwf	(___fldiv@b+3)^0,c
  8070  002838  0E00               	movlw	0
  8071  00283A  6E41               	movwf	___fldiv@grs^0,c
  8072  00283C  0E00               	movlw	0
  8073  00283E  6E42               	movwf	(___fldiv@grs+1)^0,c
  8074  002840  0E00               	movlw	0
  8075  002842  6E43               	movwf	(___fldiv@grs+2)^0,c
  8076  002844  0E00               	movlw	0
  8077  002846  6E44               	movwf	(___fldiv@grs+3)^0,c
  8078  002848  0E00               	movlw	0
  8079  00284A  6E46               	movwf	___fldiv@aexp^0,c
  8080  00284C  EF60  F014         	goto	l759
  8081  002850                     l3143:
  8082  002850  5046               	movf	___fldiv@aexp^0,w,c
  8083  002852  B4D8               	btfsc	status,2,c
  8084  002854  EF2E  F014         	goto	u3161
  8085  002858  EF30  F014         	goto	u3160
  8086  00285C                     u3161:
  8087  00285C  EF47  F014         	goto	l3151
  8088  002860                     u3160:
  8089  002860  90D8               	bcf	status,0,c
  8090  002862  363A               	rlcf	___fldiv@rem^0,f,c
  8091  002864  363B               	rlcf	(___fldiv@rem+1)^0,f,c
  8092  002866  363C               	rlcf	(___fldiv@rem+2)^0,f,c
  8093  002868  363D               	rlcf	(___fldiv@rem+3)^0,f,c
  8094  00286A  90D8               	bcf	status,0,c
  8095  00286C  362E               	rlcf	___fldiv@b^0,f,c
  8096  00286E  362F               	rlcf	(___fldiv@b+1)^0,f,c
  8097  002870  3630               	rlcf	(___fldiv@b+2)^0,f,c
  8098  002872  3631               	rlcf	(___fldiv@b+3)^0,f,c
  8099  002874  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  8100  002876  EF3F  F014         	goto	u3171
  8101  00287A  EF41  F014         	goto	u3170
  8102  00287E                     u3171:
  8103  00287E  EF42  F014         	goto	l762
  8104  002882                     u3170:
  8105  002882  802E               	bsf	___fldiv@b^0,0,c
  8106  002884                     l762:
  8107  002884  90D8               	bcf	status,0,c
  8108  002886  3641               	rlcf	___fldiv@grs^0,f,c
  8109  002888  3642               	rlcf	(___fldiv@grs+1)^0,f,c
  8110  00288A  3643               	rlcf	(___fldiv@grs+2)^0,f,c
  8111  00288C  3644               	rlcf	(___fldiv@grs+3)^0,f,c
  8112  00288E                     l3151:
  8113  00288E  5032               	movf	___fldiv@a^0,w,c
  8114  002890  5C3A               	subwf	___fldiv@rem^0,w,c
  8115  002892  5033               	movf	(___fldiv@a+1)^0,w,c
  8116  002894  583B               	subwfb	(___fldiv@rem+1)^0,w,c
  8117  002896  5034               	movf	(___fldiv@a+2)^0,w,c
  8118  002898  583C               	subwfb	(___fldiv@rem+2)^0,w,c
  8119  00289A  5035               	movf	(___fldiv@a+3)^0,w,c
  8120  00289C  583D               	subwfb	(___fldiv@rem+3)^0,w,c
  8121  00289E  A0D8               	btfss	status,0,c
  8122  0028A0  EF54  F014         	goto	u3181
  8123  0028A4  EF56  F014         	goto	u3180
  8124  0028A8                     u3181:
  8125  0028A8  EF5F  F014         	goto	l3157
  8126  0028AC                     u3180:
  8127  0028AC  8C44               	bsf	(___fldiv@grs+3)^0,6,c
  8128  0028AE  5032               	movf	___fldiv@a^0,w,c
  8129  0028B0  5E3A               	subwf	___fldiv@rem^0,f,c
  8130  0028B2  5033               	movf	(___fldiv@a+1)^0,w,c
  8131  0028B4  5A3B               	subwfb	(___fldiv@rem+1)^0,f,c
  8132  0028B6  5034               	movf	(___fldiv@a+2)^0,w,c
  8133  0028B8  5A3C               	subwfb	(___fldiv@rem+2)^0,f,c
  8134  0028BA  5035               	movf	(___fldiv@a+3)^0,w,c
  8135  0028BC  5A3D               	subwfb	(___fldiv@rem+3)^0,f,c
  8136  0028BE                     l3157:
  8137  0028BE  2A46               	incf	___fldiv@aexp^0,f,c
  8138  0028C0                     l759:
  8139  0028C0  0E19               	movlw	25
  8140  0028C2  6446               	cpfsgt	___fldiv@aexp^0,c
  8141  0028C4  EF66  F014         	goto	u3191
  8142  0028C8  EF68  F014         	goto	u3190
  8143  0028CC                     u3191:
  8144  0028CC  EF28  F014         	goto	l3143
  8145  0028D0                     u3190:
  8146  0028D0  503A               	movf	___fldiv@rem^0,w,c
  8147  0028D2  103B               	iorwf	(___fldiv@rem+1)^0,w,c
  8148  0028D4  103C               	iorwf	(___fldiv@rem+2)^0,w,c
  8149  0028D6  103D               	iorwf	(___fldiv@rem+3)^0,w,c
  8150  0028D8  B4D8               	btfsc	status,2,c
  8151  0028DA  EF71  F014         	goto	u3201
  8152  0028DE  EF73  F014         	goto	u3200
  8153  0028E2                     u3201:
  8154  0028E2  EF8B  F014         	goto	l3169
  8155  0028E6                     u3200:
  8156  0028E6  8041               	bsf	___fldiv@grs^0,0,c
  8157  0028E8  EF8B  F014         	goto	l3169
  8158  0028EC                     l3163:
  8159  0028EC  90D8               	bcf	status,0,c
  8160  0028EE  362E               	rlcf	___fldiv@b^0,f,c
  8161  0028F0  362F               	rlcf	(___fldiv@b+1)^0,f,c
  8162  0028F2  3630               	rlcf	(___fldiv@b+2)^0,f,c
  8163  0028F4  3631               	rlcf	(___fldiv@b+3)^0,f,c
  8164  0028F6  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  8165  0028F8  EF80  F014         	goto	u3211
  8166  0028FC  EF82  F014         	goto	u3210
  8167  002900                     u3211:
  8168  002900  EF83  F014         	goto	l768
  8169  002904                     u3210:
  8170  002904  802E               	bsf	___fldiv@b^0,0,c
  8171  002906                     l768:
  8172  002906  90D8               	bcf	status,0,c
  8173  002908  3641               	rlcf	___fldiv@grs^0,f,c
  8174  00290A  3642               	rlcf	(___fldiv@grs+1)^0,f,c
  8175  00290C  3643               	rlcf	(___fldiv@grs+2)^0,f,c
  8176  00290E  3644               	rlcf	(___fldiv@grs+3)^0,f,c
  8177  002910  063F               	decf	___fldiv@new_exp^0,f,c
  8178  002912  A0D8               	btfss	status,0,c
  8179  002914  0640               	decf	(___fldiv@new_exp+1)^0,f,c
  8180  002916                     l3169:
  8181  002916  AE30               	btfss	(___fldiv@b+2)^0,7,c
  8182  002918  EF90  F014         	goto	u3221
  8183  00291C  EF92  F014         	goto	u3220
  8184  002920                     u3221:
  8185  002920  EF76  F014         	goto	l3163
  8186  002924                     u3220:
  8187  002924  0E00               	movlw	0
  8188  002926  6E46               	movwf	___fldiv@aexp^0,c
  8189  002928  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  8190  00292A  EF99  F014         	goto	u3231
  8191  00292E  EF9B  F014         	goto	u3230
  8192  002932                     u3231:
  8193  002932  EFBF  F014         	goto	l770
  8194  002936                     u3230:
  8195  002936  0EFF               	movlw	255
  8196  002938  1441               	andwf	___fldiv@grs^0,w,c
  8197  00293A  6E36               	movwf	??___fldiv^0,c
  8198  00293C  0EFF               	movlw	255
  8199  00293E  1442               	andwf	(___fldiv@grs+1)^0,w,c
  8200  002940  6E37               	movwf	(??___fldiv+1)^0,c
  8201  002942  0EFF               	movlw	255
  8202  002944  1443               	andwf	(___fldiv@grs+2)^0,w,c
  8203  002946  6E38               	movwf	(??___fldiv+2)^0,c
  8204  002948  0E7F               	movlw	127
  8205  00294A  1444               	andwf	(___fldiv@grs+3)^0,w,c
  8206  00294C  6E39               	movwf	(??___fldiv+3)^0,c
  8207  00294E  5036               	movf	??___fldiv^0,w,c
  8208  002950  1037               	iorwf	(??___fldiv+1)^0,w,c
  8209  002952  1038               	iorwf	(??___fldiv+2)^0,w,c
  8210  002954  1039               	iorwf	(??___fldiv+3)^0,w,c
  8211  002956  B4D8               	btfsc	status,2,c
  8212  002958  EFB0  F014         	goto	u3241
  8213  00295C  EFB2  F014         	goto	u3240
  8214  002960                     u3241:
  8215  002960  EFB6  F014         	goto	l771
  8216  002964                     u3240:
  8217  002964                     l3177:
  8218  002964  0E01               	movlw	1
  8219  002966  6E46               	movwf	___fldiv@aexp^0,c
  8220  002968  EFBF  F014         	goto	l770
  8221  00296C                     l771:
  8222  00296C  A02E               	btfss	___fldiv@b^0,0,c
  8223  00296E  EFBB  F014         	goto	u3251
  8224  002972  EFBD  F014         	goto	u3250
  8225  002976                     u3251:
  8226  002976  EFBF  F014         	goto	l770
  8227  00297A                     u3250:
  8228  00297A  EFB2  F014         	goto	l3177
  8229  00297E                     l770:
  8230  00297E  5046               	movf	___fldiv@aexp^0,w,c
  8231  002980  B4D8               	btfsc	status,2,c
  8232  002982  EFC5  F014         	goto	u3261
  8233  002986  EFC7  F014         	goto	u3260
  8234  00298A                     u3261:
  8235  00298A  EFEB  F014         	goto	l3189
  8236  00298E                     u3260:
  8237  00298E  0E01               	movlw	1
  8238  002990  262E               	addwf	___fldiv@b^0,f,c
  8239  002992  0E00               	movlw	0
  8240  002994  222F               	addwfc	(___fldiv@b+1)^0,f,c
  8241  002996  2230               	addwfc	(___fldiv@b+2)^0,f,c
  8242  002998  2231               	addwfc	(___fldiv@b+3)^0,f,c
  8243  00299A  A031               	btfss	(___fldiv@b+3)^0,0,c
  8244  00299C  EFD2  F014         	goto	u3271
  8245  0029A0  EFD4  F014         	goto	u3270
  8246  0029A4                     u3271:
  8247  0029A4  EFEB  F014         	goto	l3189
  8248  0029A8                     u3270:
  8249  0029A8  C02E  F036         	movff	___fldiv@b,??___fldiv
  8250  0029AC  C02F  F037         	movff	___fldiv@b+1,??___fldiv+1
  8251  0029B0  C030  F038         	movff	___fldiv@b+2,??___fldiv+2
  8252  0029B4  C031  F039         	movff	___fldiv@b+3,??___fldiv+3
  8253  0029B8  3439               	rlcf	(??___fldiv+3)^0,w,c
  8254  0029BA  3239               	rrcf	(??___fldiv+3)^0,f,c
  8255  0029BC  3238               	rrcf	(??___fldiv+2)^0,f,c
  8256  0029BE  3237               	rrcf	(??___fldiv+1)^0,f,c
  8257  0029C0  3236               	rrcf	??___fldiv^0,f,c
  8258  0029C2  C036  F02E         	movff	??___fldiv,___fldiv@b
  8259  0029C6  C037  F02F         	movff	??___fldiv+1,___fldiv@b+1
  8260  0029CA  C038  F030         	movff	??___fldiv+2,___fldiv@b+2
  8261  0029CE  C039  F031         	movff	??___fldiv+3,___fldiv@b+3
  8262  0029D2  4A3F               	infsnz	___fldiv@new_exp^0,f,c
  8263  0029D4  2A40               	incf	(___fldiv@new_exp+1)^0,f,c
  8264  0029D6                     l3189:
  8265  0029D6  BE40               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8266  0029D8  EFF6  F014         	goto	u3281
  8267  0029DC  5040               	movf	(___fldiv@new_exp+1)^0,w,c
  8268  0029DE  E108               	bnz	u3280
  8269  0029E0  283F               	incf	___fldiv@new_exp^0,w,c
  8270  0029E2  A0D8               	btfss	status,0,c
  8271  0029E4  EFF6  F014         	goto	u3281
  8272  0029E8  EFF8  F014         	goto	u3280
  8273  0029EC                     u3281:
  8274  0029EC  EF03  F015         	goto	l3193
  8275  0029F0                     u3280:
  8276  0029F0  0E00               	movlw	0
  8277  0029F2  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  8278  0029F4  683F               	setf	___fldiv@new_exp^0,c
  8279  0029F6  0E00               	movlw	0
  8280  0029F8  6E2E               	movwf	___fldiv@b^0,c
  8281  0029FA  0E00               	movlw	0
  8282  0029FC  6E2F               	movwf	(___fldiv@b+1)^0,c
  8283  0029FE  0E00               	movlw	0
  8284  002A00  6E30               	movwf	(___fldiv@b+2)^0,c
  8285  002A02  0E00               	movlw	0
  8286  002A04  6E31               	movwf	(___fldiv@b+3)^0,c
  8287  002A06                     l3193:
  8288  002A06  BE40               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8289  002A08  EF10  F015         	goto	u3290
  8290  002A0C  5040               	movf	(___fldiv@new_exp+1)^0,w,c
  8291  002A0E  E106               	bnz	u3291
  8292  002A10  043F               	decf	___fldiv@new_exp^0,w,c
  8293  002A12  B0D8               	btfsc	status,0,c
  8294  002A14  EF0E  F015         	goto	u3291
  8295  002A18  EF10  F015         	goto	u3290
  8296  002A1C                     u3291:
  8297  002A1C  EF1E  F015         	goto	l3197
  8298  002A20                     u3290:
  8299  002A20  0E00               	movlw	0
  8300  002A22  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  8301  002A24  0E00               	movlw	0
  8302  002A26  6E3F               	movwf	___fldiv@new_exp^0,c
  8303  002A28  0E00               	movlw	0
  8304  002A2A  6E2E               	movwf	___fldiv@b^0,c
  8305  002A2C  0E00               	movlw	0
  8306  002A2E  6E2F               	movwf	(___fldiv@b+1)^0,c
  8307  002A30  0E00               	movlw	0
  8308  002A32  6E30               	movwf	(___fldiv@b+2)^0,c
  8309  002A34  0E00               	movlw	0
  8310  002A36  6E31               	movwf	(___fldiv@b+3)^0,c
  8311  002A38  0E00               	movlw	0
  8312  002A3A  6E3E               	movwf	___fldiv@sign^0,c
  8313  002A3C                     l3197:
  8314  002A3C  C03F  F045         	movff	___fldiv@new_exp,___fldiv@bexp
  8315  002A40  A045               	btfss	___fldiv@bexp^0,0,c
  8316  002A42  EF25  F015         	goto	u3301
  8317  002A46  EF27  F015         	goto	u3300
  8318  002A4A                     u3301:
  8319  002A4A  EF2A  F015         	goto	l3203
  8320  002A4E                     u3300:
  8321  002A4E  8E30               	bsf	(___fldiv@b+2)^0,7,c
  8322  002A50  EF2B  F015         	goto	l3205
  8323  002A54                     l3203:
  8324  002A54  9E30               	bcf	(___fldiv@b+2)^0,7,c
  8325  002A56                     l3205:
  8326  002A56  90D8               	bcf	status,0,c
  8327  002A58  3045               	rrcf	___fldiv@bexp^0,w,c
  8328  002A5A  6E31               	movwf	(___fldiv@b+3)^0,c
  8329  002A5C  EFE1  F013         	goto	l3119
  8330  002A60                     l757:
  8331  002A60  0012               	return		;funcret
  8332  002A62                     __end_of___fldiv:
  8333                           	callstack 0
  8334                           
  8335 ;; *************** function ___fladd *****************
  8336 ;; Defined at:
  8337 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  b               4   70[COMRAM] unsigned char 
  8340 ;;  a               4   74[COMRAM] unsigned char 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  grs             1   85[COMRAM] unsigned char 
  8343 ;;  bexp            1   84[COMRAM] unsigned char 
  8344 ;;  aexp            1   83[COMRAM] unsigned char 
  8345 ;;  signs           1   82[COMRAM] unsigned char 
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  4   70[COMRAM] unsigned char 
  8348 ;; Registers used:
  8349 ;;		wreg, status,2, status,0
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8355 ;;      Params:         8       0       0       0       0       0       0       0       0
  8356 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8357 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8358 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8359 ;;Total ram usage:       16 bytes
  8360 ;; Hardware stack levels used: 1
  8361 ;; This function calls:
  8362 ;;		Nothing
  8363 ;; This function is called by:
  8364 ;;		_ReadADC
  8365 ;;		___flsub
  8366 ;;		_efgtoa
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           	psect	text32
  8371  0019B2                     __ptext32:
  8372                           	callstack 0
  8373  0019B2                     ___fladd:
  8374                           	callstack 25
  8375  0019B2  504A               	movf	(___fladd@b+3)^0,w,c
  8376  0019B4  0B80               	andlw	128
  8377  0019B6  6E53               	movwf	___fladd@signs^0,c
  8378  0019B8  504A               	movf	(___fladd@b+3)^0,w,c
  8379  0019BA  244A               	addwf	(___fladd@b+3)^0,w,c
  8380  0019BC  6E55               	movwf	___fladd@bexp^0,c
  8381  0019BE  AE49               	btfss	(___fladd@b+2)^0,7,c
  8382  0019C0  EFE4  F00C         	goto	u2651
  8383  0019C4  EFE6  F00C         	goto	u2650
  8384  0019C8                     u2651:
  8385  0019C8  EFE7  F00C         	goto	l2851
  8386  0019CC                     u2650:
  8387  0019CC  8055               	bsf	___fladd@bexp^0,0,c
  8388  0019CE                     l2851:
  8389  0019CE  5055               	movf	___fladd@bexp^0,w,c
  8390  0019D0  B4D8               	btfsc	status,2,c
  8391  0019D2  EFED  F00C         	goto	u2661
  8392  0019D6  EFEF  F00C         	goto	u2660
  8393  0019DA                     u2661:
  8394  0019DA  EF04  F00D         	goto	l2861
  8395  0019DE                     u2660:
  8396  0019DE  2855               	incf	___fladd@bexp^0,w,c
  8397  0019E0  A4D8               	btfss	status,2,c
  8398  0019E2  EFF5  F00C         	goto	u2671
  8399  0019E6  EFF7  F00C         	goto	u2670
  8400  0019EA                     u2671:
  8401  0019EA  EFFF  F00C         	goto	l2857
  8402  0019EE                     u2670:
  8403  0019EE  0E00               	movlw	0
  8404  0019F0  6E47               	movwf	___fladd@b^0,c
  8405  0019F2  0E00               	movlw	0
  8406  0019F4  6E48               	movwf	(___fladd@b+1)^0,c
  8407  0019F6  0E00               	movlw	0
  8408  0019F8  6E49               	movwf	(___fladd@b+2)^0,c
  8409  0019FA  0E00               	movlw	0
  8410  0019FC  6E4A               	movwf	(___fladd@b+3)^0,c
  8411  0019FE                     l2857:
  8412  0019FE  8E49               	bsf	(___fladd@b+2)^0,7,c
  8413  001A00  0E00               	movlw	0
  8414  001A02  6E4A               	movwf	(___fladd@b+3)^0,c
  8415  001A04  EF0C  F00D         	goto	l2863
  8416  001A08                     l2861:
  8417  001A08  0E00               	movlw	0
  8418  001A0A  6E47               	movwf	___fladd@b^0,c
  8419  001A0C  0E00               	movlw	0
  8420  001A0E  6E48               	movwf	(___fladd@b+1)^0,c
  8421  001A10  0E00               	movlw	0
  8422  001A12  6E49               	movwf	(___fladd@b+2)^0,c
  8423  001A14  0E00               	movlw	0
  8424  001A16  6E4A               	movwf	(___fladd@b+3)^0,c
  8425  001A18                     l2863:
  8426  001A18  504E               	movf	(___fladd@a+3)^0,w,c
  8427  001A1A  0B80               	andlw	128
  8428  001A1C  6E54               	movwf	___fladd@aexp^0,c
  8429  001A1E  5053               	movf	___fladd@signs^0,w,c
  8430  001A20  1854               	xorwf	___fladd@aexp^0,w,c
  8431  001A22  B4D8               	btfsc	status,2,c
  8432  001A24  EF16  F00D         	goto	u2681
  8433  001A28  EF18  F00D         	goto	u2680
  8434  001A2C                     u2681:
  8435  001A2C  EF19  F00D         	goto	l2869
  8436  001A30                     u2680:
  8437  001A30  8C53               	bsf	___fladd@signs^0,6,c
  8438  001A32                     l2869:
  8439  001A32  504E               	movf	(___fladd@a+3)^0,w,c
  8440  001A34  244E               	addwf	(___fladd@a+3)^0,w,c
  8441  001A36  6E54               	movwf	___fladd@aexp^0,c
  8442  001A38  AE4D               	btfss	(___fladd@a+2)^0,7,c
  8443  001A3A  EF21  F00D         	goto	u2691
  8444  001A3E  EF23  F00D         	goto	u2690
  8445  001A42                     u2691:
  8446  001A42  EF24  F00D         	goto	l2875
  8447  001A46                     u2690:
  8448  001A46  8054               	bsf	___fladd@aexp^0,0,c
  8449  001A48                     l2875:
  8450  001A48  5054               	movf	___fladd@aexp^0,w,c
  8451  001A4A  B4D8               	btfsc	status,2,c
  8452  001A4C  EF2A  F00D         	goto	u2701
  8453  001A50  EF2C  F00D         	goto	u2700
  8454  001A54                     u2701:
  8455  001A54  EF41  F00D         	goto	l2885
  8456  001A58                     u2700:
  8457  001A58  2854               	incf	___fladd@aexp^0,w,c
  8458  001A5A  A4D8               	btfss	status,2,c
  8459  001A5C  EF32  F00D         	goto	u2711
  8460  001A60  EF34  F00D         	goto	u2710
  8461  001A64                     u2711:
  8462  001A64  EF3C  F00D         	goto	l2881
  8463  001A68                     u2710:
  8464  001A68  0E00               	movlw	0
  8465  001A6A  6E4B               	movwf	___fladd@a^0,c
  8466  001A6C  0E00               	movlw	0
  8467  001A6E  6E4C               	movwf	(___fladd@a+1)^0,c
  8468  001A70  0E00               	movlw	0
  8469  001A72  6E4D               	movwf	(___fladd@a+2)^0,c
  8470  001A74  0E00               	movlw	0
  8471  001A76  6E4E               	movwf	(___fladd@a+3)^0,c
  8472  001A78                     l2881:
  8473  001A78  8E4D               	bsf	(___fladd@a+2)^0,7,c
  8474  001A7A  0E00               	movlw	0
  8475  001A7C  6E4E               	movwf	(___fladd@a+3)^0,c
  8476  001A7E  EF49  F00D         	goto	l2887
  8477  001A82                     l2885:
  8478  001A82  0E00               	movlw	0
  8479  001A84  6E4B               	movwf	___fladd@a^0,c
  8480  001A86  0E00               	movlw	0
  8481  001A88  6E4C               	movwf	(___fladd@a+1)^0,c
  8482  001A8A  0E00               	movlw	0
  8483  001A8C  6E4D               	movwf	(___fladd@a+2)^0,c
  8484  001A8E  0E00               	movlw	0
  8485  001A90  6E4E               	movwf	(___fladd@a+3)^0,c
  8486  001A92                     l2887:
  8487  001A92  5055               	movf	___fladd@bexp^0,w,c
  8488  001A94  5C54               	subwf	___fladd@aexp^0,w,c
  8489  001A96  B0D8               	btfsc	status,0,c
  8490  001A98  EF50  F00D         	goto	u2721
  8491  001A9C  EF52  F00D         	goto	u2720
  8492  001AA0                     u2721:
  8493  001AA0  EF79  F00D         	goto	l2923
  8494  001AA4                     u2720:
  8495  001AA4  AC53               	btfss	___fladd@signs^0,6,c
  8496  001AA6  EF57  F00D         	goto	u2731
  8497  001AAA  EF59  F00D         	goto	u2730
  8498  001AAE                     u2731:
  8499  001AAE  EF5B  F00D         	goto	l2893
  8500  001AB2                     u2730:
  8501  001AB2  0E80               	movlw	128
  8502  001AB4  1A53               	xorwf	___fladd@signs^0,f,c
  8503  001AB6                     l2893:
  8504  001AB6  C055  F056         	movff	___fladd@bexp,___fladd@grs
  8505  001ABA  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  8506  001ABE  C056  F054         	movff	___fladd@grs,___fladd@aexp
  8507  001AC2  C047  F056         	movff	___fladd@b,___fladd@grs
  8508  001AC6  C04B  F047         	movff	___fladd@a,___fladd@b
  8509  001ACA  C056  F04B         	movff	___fladd@grs,___fladd@a
  8510  001ACE  C048  F056         	movff	___fladd@b+1,___fladd@grs
  8511  001AD2  C04C  F048         	movff	___fladd@a+1,___fladd@b+1
  8512  001AD6  C056  F04C         	movff	___fladd@grs,___fladd@a+1
  8513  001ADA  C049  F056         	movff	___fladd@b+2,___fladd@grs
  8514  001ADE  C04D  F049         	movff	___fladd@a+2,___fladd@b+2
  8515  001AE2  C056  F04D         	movff	___fladd@grs,___fladd@a+2
  8516  001AE6  C04A  F056         	movff	___fladd@b+3,___fladd@grs
  8517  001AEA  C04E  F04A         	movff	___fladd@a+3,___fladd@b+3
  8518  001AEE  C056  F04E         	movff	___fladd@grs,___fladd@a+3
  8519  001AF2                     l2923:
  8520  001AF2  0E00               	movlw	0
  8521  001AF4  6E56               	movwf	___fladd@grs^0,c
  8522  001AF6  5055               	movf	___fladd@bexp^0,w,c
  8523  001AF8  C054  F04F         	movff	___fladd@aexp,??___fladd
  8524  001AFC  6A50               	clrf	(??___fladd+1)^0,c
  8525  001AFE  5E4F               	subwf	??___fladd^0,f,c
  8526  001B00  0E00               	movlw	0
  8527  001B02  5A50               	subwfb	(??___fladd+1)^0,f,c
  8528  001B04  BE50               	btfsc	(??___fladd+1)^0,7,c
  8529  001B06  EF8E  F00D         	goto	u2741
  8530  001B0A  5050               	movf	(??___fladd+1)^0,w,c
  8531  001B0C  E109               	bnz	u2740
  8532  001B0E  0E1A               	movlw	26
  8533  001B10  5C4F               	subwf	??___fladd^0,w,c
  8534  001B12  A0D8               	btfss	status,0,c
  8535  001B14  EF8E  F00D         	goto	u2741
  8536  001B18  EF90  F00D         	goto	u2740
  8537  001B1C                     u2741:
  8538  001B1C  EFC7  F00D         	goto	l704
  8539  001B20                     u2740:
  8540  001B20  5047               	movf	___fladd@b^0,w,c
  8541  001B22  1048               	iorwf	(___fladd@b+1)^0,w,c
  8542  001B24  1049               	iorwf	(___fladd@b+2)^0,w,c
  8543  001B26  104A               	iorwf	(___fladd@b+3)^0,w,c
  8544  001B28  A4D8               	btfss	status,2,c
  8545  001B2A  EF99  F00D         	goto	u2751
  8546  001B2E  EF9C  F00D         	goto	u2750
  8547  001B32                     u2751:
  8548  001B32  0E01               	movlw	1
  8549  001B34  EF9D  F00D         	goto	u2760
  8550  001B38                     u2750:
  8551  001B38  0E00               	movlw	0
  8552  001B3A                     u2760:
  8553  001B3A  6E56               	movwf	___fladd@grs^0,c
  8554  001B3C  0E00               	movlw	0
  8555  001B3E  6E47               	movwf	___fladd@b^0,c
  8556  001B40  0E00               	movlw	0
  8557  001B42  6E48               	movwf	(___fladd@b+1)^0,c
  8558  001B44  0E00               	movlw	0
  8559  001B46  6E49               	movwf	(___fladd@b+2)^0,c
  8560  001B48  0E00               	movlw	0
  8561  001B4A  6E4A               	movwf	(___fladd@b+3)^0,c
  8562  001B4C  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  8563  001B50  EFD0  F00D         	goto	l703
  8564  001B54                     l705:
  8565  001B54  A056               	btfss	___fladd@grs^0,0,c
  8566  001B56  EFAF  F00D         	goto	u2771
  8567  001B5A  EFB1  F00D         	goto	u2770
  8568  001B5E                     u2771:
  8569  001B5E  EFB7  F00D         	goto	l2935
  8570  001B62                     u2770:
  8571  001B62  90D8               	bcf	status,0,c
  8572  001B64  3056               	rrcf	___fladd@grs^0,w,c
  8573  001B66  0901               	iorlw	1
  8574  001B68  6E56               	movwf	___fladd@grs^0,c
  8575  001B6A  EFB9  F00D         	goto	l2937
  8576  001B6E                     l2935:
  8577  001B6E  90D8               	bcf	status,0,c
  8578  001B70  3256               	rrcf	___fladd@grs^0,f,c
  8579  001B72                     l2937:
  8580  001B72  A047               	btfss	___fladd@b^0,0,c
  8581  001B74  EFBE  F00D         	goto	u2781
  8582  001B78  EFC0  F00D         	goto	u2780
  8583  001B7C                     u2781:
  8584  001B7C  EFC1  F00D         	goto	l2941
  8585  001B80                     u2780:
  8586  001B80  8E56               	bsf	___fladd@grs^0,7,c
  8587  001B82                     l2941:
  8588  001B82  344A               	rlcf	(___fladd@b+3)^0,w,c
  8589  001B84  324A               	rrcf	(___fladd@b+3)^0,f,c
  8590  001B86  3249               	rrcf	(___fladd@b+2)^0,f,c
  8591  001B88  3248               	rrcf	(___fladd@b+1)^0,f,c
  8592  001B8A  3247               	rrcf	___fladd@b^0,f,c
  8593  001B8C  2A55               	incf	___fladd@bexp^0,f,c
  8594  001B8E                     l704:
  8595  001B8E  5054               	movf	___fladd@aexp^0,w,c
  8596  001B90  5C55               	subwf	___fladd@bexp^0,w,c
  8597  001B92  A0D8               	btfss	status,0,c
  8598  001B94  EFCE  F00D         	goto	u2791
  8599  001B98  EFD0  F00D         	goto	u2790
  8600  001B9C                     u2791:
  8601  001B9C  EFAA  F00D         	goto	l705
  8602  001BA0                     u2790:
  8603  001BA0                     l703:
  8604  001BA0  BC53               	btfsc	___fladd@signs^0,6,c
  8605  001BA2  EFD5  F00D         	goto	u2801
  8606  001BA6  EFD7  F00D         	goto	u2800
  8607  001BAA                     u2801:
  8608  001BAA  EF17  F00E         	goto	l2969
  8609  001BAE                     u2800:
  8610  001BAE  5055               	movf	___fladd@bexp^0,w,c
  8611  001BB0  A4D8               	btfss	status,2,c
  8612  001BB2  EFDD  F00D         	goto	u2811
  8613  001BB6  EFDF  F00D         	goto	u2810
  8614  001BBA                     u2811:
  8615  001BBA  EFE9  F00D         	goto	l2951
  8616  001BBE                     u2810:
  8617  001BBE  0E00               	movlw	0
  8618  001BC0  6E47               	movwf	?___fladd^0,c
  8619  001BC2  0E00               	movlw	0
  8620  001BC4  6E48               	movwf	(?___fladd+1)^0,c
  8621  001BC6  0E00               	movlw	0
  8622  001BC8  6E49               	movwf	(?___fladd+2)^0,c
  8623  001BCA  0E00               	movlw	0
  8624  001BCC  6E4A               	movwf	(?___fladd+3)^0,c
  8625  001BCE  EF38  F00F         	goto	l712
  8626  001BD2                     l2951:
  8627  001BD2  504B               	movf	___fladd@a^0,w,c
  8628  001BD4  2647               	addwf	___fladd@b^0,f,c
  8629  001BD6  504C               	movf	(___fladd@a+1)^0,w,c
  8630  001BD8  2248               	addwfc	(___fladd@b+1)^0,f,c
  8631  001BDA  504D               	movf	(___fladd@a+2)^0,w,c
  8632  001BDC  2249               	addwfc	(___fladd@b+2)^0,f,c
  8633  001BDE  504E               	movf	(___fladd@a+3)^0,w,c
  8634  001BE0  224A               	addwfc	(___fladd@b+3)^0,f,c
  8635  001BE2  A04A               	btfss	(___fladd@b+3)^0,0,c
  8636  001BE4  EFF6  F00D         	goto	u2821
  8637  001BE8  EFF8  F00D         	goto	u2820
  8638  001BEC                     u2821:
  8639  001BEC  EFA4  F00E         	goto	l3005
  8640  001BF0                     u2820:
  8641  001BF0  A056               	btfss	___fladd@grs^0,0,c
  8642  001BF2  EFFD  F00D         	goto	u2831
  8643  001BF6  EFFF  F00D         	goto	u2830
  8644  001BFA                     u2831:
  8645  001BFA  EF05  F00E         	goto	l2959
  8646  001BFE                     u2830:
  8647  001BFE  90D8               	bcf	status,0,c
  8648  001C00  3056               	rrcf	___fladd@grs^0,w,c
  8649  001C02  0901               	iorlw	1
  8650  001C04  6E56               	movwf	___fladd@grs^0,c
  8651  001C06  EF07  F00E         	goto	l2961
  8652  001C0A                     l2959:
  8653  001C0A  90D8               	bcf	status,0,c
  8654  001C0C  3256               	rrcf	___fladd@grs^0,f,c
  8655  001C0E                     l2961:
  8656  001C0E  A047               	btfss	___fladd@b^0,0,c
  8657  001C10  EF0C  F00E         	goto	u2841
  8658  001C14  EF0E  F00E         	goto	u2840
  8659  001C18                     u2841:
  8660  001C18  EF0F  F00E         	goto	l2965
  8661  001C1C                     u2840:
  8662  001C1C  8E56               	bsf	___fladd@grs^0,7,c
  8663  001C1E                     l2965:
  8664  001C1E  344A               	rlcf	(___fladd@b+3)^0,w,c
  8665  001C20  324A               	rrcf	(___fladd@b+3)^0,f,c
  8666  001C22  3249               	rrcf	(___fladd@b+2)^0,f,c
  8667  001C24  3248               	rrcf	(___fladd@b+1)^0,f,c
  8668  001C26  3247               	rrcf	___fladd@b^0,f,c
  8669  001C28  2A55               	incf	___fladd@bexp^0,f,c
  8670  001C2A  EFA4  F00E         	goto	l3005
  8671  001C2E                     l2969:
  8672  001C2E  504B               	movf	___fladd@a^0,w,c
  8673  001C30  5C47               	subwf	___fladd@b^0,w,c
  8674  001C32  504C               	movf	(___fladd@a+1)^0,w,c
  8675  001C34  5848               	subwfb	(___fladd@b+1)^0,w,c
  8676  001C36  504D               	movf	(___fladd@a+2)^0,w,c
  8677  001C38  5849               	subwfb	(___fladd@b+2)^0,w,c
  8678  001C3A  504A               	movf	(___fladd@b+3)^0,w,c
  8679  001C3C  0A80               	xorlw	128
  8680  001C3E  6E4F               	movwf	??___fladd^0,c
  8681  001C40  504E               	movf	(___fladd@a+3)^0,w,c
  8682  001C42  0A80               	xorlw	128
  8683  001C44  584F               	subwfb	??___fladd^0,w,c
  8684  001C46  B0D8               	btfsc	status,0,c
  8685  001C48  EF28  F00E         	goto	u2851
  8686  001C4C  EF2A  F00E         	goto	u2850
  8687  001C50                     u2851:
  8688  001C50  EF55  F00E         	goto	l2979
  8689  001C54                     u2850:
  8690  001C54  5047               	movf	___fladd@b^0,w,c
  8691  001C56  5C4B               	subwf	___fladd@a^0,w,c
  8692  001C58  6E4F               	movwf	??___fladd^0,c
  8693  001C5A  5048               	movf	(___fladd@b+1)^0,w,c
  8694  001C5C  584C               	subwfb	(___fladd@a+1)^0,w,c
  8695  001C5E  6E50               	movwf	(??___fladd+1)^0,c
  8696  001C60  5049               	movf	(___fladd@b+2)^0,w,c
  8697  001C62  584D               	subwfb	(___fladd@a+2)^0,w,c
  8698  001C64  6E51               	movwf	(??___fladd+2)^0,c
  8699  001C66  504A               	movf	(___fladd@b+3)^0,w,c
  8700  001C68  584E               	subwfb	(___fladd@a+3)^0,w,c
  8701  001C6A  6E52               	movwf	(??___fladd+3)^0,c
  8702  001C6C  0EFF               	movlw	255
  8703  001C6E  244F               	addwf	??___fladd^0,w,c
  8704  001C70  6E47               	movwf	___fladd@b^0,c
  8705  001C72  0EFF               	movlw	255
  8706  001C74  2050               	addwfc	(??___fladd+1)^0,w,c
  8707  001C76  6E48               	movwf	(___fladd@b+1)^0,c
  8708  001C78  0EFF               	movlw	255
  8709  001C7A  2051               	addwfc	(??___fladd+2)^0,w,c
  8710  001C7C  6E49               	movwf	(___fladd@b+2)^0,c
  8711  001C7E  0EFF               	movlw	255
  8712  001C80  2052               	addwfc	(??___fladd+3)^0,w,c
  8713  001C82  6E4A               	movwf	(___fladd@b+3)^0,c
  8714  001C84  0E80               	movlw	128
  8715  001C86  1A53               	xorwf	___fladd@signs^0,f,c
  8716  001C88  6C56               	negf	___fladd@grs^0,c
  8717  001C8A  5056               	movf	___fladd@grs^0,w,c
  8718  001C8C  A4D8               	btfss	status,2,c
  8719  001C8E  EF4B  F00E         	goto	u2861
  8720  001C92  EF4D  F00E         	goto	u2860
  8721  001C96                     u2861:
  8722  001C96  EF5D  F00E         	goto	l720
  8723  001C9A                     u2860:
  8724  001C9A  0E01               	movlw	1
  8725  001C9C  2647               	addwf	___fladd@b^0,f,c
  8726  001C9E  0E00               	movlw	0
  8727  001CA0  2248               	addwfc	(___fladd@b+1)^0,f,c
  8728  001CA2  2249               	addwfc	(___fladd@b+2)^0,f,c
  8729  001CA4  224A               	addwfc	(___fladd@b+3)^0,f,c
  8730  001CA6  EF5D  F00E         	goto	l720
  8731  001CAA                     l2979:
  8732  001CAA  504B               	movf	___fladd@a^0,w,c
  8733  001CAC  5E47               	subwf	___fladd@b^0,f,c
  8734  001CAE  504C               	movf	(___fladd@a+1)^0,w,c
  8735  001CB0  5A48               	subwfb	(___fladd@b+1)^0,f,c
  8736  001CB2  504D               	movf	(___fladd@a+2)^0,w,c
  8737  001CB4  5A49               	subwfb	(___fladd@b+2)^0,f,c
  8738  001CB6  504E               	movf	(___fladd@a+3)^0,w,c
  8739  001CB8  5A4A               	subwfb	(___fladd@b+3)^0,f,c
  8740  001CBA                     l720:
  8741  001CBA  5047               	movf	___fladd@b^0,w,c
  8742  001CBC  1048               	iorwf	(___fladd@b+1)^0,w,c
  8743  001CBE  1049               	iorwf	(___fladd@b+2)^0,w,c
  8744  001CC0  104A               	iorwf	(___fladd@b+3)^0,w,c
  8745  001CC2  A4D8               	btfss	status,2,c
  8746  001CC4  EF66  F00E         	goto	u2871
  8747  001CC8  EF68  F00E         	goto	u2870
  8748  001CCC                     u2871:
  8749  001CCC  EF9D  F00E         	goto	l3003
  8750  001CD0                     u2870:
  8751  001CD0  5056               	movf	___fladd@grs^0,w,c
  8752  001CD2  A4D8               	btfss	status,2,c
  8753  001CD4  EF6E  F00E         	goto	u2881
  8754  001CD8  EF70  F00E         	goto	u2880
  8755  001CDC                     u2881:
  8756  001CDC  EF9D  F00E         	goto	l3003
  8757  001CE0                     u2880:
  8758  001CE0  0E00               	movlw	0
  8759  001CE2  6E47               	movwf	?___fladd^0,c
  8760  001CE4  0E00               	movlw	0
  8761  001CE6  6E48               	movwf	(?___fladd+1)^0,c
  8762  001CE8  0E00               	movlw	0
  8763  001CEA  6E49               	movwf	(?___fladd+2)^0,c
  8764  001CEC  0E00               	movlw	0
  8765  001CEE  6E4A               	movwf	(?___fladd+3)^0,c
  8766  001CF0  EF38  F00F         	goto	l712
  8767  001CF4                     l2987:
  8768  001CF4  90D8               	bcf	status,0,c
  8769  001CF6  3647               	rlcf	___fladd@b^0,f,c
  8770  001CF8  3648               	rlcf	(___fladd@b+1)^0,f,c
  8771  001CFA  3649               	rlcf	(___fladd@b+2)^0,f,c
  8772  001CFC  364A               	rlcf	(___fladd@b+3)^0,f,c
  8773  001CFE  AE56               	btfss	___fladd@grs^0,7,c
  8774  001D00  EF84  F00E         	goto	u2891
  8775  001D04  EF86  F00E         	goto	u2890
  8776  001D08                     u2891:
  8777  001D08  EF87  F00E         	goto	l2993
  8778  001D0C                     u2890:
  8779  001D0C  8047               	bsf	___fladd@b^0,0,c
  8780  001D0E                     l2993:
  8781  001D0E  A056               	btfss	___fladd@grs^0,0,c
  8782  001D10  EF8C  F00E         	goto	u2901
  8783  001D14  EF8E  F00E         	goto	u2900
  8784  001D18                     u2901:
  8785  001D18  EF92  F00E         	goto	l2997
  8786  001D1C                     u2900:
  8787  001D1C  80D8               	bsf	status,0,c
  8788  001D1E  3656               	rlcf	___fladd@grs^0,f,c
  8789  001D20  EF94  F00E         	goto	l2999
  8790  001D24                     l2997:
  8791  001D24  90D8               	bcf	status,0,c
  8792  001D26  3656               	rlcf	___fladd@grs^0,f,c
  8793  001D28                     l2999:
  8794  001D28  5055               	movf	___fladd@bexp^0,w,c
  8795  001D2A  B4D8               	btfsc	status,2,c
  8796  001D2C  EF9A  F00E         	goto	u2911
  8797  001D30  EF9C  F00E         	goto	u2910
  8798  001D34                     u2911:
  8799  001D34  EF9D  F00E         	goto	l3003
  8800  001D38                     u2910:
  8801  001D38  0655               	decf	___fladd@bexp^0,f,c
  8802  001D3A                     l3003:
  8803  001D3A  AE49               	btfss	(___fladd@b+2)^0,7,c
  8804  001D3C  EFA2  F00E         	goto	u2921
  8805  001D40  EFA4  F00E         	goto	u2920
  8806  001D44                     u2921:
  8807  001D44  EF7A  F00E         	goto	l2987
  8808  001D48                     u2920:
  8809  001D48                     l3005:
  8810  001D48  0E00               	movlw	0
  8811  001D4A  6E54               	movwf	___fladd@aexp^0,c
  8812  001D4C  AE56               	btfss	___fladd@grs^0,7,c
  8813  001D4E  EFAB  F00E         	goto	u2931
  8814  001D52  EFAD  F00E         	goto	u2930
  8815  001D56                     u2931:
  8816  001D56  EFC5  F00E         	goto	l729
  8817  001D5A                     u2930:
  8818  001D5A  C056  F04F         	movff	___fladd@grs,??___fladd
  8819  001D5E  0E7F               	movlw	127
  8820  001D60  164F               	andwf	??___fladd^0,f,c
  8821  001D62  B4D8               	btfsc	status,2,c
  8822  001D64  EFB6  F00E         	goto	u2941
  8823  001D68  EFB8  F00E         	goto	u2940
  8824  001D6C                     u2941:
  8825  001D6C  EFBC  F00E         	goto	l730
  8826  001D70                     u2940:
  8827  001D70                     l3011:
  8828  001D70  0E01               	movlw	1
  8829  001D72  6E54               	movwf	___fladd@aexp^0,c
  8830  001D74  EFC5  F00E         	goto	l729
  8831  001D78                     l730:
  8832  001D78  A047               	btfss	___fladd@b^0,0,c
  8833  001D7A  EFC1  F00E         	goto	u2951
  8834  001D7E  EFC3  F00E         	goto	u2950
  8835  001D82                     u2951:
  8836  001D82  EFC5  F00E         	goto	l729
  8837  001D86                     u2950:
  8838  001D86  EFB8  F00E         	goto	l3011
  8839  001D8A                     l729:
  8840  001D8A  5054               	movf	___fladd@aexp^0,w,c
  8841  001D8C  B4D8               	btfsc	status,2,c
  8842  001D8E  EFCB  F00E         	goto	u2961
  8843  001D92  EFCD  F00E         	goto	u2960
  8844  001D96                     u2961:
  8845  001D96  EFF8  F00E         	goto	l3023
  8846  001D9A                     u2960:
  8847  001D9A  0E01               	movlw	1
  8848  001D9C  2647               	addwf	___fladd@b^0,f,c
  8849  001D9E  0E00               	movlw	0
  8850  001DA0  2248               	addwfc	(___fladd@b+1)^0,f,c
  8851  001DA2  2249               	addwfc	(___fladd@b+2)^0,f,c
  8852  001DA4  224A               	addwfc	(___fladd@b+3)^0,f,c
  8853  001DA6  A04A               	btfss	(___fladd@b+3)^0,0,c
  8854  001DA8  EFD8  F00E         	goto	u2971
  8855  001DAC  EFDA  F00E         	goto	u2970
  8856  001DB0                     u2971:
  8857  001DB0  EFF8  F00E         	goto	l3023
  8858  001DB4                     u2970:
  8859  001DB4  C047  F04F         	movff	___fladd@b,??___fladd
  8860  001DB8  C048  F050         	movff	___fladd@b+1,??___fladd+1
  8861  001DBC  C049  F051         	movff	___fladd@b+2,??___fladd+2
  8862  001DC0  C04A  F052         	movff	___fladd@b+3,??___fladd+3
  8863  001DC4  3452               	rlcf	(??___fladd+3)^0,w,c
  8864  001DC6  3252               	rrcf	(??___fladd+3)^0,f,c
  8865  001DC8  3251               	rrcf	(??___fladd+2)^0,f,c
  8866  001DCA  3250               	rrcf	(??___fladd+1)^0,f,c
  8867  001DCC  324F               	rrcf	??___fladd^0,f,c
  8868  001DCE  C04F  F047         	movff	??___fladd,___fladd@b
  8869  001DD2  C050  F048         	movff	??___fladd+1,___fladd@b+1
  8870  001DD6  C051  F049         	movff	??___fladd+2,___fladd@b+2
  8871  001DDA  C052  F04A         	movff	??___fladd+3,___fladd@b+3
  8872  001DDE  2855               	incf	___fladd@bexp^0,w,c
  8873  001DE0  B4D8               	btfsc	status,2,c
  8874  001DE2  EFF5  F00E         	goto	u2981
  8875  001DE6  EFF7  F00E         	goto	u2980
  8876  001DEA                     u2981:
  8877  001DEA  EFF8  F00E         	goto	l3023
  8878  001DEE                     u2980:
  8879  001DEE  2A55               	incf	___fladd@bexp^0,f,c
  8880  001DF0                     l3023:
  8881  001DF0  2855               	incf	___fladd@bexp^0,w,c
  8882  001DF2  B4D8               	btfsc	status,2,c
  8883  001DF4  EFFE  F00E         	goto	u2991
  8884  001DF8  EF00  F00F         	goto	u2990
  8885  001DFC                     u2991:
  8886  001DFC  EF08  F00F         	goto	l3027
  8887  001E00                     u2990:
  8888  001E00  5055               	movf	___fladd@bexp^0,w,c
  8889  001E02  A4D8               	btfss	status,2,c
  8890  001E04  EF06  F00F         	goto	u3001
  8891  001E08  EF08  F00F         	goto	u3000
  8892  001E0C                     u3001:
  8893  001E0C  EF1A  F00F         	goto	l3031
  8894  001E10                     u3000:
  8895  001E10                     l3027:
  8896  001E10  0E00               	movlw	0
  8897  001E12  6E47               	movwf	___fladd@b^0,c
  8898  001E14  0E00               	movlw	0
  8899  001E16  6E48               	movwf	(___fladd@b+1)^0,c
  8900  001E18  0E00               	movlw	0
  8901  001E1A  6E49               	movwf	(___fladd@b+2)^0,c
  8902  001E1C  0E00               	movlw	0
  8903  001E1E  6E4A               	movwf	(___fladd@b+3)^0,c
  8904  001E20  5055               	movf	___fladd@bexp^0,w,c
  8905  001E22  A4D8               	btfss	status,2,c
  8906  001E24  EF16  F00F         	goto	u3011
  8907  001E28  EF18  F00F         	goto	u3010
  8908  001E2C                     u3011:
  8909  001E2C  EF1A  F00F         	goto	l3031
  8910  001E30                     u3010:
  8911  001E30  0E00               	movlw	0
  8912  001E32  6E53               	movwf	___fladd@signs^0,c
  8913  001E34                     l3031:
  8914  001E34  A055               	btfss	___fladd@bexp^0,0,c
  8915  001E36  EF1F  F00F         	goto	u3021
  8916  001E3A  EF21  F00F         	goto	u3020
  8917  001E3E                     u3021:
  8918  001E3E  EF24  F00F         	goto	l3035
  8919  001E42                     u3020:
  8920  001E42  8E49               	bsf	(___fladd@b+2)^0,7,c
  8921  001E44  EF25  F00F         	goto	l3037
  8922  001E48                     l3035:
  8923  001E48  9E49               	bcf	(___fladd@b+2)^0,7,c
  8924  001E4A                     l3037:
  8925  001E4A  90D8               	bcf	status,0,c
  8926  001E4C  3055               	rrcf	___fladd@bexp^0,w,c
  8927  001E4E  6E4A               	movwf	(___fladd@b+3)^0,c
  8928  001E50  AE53               	btfss	___fladd@signs^0,7,c
  8929  001E52  EF2D  F00F         	goto	u3031
  8930  001E56  EF2F  F00F         	goto	u3030
  8931  001E5A                     u3031:
  8932  001E5A  EF30  F00F         	goto	l3043
  8933  001E5E                     u3030:
  8934  001E5E  8E4A               	bsf	(___fladd@b+3)^0,7,c
  8935  001E60                     l3043:
  8936  001E60  C047  F047         	movff	___fladd@b,?___fladd
  8937  001E64  C048  F048         	movff	___fladd@b+1,?___fladd+1
  8938  001E68  C049  F049         	movff	___fladd@b+2,?___fladd+2
  8939  001E6C  C04A  F04A         	movff	___fladd@b+3,?___fladd+3
  8940  001E70                     l712:
  8941  001E70  0012               	return		;funcret
  8942  001E72                     __end_of___fladd:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function _LCD_String_xy *****************
  8946 ;; Defined at:
  8947 ;;		line 75 in file "LCD_caracter.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  row             1    wreg     unsigned char 
  8950 ;;  pos             1   10[COMRAM] unsigned char 
  8951 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  8952 ;;		 -> Sluz(20), Stemp(20), STR_1(14), 
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;  row             1   13[COMRAM] unsigned char 
  8955 ;;  location        1   14[COMRAM] unsigned char 
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  1    wreg      void 
  8958 ;; Registers used:
  8959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8965 ;;      Params:         3       0       0       0       0       0       0       0       0
  8966 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8968 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8969 ;;Total ram usage:        5 bytes
  8970 ;; Hardware stack levels used: 1
  8971 ;; Hardware stack levels required when called: 3
  8972 ;; This function calls:
  8973 ;;		_LCD_Command
  8974 ;;		_LCD_String
  8975 ;; This function is called by:
  8976 ;;		_main
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text33
  8981  003CC2                     __ptext33:
  8982                           	callstack 0
  8983  003CC2                     _LCD_String_xy:
  8984                           	callstack 27
  8985                           
  8986                           ;incstack = 0
  8987                           ;LCD_String_xy@row stored from wreg
  8988  003CC2  6E0E               	movwf	LCD_String_xy@row^0,c
  8989  003CC4                     
  8990                           ;LCD_caracter.c: 78:     if(row<=1)
  8991  003CC4  0E02               	movlw	2
  8992  003CC6  600E               	cpfslt	LCD_String_xy@row^0,c
  8993  003CC8  EF68  F01E         	goto	u5061
  8994  003CCC  EF6A  F01E         	goto	u5060
  8995  003CD0                     u5061:
  8996  003CD0  EF73  F01E         	goto	l4259
  8997  003CD4                     u5060:
  8998  003CD4                     
  8999                           ;LCD_caracter.c: 79:     {;LCD_caracter.c: 80:         location=(0x80) | ((pos) & 0x0f);
  9000  003CD4  500B               	movf	LCD_String_xy@pos^0,w,c
  9001  003CD6  0B0F               	andlw	15
  9002  003CD8  0980               	iorlw	128
  9003  003CDA  6E0F               	movwf	LCD_String_xy@location^0,c
  9004  003CDC                     
  9005                           ;LCD_caracter.c: 81:         LCD_Command(location);
  9006  003CDC  500F               	movf	LCD_String_xy@location^0,w,c
  9007  003CDE  EC8B  F01D         	call	_LCD_Command
  9008                           
  9009                           ;LCD_caracter.c: 82:     }
  9010  003CE2  EF7A  F01E         	goto	l4263
  9011  003CE6                     l4259:
  9012                           
  9013                           ;LCD_caracter.c: 84:     {;LCD_caracter.c: 85:         location=(0xC0) | ((pos) & 0x0f);
  9014  003CE6  500B               	movf	LCD_String_xy@pos^0,w,c
  9015  003CE8  0B0F               	andlw	15
  9016  003CEA  09C0               	iorlw	192
  9017  003CEC  6E0F               	movwf	LCD_String_xy@location^0,c
  9018  003CEE                     
  9019                           ;LCD_caracter.c: 86:         LCD_Command(location);
  9020  003CEE  500F               	movf	LCD_String_xy@location^0,w,c
  9021  003CF0  EC8B  F01D         	call	_LCD_Command
  9022  003CF4                     l4263:
  9023                           
  9024                           ;LCD_caracter.c: 90:     LCD_String(msg);
  9025  003CF4  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
  9026  003CF8  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  9027  003CFC  ECB6  F01C         	call	_LCD_String	;wreg free
  9028  003D00  0012               	return		;funcret
  9029  003D02                     __end_of_LCD_String_xy:
  9030                           	callstack 0
  9031                           
  9032 ;; *************** function _LCD_String *****************
  9033 ;; Defined at:
  9034 ;;		line 66 in file "LCD_caracter.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;  msg             2    8[COMRAM] PTR const unsigned char 
  9037 ;;		 -> Sluz(20), Stemp(20), STR_1(14), 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;		None
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      void 
  9042 ;; Registers used:
  9043 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9049 ;;      Params:         2       0       0       0       0       0       0       0       0
  9050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9052 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9053 ;;Total ram usage:        2 bytes
  9054 ;; Hardware stack levels used: 1
  9055 ;; Hardware stack levels required when called: 2
  9056 ;; This function calls:
  9057 ;;		_LCD_Char
  9058 ;; This function is called by:
  9059 ;;		_LCD_String_xy
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text34
  9064  00396C                     __ptext34:
  9065                           	callstack 0
  9066  00396C                     _LCD_String:
  9067                           	callstack 27
  9068  00396C                     
  9069                           ;LCD_caracter.c: 66: void LCD_String(const char *msg);LCD_caracter.c: 67: {;LCD_caracter
      +                          .c: 68:  while((*msg)!=0)
  9070  00396C  EFCC  F01C         	goto	l4181
  9071  003970                     l4177:
  9072                           
  9073                           ;LCD_caracter.c: 69:  {;LCD_caracter.c: 70:    LCD_Char(*msg);
  9074  003970  C009  FFF6         	movff	LCD_String@msg,tblptrl
  9075  003974  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  9076  003978  6AF8               	clrf	tblptru,c
  9077  00397A  0E07               	movlw	(high __ramtop+-1)
  9078  00397C  64F7               	cpfsgt	tblptrh,c
  9079  00397E  D003               	bra	u4927
  9080  003980  0008               	tblrd		*
  9081  003982  50F5               	movf	tablat,w,c
  9082  003984  D005               	bra	u4920
  9083  003986                     u4927:
  9084  003986  CFF6 FFE1          	movff	tblptrl,fsr1l
  9085  00398A  CFF7 FFE2          	movff	tblptrh,fsr1h
  9086  00398E  50E7               	movf	indf1,w,c
  9087  003990                     u4920:
  9088  003990  EC65  F01D         	call	_LCD_Char
  9089  003994                     
  9090                           ;LCD_caracter.c: 71:    msg++;
  9091  003994  4A09               	infsnz	LCD_String@msg^0,f,c
  9092  003996  2A0A               	incf	(LCD_String@msg+1)^0,f,c
  9093  003998                     l4181:
  9094                           
  9095                           ;LCD_caracter.c: 68:  while((*msg)!=0)
  9096  003998  C009  FFF6         	movff	LCD_String@msg,tblptrl
  9097  00399C  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  9098  0039A0  6AF8               	clrf	tblptru,c
  9099  0039A2  0E07               	movlw	(high __ramtop+-1)
  9100  0039A4  64F7               	cpfsgt	tblptrh,c
  9101  0039A6  D003               	bra	u4937
  9102  0039A8  0008               	tblrd		*
  9103  0039AA  50F5               	movf	tablat,w,c
  9104  0039AC  D005               	bra	u4930
  9105  0039AE                     u4937:
  9106  0039AE  CFF6 FFE1          	movff	tblptrl,fsr1l
  9107  0039B2  CFF7 FFE2          	movff	tblptrh,fsr1h
  9108  0039B6  50E7               	movf	indf1,w,c
  9109  0039B8                     u4930:
  9110  0039B8  0900               	iorlw	0
  9111  0039BA  A4D8               	btfss	status,2,c
  9112  0039BC  EFE2  F01C         	goto	u4941
  9113  0039C0  EFE4  F01C         	goto	u4940
  9114  0039C4                     u4941:
  9115  0039C4  EFB8  F01C         	goto	l4177
  9116  0039C8                     u4940:
  9117  0039C8  0012               	return		;funcret
  9118  0039CA                     __end_of_LCD_String:
  9119                           	callstack 0
  9120                           
  9121 ;; *************** function _LCD_Init *****************
  9122 ;; Defined at:
  9123 ;;		line 23 in file "LCD_caracter.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;		None
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;		None
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  1    wreg      void 
  9130 ;; Registers used:
  9131 ;;		wreg, status,2, status,0, cstack
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/0
  9134 ;;		On exit  : 0/0
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9137 ;;      Params:         0       0       0       0       0       0       0       0       0
  9138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9141 ;;Total ram usage:        0 bytes
  9142 ;; Hardware stack levels used: 1
  9143 ;; Hardware stack levels required when called: 2
  9144 ;; This function calls:
  9145 ;;		_LCD_Command
  9146 ;;		_MSdelay
  9147 ;; This function is called by:
  9148 ;;		_main
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           	psect	text35
  9153  003DE0                     __ptext35:
  9154                           	callstack 0
  9155  003DE0                     _LCD_Init:
  9156                           	callstack 28
  9157  003DE0                     
  9158                           ;LCD_caracter.c: 25:     TRISB = 0;
  9159  003DE0  0E00               	movlw	0
  9160  003DE2  6E93               	movwf	147,c	;volatile
  9161  003DE4                     
  9162                           ;LCD_caracter.c: 26:     MSdelay(15);
  9163  003DE4  0E00               	movlw	0
  9164  003DE6  6E02               	movwf	(MSdelay@val+1)^0,c
  9165  003DE8  0E0F               	movlw	15
  9166  003DEA  6E01               	movwf	MSdelay@val^0,c
  9167  003DEC  ECB1  F01D         	call	_MSdelay	;wreg free
  9168  003DF0                     
  9169                           ;LCD_caracter.c: 27:     LCD_Command(0x02);
  9170  003DF0  0E02               	movlw	2
  9171  003DF2  EC8B  F01D         	call	_LCD_Command
  9172  003DF6                     
  9173                           ;LCD_caracter.c: 29:     LCD_Command(0x28);
  9174  003DF6  0E28               	movlw	40
  9175  003DF8  EC8B  F01D         	call	_LCD_Command
  9176  003DFC                     
  9177                           ;LCD_caracter.c: 31:  LCD_Command(0x01);
  9178  003DFC  0E01               	movlw	1
  9179  003DFE  EC8B  F01D         	call	_LCD_Command
  9180  003E02                     
  9181                           ;LCD_caracter.c: 32:     LCD_Command(0x0c);
  9182  003E02  0E0C               	movlw	12
  9183  003E04  EC8B  F01D         	call	_LCD_Command
  9184  003E08                     
  9185                           ;LCD_caracter.c: 33:  LCD_Command(0x06);
  9186  003E08  0E06               	movlw	6
  9187  003E0A  EC8B  F01D         	call	_LCD_Command
  9188  003E0E  0012               	return		;funcret
  9189  003E10                     __end_of_LCD_Init:
  9190                           	callstack 0
  9191                           
  9192 ;; *************** function _LCD_Custom_Char *****************
  9193 ;; Defined at:
  9194 ;;		line 99 in file "LCD_caracter.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  loc             1    wreg     unsigned char 
  9197 ;;  msg             2    8[COMRAM] PTR unsigned char 
  9198 ;;		 -> character1(8), character2(8), 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  loc             1   10[COMRAM] unsigned char 
  9201 ;;  i               1   11[COMRAM] unsigned char 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      void 
  9204 ;; Registers used:
  9205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9211 ;;      Params:         2       0       0       0       0       0       0       0       0
  9212 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9214 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9215 ;;Total ram usage:        4 bytes
  9216 ;; Hardware stack levels used: 1
  9217 ;; Hardware stack levels required when called: 2
  9218 ;; This function calls:
  9219 ;;		_LCD_Char
  9220 ;;		_LCD_Command
  9221 ;; This function is called by:
  9222 ;;		_main
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           	psect	text36
  9227  003BAC                     __ptext36:
  9228                           	callstack 0
  9229  003BAC                     _LCD_Custom_Char:
  9230                           	callstack 28
  9231                           
  9232                           ;incstack = 0
  9233                           ;LCD_Custom_Char@loc stored from wreg
  9234  003BAC  6E0B               	movwf	LCD_Custom_Char@loc^0,c
  9235  003BAE                     
  9236                           ;LCD_caracter.c: 99: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_c
      +                          aracter.c: 100: {;LCD_caracter.c: 101:     unsigned char i;;LCD_caracter.c: 102:     if 
      +                          (loc< 8 )
  9237  003BAE  0E08               	movlw	8
  9238  003BB0  600B               	cpfslt	LCD_Custom_Char@loc^0,c
  9239  003BB2  EFDD  F01D         	goto	u5091
  9240  003BB6  EFDF  F01D         	goto	u5090
  9241  003BBA                     u5091:
  9242  003BBA  EFF9  F01D         	goto	l104
  9243  003BBE                     u5090:
  9244  003BBE                     
  9245                           ;LCD_caracter.c: 103:     {;LCD_caracter.c: 104:      LCD_Command ( 0x40 +(loc* 8 ));
  9246  003BBE  500B               	movf	LCD_Custom_Char@loc^0,w,c
  9247  003BC0  0D08               	mullw	8
  9248  003BC2  50F3               	movf	243,w,c
  9249  003BC4  0F40               	addlw	64
  9250  003BC6  EC8B  F01D         	call	_LCD_Command
  9251  003BCA                     
  9252                           ;LCD_caracter.c: 105:        for (i= 0 ;i< 8 ;i++)
  9253  003BCA  0E00               	movlw	0
  9254  003BCC  6E0C               	movwf	LCD_Custom_Char@i^0,c
  9255  003BCE                     l4323:
  9256                           
  9257                           ;LCD_caracter.c: 106:            LCD_Char (msg[i]);
  9258  003BCE  500C               	movf	LCD_Custom_Char@i^0,w,c
  9259  003BD0  2409               	addwf	LCD_Custom_Char@msg^0,w,c
  9260  003BD2  6ED9               	movwf	fsr2l,c
  9261  003BD4  0E00               	movlw	0
  9262  003BD6  200A               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  9263  003BD8  6EDA               	movwf	fsr2h,c
  9264  003BDA  50DF               	movf	indf2,w,c
  9265  003BDC  EC65  F01D         	call	_LCD_Char
  9266  003BE0  2A0C               	incf	LCD_Custom_Char@i^0,f,c
  9267  003BE2  0E07               	movlw	7
  9268  003BE4  640C               	cpfsgt	LCD_Custom_Char@i^0,c
  9269  003BE6  EFF7  F01D         	goto	u5101
  9270  003BEA  EFF9  F01D         	goto	u5100
  9271  003BEE                     u5101:
  9272  003BEE  EFE7  F01D         	goto	l4323
  9273  003BF2                     u5100:
  9274  003BF2                     l104:
  9275  003BF2  0012               	return		;funcret
  9276  003BF4                     __end_of_LCD_Custom_Char:
  9277                           	callstack 0
  9278                           
  9279 ;; *************** function _LCD_Char *****************
  9280 ;; Defined at:
  9281 ;;		line 52 in file "LCD_caracter.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;  dat             1    wreg     unsigned char 
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;  dat             1    7[COMRAM] unsigned char 
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  1    wreg      void 
  9288 ;; Registers used:
  9289 ;;		wreg, status,2, status,0, cstack
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9295 ;;      Params:         0       0       0       0       0       0       0       0       0
  9296 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9297 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9298 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9299 ;;Total ram usage:        2 bytes
  9300 ;; Hardware stack levels used: 1
  9301 ;; Hardware stack levels required when called: 1
  9302 ;; This function calls:
  9303 ;;		_MSdelay
  9304 ;; This function is called by:
  9305 ;;		_main
  9306 ;;		_LCD_String
  9307 ;;		_LCD_Custom_Char
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311                           	psect	text37
  9312  003ACA                     __ptext37:
  9313                           	callstack 0
  9314  003ACA                     _LCD_Char:
  9315                           	callstack 27
  9316                           
  9317                           ;incstack = 0
  9318                           ;LCD_Char@dat stored from wreg
  9319  003ACA  6E08               	movwf	LCD_Char@dat^0,c
  9320  003ACC                     
  9321                           ;LCD_caracter.c: 52: void LCD_Char(unsigned char dat);LCD_caracter.c: 53: {;LCD_caracter
      +                          .c: 54:  LATB = (LATB & 0x0f) | (0xF0 & dat);
  9322  003ACC  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  9323  003AD0  0EF0               	movlw	240
  9324  003AD2  1607               	andwf	??_LCD_Char^0,f,c
  9325  003AD4  508A               	movf	138,w,c	;volatile
  9326  003AD6  0B0F               	andlw	15
  9327  003AD8  1007               	iorwf	??_LCD_Char^0,w,c
  9328  003ADA  6E8A               	movwf	138,c	;volatile
  9329  003ADC                     
  9330                           ;LCD_caracter.c: 55:  LATB2 = 1;
  9331  003ADC  848A               	bsf	3978,2,c	;volatile
  9332  003ADE                     
  9333                           ;LCD_caracter.c: 56:  LATB3 = 1;
  9334  003ADE  868A               	bsf	3978,3,c	;volatile
  9335  003AE0                     
  9336                           ;LCD_caracter.c: 57:  __nop();
  9337  003AE0  F000               	nop	
  9338  003AE2                     
  9339                           ;LCD_caracter.c: 58:  LATB3 = 0;
  9340  003AE2  968A               	bcf	3978,3,c	;volatile
  9341  003AE4                     
  9342                           ;LCD_caracter.c: 59:  MSdelay(1);
  9343  003AE4  0E00               	movlw	0
  9344  003AE6  6E02               	movwf	(MSdelay@val+1)^0,c
  9345  003AE8  0E01               	movlw	1
  9346  003AEA  6E01               	movwf	MSdelay@val^0,c
  9347  003AEC  ECB1  F01D         	call	_MSdelay	;wreg free
  9348  003AF0                     
  9349                           ;LCD_caracter.c: 60:     LATB = (LATB & 0x0f) | (dat<<4);
  9350  003AF0  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  9351  003AF4  3A07               	swapf	??_LCD_Char^0,f,c
  9352  003AF6  0EF0               	movlw	240
  9353  003AF8  1607               	andwf	??_LCD_Char^0,f,c
  9354  003AFA  508A               	movf	138,w,c	;volatile
  9355  003AFC  0B0F               	andlw	15
  9356  003AFE  1007               	iorwf	??_LCD_Char^0,w,c
  9357  003B00  6E8A               	movwf	138,c	;volatile
  9358  003B02                     
  9359                           ;LCD_caracter.c: 61:  LATB3 = 1;
  9360  003B02  868A               	bsf	3978,3,c	;volatile
  9361  003B04                     
  9362                           ;LCD_caracter.c: 62:  __nop();
  9363  003B04  F000               	nop	
  9364  003B06                     
  9365                           ;LCD_caracter.c: 63:  LATB3 = 0;
  9366  003B06  968A               	bcf	3978,3,c	;volatile
  9367                           
  9368                           ;LCD_caracter.c: 64:  MSdelay(3);
  9369  003B08  0E00               	movlw	0
  9370  003B0A  6E02               	movwf	(MSdelay@val+1)^0,c
  9371  003B0C  0E03               	movlw	3
  9372  003B0E  6E01               	movwf	MSdelay@val^0,c
  9373  003B10  ECB1  F01D         	call	_MSdelay	;wreg free
  9374  003B14  0012               	return		;funcret
  9375  003B16                     __end_of_LCD_Char:
  9376                           	callstack 0
  9377                           
  9378 ;; *************** function _LCD_Clear *****************
  9379 ;; Defined at:
  9380 ;;		line 93 in file "LCD_caracter.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;		None
  9383 ;; Auto vars:     Size  Location     Type
  9384 ;;		None
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  1    wreg      void 
  9387 ;; Registers used:
  9388 ;;		wreg, status,2, status,0, cstack
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9394 ;;      Params:         0       0       0       0       0       0       0       0       0
  9395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9397 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9398 ;;Total ram usage:        0 bytes
  9399 ;; Hardware stack levels used: 1
  9400 ;; Hardware stack levels required when called: 2
  9401 ;; This function calls:
  9402 ;;		_LCD_Command
  9403 ;;		_MSdelay
  9404 ;; This function is called by:
  9405 ;;		_main
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           	psect	text38
  9410  003E4E                     __ptext38:
  9411                           	callstack 0
  9412  003E4E                     _LCD_Clear:
  9413                           	callstack 28
  9414  003E4E                     
  9415                           ;LCD_caracter.c: 95:     LCD_Command(0x01);
  9416  003E4E  0E01               	movlw	1
  9417  003E50  EC8B  F01D         	call	_LCD_Command
  9418                           
  9419                           ;LCD_caracter.c: 96:     MSdelay(3);
  9420  003E54  0E00               	movlw	0
  9421  003E56  6E02               	movwf	(MSdelay@val+1)^0,c
  9422  003E58  0E03               	movlw	3
  9423  003E5A  6E01               	movwf	MSdelay@val^0,c
  9424  003E5C  ECB1  F01D         	call	_MSdelay	;wreg free
  9425  003E60  0012               	return		;funcret
  9426  003E62                     __end_of_LCD_Clear:
  9427                           	callstack 0
  9428                           
  9429 ;; *************** function _LCD_Command *****************
  9430 ;; Defined at:
  9431 ;;		line 36 in file "LCD_caracter.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  cmd             1    wreg     unsigned char 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;  cmd             1    7[COMRAM] unsigned char 
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  1    wreg      void 
  9438 ;; Registers used:
  9439 ;;		wreg, status,2, status,0, cstack
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9445 ;;      Params:         0       0       0       0       0       0       0       0       0
  9446 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9447 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9448 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9449 ;;Total ram usage:        2 bytes
  9450 ;; Hardware stack levels used: 1
  9451 ;; Hardware stack levels required when called: 1
  9452 ;; This function calls:
  9453 ;;		_MSdelay
  9454 ;; This function is called by:
  9455 ;;		_main
  9456 ;;		_LCD_Init
  9457 ;;		_LCD_String_xy
  9458 ;;		_LCD_Clear
  9459 ;;		_LCD_Custom_Char
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text39
  9464  003B16                     __ptext39:
  9465                           	callstack 0
  9466  003B16                     _LCD_Command:
  9467                           	callstack 28
  9468                           
  9469                           ;incstack = 0
  9470                           ;LCD_Command@cmd stored from wreg
  9471  003B16  6E08               	movwf	LCD_Command@cmd^0,c
  9472  003B18                     
  9473                           ;LCD_caracter.c: 36: void LCD_Command(unsigned char cmd );LCD_caracter.c: 37: {;LCD_cara
      +                          cter.c: 38:  LATB = (LATB & 0x0f) |(0xF0 & cmd);
  9474  003B18  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  9475  003B1C  0EF0               	movlw	240
  9476  003B1E  1607               	andwf	??_LCD_Command^0,f,c
  9477  003B20  508A               	movf	138,w,c	;volatile
  9478  003B22  0B0F               	andlw	15
  9479  003B24  1007               	iorwf	??_LCD_Command^0,w,c
  9480  003B26  6E8A               	movwf	138,c	;volatile
  9481  003B28                     
  9482                           ;LCD_caracter.c: 39:  LATB2 = 0;
  9483  003B28  948A               	bcf	3978,2,c	;volatile
  9484  003B2A                     
  9485                           ;LCD_caracter.c: 40:  LATB3 = 1;
  9486  003B2A  868A               	bsf	3978,3,c	;volatile
  9487  003B2C                     
  9488                           ;LCD_caracter.c: 41:  __nop();
  9489  003B2C  F000               	nop	
  9490  003B2E                     
  9491                           ;LCD_caracter.c: 42:  LATB3 = 0;
  9492  003B2E  968A               	bcf	3978,3,c	;volatile
  9493  003B30                     
  9494                           ;LCD_caracter.c: 43:  MSdelay(1);
  9495  003B30  0E00               	movlw	0
  9496  003B32  6E02               	movwf	(MSdelay@val+1)^0,c
  9497  003B34  0E01               	movlw	1
  9498  003B36  6E01               	movwf	MSdelay@val^0,c
  9499  003B38  ECB1  F01D         	call	_MSdelay	;wreg free
  9500  003B3C                     
  9501                           ;LCD_caracter.c: 44:     LATB = (LATB & 0x0f) | (cmd<<4);
  9502  003B3C  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  9503  003B40  3A07               	swapf	??_LCD_Command^0,f,c
  9504  003B42  0EF0               	movlw	240
  9505  003B44  1607               	andwf	??_LCD_Command^0,f,c
  9506  003B46  508A               	movf	138,w,c	;volatile
  9507  003B48  0B0F               	andlw	15
  9508  003B4A  1007               	iorwf	??_LCD_Command^0,w,c
  9509  003B4C  6E8A               	movwf	138,c	;volatile
  9510  003B4E                     
  9511                           ;LCD_caracter.c: 45:  LATB3 = 1;
  9512  003B4E  868A               	bsf	3978,3,c	;volatile
  9513  003B50                     
  9514                           ;LCD_caracter.c: 46:  __nop();
  9515  003B50  F000               	nop	
  9516  003B52                     
  9517                           ;LCD_caracter.c: 47:  LATB3 = 0;
  9518  003B52  968A               	bcf	3978,3,c	;volatile
  9519                           
  9520                           ;LCD_caracter.c: 48:  MSdelay(3);
  9521  003B54  0E00               	movlw	0
  9522  003B56  6E02               	movwf	(MSdelay@val+1)^0,c
  9523  003B58  0E03               	movlw	3
  9524  003B5A  6E01               	movwf	MSdelay@val^0,c
  9525  003B5C  ECB1  F01D         	call	_MSdelay	;wreg free
  9526  003B60  0012               	return		;funcret
  9527  003B62                     __end_of_LCD_Command:
  9528                           	callstack 0
  9529                           
  9530 ;; *************** function _MSdelay *****************
  9531 ;; Defined at:
  9532 ;;		line 111 in file "LCD_caracter.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;  val             2    0[COMRAM] unsigned int 
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;  j               2    4[COMRAM] unsigned int 
  9537 ;;  i               2    2[COMRAM] unsigned int 
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  1    wreg      void 
  9540 ;; Registers used:
  9541 ;;		wreg, status,2, status,0
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9547 ;;      Params:         2       0       0       0       0       0       0       0       0
  9548 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9550 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9551 ;;Total ram usage:        6 bytes
  9552 ;; Hardware stack levels used: 1
  9553 ;; This function calls:
  9554 ;;		Nothing
  9555 ;; This function is called by:
  9556 ;;		_LCD_Init
  9557 ;;		_LCD_Command
  9558 ;;		_LCD_Char
  9559 ;;		_LCD_Clear
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           	psect	text40
  9564  003B62                     __ptext40:
  9565                           	callstack 0
  9566  003B62                     _MSdelay:
  9567                           	callstack 27
  9568  003B62                     
  9569                           ;LCD_caracter.c: 111: void MSdelay(unsigned int val);LCD_caracter.c: 112: {;LCD_caracter
      +                          .c: 113:  unsigned int i,j;;LCD_caracter.c: 114:  for(i=0;i<val;i++)
  9570  003B62  0E00               	movlw	0
  9571  003B64  6E04               	movwf	(MSdelay@i+1)^0,c
  9572  003B66  0E00               	movlw	0
  9573  003B68  6E03               	movwf	MSdelay@i^0,c
  9574  003B6A  EFCA  F01D         	goto	l3635
  9575  003B6E                     l3623:
  9576                           
  9577                           ;LCD_caracter.c: 115:      for(j=0;j<165;j++);
  9578  003B6E  0E00               	movlw	0
  9579  003B70  6E06               	movwf	(MSdelay@j+1)^0,c
  9580  003B72  0E00               	movlw	0
  9581  003B74  6E05               	movwf	MSdelay@j^0,c
  9582  003B76                     l3629:
  9583  003B76  4A05               	infsnz	MSdelay@j^0,f,c
  9584  003B78  2A06               	incf	(MSdelay@j+1)^0,f,c
  9585  003B7A  5006               	movf	(MSdelay@j+1)^0,w,c
  9586  003B7C  E109               	bnz	u4080
  9587  003B7E  0EA5               	movlw	165
  9588  003B80  5C05               	subwf	MSdelay@j^0,w,c
  9589  003B82  A0D8               	btfss	status,0,c
  9590  003B84  EFC6  F01D         	goto	u4081
  9591  003B88  EFC8  F01D         	goto	u4080
  9592  003B8C                     u4081:
  9593  003B8C  EFBB  F01D         	goto	l3629
  9594  003B90                     u4080:
  9595  003B90  4A03               	infsnz	MSdelay@i^0,f,c
  9596  003B92  2A04               	incf	(MSdelay@i+1)^0,f,c
  9597  003B94                     l3635:
  9598  003B94  5001               	movf	MSdelay@val^0,w,c
  9599  003B96  5C03               	subwf	MSdelay@i^0,w,c
  9600  003B98  5002               	movf	(MSdelay@val+1)^0,w,c
  9601  003B9A  5804               	subwfb	(MSdelay@i+1)^0,w,c
  9602  003B9C  A0D8               	btfss	status,0,c
  9603  003B9E  EFD3  F01D         	goto	u4091
  9604  003BA2  EFD5  F01D         	goto	u4090
  9605  003BA6                     u4091:
  9606  003BA6  EFB7  F01D         	goto	l3623
  9607  003BAA                     u4090:
  9608  003BAA  0012               	return		;funcret
  9609  003BAC                     __end_of_MSdelay:
  9610                           	callstack 0
  9611                           
  9612                           	psect	rparam
  9613  0000                     
  9614                           	psect	idloc
  9615                           
  9616                           ;Config register IDLOC0 @ 0x200000
  9617                           ;	unspecified, using default values
  9618  200000                     	org	2097152
  9619  200000  FF                 	db	255
  9620                           
  9621                           ;Config register IDLOC1 @ 0x200001
  9622                           ;	unspecified, using default values
  9623  200001                     	org	2097153
  9624  200001  FF                 	db	255
  9625                           
  9626                           ;Config register IDLOC2 @ 0x200002
  9627                           ;	unspecified, using default values
  9628  200002                     	org	2097154
  9629  200002  FF                 	db	255
  9630                           
  9631                           ;Config register IDLOC3 @ 0x200003
  9632                           ;	unspecified, using default values
  9633  200003                     	org	2097155
  9634  200003  FF                 	db	255
  9635                           
  9636                           ;Config register IDLOC4 @ 0x200004
  9637                           ;	unspecified, using default values
  9638  200004                     	org	2097156
  9639  200004  FF                 	db	255
  9640                           
  9641                           ;Config register IDLOC5 @ 0x200005
  9642                           ;	unspecified, using default values
  9643  200005                     	org	2097157
  9644  200005  FF                 	db	255
  9645                           
  9646                           ;Config register IDLOC6 @ 0x200006
  9647                           ;	unspecified, using default values
  9648  200006                     	org	2097158
  9649  200006  FF                 	db	255
  9650                           
  9651                           ;Config register IDLOC7 @ 0x200007
  9652                           ;	unspecified, using default values
  9653  200007                     	org	2097159
  9654  200007  FF                 	db	255
  9655                           
  9656                           	psect	config
  9657                           
  9658                           ;Config register CONFIG1L @ 0x300000
  9659                           ;	PLL Prescaler Selection bits
  9660                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9661                           ;	System Clock Postscaler Selection bits
  9662                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9663                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9664                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9665  300000                     	org	3145728
  9666  300000  00                 	db	0
  9667                           
  9668                           ;Config register CONFIG1H @ 0x300001
  9669                           ;	Oscillator Selection bits
  9670                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  9671                           ;	Fail-Safe Clock Monitor Enable bit
  9672                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9673                           ;	Internal/External Oscillator Switchover bit
  9674                           ;	IESO = ON, Oscillator Switchover mode enabled
  9675  300001                     	org	3145729
  9676  300001  88                 	db	136
  9677                           
  9678                           ;Config register CONFIG2L @ 0x300002
  9679                           ;	Power-up Timer Enable bit
  9680                           ;	PWRT = ON, PWRT enabled
  9681                           ;	Brown-out Reset Enable bits
  9682                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9683                           ;	Brown-out Reset Voltage bits
  9684                           ;	BORV = 3, Minimum setting 2.05V
  9685                           ;	USB Voltage Regulator Enable bit
  9686                           ;	VREGEN = OFF, USB voltage regulator disabled
  9687  300002                     	org	3145730
  9688  300002  18                 	db	24
  9689                           
  9690                           ;Config register CONFIG2H @ 0x300003
  9691                           ;	Watchdog Timer Enable bit
  9692                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9693                           ;	Watchdog Timer Postscale Select bits
  9694                           ;	WDTPS = 32768, 1:32768
  9695  300003                     	org	3145731
  9696  300003  1E                 	db	30
  9697                           
  9698                           ; Padding undefined space
  9699  300004                     	org	3145732
  9700  300004  FF                 	db	255
  9701                           
  9702                           ;Config register CONFIG3H @ 0x300005
  9703                           ;	CCP2 MUX bit
  9704                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9705                           ;	PORTB A/D Enable bit
  9706                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  9707                           ;	Low-Power Timer 1 Oscillator Enable bit
  9708                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9709                           ;	MCLR Pin Enable bit
  9710                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9711  300005                     	org	3145733
  9712  300005  83                 	db	131
  9713                           
  9714                           ;Config register CONFIG4L @ 0x300006
  9715                           ;	Stack Full/Underflow Reset Enable bit
  9716                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9717                           ;	Single-Supply ICSP Enable bit
  9718                           ;	LVP = ON, Single-Supply ICSP enabled
  9719                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9720                           ;	ICPRT = OFF, ICPORT disabled
  9721                           ;	Extended Instruction Set Enable bit
  9722                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9723                           ;	Background Debugger Enable bit
  9724                           ;	DEBUG = 0x1, unprogrammed default
  9725  300006                     	org	3145734
  9726  300006  85                 	db	133
  9727                           
  9728                           ; Padding undefined space
  9729  300007                     	org	3145735
  9730  300007  FF                 	db	255
  9731                           
  9732                           ;Config register CONFIG5L @ 0x300008
  9733                           ;	Code Protection bit
  9734                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9735                           ;	Code Protection bit
  9736                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9737                           ;	Code Protection bit
  9738                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9739                           ;	Code Protection bit
  9740                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9741  300008                     	org	3145736
  9742  300008  0F                 	db	15
  9743                           
  9744                           ;Config register CONFIG5H @ 0x300009
  9745                           ;	Boot Block Code Protection bit
  9746                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9747                           ;	Data EEPROM Code Protection bit
  9748                           ;	CPD = OFF, Data EEPROM is not code-protected
  9749  300009                     	org	3145737
  9750  300009  C0                 	db	192
  9751                           
  9752                           ;Config register CONFIG6L @ 0x30000A
  9753                           ;	Write Protection bit
  9754                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9755                           ;	Write Protection bit
  9756                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9757                           ;	Write Protection bit
  9758                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9759                           ;	Write Protection bit
  9760                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9761  30000A                     	org	3145738
  9762  30000A  0F                 	db	15
  9763                           
  9764                           ;Config register CONFIG6H @ 0x30000B
  9765                           ;	Configuration Register Write Protection bit
  9766                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9767                           ;	Boot Block Write Protection bit
  9768                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9769                           ;	Data EEPROM Write Protection bit
  9770                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9771  30000B                     	org	3145739
  9772  30000B  E0                 	db	224
  9773                           
  9774                           ;Config register CONFIG7L @ 0x30000C
  9775                           ;	Table Read Protection bit
  9776                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9777                           ;	Table Read Protection bit
  9778                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9779                           ;	Table Read Protection bit
  9780                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9781                           ;	Table Read Protection bit
  9782                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9783  30000C                     	org	3145740
  9784  30000C  0F                 	db	15
  9785                           
  9786                           ;Config register CONFIG7H @ 0x30000D
  9787                           ;	Boot Block Table Read Protection bit
  9788                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9789  30000D                     	org	3145741
  9790  30000D  40                 	db	64
  9791                           tosu	equ	0xFFF
  9792                           tosh	equ	0xFFE
  9793                           tosl	equ	0xFFD
  9794                           stkptr	equ	0xFFC
  9795                           pclatu	equ	0xFFB
  9796                           pclath	equ	0xFFA
  9797                           pcl	equ	0xFF9
  9798                           tblptru	equ	0xFF8
  9799                           tblptrh	equ	0xFF7
  9800                           tblptrl	equ	0xFF6
  9801                           tablat	equ	0xFF5
  9802                           prodh	equ	0xFF4
  9803                           prodl	equ	0xFF3
  9804                           indf0	equ	0xFEF
  9805                           postinc0	equ	0xFEE
  9806                           postdec0	equ	0xFED
  9807                           preinc0	equ	0xFEC
  9808                           plusw0	equ	0xFEB
  9809                           fsr0h	equ	0xFEA
  9810                           fsr0l	equ	0xFE9
  9811                           wreg	equ	0xFE8
  9812                           indf1	equ	0xFE7
  9813                           postinc1	equ	0xFE6
  9814                           postdec1	equ	0xFE5
  9815                           preinc1	equ	0xFE4
  9816                           plusw1	equ	0xFE3
  9817                           fsr1h	equ	0xFE2
  9818                           fsr1l	equ	0xFE1
  9819                           bsr	equ	0xFE0
  9820                           indf2	equ	0xFDF
  9821                           postinc2	equ	0xFDE
  9822                           postdec2	equ	0xFDD
  9823                           preinc2	equ	0xFDC
  9824                           plusw2	equ	0xFDB
  9825                           fsr2h	equ	0xFDA
  9826                           fsr2l	equ	0xFD9
  9827                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        24
    BSS         156
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    122     157
    BANK1           256      0     144
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[6]), STR_4(CODE[8]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[6]), STR_4(CODE[8]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[6]), STR_4(CODE[8]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[6]), STR_4(CODE[8]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S862_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), STR_1(CODE[14]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _efgtoa->___flsub
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _atoi->_isspace
    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Char->_MSdelay
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _ReadADC->___fltol

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   50299
                                            118 BANK0      4     4      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                    _LCD_Custom_Char
                           _LCD_Init
                      _LCD_String_xy
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   31247
                                            102 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   30130
                                             94 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   29747
                                             70 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   24292
                                              2 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             70 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             86 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    2310
                                             45 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ReadLUZ                                              6     4      2      46
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              6     4      2    8609
                                              2 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              6 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             86 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             45 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             70 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    2504
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     713
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1140
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Custom_Char                                      4     2      2    1546
                                              8 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     592
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    1140
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     592
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     548
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
     _MSdelay
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Command
   _LCD_Custom_Char
     _LCD_Char
     _LCD_Command
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _ReadADC
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _ReadLUZ (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ReadLUZ
   ___flge
     ___flmul (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      90       7       56.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18C      20        0.0%
DATA                 0      0     18C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 20 11:19:26 2021

            ___fldiv@aexp 0046              ___fldiv@bexp 0045              ___fldiv@sign 003E  
            ?_LCD_Command 0001                        l81 3B60                        l90 39C8  
                      l84 3B14                        l78 3E0E                        l95 3D00  
                      l98 3E60              ___awdiv@sign 0006       ___wmul@multiplicand 0003  
             ?_LCD_String 0009           _LCD_Custom_Char 3BAC                       l112 3BAA  
                     l104 3BF2                       l142 32FA                       l144 3308  
                     l145 33BE                       l170 38A8                       l406 36E8  
                     l167 3880                       l175 3E34                       l440 317C  
                     l169 388E                       l434 3842                       l419 3798  
                     l445 31C2                       l703 1BA0                       l720 1CBA  
                     l712 1E70                       l704 1B8E                       l472 30BE  
                     l705 1B54                       l449 3D70                       l730 1D78  
                     l806 2688                       l830 2CCA                       l729 1D8A  
                     l833 2E26                       l745 3C38                       l770 297E  
                     l762 2884                       l771 296C                       l844 2DBE  
                     l757 2A60                       l837 2D62                       l917 1488  
                     l853 3A76                       l759 28C0                       l935 0C1E  
                     l768 2906                       l793 26C6                       l963 105E  
                     l796 2558                       l789 2362                       l798 25D0  
                     l894 35A6                       l799 25BE                       l897 35E8  
                     l899 3624                       _pad 3560                       _luz 00EA  
            ___awmod@sign 0006                       wreg 000FE8              ___flmul@aexp 0026  
            ___flmul@bexp 0027              ___flmul@sign 0021              ___flmul@temp 002C  
            ___flmul@prod 0028               LCD_Char@dat 0008              ___fltol@exp1 0061  
                    l1101 3AC8                      l1021 19B0                      l1006 157C  
                    l1122 355E                      l1130 3CC0                      l1034 3902  
                    l1107 3D38                      l1035 390A                      l1028 18F6  
                    l1045 32C0                      l1133 3E62                      l3001 1D38  
                    l1145 3DDE                      l1074 2FAE                      l3011 1D70  
                    l3003 1D3A                      l1083 2C72                      l1139 3A24  
                    l1164 396A                      l3021 1DEE                      l3005 1D48  
                    l3101 274A                      l1093 3DA8                      l1077 2FB6  
                    l1149 3494                      l1086 2BB6                      l3031 1E34  
                    l3015 1D9A                      l3023 1DF0                      l3007 1D4C  
                    l3103 275A                      l3111 2784                      l1159 3962  
                    l3041 1E5E                      l3033 1E42                      l3025 1E00  
                    l3017 1DA6                      l3009 1D5A                      l3201 2A4E  
                    l3121 27C6                      l3113 2794                      l3105 276A  
                    l4001 344A                      l4011 3ADE                      l3043 1E60  
                    l3035 1E48                      l3027 1E10                      l3019 1DB4  
                    l3203 2A54                      l3115 27AA                      l3107 277A  
                    l3051 3C9C                      l4003 3472                      l4021 3B02  
                    l4013 3AE0                      l3037 1E4A                      l3029 1E30  
                    l3205 2A56                      l3141 2848                      l3133 27FE  
                    l3117 27BA                      l3125 27DA                      l3109 277C  
                    l3301 2568                      l3221 22CA                      l3213 229E  
                    l3053 3CA0                      l3061 3DD2                      l4101 177A  
                    l4023 3B04                      l4015 3AE2                      l4007 3ACC  
                    l3039 1E50                      l3151 288E                      l3143 2850  
                    l3135 2818                      l3127 27EA                      l3119 27C2  
                    l3303 2576                      l3231 2306                      l3223 22DA  
                    l3215 22AA                      l3071 3E2C                      l3047 3C7E  
                    l3055 3DAA                      l4111 1812                      l4103 1788  
                    l4031 14BC                      l4025 3B06                      l4017 3AE4  
                    l4009 3ADC                      l3161 28E6                      l3153 28AC  
                    l3145 2860                      l3137 2828                      l3129 27EA  
                    l3081 26E4                      l3313 25E0                      l3321 2628  
                    l3305 257A                      l3241 233C                      l3233 230C  
                    l3225 22EA                      l3217 22B8                      l4201 2D4A  
                    l3401 3708                      l3049 3C8A                      l3057 3DB6  
                    l3065 3D02                      l4105 17B8                      l4041 14F2  
                    l4033 14CE                      l4019 3AF0                      l3171 2924  
                    l3163 28EC                      l3155 28AE                      l3147 2874  
                    l3139 2838                      l3083 26F4                      l3091 271E  
                    l3075 26C8                      l3331 269C                      l3323 2642  
                    l3315 25EC                      l3307 2588                      l3243 234C  
                    l3235 231A                      l3227 22F0                      l3219 22BA  
                    l4211 2DAE                      l4203 2D4C                      l3411 3740  
                    l3403 3716                      l3059 3DBA                      l4131 1950  
                    l4115 1880                      l4035 14D2                      l4027 148A  
                    l3181 298E                      l3173 2928                      l3165 28F6  
                    l3157 28BE                      l3149 2882                      l3093 272E  
                    l3085 2704                      l3077 26D4                      l3333 26AA  
                    l3325 2656                      l3317 25FA                      l3309 25B6  
                    l3261 23CE                      l3253 2396                      l3245 2352  
                    l3237 231C                      l3229 2300                      l3501 305E  
                    l4221 2E06                      l4213 2DCC                      l4205 2D58  
                    l3069 3E10                      l3413 374E                      l3421 3778  
                    l3405 371E                      l4117 1892                      l4125 190A  
                    l4109 17E4                      l4061 1516                      l4053 1504  
                    l4045 14F8                      l4037 14DE                      l4029 14AE  
                    l4141 197A                      l4301 3A26                      l3191 29F0  
                    l3183 299A                      l3175 2936                      l3167 2904  
                    l3159 28D0                      l3095 2734                      l3087 2714  
                    l3079 26E2                      l3335 26AC                      l3327 2670  
                    l3319 2624                      l3271 2418                      l3263 23E6  
                    l3255 23A2                      l3247 2372                      l3239 232C  
                    l3511 308E                      l4223 2E14                      l4215 2DCE  
                    l4207 2D94                      l3351 362A                      l3423 3788  
                    l3415 3764                      l3407 3730                      l3431 37C8  
                    l3343 3BF4                      l4143 199E                      l4127 192E  
                    l4135 195E                      l4119 18C6                      l4071 15B8  
                    l4039 14E0                      l4063 156A                      l4231 38B2  
                    l4303 3A38                      l4161 3B2C                      l4313 3BAE  
                    l4241 3DF0                      l3193 2A06                      l3185 29A8  
                    l3177 2964                      l3169 2916                      l3097 273A  
                    l3089 2716                      l3329 268C                      l3337 26B2  
                    l3281 246E                      l3273 2428                      l3265 23F2  
                    l3257 23AC                      l3249 2382                      l3513 309E  
                    l4225 2E16                      l4217 2DD2                      l4209 2DA0  
                    l3361 365A                      l3353 3638                      l3425 3790  
                    l3417 376C                      l3409 3738                      l3441 3840  
                    l3433 37D8                      l3345 3C04                      l3601 2C62  
                    l3521 3570                      l4137 196C                      l4129 193C  
                    l4081 1652                      l4073 15C6                      l4065 158A  
                    l4057 150A                      l4049 14FE                      l4233 38C0  
                    l4305 3A40                      l4401 222C                      l4171 3B50  
                    l4163 3B2E                      l4155 3B18                      l4323 3BCE  
                    l4315 3BBE                      l4243 3DF6                      l4251 3CC4  
                    l3195 2A20                      l3187 29D2                      l3099 2748  
                    l3339 26B6                      l3291 2512                      l3283 248A  
                    l3275 2434                      l3267 23FE                      l3259 23C2  
                    l3515 30AE                      l3507 3072                      l4219 2DF6  
                    l3611 3A7C                      l3371 3688                      l3363 365E  
                    l3355 3640                      l3419 3772                      l3435 3806  
                    l3451 312C                      l3531 35C6                      l3523 3584  
                    l4091 16DE                      l4075 15EA                      l4067 158C  
                    l4235 38E6                      l4307 3A48                      l4411 2290  
                    l4403 223E                      l4331 1E7A                      l3621 3B62  
                    l4173 3B52                      l4165 3B30                      l4157 3B28  
                    l4325 3BE0                      l4317 3BCA                      l4245 3DFC  
                    l4237 3DE0                      l4181 3998                      l4261 3CEE  
                    l4253 3CC4                      l2901 1AC6                      l3197 2A3C  
                    l3189 29D6                      l3293 2520                      l3285 2496  
                    l3277 2444                      l3269 240C                      l3509 307E  
                    l3605 3D72                      l3613 3A90                      l3381 36BC  
                    l3373 3696                      l3365 3666                      l3357 3644  
                    l3349 3626                      l3437 3816                      l3429 379A  
                    l3461 31BA                      l3453 313C                      l3445 30C0  
                    l3541 31C4                      l3533 35CA                      l3525 3592  
                    l4093 1710                      l4085 169A                      l4077 1624  
                    l4069 15B0                      l4229 38AA                      l4309 3A64  
                    l4413 2292                      l4405 2276                      l4341 1ECC  
                    l4333 1E7E                      l3631 3B7A                      l3623 3B6E  
                    l4167 3B3C                      l4159 3B2A                      l4327 3BE2  
                    l4247 3E02                      l4239 3DE4                      l4175 396C  
                    l4263 3CF4                      l4255 3CD4                      l2911 1ADA  
                    l2903 1ACA                      l3199 2A40                      l3295 253E  
                    l3287 24B2                      l3279 245E                      l4191 2CF0  
                    l4183 2C76                      l4271 32F4                      l3615 3ABE  
                    l3383 36C2                      l3375 369C                      l3367 3678  
                    l3359 3652                      l3439 383A                      l3463 31C0  
                    l3455 314A                      l3447 30EE                      l3471 3D60  
                    l3543 31E4                      l2831 3496                      l3535 35F8  
                    l3527 359E                      l3519 3560                      l3711 0AEA  
                    l3703 0A66                      l4095 1720                      l4079 1644  
                    l4087 16AC                      l4415 2294                      l4407 2284  
                    l4351 1FAE                      l4343 1EF2                      l4335 1E90  
                    l3633 3B90                      l4169 3B4E                      l4265 3E4E  
                    l4249 3E08                      l4177 3970                      l4257 3CDC  
                    l2921 1AEE                      l2913 1ADE                      l2905 1ACE  
                    l3297 2548                      l3289 24DC                      l3481 2FE4  
                    l4185 2C86                      l4281 33B6                      l4273 32F6  
                    l3617 3AC2                      l3609 3A78                      l3377 36B2  
                    l3369 3680                      l3385 36C8                      l3393 36EA  
                    l3457 315C                      l3449 30FE                      l3545 3222  
                    l3553 3262                      l2841 3518                      l2833 34A8  
                    l3537 360C                      l3529 35B2                      l3801 0F7E  
                    l3713 0AF0                      l3721 0BB8                      l3705 0A80  
                    l3641 084C                      l4097 1752                      l4089 16CE  
                    l4409 228A                      l4361 2012                      l4353 1FC0  
                    l4345 1F24                      l4337 1E94                      l4329 1E72  
                    l3635 3B94                      l4179 3994                      l4259 3CE6  
                    l2931 1B4C                      l2915 1AE2                      l2907 1AD2  
                    l2923 1AF2                      l2851 19CE                      l3299 2556  
                    l3491 3032                      l3483 300E                      l3475 2FB8  
                    l4195 2D04                      l4187 2C94                      l4275 32F8  
                    l4267 32C2                      l4291 387C                      l3387 36D8  
                    l3379 36BA                      l3395 36EE                      l3459 316A  
                    l3467 3D3A                      l3555 3274                      l3547 324A  
                    l2835 34BA                      l3563 39CA                      l3571 3942  
                    l3803 0FD4                      l3811 1026                      l3731 0BF8  
                    l3723 0BC8                      l3715 0B4A                      l3651 0898  
                    l3643 085A                      l4099 1764                      l4371 207C  
                    l4363 2014                      l4355 1FF8                      l4347 1F56  
                    l4339 1EA6                      l3629 3B76                      l2941 1B82  
                    l2933 1B62                      l2925 1AF6                      l2917 1AE6  
                    l2909 1AD6                      l2853 19DE                      l2861 1A08  
                    l2845 19B2                      l3485 3010                      l3477 2FD0  
                    l4197 2D0C                      l4189 2CDA                      l4277 3310  
                    l4269 32C6                      l4293 387E                      l4285 3844  
                    l3389 36E0                      l3397 36FC                      l3469 3D50  
                    l3549 3256                      l3581 2AD8                      l2837 34C4  
                    l3565 39DA                      l3573 3954                      l3901 135A  
                    l3821 10DE                      l3813 1036                      l3805 0FDA  
                    l3741 0C3C                      l3733 0C12                      l3725 0BCC  
                    l3717 0B7E                      l3709 0AB6                      l3661 08DE  
                    l3653 08AA                      l3645 0862                      l3637 0832  
                    l4381 2150                      l4373 20AE                      l4365 2016  
                    l4357 2006                      l4349 1F88                      ?_pad 0011  
                    l2951 1BD2                      l2943 1B8C                      l2935 1B6E  
                    l2927 1B20                      l2919 1AEA                      l2871 1A38  
                    l2863 1A18                      l2855 19EE                      l2847 19BE  
                    l3487 3020                      l4199 2D18                      l4279 331C  
                    l4295 3894                      l4287 3848                      l4471 2EE4  
                    l3399 3704                      l3559 32B8                      l3591 2BA6  
                    l3583 2AEC                      l2839 34E2                      l3567 390C  
                    l3911 13B0                      l3903 1376                      l3823 10EE  
                    l3831 1128                      l3815 104A                      l3807 100E  
                    l3743 0C4E                      l3751 0CAC                      l3727 0BDE  
                    l3735 0C2A                      l3719 0B86                      l3663 08E2  
                    l3655 08B8                      l3647 0886                      l3639 083C  
                    l4391 216E                      l4383 215E                      l4375 20E0  
                    l4359 200C                      l4367 2018                      l2961 1C0E  
                    l2953 1BE2                      l2945 1BAE                      l2937 1B72  
                    l2929 1B3C                      l2881 1A78                      l2873 1A46  
                    l2865 1A1E                      l2857 19FE                      l2849 19CC  
                    l3497 304A                      l3489 3024                      l4297 38A0  
                    l4289 387A                      l3585 2AFA                      l3593 2BDA  
                    l3577 2A62                      l3921 13EC                      l3913 13B6  
                    l3905 137E                      l3841 1162                      l3833 113A  
                    l3825 1100                      l3817 1056                      l3809 1022  
                    l3761 0CEA                      l3753 0CB4                      l3745 0C6A  
                    l3729 0BF0                      l3681 0998                      l3673 0948  
                    l3665 08E6                      l3657 08CA                      l3649 0890  
                    l4385 2164                      l4377 2106                      l4393 2170  
                    l4369 204A                      l2971 1C54                      l2963 1C1C  
                    l2955 1BF0                      l2947 1BBE                      l2939 1B80  
                    l2891 1AB2                      l2883 1A7A                      l2875 1A48  
                    l2867 1A30                      l2859 1A00                      l3499 3054  
                    l3595 2C16                      l3579 2A82                      l3931 143E  
                    l3923 13F2                      l3915 13C8                      l3907 1384  
                    l3843 116E                      l3835 1148                      l3851 118E  
                    l3827 1112                      l3819 107A                      l3763 0CFC  
                    l3771 0D3C                      l3755 0CC6                      l3747 0CA0  
                    l3691 0A1C                      l3675 095A                      l3659 08D6  
                    l3667 08EC                      l4395 21A2                      l4387 216A  
                    l4379 2118                      l2981 1CD0                      l2973 1C88  
                    l2965 1C1E                      l2957 1BFE                      l2893 1AB6  
                    l2877 1A58                      l2885 1A82                      l2869 1A32  
                    l3597 2C2A                      l3589 2B6A                      l3933 144A  
                    l3925 13F8                      l3917 13D4                      l3909 1396  
                    l3861 1214                      l3853 11A0                      l3845 117E  
                    l3837 1158                      l3829 1120                      l3781 0E24  
                    l3773 0D44                      l3765 0D0A                      l3757 0CD8  
                    l3749 0CA8                      l3693 0A2E                      l3677 0976  
                    l3669 0912                      l3685 09C0                      l4469 153C  
                    l4397 21D4                      l4389 216C                      l2991 1D0C  
                    l2983 1CE0                      l2975 1C8A                      l2967 1C28  
                    l2959 1C0A                      l2895 1ABA                      l2887 1A92  
                    l2879 1A68                      l3951 2E44                      l3599 2C52  
                    l3935 1452                      l3919 13DC                      l3871 128E  
                    l3863 1248                      l3855 11B2                      l3847 1182  
                    l3839 115C                      l3791 0EE2                      l3783 0E58  
                    l3775 0D54                      l3767 0D22                      l3759 0CE6  
                    l3695 0A4A                      l3687 09E6                      l3679 098E  
                    l4399 2206                      l2993 1D0E                      l2977 1C9A  
                    l2969 1C2E                      l2897 1ABE                      l2889 1AA4  
                    l3961 2EA0                      l3953 2E60                      l3945 2E28  
                    l3937 1462                      l3929 142C                      l3881 12D2  
                    l3873 12A0                      l3865 1250                      l3857 11B6  
                    l3849 1188                      l3793 0EF8                      l3777 0D68  
                    l3785 0E5E                      l3769 0D34                      l2995 1D1C  
                    l2987 1CF4                      l2979 1CAA                      l2899 1AC2  
                    l3963 2EB6                      l3955 2E96                      l3947 2E3C  
                    l3939 1468                      l3891 1312                      l3883 12E4  
                    l3875 12AE                      l3859 11BC                      l3867 1254  
                    l3795 0F2A                      l3787 0E7C                      l3779 0DCC  
                    l2997 1D24                      l2989 1CFE                      l3981 2F92  
                    l3973 2F30                      l3965 2EBE                      l3957 2E9A  
                    l3949 2E40                      l3893 131A                      l3885 12EC  
                    l3877 12BE                      l3869 1272                      l3797 0F3A  
                    l3789 0EB0                      l2999 1D28                      l3967 2EC6  
                    l3895 1322                      l3887 12FC                      l3879 12C2  
                    l3799 0F4A                      l3977 2F6E                      l3969 2EFA  
                    l3897 132E                      l3889 1304                      l3993 33F6  
                    l3979 2F80                      l3899 1334                      l3995 3404  
                    l3987 33C0                      l3997 341C                      l3989 33EA  
                    l3999 3438                      STR_1 0801                      STR_2 080F  
                    STR_3 0817                      STR_4 080F                      STR_5 0817  
                    STR_6 080F                      STR_7 0817                      STR_8 081D  
                    STR_9 0825                      u3000 1E10                      u3001 1E0C  
                    u3010 1E30                      u3011 1E2C                      u3020 1E42  
                    u3100 2704                      u3021 1E3E                      u3101 2700  
                    u3030 1E5E                      u3110 2748                      _LATB 000F8A  
                    u3031 1E5A                      u3111 2744                      u3200 28E6  
                    u3120 275A                      u4000 2BA6                      u3040 3CC0  
                    u3201 28E2                      u3121 2756                      u4001 2BA2  
                    u3041 3CBC                      u3210 2904                      u3130 276A  
                    u4010 2BFA                      u3050 3DD2                      u3211 2900  
                    u3131 2766                      u3051 3DCE                      u3300 2A4E  
                    u3220 2924                      u3140 27AA                      u4020 2C16  
                    u3060 3D32                      u4100 085A                      u3301 2A4A  
                    u3221 2920                      u3141 27A6                      u4021 2C12  
                    u3061 3D2C                      u4101 0856                      u3230 2936  
                    u3150 27EA                      u3310 22B8                      u4030 2C52  
                    u3070 3D34                      u4110 08AA                      u3231 2932  
                    u3151 27E6                      u3311 22B4                      u4031 2C4E  
                    u4015 2BF0                      u4111 08A6                      u3240 2964  
                    u3160 2860                      u3080 26E2                      u3400 2556  
                    u3320 22CA                      u5000 2DAE                      u4040 3DA2  
                    u4200 0A18                      u4120 08B8                      u3241 2960  
                    u3161 285C                      u3081 26DE                      u3401 2552  
                    u3321 22C6                      u5001 2DAA                      u4041 3D9C  
                    u4121 08B4                      u3250 297A                      u3170 2882  
                    u3090 26F4                      u3410 2576                      u3330 22DA  
                    u5010 2DBE                      u4050 3DA4                      u2610 34A8  
                    u4210 0A2E                      u4130 08CA                      u3251 2976  
                    u3171 287E                      u3091 26F0                      u3411 2572  
                    u3331 22D6                      u5011 2DBA                      u2611 34A4  
                    u4211 0A2A                      u4131 08C6                      u5100 3BF2  
                    u2700 1A58                      u3260 298E                      u3180 28AC  
                    u3420 2588                      u3340 231A                      u5020 2DCC  
                    u4060 3A90                      u3500 3638                      u2620 34BA  
                    u4300 0C6A                      u4220 0AB2                      u4140 0912  
                    u5101 3BEE                      u2701 1A54                      u3261 298A  
                    u3181 28A8                      u3421 2584                      u3341 2316  
                    u5021 2DC8                      u4061 3A8C                      u3501 3634  
                    u2621 34B6                      u4301 0C66                      u4221 0AAE  
                    u4141 090E                      u2710 1A68                      u3270 29A8  
                    u3190 28D0                      u3430 25B6                      u3350 232C  
                    u5030 2E06                      u4070 3ABE                      u3510 3652  
                    u2630 34E2                      u4310 0CA0                      u4230 0B46  
                    u4150 0942                      u5110 1F24                      u2711 1A64  
                    u3271 29A4                      u3191 28CC                      u3431 25B2  
                    u3351 2328                      u5031 2E02                      u4071 3ABA  
                    u3511 364E                      u2631 34DE                      u4311 0C9C  
                    u4231 0B42                      u4151 093C                      u5111 1F20  
                    u4080 3B90                      u2800 1BAE                      u2720 1AA4  
                    u3280 29F0                      u3440 25CC                      u3360 233C  
                    u5040 2E14                      u3520 3678                      u3600 3764  
                    u2640 3518                      u4400 0F2A                      u4320 0CC6  
                    u4240 0BB8                      u4160 0944                      u5200 2206  
                    u5120 1F56                      u4081 3B8C                      u2801 1BAA  
                    u2721 1AA0                      u3281 29EC                      u3441 25C8  
                    u3361 2338                      u5041 2E10                      u3521 3674  
                    u3601 3760                      u2641 3514                      u4401 0F26  
                    u4321 0CC2                      u4241 0BB4                      u5201 2202  
                    u5121 1F52                      u4090 3BAA                      u2810 1BBE  
                    u2730 1AB2                      u2650 19CC                      u3290 2A20  
                    u3450 25E0                      u3370 2372                      u3530 3696  
                    u3610 3788                      u4410 0F3A                      u4330 0CD8  
                    u4250 0BDE                      u4170 095A                      u5050 3902  
                    u5130 1F88                      u4091 3BA6                      u2811 1BBA  
                    u2731 1AAE                      u2651 19C8                      u3291 2A1C  
                    u3451 25DC                      u3371 236E                      u3531 3692  
                    u3611 3784                      u4411 0F36                      u4331 0CD4  
                    u4251 0BDA                      u4171 0956                      u5051 38FE  
                    u5131 1F84                      u5060 3CD4                      u2900 1D1C  
                    u2820 1BF0                      u2740 1B20                      u2660 19DE  
                    u3460 25FA                      u3380 2382                      u3540 36B2  
                    u3620 37C8                      u3700 3D50                      u4500 1148  
                    u4420 0FD4                      u4340 0CE6                      u4260 0BF0  
                    u4180 09E6                      u5140 204A                      u5061 3CD0  
                    u2901 1D18                      u2821 1BEC                      u2741 1B1C  
                    u2661 19DA                      u3461 25F6                      u3381 237E  
                    u3541 36AE                      u3621 37C4                      u3701 3D4C  
                    u4501 1144                      u4421 0FD0                      u4341 0CE2  
                    u4261 0BEC                      u4181 09E2                      u5141 2046  
                    u2910 1D38                      u2830 1BFE                      u2750 1B38  
                    u2670 19EE                      u3470 2642                      u3390 24FC  
                    u3710 2FD0                      u5070 3308                      u3550 36D8  
                    u3630 3806                      u4510 11A0                      u4430 1022  
                    u4350 0CFC                      u4270 0C12                      u4190 0A16  
                    u5150 207C                      u2911 1D34                      u2831 1BFA  
                    u2751 1B32                      u2671 19EA                      u3471 263E  
                    u3711 2FCC                      u5071 3304                      u3551 36D4  
                    u3631 3802                      u4511 119C                      u4431 101E  
                    u4351 0CF8                      u4271 0C0E                      u4191 0A10  
                    u5151 2078                      u2920 1D48                      u2840 1C1C  
                    u2760 1B3A                      u2680 1A30                      u3480 2670  
                    u3720 3004                      u5080 388E                      u3560 36FC  
                    u3640 383A                      u3800 35E8                      u4600 13C8  
                    u4520 1272                      u4440 104A                      u4360 0D0A  
                    u4280 0C38                      u5160 20AE                      u2921 1D44  
                    u2841 1C18                      u2681 1A2C                      u3481 266C  
                    u5081 388A                      u3561 36F8                      u3641 3836  
                    u3801 35E4                      u4601 13C4                      u4521 126E  
                    u4441 1046                      u4361 0D06                      u4281 0C34  
                    u5161 20AA                      u5090 3BBE                      u2930 1D5A  
                    u2850 1C54                      u2770 1B62                      u2690 1A46  
                    u3490 26AA                      u3730 3032                      u3570 3716  
                    u3650 30EE                      u3810 35F8                      u4610 1426  
                    u4530 128E                      u4450 10EE                      u4370 0D34  
                    u4290 0C4E                      u5170 20E0                      u5091 3BBA  
                    u2931 1D56                      u2851 1C50                      u2771 1B5E  
                    u2691 1A42                      u3491 26A6                      u3395 24F2  
                    u3731 302E                      u3571 3712                      u3651 30EA  
                    u3811 35F4                      u4611 1420                      u4531 128A  
                    u4451 10EA                      u4371 0D30                      u4291 0C4A  
                    u5171 20DC                      u2940 1D70                      u2860 1C9A  
                    u2780 1B80                      u3740 3046                      u4700 2F92  
                    u3580 3730                      u3660 312C                      u3820 3204  
                    u3900 3A24                      u4620 1428                      u4540 12A0  
                    u4460 1100                      u4380 0E7C                      u5180 21A2  
                    u2941 1D6C                      u2861 1C96                      u2781 1B7C  
                    u3741 3042                      u3725 2FFA                      u4701 2F8E  
                    u3581 372C                      u3661 3128                      u3901 3A20  
                    u4541 129C                      u4461 10FC                      u4381 0E78  
                    u5181 219E                      u2950 1D86                      u2870 1CD0  
                    u2790 1BA0                      u3750 306E                      u3590 374E  
                    u3670 314A                      u3830 3222                      u3910 393C  
                    u4630 143E                      u4550 12AE                      u4470 1112  
                    u4390 0EE2                      u4710 33EA                      u5190 21D4  
                    u2951 1D82                      u2871 1CCC                      u2791 1B9C  
                    u3751 306A                      u3591 374A                      u3671 3146  
                    u3831 321E                      u3911 3936                      u4631 143A  
                    u4551 12AA                      u4471 110E                      u4391 0EDE  
                    u4711 33E6                      u5191 21D0                      u2960 1D9A  
                    u2880 1CE0                      u3760 308E                      u4640 2E60  
                    u3680 316A                      u3840 324A                      u3920 393E  
                    u4560 12E4                      u4480 1120                      u4720 341C  
                    u4800 15EA                      u2961 1D96                      u2881 1CDC  
                    u3761 308A                      u4641 2E5C                      u3681 3166  
                    u3841 3246                      u3825 31FA                      u4561 12E0  
                    u4481 111C                      u4721 3418                      u4801 15E6  
                    u2970 1DB4                      u2890 1D0C                      u3770 309E  
                    u4650 2E96                      u3690 31BA                      u3850 3274  
                    u3930 3954                      u4570 1312                      u4490 113A  
                    u4730 3438                      u4810 1694                      u2971 1DB0  
                    u2891 1D08                      u3771 309A                      u4651 2E92  
                    u3691 31B6                      u3851 3270                      u3931 3950  
                    u4571 130E                      u4491 1136                      u4731 3434  
                    u4811 168E                      u2980 1DEE                      u4660 2EB2  
                    u3940 2AAA                      u3780 3570                      u4580 1396  
                    u4740 344A                      u4900 1892                      u4820 1696  
                    u2981 1DEA                      u4661 2EAE                      u3781 356C  
                    u4581 1392                      u4741 3446                      u4901 188E  
                    u2990 1E00                      u4670 2F68                      u3870 32AE  
                    u3950 2AD8                      u3790 3592                      u4590 13B0  
                    u4750 3472                      u4910 192E                      u4830 16AC  
                    u2991 1DFC                      u4671 2F62                      u3871 32A8  
                    u3951 2AD4                      u3791 358E                      u4591 13AC  
                    u4751 346E                      u4911 192A                      u4831 16A8  
                    u4920 3990                      u4680 2F6A                      u3880 32B0  
                    u3960 2AFA                      u4840 16DE                      u4760 14AE  
                    u3865 3286                      u3961 2AF6                      u3945 2AA0  
                    u4841 16DA                      u4761 14AA                      u4930 39B8  
                    u4690 2F80                      u3890 3A12                      u4850 1720  
                    u4770 157C                      u4691 2F7C                      u4851 171C  
                    u4771 1578                      u4940 39C8                      u3980 2B66  
                    u4860 1764                      u4780 158A                      u4941 39C4  
                    u3981 2B62                      u4861 1760                      u4781 1586  
                    u4950 2C86                      u3990 2B8A                      u4870 1812  
                    u4790 15B0                      u4927 3986                      u4951 2C82  
                    u3975 2B0E                      u4871 180E                      u4791 15AC  
                    u4960 2C94                      u3976 2B18                      u4880 187A  
                    u4937 39AE                      u4961 2C90                      u3977 2B28  
                    u3897 3A08                      u4881 1874                      u4970 2CF0  
                    u4890 187C                      u4971 2CEC                      u3995 2B80  
                    u4980 2D46                      u4981 2D42                      u4990 2D90  
                    u4991 2D8C                      _Sluz 0150                      _lm35 00FC  
                    _dbuf 0100                      _atoi 2E28                      _main 1E72  
      __size_of_LCD_Clear 0014                      _prec 00F6                      _temp 00E6  
                    _nout 00F2                      pad@i 0018                      pad@p 0015  
                    fsr1h 000FE2                      fsr2h 000FDA                      indf1 000FE7  
                    indf2 000FDF                      fsr1l 000FE1                      pad@w 001A  
                    fsr2l 000FD9             ___fpclassifyf 31C4                      prodh 000FF4  
                    prodl 000FF3                      start 0000           __end_of_MSdelay 3BAC  
         ___fldiv@new_exp 003F             _LCD_String_xy 3CC2              _tolower$1146 000D  
            ___param_bank 000000           __end_of_ReadADC 33C0           __end_of_ReadLUZ 38AA  
                   ??_pad 0017          __end_of_LCD_Char 3B16          __end_of_LCD_Init 3E10  
           ReadADC@result 0066             ___fltol@sign1 0060                     ?_atoi 0008  
         __end_of___fladd 1E72                     ?_main 0001           __end_of___fldiv 2A62  
         __end_of___awdiv 36EA           __end_of___flneg 3D72                     STR_12 0821  
                   STR_13 0829                     STR_16 082D                     STR_18 082D  
         __end_of___awmod 379A           __end_of___flmul 26C8           __end_of___flsub 3C3A  
         __end_of___fltol 30C0           ___awdiv@divisor 0003                     _LATB2 007C52  
                   _LATB3 007C53                     _LATE0 007C68                     _LATE1 007C69  
                   _LATE2 007C6A           ___awdiv@counter 0005              vfpfcnvrt@fmt 00A8  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISD 000F95  
                   _TRISE 000F96                     _Stemp 0164                     _flags 00F8  
                   _fputc 3496                     _fputs 3C7E           __end_of_isdigit 3DAA  
                   atoi@n 0015                     pad@fp 0011                     atoi@s 0008  
                   _width 00F4                     _putch 3E62           __end_of_isspace 3ACA  
         __end_of_isupper 3D3A                     tablat 000FF5                     status 000FD8  
     __size_of_LCD_String 005E           __end_of_sprintf 3A78            ?___fpclassifyf 0001  
         __end_of_tolower 396C           __end_of_strncmp 3496            ?_LCD_String_xy 000B  
 __end_of_LCD_Custom_Char 3BF4           __initialization 3C3A              __end_of_atoi 2FB8  
            __end_of_main 229E                    ??_atoi 000A                    ??_main 005F  
       __end_of_LCD_Clear 3E62             __activetblptr 000002                    ?_fputc 0001  
                  ?_fputs 000A                    _ADRESH 000FC4                    _ADRESL 000FC3  
        ___awdiv@dividend 0001                    ?_putch 0001          LCD_String_xy@msg 000C  
        LCD_String_xy@pos 000B          LCD_String_xy@row 000E                 ??_MSdelay 0003  
                  _OSCCON 000FD3             vfpfcnvrt@done 00B0          __end_of___xxtofl 2E28  
               ??_ReadADC 0064                 ??_ReadLUZ 0003              vfprintf@cfmt 00C4  
                  ___flge 30C0                    ___fleq 379A                 ??___fladd 004F  
                  ___wmul 3E10                 ??___fldiv 0036                 ??___awdiv 0005  
               ??___flneg 0005                 ??___awmod 0005                 ??___flmul 001D  
               ??___flsub 005F                 ??___fltol 005B                    _efgtoa 0832  
                  _floorf 2A62                    clear_0 3C60                    clear_1 3C6C  
        ___awdiv@quotient 0007           ___awmod@divisor 0003                    isa$std 000001  
                  _tempar 00EE           ___awmod@counter 0005                    pad@buf 0013  
    __size_of_LCD_Command 004C                    _strcpy 39CA                    _strlen 3DAA  
                  fputc@c 0001                    fputs@c 000E          LCD_Custom_Char@i 000C  
                  fputs@i 000F                    fputs@s 000A                 ??_isdigit 0003  
         ___fpclassifyf@e 0009           ___fpclassifyf@u 000B           ___fpclassifyf@x 0001  
            __mediumconst 0000                 ??_isspace 0003                    tblptrh 000FF7  
               ??_isupper 0003                    tblptrl 000FF6                    tblptru 000FF8  
                  putch@c 0001          __end_of_vfprintf 390C                 ??_sprintf 005F  
               ??_tolower 0009                 ??_strncmp 0007                ___flge@ff1 002E  
              ___flge@ff2 0032           ??___fpclassifyf 0005              ___xxtofl@arg 0011  
            ___xxtofl@exp 0010              ___xxtofl@val 0007                ___fleq@ff1 0001  
              ___fleq@ff2 0005                 ?_LCD_Char 0001                __accesstop 0060  
 __end_of__initialization 3C74                 ?_LCD_Init 0001           ??_LCD_String_xy 000E  
              ___flneg@f1 0001             ___rparam_used 000001                ___fltol@f1 0057  
        ?_LCD_Custom_Char 0009            __pcstackCOMRAM 0001              __pidataBANK1 3E36  
           __end_of_fputc 3560             __end_of_fputs 3CC2             __end_of_putch 3E64  
            ??_LCD_String 000B             ReadLUZ@result 0005                   ??_fputc 0005  
                 ??_fputs 000E                   ??_putch 0001                __pbssBANK0 00DA  
              __pbssBANK1 0100                ??_LCD_Char 0007                _character1 0188  
              _character2 0180                _character3 0178                ??_LCD_Init 0009  
      __end_of_LCD_String 39CA                _efgtoa$993 0072                _efgtoa$987 006E  
              _efgtoa$988 0070                _efgtoa$997 0074                _efgtoa$998 0076  
              _efgtoa$999 0078            _counter_digito 005F                   ?___flge 002E  
                 ?___fleq 0001                   ?___wmul 0001                   ?_efgtoa 0062  
                 ?_floorf 0047                   ?_strcpy 0001                   ?_strlen 0001  
               ?___xxtofl 0007        __size_of_vfpfcnvrt 0528                   _MSdelay 3B62  
                 _ReadADC 32C2                   _ReadLUZ 3844             LCD_String@msg 0009  
                 __Hparam 0000                   __Lparam 0000           __size_of___flge 0104  
         __size_of___fleq 00AA                   ___fladd 19B2                   ___fldiv 26C8  
                 ___awdiv 3626                   ___flneg 3D3A                   ___awmod 36EA  
                 ___flmul 229E                   ___flsub 3BF4                   ___fltol 2FB8  
         __size_of___wmul 0026                 ?_vfprintf 00BE              __psmallconst 0800  
         __size_of_efgtoa 0C58           __size_of_floorf 0212                   __pcinit 3C3A  
                 __ramtop 0800                   __ptext0 1E72                   __ptext1 3A26  
                 __ptext2 38AA                   __ptext3 148A                   __ptext4 33C0  
                 __ptext5 0832                   __ptext6 390C                   __ptext7 3D02  
                 __ptext8 39CA                   __ptext9 3560           __size_of_strcpy 005C  
         __size_of_strlen 0036              __size_of_pad 00C6                   _isdigit 3D72  
              ??___xxtofl 000B          ___awmod@dividend 0001                   _isspace 3A78  
                 _isupper 3D02                   efgtoa@c 0068                   efgtoa@d 0086  
                 efgtoa@e 009E                   efgtoa@f 0064                   efgtoa@g 009A  
                 efgtoa@h 0090                   efgtoa@i 0098                   efgtoa@l 0094  
                 efgtoa@m 0080                   efgtoa@n 00A0                   efgtoa@p 008A  
                 efgtoa@t 007A                   efgtoa@u 00A2                   efgtoa@w 008C  
               _LCD_Clear 3E4E                   atoi@neg 000E                   _sprintf 3A26  
                 _tolower 390C                   _strncmp 33C0      end_of_initialization 3C74  
                 floorf@e 0055                   floorf@m 0051                   floorf@u 0057  
                 floorf@x 0047                   fputc@fp 0003            LCD_Command@cmd 0008  
           __Lmediumconst 0000                   fputs@fp 000C         __end_of_vfpfcnvrt 19B2  
              efgtoa@mode 008F                efgtoa@sign 0088                   postdec1 000FE5  
                 postdec2 000FDD                   postinc0 000FEE                   postinc1 000FE6  
                 postinc2 000FDE                ??_vfprintf 005F                   strcpy@d 0009  
                 strlen@a 0003                   strcpy@s 0007                   strlen@s 0001  
             ___fladd@grs 0056             ___xxtofl@sign 000F                ?_LCD_Clear 0001  
             ___fldiv@grs 0041               ___fldiv@rem 003A               ___flmul@grs 0022  
       __size_of_LCD_Char 004C         __size_of_LCD_Init 0030             ??_LCD_Command 0007  
          __end_of___flge 31C4            __end_of___fleq 3844               vfpfcnvrt@ap 00AA  
             vfpfcnvrt@ct 00BA               vfpfcnvrt@fp 00A6            __end_of___wmul 3E36  
          __end_of_efgtoa 148A            __end_of_floorf 2C74                floorf@F527 00DA  
          __end_of_strcpy 3A26            __end_of_strlen 3DE0       start_initialization 3C3A  
             __end_of_pad 3626     __end_of___fpclassifyf 32C2     __end_of_LCD_String_xy 3D02  
             vfprintf@fmt 00C0                  ??___flge 0036                  ??___fleq 0009  
                ??___wmul 0005                  ??_efgtoa 0069               __pdataBANK1 0178  
                ??_floorf 004B                  ??_strcpy 0005                  ??_strlen 0003  
__size_of_LCD_Custom_Char 0048                 ___fladd@a 004B                 ___fladd@b 0047  
               ___fldiv@a 0032                 ___fldiv@b 002E       __end_of_LCD_Command 3B62  
               ___flmul@a 0019                 ___flmul@b 0015               __pbssCOMRAM 005F  
               ___flsub@a 005B                 ___flsub@b 0057             __pcstackBANK0 0060  
             ??_LCD_Clear 0009         __size_of___xxtofl 01B4                  ?_MSdelay 0001  
                ?_ReadADC 0062                 _atoi$1051 0010                 _atoi$1052 0014  
               _atoi$1053 0012                  ?_ReadLUZ 0001                 _main$1339 00D6  
                ?___fladd 0047                  ?___fldiv 002E                  ?___awdiv 0001  
                ?___flneg 0001                  ?___awmod 0001                  ?___flmul 0015  
                ?___flsub 0057                  ?___fltol 0057         __size_of_vfprintf 0062  
             __smallconst 0800                  ?_isdigit 0001                  ?_isspace 0001  
                ?_isupper 0001     LCD_String_xy@location 000F                  ?_sprintf 00C6  
                ?_tolower 0007            __size_of_fputc 00CA            __size_of_fputs 0044  
                ?_strncmp 0001            __size_of_putch 0002                  MSdelay@i 0003  
                MSdelay@j 0005                  _LCD_Char 3ACA                  _LCD_Init 3DE0  
          ___wmul@product 0005                 _value_adc 00FA               _LCD_Command 3B16  
               _vfpfcnvrt 148A                _ADCON0bits 000FC2                _ADCON1bits 000FC1  
              _ADCON2bits 000FC0         ___wmul@multiplier 0001              _isspace$1082 0007  
       ??_LCD_Custom_Char 000B                vfpfcnvrt@c 00BD                vfpfcnvrt@f 00B6  
               copy_data0 3C4E          __size_of_MSdelay 004A          __size_of_ReadADC 00FE  
        __size_of_ReadLUZ 0066                  __Hrparam 0000                vfprintf@ap 00C2  
                __Lrparam 0000                vfprintf@fp 00BE          __size_of___fladd 04C0  
        __size_of___fldiv 039A          __size_of___awdiv 00C4          __size_of___flneg 0038  
        __size_of___awmod 00B0          __size_of___flmul 042A          __size_of___flsub 0046  
        __size_of___fltol 0108                ?_vfpfcnvrt 00A6        ___fpclassifyf@F465 00DE  
              sprintf@fmt 00C8                  ___xxtofl 2C74          __size_of_isdigit 0038  
        __size_of_isspace 0052                  __ptext10 3DAA                  __ptext11 3C7E  
                __ptext20 36EA                  __ptext12 3496                  __ptext21 3626  
                __ptext13 3E62                  __ptext30 229E                  __ptext22 2E28  
                __ptext14 2A62                  __ptext31 26C8                  __ptext23 3A78  
                __ptext15 31C4                  __ptext40 3B62                  __ptext32 19B2  
                __ptext24 3D72                  __ptext16 3BF4                  __ptext33 3CC2  
                __ptext25 3E10                  __ptext17 3D3A                  __ptext34 396C  
                __ptext26 3844                  __ptext18 30C0                  __ptext35 3DE0  
                __ptext27 32C2                  __ptext19 379A                  __ptext36 3BAC  
                __ptext28 2C74                  __ptext37 3ACA                  __ptext29 2FB8  
                __ptext38 3E4E                  __ptext39 3B16          __size_of_isupper 0038  
        __size_of_sprintf 0052          __size_of_tolower 0060                strcpy@dest 0001  
        __size_of_strncmp 00D6             __size_of_atoi 0190             __size_of_main 042C  
              MSdelay@val 0001                  efgtoa@fp 0062                  efgtoa@ne 007E  
                efgtoa@pp 007C                  efgtoa@ou 0082                  isa$xinst 000000  
                _vfprintf 38AA                _LCD_String 396C            _vfpfcnvrt$1013 00B2  
          _vfpfcnvrt$1017 00B4                  isdigit@c 0001        LCD_Custom_Char@loc 000B  
      LCD_Custom_Char@msg 0009                 sprintf@ap 00CE                  isspace@c 0001  
               strcpy@src 0003                  isupper@c 0001                 strncmp@_l 0001  
               strncmp@_r 0003                _OSCCONbits 000FD3               efgtoa@nmode 008E  
             ??_vfpfcnvrt 00AC               _temperatura 00E2                  sprintf@f 00D0  
                tolower@c 0007                  sprintf@s 00C6    __size_of___fpclassifyf 00FE  
                strncmp@l 0008                  strncmp@n 0005                  strncmp@r 000A  
  __size_of_LCD_String_xy 0040             ___fladd@signs 0053              ___fladd@aexp 0054  
            ___fladd@bexp 0055  
