

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Oct 05 12:31:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84  0000                     
    85                           ; Version 2.20
    86                           ; Generated 12/02/2020 GMT
    87                           ; 
    88                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F4550 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120                           	psect	idataBANK1
   121  004830                     __pidataBANK1:
   122                           	callstack 0
   123                           
   124                           ;initializer for _FreqNota
   125  004830  3BB9               	dw	15289
   126  004832  385E               	dw	14430
   127  004834  3534               	dw	13620
   128  004836  3238               	dw	12856
   129  004838  2F66               	dw	12134
   130  00483A  2CBD               	dw	11453
   131  00483C  2A3A               	dw	10810
   132  00483E  27DC               	dw	10204
   133  004840  259F               	dw	9631
   134  004842  2382               	dw	9090
   135  004844  2184               	dw	8580
   136  004846  1FA3               	dw	8099
   137                           
   138                           ;initializer for RTC_Calendario@F3578
   139  004848  53                 	db	83
   140  004849  4D                 	db	77
   141  00484A  54                 	db	84
   142  00484B  57                 	db	87
   143  00484C  74                 	db	116
   144  00484D  46                 	db	70
   145  00484E  73                 	db	115
   146                           
   147                           ;initializer for _character3
   148  00484F  00                 	db	0
   149  004850  08                 	db	8
   150  004851  16                 	db	22
   151  004852  1F                 	db	31
   152  004853  1F                 	db	31
   153  004854  16                 	db	22
   154  004855  08                 	db	8
   155  004856  00                 	db	0
   156                           
   157                           ;initializer for _character2
   158  004857  15                 	db	21
   159  004858  0E                 	db	14
   160  004859  11                 	db	17
   161  00485A  11                 	db	17
   162  00485B  0E                 	db	14
   163  00485C  15                 	db	21
   164  00485D  00                 	db	0
   165  00485E  00                 	db	0
   166                           
   167                           ;initializer for _character1
   168  00485F  0E                 	db	14
   169  004860  1F                 	db	31
   170  004861  1F                 	db	31
   171  004862  0E                 	db	14
   172  004863  00                 	db	0
   173  004864  0A                 	db	10
   174  004865  0A                 	db	10
   175  004866  00                 	db	0
   176  0000                     _SSPCON2bits	set	4037
   177  0000                     _SSPADD	set	4040
   178  0000                     _SSPCON2	set	4037
   179  0000                     _SSPCON1	set	4038
   180  0000                     _SSPSTAT	set	4039
   181  0000                     _SSPBUF	set	4041
   182  0000                     _SSPSTATbits	set	4039
   183  0000                     _LATCbits	set	3979
   184  0000                     _TRISCbits	set	3988
   185  0000                     _ADRESL	set	4035
   186  0000                     _ADRESH	set	4036
   187  0000                     _ADCON2bits	set	4032
   188  0000                     _ADCON0bits	set	4034
   189  0000                     _ADCON1bits	set	4033
   190  0000                     _OSCCONbits	set	4051
   191  0000                     _TRISA	set	3986
   192  0000                     _LATD	set	3980
   193  0000                     _TRISD	set	3989
   194  0000                     _TRISE	set	3990
   195  0000                     _OSCCON	set	4051
   196  0000                     _LATE2	set	31850
   197  0000                     _LATE1	set	31849
   198  0000                     _LATE0	set	31848
   199  0000                     _ACKEN	set	32300
   200  0000                     _ACKDT	set	32301
   201  0000                     _PEN	set	32298
   202  0000                     _RSEN	set	32297
   203  0000                     _ACKSTAT	set	32302
   204  0000                     _SSPIF	set	31987
   205  0000                     _SSPIE	set	31979
   206  0000                     _TRISB1	set	31897
   207  0000                     _TRISB0	set	31896
   208  0000                     _RCEN	set	32299
   209  0000                     _LATD1	set	31841
   210  0000                     _LATD0	set	31840
   211                           
   212                           	psect	smallconst
   213  000800                     __psmallconst:
   214                           	callstack 0
   215  000800  00                 	db	0
   216  000801                     STR_19:
   217  000801  25                 	db	37
   218  000802  30                 	db	48	;'0'
   219  000803  2E                 	db	46
   220  000804  30                 	db	48	;'0'
   221  000805  66                 	db	102	;'f'
   222  000806  43                 	db	67	;'C'
   223  000807  00                 	db	0
   224  000808                     STR_22:
   225  000808  49                 	db	73	;'I'
   226  000809  4E                 	db	78	;'N'
   227  00080A  46                 	db	70	;'F'
   228  00080B  00                 	db	0
   229  00080C                     STR_26:
   230  00080C  4E                 	db	78	;'N'
   231  00080D  41                 	db	65	;'A'
   232  00080E  4E                 	db	78	;'N'
   233  00080F  00                 	db	0
   234  000810                     STR_23:
   235  000810  69                 	db	105	;'i'
   236  000811  6E                 	db	110	;'n'
   237  000812  66                 	db	102	;'f'
   238  000813  00                 	db	0
   239  000814                     STR_27:
   240  000814  6E                 	db	110	;'n'
   241  000815  61                 	db	97	;'a'
   242  000816  6E                 	db	110	;'n'
   243  000817  00                 	db	0
   244  000818                     STR_3:
   245  000818  25                 	db	37
   246  000819  78                 	db	120	;'x'
   247  00081A  20                 	db	32
   248  00081B  00                 	db	0
   249  00081C                     STR_9:
   250  00081C  25                 	db	37
   251  00081D  78                 	db	120	;'x'
   252  00081E  2D                 	db	45
   253  00081F  00                 	db	0
   254  000820                     STR_4:
   255  000820  25                 	db	37
   256  000821  78                 	db	120	;'x'
   257  000822  3A                 	db	58	;':'
   258  000823  00                 	db	0
   259  000824                     STR_15:
   260  000824  57                 	db	87	;'W'
   261  000825  65                 	db	101	;'e'
   262  000826  64                 	db	100	;'d'
   263  000827  00                 	db	0
   264  000828                     STR_14:
   265  000828  54                 	db	84	;'T'
   266  000829  75                 	db	117	;'u'
   267  00082A  65                 	db	101	;'e'
   268  00082B  00                 	db	0
   269  00082C                     STR_17:
   270  00082C  46                 	db	70	;'F'
   271  00082D  72                 	db	114	;'r'
   272  00082E  69                 	db	105	;'i'
   273  00082F  00                 	db	0
   274  000830                     STR_13:
   275  000830  4D                 	db	77	;'M'
   276  000831  6F                 	db	111	;'o'
   277  000832  6E                 	db	110	;'n'
   278  000833  00                 	db	0
   279  000834                     STR_12:
   280  000834  53                 	db	83	;'S'
   281  000835  75                 	db	117	;'u'
   282  000836  6E                 	db	110	;'n'
   283  000837  00                 	db	0
   284  000838                     STR_18:
   285  000838  53                 	db	83	;'S'
   286  000839  61                 	db	97	;'a'
   287  00083A  74                 	db	116	;'t'
   288  00083B  00                 	db	0
   289  00083C                     STR_16:
   290  00083C  54                 	db	84	;'T'
   291  00083D  68                 	db	104	;'h'
   292  00083E  75                 	db	117	;'u'
   293  00083F  00                 	db	0
   294  000840                     STR_30:
   295  000840  6C                 	db	108	;'l'
   296  000841  66                 	db	102	;'f'
   297  000842  00                 	db	0
   298  000843                     STR_2:
   299  000843  41                 	db	65	;'A'
   300  000844  4D                 	db	77	;'M'
   301  000845  00                 	db	0
   302  000846                     STR_1:
   303  000846  50                 	db	80	;'P'
   304  000847  4D                 	db	77	;'M'
   305  000848  00                 	db	0
   306  000849  00                 	db	0	; dummy byte at the end
   307  0000                     
   308                           ; #config settings
   309                           
   310                           	psect	cinit
   311  004450                     __pcinit:
   312                           	callstack 0
   313  004450                     start_initialization:
   314                           	callstack 0
   315  004450                     __initialization:
   316                           	callstack 0
   317                           
   318                           ; Initialize objects allocated to BANK1 (55 bytes)
   319                           ; load TBLPTR registers with __pidataBANK1
   320  004450  0E30               	movlw	low __pidataBANK1
   321  004452  6EF6               	movwf	tblptrl,c
   322  004454  0E48               	movlw	high __pidataBANK1
   323  004456  6EF7               	movwf	tblptrh,c
   324  004458  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   325  00445A  6EF8               	movwf	tblptru,c
   326  00445C  EE01  F0B6         	lfsr	0,__pdataBANK1
   327  004460  EE10 F037          	lfsr	1,55
   328  004464                     copy_data0:
   329  004464  0009               	tblrd		*+
   330  004466  CFF5 FFEE          	movff	tablat,postinc0
   331  00446A  50E5               	movf	postdec1,w,c
   332  00446C  50E1               	movf	fsr1l,w,c
   333  00446E  E1FA               	bnz	copy_data0
   334                           
   335                           ; Clear objects allocated to BANK2 (20 bytes)
   336  004470  EE02  F000         	lfsr	0,__pbssBANK2
   337  004474  0E14               	movlw	20
   338  004476                     clear_0:
   339  004476  6AEE               	clrf	postinc0,c
   340  004478  06E8               	decf	wreg,f,c
   341  00447A  E1FD               	bnz	clear_0
   342                           
   343                           ; Clear objects allocated to BANK1 (114 bytes)
   344  00447C  EE01  F000         	lfsr	0,__pbssBANK1
   345  004480  0E72               	movlw	114
   346  004482                     clear_1:
   347  004482  6AEE               	clrf	postinc0,c
   348  004484  06E8               	decf	wreg,f,c
   349  004486  E1FD               	bnz	clear_1
   350                           
   351                           ; Clear objects allocated to BANK0 (26 bytes)
   352  004488  EE00  F0E2         	lfsr	0,__pbssBANK0
   353  00448C  0E1A               	movlw	26
   354  00448E                     clear_2:
   355  00448E  6AEE               	clrf	postinc0,c
   356  004490  06E8               	decf	wreg,f,c
   357  004492  E1FD               	bnz	clear_2
   358                           
   359                           ; Clear objects allocated to COMRAM (1 bytes)
   360  004494  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   361  004496                     end_of_initialization:
   362                           	callstack 0
   363  004496                     __end_of__initialization:
   364                           	callstack 0
   365  004496  0E00               	movlw	low (__Lmediumconst shr (0+16))
   366  004498  6EF8               	movwf	tblptru,c
   367  00449A  0100               	movlb	0
   368  00449C  EFBA  F01F         	goto	_main	;jump to C main() function
   369                           
   370                           	psect	bssCOMRAM
   371  00005F                     __pbssCOMRAM:
   372                           	callstack 0
   373  00005F                     _i:
   374                           	callstack 0
   375  00005F                     	ds	1
   376                           
   377                           	psect	bssBANK0
   378  0000E2                     __pbssBANK0:
   379                           	callstack 0
   380  0000E2                     floorf@F527:
   381                           	callstack 0
   382  0000E2                     	ds	4
   383  0000E6                     ___fpclassifyf@F465:
   384                           	callstack 0
   385  0000E6                     	ds	4
   386  0000EA                     _luz:
   387                           	callstack 0
   388  0000EA                     	ds	4
   389  0000EE                     _tempar:
   390                           	callstack 0
   391  0000EE                     	ds	4
   392  0000F2                     _nout:
   393                           	callstack 0
   394  0000F2                     	ds	2
   395  0000F4                     _width:
   396                           	callstack 0
   397  0000F4                     	ds	2
   398  0000F6                     _prec:
   399                           	callstack 0
   400  0000F6                     	ds	2
   401  0000F8                     _flags:
   402                           	callstack 0
   403  0000F8                     	ds	2
   404  0000FA                     _result:
   405                           	callstack 0
   406  0000FA                     	ds	2
   407                           
   408                           	psect	bssBANK1
   409  000100                     __pbssBANK1:
   410                           	callstack 0
   411  000100                     _Year:
   412                           	callstack 0
   413  000100                     	ds	2
   414  000102                     _Month:
   415                           	callstack 0
   416  000102                     	ds	2
   417  000104                     _Date:
   418                           	callstack 0
   419  000104                     	ds	2
   420  000106                     _Day:
   421                           	callstack 0
   422  000106                     	ds	2
   423  000108                     _hour:
   424                           	callstack 0
   425  000108                     	ds	2
   426  00010A                     _min:
   427                           	callstack 0
   428  00010A                     	ds	2
   429  00010C                     _sec:
   430                           	callstack 0
   431  00010C                     	ds	2
   432  00010E                     _dbuf:
   433                           	callstack 0
   434  00010E                     	ds	80
   435  00015E                     _Stemp:
   436                           	callstack 0
   437  00015E                     	ds	20
   438                           
   439                           	psect	dataBANK1
   440  0001B6                     __pdataBANK1:
   441                           	callstack 0
   442  0001B6                     _FreqNota:
   443                           	callstack 0
   444  0001B6                     	ds	24
   445  0001CE                     RTC_Calendario@F3578:
   446                           	callstack 0
   447  0001CE                     	ds	7
   448  0001D5                     _character3:
   449                           	callstack 0
   450  0001D5                     	ds	8
   451  0001DD                     _character2:
   452                           	callstack 0
   453  0001DD                     	ds	8
   454  0001E5                     _character1:
   455                           	callstack 0
   456  0001E5                     	ds	8
   457                           
   458                           	psect	bssBANK2
   459  000200                     __pbssBANK2:
   460                           	callstack 0
   461  000200                     _Sluz:
   462                           	callstack 0
   463  000200                     	ds	20
   464                           
   465                           	psect	cstackBANK1
   466  000172                     __pcstackBANK1:
   467                           	callstack 0
   468  000172                     RTC_Calendario@days:
   469                           	callstack 0
   470                           
   471                           ; 7 bytes @ 0x0
   472  000172                     	ds	7
   473  000179                     RTC_Calendario@date:
   474                           	callstack 0
   475                           
   476                           ; 10 bytes @ 0x7
   477  000179                     	ds	10
   478  000183                     RTC_Calendario@month:
   479                           	callstack 0
   480                           
   481                           ; 10 bytes @ 0x11
   482  000183                     	ds	10
   483  00018D                     RTC_Calendario@year:
   484                           	callstack 0
   485                           
   486                           ; 10 bytes @ 0x1B
   487  00018D                     	ds	10
   488  000197                     RTC_Calendario@secs:
   489                           	callstack 0
   490                           
   491                           ; 10 bytes @ 0x25
   492  000197                     	ds	10
   493  0001A1                     RTC_Calendario@mins:
   494                           	callstack 0
   495                           
   496                           ; 10 bytes @ 0x2F
   497  0001A1                     	ds	10
   498  0001AB                     RTC_Calendario@hours:
   499                           	callstack 0
   500                           
   501                           ; 10 bytes @ 0x39
   502  0001AB                     	ds	10
   503  0001B5                     RTC_Calendario@AM_PM:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x43
   507  0001B5                     	ds	1
   508                           
   509                           	psect	cstackBANK0
   510  000060                     __pcstackBANK0:
   511                           	callstack 0
   512  000060                     ?_ReadADC:
   513                           	callstack 0
   514  000060                     ?_efgtoa:
   515                           	callstack 0
   516  000060                     efgtoa@fp:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x0
   520  000060                     	ds	2
   521  000062                     ??_ReadADC:
   522  000062                     efgtoa@f:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x2
   526  000062                     	ds	2
   527  000064                     ReadADC@result:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x4
   531  000064                     	ds	2
   532  000066                     ?_Estados:
   533                           	callstack 0
   534  000066                     efgtoa@c:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x6
   538  000066                     	ds	1
   539  000067                     ??_efgtoa:
   540                           
   541                           ; 1 bytes @ 0x7
   542  000067                     	ds	1
   543  000068                     _Estados$1881:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x8
   547  000068                     	ds	4
   548  00006C                     _efgtoa$1450:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0xC
   552  00006C                     	ds	2
   553  00006E                     _efgtoa$1451:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0xE
   557  00006E                     	ds	2
   558  000070                     _efgtoa$1456:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x10
   562  000070                     	ds	2
   563  000072                     _efgtoa$1460:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x12
   567  000072                     	ds	2
   568  000074                     _efgtoa$1461:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x14
   572  000074                     	ds	2
   573  000076                     _efgtoa$1462:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x16
   577  000076                     	ds	2
   578  000078                     efgtoa@t:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x18
   582  000078                     	ds	2
   583  00007A                     efgtoa@pp:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x1A
   587  00007A                     	ds	2
   588  00007C                     efgtoa@ne:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x1C
   592  00007C                     	ds	2
   593  00007E                     efgtoa@m:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x1E
   597  00007E                     	ds	2
   598  000080                     efgtoa@ou:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x20
   602  000080                     	ds	4
   603  000084                     efgtoa@d:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x24
   607  000084                     	ds	2
   608  000086                     efgtoa@sign:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x26
   612  000086                     	ds	2
   613  000088                     efgtoa@p:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x28
   617  000088                     	ds	2
   618  00008A                     efgtoa@w:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x2A
   622  00008A                     	ds	2
   623  00008C                     efgtoa@nmode:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x2C
   627  00008C                     	ds	1
   628  00008D                     efgtoa@mode:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x2D
   632  00008D                     	ds	1
   633  00008E                     efgtoa@h:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x2E
   637  00008E                     	ds	4
   638  000092                     efgtoa@l:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x32
   642  000092                     	ds	4
   643  000096                     efgtoa@i:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x36
   647  000096                     	ds	2
   648  000098                     efgtoa@g:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x38
   652  000098                     	ds	4
   653  00009C                     efgtoa@e:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x3C
   657  00009C                     	ds	2
   658  00009E                     efgtoa@n:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x3E
   662  00009E                     	ds	2
   663  0000A0                     efgtoa@u:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x40
   667  0000A0                     	ds	4
   668  0000A4                     ?_vfpfcnvrt:
   669                           	callstack 0
   670  0000A4                     vfpfcnvrt@fp:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x44
   674  0000A4                     	ds	2
   675  0000A6                     vfpfcnvrt@fmt:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x46
   679  0000A6                     	ds	2
   680  0000A8                     vfpfcnvrt@ap:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x48
   684  0000A8                     	ds	2
   685  0000AA                     ??_vfpfcnvrt:
   686                           
   687                           ; 1 bytes @ 0x4A
   688  0000AA                     	ds	4
   689  0000AE                     vfpfcnvrt@llu:
   690                           	callstack 0
   691                           
   692                           ; 8 bytes @ 0x4E
   693  0000AE                     	ds	8
   694  0000B6                     vfpfcnvrt@done:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x56
   698  0000B6                     	ds	2
   699  0000B8                     _vfpfcnvrt$1487:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x58
   703  0000B8                     	ds	2
   704  0000BA                     _vfpfcnvrt$1491:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x5A
   708  0000BA                     	ds	2
   709  0000BC                     vfpfcnvrt@f:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x5C
   713  0000BC                     	ds	4
   714  0000C0                     vfpfcnvrt@ct:
   715                           	callstack 0
   716                           
   717                           ; 3 bytes @ 0x60
   718  0000C0                     	ds	3
   719  0000C3                     vfpfcnvrt@c:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x63
   723  0000C3                     	ds	1
   724  0000C4                     ?_vfprintf:
   725                           	callstack 0
   726  0000C4                     vfprintf@fp:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x64
   730  0000C4                     	ds	2
   731  0000C6                     vfprintf@fmt:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x66
   735  0000C6                     	ds	2
   736  0000C8                     vfprintf@ap:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x68
   740  0000C8                     	ds	2
   741  0000CA                     vfprintf@cfmt:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x6A
   745  0000CA                     	ds	2
   746  0000CC                     ?_sprintf:
   747                           	callstack 0
   748  0000CC                     sprintf@s:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x6C
   752  0000CC                     	ds	2
   753  0000CE                     sprintf@fmt:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x6E
   757  0000CE                     	ds	6
   758  0000D4                     sprintf@ap:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x74
   762  0000D4                     	ds	2
   763  0000D6                     sprintf@f:
   764                           	callstack 0
   765                           
   766                           ; 6 bytes @ 0x76
   767  0000D6                     	ds	6
   768  0000DC                     ??_RTC_Calendario:
   769                           
   770                           ; 1 bytes @ 0x7C
   771  0000DC                     	ds	2
   772  0000DE                     ??_main:
   773                           
   774                           ; 1 bytes @ 0x7E
   775  0000DE                     	ds	2
   776  0000E0                     main@caso:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x80
   780  0000E0                     	ds	2
   781                           
   782                           	psect	cstackCOMRAM
   783  000001                     __pcstackCOMRAM:
   784                           	callstack 0
   785  000001                     ?_strlen:
   786                           	callstack 0
   787  000001                     ?___fpclassifyf:
   788                           	callstack 0
   789  000001                     ?_isupper:
   790                           	callstack 0
   791  000001                     ?_isalpha:
   792                           	callstack 0
   793  000001                     ?_isdigit:
   794                           	callstack 0
   795  000001                     ?_strncmp:
   796                           	callstack 0
   797  000001                     ?_isspace:
   798                           	callstack 0
   799  000001                     ?_islower:
   800                           	callstack 0
   801  000001                     ?_ReadLUZ:
   802                           	callstack 0
   803  000001                     ?___wmul:
   804                           	callstack 0
   805  000001                     ?___awdiv:
   806                           	callstack 0
   807  000001                     ?___awmod:
   808                           	callstack 0
   809  000001                     ?___flneg:
   810                           	callstack 0
   811  000001                     I2C_Read@flag:
   812                           	callstack 0
   813  000001                     I2C_Write@data:
   814                           	callstack 0
   815  000001                     LCD_MSdelay@val:
   816                           	callstack 0
   817  000001                     delay_us@nota:
   818                           	callstack 0
   819  000001                     ___wmul@multiplier:
   820                           	callstack 0
   821  000001                     ___awdiv@dividend:
   822                           	callstack 0
   823  000001                     ___awmod@dividend:
   824                           	callstack 0
   825  000001                     isalpha@c:
   826                           	callstack 0
   827  000001                     isdigit@c:
   828                           	callstack 0
   829  000001                     isspace@c:
   830                           	callstack 0
   831  000001                     isupper@c:
   832                           	callstack 0
   833  000001                     fputc@c:
   834                           	callstack 0
   835  000001                     strcpy@dest:
   836                           	callstack 0
   837  000001                     strlen@s:
   838                           	callstack 0
   839  000001                     strncmp@_l:
   840                           	callstack 0
   841  000001                     islower@c:
   842                           	callstack 0
   843  000001                     ___fleq@ff1:
   844                           	callstack 0
   845  000001                     ___flneg@f1:
   846                           	callstack 0
   847  000001                     ___fpclassifyf@x:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x0
   851  000001                     	ds	1
   852  000002                     I2C_Read@buffer:
   853                           	callstack 0
   854  000002                     I2C_Start@slave_write_address:
   855                           	callstack 0
   856  000002                     I2C_Repeated_Start@slave_read_address:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x1
   860  000002                     	ds	1
   861  000003                     ??_isupper:
   862  000003                     ??_isalpha:
   863  000003                     ??_isdigit:
   864  000003                     ??_isspace:
   865  000003                     ??_islower:
   866  000003                     ??_ReadLUZ:
   867  000003                     ??_delay_us:
   868  000003                     ??_RTC_Read_Clock:
   869  000003                     ??_RTC_Read_Calendar:
   870  000003                     LCD_MSdelay@i:
   871                           	callstack 0
   872  000003                     ___wmul@multiplicand:
   873                           	callstack 0
   874  000003                     ___awdiv@divisor:
   875                           	callstack 0
   876  000003                     ___awmod@divisor:
   877                           	callstack 0
   878  000003                     fputc@fp:
   879                           	callstack 0
   880  000003                     strcpy@src:
   881                           	callstack 0
   882  000003                     strlen@a:
   883                           	callstack 0
   884  000003                     strncmp@_r:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x2
   888  000003                     	ds	1
   889  000004                     RTC_Read_Clock@read_clock_address:
   890                           	callstack 0
   891  000004                     RTC_Read_Calendar@read_calendar_address:
   892                           	callstack 0
   893  000004                     delay_us@i:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x3
   897  000004                     	ds	1
   898  000005                     ??_fputc:
   899  000005                     ??___fpclassifyf:
   900  000005                     ??_strcpy:
   901  000005                     ?___xxtofl:
   902                           	callstack 0
   903  000005                     ___awdiv@counter:
   904                           	callstack 0
   905  000005                     ___awmod@counter:
   906                           	callstack 0
   907  000005                     LCD_MSdelay@j:
   908                           	callstack 0
   909  000005                     ___wmul@product:
   910                           	callstack 0
   911  000005                     strncmp@n:
   912                           	callstack 0
   913  000005                     ___fleq@ff2:
   914                           	callstack 0
   915  000005                     ___xxtofl@val:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x4
   919  000005                     	ds	1
   920  000006                     ___awdiv@sign:
   921                           	callstack 0
   922  000006                     ___awmod@sign:
   923                           	callstack 0
   924  000006                     play@nota:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x5
   928  000006                     	ds	1
   929  000007                     ??_LCD_Command:
   930  000007                     ??_strncmp:
   931  000007                     ??_LCD_Char:
   932  000007                     ?_tolower:
   933                           	callstack 0
   934  000007                     ?_toupper:
   935                           	callstack 0
   936  000007                     _isspace$1566:
   937                           	callstack 0
   938  000007                     ___awdiv@quotient:
   939                           	callstack 0
   940  000007                     strcpy@s:
   941                           	callstack 0
   942  000007                     tolower@c:
   943                           	callstack 0
   944  000007                     toupper@c:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x6
   948  000007                     	ds	1
   949  000008                     ?_atoi:
   950                           	callstack 0
   951  000008                     LCD_Command@cmd:
   952                           	callstack 0
   953  000008                     LCD_Char@dat:
   954                           	callstack 0
   955  000008                     play@octava:
   956                           	callstack 0
   957  000008                     atoi@s:
   958                           	callstack 0
   959  000008                     strncmp@l:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x7
   963  000008                     	ds	1
   964  000009                     ??_tolower:
   965  000009                     ??_toupper:
   966  000009                     ??___fleq:
   967  000009                     ??___xxtofl:
   968  000009                     LCD_String@msg:
   969                           	callstack 0
   970  000009                     LCD_Custom_Char@msg:
   971                           	callstack 0
   972  000009                     ___fpclassifyf@e:
   973                           	callstack 0
   974  000009                     strcpy@d:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x8
   978  000009                     	ds	1
   979  00000A                     ??_atoi:
   980  00000A                     play@duracion:
   981                           	callstack 0
   982  00000A                     fputs@s:
   983                           	callstack 0
   984  00000A                     strncmp@r:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x9
   988  00000A                     	ds	1
   989  00000B                     LCD_String_xy@pos:
   990                           	callstack 0
   991  00000B                     LCD_Custom_Char@loc:
   992                           	callstack 0
   993  00000B                     ___fpclassifyf@u:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0xA
   997  00000B                     	ds	1
   998  00000C                     ??_play:
   999  00000C                     LCD_Custom_Char@i:
  1000                           	callstack 0
  1001  00000C                     LCD_String_xy@msg:
  1002                           	callstack 0
  1003  00000C                     fputs@fp:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0xB
  1007  00000C                     	ds	1
  1008  00000D                     ___xxtofl@sign:
  1009                           	callstack 0
  1010  00000D                     play@mS_Transcurridos:
  1011                           	callstack 0
  1012  00000D                     _tolower$1630:
  1013                           	callstack 0
  1014  00000D                     _toupper$1645:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0xC
  1018  00000D                     	ds	1
  1019  00000E                     LCD_String_xy@row:
  1020                           	callstack 0
  1021  00000E                     ___xxtofl@exp:
  1022                           	callstack 0
  1023  00000E                     fputs@c:
  1024                           	callstack 0
  1025  00000E                     atoi@neg:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0xD
  1029  00000E                     	ds	1
  1030  00000F                     LCD_String_xy@location:
  1031                           	callstack 0
  1032  00000F                     play@CiclosL:
  1033                           	callstack 0
  1034  00000F                     fputs@i:
  1035                           	callstack 0
  1036  00000F                     ___xxtofl@arg:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0xE
  1040  00000F                     	ds	1
  1041  000010                     _atoi$1526:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0xF
  1045  000010                     	ds	1
  1046  000011                     ?_pad:
  1047                           	callstack 0
  1048  000011                     play@fn:
  1049                           	callstack 0
  1050  000011                     pad@fp:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x10
  1054  000011                     	ds	1
  1055  000012                     _atoi$1528:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x11
  1059  000012                     	ds	1
  1060  000013                     ??_PlayCancion:
  1061  000013                     ?___flmul:
  1062                           	callstack 0
  1063  000013                     pad@buf:
  1064                           	callstack 0
  1065  000013                     ___flmul@b:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0x12
  1069  000013                     	ds	1
  1070  000014                     _atoi$1527:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x13
  1074  000014                     	ds	1
  1075  000015                     pad@p:
  1076                           	callstack 0
  1077  000015                     atoi@n:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x14
  1081  000015                     	ds	2
  1082  000017                     ??_pad:
  1083  000017                     ___flmul@a:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x16
  1087  000017                     	ds	1
  1088  000018                     pad@i:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x17
  1092  000018                     	ds	2
  1093  00001A                     pad@w:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x19
  1097  00001A                     	ds	1
  1098  00001B                     ??___flmul:
  1099                           
  1100                           ; 1 bytes @ 0x1A
  1101  00001B                     	ds	1
  1102  00001C                     ?_xtoa:
  1103                           	callstack 0
  1104  00001C                     xtoa@fp:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x1B
  1108  00001C                     	ds	2
  1109  00001E                     xtoa@d:
  1110                           	callstack 0
  1111                           
  1112                           ; 8 bytes @ 0x1D
  1113  00001E                     	ds	1
  1114  00001F                     ___flmul@sign:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x1E
  1118  00001F                     	ds	1
  1119  000020                     ___flmul@grs:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x1F
  1123  000020                     	ds	4
  1124  000024                     ___flmul@aexp:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x23
  1128  000024                     	ds	1
  1129  000025                     ___flmul@bexp:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x24
  1133  000025                     	ds	1
  1134  000026                     xtoa@x:
  1135                           	callstack 0
  1136  000026                     ___flmul@prod:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x25
  1140  000026                     	ds	1
  1141  000027                     ??_xtoa:
  1142                           
  1143                           ; 1 bytes @ 0x26
  1144  000027                     	ds	3
  1145  00002A                     ___flmul@temp:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x29
  1149  00002A                     	ds	2
  1150  00002C                     ?___fldiv:
  1151                           	callstack 0
  1152  00002C                     ___flge@ff1:
  1153                           	callstack 0
  1154  00002C                     ___fldiv@b:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x2B
  1158  00002C                     	ds	3
  1159  00002F                     _xtoa$1472:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x2E
  1163  00002F                     	ds	1
  1164  000030                     ___flge@ff2:
  1165                           	callstack 0
  1166  000030                     ___fldiv@a:
  1167                           	callstack 0
  1168                           
  1169                           ; 4 bytes @ 0x2F
  1170  000030                     	ds	1
  1171  000031                     _xtoa$1473:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x30
  1175  000031                     	ds	2
  1176  000033                     xtoa@p:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x32
  1180  000033                     	ds	1
  1181  000034                     ??___fldiv:
  1182  000034                     ??___flge:
  1183                           
  1184                           ; 1 bytes @ 0x33
  1185  000034                     	ds	1
  1186  000035                     xtoa@w:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x34
  1190  000035                     	ds	2
  1191  000037                     xtoa@n:
  1192                           	callstack 0
  1193                           
  1194                           ; 8 bytes @ 0x36
  1195  000037                     	ds	1
  1196  000038                     ___fldiv@rem:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x37
  1200  000038                     	ds	4
  1201  00003C                     ___fldiv@sign:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x3B
  1205  00003C                     	ds	1
  1206  00003D                     ___fldiv@new_exp:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x3C
  1210  00003D                     	ds	2
  1211  00003F                     xtoa@i:
  1212                           	callstack 0
  1213  00003F                     ___fldiv@grs:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x3E
  1217  00003F                     	ds	2
  1218  000041                     xtoa@c:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x40
  1222  000041                     	ds	2
  1223  000043                     ___fldiv@bexp:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x42
  1227  000043                     	ds	1
  1228  000044                     ___fldiv@aexp:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x43
  1232  000044                     	ds	1
  1233  000045                     ?___fladd:
  1234                           	callstack 0
  1235  000045                     ?_floorf:
  1236                           	callstack 0
  1237  000045                     ___fladd@b:
  1238                           	callstack 0
  1239  000045                     floorf@x:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x44
  1243  000045                     	ds	4
  1244  000049                     ??_floorf:
  1245  000049                     ___fladd@a:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x48
  1249  000049                     	ds	4
  1250  00004D                     ??___fladd:
  1251                           
  1252                           ; 1 bytes @ 0x4C
  1253  00004D                     	ds	2
  1254  00004F                     floorf@m:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x4E
  1258  00004F                     	ds	2
  1259  000051                     ___fladd@signs:
  1260                           	callstack 0
  1261                           
  1262                           ; 1 bytes @ 0x50
  1263  000051                     	ds	1
  1264  000052                     ___fladd@aexp:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0x51
  1268  000052                     	ds	1
  1269  000053                     ___fladd@bexp:
  1270                           	callstack 0
  1271  000053                     floorf@e:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x52
  1275  000053                     	ds	1
  1276  000054                     ___fladd@grs:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0x53
  1280  000054                     	ds	1
  1281  000055                     ?___flsub:
  1282                           	callstack 0
  1283  000055                     ?___fltol:
  1284                           	callstack 0
  1285  000055                     ___fltol@f1:
  1286                           	callstack 0
  1287  000055                     ___flsub@b:
  1288                           	callstack 0
  1289  000055                     floorf@u:
  1290                           	callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x54
  1293  000055                     	ds	4
  1294  000059                     ??___fltol:
  1295  000059                     ___flsub@a:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0x58
  1299  000059                     	ds	4
  1300  00005D                     ___fltol@sign1:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x5C
  1304  00005D                     	ds	1
  1305  00005E                     ___fltol@exp1:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x5D
  1309  00005E                     	ds	1
  1310  00005F                     
  1311                           ; 1 bytes @ 0x5E
  1312 ;;
  1313 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1314 ;;
  1315 ;; *************** function _main *****************
  1316 ;; Defined at:
  1317 ;;		line 25 in file "smart_main.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  caso            2  128[BANK0 ] int 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1331 ;;      Params:         0       0       0       0       0       0       0       0       0
  1332 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1333 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1334 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1335 ;;Total ram usage:        4 bytes
  1336 ;; Hardware stack levels required when called: 9
  1337 ;; This function calls:
  1338 ;;		_Cloudy_State
  1339 ;;		_Estados
  1340 ;;		_I2C_Init
  1341 ;;		_LCD_Clear
  1342 ;;		_LCD_Init
  1343 ;;		_LCD_MSdelay
  1344 ;;		_RTC_Calendario
  1345 ;;		_Rainy_State
  1346 ;;		_Sunny_State
  1347 ;; This function is called by:
  1348 ;;		Startup code after reset
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text0
  1353  003F74                     __ptext0:
  1354                           	callstack 0
  1355  003F74                     _main:
  1356                           	callstack 22
  1357  003F74                     
  1358                           ;smart_main.c: 26:     OSCCON = 0x72;
  1359  003F74  0E72               	movlw	114
  1360  003F76  6ED3               	movwf	211,c	;volatile
  1361                           
  1362                           ;smart_main.c: 27:     TRISE = 0x00;
  1363  003F78  0E00               	movlw	0
  1364  003F7A  6E96               	movwf	150,c	;volatile
  1365  003F7C                     
  1366                           ;smart_main.c: 30:     I2C_Init();
  1367  003F7C  ECD2  F024         	call	_I2C_Init	;wreg free
  1368  003F80                     
  1369                           ;smart_main.c: 31:     LCD_Init();
  1370  003F80  EC68  F024         	call	_LCD_Init	;wreg free
  1371  003F84                     l5598:
  1372                           
  1373                           ;smart_main.c: 34:         RTC_Calendario();
  1374  003F84  EC9A  F013         	call	_RTC_Calendario	;wreg free
  1375  003F88                     
  1376                           ;smart_main.c: 35:         int caso = Estados();
  1377  003F88  EC7F  F016         	call	_Estados	;wreg free
  1378  003F8C  C066  F0E0         	movff	?_Estados,main@caso
  1379  003F90  C067  F0E1         	movff	?_Estados+1,main@caso+1
  1380                           
  1381                           ;smart_main.c: 36:         switch(caso){
  1382  003F94  EFD8  F01F         	goto	l5610
  1383  003F98                     l5602:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;smart_main.c: 38:                 Sunny_State();
  1387  003F98  EC94  F020         	call	_Sunny_State	;wreg free
  1388                           
  1389                           ;smart_main.c: 39:                 break;
  1390  003F9C  EFF3  F01F         	goto	l5612
  1391  003FA0                     l5604:
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;smart_main.c: 42:                 Cloudy_State();
  1395  003FA0  ECA9  F021         	call	_Cloudy_State	;wreg free
  1396                           
  1397                           ;smart_main.c: 43:                 break;
  1398  003FA4  EFF3  F01F         	goto	l5612
  1399  003FA8                     l5606:
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;smart_main.c: 46:                 Rainy_State();
  1403  003FA8  EC4F  F021         	call	_Rainy_State	;wreg free
  1404                           
  1405                           ;smart_main.c: 47:                 break;
  1406  003FAC  EFF3  F01F         	goto	l5612
  1407  003FB0                     l5610:
  1408  003FB0  C0E0  F0DE         	movff	main@caso,??_main
  1409  003FB4  C0E1  F0DF         	movff	main@caso+1,??_main+1
  1410                           
  1411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1412                           ; Switch size 1, requested type "simple"
  1413                           ; Number of cases is 1, Range of values is 0 to 0
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte            4     3 (average)
  1417                           ;	Chosen strategy is simple_byte
  1418  003FB8  0100               	movlb	0	; () banked
  1419  003FBA  51DF               	movf	(??_main+1)& (0+255),w,b
  1420  003FBC  0A00               	xorlw	0	; case 0
  1421  003FBE  B4D8               	btfsc	status,2,c
  1422  003FC0  EFE4  F01F         	goto	l5716
  1423  003FC4  EFF3  F01F         	goto	l5612
  1424  003FC8                     l5716:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ; Switch size 1, requested type "simple"
  1428                           ; Number of cases is 3, Range of values is 1 to 3
  1429                           ; switch strategies available:
  1430                           ; Name         Instructions Cycles
  1431                           ; simple_byte           10     6 (average)
  1432                           ;	Chosen strategy is simple_byte
  1433  003FC8  51DE               	movf	??_main& (0+255),w,b
  1434  003FCA  0A01               	xorlw	1	; case 1
  1435  003FCC  B4D8               	btfsc	status,2,c
  1436  003FCE  EFCC  F01F         	goto	l5602
  1437  003FD2  0A03               	xorlw	3	; case 2
  1438  003FD4  B4D8               	btfsc	status,2,c
  1439  003FD6  EFD0  F01F         	goto	l5604
  1440  003FDA  0A01               	xorlw	1	; case 3
  1441  003FDC  B4D8               	btfsc	status,2,c
  1442  003FDE  EFD4  F01F         	goto	l5606
  1443  003FE2  EFF3  F01F         	goto	l5612
  1444  003FE6                     l5612:
  1445                           
  1446                           ;smart_main.c: 53:         LCD_MSdelay(3000);
  1447  003FE6  0E0B               	movlw	11
  1448  003FE8  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  1449  003FEA  0EB8               	movlw	184
  1450  003FEC  6E01               	movwf	LCD_MSdelay@val^0,c
  1451  003FEE  EC9C  F022         	call	_LCD_MSdelay	;wreg free
  1452                           
  1453                           ;smart_main.c: 54:         LCD_Clear();
  1454  003FF2  ECFD  F024         	call	_LCD_Clear	;wreg free
  1455  003FF6  EFC2  F01F         	goto	l5598
  1456  003FFA  EF00  F000         	goto	start
  1457  003FFE                     __end_of_main:
  1458                           	callstack 0
  1459                           
  1460 ;; *************** function _Sunny_State *****************
  1461 ;; Defined at:
  1462 ;;		line 51 in file "Estados.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1476 ;;      Params:         0       0       0       0       0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1479 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1480 ;;Total ram usage:        0 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 8
  1483 ;; This function calls:
  1484 ;;		_LCD_Char
  1485 ;;		_LCD_Command
  1486 ;;		_LCD_Custom_Char
  1487 ;;		_LCD_String_xy
  1488 ;;		_PlayCancion
  1489 ;;		_sprintf
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text1
  1496  004128                     __ptext1:
  1497                           	callstack 0
  1498  004128                     _Sunny_State:
  1499                           	callstack 22
  1500  004128                     
  1501                           ;Estados.c: 52:     LATE0 = 0;
  1502  004128  908D               	bcf	3981,0,c	;volatile
  1503                           
  1504                           ;Estados.c: 53:     LATE1 = 0;
  1505  00412A  928D               	bcf	3981,1,c	;volatile
  1506                           
  1507                           ;Estados.c: 54:     LATE2 = 0;
  1508  00412C  948D               	bcf	3981,2,c	;volatile
  1509  00412E                     
  1510                           ;Estados.c: 55:     sprintf(Stemp, "%0.0fC", tempar);
  1511  00412E  0E5E               	movlw	low _Stemp
  1512  004130  0100               	movlb	0	; () banked
  1513  004132  6FCC               	movwf	sprintf@s& (0+255),b
  1514  004134  0E01               	movlw	high _Stemp
  1515  004136  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  1516  004138  0E01               	movlw	low STR_19
  1517  00413A  6FCE               	movwf	sprintf@fmt& (0+255),b
  1518  00413C  0E08               	movlw	high STR_19
  1519  00413E  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  1520  004140  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  1521  004144  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  1522  004148  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  1523  00414C  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  1524  004150  ECD6  F021         	call	_sprintf	;wreg free
  1525  004154                     
  1526                           ;Estados.c: 56:     LCD_String_xy(1, 0, Stemp);
  1527  004154  0E00               	movlw	0
  1528  004156  6E0B               	movwf	LCD_String_xy@pos^0,c
  1529  004158  0E5E               	movlw	low _Stemp
  1530  00415A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1531  00415C  0E01               	movlw	high _Stemp
  1532  00415E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1533  004160  0E01               	movlw	1
  1534  004162  EC4D  F023         	call	_LCD_String_xy
  1535  004166                     
  1536                           ;Estados.c: 57:     LCD_Custom_Char(0, character2);
  1537  004166  0EDD               	movlw	low _character2
  1538  004168  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1539  00416A  0E01               	movlw	high _character2
  1540  00416C  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1541  00416E  0E00               	movlw	0
  1542  004170  ECC1  F022         	call	_LCD_Custom_Char
  1543                           
  1544                           ;Estados.c: 58:     LCD_Command(0xc0);
  1545  004174  0EC0               	movlw	192
  1546  004176  EC50  F022         	call	_LCD_Command
  1547                           
  1548                           ;Estados.c: 59:     LCD_Char(0);
  1549  00417A  0E00               	movlw	0
  1550  00417C  EC76  F022         	call	_LCD_Char
  1551  004180                     
  1552                           ;Estados.c: 60:     PlayCancion();
  1553  004180  EC67  F01A         	call	_PlayCancion	;wreg free
  1554  004184  0012               	return		;funcret
  1555  004186                     __end_of_Sunny_State:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function _PlayCancion *****************
  1559 ;; Defined at:
  1560 ;;		line 93 in file "Melodia.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1574 ;;      Params:         0       0       0       0       0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1576 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1577 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1578 ;;Total ram usage:        2 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 2
  1581 ;; This function calls:
  1582 ;;		_play
  1583 ;; This function is called by:
  1584 ;;		_Sunny_State
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text2
  1589  0034CE                     __ptext2:
  1590                           	callstack 0
  1591  0034CE                     _PlayCancion:
  1592                           	callstack 27
  1593  0034CE                     
  1594                           ;Melodia.c: 96:         play (4 ,4,150);
  1595  0034CE  0E00               	movlw	0
  1596  0034D0  6E07               	movwf	(play@nota+1)^0,c
  1597  0034D2  0E04               	movlw	4
  1598  0034D4  6E06               	movwf	play@nota^0,c
  1599  0034D6  0E00               	movlw	0
  1600  0034D8  6E09               	movwf	(play@octava+1)^0,c
  1601  0034DA  0E04               	movlw	4
  1602  0034DC  6E08               	movwf	play@octava^0,c
  1603  0034DE  0E00               	movlw	0
  1604  0034E0  6E0B               	movwf	(play@duracion+1)^0,c
  1605  0034E2  0E96               	movlw	150
  1606  0034E4  6E0A               	movwf	play@duracion^0,c
  1607  0034E6  EC49  F01E         	call	_play	;wreg free
  1608  0034EA                     
  1609                           ;Melodia.c: 97:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1610  0034EA  0E82               	movlw	130
  1611  0034EC  6E13               	movwf	??_PlayCancion^0,c
  1612  0034EE  0EDE               	movlw	222
  1613  0034F0                     u6157:
  1614  0034F0  2EE8               	decfsz	wreg,f,c
  1615  0034F2  D7FE               	bra	u6157
  1616  0034F4  2E13               	decfsz	??_PlayCancion^0,f,c
  1617  0034F6  D7FC               	bra	u6157
  1618  0034F8                     
  1619                           ;Melodia.c: 98:         play (4 ,4,150);
  1620  0034F8  0E00               	movlw	0
  1621  0034FA  6E07               	movwf	(play@nota+1)^0,c
  1622  0034FC  0E04               	movlw	4
  1623  0034FE  6E06               	movwf	play@nota^0,c
  1624  003500  0E00               	movlw	0
  1625  003502  6E09               	movwf	(play@octava+1)^0,c
  1626  003504  0E04               	movlw	4
  1627  003506  6E08               	movwf	play@octava^0,c
  1628  003508  0E00               	movlw	0
  1629  00350A  6E0B               	movwf	(play@duracion+1)^0,c
  1630  00350C  0E96               	movlw	150
  1631  00350E  6E0A               	movwf	play@duracion^0,c
  1632  003510  EC49  F01E         	call	_play	;wreg free
  1633                           
  1634                           ;Melodia.c: 99:         _delay((unsigned long)((150)*(8000000/4000.0)));
  1635  003514  0E02               	movlw	2
  1636  003516  6E14               	movwf	(??_PlayCancion+1)^0,c
  1637  003518  0E86               	movlw	134
  1638  00351A  6E13               	movwf	??_PlayCancion^0,c
  1639  00351C  0E99               	movlw	153
  1640  00351E                     u6167:
  1641  00351E  2EE8               	decfsz	wreg,f,c
  1642  003520  D7FE               	bra	u6167
  1643  003522  2E13               	decfsz	??_PlayCancion^0,f,c
  1644  003524  D7FC               	bra	u6167
  1645  003526  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
  1646  003528  D7FA               	bra	u6167
  1647  00352A  F000               	nop	
  1648  00352C                     
  1649                           ;Melodia.c: 100:         play (4 ,4,150);
  1650  00352C  0E00               	movlw	0
  1651  00352E  6E07               	movwf	(play@nota+1)^0,c
  1652  003530  0E04               	movlw	4
  1653  003532  6E06               	movwf	play@nota^0,c
  1654  003534  0E00               	movlw	0
  1655  003536  6E09               	movwf	(play@octava+1)^0,c
  1656  003538  0E04               	movlw	4
  1657  00353A  6E08               	movwf	play@octava^0,c
  1658  00353C  0E00               	movlw	0
  1659  00353E  6E0B               	movwf	(play@duracion+1)^0,c
  1660  003540  0E96               	movlw	150
  1661  003542  6E0A               	movwf	play@duracion^0,c
  1662  003544  EC49  F01E         	call	_play	;wreg free
  1663  003548                     
  1664                           ;Melodia.c: 101:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1665  003548  0E03               	movlw	3
  1666  00354A  6E14               	movwf	(??_PlayCancion+1)^0,c
  1667  00354C  0E08               	movlw	8
  1668  00354E  6E13               	movwf	??_PlayCancion^0,c
  1669  003550  0E77               	movlw	119
  1670  003552                     u6177:
  1671  003552  2EE8               	decfsz	wreg,f,c
  1672  003554  D7FE               	bra	u6177
  1673  003556  2E13               	decfsz	??_PlayCancion^0,f,c
  1674  003558  D7FC               	bra	u6177
  1675  00355A  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
  1676  00355C  D7FA               	bra	u6177
  1677  00355E  F000               	nop	
  1678                           
  1679                           ;Melodia.c: 103:         play (0 ,4,125);
  1680  003560  0E00               	movlw	0
  1681  003562  6E07               	movwf	(play@nota+1)^0,c
  1682  003564  0E00               	movlw	0
  1683  003566  6E06               	movwf	play@nota^0,c
  1684  003568  0E00               	movlw	0
  1685  00356A  6E09               	movwf	(play@octava+1)^0,c
  1686  00356C  0E04               	movlw	4
  1687  00356E  6E08               	movwf	play@octava^0,c
  1688  003570  0E00               	movlw	0
  1689  003572  6E0B               	movwf	(play@duracion+1)^0,c
  1690  003574  0E7D               	movlw	125
  1691  003576  6E0A               	movwf	play@duracion^0,c
  1692  003578  EC49  F01E         	call	_play	;wreg free
  1693  00357C                     
  1694                           ;Melodia.c: 104:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1695  00357C  0E82               	movlw	130
  1696  00357E  6E13               	movwf	??_PlayCancion^0,c
  1697  003580  0EDE               	movlw	222
  1698  003582                     u6187:
  1699  003582  2EE8               	decfsz	wreg,f,c
  1700  003584  D7FE               	bra	u6187
  1701  003586  2E13               	decfsz	??_PlayCancion^0,f,c
  1702  003588  D7FC               	bra	u6187
  1703  00358A                     
  1704                           ;Melodia.c: 105:         play (4 ,4,125);
  1705  00358A  0E00               	movlw	0
  1706  00358C  6E07               	movwf	(play@nota+1)^0,c
  1707  00358E  0E04               	movlw	4
  1708  003590  6E06               	movwf	play@nota^0,c
  1709  003592  0E00               	movlw	0
  1710  003594  6E09               	movwf	(play@octava+1)^0,c
  1711  003596  0E04               	movlw	4
  1712  003598  6E08               	movwf	play@octava^0,c
  1713  00359A  0E00               	movlw	0
  1714  00359C  6E0B               	movwf	(play@duracion+1)^0,c
  1715  00359E  0E7D               	movlw	125
  1716  0035A0  6E0A               	movwf	play@duracion^0,c
  1717  0035A2  EC49  F01E         	call	_play	;wreg free
  1718                           
  1719                           ;Melodia.c: 106:         _delay((unsigned long)((150)*(8000000/4000.0)));
  1720  0035A6  0E02               	movlw	2
  1721  0035A8  6E14               	movwf	(??_PlayCancion+1)^0,c
  1722  0035AA  0E86               	movlw	134
  1723  0035AC  6E13               	movwf	??_PlayCancion^0,c
  1724  0035AE  0E99               	movlw	153
  1725  0035B0                     u6197:
  1726  0035B0  2EE8               	decfsz	wreg,f,c
  1727  0035B2  D7FE               	bra	u6197
  1728  0035B4  2E13               	decfsz	??_PlayCancion^0,f,c
  1729  0035B6  D7FC               	bra	u6197
  1730  0035B8  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
  1731  0035BA  D7FA               	bra	u6197
  1732  0035BC  F000               	nop	
  1733  0035BE                     
  1734                           ;Melodia.c: 107:         play (7 ,4,200);
  1735  0035BE  0E00               	movlw	0
  1736  0035C0  6E07               	movwf	(play@nota+1)^0,c
  1737  0035C2  0E07               	movlw	7
  1738  0035C4  6E06               	movwf	play@nota^0,c
  1739  0035C6  0E00               	movlw	0
  1740  0035C8  6E09               	movwf	(play@octava+1)^0,c
  1741  0035CA  0E04               	movlw	4
  1742  0035CC  6E08               	movwf	play@octava^0,c
  1743  0035CE  0E00               	movlw	0
  1744  0035D0  6E0B               	movwf	(play@duracion+1)^0,c
  1745  0035D2  0EC8               	movlw	200
  1746  0035D4  6E0A               	movwf	play@duracion^0,c
  1747  0035D6  EC49  F01E         	call	_play	;wreg free
  1748  0035DA                     
  1749                           ;Melodia.c: 108:         _delay((unsigned long)((400)*(8000000/4000.0)));
  1750  0035DA  0E05               	movlw	5
  1751  0035DC  6E14               	movwf	(??_PlayCancion+1)^0,c
  1752  0035DE  0E0F               	movlw	15
  1753  0035E0  6E13               	movwf	??_PlayCancion^0,c
  1754  0035E2  0EF1               	movlw	241
  1755  0035E4                     u6207:
  1756  0035E4  2EE8               	decfsz	wreg,f,c
  1757  0035E6  D7FE               	bra	u6207
  1758  0035E8  2E13               	decfsz	??_PlayCancion^0,f,c
  1759  0035EA  D7FC               	bra	u6207
  1760  0035EC  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
  1761  0035EE  D7FA               	bra	u6207
  1762  0035F0  F000               	nop	
  1763                           
  1764                           ;Melodia.c: 109:         play (7 ,3,350);
  1765  0035F2  0E00               	movlw	0
  1766  0035F4  6E07               	movwf	(play@nota+1)^0,c
  1767  0035F6  0E07               	movlw	7
  1768  0035F8  6E06               	movwf	play@nota^0,c
  1769  0035FA  0E00               	movlw	0
  1770  0035FC  6E09               	movwf	(play@octava+1)^0,c
  1771  0035FE  0E03               	movlw	3
  1772  003600  6E08               	movwf	play@octava^0,c
  1773  003602  0E01               	movlw	1
  1774  003604  6E0B               	movwf	(play@duracion+1)^0,c
  1775  003606  0E5E               	movlw	94
  1776  003608  6E0A               	movwf	play@duracion^0,c
  1777  00360A  EC49  F01E         	call	_play	;wreg free
  1778  00360E                     
  1779                           ;Melodia.c: 110:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1780  00360E  0E04               	movlw	4
  1781  003610  6E14               	movwf	(??_PlayCancion+1)^0,c
  1782  003612  0E0C               	movlw	12
  1783  003614  6E13               	movwf	??_PlayCancion^0,c
  1784  003616  0E34               	movlw	52
  1785  003618                     u6217:
  1786  003618  2EE8               	decfsz	wreg,f,c
  1787  00361A  D7FE               	bra	u6217
  1788  00361C  2E13               	decfsz	??_PlayCancion^0,f,c
  1789  00361E  D7FC               	bra	u6217
  1790  003620  2E14               	decfsz	(??_PlayCancion+1)^0,f,c
  1791  003622  D7FA               	bra	u6217
  1792  003624  0012               	return		;funcret
  1793  003626                     __end_of_PlayCancion:
  1794                           	callstack 0
  1795                           
  1796 ;; *************** function _play *****************
  1797 ;; Defined at:
  1798 ;;		line 46 in file "Melodia.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  nota            2    5[COMRAM] int 
  1801 ;;  octava          2    7[COMRAM] int 
  1802 ;;  duracion        2    9[COMRAM] int 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  fn              2   16[COMRAM] int 
  1805 ;;  CiclosL         2   14[COMRAM] int 
  1806 ;;  mS_Transcurr    2   12[COMRAM] int 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1816 ;;      Params:         6       0       0       0       0       0       0       0       0
  1817 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1818 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1819 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1820 ;;Total ram usage:       13 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 1
  1823 ;; This function calls:
  1824 ;;		_delay_us
  1825 ;; This function is called by:
  1826 ;;		_PlayCancion
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text3
  1831  003C92                     __ptext3:
  1832                           	callstack 0
  1833  003C92                     _play:
  1834                           	callstack 27
  1835  003C92                     
  1836                           ;Melodia.c: 47:      int fn;;Melodia.c: 48:      int mS_Transcurridos=0;
  1837  003C92  0E00               	movlw	0
  1838  003C94  6E0E               	movwf	(play@mS_Transcurridos+1)^0,c
  1839  003C96  0E00               	movlw	0
  1840  003C98  6E0D               	movwf	play@mS_Transcurridos^0,c
  1841                           
  1842                           ;Melodia.c: 49:      int CiclosL=0;
  1843  003C9A  0E00               	movlw	0
  1844  003C9C  6E10               	movwf	(play@CiclosL+1)^0,c
  1845  003C9E  0E00               	movlw	0
  1846  003CA0  6E0F               	movwf	play@CiclosL^0,c
  1847  003CA2                     
  1848                           ;Melodia.c: 51:      fn=FreqNota[nota];
  1849  003CA2  90D8               	bcf	status,0,c
  1850  003CA4  3406               	rlcf	play@nota^0,w,c
  1851  003CA6  6ED9               	movwf	fsr2l,c
  1852  003CA8  3407               	rlcf	(play@nota+1)^0,w,c
  1853  003CAA  6EDA               	movwf	fsr2h,c
  1854  003CAC  0EB6               	movlw	low _FreqNota
  1855  003CAE  26D9               	addwf	fsr2l,f,c
  1856  003CB0  0E01               	movlw	high _FreqNota
  1857  003CB2  22DA               	addwfc	fsr2h,f,c
  1858  003CB4  CFDE F011          	movff	postinc2,play@fn
  1859  003CB8  CFDD F012          	movff	postdec2,play@fn+1
  1860  003CBC                     
  1861                           ;Melodia.c: 53:      fn>>=(octava);
  1862  003CBC  2808               	incf	play@octava^0,w,c
  1863  003CBE  6E0C               	movwf	??_play^0,c
  1864  003CC0  EF65  F01E         	goto	u5730
  1865  003CC4                     u5735:
  1866  003CC4  3412               	rlcf	(play@fn+1)^0,w,c
  1867  003CC6  3212               	rrcf	(play@fn+1)^0,f,c
  1868  003CC8  3211               	rrcf	play@fn^0,f,c
  1869  003CCA                     u5730:
  1870  003CCA  2E0C               	decfsz	??_play^0,f,c
  1871  003CCC  EF62  F01E         	goto	u5735
  1872  003CD0                     l5144:
  1873                           
  1874                           ;Melodia.c: 58:         TRISCbits . TRISC1 = 0;
  1875  003CD0  9294               	bcf	148,1,c	;volatile
  1876  003CD2                     
  1877                           ;Melodia.c: 59:         LATCbits . LATC1 = 1 ;
  1878  003CD2  828B               	bsf	139,1,c	;volatile
  1879  003CD4                     
  1880                           ;Melodia.c: 60:         delay_us(fn);;
  1881  003CD4  C011  F001         	movff	play@fn,delay_us@nota
  1882  003CD8  C012  F002         	movff	play@fn+1,delay_us@nota+1
  1883  003CDC  EC4F  F024         	call	_delay_us	;wreg free
  1884  003CE0                     
  1885                           ;Melodia.c: 61:         CiclosL+=(fn);
  1886  003CE0  5011               	movf	play@fn^0,w,c
  1887  003CE2  260F               	addwf	play@CiclosL^0,f,c
  1888  003CE4  5012               	movf	(play@fn+1)^0,w,c
  1889  003CE6  2210               	addwfc	(play@CiclosL+1)^0,f,c
  1890  003CE8                     
  1891                           ;Melodia.c: 63:         LATCbits . LATC1 = 0 ;
  1892  003CE8  928B               	bcf	139,1,c	;volatile
  1893  003CEA                     
  1894                           ;Melodia.c: 64:          delay_us(fn);
  1895  003CEA  C011  F001         	movff	play@fn,delay_us@nota
  1896  003CEE  C012  F002         	movff	play@fn+1,delay_us@nota+1
  1897  003CF2  EC4F  F024         	call	_delay_us	;wreg free
  1898  003CF6                     
  1899                           ;Melodia.c: 65:         CiclosL+=(fn);
  1900  003CF6  5011               	movf	play@fn^0,w,c
  1901  003CF8  260F               	addwf	play@CiclosL^0,f,c
  1902  003CFA  5012               	movf	(play@fn+1)^0,w,c
  1903  003CFC  2210               	addwfc	(play@CiclosL+1)^0,f,c
  1904  003CFE                     l5158:
  1905                           
  1906                           ;Melodia.c: 66:         CiclosL+=25;
  1907  003CFE  0E19               	movlw	25
  1908  003D00  260F               	addwf	play@CiclosL^0,f,c
  1909  003D02  0E00               	movlw	0
  1910  003D04  2210               	addwfc	(play@CiclosL+1)^0,f,c
  1911                           
  1912                           ;Melodia.c: 68:         while(CiclosL>999){
  1913  003D06  EF8D  F01E         	goto	l5166
  1914  003D0A                     l5160:
  1915                           
  1916                           ;Melodia.c: 70:            CiclosL-=1000;
  1917  003D0A  0E18               	movlw	24
  1918  003D0C  260F               	addwf	play@CiclosL^0,f,c
  1919  003D0E  0EFC               	movlw	252
  1920  003D10  2210               	addwfc	(play@CiclosL+1)^0,f,c
  1921  003D12                     
  1922                           ;Melodia.c: 71:            mS_Transcurridos++;
  1923  003D12  4A0D               	infsnz	play@mS_Transcurridos^0,f,c
  1924  003D14  2A0E               	incf	(play@mS_Transcurridos+1)^0,f,c
  1925  003D16  EF7F  F01E         	goto	l5158
  1926  003D1A                     l5166:
  1927                           
  1928                           ;Melodia.c: 68:         while(CiclosL>999){
  1929  003D1A  BE10               	btfsc	(play@CiclosL+1)^0,7,c
  1930  003D1C  EF9B  F01E         	goto	u5740
  1931  003D20  0EE8               	movlw	232
  1932  003D22  5C0F               	subwf	play@CiclosL^0,w,c
  1933  003D24  0E03               	movlw	3
  1934  003D26  5810               	subwfb	(play@CiclosL+1)^0,w,c
  1935  003D28  B0D8               	btfsc	status,0,c
  1936  003D2A  EF99  F01E         	goto	u5741
  1937  003D2E  EF9B  F01E         	goto	u5740
  1938  003D32                     u5741:
  1939  003D32  EF85  F01E         	goto	l5160
  1940  003D36                     u5740:
  1941  003D36                     
  1942                           ;Melodia.c: 74:      }while (duracion>mS_Transcurridos);
  1943  003D36  500A               	movf	play@duracion^0,w,c
  1944  003D38  5C0D               	subwf	play@mS_Transcurridos^0,w,c
  1945  003D3A  500E               	movf	(play@mS_Transcurridos+1)^0,w,c
  1946  003D3C  0A80               	xorlw	128
  1947  003D3E  6E0C               	movwf	??_play^0,c
  1948  003D40  500B               	movf	(play@duracion+1)^0,w,c
  1949  003D42  0A80               	xorlw	128
  1950  003D44  580C               	subwfb	??_play^0,w,c
  1951  003D46  A0D8               	btfss	status,0,c
  1952  003D48  EFA8  F01E         	goto	u5751
  1953  003D4C  EFAA  F01E         	goto	u5750
  1954  003D50                     u5751:
  1955  003D50  EF68  F01E         	goto	l5144
  1956  003D54                     u5750:
  1957  003D54  0012               	return		;funcret
  1958  003D56                     __end_of_play:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _delay_us *****************
  1962 ;; Defined at:
  1963 ;;		line 24 in file "Melodia.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  nota            2    0[COMRAM] int 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  i               2    3[COMRAM] int 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  1    wreg      void 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1977 ;;      Params:         2       0       0       0       0       0       0       0       0
  1978 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1979 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1980 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1981 ;;Total ram usage:        5 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_play
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text4
  1991  00489E                     __ptext4:
  1992                           	callstack 0
  1993  00489E                     _delay_us:
  1994                           	callstack 27
  1995  00489E                     
  1996                           ;Melodia.c: 25:     for(int i=0; i<=nota;i++ ){
  1997  00489E  0E00               	movlw	0
  1998  0048A0  6E05               	movwf	(delay_us@i+1)^0,c
  1999  0048A2  0E00               	movlw	0
  2000  0048A4  6E04               	movwf	delay_us@i^0,c
  2001  0048A6  EF58  F024         	goto	l4946
  2002  0048AA                     l239:
  2003                           
  2004                           ;Melodia.c: 26:         _delay((unsigned long)((1)*(8000000/4000000.0)));
  2005  0048AA  D000               	nop2		;2 cycle nop
  2006  0048AC                     
  2007                           ;Melodia.c: 27:     }
  2008  0048AC  4A04               	infsnz	delay_us@i^0,f,c
  2009  0048AE  2A05               	incf	(delay_us@i+1)^0,f,c
  2010  0048B0                     l4946:
  2011  0048B0  5004               	movf	delay_us@i^0,w,c
  2012  0048B2  5C01               	subwf	delay_us@nota^0,w,c
  2013  0048B4  5002               	movf	(delay_us@nota+1)^0,w,c
  2014  0048B6  0A80               	xorlw	128
  2015  0048B8  6E03               	movwf	??_delay_us^0,c
  2016  0048BA  5005               	movf	(delay_us@i+1)^0,w,c
  2017  0048BC  0A80               	xorlw	128
  2018  0048BE  5803               	subwfb	??_delay_us^0,w,c
  2019  0048C0  B0D8               	btfsc	status,0,c
  2020  0048C2  EF65  F024         	goto	u5481
  2021  0048C6  EF67  F024         	goto	u5480
  2022  0048CA                     u5481:
  2023  0048CA  EF55  F024         	goto	l239
  2024  0048CE                     u5480:
  2025  0048CE  0012               	return		;funcret
  2026  0048D0                     __end_of_delay_us:
  2027                           	callstack 0
  2028                           
  2029 ;; *************** function _Rainy_State *****************
  2030 ;; Defined at:
  2031 ;;		line 102 in file "Estados.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2045 ;;      Params:         0       0       0       0       0       0       0       0       0
  2046 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2048 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2049 ;;Total ram usage:        0 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 8
  2052 ;; This function calls:
  2053 ;;		_LCD_Char
  2054 ;;		_LCD_Command
  2055 ;;		_LCD_Custom_Char
  2056 ;;		_LCD_String_xy
  2057 ;;		_sprintf
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text5
  2064  00429E                     __ptext5:
  2065                           	callstack 0
  2066  00429E                     _Rainy_State:
  2067                           	callstack 22
  2068  00429E                     
  2069                           ;Estados.c: 103:     LATE0 = 1;
  2070  00429E  808D               	bsf	3981,0,c	;volatile
  2071                           
  2072                           ;Estados.c: 104:     LATE1 = 1;
  2073  0042A0  828D               	bsf	3981,1,c	;volatile
  2074                           
  2075                           ;Estados.c: 105:     LATE2 = 1;
  2076  0042A2  848D               	bsf	3981,2,c	;volatile
  2077  0042A4                     
  2078                           ;Estados.c: 106:     sprintf(Stemp, "%0.0fC", tempar);
  2079  0042A4  0E5E               	movlw	low _Stemp
  2080  0042A6  0100               	movlb	0	; () banked
  2081  0042A8  6FCC               	movwf	sprintf@s& (0+255),b
  2082  0042AA  0E01               	movlw	high _Stemp
  2083  0042AC  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2084  0042AE  0E01               	movlw	low STR_19
  2085  0042B0  6FCE               	movwf	sprintf@fmt& (0+255),b
  2086  0042B2  0E08               	movlw	high STR_19
  2087  0042B4  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2088  0042B6  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  2089  0042BA  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  2090  0042BE  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  2091  0042C2  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  2092  0042C6  ECD6  F021         	call	_sprintf	;wreg free
  2093  0042CA                     
  2094                           ;Estados.c: 107:     LCD_String_xy(1, 0, Stemp);
  2095  0042CA  0E00               	movlw	0
  2096  0042CC  6E0B               	movwf	LCD_String_xy@pos^0,c
  2097  0042CE  0E5E               	movlw	low _Stemp
  2098  0042D0  6E0C               	movwf	LCD_String_xy@msg^0,c
  2099  0042D2  0E01               	movlw	high _Stemp
  2100  0042D4  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2101  0042D6  0E01               	movlw	1
  2102  0042D8  EC4D  F023         	call	_LCD_String_xy
  2103  0042DC                     
  2104                           ;Estados.c: 108:     LCD_Custom_Char(0, character1);
  2105  0042DC  0EE5               	movlw	low _character1
  2106  0042DE  6E09               	movwf	LCD_Custom_Char@msg^0,c
  2107  0042E0  0E01               	movlw	high _character1
  2108  0042E2  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  2109  0042E4  0E00               	movlw	0
  2110  0042E6  ECC1  F022         	call	_LCD_Custom_Char
  2111                           
  2112                           ;Estados.c: 109:     LCD_Command(0xc0);
  2113  0042EA  0EC0               	movlw	192
  2114  0042EC  EC50  F022         	call	_LCD_Command
  2115                           
  2116                           ;Estados.c: 110:     LCD_Char(0);
  2117  0042F0  0E00               	movlw	0
  2118  0042F2  EC76  F022         	call	_LCD_Char
  2119  0042F6  0012               	return		;funcret
  2120  0042F8                     __end_of_Rainy_State:
  2121                           	callstack 0
  2122                           
  2123 ;; *************** function _RTC_Calendario *****************
  2124 ;; Defined at:
  2125 ;;		line 79 in file "reloj.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  hours          10   57[BANK1 ] unsigned char [10]
  2130 ;;  mins           10   47[BANK1 ] unsigned char [10]
  2131 ;;  secs           10   37[BANK1 ] unsigned char [10]
  2132 ;;  year           10   27[BANK1 ] unsigned char [10]
  2133 ;;  month          10   17[BANK1 ] unsigned char [10]
  2134 ;;  date           10    7[BANK1 ] unsigned char [10]
  2135 ;;  days            7    0[BANK1 ] unsigned char [7]
  2136 ;;  AM_PM           1   67[BANK1 ] unsigned char 
  2137 ;;  Clock_type      1    0        unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2147 ;;      Params:         0       0       0       0       0       0       0       0       0
  2148 ;;      Locals:         0       0      68       0       0       0       0       0       0
  2149 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2150 ;;      Totals:         0       2      68       0       0       0       0       0       0
  2151 ;;Total ram usage:       70 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; Hardware stack levels required when called: 8
  2154 ;; This function calls:
  2155 ;;		_I2C_Init
  2156 ;;		_I2C_Stop
  2157 ;;		_LCD_Clear
  2158 ;;		_LCD_Init
  2159 ;;		_LCD_MSdelay
  2160 ;;		_LCD_String
  2161 ;;		_LCD_String_xy
  2162 ;;		_RTC_Read_Calendar
  2163 ;;		_RTC_Read_Clock
  2164 ;;		_sprintf
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text6
  2171  002734                     __ptext6:
  2172                           	callstack 0
  2173  002734                     _RTC_Calendario:
  2174                           	callstack 22
  2175  002734                     
  2176                           ;reloj.c: 85:     char AM_PM = 0x05;
  2177  002734  0E05               	movlw	5
  2178  002736  0101               	movlb	1	; () banked
  2179  002738  6FB5               	movwf	RTC_Calendario@AM_PM& (0+255),b
  2180  00273A                     
  2181                           ; BSR set to: 1
  2182                           ;reloj.c: 86:     char days[7] = {'S','M','T','W','t','F','s'};
  2183  00273A  EE21  F0CE         	lfsr	2,RTC_Calendario@F3578
  2184  00273E  EE11  F072         	lfsr	1,RTC_Calendario@days
  2185  002742  0E06               	movlw	6
  2186  002744                     u5991:
  2187  002744  CFDB FFE3          	movff	plusw2,plusw1
  2188  002748  06E8               	decf	wreg,f,c
  2189  00274A  E2FC               	bc	u5991
  2190  00274C                     
  2191                           ; BSR set to: 1
  2192                           ;reloj.c: 87:     OSCCON=0x72;
  2193  00274C  0E72               	movlw	114
  2194  00274E  6ED3               	movwf	211,c	;volatile
  2195  002750                     
  2196                           ; BSR set to: 1
  2197                           ;reloj.c: 89:     I2C_Init();
  2198  002750  ECD2  F024         	call	_I2C_Init	;wreg free
  2199  002754                     
  2200                           ;reloj.c: 90:     LCD_Init();
  2201  002754  EC68  F024         	call	_LCD_Init	;wreg free
  2202  002758                     
  2203                           ;reloj.c: 91:     LCD_Clear();
  2204  002758  ECFD  F024         	call	_LCD_Clear	;wreg free
  2205  00275C                     
  2206                           ;reloj.c: 92:     LCD_MSdelay(10);
  2207  00275C  0E00               	movlw	0
  2208  00275E  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  2209  002760  0E0A               	movlw	10
  2210  002762  6E01               	movwf	LCD_MSdelay@val^0,c
  2211  002764  EC9C  F022         	call	_LCD_MSdelay	;wreg free
  2212  002768                     
  2213                           ;reloj.c: 94:     {;reloj.c: 95:         RTC_Read_Clock(0);
  2214  002768  0E00               	movlw	0
  2215  00276A  ECE5  F022         	call	_RTC_Read_Clock
  2216  00276E                     
  2217                           ;reloj.c: 96:         if(hour & (1<<Clock_type)){
  2218  00276E  0101               	movlb	1	; () banked
  2219  002770  AD08               	btfss	_hour& (0+255),6,b
  2220  002772  EFBD  F013         	goto	u6001
  2221  002776  EFBF  F013         	goto	u6000
  2222  00277A                     u6001:
  2223  00277A  EF23  F014         	goto	l5438
  2224  00277E                     u6000:
  2225  00277E                     
  2226                           ; BSR set to: 1
  2227                           ;reloj.c: 98:             if(hour & (1<<AM_PM)){
  2228  00277E  AB08               	btfss	_hour& (0+255),5,b
  2229  002780  EFC4  F013         	goto	u6011
  2230  002784  EFC6  F013         	goto	u6010
  2231  002788                     u6011:
  2232  002788  EFD1  F013         	goto	l5422
  2233  00278C                     u6010:
  2234  00278C                     
  2235                           ; BSR set to: 1
  2236                           ;reloj.c: 99:                 LCD_String_xy(1,14,"PM");
  2237  00278C  0E0E               	movlw	14
  2238  00278E  6E0B               	movwf	LCD_String_xy@pos^0,c
  2239  002790  0E46               	movlw	low STR_1
  2240  002792  6E0C               	movwf	LCD_String_xy@msg^0,c
  2241  002794  0E08               	movlw	high STR_1
  2242  002796  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2243  002798  0E01               	movlw	1
  2244  00279A  EC4D  F023         	call	_LCD_String_xy
  2245                           
  2246                           ;reloj.c: 100:             }
  2247  00279E  EFDA  F013         	goto	l5424
  2248  0027A2                     l5422:
  2249                           
  2250                           ; BSR set to: 1
  2251                           ;reloj.c: 102:                 LCD_String_xy(1,14,"AM");
  2252  0027A2  0E0E               	movlw	14
  2253  0027A4  6E0B               	movwf	LCD_String_xy@pos^0,c
  2254  0027A6  0E43               	movlw	low STR_2
  2255  0027A8  6E0C               	movwf	LCD_String_xy@msg^0,c
  2256  0027AA  0E08               	movlw	high STR_2
  2257  0027AC  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2258  0027AE  0E01               	movlw	1
  2259  0027B0  EC4D  F023         	call	_LCD_String_xy
  2260  0027B4                     l5424:
  2261                           
  2262                           ;reloj.c: 105:             hour = hour & (0x1f);
  2263  0027B4  0E1F               	movlw	31
  2264  0027B6  0101               	movlb	1	; () banked
  2265  0027B8  1508               	andwf	_hour& (0+255),w,b
  2266  0027BA  6F08               	movwf	_hour& (0+255),b
  2267  0027BC  6B09               	clrf	(_hour+1)& (0+255),b
  2268  0027BE                     
  2269                           ; BSR set to: 1
  2270                           ;reloj.c: 106:             sprintf(secs,"%x ",sec);
  2271  0027BE  0E97               	movlw	low RTC_Calendario@secs
  2272  0027C0  0100               	movlb	0	; () banked
  2273  0027C2  6FCC               	movwf	sprintf@s& (0+255),b
  2274  0027C4  0E01               	movlw	high RTC_Calendario@secs
  2275  0027C6  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2276  0027C8  0E18               	movlw	low STR_3
  2277  0027CA  6FCE               	movwf	sprintf@fmt& (0+255),b
  2278  0027CC  0E08               	movlw	high STR_3
  2279  0027CE  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2280  0027D0  C10C  F0D0         	movff	_sec,?_sprintf+4
  2281  0027D4  C10D  F0D1         	movff	_sec+1,?_sprintf+5
  2282  0027D8  ECD6  F021         	call	_sprintf	;wreg free
  2283  0027DC                     
  2284                           ;reloj.c: 107:             sprintf(mins,"%x:",min);
  2285  0027DC  0EA1               	movlw	low RTC_Calendario@mins
  2286  0027DE  0100               	movlb	0	; () banked
  2287  0027E0  6FCC               	movwf	sprintf@s& (0+255),b
  2288  0027E2  0E01               	movlw	high RTC_Calendario@mins
  2289  0027E4  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2290  0027E6  0E20               	movlw	low STR_4
  2291  0027E8  6FCE               	movwf	sprintf@fmt& (0+255),b
  2292  0027EA  0E08               	movlw	high STR_4
  2293  0027EC  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2294  0027EE  C10A  F0D0         	movff	_min,?_sprintf+4
  2295  0027F2  C10B  F0D1         	movff	_min+1,?_sprintf+5
  2296  0027F6  ECD6  F021         	call	_sprintf	;wreg free
  2297  0027FA                     
  2298                           ;reloj.c: 108:             sprintf(hours,"%x:",hour);
  2299  0027FA  0EAB               	movlw	low RTC_Calendario@hours
  2300  0027FC  0100               	movlb	0	; () banked
  2301  0027FE  6FCC               	movwf	sprintf@s& (0+255),b
  2302  002800  0E01               	movlw	high RTC_Calendario@hours
  2303  002802  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2304  002804  0E20               	movlw	low STR_4
  2305  002806  6FCE               	movwf	sprintf@fmt& (0+255),b
  2306  002808  0E08               	movlw	high STR_4
  2307  00280A  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2308  00280C  C108  F0D0         	movff	_hour,?_sprintf+4
  2309  002810  C109  F0D1         	movff	_hour+1,?_sprintf+5
  2310  002814  ECD6  F021         	call	_sprintf	;wreg free
  2311  002818                     
  2312                           ;reloj.c: 109:             LCD_String_xy(0,4,hours);
  2313  002818  0E04               	movlw	4
  2314  00281A  6E0B               	movwf	LCD_String_xy@pos^0,c
  2315  00281C  0EAB               	movlw	low RTC_Calendario@hours
  2316  00281E  6E0C               	movwf	LCD_String_xy@msg^0,c
  2317  002820  0E01               	movlw	high RTC_Calendario@hours
  2318  002822  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2319  002824  0E00               	movlw	0
  2320  002826  EC4D  F023         	call	_LCD_String_xy
  2321  00282A                     l5434:
  2322                           
  2323                           ;reloj.c: 110:             LCD_String(mins);
  2324  00282A  0EA1               	movlw	low RTC_Calendario@mins
  2325  00282C  6E09               	movwf	LCD_String@msg^0,c
  2326  00282E  0E01               	movlw	high RTC_Calendario@mins
  2327  002830  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2328  002832  ECF2  F020         	call	_LCD_String	;wreg free
  2329  002836                     
  2330                           ;reloj.c: 111:             LCD_String(secs);
  2331  002836  0E97               	movlw	low RTC_Calendario@secs
  2332  002838  6E09               	movwf	LCD_String@msg^0,c
  2333  00283A  0E01               	movlw	high RTC_Calendario@secs
  2334  00283C  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2335  00283E  ECF2  F020         	call	_LCD_String	;wreg free
  2336                           
  2337                           ;reloj.c: 112:         }
  2338  002842  EF5F  F014         	goto	l5452
  2339  002846                     l5438:
  2340                           
  2341                           ; BSR set to: 1
  2342                           ;reloj.c: 115:             hour = hour & (0x3f);
  2343  002846  0E3F               	movlw	63
  2344  002848  1508               	andwf	_hour& (0+255),w,b
  2345  00284A  6F08               	movwf	_hour& (0+255),b
  2346  00284C  6B09               	clrf	(_hour+1)& (0+255),b
  2347  00284E                     
  2348                           ; BSR set to: 1
  2349                           ;reloj.c: 116:             sprintf(secs,"%x ",sec);
  2350  00284E  0E97               	movlw	low RTC_Calendario@secs
  2351  002850  0100               	movlb	0	; () banked
  2352  002852  6FCC               	movwf	sprintf@s& (0+255),b
  2353  002854  0E01               	movlw	high RTC_Calendario@secs
  2354  002856  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2355  002858  0E18               	movlw	low STR_3
  2356  00285A  6FCE               	movwf	sprintf@fmt& (0+255),b
  2357  00285C  0E08               	movlw	high STR_3
  2358  00285E  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2359  002860  C10C  F0D0         	movff	_sec,?_sprintf+4
  2360  002864  C10D  F0D1         	movff	_sec+1,?_sprintf+5
  2361  002868  ECD6  F021         	call	_sprintf	;wreg free
  2362  00286C                     
  2363                           ;reloj.c: 117:             sprintf(mins,"%x:",min);
  2364  00286C  0EA1               	movlw	low RTC_Calendario@mins
  2365  00286E  0100               	movlb	0	; () banked
  2366  002870  6FCC               	movwf	sprintf@s& (0+255),b
  2367  002872  0E01               	movlw	high RTC_Calendario@mins
  2368  002874  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2369  002876  0E20               	movlw	low STR_4
  2370  002878  6FCE               	movwf	sprintf@fmt& (0+255),b
  2371  00287A  0E08               	movlw	high STR_4
  2372  00287C  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2373  00287E  C10A  F0D0         	movff	_min,?_sprintf+4
  2374  002882  C10B  F0D1         	movff	_min+1,?_sprintf+5
  2375  002886  ECD6  F021         	call	_sprintf	;wreg free
  2376  00288A                     
  2377                           ;reloj.c: 118:             sprintf(hours,"%x:",hour);
  2378  00288A  0EAB               	movlw	low RTC_Calendario@hours
  2379  00288C  0100               	movlb	0	; () banked
  2380  00288E  6FCC               	movwf	sprintf@s& (0+255),b
  2381  002890  0E01               	movlw	high RTC_Calendario@hours
  2382  002892  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2383  002894  0E20               	movlw	low STR_4
  2384  002896  6FCE               	movwf	sprintf@fmt& (0+255),b
  2385  002898  0E08               	movlw	high STR_4
  2386  00289A  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2387  00289C  C108  F0D0         	movff	_hour,?_sprintf+4
  2388  0028A0  C109  F0D1         	movff	_hour+1,?_sprintf+5
  2389  0028A4  ECD6  F021         	call	_sprintf	;wreg free
  2390  0028A8                     
  2391                           ;reloj.c: 119:             LCD_String_xy(0,4,hours);
  2392  0028A8  0E04               	movlw	4
  2393  0028AA  6E0B               	movwf	LCD_String_xy@pos^0,c
  2394  0028AC  0EAB               	movlw	low RTC_Calendario@hours
  2395  0028AE  6E0C               	movwf	LCD_String_xy@msg^0,c
  2396  0028B0  0E01               	movlw	high RTC_Calendario@hours
  2397  0028B2  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2398  0028B4  0E00               	movlw	0
  2399  0028B6  EC4D  F023         	call	_LCD_String_xy
  2400  0028BA  EF15  F014         	goto	l5434
  2401  0028BE                     l5452:
  2402                           
  2403                           ;reloj.c: 124:         RTC_Read_Calendar(3);
  2404  0028BE  0E03               	movlw	3
  2405  0028C0  EC7C  F021         	call	_RTC_Read_Calendar
  2406  0028C4                     
  2407                           ;reloj.c: 125:         I2C_Stop();
  2408  0028C4  ECDF  F024         	call	_I2C_Stop	;wreg free
  2409  0028C8                     
  2410                           ;reloj.c: 126:         sprintf(date,"%x-",Date);
  2411  0028C8  0E79               	movlw	low RTC_Calendario@date
  2412  0028CA  0100               	movlb	0	; () banked
  2413  0028CC  6FCC               	movwf	sprintf@s& (0+255),b
  2414  0028CE  0E01               	movlw	high RTC_Calendario@date
  2415  0028D0  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2416  0028D2  0E1C               	movlw	low STR_9
  2417  0028D4  6FCE               	movwf	sprintf@fmt& (0+255),b
  2418  0028D6  0E08               	movlw	high STR_9
  2419  0028D8  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2420  0028DA  C104  F0D0         	movff	_Date,?_sprintf+4
  2421  0028DE  C105  F0D1         	movff	_Date+1,?_sprintf+5
  2422  0028E2  ECD6  F021         	call	_sprintf	;wreg free
  2423  0028E6                     
  2424                           ;reloj.c: 127:         sprintf(month,"%x-",Month);
  2425  0028E6  0E83               	movlw	low RTC_Calendario@month
  2426  0028E8  0100               	movlb	0	; () banked
  2427  0028EA  6FCC               	movwf	sprintf@s& (0+255),b
  2428  0028EC  0E01               	movlw	high RTC_Calendario@month
  2429  0028EE  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2430  0028F0  0E1C               	movlw	low STR_9
  2431  0028F2  6FCE               	movwf	sprintf@fmt& (0+255),b
  2432  0028F4  0E08               	movlw	high STR_9
  2433  0028F6  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2434  0028F8  C102  F0D0         	movff	_Month,?_sprintf+4
  2435  0028FC  C103  F0D1         	movff	_Month+1,?_sprintf+5
  2436  002900  ECD6  F021         	call	_sprintf	;wreg free
  2437  002904                     
  2438                           ;reloj.c: 128:         sprintf(year,"%x ",Year);
  2439  002904  0E8D               	movlw	low RTC_Calendario@year
  2440  002906  0100               	movlb	0	; () banked
  2441  002908  6FCC               	movwf	sprintf@s& (0+255),b
  2442  00290A  0E01               	movlw	high RTC_Calendario@year
  2443  00290C  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  2444  00290E  0E18               	movlw	low STR_3
  2445  002910  6FCE               	movwf	sprintf@fmt& (0+255),b
  2446  002912  0E08               	movlw	high STR_3
  2447  002914  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  2448  002916  C100  F0D0         	movff	_Year,?_sprintf+4
  2449  00291A  C101  F0D1         	movff	_Year+1,?_sprintf+5
  2450  00291E  ECD6  F021         	call	_sprintf	;wreg free
  2451  002922                     
  2452                           ;reloj.c: 129:         LCD_String_xy(2,2,date);
  2453  002922  0E02               	movlw	2
  2454  002924  6E0B               	movwf	LCD_String_xy@pos^0,c
  2455  002926  0E79               	movlw	low RTC_Calendario@date
  2456  002928  6E0C               	movwf	LCD_String_xy@msg^0,c
  2457  00292A  0E01               	movlw	high RTC_Calendario@date
  2458  00292C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2459  00292E  0E02               	movlw	2
  2460  002930  EC4D  F023         	call	_LCD_String_xy
  2461  002934                     
  2462                           ;reloj.c: 130:         LCD_String(month);
  2463  002934  0E83               	movlw	low RTC_Calendario@month
  2464  002936  6E09               	movwf	LCD_String@msg^0,c
  2465  002938  0E01               	movlw	high RTC_Calendario@month
  2466  00293A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2467  00293C  ECF2  F020         	call	_LCD_String	;wreg free
  2468  002940                     
  2469                           ;reloj.c: 131:         LCD_String(year);
  2470  002940  0E8D               	movlw	low RTC_Calendario@year
  2471  002942  6E09               	movwf	LCD_String@msg^0,c
  2472  002944  0E01               	movlw	high RTC_Calendario@year
  2473  002946  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2474  002948  ECF2  F020         	call	_LCD_String	;wreg free
  2475                           
  2476                           ;reloj.c: 134:         switch(days[Day])
  2477  00294C  EFE0  F014         	goto	l5512
  2478  002950                     l5468:
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;reloj.c: 137:                         LCD_String("Sun");
  2482  002950  0E34               	movlw	low STR_12
  2483  002952  6E09               	movwf	LCD_String@msg^0,c
  2484  002954  0E08               	movlw	high STR_12
  2485  002956  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2486  002958  ECF2  F020         	call	_LCD_String	;wreg free
  2487  00295C  EF11  F015         	goto	l328
  2488  002960                     l5474:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;reloj.c: 141:                         LCD_String("Mon");
  2492  002960  0E30               	movlw	low STR_13
  2493  002962  6E09               	movwf	LCD_String@msg^0,c
  2494  002964  0E08               	movlw	high STR_13
  2495  002966  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2496  002968  ECF2  F020         	call	_LCD_String	;wreg free
  2497  00296C  EF11  F015         	goto	l328
  2498  002970                     l5480:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;reloj.c: 145:                         LCD_String("Tue");
  2502  002970  0E28               	movlw	low STR_14
  2503  002972  6E09               	movwf	LCD_String@msg^0,c
  2504  002974  0E08               	movlw	high STR_14
  2505  002976  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2506  002978  ECF2  F020         	call	_LCD_String	;wreg free
  2507  00297C  EF11  F015         	goto	l328
  2508  002980                     l5486:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;reloj.c: 149:                         LCD_String("Wed");
  2512  002980  0E24               	movlw	low STR_15
  2513  002982  6E09               	movwf	LCD_String@msg^0,c
  2514  002984  0E08               	movlw	high STR_15
  2515  002986  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2516  002988  ECF2  F020         	call	_LCD_String	;wreg free
  2517  00298C  EF11  F015         	goto	l328
  2518  002990                     l5492:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;reloj.c: 153:                         LCD_String("Thu");
  2522  002990  0E3C               	movlw	low STR_16
  2523  002992  6E09               	movwf	LCD_String@msg^0,c
  2524  002994  0E08               	movlw	high STR_16
  2525  002996  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2526  002998  ECF2  F020         	call	_LCD_String	;wreg free
  2527  00299C  EF11  F015         	goto	l328
  2528  0029A0                     l5498:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;reloj.c: 157:                         LCD_String("Fri");
  2532  0029A0  0E2C               	movlw	low STR_17
  2533  0029A2  6E09               	movwf	LCD_String@msg^0,c
  2534  0029A4  0E08               	movlw	high STR_17
  2535  0029A6  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2536  0029A8  ECF2  F020         	call	_LCD_String	;wreg free
  2537  0029AC  EF11  F015         	goto	l328
  2538  0029B0                     l5504:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;reloj.c: 161:                         LCD_String("Sat");
  2542  0029B0  0E38               	movlw	low STR_18
  2543  0029B2  6E09               	movwf	LCD_String@msg^0,c
  2544  0029B4  0E08               	movlw	high STR_18
  2545  0029B6  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2546  0029B8  ECF2  F020         	call	_LCD_String	;wreg free
  2547  0029BC  EF11  F015         	goto	l328
  2548  0029C0                     l5512:
  2549  0029C0  0E72               	movlw	low RTC_Calendario@days
  2550  0029C2  0101               	movlb	1	; () banked
  2551  0029C4  2506               	addwf	_Day& (0+255),w,b
  2552  0029C6  6ED9               	movwf	fsr2l,c
  2553  0029C8  0E01               	movlw	high RTC_Calendario@days
  2554  0029CA  2107               	addwfc	(_Day+1)& (0+255),w,b
  2555  0029CC  6EDA               	movwf	fsr2h,c
  2556  0029CE  50DF               	movf	indf2,w,c
  2557  0029D0  0100               	movlb	0	; () banked
  2558  0029D2  6FDC               	movwf	??_RTC_Calendario& (0+255),b
  2559  0029D4  6BDD               	clrf	(??_RTC_Calendario+1)& (0+255),b
  2560                           
  2561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2562                           ; Switch size 1, requested type "simple"
  2563                           ; Number of cases is 1, Range of values is 0 to 0
  2564                           ; switch strategies available:
  2565                           ; Name         Instructions Cycles
  2566                           ; simple_byte            4     3 (average)
  2567                           ;	Chosen strategy is simple_byte
  2568  0029D6  51DD               	movf	(??_RTC_Calendario+1)& (0+255),w,b
  2569  0029D8  0A00               	xorlw	0	; case 0
  2570  0029DA  B4D8               	btfsc	status,2,c
  2571  0029DC  EFF2  F014         	goto	l5718
  2572  0029E0  EF11  F015         	goto	l328
  2573  0029E4                     l5718:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ; Switch size 1, requested type "simple"
  2577                           ; Number of cases is 7, Range of values is 70 to 116
  2578                           ; switch strategies available:
  2579                           ; Name         Instructions Cycles
  2580                           ; simple_byte           22    12 (average)
  2581                           ;	Chosen strategy is simple_byte
  2582  0029E4  51DC               	movf	??_RTC_Calendario& (0+255),w,b
  2583  0029E6  0A46               	xorlw	70	; case 70
  2584  0029E8  B4D8               	btfsc	status,2,c
  2585  0029EA  EFD0  F014         	goto	l5498
  2586  0029EE  0A0B               	xorlw	11	; case 77
  2587  0029F0  B4D8               	btfsc	status,2,c
  2588  0029F2  EFB0  F014         	goto	l5474
  2589  0029F6  0A1E               	xorlw	30	; case 83
  2590  0029F8  B4D8               	btfsc	status,2,c
  2591  0029FA  EFA8  F014         	goto	l5468
  2592  0029FE  0A07               	xorlw	7	; case 84
  2593  002A00  B4D8               	btfsc	status,2,c
  2594  002A02  EFB8  F014         	goto	l5480
  2595  002A06  0A03               	xorlw	3	; case 87
  2596  002A08  B4D8               	btfsc	status,2,c
  2597  002A0A  EFC0  F014         	goto	l5486
  2598  002A0E  0A24               	xorlw	36	; case 115
  2599  002A10  B4D8               	btfsc	status,2,c
  2600  002A12  EFD8  F014         	goto	l5504
  2601  002A16  0A07               	xorlw	7	; case 116
  2602  002A18  B4D8               	btfsc	status,2,c
  2603  002A1A  EFC8  F014         	goto	l5492
  2604  002A1E  EF11  F015         	goto	l328
  2605  002A22                     l328:
  2606  002A22  0012               	return		;funcret
  2607  002A24                     __end_of_RTC_Calendario:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _RTC_Read_Clock *****************
  2611 ;; Defined at:
  2612 ;;		line 28 in file "reloj.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  read_clock_a    1    wreg     unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0
  2627 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2628 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2629 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2630 ;;Total ram usage:        2 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 3
  2633 ;; This function calls:
  2634 ;;		_I2C_Read
  2635 ;;		_I2C_Repeated_Start
  2636 ;;		_I2C_Start
  2637 ;;		_I2C_Write
  2638 ;; This function is called by:
  2639 ;;		_RTC_Calendario
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text7
  2644  0045CA                     __ptext7:
  2645                           	callstack 0
  2646  0045CA                     _RTC_Read_Clock:
  2647                           	callstack 26
  2648                           
  2649                           ;incstack = 0
  2650                           ;RTC_Read_Clock@read_clock_address stored from wreg
  2651  0045CA  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  2652  0045CC                     
  2653                           ;reloj.c: 28: void RTC_Read_Clock(char read_clock_address);reloj.c: 29: {;reloj.c: 30:  
      +                             I2C_Start(0xD0);
  2654  0045CC  0ED0               	movlw	208
  2655  0045CE  EC80  F024         	call	_I2C_Start
  2656                           
  2657                           ;reloj.c: 31:     I2C_Write(read_clock_address);
  2658  0045D2  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  2659  0045D4  ECC1  F024         	call	_I2C_Write
  2660                           
  2661                           ;reloj.c: 32:     I2C_Repeated_Start(0xD1);
  2662  0045D8  0ED1               	movlw	209
  2663  0045DA  EC97  F024         	call	_I2C_Repeated_Start
  2664  0045DE                     
  2665                           ;reloj.c: 33:     sec = I2C_Read(0);
  2666  0045DE  0E00               	movlw	0
  2667  0045E0  EC8B  F023         	call	_I2C_Read
  2668  0045E4  6E03               	movwf	??_RTC_Read_Clock^0,c
  2669  0045E6  5003               	movf	??_RTC_Read_Clock^0,w,c
  2670  0045E8  0101               	movlb	1	; () banked
  2671  0045EA  6F0C               	movwf	_sec& (0+255),b
  2672  0045EC  6B0D               	clrf	(_sec+1)& (0+255),b
  2673  0045EE                     
  2674                           ; BSR set to: 1
  2675                           ;reloj.c: 34:     min = I2C_Read(0);
  2676  0045EE  0E00               	movlw	0
  2677  0045F0  EC8B  F023         	call	_I2C_Read
  2678  0045F4  6E03               	movwf	??_RTC_Read_Clock^0,c
  2679  0045F6  5003               	movf	??_RTC_Read_Clock^0,w,c
  2680  0045F8  0101               	movlb	1	; () banked
  2681  0045FA  6F0A               	movwf	_min& (0+255),b
  2682  0045FC  6B0B               	clrf	(_min+1)& (0+255),b
  2683  0045FE                     
  2684                           ; BSR set to: 1
  2685                           ;reloj.c: 35:     hour= I2C_Read(1);
  2686  0045FE  0E01               	movlw	1
  2687  004600  EC8B  F023         	call	_I2C_Read
  2688  004604  6E03               	movwf	??_RTC_Read_Clock^0,c
  2689  004606  5003               	movf	??_RTC_Read_Clock^0,w,c
  2690  004608  0101               	movlb	1	; () banked
  2691  00460A  6F08               	movwf	_hour& (0+255),b
  2692  00460C  6B09               	clrf	(_hour+1)& (0+255),b
  2693  00460E                     
  2694                           ; BSR set to: 1
  2695  00460E  0012               	return		;funcret
  2696  004610                     __end_of_RTC_Read_Clock:
  2697                           	callstack 0
  2698                           
  2699 ;; *************** function _RTC_Read_Calendar *****************
  2700 ;; Defined at:
  2701 ;;		line 51 in file "reloj.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  read_calenda    1    wreg     unsigned char 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  read_calenda    1    3[COMRAM] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        2 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 3
  2722 ;; This function calls:
  2723 ;;		_I2C_Read
  2724 ;;		_I2C_Repeated_Start
  2725 ;;		_I2C_Start
  2726 ;;		_I2C_Stop
  2727 ;;		_I2C_Write
  2728 ;; This function is called by:
  2729 ;;		_RTC_Calendario
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text8
  2734  0042F8                     __ptext8:
  2735                           	callstack 0
  2736  0042F8                     _RTC_Read_Calendar:
  2737                           	callstack 26
  2738                           
  2739                           ; BSR set to: 1
  2740                           ;incstack = 0
  2741                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  2742  0042F8  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  2743  0042FA                     
  2744                           ;reloj.c: 51: void RTC_Read_Calendar(char read_calendar_address);reloj.c: 52: {;reloj.c:
      +                           53:     I2C_Start(0xD0);
  2745  0042FA  0ED0               	movlw	208
  2746  0042FC  EC80  F024         	call	_I2C_Start
  2747                           
  2748                           ;reloj.c: 54:     I2C_Write(read_calendar_address);
  2749  004300  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  2750  004302  ECC1  F024         	call	_I2C_Write
  2751                           
  2752                           ;reloj.c: 55:     I2C_Repeated_Start(0xD1);
  2753  004306  0ED1               	movlw	209
  2754  004308  EC97  F024         	call	_I2C_Repeated_Start
  2755  00430C                     
  2756                           ;reloj.c: 56:     Day = I2C_Read(0);
  2757  00430C  0E00               	movlw	0
  2758  00430E  EC8B  F023         	call	_I2C_Read
  2759  004312  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2760  004314  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2761  004316  0101               	movlb	1	; () banked
  2762  004318  6F06               	movwf	_Day& (0+255),b
  2763  00431A  6B07               	clrf	(_Day+1)& (0+255),b
  2764  00431C                     
  2765                           ; BSR set to: 1
  2766                           ;reloj.c: 57:     Date = I2C_Read(0);
  2767  00431C  0E00               	movlw	0
  2768  00431E  EC8B  F023         	call	_I2C_Read
  2769  004322  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2770  004324  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2771  004326  0101               	movlb	1	; () banked
  2772  004328  6F04               	movwf	_Date& (0+255),b
  2773  00432A  6B05               	clrf	(_Date+1)& (0+255),b
  2774  00432C                     
  2775                           ; BSR set to: 1
  2776                           ;reloj.c: 58:     Month = I2C_Read(0);
  2777  00432C  0E00               	movlw	0
  2778  00432E  EC8B  F023         	call	_I2C_Read
  2779  004332  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2780  004334  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2781  004336  0101               	movlb	1	; () banked
  2782  004338  6F02               	movwf	_Month& (0+255),b
  2783  00433A  6B03               	clrf	(_Month+1)& (0+255),b
  2784  00433C                     
  2785                           ; BSR set to: 1
  2786                           ;reloj.c: 59:     Year = I2C_Read(1);
  2787  00433C  0E01               	movlw	1
  2788  00433E  EC8B  F023         	call	_I2C_Read
  2789  004342  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2790  004344  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2791  004346  0101               	movlb	1	; () banked
  2792  004348  6F00               	movwf	_Year& (0+255),b
  2793  00434A  6B01               	clrf	(_Year+1)& (0+255),b
  2794  00434C                     
  2795                           ; BSR set to: 1
  2796                           ;reloj.c: 60:     I2C_Stop();
  2797  00434C  ECDF  F024         	call	_I2C_Stop	;wreg free
  2798  004350  0012               	return		;funcret
  2799  004352                     __end_of_RTC_Read_Calendar:
  2800                           	callstack 0
  2801                           
  2802 ;; *************** function _I2C_Stop *****************
  2803 ;; Defined at:
  2804 ;;		line 186 in file "Reloj_ar.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      unsigned char 
  2811 ;; Registers used:
  2812 ;;		wreg
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		_RTC_Read_Calendar
  2828 ;;		_RTC_Calendario
  2829 ;;		_I2C_Start_Wait
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text9
  2834  0049BE                     __ptext9:
  2835                           	callstack 0
  2836  0049BE                     _I2C_Stop:
  2837                           	callstack 28
  2838  0049BE                     
  2839                           ;Reloj_ar.c: 188:     PEN = 1;
  2840  0049BE  84C5               	bsf	4037,2,c	;volatile
  2841  0049C0                     l429:
  2842  0049C0  B4C5               	btfsc	4037,2,c	;volatile
  2843  0049C2  EFE5  F024         	goto	u5821
  2844  0049C6  EFE7  F024         	goto	u5820
  2845  0049CA                     u5821:
  2846  0049CA  EFE0  F024         	goto	l429
  2847  0049CE                     u5820:
  2848  0049CE                     
  2849                           ;Reloj_ar.c: 190:     if(!SSPSTATbits.P);
  2850  0049CE  50C7               	movf	199,w,c	;volatile
  2851  0049D0  0012               	return		;funcret
  2852  0049D2                     __end_of_I2C_Stop:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function _I2C_Start *****************
  2856 ;; Defined at:
  2857 ;;		line 134 in file "Reloj_ar.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  slave_write_    1    wreg     unsigned char 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  slave_write_    1    1[COMRAM] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      unsigned char 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2871 ;;      Params:         0       0       0       0       0       0       0       0       0
  2872 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2874 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2875 ;;Total ram usage:        1 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; Hardware stack levels required when called: 2
  2878 ;; This function calls:
  2879 ;;		_I2C_Write
  2880 ;; This function is called by:
  2881 ;;		_RTC_Read_Clock
  2882 ;;		_RTC_Read_Calendar
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text10
  2887  004900                     __ptext10:
  2888                           	callstack 0
  2889  004900                     _I2C_Start:
  2890                           	callstack 26
  2891                           
  2892                           ;incstack = 0
  2893                           ;I2C_Start@slave_write_address stored from wreg
  2894  004900  6E02               	movwf	I2C_Start@slave_write_address^0,c
  2895  004902                     
  2896                           ;Reloj_ar.c: 134: char I2C_Start(char slave_write_address);Reloj_ar.c: 135: {;Reloj_ar.c
      +                          : 136:     SSPCON2bits.SEN=1;
  2897  004902  80C5               	bsf	197,0,c	;volatile
  2898  004904                     l413:
  2899  004904  B0C5               	btfsc	197,0,c	;volatile
  2900  004906  EF87  F024         	goto	u5761
  2901  00490A  EF89  F024         	goto	u5760
  2902  00490E                     u5761:
  2903  00490E  EF82  F024         	goto	l413
  2904  004912                     u5760:
  2905  004912                     
  2906                           ;Reloj_ar.c: 138:  SSPIF=0;
  2907  004912  969E               	bcf	3998,3,c	;volatile
  2908                           
  2909                           ;Reloj_ar.c: 139:     if(!SSPSTATbits.S)
  2910  004914  B6C7               	btfsc	199,3,c	;volatile
  2911  004916  EF8F  F024         	goto	u5771
  2912  00491A  EF91  F024         	goto	u5770
  2913  00491E                     u5771:
  2914  00491E  EF93  F024         	goto	l5174
  2915  004922                     u5770:
  2916  004922  EF96  F024         	goto	l417
  2917  004926                     l5174:
  2918                           
  2919                           ;Reloj_ar.c: 141:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Sta
      +                          rt is never used
  2920  004926  5002               	movf	I2C_Start@slave_write_address^0,w,c
  2921  004928  ECC1  F024         	call	_I2C_Write
  2922  00492C                     l417:
  2923  00492C  0012               	return		;funcret
  2924  00492E                     __end_of_I2C_Start:
  2925                           	callstack 0
  2926                           
  2927 ;; *************** function _I2C_Repeated_Start *****************
  2928 ;; Defined at:
  2929 ;;		line 159 in file "Reloj_ar.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  slave_read_a    1    wreg     unsigned char 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      unsigned char 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2943 ;;      Params:         0       0       0       0       0       0       0       0       0
  2944 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2946 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2947 ;;Total ram usage:        1 bytes
  2948 ;; Hardware stack levels used: 1
  2949 ;; Hardware stack levels required when called: 2
  2950 ;; This function calls:
  2951 ;;		_I2C_Write
  2952 ;; This function is called by:
  2953 ;;		_RTC_Read_Clock
  2954 ;;		_RTC_Read_Calendar
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text11
  2959  00492E                     __ptext11:
  2960                           	callstack 0
  2961  00492E                     _I2C_Repeated_Start:
  2962                           	callstack 26
  2963                           
  2964                           ;incstack = 0
  2965                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  2966  00492E  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  2967  004930                     
  2968                           ;Reloj_ar.c: 159: char I2C_Repeated_Start(char slave_read_address);Reloj_ar.c: 160: {;Re
      +                          loj_ar.c: 161:     RSEN = 1;
  2969  004930  82C5               	bsf	4037,1,c	;volatile
  2970  004932                     l420:
  2971  004932  B2C5               	btfsc	4037,1,c	;volatile
  2972  004934  EF9E  F024         	goto	u5781
  2973  004938  EFA0  F024         	goto	u5780
  2974  00493C                     u5781:
  2975  00493C  EF99  F024         	goto	l420
  2976  004940                     u5780:
  2977  004940                     
  2978                           ;Reloj_ar.c: 163:     SSPIF = 0;
  2979  004940  969E               	bcf	3998,3,c	;volatile
  2980                           
  2981                           ;Reloj_ar.c: 164:  if(!SSPSTATbits.S)
  2982  004942  B6C7               	btfsc	199,3,c	;volatile
  2983  004944  EFA6  F024         	goto	u5791
  2984  004948  EFA8  F024         	goto	u5790
  2985  00494C                     u5791:
  2986  00494C  EFAA  F024         	goto	l5182
  2987  004950                     u5790:
  2988  004950  EFAD  F024         	goto	l424
  2989  004954                     l5182:
  2990                           
  2991                           ;Reloj_ar.c: 166:     I2C_Write(slave_read_address);
  2992  004954  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  2993  004956  ECC1  F024         	call	_I2C_Write
  2994  00495A                     l424:
  2995  00495A  0012               	return		;funcret
  2996  00495C                     __end_of_I2C_Repeated_Start:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _I2C_Write *****************
  3000 ;; Defined at:
  3001 ;;		line 208 in file "Reloj_ar.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  data            1    wreg     unsigned char 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  data            1    0[COMRAM] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      unsigned char 
  3008 ;; Registers used:
  3009 ;;		wreg, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0
  3016 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3018 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3019 ;;Total ram usage:        1 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 1
  3022 ;; This function calls:
  3023 ;;		_I2C_Ready
  3024 ;; This function is called by:
  3025 ;;		_RTC_Read_Clock
  3026 ;;		_RTC_Read_Calendar
  3027 ;;		_I2C_Start
  3028 ;;		_I2C_Repeated_Start
  3029 ;;		_I2C_Start_Wait
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text12
  3034  004982                     __ptext12:
  3035                           	callstack 0
  3036  004982                     _I2C_Write:
  3037                           	callstack 27
  3038                           
  3039                           ;incstack = 0
  3040                           ;I2C_Write@data stored from wreg
  3041  004982  6E01               	movwf	I2C_Write@data^0,c
  3042  004984                     
  3043                           ;Reloj_ar.c: 208: char I2C_Write(unsigned char data);Reloj_ar.c: 209: {;Reloj_ar.c: 210:
      +                                 SSPBUF = data;
  3044  004984  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  3045  004988                     
  3046                           ;Reloj_ar.c: 211:       I2C_Ready();
  3047  004988  EC07  F025         	call	_I2C_Ready	;wreg free
  3048  00498C                     
  3049                           ;Reloj_ar.c: 212:       if (ACKSTAT)
  3050  00498C  ACC5               	btfss	4037,6,c	;volatile
  3051  00498E  EFCB  F024         	goto	u5491
  3052  004992  EFCD  F024         	goto	u5490
  3053  004996                     u5491:
  3054  004996  EFD0  F024         	goto	l4960
  3055  00499A                     u5490:
  3056  00499A                     
  3057                           ;Reloj_ar.c: 213:         return 1;
  3058  00499A  0E01               	movlw	1
  3059  00499C  EFD1  F024         	goto	l437
  3060  0049A0                     l4960:
  3061                           
  3062                           ;Reloj_ar.c: 215:         return 2;
  3063  0049A0  0E02               	movlw	2
  3064  0049A2                     l437:
  3065  0049A2  0012               	return		;funcret
  3066  0049A4                     __end_of_I2C_Write:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _I2C_Read *****************
  3070 ;; Defined at:
  3071 ;;		line 27 in file "Reloj_ar.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  flag            1    wreg     unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  flag            1    0[COMRAM] unsigned char 
  3076 ;;  buffer          1    1[COMRAM] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      unsigned char 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0
  3087 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3089 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3090 ;;Total ram usage:        2 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 1
  3093 ;; This function calls:
  3094 ;;		_I2C_Ack
  3095 ;;		_I2C_Nack
  3096 ;;		_I2C_Ready
  3097 ;; This function is called by:
  3098 ;;		_RTC_Read_Clock
  3099 ;;		_RTC_Read_Calendar
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text13
  3104  004716                     __ptext13:
  3105                           	callstack 0
  3106  004716                     _I2C_Read:
  3107                           	callstack 27
  3108                           
  3109                           ;incstack = 0
  3110                           ;I2C_Read@flag stored from wreg
  3111  004716  6E01               	movwf	I2C_Read@flag^0,c
  3112  004718                     
  3113                           ;Reloj_ar.c: 27: char I2C_Read(char flag);Reloj_ar.c: 29: {;Reloj_ar.c: 30:         char
      +                           buffer;;Reloj_ar.c: 31:         RCEN = 1;
  3114  004718  86C5               	bsf	4037,3,c	;volatile
  3115  00471A                     l385:
  3116  00471A  A0C7               	btfss	199,0,c	;volatile
  3117  00471C  EF92  F023         	goto	u5801
  3118  004720  EF94  F023         	goto	u5800
  3119  004724                     u5801:
  3120  004724  EF8D  F023         	goto	l385
  3121  004728                     u5800:
  3122  004728                     
  3123                           ;Reloj_ar.c: 34:         buffer = SSPBUF;
  3124  004728  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3125  00472C                     
  3126                           ;Reloj_ar.c: 36:         if(flag==0)
  3127  00472C  5001               	movf	I2C_Read@flag^0,w,c
  3128  00472E  A4D8               	btfss	status,2,c
  3129  004730  EF9C  F023         	goto	u5811
  3130  004734  EF9E  F023         	goto	u5810
  3131  004738                     u5811:
  3132  004738  EFA2  F023         	goto	l5196
  3133  00473C                     u5810:
  3134  00473C                     
  3135                           ;Reloj_ar.c: 37:             I2C_Ack();
  3136  00473C  ECF3  F024         	call	_I2C_Ack	;wreg free
  3137  004740  EFA4  F023         	goto	l389
  3138  004744                     l5196:
  3139                           
  3140                           ;Reloj_ar.c: 39:             I2C_Nack();
  3141  004744  ECE9  F024         	call	_I2C_Nack	;wreg free
  3142  004748                     l389:
  3143                           
  3144                           ;Reloj_ar.c: 40:         I2C_Ready();
  3145  004748  EC07  F025         	call	_I2C_Ready	;wreg free
  3146  00474C                     
  3147                           ;Reloj_ar.c: 41:         return(buffer);
  3148  00474C  5002               	movf	I2C_Read@buffer^0,w,c
  3149  00474E  0012               	return		;funcret
  3150  004750                     __end_of_I2C_Read:
  3151                           	callstack 0
  3152                           
  3153 ;; *************** function _I2C_Ready *****************
  3154 ;; Defined at:
  3155 ;;		line 83 in file "Reloj_ar.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		None
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3169 ;;      Params:         0       0       0       0       0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3172 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3173 ;;Total ram usage:        0 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_I2C_Read
  3179 ;;		_I2C_Write
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text14
  3184  004A0E                     __ptext14:
  3185                           	callstack 0
  3186  004A0E                     _I2C_Ready:
  3187                           	callstack 27
  3188  004A0E                     l396:
  3189  004A0E  A69E               	btfss	3998,3,c	;volatile
  3190  004A10  EF0C  F025         	goto	u4641
  3191  004A14  EF0E  F025         	goto	u4640
  3192  004A18                     u4641:
  3193  004A18  EF07  F025         	goto	l396
  3194  004A1C                     u4640:
  3195  004A1C                     
  3196                           ;Reloj_ar.c: 86:     SSPIF=0;
  3197  004A1C  969E               	bcf	3998,3,c	;volatile
  3198  004A1E  0012               	return		;funcret
  3199  004A20                     __end_of_I2C_Ready:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _I2C_Nack *****************
  3203 ;; Defined at:
  3204 ;;		line 250 in file "Reloj_ar.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		None
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3218 ;;      Params:         0       0       0       0       0       0       0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3221 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3222 ;;Total ram usage:        0 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_I2C_Read
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text15
  3232  0049D2                     __ptext15:
  3233                           	callstack 0
  3234  0049D2                     _I2C_Nack:
  3235                           	callstack 27
  3236  0049D2                     
  3237                           ;Reloj_ar.c: 252:     ACKDT=1;
  3238  0049D2  8AC5               	bsf	4037,5,c	;volatile
  3239                           
  3240                           ;Reloj_ar.c: 253:  ACKEN=1;
  3241  0049D4  88C5               	bsf	4037,4,c	;volatile
  3242  0049D6                     l447:
  3243  0049D6  B8C5               	btfsc	4037,4,c	;volatile
  3244  0049D8  EFF0  F024         	goto	u5511
  3245  0049DC  EFF2  F024         	goto	u5510
  3246  0049E0                     u5511:
  3247  0049E0  EFEB  F024         	goto	l447
  3248  0049E4                     u5510:
  3249  0049E4  0012               	return		;funcret
  3250  0049E6                     __end_of_I2C_Nack:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _I2C_Ack *****************
  3254 ;; Defined at:
  3255 ;;		line 230 in file "Reloj_ar.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		None
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_I2C_Read
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text16
  3283  0049E6                     __ptext16:
  3284                           	callstack 0
  3285  0049E6                     _I2C_Ack:
  3286                           	callstack 27
  3287  0049E6                     
  3288                           ;Reloj_ar.c: 232:     ACKDT=0;
  3289  0049E6  9AC5               	bcf	4037,5,c	;volatile
  3290                           
  3291                           ;Reloj_ar.c: 233:  ACKEN=1;
  3292  0049E8  88C5               	bsf	4037,4,c	;volatile
  3293  0049EA                     l441:
  3294  0049EA  B8C5               	btfsc	4037,4,c	;volatile
  3295  0049EC  EFFA  F024         	goto	u5501
  3296  0049F0  EFFC  F024         	goto	u5500
  3297  0049F4                     u5501:
  3298  0049F4  EFF5  F024         	goto	l441
  3299  0049F8                     u5500:
  3300  0049F8  0012               	return		;funcret
  3301  0049FA                     __end_of_I2C_Ack:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _LCD_Init *****************
  3305 ;; Defined at:
  3306 ;;		line 23 in file "LCD_caracter.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 2
  3327 ;; This function calls:
  3328 ;;		_LCD_Command
  3329 ;;		_LCD_MSdelay
  3330 ;; This function is called by:
  3331 ;;		_main
  3332 ;;		_RTC_Calendario
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text17
  3337  0048D0                     __ptext17:
  3338                           	callstack 0
  3339  0048D0                     _LCD_Init:
  3340                           	callstack 27
  3341  0048D0                     
  3342                           ;LCD_caracter.c: 25:     TRISD = 0;
  3343  0048D0  0E00               	movlw	0
  3344  0048D2  6E95               	movwf	149,c	;volatile
  3345  0048D4                     
  3346                           ;LCD_caracter.c: 26:     LCD_MSdelay(15);
  3347  0048D4  0E00               	movlw	0
  3348  0048D6  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  3349  0048D8  0E0F               	movlw	15
  3350  0048DA  6E01               	movwf	LCD_MSdelay@val^0,c
  3351  0048DC  EC9C  F022         	call	_LCD_MSdelay	;wreg free
  3352  0048E0                     
  3353                           ;LCD_caracter.c: 27:     LCD_Command(0x02);
  3354  0048E0  0E02               	movlw	2
  3355  0048E2  EC50  F022         	call	_LCD_Command
  3356  0048E6                     
  3357                           ;LCD_caracter.c: 29:     LCD_Command(0x28);
  3358  0048E6  0E28               	movlw	40
  3359  0048E8  EC50  F022         	call	_LCD_Command
  3360  0048EC                     
  3361                           ;LCD_caracter.c: 31:  LCD_Command(0x01);
  3362  0048EC  0E01               	movlw	1
  3363  0048EE  EC50  F022         	call	_LCD_Command
  3364  0048F2                     
  3365                           ;LCD_caracter.c: 32:     LCD_Command(0x0c);
  3366  0048F2  0E0C               	movlw	12
  3367  0048F4  EC50  F022         	call	_LCD_Command
  3368  0048F8                     
  3369                           ;LCD_caracter.c: 33:  LCD_Command(0x06);
  3370  0048F8  0E06               	movlw	6
  3371  0048FA  EC50  F022         	call	_LCD_Command
  3372  0048FE  0012               	return		;funcret
  3373  004900                     __end_of_LCD_Init:
  3374                           	callstack 0
  3375                           
  3376 ;; *************** function _LCD_Clear *****************
  3377 ;; Defined at:
  3378 ;;		line 155 in file "LCD_caracter.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3392 ;;      Params:         0       0       0       0       0       0       0       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3395 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3396 ;;Total ram usage:        0 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 2
  3399 ;; This function calls:
  3400 ;;		_LCD_Command
  3401 ;;		_LCD_MSdelay
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;;		_RTC_Calendario
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text18
  3409  0049FA                     __ptext18:
  3410                           	callstack 0
  3411  0049FA                     _LCD_Clear:
  3412                           	callstack 27
  3413  0049FA                     
  3414                           ;LCD_caracter.c: 157:     LCD_Command(0x01);
  3415  0049FA  0E01               	movlw	1
  3416  0049FC  EC50  F022         	call	_LCD_Command
  3417                           
  3418                           ;LCD_caracter.c: 158:     LCD_MSdelay(3);
  3419  004A00  0E00               	movlw	0
  3420  004A02  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
  3421  004A04  0E03               	movlw	3
  3422  004A06  6E01               	movwf	LCD_MSdelay@val^0,c
  3423  004A08  EC9C  F022         	call	_LCD_MSdelay	;wreg free
  3424  004A0C  0012               	return		;funcret
  3425  004A0E                     __end_of_LCD_Clear:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function _I2C_Init *****************
  3429 ;; Defined at:
  3430 ;;		line 57 in file "Reloj_ar.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3444 ;;      Params:         0       0       0       0       0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;;		_RTC_Calendario
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text19
  3459  0049A4                     __ptext19:
  3460                           	callstack 0
  3461  0049A4                     _I2C_Init:
  3462                           	callstack 29
  3463  0049A4                     
  3464                           ;Reloj_ar.c: 59:     TRISB0=1;
  3465  0049A4  8093               	bsf	3987,0,c	;volatile
  3466                           
  3467                           ;Reloj_ar.c: 60:  TRISB1=1;
  3468  0049A6  8293               	bsf	3987,1,c	;volatile
  3469  0049A8                     
  3470                           ;Reloj_ar.c: 61:  SSPSTAT=80;
  3471  0049A8  0E50               	movlw	80
  3472  0049AA  6EC7               	movwf	199,c	;volatile
  3473                           
  3474                           ;Reloj_ar.c: 62:     SSPCON1=0x28;
  3475  0049AC  0E28               	movlw	40
  3476  0049AE  6EC6               	movwf	198,c	;volatile
  3477                           
  3478                           ;Reloj_ar.c: 64:  SSPCON2=0;
  3479  0049B0  0E00               	movlw	0
  3480  0049B2  6EC5               	movwf	197,c	;volatile
  3481                           
  3482                           ;Reloj_ar.c: 65:     SSPADD=((8000000/(4*100000))-1);
  3483  0049B4  0E13               	movlw	19
  3484  0049B6  6EC8               	movwf	200,c	;volatile
  3485  0049B8                     
  3486                           ;Reloj_ar.c: 66:     SSPIE=1;
  3487  0049B8  869D               	bsf	3997,3,c	;volatile
  3488  0049BA                     
  3489                           ;Reloj_ar.c: 67:     SSPIF=0;
  3490  0049BA  969E               	bcf	3998,3,c	;volatile
  3491  0049BC  0012               	return		;funcret
  3492  0049BE                     __end_of_I2C_Init:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _Estados *****************
  3496 ;; Defined at:
  3497 ;;		line 24 in file "Estados.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  2    6[BANK0 ] int 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3511 ;;      Params:         0       2       0       0       0       0       0       0       0
  3512 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3514 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3515 ;;Total ram usage:        6 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 2
  3518 ;; This function calls:
  3519 ;;		_ReadADC
  3520 ;;		_ReadLUZ
  3521 ;;		___flge
  3522 ;;		___xxtofl
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text20
  3529  002CFE                     __ptext20:
  3530                           	callstack 0
  3531  002CFE                     _Estados:
  3532                           	callstack 28
  3533  002CFE                     
  3534                           ;Estados.c: 25:     tempar = ReadADC();
  3535  002CFE  EC18  F01C         	call	_ReadADC	;wreg free
  3536  002D02  0100               	movlb	0	; () banked
  3537  002D04  C060  F068         	movff	?_ReadADC,_Estados$1881
  3538  002D08  C061  F069         	movff	?_ReadADC+1,_Estados$1881+1
  3539  002D0C  6B6A               	clrf	(_Estados$1881+2)& (0+255),b
  3540  002D0E  6B6B               	clrf	(_Estados$1881+3)& (0+255),b
  3541  002D10                     
  3542                           ; BSR set to: 0
  3543                           ;Estados.c: 25:     tempar = ReadADC();
  3544  002D10  C068  F005         	movff	_Estados$1881,___xxtofl@val
  3545  002D14  C069  F006         	movff	_Estados$1881+1,___xxtofl@val+1
  3546  002D18  C06A  F007         	movff	_Estados$1881+2,___xxtofl@val+2
  3547  002D1C  C06B  F008         	movff	_Estados$1881+3,___xxtofl@val+3
  3548  002D20  0E00               	movlw	0
  3549  002D22  ECC5  F018         	call	___xxtofl
  3550  002D26  C005  F0EE         	movff	?___xxtofl,_tempar
  3551  002D2A  C006  F0EF         	movff	?___xxtofl+1,_tempar+1
  3552  002D2E  C007  F0F0         	movff	?___xxtofl+2,_tempar+2
  3553  002D32  C008  F0F1         	movff	?___xxtofl+3,_tempar+3
  3554  002D36                     
  3555                           ;Estados.c: 26:     luz = ReadLUZ();
  3556  002D36  ECFF  F01F         	call	_ReadLUZ	;wreg free
  3557  002D3A  C001  F005         	movff	?_ReadLUZ,___xxtofl@val
  3558  002D3E  C002  F006         	movff	?_ReadLUZ+1,___xxtofl@val+1
  3559  002D42  6A07               	clrf	(___xxtofl@val+2)^0,c
  3560  002D44  6A08               	clrf	(___xxtofl@val+3)^0,c
  3561  002D46  0E00               	movlw	0
  3562  002D48  ECC5  F018         	call	___xxtofl
  3563  002D4C  C005  F0EA         	movff	?___xxtofl,_luz
  3564  002D50  C006  F0EB         	movff	?___xxtofl+1,_luz+1
  3565  002D54  C007  F0EC         	movff	?___xxtofl+2,_luz+2
  3566  002D58  C008  F0ED         	movff	?___xxtofl+3,_luz+3
  3567  002D5C                     
  3568                           ;Estados.c: 28:     if (tempar > 15 && (luz > 0 && luz < 400)) {
  3569  002D5C  0E00               	movlw	0
  3570  002D5E  6E2C               	movwf	___flge@ff1^0,c
  3571  002D60  0E00               	movlw	0
  3572  002D62  6E2D               	movwf	(___flge@ff1+1)^0,c
  3573  002D64  0E70               	movlw	112
  3574  002D66  6E2E               	movwf	(___flge@ff1+2)^0,c
  3575  002D68  0E41               	movlw	65
  3576  002D6A  6E2F               	movwf	(___flge@ff1+3)^0,c
  3577  002D6C  C0EE  F030         	movff	_tempar,___flge@ff2
  3578  002D70  C0EF  F031         	movff	_tempar+1,___flge@ff2+1
  3579  002D74  C0F0  F032         	movff	_tempar+2,___flge@ff2+2
  3580  002D78  C0F1  F033         	movff	_tempar+3,___flge@ff2+3
  3581  002D7C  EC96  F01B         	call	___flge	;wreg free
  3582  002D80  B0D8               	btfsc	status,0,c
  3583  002D82  EFC5  F016         	goto	u6021
  3584  002D86  EFC7  F016         	goto	u6020
  3585  002D8A                     u6021:
  3586  002D8A  EF00  F017         	goto	l5536
  3587  002D8E                     u6020:
  3588  002D8E  0E00               	movlw	0
  3589  002D90  6E2C               	movwf	___flge@ff1^0,c
  3590  002D92  0E00               	movlw	0
  3591  002D94  6E2D               	movwf	(___flge@ff1+1)^0,c
  3592  002D96  0E00               	movlw	0
  3593  002D98  6E2E               	movwf	(___flge@ff1+2)^0,c
  3594  002D9A  0E00               	movlw	0
  3595  002D9C  6E2F               	movwf	(___flge@ff1+3)^0,c
  3596  002D9E  C0EA  F030         	movff	_luz,___flge@ff2
  3597  002DA2  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3598  002DA6  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3599  002DAA  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3600  002DAE  EC96  F01B         	call	___flge	;wreg free
  3601  002DB2  B0D8               	btfsc	status,0,c
  3602  002DB4  EFDE  F016         	goto	u6031
  3603  002DB8  EFE0  F016         	goto	u6030
  3604  002DBC                     u6031:
  3605  002DBC  EF00  F017         	goto	l5536
  3606  002DC0                     u6030:
  3607  002DC0  C0EA  F02C         	movff	_luz,___flge@ff1
  3608  002DC4  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3609  002DC8  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3610  002DCC  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3611  002DD0  0E00               	movlw	0
  3612  002DD2  6E30               	movwf	___flge@ff2^0,c
  3613  002DD4  0E00               	movlw	0
  3614  002DD6  6E31               	movwf	(___flge@ff2+1)^0,c
  3615  002DD8  0EC8               	movlw	200
  3616  002DDA  6E32               	movwf	(___flge@ff2+2)^0,c
  3617  002DDC  0E43               	movlw	67
  3618  002DDE  6E33               	movwf	(___flge@ff2+3)^0,c
  3619  002DE0  EC96  F01B         	call	___flge	;wreg free
  3620  002DE4  B0D8               	btfsc	status,0,c
  3621  002DE6  EFF7  F016         	goto	u6041
  3622  002DEA  EFF9  F016         	goto	u6040
  3623  002DEE                     u6041:
  3624  002DEE  EF00  F017         	goto	l5536
  3625  002DF2                     u6040:
  3626  002DF2                     
  3627                           ;Estados.c: 29:         return 1;
  3628  002DF2  0E00               	movlw	0
  3629  002DF4  0100               	movlb	0	; () banked
  3630  002DF6  6F67               	movwf	(?_Estados+1)& (0+255),b
  3631  002DF8  0E01               	movlw	1
  3632  002DFA  6F66               	movwf	?_Estados& (0+255),b
  3633  002DFC  EFBB  F017         	goto	l496
  3634  002E00                     l5536:
  3635  002E00  C0EE  F02C         	movff	_tempar,___flge@ff1
  3636  002E04  C0EF  F02D         	movff	_tempar+1,___flge@ff1+1
  3637  002E08  C0F0  F02E         	movff	_tempar+2,___flge@ff1+2
  3638  002E0C  C0F1  F02F         	movff	_tempar+3,___flge@ff1+3
  3639  002E10  0E00               	movlw	0
  3640  002E12  6E30               	movwf	___flge@ff2^0,c
  3641  002E14  0E00               	movlw	0
  3642  002E16  6E31               	movwf	(___flge@ff2+1)^0,c
  3643  002E18  0E40               	movlw	64
  3644  002E1A  6E32               	movwf	(___flge@ff2+2)^0,c
  3645  002E1C  0E41               	movlw	65
  3646  002E1E  6E33               	movwf	(___flge@ff2+3)^0,c
  3647  002E20  EC96  F01B         	call	___flge	;wreg free
  3648  002E24  A0D8               	btfss	status,0,c
  3649  002E26  EF17  F017         	goto	u6051
  3650  002E2A  EF19  F017         	goto	u6050
  3651  002E2E                     u6051:
  3652  002E2E  EF6B  F017         	goto	l5550
  3653  002E32                     u6050:
  3654  002E32  0E00               	movlw	0
  3655  002E34  6E2C               	movwf	___flge@ff1^0,c
  3656  002E36  0E00               	movlw	0
  3657  002E38  6E2D               	movwf	(___flge@ff1+1)^0,c
  3658  002E3A  0E70               	movlw	112
  3659  002E3C  6E2E               	movwf	(___flge@ff1+2)^0,c
  3660  002E3E  0E41               	movlw	65
  3661  002E40  6E2F               	movwf	(___flge@ff1+3)^0,c
  3662  002E42  C0EE  F030         	movff	_tempar,___flge@ff2
  3663  002E46  C0EF  F031         	movff	_tempar+1,___flge@ff2+1
  3664  002E4A  C0F0  F032         	movff	_tempar+2,___flge@ff2+2
  3665  002E4E  C0F1  F033         	movff	_tempar+3,___flge@ff2+3
  3666  002E52  EC96  F01B         	call	___flge	;wreg free
  3667  002E56  A0D8               	btfss	status,0,c
  3668  002E58  EF30  F017         	goto	u6061
  3669  002E5C  EF32  F017         	goto	u6060
  3670  002E60                     u6061:
  3671  002E60  EF6B  F017         	goto	l5550
  3672  002E64                     u6060:
  3673  002E64  0E00               	movlw	0
  3674  002E66  6E2C               	movwf	___flge@ff1^0,c
  3675  002E68  0E00               	movlw	0
  3676  002E6A  6E2D               	movwf	(___flge@ff1+1)^0,c
  3677  002E6C  0EC8               	movlw	200
  3678  002E6E  6E2E               	movwf	(___flge@ff1+2)^0,c
  3679  002E70  0E43               	movlw	67
  3680  002E72  6E2F               	movwf	(___flge@ff1+3)^0,c
  3681  002E74  C0EA  F030         	movff	_luz,___flge@ff2
  3682  002E78  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3683  002E7C  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3684  002E80  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3685  002E84  EC96  F01B         	call	___flge	;wreg free
  3686  002E88  B0D8               	btfsc	status,0,c
  3687  002E8A  EF49  F017         	goto	u6071
  3688  002E8E  EF4B  F017         	goto	u6070
  3689  002E92                     u6071:
  3690  002E92  EF6B  F017         	goto	l5550
  3691  002E96                     u6070:
  3692  002E96  C0EA  F02C         	movff	_luz,___flge@ff1
  3693  002E9A  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3694  002E9E  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3695  002EA2  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3696  002EA6  0E00               	movlw	0
  3697  002EA8  6E30               	movwf	___flge@ff2^0,c
  3698  002EAA  0E00               	movlw	0
  3699  002EAC  6E31               	movwf	(___flge@ff2+1)^0,c
  3700  002EAE  0E2F               	movlw	47
  3701  002EB0  6E32               	movwf	(___flge@ff2+2)^0,c
  3702  002EB2  0E44               	movlw	68
  3703  002EB4  6E33               	movwf	(___flge@ff2+3)^0,c
  3704  002EB6  EC96  F01B         	call	___flge	;wreg free
  3705  002EBA  B0D8               	btfsc	status,0,c
  3706  002EBC  EF62  F017         	goto	u6081
  3707  002EC0  EF64  F017         	goto	u6080
  3708  002EC4                     u6081:
  3709  002EC4  EF6B  F017         	goto	l5550
  3710  002EC8                     u6080:
  3711  002EC8                     
  3712                           ;Estados.c: 31:         return 2;
  3713  002EC8  0E00               	movlw	0
  3714  002ECA  0100               	movlb	0	; () banked
  3715  002ECC  6F67               	movwf	(?_Estados+1)& (0+255),b
  3716  002ECE  0E02               	movlw	2
  3717  002ED0  6F66               	movwf	?_Estados& (0+255),b
  3718  002ED2  EFBB  F017         	goto	l496
  3719  002ED6                     l5550:
  3720  002ED6  C0EE  F02C         	movff	_tempar,___flge@ff1
  3721  002EDA  C0EF  F02D         	movff	_tempar+1,___flge@ff1+1
  3722  002EDE  C0F0  F02E         	movff	_tempar+2,___flge@ff1+2
  3723  002EE2  C0F1  F02F         	movff	_tempar+3,___flge@ff1+3
  3724  002EE6  0E00               	movlw	0
  3725  002EE8  6E30               	movwf	___flge@ff2^0,c
  3726  002EEA  0E00               	movlw	0
  3727  002EEC  6E31               	movwf	(___flge@ff2+1)^0,c
  3728  002EEE  0E40               	movlw	64
  3729  002EF0  6E32               	movwf	(___flge@ff2+2)^0,c
  3730  002EF2  0E41               	movlw	65
  3731  002EF4  6E33               	movwf	(___flge@ff2+3)^0,c
  3732  002EF6  EC96  F01B         	call	___flge	;wreg free
  3733  002EFA  B0D8               	btfsc	status,0,c
  3734  002EFC  EF82  F017         	goto	u6091
  3735  002F00  EF84  F017         	goto	u6090
  3736  002F04                     u6091:
  3737  002F04  EFBB  F017         	goto	l496
  3738  002F08                     u6090:
  3739  002F08  0E00               	movlw	0
  3740  002F0A  6E2C               	movwf	___flge@ff1^0,c
  3741  002F0C  0E00               	movlw	0
  3742  002F0E  6E2D               	movwf	(___flge@ff1+1)^0,c
  3743  002F10  0E2F               	movlw	47
  3744  002F12  6E2E               	movwf	(___flge@ff1+2)^0,c
  3745  002F14  0E44               	movlw	68
  3746  002F16  6E2F               	movwf	(___flge@ff1+3)^0,c
  3747  002F18  C0EA  F030         	movff	_luz,___flge@ff2
  3748  002F1C  C0EB  F031         	movff	_luz+1,___flge@ff2+1
  3749  002F20  C0EC  F032         	movff	_luz+2,___flge@ff2+2
  3750  002F24  C0ED  F033         	movff	_luz+3,___flge@ff2+3
  3751  002F28  EC96  F01B         	call	___flge	;wreg free
  3752  002F2C  B0D8               	btfsc	status,0,c
  3753  002F2E  EF9B  F017         	goto	u6101
  3754  002F32  EF9D  F017         	goto	u6100
  3755  002F36                     u6101:
  3756  002F36  EFBB  F017         	goto	l496
  3757  002F3A                     u6100:
  3758  002F3A  C0EA  F02C         	movff	_luz,___flge@ff1
  3759  002F3E  C0EB  F02D         	movff	_luz+1,___flge@ff1+1
  3760  002F42  C0EC  F02E         	movff	_luz+2,___flge@ff1+2
  3761  002F46  C0ED  F02F         	movff	_luz+3,___flge@ff1+3
  3762  002F4A  0E00               	movlw	0
  3763  002F4C  6E30               	movwf	___flge@ff2^0,c
  3764  002F4E  0E80               	movlw	128
  3765  002F50  6E31               	movwf	(___flge@ff2+1)^0,c
  3766  002F52  0EBB               	movlw	187
  3767  002F54  6E32               	movwf	(___flge@ff2+2)^0,c
  3768  002F56  0E44               	movlw	68
  3769  002F58  6E33               	movwf	(___flge@ff2+3)^0,c
  3770  002F5A  EC96  F01B         	call	___flge	;wreg free
  3771  002F5E  B0D8               	btfsc	status,0,c
  3772  002F60  EFB4  F017         	goto	u6111
  3773  002F64  EFB6  F017         	goto	u6110
  3774  002F68                     u6111:
  3775  002F68  EFBB  F017         	goto	l496
  3776  002F6C                     u6110:
  3777  002F6C                     
  3778                           ;Estados.c: 34:         return 3;
  3779  002F6C  0E00               	movlw	0
  3780  002F6E  0100               	movlb	0	; () banked
  3781  002F70  6F67               	movwf	(?_Estados+1)& (0+255),b
  3782  002F72  0E03               	movlw	3
  3783  002F74  6F66               	movwf	?_Estados& (0+255),b
  3784  002F76                     l496:
  3785  002F76  0012               	return		;funcret
  3786  002F78                     __end_of_Estados:
  3787                           	callstack 0
  3788                           
  3789 ;; *************** function _ReadLUZ *****************
  3790 ;; Defined at:
  3791 ;;		line 21 in file "Sensor_luz.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  2    0[COMRAM] unsigned short 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3805 ;;      Params:         2       0       0       0       0       0       0       0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3807 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3808 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3809 ;;Total ram usage:        4 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_Estados
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text21
  3819  003FFE                     __ptext21:
  3820                           	callstack 0
  3821  003FFE                     _ReadLUZ:
  3822                           	callstack 29
  3823  003FFE                     
  3824                           ;Sensor_luz.c: 23:     TRISD = 0x00;
  3825  003FFE  0E00               	movlw	0
  3826  004000  6E95               	movwf	149,c	;volatile
  3827  004002                     
  3828                           ;Sensor_luz.c: 24:     TRISA = 0xFF;
  3829  004002  6892               	setf	146,c	;volatile
  3830                           
  3831                           ;Sensor_luz.c: 26:     OSCCONbits.IRCF = 0b111;
  3832  004004  0E70               	movlw	112
  3833  004006  12D3               	iorwf	211,f,c	;volatile
  3834                           
  3835                           ;Sensor_luz.c: 27:     OSCCONbits.SCS = 0b10;
  3836  004008  50D3               	movf	211,w,c	;volatile
  3837  00400A  0BFC               	andlw	-4
  3838  00400C  0902               	iorlw	2
  3839  00400E  6ED3               	movwf	211,c	;volatile
  3840                           
  3841                           ;Sensor_luz.c: 30:     ADCON1bits.PCFG = 0b1101;
  3842  004010  50C1               	movf	193,w,c	;volatile
  3843  004012  0BF0               	andlw	-16
  3844  004014  090D               	iorlw	13
  3845  004016  6EC1               	movwf	193,c	;volatile
  3846                           
  3847                           ;Sensor_luz.c: 31:     ADCON1bits.VCFG = 0b00;
  3848  004018  0ECF               	movlw	-49
  3849  00401A  16C1               	andwf	193,f,c	;volatile
  3850                           
  3851                           ;Sensor_luz.c: 32:     ADCON0bits.CHS = 0b0001;
  3852  00401C  50C2               	movf	194,w,c	;volatile
  3853  00401E  0BC3               	andlw	-61
  3854  004020  0904               	iorlw	4
  3855  004022  6EC2               	movwf	194,c	;volatile
  3856                           
  3857                           ;Sensor_luz.c: 33:     ADCON2bits.ACQT = 0b010;
  3858  004024  50C0               	movf	192,w,c	;volatile
  3859  004026  0BC7               	andlw	-57
  3860  004028  0910               	iorlw	16
  3861  00402A  6EC0               	movwf	192,c	;volatile
  3862                           
  3863                           ;Sensor_luz.c: 34:     ADCON2bits.ADCS = 0b001;
  3864  00402C  50C0               	movf	192,w,c	;volatile
  3865  00402E  0BF8               	andlw	-8
  3866  004030  0901               	iorlw	1
  3867  004032  6EC0               	movwf	192,c	;volatile
  3868  004034                     
  3869                           ;Sensor_luz.c: 35:     ADCON2bits.ADFM = 1;
  3870  004034  8EC0               	bsf	192,7,c	;volatile
  3871  004036                     
  3872                           ;Sensor_luz.c: 36:     ADCON0bits.ADON = 1;
  3873  004036  80C2               	bsf	194,0,c	;volatile
  3874  004038                     
  3875                           ;Sensor_luz.c: 39:         ADCON0bits.GO_DONE = 1;
  3876  004038  82C2               	bsf	194,1,c	;volatile
  3877  00403A                     l204:
  3878  00403A  B2C2               	btfsc	194,1,c	;volatile
  3879  00403C  EF22  F020         	goto	u5981
  3880  004040  EF24  F020         	goto	u5980
  3881  004044                     u5981:
  3882  004044  EF1D  F020         	goto	l204
  3883  004048                     u5980:
  3884  004048                     
  3885                           ;Sensor_luz.c: 41:         result = ADRESH;
  3886  004048  CFC4 F0FA          	movff	4036,_result	;volatile
  3887  00404C  0100               	movlb	0	; () banked
  3888  00404E  6BFB               	clrf	(_result+1)& (0+255),b
  3889  004050                     
  3890                           ; BSR set to: 0
  3891                           ;Sensor_luz.c: 42:         result = (result << 8) + ADRESL;
  3892  004050  51FA               	movf	_result& (0+255),w,b
  3893  004052  6E03               	movwf	??_ReadLUZ^0,c
  3894  004054  50C3               	movf	195,w,c	;volatile
  3895  004056  6FFA               	movwf	_result& (0+255),b
  3896  004058  C003  F0FB         	movff	??_ReadLUZ,_result+1
  3897  00405C                     
  3898                           ; BSR set to: 0
  3899                           ;Sensor_luz.c: 44:         return result;
  3900  00405C  C0FA  F001         	movff	_result,?_ReadLUZ
  3901  004060  C0FB  F002         	movff	_result+1,?_ReadLUZ+1
  3902  004064                     
  3903                           ; BSR set to: 0
  3904  004064  0012               	return		;funcret
  3905  004066                     __end_of_ReadLUZ:
  3906                           	callstack 0
  3907                           
  3908 ;; *************** function _ReadADC *****************
  3909 ;; Defined at:
  3910 ;;		line 22 in file "Temperatura.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  result          2    4[BANK0 ] unsigned short 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  2    0[BANK0 ] unsigned short 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3924 ;;      Params:         0       2       0       0       0       0       0       0       0
  3925 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3926 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3927 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3928 ;;Total ram usage:        6 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 1
  3931 ;; This function calls:
  3932 ;;		___fladd
  3933 ;;		___fldiv
  3934 ;;		___flmul
  3935 ;;		___fltol
  3936 ;;		___xxtofl
  3937 ;; This function is called by:
  3938 ;;		_Estados
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text22
  3943  003830                     __ptext22:
  3944                           	callstack 0
  3945  003830                     _ReadADC:
  3946                           	callstack 28
  3947  003830                     
  3948                           ;Temperatura.c: 24:     uint16_t result;;Temperatura.c: 26:     TRISD = 0x00;
  3949  003830  0E00               	movlw	0
  3950  003832  6E95               	movwf	149,c	;volatile
  3951  003834                     
  3952                           ;Temperatura.c: 27:     TRISA = 0xFF;
  3953  003834  6892               	setf	146,c	;volatile
  3954                           
  3955                           ;Temperatura.c: 29:     OSCCONbits.IRCF = 0b111;
  3956  003836  0E70               	movlw	112
  3957  003838  12D3               	iorwf	211,f,c	;volatile
  3958                           
  3959                           ;Temperatura.c: 30:     OSCCONbits.SCS = 0b10;
  3960  00383A  50D3               	movf	211,w,c	;volatile
  3961  00383C  0BFC               	andlw	-4
  3962  00383E  0902               	iorlw	2
  3963  003840  6ED3               	movwf	211,c	;volatile
  3964                           
  3965                           ;Temperatura.c: 33:     ADCON1bits.PCFG = 0b1110;
  3966  003842  50C1               	movf	193,w,c	;volatile
  3967  003844  0BF0               	andlw	-16
  3968  003846  090E               	iorlw	14
  3969  003848  6EC1               	movwf	193,c	;volatile
  3970                           
  3971                           ;Temperatura.c: 34:     ADCON1bits.VCFG = 0b00;
  3972  00384A  0ECF               	movlw	-49
  3973  00384C  16C1               	andwf	193,f,c	;volatile
  3974                           
  3975                           ;Temperatura.c: 35:     ADCON0bits.CHS = 0b0000;
  3976  00384E  0EC3               	movlw	-61
  3977  003850  16C2               	andwf	194,f,c	;volatile
  3978                           
  3979                           ;Temperatura.c: 36:     ADCON2bits.ACQT = 0b010;
  3980  003852  50C0               	movf	192,w,c	;volatile
  3981  003854  0BC7               	andlw	-57
  3982  003856  0910               	iorlw	16
  3983  003858  6EC0               	movwf	192,c	;volatile
  3984                           
  3985                           ;Temperatura.c: 37:     ADCON2bits.ADCS = 0b001;
  3986  00385A  50C0               	movf	192,w,c	;volatile
  3987  00385C  0BF8               	andlw	-8
  3988  00385E  0901               	iorlw	1
  3989  003860  6EC0               	movwf	192,c	;volatile
  3990  003862                     
  3991                           ;Temperatura.c: 38:     ADCON2bits.ADFM = 1;
  3992  003862  8EC0               	bsf	192,7,c	;volatile
  3993  003864                     
  3994                           ;Temperatura.c: 39:     ADCON0bits.ADON = 1;
  3995  003864  80C2               	bsf	194,0,c	;volatile
  3996  003866                     
  3997                           ;Temperatura.c: 42:         ADCON0bits.GO_DONE = 1;
  3998  003866  82C2               	bsf	194,1,c	;volatile
  3999  003868                     l161:
  4000  003868  B2C2               	btfsc	194,1,c	;volatile
  4001  00386A  EF39  F01C         	goto	u5971
  4002  00386E  EF3B  F01C         	goto	u5970
  4003  003872                     u5971:
  4004  003872  EF34  F01C         	goto	l161
  4005  003876                     u5970:
  4006  003876                     
  4007                           ;Temperatura.c: 44:         result = ADRESH;
  4008  003876  CFC4 F064          	movff	4036,ReadADC@result	;volatile
  4009  00387A  0100               	movlb	0	; () banked
  4010  00387C  6B65               	clrf	(ReadADC@result+1)& (0+255),b
  4011  00387E                     
  4012                           ; BSR set to: 0
  4013                           ;Temperatura.c: 45:         result = (result << 8) + ADRESL;
  4014  00387E  5164               	movf	ReadADC@result& (0+255),w,b
  4015  003880  6F62               	movwf	??_ReadADC& (0+255),b
  4016  003882  50C3               	movf	195,w,c	;volatile
  4017  003884  6F64               	movwf	ReadADC@result& (0+255),b
  4018  003886  C062  F065         	movff	??_ReadADC,ReadADC@result+1
  4019  00388A                     
  4020                           ; BSR set to: 0
  4021                           ;Temperatura.c: 46:         result = ((result*500.0)/1023.0)-49.5;
  4022  00388A  0E00               	movlw	0
  4023  00388C  6E49               	movwf	___fladd@a^0,c
  4024  00388E  0E00               	movlw	0
  4025  003890  6E4A               	movwf	(___fladd@a+1)^0,c
  4026  003892  0E46               	movlw	70
  4027  003894  6E4B               	movwf	(___fladd@a+2)^0,c
  4028  003896  0EC2               	movlw	194
  4029  003898  6E4C               	movwf	(___fladd@a+3)^0,c
  4030  00389A  0E00               	movlw	0
  4031  00389C  6E30               	movwf	___fldiv@a^0,c
  4032  00389E  0EC0               	movlw	192
  4033  0038A0  6E31               	movwf	(___fldiv@a+1)^0,c
  4034  0038A2  0E7F               	movlw	127
  4035  0038A4  6E32               	movwf	(___fldiv@a+2)^0,c
  4036  0038A6  0E44               	movlw	68
  4037  0038A8  6E33               	movwf	(___fldiv@a+3)^0,c
  4038  0038AA  0E00               	movlw	0
  4039  0038AC  6E17               	movwf	___flmul@a^0,c
  4040  0038AE  0E00               	movlw	0
  4041  0038B0  6E18               	movwf	(___flmul@a+1)^0,c
  4042  0038B2  0EFA               	movlw	250
  4043  0038B4  6E19               	movwf	(___flmul@a+2)^0,c
  4044  0038B6  0E43               	movlw	67
  4045  0038B8  6E1A               	movwf	(___flmul@a+3)^0,c
  4046  0038BA  C064  F005         	movff	ReadADC@result,___xxtofl@val
  4047  0038BE  C065  F006         	movff	ReadADC@result+1,___xxtofl@val+1
  4048  0038C2  6A07               	clrf	(___xxtofl@val+2)^0,c
  4049  0038C4  6A08               	clrf	(___xxtofl@val+3)^0,c
  4050  0038C6  0E00               	movlw	0
  4051  0038C8  ECC5  F018         	call	___xxtofl
  4052  0038CC  C005  F013         	movff	?___xxtofl,___flmul@b
  4053  0038D0  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  4054  0038D4  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  4055  0038D8  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  4056  0038DC  ECB8  F00F         	call	___flmul	;wreg free
  4057  0038E0  C013  F02C         	movff	?___flmul,___fldiv@b
  4058  0038E4  C014  F02D         	movff	?___flmul+1,___fldiv@b+1
  4059  0038E8  C015  F02E         	movff	?___flmul+2,___fldiv@b+2
  4060  0038EC  C016  F02F         	movff	?___flmul+3,___fldiv@b+3
  4061  0038F0  ECCD  F011         	call	___fldiv	;wreg free
  4062  0038F4  C02C  F045         	movff	?___fldiv,___fladd@b
  4063  0038F8  C02D  F046         	movff	?___fldiv+1,___fladd@b+1
  4064  0038FC  C02E  F047         	movff	?___fldiv+2,___fladd@b+2
  4065  003900  C02F  F048         	movff	?___fldiv+3,___fladd@b+3
  4066  003904  EC58  F00D         	call	___fladd	;wreg free
  4067  003908  C045  F055         	movff	?___fladd,___fltol@f1
  4068  00390C  C046  F056         	movff	?___fladd+1,___fltol@f1+1
  4069  003910  C047  F057         	movff	?___fladd+2,___fltol@f1+2
  4070  003914  C048  F058         	movff	?___fladd+3,___fltol@f1+3
  4071  003918  EC13  F01B         	call	___fltol	;wreg free
  4072  00391C  C055  F064         	movff	?___fltol,ReadADC@result
  4073  003920  C056  F065         	movff	?___fltol+1,ReadADC@result+1
  4074  003924                     
  4075                           ;Temperatura.c: 48:         return result;
  4076  003924  C064  F060         	movff	ReadADC@result,?_ReadADC
  4077  003928  C065  F061         	movff	ReadADC@result+1,?_ReadADC+1
  4078  00392C  0012               	return		;funcret
  4079  00392E                     __end_of_ReadADC:
  4080                           	callstack 0
  4081                           
  4082 ;; *************** function ___xxtofl *****************
  4083 ;; Defined at:
  4084 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  sign            1    wreg     unsigned char 
  4087 ;;  val             4    4[COMRAM] long 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  sign            1   12[COMRAM] unsigned char 
  4090 ;;  arg             4   14[COMRAM] unsigned long 
  4091 ;;  exp             1   13[COMRAM] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  4    4[COMRAM] unsigned char 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4101 ;;      Params:         4       0       0       0       0       0       0       0       0
  4102 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4103 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4104 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4105 ;;Total ram usage:       14 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_ReadADC
  4111 ;;		_Estados
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text23
  4116  00318A                     __ptext23:
  4117                           	callstack 0
  4118  00318A                     ___xxtofl:
  4119                           	callstack 29
  4120                           
  4121                           ;incstack = 0
  4122                           ;___xxtofl@sign stored from wreg
  4123  00318A  6E0D               	movwf	___xxtofl@sign^0,c
  4124  00318C  500D               	movf	___xxtofl@sign^0,w,c
  4125  00318E  B4D8               	btfsc	status,2,c
  4126  003190  EFCC  F018         	goto	u5831
  4127  003194  EFCE  F018         	goto	u5830
  4128  003198                     u5831:
  4129  003198  EFF0  F018         	goto	l1167
  4130  00319C                     u5830:
  4131  00319C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  4132  00319E  EFD5  F018         	goto	u5840
  4133  0031A2  EFD3  F018         	goto	u5841
  4134  0031A6                     u5841:
  4135  0031A6  EFF0  F018         	goto	l1167
  4136  0031AA                     u5840:
  4137  0031AA  C005  F009         	movff	___xxtofl@val,??___xxtofl
  4138  0031AE  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  4139  0031B2  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  4140  0031B6  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  4141  0031BA  1E09               	comf	??___xxtofl^0,f,c
  4142  0031BC  1E0A               	comf	(??___xxtofl+1)^0,f,c
  4143  0031BE  1E0B               	comf	(??___xxtofl+2)^0,f,c
  4144  0031C0  1E0C               	comf	(??___xxtofl+3)^0,f,c
  4145  0031C2  2A09               	incf	??___xxtofl^0,f,c
  4146  0031C4  0E00               	movlw	0
  4147  0031C6  220A               	addwfc	(??___xxtofl+1)^0,f,c
  4148  0031C8  220B               	addwfc	(??___xxtofl+2)^0,f,c
  4149  0031CA  220C               	addwfc	(??___xxtofl+3)^0,f,c
  4150  0031CC  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  4151  0031D0  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  4152  0031D4  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  4153  0031D8  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  4154  0031DC  EFF8  F018         	goto	l5210
  4155  0031E0                     l1167:
  4156  0031E0  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  4157  0031E4  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4158  0031E8  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4159  0031EC  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4160  0031F0                     l5210:
  4161  0031F0  5005               	movf	___xxtofl@val^0,w,c
  4162  0031F2  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  4163  0031F4  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  4164  0031F6  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  4165  0031F8  A4D8               	btfss	status,2,c
  4166  0031FA  EF01  F019         	goto	u5851
  4167  0031FE  EF03  F019         	goto	u5850
  4168  003202                     u5851:
  4169  003202  EF0D  F019         	goto	l5216
  4170  003206                     u5850:
  4171  003206  0E00               	movlw	0
  4172  003208  6E05               	movwf	?___xxtofl^0,c
  4173  00320A  0E00               	movlw	0
  4174  00320C  6E06               	movwf	(?___xxtofl+1)^0,c
  4175  00320E  0E00               	movlw	0
  4176  003210  6E07               	movwf	(?___xxtofl+2)^0,c
  4177  003212  0E00               	movlw	0
  4178  003214  6E08               	movwf	(?___xxtofl+3)^0,c
  4179  003216  EF9E  F019         	goto	l1170
  4180  00321A                     l5216:
  4181  00321A  0E96               	movlw	150
  4182  00321C  6E0E               	movwf	___xxtofl@exp^0,c
  4183  00321E  EF17  F019         	goto	l5220
  4184  003222                     l5218:
  4185  003222  2A0E               	incf	___xxtofl@exp^0,f,c
  4186  003224  90D8               	bcf	status,0,c
  4187  003226  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  4188  003228  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  4189  00322A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  4190  00322C  320F               	rrcf	___xxtofl@arg^0,f,c
  4191  00322E                     l5220:
  4192  00322E  0E00               	movlw	0
  4193  003230  140F               	andwf	___xxtofl@arg^0,w,c
  4194  003232  6E09               	movwf	??___xxtofl^0,c
  4195  003234  0E00               	movlw	0
  4196  003236  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  4197  003238  6E0A               	movwf	(??___xxtofl+1)^0,c
  4198  00323A  0E00               	movlw	0
  4199  00323C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  4200  00323E  6E0B               	movwf	(??___xxtofl+2)^0,c
  4201  003240  0EFE               	movlw	254
  4202  003242  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  4203  003244  6E0C               	movwf	(??___xxtofl+3)^0,c
  4204  003246  5009               	movf	??___xxtofl^0,w,c
  4205  003248  100A               	iorwf	(??___xxtofl+1)^0,w,c
  4206  00324A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  4207  00324C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  4208  00324E  A4D8               	btfss	status,2,c
  4209  003250  EF2C  F019         	goto	u5861
  4210  003254  EF2E  F019         	goto	u5860
  4211  003258                     u5861:
  4212  003258  EF11  F019         	goto	l5218
  4213  00325C                     u5860:
  4214  00325C  EF3C  F019         	goto	l1174
  4215  003260                     l5222:
  4216  003260  2A0E               	incf	___xxtofl@exp^0,f,c
  4217  003262  0E01               	movlw	1
  4218  003264  260F               	addwf	___xxtofl@arg^0,f,c
  4219  003266  0E00               	movlw	0
  4220  003268  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  4221  00326A  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  4222  00326C  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  4223  00326E  90D8               	bcf	status,0,c
  4224  003270  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  4225  003272  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  4226  003274  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  4227  003276  320F               	rrcf	___xxtofl@arg^0,f,c
  4228  003278                     l1174:
  4229  003278  0E00               	movlw	0
  4230  00327A  140F               	andwf	___xxtofl@arg^0,w,c
  4231  00327C  6E09               	movwf	??___xxtofl^0,c
  4232  00327E  0E00               	movlw	0
  4233  003280  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  4234  003282  6E0A               	movwf	(??___xxtofl+1)^0,c
  4235  003284  0E00               	movlw	0
  4236  003286  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  4237  003288  6E0B               	movwf	(??___xxtofl+2)^0,c
  4238  00328A  0EFF               	movlw	255
  4239  00328C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  4240  00328E  6E0C               	movwf	(??___xxtofl+3)^0,c
  4241  003290  5009               	movf	??___xxtofl^0,w,c
  4242  003292  100A               	iorwf	(??___xxtofl+1)^0,w,c
  4243  003294  100B               	iorwf	(??___xxtofl+2)^0,w,c
  4244  003296  100C               	iorwf	(??___xxtofl+3)^0,w,c
  4245  003298  A4D8               	btfss	status,2,c
  4246  00329A  EF51  F019         	goto	u5871
  4247  00329E  EF53  F019         	goto	u5870
  4248  0032A2                     u5871:
  4249  0032A2  EF30  F019         	goto	l5222
  4250  0032A6                     u5870:
  4251  0032A6  EF5B  F019         	goto	l5230
  4252  0032AA                     l5228:
  4253  0032AA  060E               	decf	___xxtofl@exp^0,f,c
  4254  0032AC  90D8               	bcf	status,0,c
  4255  0032AE  360F               	rlcf	___xxtofl@arg^0,f,c
  4256  0032B0  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  4257  0032B2  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  4258  0032B4  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  4259  0032B6                     l5230:
  4260  0032B6  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  4261  0032B8  EF60  F019         	goto	u5881
  4262  0032BC  EF62  F019         	goto	u5880
  4263  0032C0                     u5881:
  4264  0032C0  EF6A  F019         	goto	l1181
  4265  0032C4                     u5880:
  4266  0032C4  0E02               	movlw	2
  4267  0032C6  600E               	cpfslt	___xxtofl@exp^0,c
  4268  0032C8  EF68  F019         	goto	u5891
  4269  0032CC  EF6A  F019         	goto	u5890
  4270  0032D0                     u5891:
  4271  0032D0  EF55  F019         	goto	l5228
  4272  0032D4                     u5890:
  4273  0032D4                     l1181:
  4274  0032D4  B00E               	btfsc	___xxtofl@exp^0,0,c
  4275  0032D6  EF6F  F019         	goto	u5901
  4276  0032DA  EF71  F019         	goto	u5900
  4277  0032DE                     u5901:
  4278  0032DE  EF72  F019         	goto	l5236
  4279  0032E2                     u5900:
  4280  0032E2  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  4281  0032E4                     l5236:
  4282  0032E4  90D8               	bcf	status,0,c
  4283  0032E6  320E               	rrcf	___xxtofl@exp^0,f,c
  4284  0032E8  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  4285  0032EC  6A0A               	clrf	(??___xxtofl+1)^0,c
  4286  0032EE  6A0B               	clrf	(??___xxtofl+2)^0,c
  4287  0032F0  6A0C               	clrf	(??___xxtofl+3)^0,c
  4288  0032F2  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  4289  0032F6  6A0B               	clrf	(??___xxtofl+2)^0,c
  4290  0032F8  6A0A               	clrf	(??___xxtofl+1)^0,c
  4291  0032FA  6A09               	clrf	??___xxtofl^0,c
  4292  0032FC  5009               	movf	??___xxtofl^0,w,c
  4293  0032FE  120F               	iorwf	___xxtofl@arg^0,f,c
  4294  003300  500A               	movf	(??___xxtofl+1)^0,w,c
  4295  003302  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  4296  003304  500B               	movf	(??___xxtofl+2)^0,w,c
  4297  003306  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  4298  003308  500C               	movf	(??___xxtofl+3)^0,w,c
  4299  00330A  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  4300  00330C  500D               	movf	___xxtofl@sign^0,w,c
  4301  00330E  B4D8               	btfsc	status,2,c
  4302  003310  EF8C  F019         	goto	u5911
  4303  003314  EF8E  F019         	goto	u5910
  4304  003318                     u5911:
  4305  003318  EF96  F019         	goto	l5246
  4306  00331C                     u5910:
  4307  00331C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  4308  00331E  EF95  F019         	goto	u5920
  4309  003322  EF93  F019         	goto	u5921
  4310  003326                     u5921:
  4311  003326  EF96  F019         	goto	l5246
  4312  00332A                     u5920:
  4313  00332A  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  4314  00332C                     l5246:
  4315  00332C  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  4316  003330  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  4317  003334  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  4318  003338  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  4319  00333C                     l1170:
  4320  00333C  0012               	return		;funcret
  4321  00333E                     __end_of___xxtofl:
  4322                           	callstack 0
  4323                           
  4324 ;; *************** function _Cloudy_State *****************
  4325 ;; Defined at:
  4326 ;;		line 77 in file "Estados.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4340 ;;      Params:         0       0       0       0       0       0       0       0       0
  4341 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4343 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4344 ;;Total ram usage:        0 bytes
  4345 ;; Hardware stack levels used: 1
  4346 ;; Hardware stack levels required when called: 8
  4347 ;; This function calls:
  4348 ;;		_LCD_Char
  4349 ;;		_LCD_Command
  4350 ;;		_LCD_Custom_Char
  4351 ;;		_LCD_String_xy
  4352 ;;		_sprintf
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text24
  4359  004352                     __ptext24:
  4360                           	callstack 0
  4361  004352                     _Cloudy_State:
  4362                           	callstack 22
  4363  004352                     
  4364                           ;Estados.c: 78:     LATE0 = 1;
  4365  004352  808D               	bsf	3981,0,c	;volatile
  4366                           
  4367                           ;Estados.c: 79:     LATE1 = 1;
  4368  004354  828D               	bsf	3981,1,c	;volatile
  4369                           
  4370                           ;Estados.c: 80:     LATE2 = 0;
  4371  004356  948D               	bcf	3981,2,c	;volatile
  4372  004358                     
  4373                           ;Estados.c: 81:     sprintf(Stemp, "%0.0fC", tempar);
  4374  004358  0E5E               	movlw	low _Stemp
  4375  00435A  0100               	movlb	0	; () banked
  4376  00435C  6FCC               	movwf	sprintf@s& (0+255),b
  4377  00435E  0E01               	movlw	high _Stemp
  4378  004360  6FCD               	movwf	(sprintf@s+1)& (0+255),b
  4379  004362  0E01               	movlw	low STR_19
  4380  004364  6FCE               	movwf	sprintf@fmt& (0+255),b
  4381  004366  0E08               	movlw	high STR_19
  4382  004368  6FCF               	movwf	(sprintf@fmt+1)& (0+255),b
  4383  00436A  C0EE  F0D0         	movff	_tempar,?_sprintf+4
  4384  00436E  C0EF  F0D1         	movff	_tempar+1,?_sprintf+5
  4385  004372  C0F0  F0D2         	movff	_tempar+2,?_sprintf+6
  4386  004376  C0F1  F0D3         	movff	_tempar+3,?_sprintf+7
  4387  00437A  ECD6  F021         	call	_sprintf	;wreg free
  4388  00437E                     
  4389                           ;Estados.c: 82:     LCD_String_xy(1, 0, Stemp);
  4390  00437E  0E00               	movlw	0
  4391  004380  6E0B               	movwf	LCD_String_xy@pos^0,c
  4392  004382  0E5E               	movlw	low _Stemp
  4393  004384  6E0C               	movwf	LCD_String_xy@msg^0,c
  4394  004386  0E01               	movlw	high _Stemp
  4395  004388  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  4396  00438A  0E01               	movlw	1
  4397  00438C  EC4D  F023         	call	_LCD_String_xy
  4398  004390                     
  4399                           ;Estados.c: 83:     LCD_Custom_Char(0, character3);
  4400  004390  0ED5               	movlw	low _character3
  4401  004392  6E09               	movwf	LCD_Custom_Char@msg^0,c
  4402  004394  0E01               	movlw	high _character3
  4403  004396  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  4404  004398  0E00               	movlw	0
  4405  00439A  ECC1  F022         	call	_LCD_Custom_Char
  4406                           
  4407                           ;Estados.c: 84:     LCD_Command(0xc0);
  4408  00439E  0EC0               	movlw	192
  4409  0043A0  EC50  F022         	call	_LCD_Command
  4410                           
  4411                           ;Estados.c: 85:     LCD_Char(0);
  4412  0043A4  0E00               	movlw	0
  4413  0043A6  EC76  F022         	call	_LCD_Char
  4414  0043AA  0012               	return		;funcret
  4415  0043AC                     __end_of_Cloudy_State:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _sprintf *****************
  4419 ;; Defined at:
  4420 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  s               2  108[BANK0 ] PTR unsigned char 
  4423 ;;		 -> Stemp(20), RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), 
  4424 ;;		 -> RTC_Calendario@hours(10), RTC_Calendario@mins(10), RTC_Calendario@secs(10), 
  4425 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  4426 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4427 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4428 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  f               6  118[BANK0 ] struct _IO_FILE
  4431 ;;  ap              2  116[BANK0 ] PTR void [1]
  4432 ;;		 -> ?_sprintf(2), 
  4433 ;;  ret             2    0        int 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  2  108[BANK0 ] int 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4443 ;;      Params:         0       8       0       0       0       0       0       0       0
  4444 ;;      Locals:         0       8       0       0       0       0       0       0       0
  4445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4446 ;;      Totals:         0      16       0       0       0       0       0       0       0
  4447 ;;Total ram usage:       16 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 7
  4450 ;; This function calls:
  4451 ;;		_vfprintf
  4452 ;; This function is called by:
  4453 ;;		_RTC_Calendario
  4454 ;;		_Sunny_State
  4455 ;;		_Cloudy_State
  4456 ;;		_Rainy_State
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text25
  4461  0043AC                     __ptext25:
  4462                           	callstack 0
  4463  0043AC                     _sprintf:
  4464                           	callstack 22
  4465  0043AC  0ED0               	movlw	low (?_sprintf+4)
  4466  0043AE  0100               	movlb	0	; () banked
  4467  0043B0  6FD4               	movwf	sprintf@ap& (0+255),b
  4468  0043B2  0E00               	movlw	high (?_sprintf+4)
  4469  0043B4  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  4470  0043B6  C0CC  F0D6         	movff	sprintf@s,sprintf@f
  4471  0043BA  C0CD  F0D7         	movff	sprintf@s+1,sprintf@f+1
  4472  0043BE                     
  4473                           ; BSR set to: 0
  4474  0043BE  0E00               	movlw	0
  4475  0043C0  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  4476  0043C2  0E00               	movlw	0
  4477  0043C4  6FD8               	movwf	(sprintf@f+2)& (0+255),b
  4478  0043C6                     
  4479                           ; BSR set to: 0
  4480  0043C6  0E00               	movlw	0
  4481  0043C8  6FDB               	movwf	(sprintf@f+5)& (0+255),b
  4482  0043CA  0E00               	movlw	0
  4483  0043CC  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  4484  0043CE                     
  4485                           ; BSR set to: 0
  4486  0043CE  0ED6               	movlw	low sprintf@f
  4487  0043D0  6FC4               	movwf	vfprintf@fp& (0+255),b
  4488  0043D2  0E00               	movlw	high sprintf@f
  4489  0043D4  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  4490  0043D6  C0CE  F0C6         	movff	sprintf@fmt,vfprintf@fmt
  4491  0043DA  C0CF  F0C7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4492  0043DE  0ED4               	movlw	low sprintf@ap
  4493  0043E0  6FC8               	movwf	vfprintf@ap& (0+255),b
  4494  0043E2  0E00               	movlw	high sprintf@ap
  4495  0043E4  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  4496  0043E6  EC33  F020         	call	_vfprintf	;wreg free
  4497  0043EA  0100               	movlb	0	; () banked
  4498  0043EC  51D8               	movf	(sprintf@f+2)& (0+255),w,b
  4499  0043EE  25CC               	addwf	sprintf@s& (0+255),w,b
  4500  0043F0  6ED9               	movwf	fsr2l,c
  4501  0043F2  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  4502  0043F4  21CD               	addwfc	(sprintf@s+1)& (0+255),w,b
  4503  0043F6  6EDA               	movwf	fsr2h,c
  4504  0043F8  0E00               	movlw	0
  4505  0043FA  6EDF               	movwf	indf2,c
  4506  0043FC                     
  4507                           ; BSR set to: 0
  4508  0043FC  0012               	return		;funcret
  4509  0043FE                     __end_of_sprintf:
  4510                           	callstack 0
  4511                           
  4512 ;; *************** function _vfprintf *****************
  4513 ;; Defined at:
  4514 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  fp              2  100[BANK0 ] PTR struct _IO_FILE
  4517 ;;		 -> sprintf@f(6), 
  4518 ;;  fmt             2  102[BANK0 ] PTR const unsigned char 
  4519 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4520 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4521 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4522 ;;  ap              2  104[BANK0 ] PTR PTR void 
  4523 ;;		 -> sprintf@ap(2), 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  cfmt            2  106[BANK0 ] PTR unsigned char 
  4526 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
  4527 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4528 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  2  100[BANK0 ] int 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4538 ;;      Params:         0       6       0       0       0       0       0       0       0
  4539 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4541 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4542 ;;Total ram usage:        8 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 6
  4545 ;; This function calls:
  4546 ;;		_vfpfcnvrt
  4547 ;; This function is called by:
  4548 ;;		_sprintf
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text26
  4553  004066                     __ptext26:
  4554                           	callstack 0
  4555  004066                     _vfprintf:
  4556                           	callstack 22
  4557  004066                     
  4558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4559  004066  C0C6  F0CA         	movff	vfprintf@fmt,vfprintf@cfmt
  4560  00406A  C0C7  F0CB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4561  00406E                     
  4562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4563  00406E  0E00               	movlw	0
  4564  004070  0100               	movlb	0	; () banked
  4565  004072  6FF3               	movwf	(_nout+1)& (0+255),b
  4566  004074  0E00               	movlw	0
  4567  004076  6FF2               	movwf	_nout& (0+255),b
  4568                           
  4569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4570  004078  EF51  F020         	goto	l5256
  4571  00407C                     l5254:
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4575  00407C  C0C4  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  4576  004080  C0C5  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4577  004084  0ECA               	movlw	low vfprintf@cfmt
  4578  004086  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  4579  004088  0E00               	movlw	high vfprintf@cfmt
  4580  00408A  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4581  00408C  C0C8  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  4582  004090  C0C9  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4583  004094  EC51  F00A         	call	_vfpfcnvrt	;wreg free
  4584  004098  0100               	movlb	0	; () banked
  4585  00409A  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  4586  00409C  27F2               	addwf	_nout& (0+255),f,b
  4587  00409E  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4588  0040A0  23F3               	addwfc	(_nout+1)& (0+255),f,b
  4589  0040A2                     l5256:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4593  0040A2  C0CA  FFF6         	movff	vfprintf@cfmt,tblptrl
  4594  0040A6  C0CB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4595  0040AA                     	if	0	;tblptru may be non-zero
  4596  0040AA                     	endif
  4597  0040AA                     	if	0	;tblptru may be non-zero
  4598  0040AA                     	endif
  4599  0040AA  0008               	tblrd		*
  4600  0040AC  50F5               	movf	tablat,w,c
  4601  0040AE  0900               	iorlw	0
  4602  0040B0  A4D8               	btfss	status,2,c
  4603  0040B2  EF5D  F020         	goto	u5931
  4604  0040B6  EF5F  F020         	goto	u5930
  4605  0040BA                     u5931:
  4606  0040BA  EF3E  F020         	goto	l5254
  4607  0040BE                     u5930:
  4608  0040BE                     
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4611  0040BE  C0F2  F0C4         	movff	_nout,?_vfprintf
  4612  0040C2  C0F3  F0C5         	movff	_nout+1,?_vfprintf+1
  4613  0040C6                     
  4614                           ; BSR set to: 0
  4615  0040C6  0012               	return		;funcret
  4616  0040C8                     __end_of_vfprintf:
  4617                           	callstack 0
  4618                           
  4619 ;; *************** function _vfpfcnvrt *****************
  4620 ;; Defined at:
  4621 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  4624 ;;		 -> sprintf@f(6), 
  4625 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  4626 ;;		 -> vfprintf@cfmt(2), 
  4627 ;;  ap              2   72[BANK0 ] PTR PTR void 
  4628 ;;		 -> sprintf@ap(2), 
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  llu             8   78[BANK0 ] unsigned long long 
  4631 ;;  ll              8    0        long long 
  4632 ;;  f               4   92[BANK0 ] long long 
  4633 ;;  ct              3   96[BANK0 ] unsigned char [3]
  4634 ;;  vp              3    0        PTR void 
  4635 ;;  cp              3    0        PTR unsigned char 
  4636 ;;  done            2   86[BANK0 ] int 
  4637 ;;  i               2    0        int 
  4638 ;;  c               1   99[BANK0 ] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  2   68[BANK0 ] int 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4648 ;;      Params:         0       6       0       0       0       0       0       0       0
  4649 ;;      Locals:         0      22       0       0       0       0       0       0       0
  4650 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4651 ;;      Totals:         0      32       0       0       0       0       0       0       0
  4652 ;;Total ram usage:       32 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 5
  4655 ;; This function calls:
  4656 ;;		_atoi
  4657 ;;		_efgtoa
  4658 ;;		_fputc
  4659 ;;		_isdigit
  4660 ;;		_isupper
  4661 ;;		_strncmp
  4662 ;;		_tolower
  4663 ;;		_xtoa
  4664 ;; This function is called by:
  4665 ;;		_vfprintf
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text27
  4670  0014A2                     __ptext27:
  4671                           	callstack 0
  4672  0014A2                     _vfpfcnvrt:
  4673                           	callstack 22
  4674  0014A2                     
  4675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4676  0014A2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4677  0014A6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4678  0014AA  CFDE FFF6          	movff	postinc2,tblptrl
  4679  0014AE  CFDD FFF7          	movff	postdec2,tblptrh
  4680  0014B2                     	if	0	;tblptru may be non-zero
  4681  0014B2                     	endif
  4682  0014B2                     	if	0	;tblptru may be non-zero
  4683  0014B2                     	endif
  4684  0014B2  0008               	tblrd		*
  4685  0014B4  50F5               	movf	tablat,w,c
  4686  0014B6  0A25               	xorlw	37
  4687  0014B8  A4D8               	btfss	status,2,c
  4688  0014BA  EF61  F00A         	goto	u5521
  4689  0014BE  EF63  F00A         	goto	u5520
  4690  0014C2                     u5521:
  4691  0014C2  EF3C  F00D         	goto	l5096
  4692  0014C6                     u5520:
  4693  0014C6                     
  4694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4695  0014C6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4696  0014CA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4697  0014CE  2ADE               	incf	postinc2,f,c
  4698  0014D0  0E00               	movlw	0
  4699  0014D2  22DD               	addwfc	postdec2,f,c
  4700  0014D4                     
  4701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4702  0014D4  0E00               	movlw	0
  4703  0014D6  0100               	movlb	0	; () banked
  4704  0014D8  6FF5               	movwf	(_width+1)& (0+255),b
  4705  0014DA  0E00               	movlw	0
  4706  0014DC  6FF4               	movwf	_width& (0+255),b
  4707  0014DE  C0F4  F0F8         	movff	_width,_flags
  4708  0014E2  C0F5  F0F9         	movff	_width+1,_flags+1
  4709  0014E6                     
  4710                           ; BSR set to: 0
  4711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4712  0014E6  69F6               	setf	_prec& (0+255),b
  4713  0014E8  69F7               	setf	(_prec+1)& (0+255),b
  4714  0014EA                     
  4715                           ; BSR set to: 0
  4716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4717  0014EA  0E00               	movlw	0
  4718  0014EC  6FB7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4719  0014EE  0E00               	movlw	0
  4720  0014F0  6FB6               	movwf	vfpfcnvrt@done& (0+255),b
  4721                           
  4722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4723  0014F2  EFC1  F00A         	goto	l5004
  4724  0014F6                     l4978:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4728  0014F6  81F8               	bsf	_flags& (0+255),0,b
  4729  0014F8                     l4980:
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4733  0014F8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4734  0014FC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4735  001500  2ADE               	incf	postinc2,f,c
  4736  001502  0E00               	movlw	0
  4737  001504  22DD               	addwfc	postdec2,f,c
  4738                           
  4739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4740  001506  EFC1  F00A         	goto	l5004
  4741  00150A                     l4982:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4745  00150A  83F8               	bsf	_flags& (0+255),1,b
  4746  00150C  EF7C  F00A         	goto	l4980
  4747  001510                     l4986:
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4751  001510  85F8               	bsf	_flags& (0+255),2,b
  4752  001512  EF7C  F00A         	goto	l4980
  4753  001516                     l4990:
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4757  001516  87F8               	bsf	_flags& (0+255),3,b
  4758  001518  EF7C  F00A         	goto	l4980
  4759  00151C                     l4994:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4763  00151C  89F8               	bsf	_flags& (0+255),4,b
  4764  00151E  EF7C  F00A         	goto	l4980
  4765  001522                     l4998:
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4769  001522  0E00               	movlw	0
  4770  001524  6FB7               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4771  001526  0E01               	movlw	1
  4772  001528  6FB6               	movwf	vfpfcnvrt@done& (0+255),b
  4773                           
  4774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4775  00152A  EFC1  F00A         	goto	l5004
  4776  00152E                     l5002:
  4777                           
  4778                           ; BSR set to: 0
  4779  00152E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4780  001532  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4781  001536  CFDE FFF6          	movff	postinc2,tblptrl
  4782  00153A  CFDD FFF7          	movff	postdec2,tblptrh
  4783  00153E                     	if	0	;tblptru may be non-zero
  4784  00153E                     	endif
  4785  00153E                     	if	0	;tblptru may be non-zero
  4786  00153E                     	endif
  4787  00153E  0008               	tblrd		*
  4788  001540  50F5               	movf	tablat,w,c
  4789  001542  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4790  001544  6BAB               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4791                           
  4792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4793                           ; Switch size 1, requested type "simple"
  4794                           ; Number of cases is 1, Range of values is 0 to 0
  4795                           ; switch strategies available:
  4796                           ; Name         Instructions Cycles
  4797                           ; simple_byte            4     3 (average)
  4798                           ;	Chosen strategy is simple_byte
  4799  001546  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4800  001548  0A00               	xorlw	0	; case 0
  4801  00154A  B4D8               	btfsc	status,2,c
  4802  00154C  EFAA  F00A         	goto	l5720
  4803  001550  EF91  F00A         	goto	l4998
  4804  001554                     l5720:
  4805                           
  4806                           ; BSR set to: 0
  4807                           ; Switch size 1, requested type "simple"
  4808                           ; Number of cases is 5, Range of values is 32 to 48
  4809                           ; switch strategies available:
  4810                           ; Name         Instructions Cycles
  4811                           ; simple_byte           16     9 (average)
  4812                           ;	Chosen strategy is simple_byte
  4813  001554  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4814  001556  0A20               	xorlw	32	; case 32
  4815  001558  B4D8               	btfsc	status,2,c
  4816  00155A  EF8B  F00A         	goto	l4990
  4817  00155E  0A03               	xorlw	3	; case 35
  4818  001560  B4D8               	btfsc	status,2,c
  4819  001562  EF8E  F00A         	goto	l4994
  4820  001566  0A08               	xorlw	8	; case 43
  4821  001568  B4D8               	btfsc	status,2,c
  4822  00156A  EF88  F00A         	goto	l4986
  4823  00156E  0A06               	xorlw	6	; case 45
  4824  001570  B4D8               	btfsc	status,2,c
  4825  001572  EF7B  F00A         	goto	l4978
  4826  001576  0A1D               	xorlw	29	; case 48
  4827  001578  B4D8               	btfsc	status,2,c
  4828  00157A  EF85  F00A         	goto	l4982
  4829  00157E  EF91  F00A         	goto	l4998
  4830  001582                     l5004:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4834  001582  51B6               	movf	vfpfcnvrt@done& (0+255),w,b
  4835  001584  11B7               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4836  001586  B4D8               	btfsc	status,2,c
  4837  001588  EFC8  F00A         	goto	u5531
  4838  00158C  EFCA  F00A         	goto	u5530
  4839  001590                     u5531:
  4840  001590  EF97  F00A         	goto	l5002
  4841  001594                     u5530:
  4842  001594                     
  4843                           ; BSR set to: 0
  4844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4845  001594  A1F8               	btfss	_flags& (0+255),0,b
  4846  001596  EFCF  F00A         	goto	u5541
  4847  00159A  EFD1  F00A         	goto	u5540
  4848  00159E                     u5541:
  4849  00159E  EFD2  F00A         	goto	l5008
  4850  0015A2                     u5540:
  4851  0015A2                     
  4852                           ; BSR set to: 0
  4853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4854  0015A2  93F8               	bcf	_flags& (0+255),1,b
  4855  0015A4                     l5008:
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  4859  0015A4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4860  0015A8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4861  0015AC  CFDE FFF6          	movff	postinc2,tblptrl
  4862  0015B0  CFDD FFF7          	movff	postdec2,tblptrh
  4863  0015B4                     	if	0	;tblptru may be non-zero
  4864  0015B4                     	endif
  4865  0015B4                     	if	0	;tblptru may be non-zero
  4866  0015B4                     	endif
  4867  0015B4  0008               	tblrd		*
  4868  0015B6  50F5               	movf	tablat,w,c
  4869  0015B8  0A2E               	xorlw	46
  4870  0015BA  A4D8               	btfss	status,2,c
  4871  0015BC  EFE2  F00A         	goto	u5551
  4872  0015C0  EFE4  F00A         	goto	u5550
  4873  0015C4                     u5551:
  4874  0015C4  EF62  F00B         	goto	l5028
  4875  0015C8                     u5550:
  4876  0015C8                     
  4877                           ; BSR set to: 0
  4878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  4879  0015C8  0E00               	movlw	0
  4880  0015CA  6FF7               	movwf	(_prec+1)& (0+255),b
  4881  0015CC  0E00               	movlw	0
  4882  0015CE  6FF6               	movwf	_prec& (0+255),b
  4883  0015D0                     
  4884                           ; BSR set to: 0
  4885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  4886  0015D0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4887  0015D4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4888  0015D8  2ADE               	incf	postinc2,f,c
  4889  0015DA  0E00               	movlw	0
  4890  0015DC  22DD               	addwfc	postdec2,f,c
  4891  0015DE                     
  4892                           ; BSR set to: 0
  4893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  4894  0015DE  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4895  0015E2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4896  0015E6  CFDE FFF6          	movff	postinc2,tblptrl
  4897  0015EA  CFDD FFF7          	movff	postdec2,tblptrh
  4898  0015EE                     	if	0	;tblptru may be non-zero
  4899  0015EE                     	endif
  4900  0015EE                     	if	0	;tblptru may be non-zero
  4901  0015EE                     	endif
  4902  0015EE  0008               	tblrd		*
  4903  0015F0  50F5               	movf	tablat,w,c
  4904  0015F2  0A2A               	xorlw	42
  4905  0015F4  A4D8               	btfss	status,2,c
  4906  0015F6  EFFF  F00A         	goto	u5561
  4907  0015FA  EF01  F00B         	goto	u5560
  4908  0015FE                     u5561:
  4909  0015FE  EF1E  F00B         	goto	l5018
  4910  001602                     u5560:
  4911  001602                     
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  4914  001602  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4915  001606  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4916  00160A  2ADE               	incf	postinc2,f,c
  4917  00160C  0E00               	movlw	0
  4918  00160E  22DD               	addwfc	postdec2,f,c
  4919                           
  4920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4921  001610  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4922  001614  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4923  001618  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  4924  00161C  0E02               	movlw	2
  4925  00161E  26DE               	addwf	postinc2,f,c
  4926  001620  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  4927  001624  0E00               	movlw	0
  4928  001626  22DD               	addwfc	postdec2,f,c
  4929  001628  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4930  00162C  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4931  001630  CFDE F0F6          	movff	postinc2,_prec
  4932  001634  CFDD F0F7          	movff	postdec2,_prec+1
  4933                           
  4934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  4935  001638  EF62  F00B         	goto	l5028
  4936  00163C                     l5018:
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  4940  00163C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4941  001640  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4942  001644  CFDE F008          	movff	postinc2,atoi@s
  4943  001648  CFDD F009          	movff	postdec2,atoi@s+1
  4944  00164C  EC9F  F019         	call	_atoi	;wreg free
  4945  001650  C008  F0F6         	movff	?_atoi,_prec
  4946  001654  C009  F0F7         	movff	?_atoi+1,_prec+1
  4947                           
  4948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4949  001658  EF35  F00B         	goto	l5022
  4950  00165C                     l5020:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  4954  00165C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4955  001660  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4956  001664  2ADE               	incf	postinc2,f,c
  4957  001666  0E00               	movlw	0
  4958  001668  22DD               	addwfc	postdec2,f,c
  4959  00166A                     l5022:
  4960  00166A  0ED0               	movlw	208
  4961  00166C  0100               	movlb	0	; () banked
  4962  00166E  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  4963  001670  0EFF               	movlw	255
  4964  001672  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4965  001674  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4966  001678  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4967  00167C  CFDE FFF6          	movff	postinc2,tblptrl
  4968  001680  CFDD FFF7          	movff	postdec2,tblptrh
  4969  001684                     	if	0	;tblptru may be non-zero
  4970  001684                     	endif
  4971  001684                     	if	0	;tblptru may be non-zero
  4972  001684                     	endif
  4973  001684  0008               	tblrd		*
  4974  001686  50F5               	movf	tablat,w,c
  4975  001688  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4976  00168A  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4977  00168C  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  4978  00168E  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4979  001690  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4980  001692  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4981  001694  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4982  001696  E10A               	bnz	u5570
  4983  001698  0E0A               	movlw	10
  4984  00169A  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4985  00169C  A0D8               	btfss	status,0,c
  4986  00169E  EF53  F00B         	goto	u5571
  4987  0016A2  EF56  F00B         	goto	u5570
  4988  0016A6                     u5571:
  4989  0016A6  0E01               	movlw	1
  4990  0016A8  EF57  F00B         	goto	u5580
  4991  0016AC                     u5570:
  4992  0016AC  0E00               	movlw	0
  4993  0016AE                     u5580:
  4994  0016AE  6FB8               	movwf	_vfpfcnvrt$1487& (0+255),b
  4995  0016B0  6BB9               	clrf	(_vfpfcnvrt$1487+1)& (0+255),b
  4996  0016B2                     
  4997                           ; BSR set to: 0
  4998  0016B2  51B8               	movf	_vfpfcnvrt$1487& (0+255),w,b
  4999  0016B4  11B9               	iorwf	(_vfpfcnvrt$1487+1)& (0+255),w,b
  5000  0016B6  A4D8               	btfss	status,2,c
  5001  0016B8  EF60  F00B         	goto	u5591
  5002  0016BC  EF62  F00B         	goto	u5590
  5003  0016C0                     u5591:
  5004  0016C0  EF2E  F00B         	goto	l5020
  5005  0016C4                     u5590:
  5006  0016C4                     l5028:
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  5010  0016C4  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5011  0016C8  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5012  0016CC  CFDE FFF6          	movff	postinc2,tblptrl
  5013  0016D0  CFDD FFF7          	movff	postdec2,tblptrh
  5014  0016D4                     	if	0	;tblptru may be non-zero
  5015  0016D4                     	endif
  5016  0016D4                     	if	0	;tblptru may be non-zero
  5017  0016D4                     	endif
  5018  0016D4  0008               	tblrd		*
  5019  0016D6  50F5               	movf	tablat,w,c
  5020  0016D8  6E07               	movwf	tolower@c^0,c
  5021  0016DA  6A08               	clrf	(tolower@c+1)^0,c
  5022  0016DC  EC64  F020         	call	_tolower	;wreg free
  5023  0016E0  5007               	movf	?_tolower^0,w,c
  5024  0016E2  0100               	movlb	0	; () banked
  5025  0016E4  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  5026  0016E6                     
  5027                           ; BSR set to: 0
  5028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  5029  0016E6  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  5030  0016E8  B4D8               	btfsc	status,2,c
  5031  0016EA  EF79  F00B         	goto	u5601
  5032  0016EE  EF7B  F00B         	goto	u5600
  5033  0016F2                     u5601:
  5034  0016F2  EFB5  F00B         	goto	l5038
  5035  0016F6                     u5600:
  5036  0016F6                     
  5037                           ; BSR set to: 0
  5038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  5039  0016F6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5040  0016FA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5041  0016FE  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  5042  001702  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  5043  001706  0E01               	movlw	1
  5044  001708  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  5045  00170A  0E00               	movlw	0
  5046  00170C  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5047  00170E  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5048  001712  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5049  001716                     	if	0	;tblptru may be non-zero
  5050  001716                     	endif
  5051  001716                     	if	0	;tblptru may be non-zero
  5052  001716                     	endif
  5053  001716  0008               	tblrd		*
  5054  001718  50F5               	movf	tablat,w,c
  5055  00171A  6E07               	movwf	tolower@c^0,c
  5056  00171C  6A08               	clrf	(tolower@c+1)^0,c
  5057  00171E  EC64  F020         	call	_tolower	;wreg free
  5058  001722  5007               	movf	?_tolower^0,w,c
  5059  001724  0100               	movlb	0	; () banked
  5060  001726  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  5061  001728                     
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  5064  001728  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  5065  00172A  B4D8               	btfsc	status,2,c
  5066  00172C  EF9A  F00B         	goto	u5611
  5067  001730  EF9C  F00B         	goto	u5610
  5068  001734                     u5611:
  5069  001734  EFB5  F00B         	goto	l5038
  5070  001738                     u5610:
  5071  001738                     
  5072                           ; BSR set to: 0
  5073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  5074  001738  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5075  00173C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5076  001740  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  5077  001744  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  5078  001748  0E02               	movlw	2
  5079  00174A  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  5080  00174C  0E00               	movlw	0
  5081  00174E  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5082  001750  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5083  001754  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5084  001758                     	if	0	;tblptru may be non-zero
  5085  001758                     	endif
  5086  001758                     	if	0	;tblptru may be non-zero
  5087  001758                     	endif
  5088  001758  0008               	tblrd		*
  5089  00175A  50F5               	movf	tablat,w,c
  5090  00175C  6E07               	movwf	tolower@c^0,c
  5091  00175E  6A08               	clrf	(tolower@c+1)^0,c
  5092  001760  EC64  F020         	call	_tolower	;wreg free
  5093  001764  5007               	movf	?_tolower^0,w,c
  5094  001766  0100               	movlb	0	; () banked
  5095  001768  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  5096  00176A                     l5038:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  5100  00176A  0E66               	movlw	102
  5101  00176C  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5102  00176E  A4D8               	btfss	status,2,c
  5103  001770  EFBC  F00B         	goto	u5621
  5104  001774  EFBE  F00B         	goto	u5620
  5105  001778                     u5621:
  5106  001778  EFFE  F00B         	goto	l5050
  5107  00177C                     u5620:
  5108  00177C                     
  5109                           ; BSR set to: 0
  5110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  5111  00177C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5112  001780  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5113  001784  CFDE FFF6          	movff	postinc2,tblptrl
  5114  001788  CFDD FFF7          	movff	postdec2,tblptrh
  5115  00178C                     	if	0	;tblptru may be non-zero
  5116  00178C                     	endif
  5117  00178C                     	if	0	;tblptru may be non-zero
  5118  00178C                     	endif
  5119  00178C  0008               	tblrd		*
  5120  00178E  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  5121  001792                     
  5122                           ; BSR set to: 0
  5123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  5124  001792  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5125  001796  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5126  00179A  2ADE               	incf	postinc2,f,c
  5127  00179C  0E00               	movlw	0
  5128  00179E  22DD               	addwfc	postdec2,f,c
  5129  0017A0                     
  5130                           ; BSR set to: 0
  5131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5132  0017A0  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5133  0017A4  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5134  0017A8  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  5135  0017AC  0E04               	movlw	4
  5136  0017AE  26DE               	addwf	postinc2,f,c
  5137  0017B0  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  5138  0017B4  0E00               	movlw	0
  5139  0017B6  22DD               	addwfc	postdec2,f,c
  5140  0017B8  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5141  0017BC  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5142  0017C0  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5143  0017C4  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5144  0017C8  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5145  0017CC  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5146  0017D0                     l5046:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  5150  0017D0  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  5151  0017D4  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5152  0017D8  C0BC  F062         	movff	vfpfcnvrt@f,efgtoa@f
  5153  0017DC  C0BD  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5154  0017E0  C0BE  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5155  0017E4  C0BF  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5156  0017E8  C0C3  F066         	movff	vfpfcnvrt@c,efgtoa@c
  5157  0017EC  EC25  F004         	call	_efgtoa	;wreg free
  5158  0017F0  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  5159  0017F4  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5160  0017F8  EF57  F00D         	goto	l1392
  5161  0017FC                     l5050:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5165  0017FC  0EC0               	movlw	low vfpfcnvrt@ct
  5166  0017FE  6E01               	movwf	strncmp@_l^0,c
  5167  001800  0E00               	movlw	high vfpfcnvrt@ct
  5168  001802  6E02               	movwf	(strncmp@_l+1)^0,c
  5169  001804  0E40               	movlw	low STR_30
  5170  001806  6E03               	movwf	strncmp@_r^0,c
  5171  001808  0E08               	movlw	high STR_30
  5172  00180A  6E04               	movwf	(strncmp@_r+1)^0,c
  5173  00180C  0E00               	movlw	0
  5174  00180E  6E06               	movwf	(strncmp@n+1)^0,c
  5175  001810  0E02               	movlw	2
  5176  001812  6E05               	movwf	strncmp@n^0,c
  5177  001814  EC16  F01D         	call	_strncmp	;wreg free
  5178  001818  5001               	movf	?_strncmp^0,w,c
  5179  00181A  1002               	iorwf	(?_strncmp+1)^0,w,c
  5180  00181C  A4D8               	btfss	status,2,c
  5181  00181E  EF13  F00C         	goto	u5631
  5182  001822  EF15  F00C         	goto	u5630
  5183  001826                     u5631:
  5184  001826  EF91  F00C         	goto	l5066
  5185  00182A                     u5630:
  5186  00182A                     
  5187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5188  00182A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5189  00182E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5190  001832  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  5191  001836  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  5192  00183A  0E01               	movlw	1
  5193  00183C  0100               	movlb	0	; () banked
  5194  00183E  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  5195  001840  0E00               	movlw	0
  5196  001842  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5197  001844  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5198  001848  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5199  00184C                     	if	0	;tblptru may be non-zero
  5200  00184C                     	endif
  5201  00184C                     	if	0	;tblptru may be non-zero
  5202  00184C                     	endif
  5203  00184C  0008               	tblrd		*
  5204  00184E  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  5205  001852  0EBF               	movlw	191
  5206  001854  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  5207  001856  0EFF               	movlw	255
  5208  001858  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5209  00185A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5210  00185E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5211  001862  CFDE FFF6          	movff	postinc2,tblptrl
  5212  001866  CFDD FFF7          	movff	postdec2,tblptrh
  5213  00186A                     	if	0	;tblptru may be non-zero
  5214  00186A                     	endif
  5215  00186A                     	if	0	;tblptru may be non-zero
  5216  00186A                     	endif
  5217  00186A  0008               	tblrd		*
  5218  00186C  50F5               	movf	tablat,w,c
  5219  00186E  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5220  001870  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5221  001872  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  5222  001874  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5223  001876  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5224  001878  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5225  00187A  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5226  00187C  E10A               	bnz	u5640
  5227  00187E  0E1A               	movlw	26
  5228  001880  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5229  001882  A0D8               	btfss	status,0,c
  5230  001884  EF46  F00C         	goto	u5641
  5231  001888  EF49  F00C         	goto	u5640
  5232  00188C                     u5641:
  5233  00188C  0E01               	movlw	1
  5234  00188E  EF4A  F00C         	goto	u5650
  5235  001892                     u5640:
  5236  001892  0E00               	movlw	0
  5237  001894                     u5650:
  5238  001894  6FBA               	movwf	_vfpfcnvrt$1491& (0+255),b
  5239  001896  6BBB               	clrf	(_vfpfcnvrt$1491+1)& (0+255),b
  5240  001898                     
  5241                           ; BSR set to: 0
  5242  001898  51BA               	movf	_vfpfcnvrt$1491& (0+255),w,b
  5243  00189A  11BB               	iorwf	(_vfpfcnvrt$1491+1)& (0+255),w,b
  5244  00189C  B4D8               	btfsc	status,2,c
  5245  00189E  EF53  F00C         	goto	u5661
  5246  0018A2  EF55  F00C         	goto	u5660
  5247  0018A6                     u5661:
  5248  0018A6  EF6F  F00C         	goto	l5060
  5249  0018AA                     u5660:
  5250  0018AA                     
  5251                           ; BSR set to: 0
  5252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5253  0018AA  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5254  0018AE  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5255  0018B2  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  5256  0018B6  0E04               	movlw	4
  5257  0018B8  26DE               	addwf	postinc2,f,c
  5258  0018BA  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  5259  0018BE  0E00               	movlw	0
  5260  0018C0  22DD               	addwfc	postdec2,f,c
  5261  0018C2  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5262  0018C6  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5263  0018CA  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5264  0018CE  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5265  0018D2  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5266  0018D6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5267                           
  5268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  5269  0018DA  EF87  F00C         	goto	l1399
  5270  0018DE                     l5060:
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5274  0018DE  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5275  0018E2  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5276  0018E6  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  5277  0018EA  0E04               	movlw	4
  5278  0018EC  26DE               	addwf	postinc2,f,c
  5279  0018EE  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  5280  0018F2  0E00               	movlw	0
  5281  0018F4  22DD               	addwfc	postdec2,f,c
  5282  0018F6  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5283  0018FA  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5284  0018FE  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5285  001902  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5286  001906  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5287  00190A  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5288  00190E                     l1399:
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5292  00190E  0E02               	movlw	2
  5293  001910  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5294  001914  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5295  001918  26DE               	addwf	postinc2,f,c
  5296  00191A  0E00               	movlw	0
  5297  00191C  22DD               	addwfc	postdec2,f,c
  5298  00191E  EFE8  F00B         	goto	l5046
  5299  001922                     l5066:
  5300                           
  5301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5302  001922  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5303  001926  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5304  00192A  CFDE FFF6          	movff	postinc2,tblptrl
  5305  00192E  CFDD FFF7          	movff	postdec2,tblptrh
  5306  001932                     	if	0	;tblptru may be non-zero
  5307  001932                     	endif
  5308  001932                     	if	0	;tblptru may be non-zero
  5309  001932                     	endif
  5310  001932  0008               	tblrd		*
  5311  001934  50F5               	movf	tablat,w,c
  5312  001936  0A78               	xorlw	120
  5313  001938  B4D8               	btfsc	status,2,c
  5314  00193A  EFA1  F00C         	goto	u5671
  5315  00193E  EFA3  F00C         	goto	u5670
  5316  001942                     u5671:
  5317  001942  EFB5  F00C         	goto	l5070
  5318  001946                     u5670:
  5319  001946  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5320  00194A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5321  00194E  CFDE FFF6          	movff	postinc2,tblptrl
  5322  001952  CFDD FFF7          	movff	postdec2,tblptrh
  5323  001956                     	if	0	;tblptru may be non-zero
  5324  001956                     	endif
  5325  001956                     	if	0	;tblptru may be non-zero
  5326  001956                     	endif
  5327  001956  0008               	tblrd		*
  5328  001958  50F5               	movf	tablat,w,c
  5329  00195A  0A58               	xorlw	88
  5330  00195C  A4D8               	btfss	status,2,c
  5331  00195E  EFB3  F00C         	goto	u5681
  5332  001962  EFB5  F00C         	goto	u5680
  5333  001966                     u5681:
  5334  001966  EF04  F00D         	goto	l5080
  5335  00196A                     u5680:
  5336  00196A                     l5070:
  5337                           
  5338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  5339  00196A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5340  00196E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5341  001972  CFDE FFF6          	movff	postinc2,tblptrl
  5342  001976  CFDD FFF7          	movff	postdec2,tblptrh
  5343  00197A                     	if	0	;tblptru may be non-zero
  5344  00197A                     	endif
  5345  00197A                     	if	0	;tblptru may be non-zero
  5346  00197A                     	endif
  5347  00197A  0008               	tblrd		*
  5348  00197C  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  5349  001980                     
  5350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  5351  001980  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5352  001984  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5353  001988  2ADE               	incf	postinc2,f,c
  5354  00198A  0E00               	movlw	0
  5355  00198C  22DD               	addwfc	postdec2,f,c
  5356  00198E                     
  5357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5358  00198E  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5359  001992  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5360  001996  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  5361  00199A  0E02               	movlw	2
  5362  00199C  26DE               	addwf	postinc2,f,c
  5363  00199E  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  5364  0019A2  0E00               	movlw	0
  5365  0019A4  22DD               	addwfc	postdec2,f,c
  5366  0019A6  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5367  0019AA  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5368  0019AE  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt+2
  5369  0019B2  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+3
  5370  0019B6  C0AC  F0AE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5371  0019BA  C0AD  F0AF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5372  0019BE  0100               	movlb	0	; () banked
  5373  0019C0  6BB0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5374  0019C2  6BB1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5375  0019C4  6BB2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5376  0019C6  6BB3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5377  0019C8  6BB4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5378  0019CA  6BB5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5379  0019CC                     
  5380                           ; BSR set to: 0
  5381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  5382  0019CC  C0A4  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5383  0019D0  C0A5  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5384  0019D4  C0AE  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5385  0019D8  C0AF  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5386  0019DC  C0B0  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5387  0019E0  C0B1  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5388  0019E4  C0B2  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5389  0019E8  C0B3  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5390  0019EC  C0B4  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5391  0019F0  C0B5  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5392  0019F4  C0C3  F026         	movff	vfpfcnvrt@c,xtoa@x
  5393  0019F8  EC12  F015         	call	_xtoa	;wreg free
  5394  0019FC  C01C  F0A4         	movff	?_xtoa,?_vfpfcnvrt
  5395  001A00  C01D  F0A5         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5396  001A04  EF57  F00D         	goto	l1392
  5397  001A08                     l5080:
  5398                           
  5399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5400  001A08  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5401  001A0C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5402  001A10  CFDE FFF6          	movff	postinc2,tblptrl
  5403  001A14  CFDD FFF7          	movff	postdec2,tblptrh
  5404  001A18                     	if	0	;tblptru may be non-zero
  5405  001A18                     	endif
  5406  001A18                     	if	0	;tblptru may be non-zero
  5407  001A18                     	endif
  5408  001A18  0008               	tblrd		*
  5409  001A1A  50F5               	movf	tablat,w,c
  5410  001A1C  0A25               	xorlw	37
  5411  001A1E  A4D8               	btfss	status,2,c
  5412  001A20  EF14  F00D         	goto	u5691
  5413  001A24  EF16  F00D         	goto	u5690
  5414  001A28                     u5691:
  5415  001A28  EF2E  F00D         	goto	l5090
  5416  001A2C                     u5690:
  5417  001A2C                     
  5418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5419  001A2C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5420  001A30  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5421  001A34  2ADE               	incf	postinc2,f,c
  5422  001A36  0E00               	movlw	0
  5423  001A38  22DD               	addwfc	postdec2,f,c
  5424  001A3A                     
  5425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5426  001A3A  0E00               	movlw	0
  5427  001A3C  6E02               	movwf	(fputc@c+1)^0,c
  5428  001A3E  0E25               	movlw	37
  5429  001A40  6E01               	movwf	fputc@c^0,c
  5430  001A42  C0A4  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5431  001A46  C0A5  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5432  001A4A  EC81  F01D         	call	_fputc	;wreg free
  5433  001A4E                     l5086:
  5434                           
  5435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5436  001A4E  0E00               	movlw	0
  5437  001A50  0100               	movlb	0	; () banked
  5438  001A52  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5439  001A54  0E01               	movlw	1
  5440  001A56  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  5441  001A58  EF57  F00D         	goto	l1392
  5442  001A5C                     l5090:
  5443                           
  5444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5445  001A5C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5446  001A60  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5447  001A64  2ADE               	incf	postinc2,f,c
  5448  001A66  0E00               	movlw	0
  5449  001A68  22DD               	addwfc	postdec2,f,c
  5450  001A6A                     
  5451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5452  001A6A  0E00               	movlw	0
  5453  001A6C  0100               	movlb	0	; () banked
  5454  001A6E  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5455  001A70  0E00               	movlw	0
  5456  001A72  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  5457  001A74  EF57  F00D         	goto	l1392
  5458  001A78                     l5096:
  5459                           
  5460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5461  001A78  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5462  001A7C  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5463  001A80  CFDE FFF6          	movff	postinc2,tblptrl
  5464  001A84  CFDD FFF7          	movff	postdec2,tblptrh
  5465  001A88                     	if	0	;tblptru may be non-zero
  5466  001A88                     	endif
  5467  001A88                     	if	0	;tblptru may be non-zero
  5468  001A88                     	endif
  5469  001A88  0008               	tblrd		*
  5470  001A8A  50F5               	movf	tablat,w,c
  5471  001A8C  6E01               	movwf	fputc@c^0,c
  5472  001A8E  6A02               	clrf	(fputc@c+1)^0,c
  5473  001A90  C0A4  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5474  001A94  C0A5  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5475  001A98  EC81  F01D         	call	_fputc	;wreg free
  5476  001A9C                     
  5477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5478  001A9C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5479  001AA0  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5480  001AA4  2ADE               	incf	postinc2,f,c
  5481  001AA6  0E00               	movlw	0
  5482  001AA8  22DD               	addwfc	postdec2,f,c
  5483  001AAA  EF27  F00D         	goto	l5086
  5484  001AAE                     l1392:
  5485  001AAE  0012               	return		;funcret
  5486  001AB0                     __end_of_vfpfcnvrt:
  5487                           	callstack 0
  5488                           
  5489 ;; *************** function _xtoa *****************
  5490 ;; Defined at:
  5491 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5494 ;;		 -> sprintf@f(6), 
  5495 ;;  d               8   29[COMRAM] unsigned long long 
  5496 ;;  x               1   37[COMRAM] unsigned char 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;  n               8   54[COMRAM] unsigned long long 
  5499 ;;  c               2   64[COMRAM] int 
  5500 ;;  i               2   62[COMRAM] int 
  5501 ;;  w               2   52[COMRAM] int 
  5502 ;;  p               2   50[COMRAM] int 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  2   27[COMRAM] int 
  5505 ;; Registers used:
  5506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5512 ;;      Params:        11       0       0       0       0       0       0       0       0
  5513 ;;      Locals:        20       0       0       0       0       0       0       0       0
  5514 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5515 ;;      Totals:        39       0       0       0       0       0       0       0       0
  5516 ;;Total ram usage:       39 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; Hardware stack levels required when called: 4
  5519 ;; This function calls:
  5520 ;;		_isalpha
  5521 ;;		_isupper
  5522 ;;		_pad
  5523 ;;		_toupper
  5524 ;; This function is called by:
  5525 ;;		_vfpfcnvrt
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text28
  5530  002A24                     __ptext28:
  5531                           	callstack 0
  5532  002A24                     _xtoa:
  5533                           	callstack 22
  5534  002A24                     
  5535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  5536  002A24  0100               	movlb	0	; () banked
  5537  002A26  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5538  002A28  EF18  F015         	goto	u5191
  5539  002A2C  EF1A  F015         	goto	u5190
  5540  002A30                     u5191:
  5541  002A30  EF1B  F015         	goto	l4798
  5542  002A34                     u5190:
  5543  002A34                     
  5544                           ; BSR set to: 0
  5545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  5546  002A34  93F8               	bcf	_flags& (0+255),1,b
  5547  002A36                     l4798:
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  5551  002A36  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5552  002A38  EF28  F015         	goto	u5200
  5553  002A3C  51F7               	movf	(_prec+1)& (0+255),w,b
  5554  002A3E  E106               	bnz	u5201
  5555  002A40  05F6               	decf	_prec& (0+255),w,b
  5556  002A42  B0D8               	btfsc	status,0,c
  5557  002A44  EF26  F015         	goto	u5201
  5558  002A48  EF28  F015         	goto	u5200
  5559  002A4C                     u5201:
  5560  002A4C  EF2E  F015         	goto	l1338
  5561  002A50                     u5200:
  5562  002A50                     
  5563                           ; BSR set to: 0
  5564  002A50  0E00               	movlw	0
  5565  002A52  6E34               	movwf	(xtoa@p+1)^0,c
  5566  002A54  0E01               	movlw	1
  5567  002A56  6E33               	movwf	xtoa@p^0,c
  5568  002A58  EF32  F015         	goto	l1340
  5569  002A5C                     l1338:
  5570                           
  5571                           ; BSR set to: 0
  5572  002A5C  C0F6  F033         	movff	_prec,xtoa@p
  5573  002A60  C0F7  F034         	movff	_prec+1,xtoa@p+1
  5574  002A64                     l1340:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  5578  002A64  C0F4  F035         	movff	_width,xtoa@w
  5579  002A68  C0F5  F036         	movff	_width+1,xtoa@w+1
  5580                           
  5581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5582  002A6C  A9F8               	btfss	_flags& (0+255),4,b
  5583  002A6E  EF3B  F015         	goto	u5211
  5584  002A72  EF3D  F015         	goto	u5210
  5585  002A76                     u5211:
  5586  002A76  EF41  F015         	goto	l4804
  5587  002A7A                     u5210:
  5588  002A7A                     
  5589                           ; BSR set to: 0
  5590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  5591  002A7A  0EFE               	movlw	254
  5592  002A7C  2635               	addwf	xtoa@w^0,f,c
  5593  002A7E  0EFF               	movlw	255
  5594  002A80  2236               	addwfc	(xtoa@w+1)^0,f,c
  5595  002A82                     l4804:
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  5599  002A82  C01E  F037         	movff	xtoa@d,xtoa@n
  5600  002A86  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5601  002A8A  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5602  002A8E  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5603  002A92  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5604  002A96  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5605  002A9A  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5606  002A9E  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5607  002AA2                     
  5608                           ; BSR set to: 0
  5609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  5610  002AA2  0E00               	movlw	0
  5611  002AA4  6E40               	movwf	(xtoa@i+1)^0,c
  5612  002AA6  0E4F               	movlw	79
  5613  002AA8  6E3F               	movwf	xtoa@i^0,c
  5614  002AAA                     
  5615                           ; BSR set to: 0
  5616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  5617  002AAA  0E00               	movlw	0
  5618  002AAC  0101               	movlb	1	; () banked
  5619  002AAE  6F5D               	movwf	(_dbuf+79)& (0+255),b
  5620                           
  5621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5622  002AB0  EF0D  F016         	goto	l4840
  5623  002AB4                     l4810:
  5624                           
  5625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  5626  002AB4  063F               	decf	xtoa@i^0,f,c
  5627  002AB6  A0D8               	btfss	status,0,c
  5628  002AB8  0640               	decf	(xtoa@i+1)^0,f,c
  5629  002ABA                     
  5630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  5631  002ABA  0E0F               	movlw	15
  5632  002ABC  1437               	andwf	xtoa@n^0,w,c
  5633  002ABE  6E41               	movwf	xtoa@c^0,c
  5634  002AC0  6A42               	clrf	(xtoa@c+1)^0,c
  5635  002AC2                     
  5636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5637  002AC2  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5638  002AC4  EF6D  F015         	goto	u5221
  5639  002AC8  5042               	movf	(xtoa@c+1)^0,w,c
  5640  002ACA  E109               	bnz	u5220
  5641  002ACC  0E0A               	movlw	10
  5642  002ACE  5C41               	subwf	xtoa@c^0,w,c
  5643  002AD0  A0D8               	btfss	status,0,c
  5644  002AD2  EF6D  F015         	goto	u5221
  5645  002AD6  EF6F  F015         	goto	u5220
  5646  002ADA                     u5221:
  5647  002ADA  EF77  F015         	goto	l4818
  5648  002ADE                     u5220:
  5649  002ADE  0E57               	movlw	87
  5650  002AE0  2441               	addwf	xtoa@c^0,w,c
  5651  002AE2  6E41               	movwf	xtoa@c^0,c
  5652  002AE4  0E00               	movlw	0
  5653  002AE6  2042               	addwfc	(xtoa@c+1)^0,w,c
  5654  002AE8  6E42               	movwf	(xtoa@c+1)^0,c
  5655  002AEA  EF7D  F015         	goto	l1347
  5656  002AEE                     l4818:
  5657  002AEE  0E30               	movlw	48
  5658  002AF0  2441               	addwf	xtoa@c^0,w,c
  5659  002AF2  6E41               	movwf	xtoa@c^0,c
  5660  002AF4  0E00               	movlw	0
  5661  002AF6  2042               	addwfc	(xtoa@c+1)^0,w,c
  5662  002AF8  6E42               	movwf	(xtoa@c+1)^0,c
  5663  002AFA                     l1347:
  5664  002AFA  0EBF               	movlw	191
  5665  002AFC  6E27               	movwf	??_xtoa^0,c
  5666  002AFE  0EFF               	movlw	255
  5667  002B00  6E28               	movwf	(??_xtoa+1)^0,c
  5668  002B02  5026               	movf	xtoa@x^0,w,c
  5669  002B04  6E29               	movwf	(??_xtoa+2)^0,c
  5670  002B06  6A2A               	clrf	(??_xtoa+3)^0,c
  5671  002B08  5027               	movf	??_xtoa^0,w,c
  5672  002B0A  2629               	addwf	(??_xtoa+2)^0,f,c
  5673  002B0C  5028               	movf	(??_xtoa+1)^0,w,c
  5674  002B0E  222A               	addwfc	(??_xtoa+3)^0,f,c
  5675  002B10  502A               	movf	(??_xtoa+3)^0,w,c
  5676  002B12  E10A               	bnz	u5230
  5677  002B14  0E1A               	movlw	26
  5678  002B16  5C29               	subwf	(??_xtoa+2)^0,w,c
  5679  002B18  A0D8               	btfss	status,0,c
  5680  002B1A  EF91  F015         	goto	u5231
  5681  002B1E  EF94  F015         	goto	u5230
  5682  002B22                     u5231:
  5683  002B22  0E01               	movlw	1
  5684  002B24  EF95  F015         	goto	u5240
  5685  002B28                     u5230:
  5686  002B28  0E00               	movlw	0
  5687  002B2A                     u5240:
  5688  002B2A  6E2F               	movwf	_xtoa$1472^0,c
  5689  002B2C  6A30               	clrf	(_xtoa$1472+1)^0,c
  5690  002B2E  502F               	movf	_xtoa$1472^0,w,c
  5691  002B30  1030               	iorwf	(_xtoa$1472+1)^0,w,c
  5692  002B32  B4D8               	btfsc	status,2,c
  5693  002B34  EF9E  F015         	goto	u5251
  5694  002B38  EFA0  F015         	goto	u5250
  5695  002B3C                     u5251:
  5696  002B3C  EFD0  F015         	goto	l4832
  5697  002B40                     u5250:
  5698  002B40  0E9F               	movlw	159
  5699  002B42  6E27               	movwf	??_xtoa^0,c
  5700  002B44  0EFF               	movlw	255
  5701  002B46  6E28               	movwf	(??_xtoa+1)^0,c
  5702  002B48  0E20               	movlw	32
  5703  002B4A  1041               	iorwf	xtoa@c^0,w,c
  5704  002B4C  6E29               	movwf	(??_xtoa+2)^0,c
  5705  002B4E  0E00               	movlw	0
  5706  002B50  1042               	iorwf	(xtoa@c+1)^0,w,c
  5707  002B52  6E2A               	movwf	(??_xtoa+3)^0,c
  5708  002B54  5027               	movf	??_xtoa^0,w,c
  5709  002B56  2629               	addwf	(??_xtoa+2)^0,f,c
  5710  002B58  5028               	movf	(??_xtoa+1)^0,w,c
  5711  002B5A  222A               	addwfc	(??_xtoa+3)^0,f,c
  5712  002B5C  502A               	movf	(??_xtoa+3)^0,w,c
  5713  002B5E  E10A               	bnz	u5260
  5714  002B60  0E1A               	movlw	26
  5715  002B62  5C29               	subwf	(??_xtoa+2)^0,w,c
  5716  002B64  A0D8               	btfss	status,0,c
  5717  002B66  EFB7  F015         	goto	u5261
  5718  002B6A  EFBA  F015         	goto	u5260
  5719  002B6E                     u5261:
  5720  002B6E  0E01               	movlw	1
  5721  002B70  EFBB  F015         	goto	u5270
  5722  002B74                     u5260:
  5723  002B74  0E00               	movlw	0
  5724  002B76                     u5270:
  5725  002B76  6E31               	movwf	_xtoa$1473^0,c
  5726  002B78  6A32               	clrf	(_xtoa$1473+1)^0,c
  5727  002B7A  5031               	movf	_xtoa$1473^0,w,c
  5728  002B7C  1032               	iorwf	(_xtoa$1473+1)^0,w,c
  5729  002B7E  B4D8               	btfsc	status,2,c
  5730  002B80  EFC4  F015         	goto	u5281
  5731  002B84  EFC6  F015         	goto	u5280
  5732  002B88                     u5281:
  5733  002B88  EFD0  F015         	goto	l4832
  5734  002B8C                     u5280:
  5735  002B8C                     
  5736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  5737  002B8C  C041  F007         	movff	xtoa@c,toupper@c
  5738  002B90  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5739  002B94  ECC3  F020         	call	_toupper	;wreg free
  5740  002B98  C007  F041         	movff	?_toupper,xtoa@c
  5741  002B9C  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5742  002BA0                     l4832:
  5743                           
  5744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  5745  002BA0  0E0E               	movlw	low _dbuf
  5746  002BA2  243F               	addwf	xtoa@i^0,w,c
  5747  002BA4  6ED9               	movwf	fsr2l,c
  5748  002BA6  0E01               	movlw	high _dbuf
  5749  002BA8  2040               	addwfc	(xtoa@i+1)^0,w,c
  5750  002BAA  6EDA               	movwf	fsr2h,c
  5751  002BAC  C041  FFDF         	movff	xtoa@c,indf2
  5752  002BB0                     
  5753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  5754  002BB0  0633               	decf	xtoa@p^0,f,c
  5755  002BB2  A0D8               	btfss	status,0,c
  5756  002BB4  0634               	decf	(xtoa@p+1)^0,f,c
  5757  002BB6                     
  5758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  5759  002BB6  0635               	decf	xtoa@w^0,f,c
  5760  002BB8  A0D8               	btfss	status,0,c
  5761  002BBA  0636               	decf	(xtoa@w+1)^0,f,c
  5762  002BBC                     
  5763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  5764  002BBC  C037  F027         	movff	xtoa@n,??_xtoa
  5765  002BC0  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5766  002BC4  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5767  002BC8  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5768  002BCC  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5769  002BD0  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5770  002BD4  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5771  002BD8  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5772  002BDC  0E05               	movlw	5
  5773  002BDE  EFFA  F015         	goto	u5290
  5774  002BE2                     u5295:
  5775  002BE2  90D8               	bcf	status,0,c
  5776  002BE4  322E               	rrcf	(??_xtoa+7)^0,f,c
  5777  002BE6  322D               	rrcf	(??_xtoa+6)^0,f,c
  5778  002BE8  322C               	rrcf	(??_xtoa+5)^0,f,c
  5779  002BEA  322B               	rrcf	(??_xtoa+4)^0,f,c
  5780  002BEC  322A               	rrcf	(??_xtoa+3)^0,f,c
  5781  002BEE  3229               	rrcf	(??_xtoa+2)^0,f,c
  5782  002BF0  3228               	rrcf	(??_xtoa+1)^0,f,c
  5783  002BF2  3227               	rrcf	??_xtoa^0,f,c
  5784  002BF4                     u5290:
  5785  002BF4  2EE8               	decfsz	wreg,f,c
  5786  002BF6  EFF1  F015         	goto	u5295
  5787  002BFA  C027  F037         	movff	??_xtoa,xtoa@n
  5788  002BFE  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5789  002C02  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5790  002C06  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5791  002C0A  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5792  002C0E  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5793  002C12  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5794  002C16  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5795  002C1A                     l4840:
  5796                           
  5797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5798  002C1A  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5799  002C1C  EF19  F016         	goto	u5301
  5800  002C20  5040               	movf	(xtoa@i+1)^0,w,c
  5801  002C22  E109               	bnz	u5300
  5802  002C24  0E02               	movlw	2
  5803  002C26  5C3F               	subwf	xtoa@i^0,w,c
  5804  002C28  A0D8               	btfss	status,0,c
  5805  002C2A  EF19  F016         	goto	u5301
  5806  002C2E  EF1B  F016         	goto	u5300
  5807  002C32                     u5301:
  5808  002C32  EF4C  F016         	goto	l1361
  5809  002C36                     u5300:
  5810  002C36  5037               	movf	xtoa@n^0,w,c
  5811  002C38  1038               	iorwf	(xtoa@n+1)^0,w,c
  5812  002C3A  1039               	iorwf	(xtoa@n+2)^0,w,c
  5813  002C3C  103A               	iorwf	(xtoa@n+3)^0,w,c
  5814  002C3E  103B               	iorwf	(xtoa@n+4)^0,w,c
  5815  002C40  103C               	iorwf	(xtoa@n+5)^0,w,c
  5816  002C42  103D               	iorwf	(xtoa@n+6)^0,w,c
  5817  002C44  103E               	iorwf	(xtoa@n+7)^0,w,c
  5818  002C46  A4D8               	btfss	status,2,c
  5819  002C48  EF28  F016         	goto	u5311
  5820  002C4C  EF2A  F016         	goto	u5310
  5821  002C50                     u5311:
  5822  002C50  EF5A  F015         	goto	l4810
  5823  002C54                     u5310:
  5824  002C54  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5825  002C56  EF37  F016         	goto	u5320
  5826  002C5A  5034               	movf	(xtoa@p+1)^0,w,c
  5827  002C5C  E106               	bnz	u5321
  5828  002C5E  0433               	decf	xtoa@p^0,w,c
  5829  002C60  B0D8               	btfsc	status,0,c
  5830  002C62  EF35  F016         	goto	u5321
  5831  002C66  EF37  F016         	goto	u5320
  5832  002C6A                     u5321:
  5833  002C6A  EF5A  F015         	goto	l4810
  5834  002C6E                     u5320:
  5835  002C6E  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5836  002C70  EF42  F016         	goto	u5331
  5837  002C74  5036               	movf	(xtoa@w+1)^0,w,c
  5838  002C76  E108               	bnz	u5330
  5839  002C78  0435               	decf	xtoa@w^0,w,c
  5840  002C7A  A0D8               	btfss	status,0,c
  5841  002C7C  EF42  F016         	goto	u5331
  5842  002C80  EF44  F016         	goto	u5330
  5843  002C84                     u5331:
  5844  002C84  EF4C  F016         	goto	l1361
  5845  002C88                     u5330:
  5846  002C88  0100               	movlb	0	; () banked
  5847  002C8A  B3F8               	btfsc	_flags& (0+255),1,b
  5848  002C8C  EF4A  F016         	goto	u5341
  5849  002C90  EF4C  F016         	goto	u5340
  5850  002C94                     u5341:
  5851  002C94  EF5A  F015         	goto	l4810
  5852  002C98                     u5340:
  5853  002C98                     l1361:
  5854                           
  5855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  5856  002C98  0100               	movlb	0	; () banked
  5857  002C9A  A9F8               	btfss	_flags& (0+255),4,b
  5858  002C9C  EF52  F016         	goto	u5351
  5859  002CA0  EF54  F016         	goto	u5350
  5860  002CA4                     u5351:
  5861  002CA4  EF6A  F016         	goto	l4856
  5862  002CA8                     u5350:
  5863  002CA8                     
  5864                           ; BSR set to: 0
  5865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  5866  002CA8  063F               	decf	xtoa@i^0,f,c
  5867  002CAA  A0D8               	btfss	status,0,c
  5868  002CAC  0640               	decf	(xtoa@i+1)^0,f,c
  5869  002CAE                     
  5870                           ; BSR set to: 0
  5871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  5872  002CAE  0E0E               	movlw	low _dbuf
  5873  002CB0  243F               	addwf	xtoa@i^0,w,c
  5874  002CB2  6ED9               	movwf	fsr2l,c
  5875  002CB4  0E01               	movlw	high _dbuf
  5876  002CB6  2040               	addwfc	(xtoa@i+1)^0,w,c
  5877  002CB8  6EDA               	movwf	fsr2h,c
  5878  002CBA  C026  FFDF         	movff	xtoa@x,indf2
  5879  002CBE                     
  5880                           ; BSR set to: 0
  5881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  5882  002CBE  063F               	decf	xtoa@i^0,f,c
  5883  002CC0  A0D8               	btfss	status,0,c
  5884  002CC2  0640               	decf	(xtoa@i+1)^0,f,c
  5885                           
  5886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  5887  002CC4  0E0E               	movlw	low _dbuf
  5888  002CC6  243F               	addwf	xtoa@i^0,w,c
  5889  002CC8  6ED9               	movwf	fsr2l,c
  5890  002CCA  0E01               	movlw	high _dbuf
  5891  002CCC  2040               	addwfc	(xtoa@i+1)^0,w,c
  5892  002CCE  6EDA               	movwf	fsr2h,c
  5893  002CD0  0E30               	movlw	48
  5894  002CD2  6EDF               	movwf	indf2,c
  5895  002CD4                     l4856:
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  5899  002CD4  C01C  F011         	movff	xtoa@fp,pad@fp
  5900  002CD8  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5901  002CDC  0E0E               	movlw	low _dbuf
  5902  002CDE  243F               	addwf	xtoa@i^0,w,c
  5903  002CE0  6E13               	movwf	pad@buf^0,c
  5904  002CE2  0E01               	movlw	high _dbuf
  5905  002CE4  2040               	addwfc	(xtoa@i+1)^0,w,c
  5906  002CE6  6E14               	movwf	(pad@buf+1)^0,c
  5907  002CE8  C035  F015         	movff	xtoa@w,pad@p
  5908  002CEC  C036  F016         	movff	xtoa@w+1,pad@p+1
  5909  002CF0  ECE6  F01D         	call	_pad	;wreg free
  5910  002CF4  C011  F01C         	movff	?_pad,?_xtoa
  5911  002CF8  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5912  002CFC  0012               	return		;funcret
  5913  002CFE                     __end_of_xtoa:
  5914                           	callstack 0
  5915                           
  5916 ;; *************** function _toupper *****************
  5917 ;; Defined at:
  5918 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  c               2    6[COMRAM] int 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  2    6[COMRAM] int 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5932 ;;      Params:         2       0       0       0       0       0       0       0       0
  5933 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5934 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5935 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5936 ;;Total ram usage:        8 bytes
  5937 ;; Hardware stack levels used: 1
  5938 ;; Hardware stack levels required when called: 1
  5939 ;; This function calls:
  5940 ;;		_islower
  5941 ;; This function is called by:
  5942 ;;		_xtoa
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text29
  5947  004186                     __ptext29:
  5948                           	callstack 0
  5949  004186                     _toupper:
  5950                           	callstack 24
  5951  004186  0E9F               	movlw	159
  5952  004188  6E09               	movwf	??_toupper^0,c
  5953  00418A  0EFF               	movlw	255
  5954  00418C  6E0A               	movwf	(??_toupper+1)^0,c
  5955  00418E  C007  F00B         	movff	toupper@c,??_toupper+2
  5956  004192  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5957  004196  5009               	movf	??_toupper^0,w,c
  5958  004198  260B               	addwf	(??_toupper+2)^0,f,c
  5959  00419A  500A               	movf	(??_toupper+1)^0,w,c
  5960  00419C  220C               	addwfc	(??_toupper+3)^0,f,c
  5961  00419E  500C               	movf	(??_toupper+3)^0,w,c
  5962  0041A0  E10A               	bnz	u4550
  5963  0041A2  0E1A               	movlw	26
  5964  0041A4  5C0B               	subwf	(??_toupper+2)^0,w,c
  5965  0041A6  A0D8               	btfss	status,0,c
  5966  0041A8  EFD8  F020         	goto	u4551
  5967  0041AC  EFDB  F020         	goto	u4550
  5968  0041B0                     u4551:
  5969  0041B0  0E01               	movlw	1
  5970  0041B2  EFDC  F020         	goto	u4560
  5971  0041B6                     u4550:
  5972  0041B6  0E00               	movlw	0
  5973  0041B8                     u4560:
  5974  0041B8  6E0D               	movwf	_toupper$1645^0,c
  5975  0041BA  6A0E               	clrf	(_toupper$1645+1)^0,c
  5976  0041BC  500D               	movf	_toupper$1645^0,w,c
  5977  0041BE  100E               	iorwf	(_toupper$1645+1)^0,w,c
  5978  0041C0  B4D8               	btfsc	status,2,c
  5979  0041C2  EFE5  F020         	goto	u4571
  5980  0041C6  EFE7  F020         	goto	u4570
  5981  0041CA                     u4571:
  5982  0041CA  EFED  F020         	goto	l1552
  5983  0041CE                     u4570:
  5984  0041CE  0E5F               	movlw	95
  5985  0041D0  1407               	andwf	toupper@c^0,w,c
  5986  0041D2  6E07               	movwf	?_toupper^0,c
  5987  0041D4  6A08               	clrf	(?_toupper+1)^0,c
  5988  0041D6  EFF1  F020         	goto	l1557
  5989  0041DA                     l1552:
  5990  0041DA  C007  F007         	movff	toupper@c,?_toupper
  5991  0041DE  C008  F008         	movff	toupper@c+1,?_toupper+1
  5992  0041E2                     l1557:
  5993  0041E2  0012               	return		;funcret
  5994  0041E4                     __end_of_toupper:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function _islower *****************
  5998 ;; Defined at:
  5999 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  c               2    0[COMRAM] int 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  2    0[COMRAM] int 
  6006 ;; Registers used:
  6007 ;;		wreg, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6013 ;;      Params:         2       0       0       0       0       0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6015 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6016 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6017 ;;Total ram usage:        6 bytes
  6018 ;; Hardware stack levels used: 1
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		_toupper
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           	psect	text30
  6027  004750                     __ptext30:
  6028                           	callstack 0
  6029  004750                     _islower:
  6030                           	callstack 24
  6031  004750  0E9F               	movlw	159
  6032  004752  6E03               	movwf	??_islower^0,c
  6033  004754  0EFF               	movlw	255
  6034  004756  6E04               	movwf	(??_islower+1)^0,c
  6035  004758  C001  F005         	movff	islower@c,??_islower+2
  6036  00475C  C002  F006         	movff	islower@c+1,??_islower+3
  6037  004760  5003               	movf	??_islower^0,w,c
  6038  004762  2605               	addwf	(??_islower+2)^0,f,c
  6039  004764  5004               	movf	(??_islower+1)^0,w,c
  6040  004766  2206               	addwfc	(??_islower+3)^0,f,c
  6041  004768  5006               	movf	(??_islower+3)^0,w,c
  6042  00476A  E10A               	bnz	u3550
  6043  00476C  0E1A               	movlw	26
  6044  00476E  5C05               	subwf	(??_islower+2)^0,w,c
  6045  004770  A0D8               	btfss	status,0,c
  6046  004772  EFBD  F023         	goto	u3551
  6047  004776  EFC0  F023         	goto	u3550
  6048  00477A                     u3551:
  6049  00477A  0E01               	movlw	1
  6050  00477C  EFC1  F023         	goto	u3560
  6051  004780                     u3550:
  6052  004780  0E00               	movlw	0
  6053  004782                     u3560:
  6054  004782  6E01               	movwf	?_islower^0,c
  6055  004784  6A02               	clrf	(?_islower+1)^0,c
  6056  004786  0012               	return		;funcret
  6057  004788                     __end_of_islower:
  6058                           	callstack 0
  6059                           
  6060 ;; *************** function _isalpha *****************
  6061 ;; Defined at:
  6062 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  c               2    0[COMRAM] int 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;		None
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  2    0[COMRAM] int 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6076 ;;      Params:         2       0       0       0       0       0       0       0       0
  6077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6078 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6079 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6080 ;;Total ram usage:        6 bytes
  6081 ;; Hardware stack levels used: 1
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_xtoa
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text31
  6090  0046DA                     __ptext31:
  6091                           	callstack 0
  6092  0046DA                     _isalpha:
  6093                           	callstack 25
  6094  0046DA  0E9F               	movlw	159
  6095  0046DC  6E03               	movwf	??_isalpha^0,c
  6096  0046DE  0EFF               	movlw	255
  6097  0046E0  6E04               	movwf	(??_isalpha+1)^0,c
  6098  0046E2  0E20               	movlw	32
  6099  0046E4  1001               	iorwf	isalpha@c^0,w,c
  6100  0046E6  6E05               	movwf	(??_isalpha+2)^0,c
  6101  0046E8  0E00               	movlw	0
  6102  0046EA  1002               	iorwf	(isalpha@c+1)^0,w,c
  6103  0046EC  6E06               	movwf	(??_isalpha+3)^0,c
  6104  0046EE  5003               	movf	??_isalpha^0,w,c
  6105  0046F0  2605               	addwf	(??_isalpha+2)^0,f,c
  6106  0046F2  5004               	movf	(??_isalpha+1)^0,w,c
  6107  0046F4  2206               	addwfc	(??_isalpha+3)^0,f,c
  6108  0046F6  5006               	movf	(??_isalpha+3)^0,w,c
  6109  0046F8  E10A               	bnz	u4530
  6110  0046FA  0E1A               	movlw	26
  6111  0046FC  5C05               	subwf	(??_isalpha+2)^0,w,c
  6112  0046FE  A0D8               	btfss	status,0,c
  6113  004700  EF84  F023         	goto	u4531
  6114  004704  EF87  F023         	goto	u4530
  6115  004708                     u4531:
  6116  004708  0E01               	movlw	1
  6117  00470A  EF88  F023         	goto	u4540
  6118  00470E                     u4530:
  6119  00470E  0E00               	movlw	0
  6120  004710                     u4540:
  6121  004710  6E01               	movwf	?_isalpha^0,c
  6122  004712  6A02               	clrf	(?_isalpha+1)^0,c
  6123  004714  0012               	return		;funcret
  6124  004716                     __end_of_isalpha:
  6125                           	callstack 0
  6126                           
  6127 ;; *************** function _strncmp *****************
  6128 ;; Defined at:
  6129 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6132 ;;		 -> vfpfcnvrt@ct(3), 
  6133 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6134 ;;		 -> STR_32(3), 
  6135 ;;  n               2    4[COMRAM] unsigned int 
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6138 ;;		 -> STR_32(3), 
  6139 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6140 ;;		 -> vfpfcnvrt@ct(3), 
  6141 ;; Return value:  Size  Location     Type
  6142 ;;                  2    0[COMRAM] int 
  6143 ;; Registers used:
  6144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6150 ;;      Params:         6       0       0       0       0       0       0       0       0
  6151 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6152 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6153 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6154 ;;Total ram usage:       11 bytes
  6155 ;; Hardware stack levels used: 1
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_vfpfcnvrt
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text32
  6164  003A2C                     __ptext32:
  6165                           	callstack 0
  6166  003A2C                     _strncmp:
  6167                           	callstack 26
  6168  003A2C  C001  F008         	movff	strncmp@_l,strncmp@l
  6169  003A30  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6170  003A34  C003  F00A         	movff	strncmp@_r,strncmp@r
  6171  003A38  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  6172  003A3C  0605               	decf	strncmp@n^0,f,c
  6173  003A3E  A0D8               	btfss	status,0,c
  6174  003A40  0606               	decf	(strncmp@n+1)^0,f,c
  6175  003A42  2805               	incf	strncmp@n^0,w,c
  6176  003A44  E106               	bnz	u5431
  6177  003A46  2806               	incf	(strncmp@n+1)^0,w,c
  6178  003A48  A4D8               	btfss	status,2,c
  6179  003A4A  EF29  F01D         	goto	u5431
  6180  003A4E  EF2B  F01D         	goto	u5430
  6181  003A52                     u5431:
  6182  003A52  EF38  F01D         	goto	l4910
  6183  003A56                     u5430:
  6184  003A56  0E00               	movlw	0
  6185  003A58  6E02               	movwf	(?_strncmp+1)^0,c
  6186  003A5A  0E00               	movlw	0
  6187  003A5C  6E01               	movwf	?_strncmp^0,c
  6188  003A5E  EF80  F01D         	goto	l1529
  6189  003A62                     l4908:
  6190  003A62  4A08               	infsnz	strncmp@l^0,f,c
  6191  003A64  2A09               	incf	(strncmp@l+1)^0,f,c
  6192  003A66  4A0A               	infsnz	strncmp@r^0,f,c
  6193  003A68  2A0B               	incf	(strncmp@r+1)^0,f,c
  6194  003A6A  0605               	decf	strncmp@n^0,f,c
  6195  003A6C  A0D8               	btfss	status,0,c
  6196  003A6E  0606               	decf	(strncmp@n+1)^0,f,c
  6197  003A70                     l4910:
  6198  003A70  C008  FFD9         	movff	strncmp@l,fsr2l
  6199  003A74  C009  FFDA         	movff	strncmp@l+1,fsr2h
  6200  003A78  50DF               	movf	indf2,w,c
  6201  003A7A  B4D8               	btfsc	status,2,c
  6202  003A7C  EF42  F01D         	goto	u5441
  6203  003A80  EF44  F01D         	goto	u5440
  6204  003A84                     u5441:
  6205  003A84  EF6F  F01D         	goto	l4918
  6206  003A88                     u5440:
  6207  003A88  C00A  FFF6         	movff	strncmp@r,tblptrl
  6208  003A8C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6209  003A90                     	if	0	;tblptru may be non-zero
  6210  003A90                     	endif
  6211  003A90                     	if	0	;tblptru may be non-zero
  6212  003A90                     	endif
  6213  003A90  0008               	tblrd		*
  6214  003A92  50F5               	movf	tablat,w,c
  6215  003A94  0900               	iorlw	0
  6216  003A96  B4D8               	btfsc	status,2,c
  6217  003A98  EF50  F01D         	goto	u5451
  6218  003A9C  EF52  F01D         	goto	u5450
  6219  003AA0                     u5451:
  6220  003AA0  EF6F  F01D         	goto	l4918
  6221  003AA4                     u5450:
  6222  003AA4  5005               	movf	strncmp@n^0,w,c
  6223  003AA6  1006               	iorwf	(strncmp@n+1)^0,w,c
  6224  003AA8  B4D8               	btfsc	status,2,c
  6225  003AAA  EF59  F01D         	goto	u5461
  6226  003AAE  EF5B  F01D         	goto	u5460
  6227  003AB2                     u5461:
  6228  003AB2  EF6F  F01D         	goto	l4918
  6229  003AB6                     u5460:
  6230  003AB6  C008  FFD9         	movff	strncmp@l,fsr2l
  6231  003ABA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  6232  003ABE  50DF               	movf	indf2,w,c
  6233  003AC0  6E07               	movwf	??_strncmp^0,c
  6234  003AC2  C00A  FFF6         	movff	strncmp@r,tblptrl
  6235  003AC6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6236  003ACA                     	if	0	;tblptru may be non-zero
  6237  003ACA                     	endif
  6238  003ACA                     	if	0	;tblptru may be non-zero
  6239  003ACA                     	endif
  6240  003ACA  0008               	tblrd		*
  6241  003ACC  50F5               	movf	tablat,w,c
  6242  003ACE  1807               	xorwf	??_strncmp^0,w,c
  6243  003AD0  B4D8               	btfsc	status,2,c
  6244  003AD2  EF6D  F01D         	goto	u5471
  6245  003AD6  EF6F  F01D         	goto	u5470
  6246  003ADA                     u5471:
  6247  003ADA  EF31  F01D         	goto	l4908
  6248  003ADE                     u5470:
  6249  003ADE                     l4918:
  6250  003ADE  C008  FFD9         	movff	strncmp@l,fsr2l
  6251  003AE2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  6252  003AE6  50DF               	movf	indf2,w,c
  6253  003AE8  6E07               	movwf	??_strncmp^0,c
  6254  003AEA  C00A  FFF6         	movff	strncmp@r,tblptrl
  6255  003AEE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6256  003AF2                     	if	0	;tblptru may be non-zero
  6257  003AF2                     	endif
  6258  003AF2                     	if	0	;tblptru may be non-zero
  6259  003AF2                     	endif
  6260  003AF2  0008               	tblrd		*
  6261  003AF4  50F5               	movf	tablat,w,c
  6262  003AF6  5C07               	subwf	??_strncmp^0,w,c
  6263  003AF8  6E01               	movwf	?_strncmp^0,c
  6264  003AFA  6A02               	clrf	(?_strncmp+1)^0,c
  6265  003AFC  A0D8               	btfss	status,0,c
  6266  003AFE  0602               	decf	(?_strncmp+1)^0,f,c
  6267  003B00                     l1529:
  6268  003B00  0012               	return		;funcret
  6269  003B02                     __end_of_strncmp:
  6270                           	callstack 0
  6271                           
  6272 ;; *************** function _efgtoa *****************
  6273 ;; Defined at:
  6274 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6277 ;;		 -> sprintf@f(6), 
  6278 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  6279 ;;  c               1    6[BANK0 ] unsigned char 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  u               4   64[BANK0 ] unsigned char 
  6282 ;;  g               4   56[BANK0 ] unsigned char 
  6283 ;;  l               4   50[BANK0 ] unsigned char 
  6284 ;;  h               4   46[BANK0 ] unsigned char 
  6285 ;;  ou              4   32[BANK0 ] unsigned char 
  6286 ;;  n               2   62[BANK0 ] int 
  6287 ;;  e               2   60[BANK0 ] int 
  6288 ;;  i               2   54[BANK0 ] int 
  6289 ;;  w               2   42[BANK0 ] int 
  6290 ;;  p               2   40[BANK0 ] int 
  6291 ;;  sign            2   38[BANK0 ] int 
  6292 ;;  d               2   36[BANK0 ] int 
  6293 ;;  m               2   30[BANK0 ] int 
  6294 ;;  ne              2   28[BANK0 ] int 
  6295 ;;  pp              2   26[BANK0 ] int 
  6296 ;;  t               2   24[BANK0 ] int 
  6297 ;;  mode            1   45[BANK0 ] unsigned char 
  6298 ;;  nmode           1   44[BANK0 ] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  2    0[BANK0 ] int 
  6301 ;; Registers used:
  6302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6308 ;;      Params:         0       7       0       0       0       0       0       0       0
  6309 ;;      Locals:         0      56       0       0       0       0       0       0       0
  6310 ;;      Temps:          0       5       0       0       0       0       0       0       0
  6311 ;;      Totals:         0      68       0       0       0       0       0       0       0
  6312 ;;Total ram usage:       68 bytes
  6313 ;; Hardware stack levels used: 1
  6314 ;; Hardware stack levels required when called: 4
  6315 ;; This function calls:
  6316 ;;		___awdiv
  6317 ;;		___awmod
  6318 ;;		___fladd
  6319 ;;		___fldiv
  6320 ;;		___fleq
  6321 ;;		___flge
  6322 ;;		___flmul
  6323 ;;		___flneg
  6324 ;;		___flsub
  6325 ;;		___fltol
  6326 ;;		___fpclassifyf
  6327 ;;		_floorf
  6328 ;;		_isupper
  6329 ;;		_pad
  6330 ;;		_strcpy
  6331 ;;		_tolower
  6332 ;; This function is called by:
  6333 ;;		_vfpfcnvrt
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           	psect	text33
  6338  00084A                     __ptext33:
  6339                           	callstack 0
  6340  00084A                     _efgtoa:
  6341                           	callstack 22
  6342  00084A                     
  6343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  6344  00084A  0E00               	movlw	0
  6345  00084C  0100               	movlb	0	; () banked
  6346  00084E  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  6347  000850  0E00               	movlw	0
  6348  000852  6F86               	movwf	efgtoa@sign& (0+255),b
  6349  000854                     
  6350                           ; BSR set to: 0
  6351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  6352  000854  C062  F098         	movff	efgtoa@f,efgtoa@g
  6353  000858  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  6354  00085C  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  6355  000860  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  6356  000864                     
  6357                           ; BSR set to: 0
  6358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  6359  000864  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6360  000866  EF39  F004         	goto	u4650
  6361  00086A  EF37  F004         	goto	u4651
  6362  00086E                     u4651:
  6363  00086E  EF4F  F004         	goto	l4496
  6364  000872                     u4650:
  6365  000872                     
  6366                           ; BSR set to: 0
  6367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  6368  000872  0E00               	movlw	0
  6369  000874  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  6370  000876  0E01               	movlw	1
  6371  000878  6F86               	movwf	efgtoa@sign& (0+255),b
  6372  00087A                     
  6373                           ; BSR set to: 0
  6374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  6375  00087A  C098  F001         	movff	efgtoa@g,___flneg@f1
  6376  00087E  C099  F002         	movff	efgtoa@g+1,___flneg@f1+1
  6377  000882  C09A  F003         	movff	efgtoa@g+2,___flneg@f1+2
  6378  000886  C09B  F004         	movff	efgtoa@g+3,___flneg@f1+3
  6379  00088A  ECE0  F023         	call	___flneg	;wreg free
  6380  00088E  C001  F098         	movff	?___flneg,efgtoa@g
  6381  000892  C002  F099         	movff	?___flneg+1,efgtoa@g+1
  6382  000896  C003  F09A         	movff	?___flneg+2,efgtoa@g+2
  6383  00089A  C004  F09B         	movff	?___flneg+3,efgtoa@g+3
  6384  00089E                     l4496:
  6385                           
  6386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  6387  00089E  0E00               	movlw	0
  6388  0008A0  0100               	movlb	0	; () banked
  6389  0008A2  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  6390  0008A4  0E00               	movlw	0
  6391  0008A6  6F9E               	movwf	efgtoa@n& (0+255),b
  6392  0008A8                     
  6393                           ; BSR set to: 0
  6394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  6395  0008A8  C0F4  F08A         	movff	_width,efgtoa@w
  6396  0008AC  C0F5  F08B         	movff	_width+1,efgtoa@w+1
  6397  0008B0                     
  6398                           ; BSR set to: 0
  6399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  6400  0008B0  5186               	movf	efgtoa@sign& (0+255),w,b
  6401  0008B2  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6402  0008B4  A4D8               	btfss	status,2,c
  6403  0008B6  EF5F  F004         	goto	u4661
  6404  0008BA  EF61  F004         	goto	u4660
  6405  0008BE                     u4661:
  6406  0008BE  EF68  F004         	goto	l4504
  6407  0008C2                     u4660:
  6408  0008C2                     
  6409                           ; BSR set to: 0
  6410  0008C2  A5F8               	btfss	_flags& (0+255),2,b
  6411  0008C4  EF66  F004         	goto	u4671
  6412  0008C8  EF68  F004         	goto	u4670
  6413  0008CC                     u4671:
  6414  0008CC  EF82  F004         	goto	l4516
  6415  0008D0                     u4670:
  6416  0008D0                     l4504:
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  6420  0008D0  5186               	movf	efgtoa@sign& (0+255),w,b
  6421  0008D2  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6422  0008D4  A4D8               	btfss	status,2,c
  6423  0008D6  EF6F  F004         	goto	u4681
  6424  0008DA  EF71  F004         	goto	u4680
  6425  0008DE                     u4681:
  6426  0008DE  EF77  F004         	goto	l4508
  6427  0008E2                     u4680:
  6428  0008E2                     
  6429                           ; BSR set to: 0
  6430  0008E2  0E00               	movlw	0
  6431  0008E4  6F6D               	movwf	(_efgtoa$1450+1)& (0+255),b
  6432  0008E6  0E2B               	movlw	43
  6433  0008E8  6F6C               	movwf	_efgtoa$1450& (0+255),b
  6434  0008EA  EF7B  F004         	goto	l4510
  6435  0008EE                     l4508:
  6436                           
  6437                           ; BSR set to: 0
  6438  0008EE  0E00               	movlw	0
  6439  0008F0  6F6D               	movwf	(_efgtoa$1450+1)& (0+255),b
  6440  0008F2  0E2D               	movlw	45
  6441  0008F4  6F6C               	movwf	_efgtoa$1450& (0+255),b
  6442  0008F6                     l4510:
  6443                           
  6444                           ; BSR set to: 0
  6445  0008F6  C06C  F10E         	movff	_efgtoa$1450,_dbuf
  6446  0008FA                     
  6447                           ; BSR set to: 0
  6448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  6449  0008FA  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  6450  0008FC  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  6451  0008FE                     
  6452                           ; BSR set to: 0
  6453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  6454  0008FE  078A               	decf	efgtoa@w& (0+255),f,b
  6455  000900  A0D8               	btfss	status,0,c
  6456  000902  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6457  000904                     l4516:
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6461  000904  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  6462  000908  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6463  00090C  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6464  000910  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6465  000914  EC97  F01C         	call	___fpclassifyf	;wreg free
  6466  000918  0401               	decf	?___fpclassifyf^0,w,c
  6467  00091A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6468  00091C  A4D8               	btfss	status,2,c
  6469  00091E  EF93  F004         	goto	u4691
  6470  000922  EF95  F004         	goto	u4690
  6471  000926                     u4691:
  6472  000926  EFEC  F004         	goto	l4534
  6473  00092A                     u4690:
  6474  00092A  0EBF               	movlw	191
  6475  00092C  0100               	movlb	0	; () banked
  6476  00092E  6F67               	movwf	??_efgtoa& (0+255),b
  6477  000930  0EFF               	movlw	255
  6478  000932  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6479  000934  5166               	movf	efgtoa@c& (0+255),w,b
  6480  000936  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  6481  000938  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  6482  00093A  5167               	movf	??_efgtoa& (0+255),w,b
  6483  00093C  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6484  00093E  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6485  000940  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6486  000942  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6487  000944  E10A               	bnz	u4700
  6488  000946  0E1A               	movlw	26
  6489  000948  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6490  00094A  A0D8               	btfss	status,0,c
  6491  00094C  EFAA  F004         	goto	u4701
  6492  000950  EFAD  F004         	goto	u4700
  6493  000954                     u4701:
  6494  000954  0E01               	movlw	1
  6495  000956  EFAE  F004         	goto	u4710
  6496  00095A                     u4700:
  6497  00095A  0E00               	movlw	0
  6498  00095C                     u4710:
  6499  00095C  6F6E               	movwf	_efgtoa$1451& (0+255),b
  6500  00095E  6B6F               	clrf	(_efgtoa$1451+1)& (0+255),b
  6501  000960                     
  6502                           ; BSR set to: 0
  6503  000960  516E               	movf	_efgtoa$1451& (0+255),w,b
  6504  000962  116F               	iorwf	(_efgtoa$1451+1)& (0+255),w,b
  6505  000964  B4D8               	btfsc	status,2,c
  6506  000966  EFB7  F004         	goto	u4721
  6507  00096A  EFB9  F004         	goto	u4720
  6508  00096E                     u4721:
  6509  00096E  EFC7  F004         	goto	l4526
  6510  000972                     u4720:
  6511  000972                     
  6512                           ; BSR set to: 0
  6513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  6514  000972  0E0E               	movlw	low _dbuf
  6515  000974  259E               	addwf	efgtoa@n& (0+255),w,b
  6516  000976  6E01               	movwf	strcpy@dest^0,c
  6517  000978  0E01               	movlw	high _dbuf
  6518  00097A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6519  00097C  6E02               	movwf	(strcpy@dest+1)^0,c
  6520  00097E  0E08               	movlw	low STR_22
  6521  000980  6E03               	movwf	strcpy@src^0,c
  6522  000982  0E08               	movlw	high STR_22
  6523  000984  6E04               	movwf	(strcpy@src+1)^0,c
  6524  000986  EC21  F021         	call	_strcpy	;wreg free
  6525                           
  6526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  6527  00098A  EFD3  F004         	goto	l4528
  6528  00098E                     l4526:
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  6532  00098E  0E0E               	movlw	low _dbuf
  6533  000990  259E               	addwf	efgtoa@n& (0+255),w,b
  6534  000992  6E01               	movwf	strcpy@dest^0,c
  6535  000994  0E01               	movlw	high _dbuf
  6536  000996  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6537  000998  6E02               	movwf	(strcpy@dest+1)^0,c
  6538  00099A  0E10               	movlw	low STR_23
  6539  00099C  6E03               	movwf	strcpy@src^0,c
  6540  00099E  0E08               	movlw	high STR_23
  6541  0009A0  6E04               	movwf	(strcpy@src+1)^0,c
  6542  0009A2  EC21  F021         	call	_strcpy	;wreg free
  6543  0009A6                     l4528:
  6544                           
  6545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6546  0009A6  0100               	movlb	0	; () banked
  6547  0009A8  0EFD               	movlw	253
  6548  0009AA  278A               	addwf	efgtoa@w& (0+255),f,b
  6549  0009AC  0EFF               	movlw	255
  6550  0009AE  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6551  0009B0                     l4530:
  6552                           
  6553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6554  0009B0  C060  F011         	movff	efgtoa@fp,pad@fp
  6555  0009B4  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  6556  0009B8  0E0E               	movlw	low _dbuf
  6557  0009BA  6E13               	movwf	pad@buf^0,c
  6558  0009BC  0E01               	movlw	high _dbuf
  6559  0009BE  6E14               	movwf	(pad@buf+1)^0,c
  6560  0009C0  C08A  F015         	movff	efgtoa@w,pad@p
  6561  0009C4  C08B  F016         	movff	efgtoa@w+1,pad@p+1
  6562  0009C8  ECE6  F01D         	call	_pad	;wreg free
  6563  0009CC  C011  F060         	movff	?_pad,?_efgtoa
  6564  0009D0  C012  F061         	movff	?_pad+1,?_efgtoa+1
  6565  0009D4  EF50  F00A         	goto	l1258
  6566  0009D8                     l4534:
  6567                           
  6568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6569  0009D8  C098  F001         	movff	efgtoa@g,___fpclassifyf@x
  6570  0009DC  C099  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6571  0009E0  C09A  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6572  0009E4  C09B  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6573  0009E8  EC97  F01C         	call	___fpclassifyf	;wreg free
  6574  0009EC  5001               	movf	?___fpclassifyf^0,w,c
  6575  0009EE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6576  0009F0  A4D8               	btfss	status,2,c
  6577  0009F2  EFFD  F004         	goto	u4731
  6578  0009F6  EFFF  F004         	goto	u4730
  6579  0009FA                     u4731:
  6580  0009FA  EF3F  F005         	goto	l4552
  6581  0009FE                     u4730:
  6582  0009FE  0EBF               	movlw	191
  6583  000A00  0100               	movlb	0	; () banked
  6584  000A02  6F67               	movwf	??_efgtoa& (0+255),b
  6585  000A04  0EFF               	movlw	255
  6586  000A06  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6587  000A08  5166               	movf	efgtoa@c& (0+255),w,b
  6588  000A0A  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  6589  000A0C  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  6590  000A0E  5167               	movf	??_efgtoa& (0+255),w,b
  6591  000A10  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6592  000A12  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6593  000A14  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6594  000A16  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6595  000A18  E10A               	bnz	u4740
  6596  000A1A  0E1A               	movlw	26
  6597  000A1C  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6598  000A1E  A0D8               	btfss	status,0,c
  6599  000A20  EF14  F005         	goto	u4741
  6600  000A24  EF17  F005         	goto	u4740
  6601  000A28                     u4741:
  6602  000A28  0E01               	movlw	1
  6603  000A2A  EF18  F005         	goto	u4750
  6604  000A2E                     u4740:
  6605  000A2E  0E00               	movlw	0
  6606  000A30                     u4750:
  6607  000A30  6F70               	movwf	_efgtoa$1456& (0+255),b
  6608  000A32  6B71               	clrf	(_efgtoa$1456+1)& (0+255),b
  6609  000A34                     
  6610                           ; BSR set to: 0
  6611  000A34  5170               	movf	_efgtoa$1456& (0+255),w,b
  6612  000A36  1171               	iorwf	(_efgtoa$1456+1)& (0+255),w,b
  6613  000A38  B4D8               	btfsc	status,2,c
  6614  000A3A  EF21  F005         	goto	u4761
  6615  000A3E  EF23  F005         	goto	u4760
  6616  000A42                     u4761:
  6617  000A42  EF31  F005         	goto	l4544
  6618  000A46                     u4760:
  6619  000A46                     
  6620                           ; BSR set to: 0
  6621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  6622  000A46  0E0E               	movlw	low _dbuf
  6623  000A48  259E               	addwf	efgtoa@n& (0+255),w,b
  6624  000A4A  6E01               	movwf	strcpy@dest^0,c
  6625  000A4C  0E01               	movlw	high _dbuf
  6626  000A4E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6627  000A50  6E02               	movwf	(strcpy@dest+1)^0,c
  6628  000A52  0E0C               	movlw	low STR_26
  6629  000A54  6E03               	movwf	strcpy@src^0,c
  6630  000A56  0E08               	movlw	high STR_26
  6631  000A58  6E04               	movwf	(strcpy@src+1)^0,c
  6632  000A5A  EC21  F021         	call	_strcpy	;wreg free
  6633                           
  6634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  6635  000A5E  EFD3  F004         	goto	l4528
  6636  000A62                     l4544:
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  6640  000A62  0E0E               	movlw	low _dbuf
  6641  000A64  259E               	addwf	efgtoa@n& (0+255),w,b
  6642  000A66  6E01               	movwf	strcpy@dest^0,c
  6643  000A68  0E01               	movlw	high _dbuf
  6644  000A6A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6645  000A6C  6E02               	movwf	(strcpy@dest+1)^0,c
  6646  000A6E  0E14               	movlw	low STR_27
  6647  000A70  6E03               	movwf	strcpy@src^0,c
  6648  000A72  0E08               	movlw	high STR_27
  6649  000A74  6E04               	movwf	(strcpy@src+1)^0,c
  6650  000A76  EC21  F021         	call	_strcpy	;wreg free
  6651  000A7A  EFD3  F004         	goto	l4528
  6652  000A7E                     l4552:
  6653                           
  6654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  6655  000A7E  0E00               	movlw	0
  6656  000A80  0100               	movlb	0	; () banked
  6657  000A82  6FA0               	movwf	efgtoa@u& (0+255),b
  6658  000A84  0E00               	movlw	0
  6659  000A86  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  6660  000A88  0E80               	movlw	128
  6661  000A8A  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  6662  000A8C  0E3F               	movlw	63
  6663  000A8E  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  6664                           
  6665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  6666  000A90  0E00               	movlw	0
  6667  000A92  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  6668  000A94  0E00               	movlw	0
  6669  000A96  6F9C               	movwf	efgtoa@e& (0+255),b
  6670  000A98                     
  6671                           ; BSR set to: 0
  6672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  6673  000A98  C098  F001         	movff	efgtoa@g,___fleq@ff1
  6674  000A9C  C099  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  6675  000AA0  C09A  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  6676  000AA4  C09B  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  6677  000AA8  0E00               	movlw	0
  6678  000AAA  6E05               	movwf	___fleq@ff2^0,c
  6679  000AAC  0E00               	movlw	0
  6680  000AAE  6E06               	movwf	(___fleq@ff2+1)^0,c
  6681  000AB0  0E00               	movlw	0
  6682  000AB2  6E07               	movwf	(___fleq@ff2+2)^0,c
  6683  000AB4  0E00               	movlw	0
  6684  000AB6  6E08               	movwf	(___fleq@ff2+3)^0,c
  6685  000AB8  EC65  F01F         	call	___fleq	;wreg free
  6686  000ABC  B0D8               	btfsc	status,0,c
  6687  000ABE  EF63  F005         	goto	u4771
  6688  000AC2  EF65  F005         	goto	u4770
  6689  000AC6                     u4771:
  6690  000AC6  EFE8  F005         	goto	l4570
  6691  000ACA                     u4770:
  6692  000ACA  EF84  F005         	goto	l4562
  6693  000ACE                     l4558:
  6694                           
  6695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  6696  000ACE  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6697  000AD2  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6698  000AD6  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6699  000ADA  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6700  000ADE  0E00               	movlw	0
  6701  000AE0  6E17               	movwf	___flmul@a^0,c
  6702  000AE2  0E00               	movlw	0
  6703  000AE4  6E18               	movwf	(___flmul@a+1)^0,c
  6704  000AE6  0E20               	movlw	32
  6705  000AE8  6E19               	movwf	(___flmul@a+2)^0,c
  6706  000AEA  0E41               	movlw	65
  6707  000AEC  6E1A               	movwf	(___flmul@a+3)^0,c
  6708  000AEE  ECB8  F00F         	call	___flmul	;wreg free
  6709  000AF2  C013  F0A0         	movff	?___flmul,efgtoa@u
  6710  000AF6  C014  F0A1         	movff	?___flmul+1,efgtoa@u+1
  6711  000AFA  C015  F0A2         	movff	?___flmul+2,efgtoa@u+2
  6712  000AFE  C016  F0A3         	movff	?___flmul+3,efgtoa@u+3
  6713  000B02                     
  6714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  6715  000B02  0100               	movlb	0	; () banked
  6716  000B04  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  6717  000B06  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  6718  000B08                     l4562:
  6719                           
  6720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  6721  000B08  C098  F02C         	movff	efgtoa@g,___flge@ff1
  6722  000B0C  C099  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  6723  000B10  C09A  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  6724  000B14  C09B  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  6725  000B18  0E00               	movlw	0
  6726  000B1A  6E17               	movwf	___flmul@a^0,c
  6727  000B1C  0E00               	movlw	0
  6728  000B1E  6E18               	movwf	(___flmul@a+1)^0,c
  6729  000B20  0E20               	movlw	32
  6730  000B22  6E19               	movwf	(___flmul@a+2)^0,c
  6731  000B24  0E41               	movlw	65
  6732  000B26  6E1A               	movwf	(___flmul@a+3)^0,c
  6733  000B28  C0A0  F013         	movff	efgtoa@u,___flmul@b
  6734  000B2C  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  6735  000B30  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  6736  000B34  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  6737  000B38  ECB8  F00F         	call	___flmul	;wreg free
  6738  000B3C  C013  F030         	movff	?___flmul,___flge@ff2
  6739  000B40  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  6740  000B44  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  6741  000B48  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  6742  000B4C  EC96  F01B         	call	___flge	;wreg free
  6743  000B50  B0D8               	btfsc	status,0,c
  6744  000B52  EFAD  F005         	goto	u4781
  6745  000B56  EFAF  F005         	goto	u4780
  6746  000B5A                     u4781:
  6747  000B5A  EF67  F005         	goto	l4558
  6748  000B5E                     u4780:
  6749  000B5E  EFCF  F005         	goto	l4568
  6750  000B62                     l4564:
  6751                           
  6752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  6753  000B62  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  6754  000B66  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  6755  000B6A  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  6756  000B6E  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  6757  000B72  0E00               	movlw	0
  6758  000B74  6E30               	movwf	___fldiv@a^0,c
  6759  000B76  0E00               	movlw	0
  6760  000B78  6E31               	movwf	(___fldiv@a+1)^0,c
  6761  000B7A  0E20               	movlw	32
  6762  000B7C  6E32               	movwf	(___fldiv@a+2)^0,c
  6763  000B7E  0E41               	movlw	65
  6764  000B80  6E33               	movwf	(___fldiv@a+3)^0,c
  6765  000B82  ECCD  F011         	call	___fldiv	;wreg free
  6766  000B86  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  6767  000B8A  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  6768  000B8E  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  6769  000B92  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  6770  000B96                     
  6771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  6772  000B96  0100               	movlb	0	; () banked
  6773  000B98  079C               	decf	efgtoa@e& (0+255),f,b
  6774  000B9A  A0D8               	btfss	status,0,c
  6775  000B9C  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  6776  000B9E                     l4568:
  6777                           
  6778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  6779  000B9E  C098  F02C         	movff	efgtoa@g,___flge@ff1
  6780  000BA2  C099  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  6781  000BA6  C09A  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  6782  000BAA  C09B  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  6783  000BAE  C0A0  F030         	movff	efgtoa@u,___flge@ff2
  6784  000BB2  C0A1  F031         	movff	efgtoa@u+1,___flge@ff2+1
  6785  000BB6  C0A2  F032         	movff	efgtoa@u+2,___flge@ff2+2
  6786  000BBA  C0A3  F033         	movff	efgtoa@u+3,___flge@ff2+3
  6787  000BBE  EC96  F01B         	call	___flge	;wreg free
  6788  000BC2  A0D8               	btfss	status,0,c
  6789  000BC4  EFE6  F005         	goto	u4791
  6790  000BC8  EFE8  F005         	goto	u4790
  6791  000BCC                     u4791:
  6792  000BCC  EFB1  F005         	goto	l4564
  6793  000BD0                     u4790:
  6794  000BD0                     l4570:
  6795                           
  6796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  6797  000BD0  C066  F007         	movff	efgtoa@c,tolower@c
  6798  000BD4  6A08               	clrf	(tolower@c+1)^0,c
  6799  000BD6  EC64  F020         	call	_tolower	;wreg free
  6800  000BDA  5007               	movf	?_tolower^0,w,c
  6801  000BDC  0100               	movlb	0	; () banked
  6802  000BDE  6F8D               	movwf	efgtoa@mode& (0+255),b
  6803  000BE0                     
  6804                           ; BSR set to: 0
  6805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  6806  000BE0  C08D  F08C         	movff	efgtoa@mode,efgtoa@nmode
  6807  000BE4                     
  6808                           ; BSR set to: 0
  6809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  6810  000BE4  0E67               	movlw	103
  6811  000BE6  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6812  000BE8  A4D8               	btfss	status,2,c
  6813  000BEA  EFF9  F005         	goto	u4801
  6814  000BEE  EFFB  F005         	goto	u4800
  6815  000BF2                     u4801:
  6816  000BF2  EF21  F006         	goto	l4584
  6817  000BF6                     u4800:
  6818  000BF6                     
  6819                           ; BSR set to: 0
  6820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  6821  000BF6  51F6               	movf	_prec& (0+255),w,b
  6822  000BF8  11F7               	iorwf	(_prec+1)& (0+255),w,b
  6823  000BFA  A4D8               	btfss	status,2,c
  6824  000BFC  EF02  F006         	goto	u4811
  6825  000C00  EF04  F006         	goto	u4810
  6826  000C04                     u4811:
  6827  000C04  EF08  F006         	goto	l4580
  6828  000C08                     u4810:
  6829  000C08                     
  6830                           ; BSR set to: 0
  6831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  6832  000C08  0E00               	movlw	0
  6833  000C0A  6FF7               	movwf	(_prec+1)& (0+255),b
  6834  000C0C  0E01               	movlw	1
  6835  000C0E  6FF6               	movwf	_prec& (0+255),b
  6836  000C10                     l4580:
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  6840  000C10  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6841  000C12  EF15  F006         	goto	u4820
  6842  000C16  51F7               	movf	(_prec+1)& (0+255),w,b
  6843  000C18  E106               	bnz	u4821
  6844  000C1A  05F6               	decf	_prec& (0+255),w,b
  6845  000C1C  B0D8               	btfsc	status,0,c
  6846  000C1E  EF13  F006         	goto	u4821
  6847  000C22  EF15  F006         	goto	u4820
  6848  000C26                     u4821:
  6849  000C26  EF1B  F006         	goto	l1276
  6850  000C2A                     u4820:
  6851  000C2A                     l4582:
  6852                           
  6853                           ; BSR set to: 0
  6854  000C2A  0E00               	movlw	0
  6855  000C2C  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  6856  000C2E  0E06               	movlw	6
  6857  000C30  6F88               	movwf	efgtoa@p& (0+255),b
  6858  000C32  EF2A  F006         	goto	l4590
  6859  000C36                     l1276:
  6860                           
  6861                           ; BSR set to: 0
  6862  000C36  C0F6  F088         	movff	_prec,efgtoa@p
  6863  000C3A  C0F7  F089         	movff	_prec+1,efgtoa@p+1
  6864  000C3E  EF2A  F006         	goto	l4590
  6865  000C42                     l4584:
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  6869  000C42  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  6870  000C44  EF26  F006         	goto	u4831
  6871  000C48  EF28  F006         	goto	u4830
  6872  000C4C                     u4831:
  6873  000C4C  EF15  F006         	goto	l4582
  6874  000C50                     u4830:
  6875  000C50  EF1B  F006         	goto	l1276
  6876  000C54                     l4590:
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  6880  000C54  0E67               	movlw	103
  6881  000C56  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6882  000C58  A4D8               	btfss	status,2,c
  6883  000C5A  EF31  F006         	goto	u4841
  6884  000C5E  EF33  F006         	goto	u4840
  6885  000C62                     u4841:
  6886  000C62  EF62  F006         	goto	l4600
  6887  000C66                     u4840:
  6888  000C66                     
  6889                           ; BSR set to: 0
  6890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  6891  000C66  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  6892  000C68  EF41  F006         	goto	u4850
  6893  000C6C  0EFC               	movlw	252
  6894  000C6E  5D9C               	subwf	efgtoa@e& (0+255),w,b
  6895  000C70  0EFF               	movlw	255
  6896  000C72  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6897  000C74  A0D8               	btfss	status,0,c
  6898  000C76  EF3F  F006         	goto	u4851
  6899  000C7A  EF41  F006         	goto	u4850
  6900  000C7E                     u4851:
  6901  000C7E  EF60  F006         	goto	l4598
  6902  000C82                     u4850:
  6903  000C82                     
  6904                           ; BSR set to: 0
  6905  000C82  0EFF               	movlw	255
  6906  000C84  6F67               	movwf	??_efgtoa& (0+255),b
  6907  000C86  0EFF               	movlw	255
  6908  000C88  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  6909  000C8A  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  6910  000C8E  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  6911  000C92  5167               	movf	??_efgtoa& (0+255),w,b
  6912  000C94  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  6913  000C96  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  6914  000C98  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6915  000C9A  519C               	movf	efgtoa@e& (0+255),w,b
  6916  000C9C  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  6917  000C9E  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  6918  000CA0  0A80               	xorlw	128
  6919  000CA2  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  6920  000CA4  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  6921  000CA6  0A80               	xorlw	128
  6922  000CA8  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6923  000CAA  A0D8               	btfss	status,0,c
  6924  000CAC  EF5A  F006         	goto	u4861
  6925  000CB0  EF5C  F006         	goto	u4860
  6926  000CB4                     u4861:
  6927  000CB4  EF60  F006         	goto	l4598
  6928  000CB8                     u4860:
  6929  000CB8                     
  6930                           ; BSR set to: 0
  6931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  6932  000CB8  0E66               	movlw	102
  6933  000CBA  6F8C               	movwf	efgtoa@nmode& (0+255),b
  6934                           
  6935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  6936  000CBC  EF62  F006         	goto	l4600
  6937  000CC0                     l4598:
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  6941  000CC0  0E65               	movlw	101
  6942  000CC2  6F8C               	movwf	efgtoa@nmode& (0+255),b
  6943  000CC4                     l4600:
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  6947  000CC4  C088  F07E         	movff	efgtoa@p,efgtoa@m
  6948  000CC8  C089  F07F         	movff	efgtoa@p+1,efgtoa@m+1
  6949  000CCC                     
  6950                           ; BSR set to: 0
  6951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  6952  000CCC  0E67               	movlw	103
  6953  000CCE  198D               	xorwf	efgtoa@mode& (0+255),w,b
  6954  000CD0  A4D8               	btfss	status,2,c
  6955  000CD2  EF6D  F006         	goto	u4871
  6956  000CD6  EF6F  F006         	goto	u4870
  6957  000CDA                     u4871:
  6958  000CDA  EF7F  F006         	goto	l4608
  6959  000CDE                     u4870:
  6960  000CDE                     
  6961                           ; BSR set to: 0
  6962  000CDE  0E66               	movlw	102
  6963  000CE0  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6964  000CE2  A4D8               	btfss	status,2,c
  6965  000CE4  EF76  F006         	goto	u4881
  6966  000CE8  EF78  F006         	goto	u4880
  6967  000CEC                     u4881:
  6968  000CEC  EF81  F006         	goto	l4610
  6969  000CF0                     u4880:
  6970  000CF0                     
  6971                           ; BSR set to: 0
  6972  000CF0  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6973  000CF2  EF7F  F006         	goto	u4890
  6974  000CF6  EF7D  F006         	goto	u4891
  6975  000CFA                     u4891:
  6976  000CFA  EF81  F006         	goto	l4610
  6977  000CFE                     u4890:
  6978  000CFE                     l4608:
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  6982  000CFE  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  6983  000D00  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  6984  000D02                     l4610:
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  6988  000D02  0E66               	movlw	102
  6989  000D04  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  6990  000D06  A4D8               	btfss	status,2,c
  6991  000D08  EF88  F006         	goto	u4901
  6992  000D0C  EF8A  F006         	goto	u4900
  6993  000D10                     u4901:
  6994  000D10  EFAA  F006         	goto	l4620
  6995  000D14                     u4900:
  6996  000D14                     
  6997                           ; BSR set to: 0
  6998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  6999  000D14  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7000  000D16  EF91  F006         	goto	u4910
  7001  000D1A  EF8F  F006         	goto	u4911
  7002  000D1E                     u4911:
  7003  000D1E  EF9D  F006         	goto	l4616
  7004  000D22                     u4910:
  7005  000D22                     
  7006                           ; BSR set to: 0
  7007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  7008  000D22  0E00               	movlw	0
  7009  000D24  6FA0               	movwf	efgtoa@u& (0+255),b
  7010  000D26  0E00               	movlw	0
  7011  000D28  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  7012  000D2A  0E80               	movlw	128
  7013  000D2C  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  7014  000D2E  0E3F               	movlw	63
  7015  000D30  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  7016                           
  7017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  7018  000D32  0E00               	movlw	0
  7019  000D34  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  7020  000D36  0E00               	movlw	0
  7021  000D38  6F9C               	movwf	efgtoa@e& (0+255),b
  7022  000D3A                     l4616:
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  7026  000D3A  0E67               	movlw	103
  7027  000D3C  198D               	xorwf	efgtoa@mode& (0+255),w,b
  7028  000D3E  B4D8               	btfsc	status,2,c
  7029  000D40  EFA4  F006         	goto	u4921
  7030  000D44  EFA6  F006         	goto	u4920
  7031  000D48                     u4921:
  7032  000D48  EFAA  F006         	goto	l4620
  7033  000D4C                     u4920:
  7034  000D4C                     
  7035                           ; BSR set to: 0
  7036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  7037  000D4C  519C               	movf	efgtoa@e& (0+255),w,b
  7038  000D4E  277E               	addwf	efgtoa@m& (0+255),f,b
  7039  000D50  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  7040  000D52  237F               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7041  000D54                     l4620:
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  7045  000D54  0E00               	movlw	0
  7046  000D56  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7047  000D58  0E00               	movlw	0
  7048  000D5A  6F96               	movwf	efgtoa@i& (0+255),b
  7049  000D5C                     
  7050                           ; BSR set to: 0
  7051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  7052  000D5C  C098  F08E         	movff	efgtoa@g,efgtoa@h
  7053  000D60  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  7054  000D64  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  7055  000D68  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  7056  000D6C                     
  7057                           ; BSR set to: 0
  7058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  7059  000D6C  C0A0  F080         	movff	efgtoa@u,efgtoa@ou
  7060  000D70  C0A1  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  7061  000D74  C0A2  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  7062  000D78  C0A3  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  7063                           
  7064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  7065  000D7C  EF3B  F007         	goto	l4634
  7066  000D80                     l4626:
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  7070  000D80  C08E  F02C         	movff	efgtoa@h,___fldiv@b
  7071  000D84  C08F  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  7072  000D88  C090  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  7073  000D8C  C091  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  7074  000D90  C0A0  F030         	movff	efgtoa@u,___fldiv@a
  7075  000D94  C0A1  F031         	movff	efgtoa@u+1,___fldiv@a+1
  7076  000D98  C0A2  F032         	movff	efgtoa@u+2,___fldiv@a+2
  7077  000D9C  C0A3  F033         	movff	efgtoa@u+3,___fldiv@a+3
  7078  000DA0  ECCD  F011         	call	___fldiv	;wreg free
  7079  000DA4  C02C  F045         	movff	?___fldiv,floorf@x
  7080  000DA8  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  7081  000DAC  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  7082  000DB0  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  7083  000DB4  ECBC  F017         	call	_floorf	;wreg free
  7084  000DB8  C045  F092         	movff	?_floorf,efgtoa@l
  7085  000DBC  C046  F093         	movff	?_floorf+1,efgtoa@l+1
  7086  000DC0  C047  F094         	movff	?_floorf+2,efgtoa@l+2
  7087  000DC4  C048  F095         	movff	?_floorf+3,efgtoa@l+3
  7088                           
  7089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  7090  000DC8  C092  F055         	movff	efgtoa@l,___fltol@f1
  7091  000DCC  C093  F056         	movff	efgtoa@l+1,___fltol@f1+1
  7092  000DD0  C094  F057         	movff	efgtoa@l+2,___fltol@f1+2
  7093  000DD4  C095  F058         	movff	efgtoa@l+3,___fltol@f1+3
  7094  000DD8  EC13  F01B         	call	___fltol	;wreg free
  7095  000DDC  C055  F084         	movff	?___fltol,efgtoa@d
  7096  000DE0  C056  F085         	movff	?___fltol+1,efgtoa@d+1
  7097  000DE4                     
  7098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  7099  000DE4  C08E  F055         	movff	efgtoa@h,___flsub@b
  7100  000DE8  C08F  F056         	movff	efgtoa@h+1,___flsub@b+1
  7101  000DEC  C090  F057         	movff	efgtoa@h+2,___flsub@b+2
  7102  000DF0  C091  F058         	movff	efgtoa@h+3,___flsub@b+3
  7103  000DF4  C0A0  F017         	movff	efgtoa@u,___flmul@a
  7104  000DF8  C0A1  F018         	movff	efgtoa@u+1,___flmul@a+1
  7105  000DFC  C0A2  F019         	movff	efgtoa@u+2,___flmul@a+2
  7106  000E00  C0A3  F01A         	movff	efgtoa@u+3,___flmul@a+3
  7107  000E04  C092  F013         	movff	efgtoa@l,___flmul@b
  7108  000E08  C093  F014         	movff	efgtoa@l+1,___flmul@b+1
  7109  000E0C  C094  F015         	movff	efgtoa@l+2,___flmul@b+2
  7110  000E10  C095  F016         	movff	efgtoa@l+3,___flmul@b+3
  7111  000E14  ECB8  F00F         	call	___flmul	;wreg free
  7112  000E18  C013  F059         	movff	?___flmul,___flsub@a
  7113  000E1C  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  7114  000E20  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  7115  000E24  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  7116  000E28  EC08  F023         	call	___flsub	;wreg free
  7117  000E2C  C055  F08E         	movff	?___flsub,efgtoa@h
  7118  000E30  C056  F08F         	movff	?___flsub+1,efgtoa@h+1
  7119  000E34  C057  F090         	movff	?___flsub+2,efgtoa@h+2
  7120  000E38  C058  F091         	movff	?___flsub+3,efgtoa@h+3
  7121  000E3C                     
  7122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  7123  000E3C  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  7124  000E40  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  7125  000E44  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  7126  000E48  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  7127  000E4C  0E00               	movlw	0
  7128  000E4E  6E30               	movwf	___fldiv@a^0,c
  7129  000E50  0E00               	movlw	0
  7130  000E52  6E31               	movwf	(___fldiv@a+1)^0,c
  7131  000E54  0E20               	movlw	32
  7132  000E56  6E32               	movwf	(___fldiv@a+2)^0,c
  7133  000E58  0E41               	movlw	65
  7134  000E5A  6E33               	movwf	(___fldiv@a+3)^0,c
  7135  000E5C  ECCD  F011         	call	___fldiv	;wreg free
  7136  000E60  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  7137  000E64  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  7138  000E68  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  7139  000E6C  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  7140  000E70                     
  7141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  7142  000E70  0100               	movlb	0	; () banked
  7143  000E72  4B96               	infsnz	efgtoa@i& (0+255),f,b
  7144  000E74  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  7145  000E76                     l4634:
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  7149  000E76  517E               	movf	efgtoa@m& (0+255),w,b
  7150  000E78  5D96               	subwf	efgtoa@i& (0+255),w,b
  7151  000E7A  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7152  000E7C  0A80               	xorlw	128
  7153  000E7E  6F67               	movwf	??_efgtoa& (0+255),b
  7154  000E80  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  7155  000E82  0A80               	xorlw	128
  7156  000E84  5967               	subwfb	??_efgtoa& (0+255),w,b
  7157  000E86  A0D8               	btfss	status,0,c
  7158  000E88  EF48  F007         	goto	u4931
  7159  000E8C  EF4A  F007         	goto	u4930
  7160  000E90                     u4931:
  7161  000E90  EFC0  F006         	goto	l4626
  7162  000E94                     u4930:
  7163  000E94                     
  7164                           ; BSR set to: 0
  7165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  7166  000E94  C0A0  F013         	movff	efgtoa@u,___flmul@b
  7167  000E98  C0A1  F014         	movff	efgtoa@u+1,___flmul@b+1
  7168  000E9C  C0A2  F015         	movff	efgtoa@u+2,___flmul@b+2
  7169  000EA0  C0A3  F016         	movff	efgtoa@u+3,___flmul@b+3
  7170  000EA4  0E00               	movlw	0
  7171  000EA6  6E17               	movwf	___flmul@a^0,c
  7172  000EA8  0E00               	movlw	0
  7173  000EAA  6E18               	movwf	(___flmul@a+1)^0,c
  7174  000EAC  0EA0               	movlw	160
  7175  000EAE  6E19               	movwf	(___flmul@a+2)^0,c
  7176  000EB0  0E40               	movlw	64
  7177  000EB2  6E1A               	movwf	(___flmul@a+3)^0,c
  7178  000EB4  ECB8  F00F         	call	___flmul	;wreg free
  7179  000EB8  C013  F092         	movff	?___flmul,efgtoa@l
  7180  000EBC  C014  F093         	movff	?___flmul+1,efgtoa@l+1
  7181  000EC0  C015  F094         	movff	?___flmul+2,efgtoa@l+2
  7182  000EC4  C016  F095         	movff	?___flmul+3,efgtoa@l+3
  7183  000EC8                     
  7184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  7185  000EC8  C08E  F02C         	movff	efgtoa@h,___flge@ff1
  7186  000ECC  C08F  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  7187  000ED0  C090  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  7188  000ED4  C091  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  7189  000ED8  C092  F030         	movff	efgtoa@l,___flge@ff2
  7190  000EDC  C093  F031         	movff	efgtoa@l+1,___flge@ff2+1
  7191  000EE0  C094  F032         	movff	efgtoa@l+2,___flge@ff2+2
  7192  000EE4  C095  F033         	movff	efgtoa@l+3,___flge@ff2+3
  7193  000EE8  EC96  F01B         	call	___flge	;wreg free
  7194  000EEC  B0D8               	btfsc	status,0,c
  7195  000EEE  EF7B  F007         	goto	u4941
  7196  000EF2  EF7D  F007         	goto	u4940
  7197  000EF6                     u4941:
  7198  000EF6  EF88  F007         	goto	l4642
  7199  000EFA                     u4940:
  7200  000EFA                     
  7201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  7202  000EFA  0E00               	movlw	0
  7203  000EFC  0100               	movlb	0	; () banked
  7204  000EFE  6F92               	movwf	efgtoa@l& (0+255),b
  7205  000F00  0E00               	movlw	0
  7206  000F02  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  7207  000F04  0E00               	movlw	0
  7208  000F06  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  7209  000F08  0E00               	movlw	0
  7210  000F0A  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  7211                           
  7212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  7213  000F0C  EFB1  F007         	goto	l4648
  7214  000F10                     l4642:
  7215                           
  7216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  7217  000F10  C08E  F001         	movff	efgtoa@h,___fleq@ff1
  7218  000F14  C08F  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  7219  000F18  C090  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  7220  000F1C  C091  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  7221  000F20  C092  F005         	movff	efgtoa@l,___fleq@ff2
  7222  000F24  C093  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  7223  000F28  C094  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  7224  000F2C  C095  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  7225  000F30  EC65  F01F         	call	___fleq	;wreg free
  7226  000F34  A0D8               	btfss	status,0,c
  7227  000F36  EF9F  F007         	goto	u4951
  7228  000F3A  EFA1  F007         	goto	u4950
  7229  000F3E                     u4951:
  7230  000F3E  EFB1  F007         	goto	l4648
  7231  000F42                     u4950:
  7232  000F42  0100               	movlb	0	; () banked
  7233  000F44  B184               	btfsc	efgtoa@d& (0+255),0,b
  7234  000F46  EFA7  F007         	goto	u4961
  7235  000F4A  EFA9  F007         	goto	u4960
  7236  000F4E                     u4961:
  7237  000F4E  EFB1  F007         	goto	l4648
  7238  000F52                     u4960:
  7239  000F52                     
  7240                           ; BSR set to: 0
  7241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  7242  000F52  0E00               	movlw	0
  7243  000F54  6F92               	movwf	efgtoa@l& (0+255),b
  7244  000F56  0E00               	movlw	0
  7245  000F58  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  7246  000F5A  0E00               	movlw	0
  7247  000F5C  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  7248  000F5E  0E00               	movlw	0
  7249  000F60  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  7250  000F62                     l4648:
  7251                           
  7252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  7253  000F62  C098  F045         	movff	efgtoa@g,___fladd@b
  7254  000F66  C099  F046         	movff	efgtoa@g+1,___fladd@b+1
  7255  000F6A  C09A  F047         	movff	efgtoa@g+2,___fladd@b+2
  7256  000F6E  C09B  F048         	movff	efgtoa@g+3,___fladd@b+3
  7257  000F72  C092  F049         	movff	efgtoa@l,___fladd@a
  7258  000F76  C093  F04A         	movff	efgtoa@l+1,___fladd@a+1
  7259  000F7A  C094  F04B         	movff	efgtoa@l+2,___fladd@a+2
  7260  000F7E  C095  F04C         	movff	efgtoa@l+3,___fladd@a+3
  7261  000F82  EC58  F00D         	call	___fladd	;wreg free
  7262  000F86  C045  F08E         	movff	?___fladd,efgtoa@h
  7263  000F8A  C046  F08F         	movff	?___fladd+1,efgtoa@h+1
  7264  000F8E  C047  F090         	movff	?___fladd+2,efgtoa@h+2
  7265  000F92  C048  F091         	movff	?___fladd+3,efgtoa@h+3
  7266  000F96                     
  7267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  7268  000F96  C08E  F02C         	movff	efgtoa@h,___flge@ff1
  7269  000F9A  C08F  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  7270  000F9E  C090  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  7271  000FA2  C091  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  7272  000FA6  0E00               	movlw	0
  7273  000FA8  6E17               	movwf	___flmul@a^0,c
  7274  000FAA  0E00               	movlw	0
  7275  000FAC  6E18               	movwf	(___flmul@a+1)^0,c
  7276  000FAE  0E20               	movlw	32
  7277  000FB0  6E19               	movwf	(___flmul@a+2)^0,c
  7278  000FB2  0E41               	movlw	65
  7279  000FB4  6E1A               	movwf	(___flmul@a+3)^0,c
  7280  000FB6  C080  F013         	movff	efgtoa@ou,___flmul@b
  7281  000FBA  C081  F014         	movff	efgtoa@ou+1,___flmul@b+1
  7282  000FBE  C082  F015         	movff	efgtoa@ou+2,___flmul@b+2
  7283  000FC2  C083  F016         	movff	efgtoa@ou+3,___flmul@b+3
  7284  000FC6  ECB8  F00F         	call	___flmul	;wreg free
  7285  000FCA  C013  F030         	movff	?___flmul,___flge@ff2
  7286  000FCE  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  7287  000FD2  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  7288  000FD6  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  7289  000FDA  EC96  F01B         	call	___flge	;wreg free
  7290  000FDE  A0D8               	btfss	status,0,c
  7291  000FE0  EFF4  F007         	goto	u4971
  7292  000FE4  EFF6  F007         	goto	u4970
  7293  000FE8                     u4971:
  7294  000FE8  EF1F  F008         	goto	l4660
  7295  000FEC                     u4970:
  7296  000FEC                     
  7297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  7298  000FEC  0100               	movlb	0	; () banked
  7299  000FEE  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  7300  000FF0  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7301  000FF2                     
  7302                           ; BSR set to: 0
  7303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  7304  000FF2  C080  F013         	movff	efgtoa@ou,___flmul@b
  7305  000FF6  C081  F014         	movff	efgtoa@ou+1,___flmul@b+1
  7306  000FFA  C082  F015         	movff	efgtoa@ou+2,___flmul@b+2
  7307  000FFE  C083  F016         	movff	efgtoa@ou+3,___flmul@b+3
  7308  001002  0E00               	movlw	0
  7309  001004  6E17               	movwf	___flmul@a^0,c
  7310  001006  0E00               	movlw	0
  7311  001008  6E18               	movwf	(___flmul@a+1)^0,c
  7312  00100A  0E20               	movlw	32
  7313  00100C  6E19               	movwf	(___flmul@a+2)^0,c
  7314  00100E  0E41               	movlw	65
  7315  001010  6E1A               	movwf	(___flmul@a+3)^0,c
  7316  001012  ECB8  F00F         	call	___flmul	;wreg free
  7317  001016  C013  F080         	movff	?___flmul,efgtoa@ou
  7318  00101A  C014  F081         	movff	?___flmul+1,efgtoa@ou+1
  7319  00101E  C015  F082         	movff	?___flmul+2,efgtoa@ou+2
  7320  001022  C016  F083         	movff	?___flmul+3,efgtoa@ou+3
  7321  001026                     
  7322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  7323  001026  0E66               	movlw	102
  7324  001028  0100               	movlb	0	; () banked
  7325  00102A  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7326  00102C  A4D8               	btfss	status,2,c
  7327  00102E  EF1B  F008         	goto	u4981
  7328  001032  EF1D  F008         	goto	u4980
  7329  001036                     u4981:
  7330  001036  EF1F  F008         	goto	l4660
  7331  00103A                     u4980:
  7332  00103A                     
  7333                           ; BSR set to: 0
  7334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  7335  00103A  4B7E               	infsnz	efgtoa@m& (0+255),f,b
  7336  00103C  2B7F               	incf	(efgtoa@m+1)& (0+255),f,b
  7337  00103E                     l4660:
  7338                           
  7339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  7340  00103E  C080  F0A0         	movff	efgtoa@ou,efgtoa@u
  7341  001042  C081  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  7342  001046  C082  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  7343  00104A  C083  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  7344  00104E                     
  7345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  7346  00104E  0E65               	movlw	101
  7347  001050  0100               	movlb	0	; () banked
  7348  001052  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7349  001054  B4D8               	btfsc	status,2,c
  7350  001056  EF2F  F008         	goto	u4991
  7351  00105A  EF31  F008         	goto	u4990
  7352  00105E                     u4991:
  7353  00105E  EF37  F008         	goto	l4666
  7354  001062                     u4990:
  7355  001062                     
  7356                           ; BSR set to: 0
  7357  001062  C09C  F07C         	movff	efgtoa@e,efgtoa@ne
  7358  001066  C09D  F07D         	movff	efgtoa@e+1,efgtoa@ne+1
  7359  00106A  EF3B  F008         	goto	l1304
  7360  00106E                     l4666:
  7361                           
  7362                           ; BSR set to: 0
  7363  00106E  0E00               	movlw	0
  7364  001070  6F7D               	movwf	(efgtoa@ne+1)& (0+255),b
  7365  001072  0E00               	movlw	0
  7366  001074  6F7C               	movwf	efgtoa@ne& (0+255),b
  7367  001076                     l1304:
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  7371  001076  0E00               	movlw	0
  7372  001078  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  7373  00107A  0E00               	movlw	0
  7374  00107C  6F7A               	movwf	efgtoa@pp& (0+255),b
  7375                           
  7376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  7377  00107E  0E00               	movlw	0
  7378  001080  6F79               	movwf	(efgtoa@t+1)& (0+255),b
  7379  001082  0E00               	movlw	0
  7380  001084  6F78               	movwf	efgtoa@t& (0+255),b
  7381                           
  7382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  7383  001086  0E00               	movlw	0
  7384  001088  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7385  00108A  0E00               	movlw	0
  7386  00108C  6F96               	movwf	efgtoa@i& (0+255),b
  7387                           
  7388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7389  00108E  EF36  F009         	goto	l4716
  7390  001092                     l4668:
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  7394  001092  C08E  F02C         	movff	efgtoa@h,___fldiv@b
  7395  001096  C08F  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  7396  00109A  C090  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  7397  00109E  C091  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  7398  0010A2  C0A0  F030         	movff	efgtoa@u,___fldiv@a
  7399  0010A6  C0A1  F031         	movff	efgtoa@u+1,___fldiv@a+1
  7400  0010AA  C0A2  F032         	movff	efgtoa@u+2,___fldiv@a+2
  7401  0010AE  C0A3  F033         	movff	efgtoa@u+3,___fldiv@a+3
  7402  0010B2  ECCD  F011         	call	___fldiv	;wreg free
  7403  0010B6  C02C  F045         	movff	?___fldiv,floorf@x
  7404  0010BA  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  7405  0010BE  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  7406  0010C2  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  7407  0010C6  ECBC  F017         	call	_floorf	;wreg free
  7408  0010CA  C045  F092         	movff	?_floorf,efgtoa@l
  7409  0010CE  C046  F093         	movff	?_floorf+1,efgtoa@l+1
  7410  0010D2  C047  F094         	movff	?_floorf+2,efgtoa@l+2
  7411  0010D6  C048  F095         	movff	?_floorf+3,efgtoa@l+3
  7412                           
  7413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  7414  0010DA  C092  F055         	movff	efgtoa@l,___fltol@f1
  7415  0010DE  C093  F056         	movff	efgtoa@l+1,___fltol@f1+1
  7416  0010E2  C094  F057         	movff	efgtoa@l+2,___fltol@f1+2
  7417  0010E6  C095  F058         	movff	efgtoa@l+3,___fltol@f1+3
  7418  0010EA  EC13  F01B         	call	___fltol	;wreg free
  7419  0010EE  C055  F084         	movff	?___fltol,efgtoa@d
  7420  0010F2  C056  F085         	movff	?___fltol+1,efgtoa@d+1
  7421  0010F6                     
  7422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7423  0010F6  0100               	movlb	0	; () banked
  7424  0010F8  B9F8               	btfsc	_flags& (0+255),4,b
  7425  0010FA  EF81  F008         	goto	u5001
  7426  0010FE  EF83  F008         	goto	u5000
  7427  001102                     u5001:
  7428  001102  EFA0  F008         	goto	l4680
  7429  001106                     u5000:
  7430  001106                     
  7431                           ; BSR set to: 0
  7432  001106  5184               	movf	efgtoa@d& (0+255),w,b
  7433  001108  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7434  00110A  A4D8               	btfss	status,2,c
  7435  00110C  EF8A  F008         	goto	u5011
  7436  001110  EF8C  F008         	goto	u5010
  7437  001114                     u5011:
  7438  001114  EFA0  F008         	goto	l4680
  7439  001118                     u5010:
  7440  001118                     
  7441                           ; BSR set to: 0
  7442  001118  0E67               	movlw	103
  7443  00111A  198D               	xorwf	efgtoa@mode& (0+255),w,b
  7444  00111C  A4D8               	btfss	status,2,c
  7445  00111E  EF93  F008         	goto	u5021
  7446  001122  EF95  F008         	goto	u5020
  7447  001126                     u5021:
  7448  001126  EFA0  F008         	goto	l4680
  7449  00112A                     u5020:
  7450  00112A                     
  7451                           ; BSR set to: 0
  7452  00112A  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7453  00112C  EF9C  F008         	goto	u5030
  7454  001130  EF9A  F008         	goto	u5031
  7455  001134                     u5031:
  7456  001134  EFA0  F008         	goto	l4680
  7457  001138                     u5030:
  7458  001138                     
  7459                           ; BSR set to: 0
  7460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  7461  001138  4B78               	infsnz	efgtoa@t& (0+255),f,b
  7462  00113A  2B79               	incf	(efgtoa@t+1)& (0+255),f,b
  7463                           
  7464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  7465  00113C  EFEA  F008         	goto	l4708
  7466  001140                     l4680:
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  7470  001140  517A               	movf	efgtoa@pp& (0+255),w,b
  7471  001142  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7472  001144  A4D8               	btfss	status,2,c
  7473  001146  EFA7  F008         	goto	u5041
  7474  00114A  EFA9  F008         	goto	u5040
  7475  00114E                     u5041:
  7476  00114E  EFD3  F008         	goto	l4700
  7477  001152                     u5040:
  7478  001152                     
  7479                           ; BSR set to: 0
  7480  001152  BF7D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7481  001154  EFB0  F008         	goto	u5050
  7482  001158  EFAE  F008         	goto	u5051
  7483  00115C                     u5051:
  7484  00115C  EFD3  F008         	goto	l4700
  7485  001160                     u5050:
  7486  001160                     
  7487                           ; BSR set to: 0
  7488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  7489  001160  0E0E               	movlw	low _dbuf
  7490  001162  259E               	addwf	efgtoa@n& (0+255),w,b
  7491  001164  6ED9               	movwf	fsr2l,c
  7492  001166  0E01               	movlw	high _dbuf
  7493  001168  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7494  00116A  6EDA               	movwf	fsr2h,c
  7495  00116C  0E2E               	movlw	46
  7496  00116E  6EDF               	movwf	indf2,c
  7497  001170                     
  7498                           ; BSR set to: 0
  7499  001170  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7500  001172  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7501  001174                     
  7502                           ; BSR set to: 0
  7503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  7504  001174  078A               	decf	efgtoa@w& (0+255),f,b
  7505  001176  A0D8               	btfss	status,0,c
  7506  001178  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7507  00117A                     
  7508                           ; BSR set to: 0
  7509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  7510  00117A  0E00               	movlw	0
  7511  00117C  6F7B               	movwf	(efgtoa@pp+1)& (0+255),b
  7512  00117E  0E01               	movlw	1
  7513  001180  6F7A               	movwf	efgtoa@pp& (0+255),b
  7514  001182  EFD3  F008         	goto	l4700
  7515  001186                     l4692:
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  7519  001186  0E0E               	movlw	low _dbuf
  7520  001188  259E               	addwf	efgtoa@n& (0+255),w,b
  7521  00118A  6ED9               	movwf	fsr2l,c
  7522  00118C  0E01               	movlw	high _dbuf
  7523  00118E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7524  001190  6EDA               	movwf	fsr2h,c
  7525  001192  0E30               	movlw	48
  7526  001194  6EDF               	movwf	indf2,c
  7527  001196                     
  7528                           ; BSR set to: 0
  7529  001196  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7530  001198  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7531  00119A                     
  7532                           ; BSR set to: 0
  7533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  7534  00119A  078A               	decf	efgtoa@w& (0+255),f,b
  7535  00119C  A0D8               	btfss	status,0,c
  7536  00119E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7537  0011A0                     
  7538                           ; BSR set to: 0
  7539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  7540  0011A0  0778               	decf	efgtoa@t& (0+255),f,b
  7541  0011A2  A0D8               	btfss	status,0,c
  7542  0011A4  0779               	decf	(efgtoa@t+1)& (0+255),f,b
  7543  0011A6                     l4700:
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  7547  0011A6  5178               	movf	efgtoa@t& (0+255),w,b
  7548  0011A8  1179               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7549  0011AA  A4D8               	btfss	status,2,c
  7550  0011AC  EFDA  F008         	goto	u5061
  7551  0011B0  EFDC  F008         	goto	u5060
  7552  0011B4                     u5061:
  7553  0011B4  EFC3  F008         	goto	l4692
  7554  0011B8                     u5060:
  7555  0011B8                     
  7556                           ; BSR set to: 0
  7557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7558  0011B8  0E0E               	movlw	low _dbuf
  7559  0011BA  259E               	addwf	efgtoa@n& (0+255),w,b
  7560  0011BC  6ED9               	movwf	fsr2l,c
  7561  0011BE  0E01               	movlw	high _dbuf
  7562  0011C0  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7563  0011C2  6EDA               	movwf	fsr2h,c
  7564  0011C4  5184               	movf	efgtoa@d& (0+255),w,b
  7565  0011C6  0F30               	addlw	48
  7566  0011C8  6EDF               	movwf	indf2,c
  7567  0011CA                     
  7568                           ; BSR set to: 0
  7569  0011CA  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7570  0011CC  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7571  0011CE                     
  7572                           ; BSR set to: 0
  7573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  7574  0011CE  078A               	decf	efgtoa@w& (0+255),f,b
  7575  0011D0  A0D8               	btfss	status,0,c
  7576  0011D2  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7577  0011D4                     l4708:
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  7581  0011D4  C08E  F055         	movff	efgtoa@h,___flsub@b
  7582  0011D8  C08F  F056         	movff	efgtoa@h+1,___flsub@b+1
  7583  0011DC  C090  F057         	movff	efgtoa@h+2,___flsub@b+2
  7584  0011E0  C091  F058         	movff	efgtoa@h+3,___flsub@b+3
  7585  0011E4  C0A0  F017         	movff	efgtoa@u,___flmul@a
  7586  0011E8  C0A1  F018         	movff	efgtoa@u+1,___flmul@a+1
  7587  0011EC  C0A2  F019         	movff	efgtoa@u+2,___flmul@a+2
  7588  0011F0  C0A3  F01A         	movff	efgtoa@u+3,___flmul@a+3
  7589  0011F4  C092  F013         	movff	efgtoa@l,___flmul@b
  7590  0011F8  C093  F014         	movff	efgtoa@l+1,___flmul@b+1
  7591  0011FC  C094  F015         	movff	efgtoa@l+2,___flmul@b+2
  7592  001200  C095  F016         	movff	efgtoa@l+3,___flmul@b+3
  7593  001204  ECB8  F00F         	call	___flmul	;wreg free
  7594  001208  C013  F059         	movff	?___flmul,___flsub@a
  7595  00120C  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  7596  001210  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  7597  001214  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  7598  001218  EC08  F023         	call	___flsub	;wreg free
  7599  00121C  C055  F08E         	movff	?___flsub,efgtoa@h
  7600  001220  C056  F08F         	movff	?___flsub+1,efgtoa@h+1
  7601  001224  C057  F090         	movff	?___flsub+2,efgtoa@h+2
  7602  001228  C058  F091         	movff	?___flsub+3,efgtoa@h+3
  7603  00122C                     
  7604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  7605  00122C  C0A0  F02C         	movff	efgtoa@u,___fldiv@b
  7606  001230  C0A1  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  7607  001234  C0A2  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  7608  001238  C0A3  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  7609  00123C  0E00               	movlw	0
  7610  00123E  6E30               	movwf	___fldiv@a^0,c
  7611  001240  0E00               	movlw	0
  7612  001242  6E31               	movwf	(___fldiv@a+1)^0,c
  7613  001244  0E20               	movlw	32
  7614  001246  6E32               	movwf	(___fldiv@a+2)^0,c
  7615  001248  0E41               	movlw	65
  7616  00124A  6E33               	movwf	(___fldiv@a+3)^0,c
  7617  00124C  ECCD  F011         	call	___fldiv	;wreg free
  7618  001250  C02C  F0A0         	movff	?___fldiv,efgtoa@u
  7619  001254  C02D  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  7620  001258  C02E  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  7621  00125C  C02F  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  7622  001260                     
  7623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  7624  001260  0100               	movlb	0	; () banked
  7625  001262  077C               	decf	efgtoa@ne& (0+255),f,b
  7626  001264  A0D8               	btfss	status,0,c
  7627  001266  077D               	decf	(efgtoa@ne+1)& (0+255),f,b
  7628  001268                     
  7629                           ; BSR set to: 0
  7630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  7631  001268  4B96               	infsnz	efgtoa@i& (0+255),f,b
  7632  00126A  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  7633  00126C                     l4716:
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7637  00126C  517E               	movf	efgtoa@m& (0+255),w,b
  7638  00126E  5D96               	subwf	efgtoa@i& (0+255),w,b
  7639  001270  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  7640  001272  0A80               	xorlw	128
  7641  001274  6F67               	movwf	??_efgtoa& (0+255),b
  7642  001276  517F               	movf	(efgtoa@m+1)& (0+255),w,b
  7643  001278  0A80               	xorlw	128
  7644  00127A  5967               	subwfb	??_efgtoa& (0+255),w,b
  7645  00127C  B0D8               	btfsc	status,0,c
  7646  00127E  EF43  F009         	goto	u5071
  7647  001282  EF45  F009         	goto	u5070
  7648  001286                     u5071:
  7649  001286  EF53  F009         	goto	l4720
  7650  00128A                     u5070:
  7651  00128A                     
  7652                           ; BSR set to: 0
  7653  00128A  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7654  00128C  EF51  F009         	goto	u5081
  7655  001290  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  7656  001292  E109               	bnz	u5080
  7657  001294  0E4B               	movlw	75
  7658  001296  5D9E               	subwf	efgtoa@n& (0+255),w,b
  7659  001298  A0D8               	btfss	status,0,c
  7660  00129A  EF51  F009         	goto	u5081
  7661  00129E  EF53  F009         	goto	u5080
  7662  0012A2                     u5081:
  7663  0012A2  EF49  F008         	goto	l4668
  7664  0012A6                     u5080:
  7665  0012A6                     l4720:
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7669  0012A6  517A               	movf	efgtoa@pp& (0+255),w,b
  7670  0012A8  117B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7671  0012AA  A4D8               	btfss	status,2,c
  7672  0012AC  EF5A  F009         	goto	u5091
  7673  0012B0  EF5C  F009         	goto	u5090
  7674  0012B4                     u5091:
  7675  0012B4  EF6D  F009         	goto	l4728
  7676  0012B8                     u5090:
  7677  0012B8                     
  7678                           ; BSR set to: 0
  7679  0012B8  A9F8               	btfss	_flags& (0+255),4,b
  7680  0012BA  EF61  F009         	goto	u5101
  7681  0012BE  EF63  F009         	goto	u5100
  7682  0012C2                     u5101:
  7683  0012C2  EF6D  F009         	goto	l4728
  7684  0012C6                     u5100:
  7685  0012C6                     
  7686                           ; BSR set to: 0
  7687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  7688  0012C6  0E0E               	movlw	low _dbuf
  7689  0012C8  259E               	addwf	efgtoa@n& (0+255),w,b
  7690  0012CA  6ED9               	movwf	fsr2l,c
  7691  0012CC  0E01               	movlw	high _dbuf
  7692  0012CE  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7693  0012D0  6EDA               	movwf	fsr2h,c
  7694  0012D2  0E2E               	movlw	46
  7695  0012D4  6EDF               	movwf	indf2,c
  7696  0012D6                     
  7697                           ; BSR set to: 0
  7698  0012D6  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  7699  0012D8  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  7700  0012DA                     l4728:
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  7704  0012DA  0E0E               	movlw	low _dbuf
  7705  0012DC  259E               	addwf	efgtoa@n& (0+255),w,b
  7706  0012DE  6ED9               	movwf	fsr2l,c
  7707  0012E0  0E01               	movlw	high _dbuf
  7708  0012E2  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7709  0012E4  6EDA               	movwf	fsr2h,c
  7710  0012E6  0E00               	movlw	0
  7711  0012E8  6EDF               	movwf	indf2,c
  7712  0012EA                     
  7713                           ; BSR set to: 0
  7714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  7715  0012EA  0E65               	movlw	101
  7716  0012EC  198C               	xorwf	efgtoa@nmode& (0+255),w,b
  7717  0012EE  A4D8               	btfss	status,2,c
  7718  0012F0  EF7C  F009         	goto	u5111
  7719  0012F4  EF7E  F009         	goto	u5110
  7720  0012F8                     u5111:
  7721  0012F8  EFD8  F004         	goto	l4530
  7722  0012FC                     u5110:
  7723  0012FC                     
  7724                           ; BSR set to: 0
  7725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  7726  0012FC  0E00               	movlw	0
  7727  0012FE  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  7728  001300  0E4F               	movlw	79
  7729  001302  6F96               	movwf	efgtoa@i& (0+255),b
  7730  001304                     
  7731                           ; BSR set to: 0
  7732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  7733  001304  0E0E               	movlw	low _dbuf
  7734  001306  2596               	addwf	efgtoa@i& (0+255),w,b
  7735  001308  6ED9               	movwf	fsr2l,c
  7736  00130A  0E01               	movlw	high _dbuf
  7737  00130C  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7738  00130E  6EDA               	movwf	fsr2h,c
  7739  001310  0E00               	movlw	0
  7740  001312  6EDF               	movwf	indf2,c
  7741  001314                     
  7742                           ; BSR set to: 0
  7743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  7744  001314  0E00               	movlw	0
  7745  001316  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  7746  001318  0E00               	movlw	0
  7747  00131A  6F86               	movwf	efgtoa@sign& (0+255),b
  7748  00131C                     
  7749                           ; BSR set to: 0
  7750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  7751  00131C  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7752  00131E  EF95  F009         	goto	u5120
  7753  001322  EF93  F009         	goto	u5121
  7754  001326                     u5121:
  7755  001326  EF9D  F009         	goto	l4744
  7756  00132A                     u5120:
  7757  00132A                     
  7758                           ; BSR set to: 0
  7759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  7760  00132A  0E00               	movlw	0
  7761  00132C  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  7762  00132E  0E01               	movlw	1
  7763  001330  6F86               	movwf	efgtoa@sign& (0+255),b
  7764  001332                     
  7765                           ; BSR set to: 0
  7766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  7767  001332  6D9C               	negf	efgtoa@e& (0+255),b
  7768  001334  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  7769  001336  B0D8               	btfsc	status,0,c
  7770  001338  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7771  00133A                     l4744:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  7775  00133A  0E00               	movlw	0
  7776  00133C  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  7777  00133E  0E02               	movlw	2
  7778  001340  6F88               	movwf	efgtoa@p& (0+255),b
  7779                           
  7780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7781  001342  EFCE  F009         	goto	l4756
  7782  001346                     l4746:
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  7786  001346  0796               	decf	efgtoa@i& (0+255),f,b
  7787  001348  A0D8               	btfss	status,0,c
  7788  00134A  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7789  00134C                     
  7790                           ; BSR set to: 0
  7791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  7792  00134C  0E0E               	movlw	low _dbuf
  7793  00134E  2596               	addwf	efgtoa@i& (0+255),w,b
  7794  001350  6ED9               	movwf	fsr2l,c
  7795  001352  0E01               	movlw	high _dbuf
  7796  001354  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7797  001356  6EDA               	movwf	fsr2h,c
  7798  001358  C09C  F001         	movff	efgtoa@e,___awmod@dividend
  7799  00135C  C09D  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  7800  001360  0E00               	movlw	0
  7801  001362  6E04               	movwf	(___awmod@divisor+1)^0,c
  7802  001364  0E0A               	movlw	10
  7803  001366  6E03               	movwf	___awmod@divisor^0,c
  7804  001368  EC0D  F01F         	call	___awmod	;wreg free
  7805  00136C  5001               	movf	?___awmod^0,w,c
  7806  00136E  0F30               	addlw	48
  7807  001370  6EDF               	movwf	indf2,c
  7808  001372                     
  7809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  7810  001372  C09C  F001         	movff	efgtoa@e,___awdiv@dividend
  7811  001376  C09D  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  7812  00137A  0E00               	movlw	0
  7813  00137C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7814  00137E  0E0A               	movlw	10
  7815  001380  6E03               	movwf	___awdiv@divisor^0,c
  7816  001382  ECAB  F01E         	call	___awdiv	;wreg free
  7817  001386  C001  F09C         	movff	?___awdiv,efgtoa@e
  7818  00138A  C002  F09D         	movff	?___awdiv+1,efgtoa@e+1
  7819  00138E                     
  7820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  7821  00138E  0100               	movlb	0	; () banked
  7822  001390  0788               	decf	efgtoa@p& (0+255),f,b
  7823  001392  A0D8               	btfss	status,0,c
  7824  001394  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  7825  001396                     
  7826                           ; BSR set to: 0
  7827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  7828  001396  078A               	decf	efgtoa@w& (0+255),f,b
  7829  001398  A0D8               	btfss	status,0,c
  7830  00139A  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7831  00139C                     l4756:
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7835  00139C  519C               	movf	efgtoa@e& (0+255),w,b
  7836  00139E  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7837  0013A0  A4D8               	btfss	status,2,c
  7838  0013A2  EFD5  F009         	goto	u5131
  7839  0013A6  EFD7  F009         	goto	u5130
  7840  0013AA                     u5131:
  7841  0013AA  EFA3  F009         	goto	l4746
  7842  0013AE                     u5130:
  7843  0013AE                     
  7844                           ; BSR set to: 0
  7845  0013AE  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7846  0013B0  EFE4  F009         	goto	u5140
  7847  0013B4  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  7848  0013B6  E106               	bnz	u5141
  7849  0013B8  0588               	decf	efgtoa@p& (0+255),w,b
  7850  0013BA  B0D8               	btfsc	status,0,c
  7851  0013BC  EFE2  F009         	goto	u5141
  7852  0013C0  EFE4  F009         	goto	u5140
  7853  0013C4                     u5141:
  7854  0013C4  EFA3  F009         	goto	l4746
  7855  0013C8                     u5140:
  7856  0013C8                     
  7857                           ; BSR set to: 0
  7858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  7859  0013C8  0796               	decf	efgtoa@i& (0+255),f,b
  7860  0013CA  A0D8               	btfss	status,0,c
  7861  0013CC  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7862  0013CE                     
  7863                           ; BSR set to: 0
  7864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  7865  0013CE  5186               	movf	efgtoa@sign& (0+255),w,b
  7866  0013D0  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7867  0013D2  A4D8               	btfss	status,2,c
  7868  0013D4  EFEE  F009         	goto	u5151
  7869  0013D8  EFF0  F009         	goto	u5150
  7870  0013DC                     u5151:
  7871  0013DC  EFF6  F009         	goto	l4766
  7872  0013E0                     u5150:
  7873  0013E0                     
  7874                           ; BSR set to: 0
  7875  0013E0  0E00               	movlw	0
  7876  0013E2  6F73               	movwf	(_efgtoa$1460+1)& (0+255),b
  7877  0013E4  0E2B               	movlw	43
  7878  0013E6  6F72               	movwf	_efgtoa$1460& (0+255),b
  7879  0013E8  EFFA  F009         	goto	l4768
  7880  0013EC                     l4766:
  7881                           
  7882                           ; BSR set to: 0
  7883  0013EC  0E00               	movlw	0
  7884  0013EE  6F73               	movwf	(_efgtoa$1460+1)& (0+255),b
  7885  0013F0  0E2D               	movlw	45
  7886  0013F2  6F72               	movwf	_efgtoa$1460& (0+255),b
  7887  0013F4                     l4768:
  7888                           
  7889                           ; BSR set to: 0
  7890  0013F4  0E0E               	movlw	low _dbuf
  7891  0013F6  2596               	addwf	efgtoa@i& (0+255),w,b
  7892  0013F8  6ED9               	movwf	fsr2l,c
  7893  0013FA  0E01               	movlw	high _dbuf
  7894  0013FC  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7895  0013FE  6EDA               	movwf	fsr2h,c
  7896  001400  C072  FFDF         	movff	_efgtoa$1460,indf2
  7897  001404                     
  7898                           ; BSR set to: 0
  7899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  7900  001404  078A               	decf	efgtoa@w& (0+255),f,b
  7901  001406  A0D8               	btfss	status,0,c
  7902  001408  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7903  00140A                     
  7904                           ; BSR set to: 0
  7905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7906  00140A  0796               	decf	efgtoa@i& (0+255),f,b
  7907  00140C  A0D8               	btfss	status,0,c
  7908  00140E  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  7909  001410                     
  7910                           ; BSR set to: 0
  7911  001410  0EBF               	movlw	191
  7912  001412  6F67               	movwf	??_efgtoa& (0+255),b
  7913  001414  0EFF               	movlw	255
  7914  001416  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  7915  001418  5166               	movf	efgtoa@c& (0+255),w,b
  7916  00141A  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  7917  00141C  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  7918  00141E  5167               	movf	??_efgtoa& (0+255),w,b
  7919  001420  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  7920  001422  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  7921  001424  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7922  001426  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  7923  001428  E10A               	bnz	u5160
  7924  00142A  0E1A               	movlw	26
  7925  00142C  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  7926  00142E  A0D8               	btfss	status,0,c
  7927  001430  EF1C  F00A         	goto	u5161
  7928  001434  EF1F  F00A         	goto	u5160
  7929  001438                     u5161:
  7930  001438  0E01               	movlw	1
  7931  00143A  EF20  F00A         	goto	u5170
  7932  00143E                     u5160:
  7933  00143E  0E00               	movlw	0
  7934  001440                     u5170:
  7935  001440  6F76               	movwf	_efgtoa$1462& (0+255),b
  7936  001442  6B77               	clrf	(_efgtoa$1462+1)& (0+255),b
  7937  001444                     
  7938                           ; BSR set to: 0
  7939  001444  5176               	movf	_efgtoa$1462& (0+255),w,b
  7940  001446  1177               	iorwf	(_efgtoa$1462+1)& (0+255),w,b
  7941  001448  A4D8               	btfss	status,2,c
  7942  00144A  EF29  F00A         	goto	u5181
  7943  00144E  EF2B  F00A         	goto	u5180
  7944  001452                     u5181:
  7945  001452  EF31  F00A         	goto	l4782
  7946  001456                     u5180:
  7947  001456                     
  7948                           ; BSR set to: 0
  7949  001456  0E00               	movlw	0
  7950  001458  6F75               	movwf	(_efgtoa$1461+1)& (0+255),b
  7951  00145A  0E65               	movlw	101
  7952  00145C  6F74               	movwf	_efgtoa$1461& (0+255),b
  7953  00145E  EF35  F00A         	goto	l4784
  7954  001462                     l4782:
  7955                           
  7956                           ; BSR set to: 0
  7957  001462  0E00               	movlw	0
  7958  001464  6F75               	movwf	(_efgtoa$1461+1)& (0+255),b
  7959  001466  0E45               	movlw	69
  7960  001468  6F74               	movwf	_efgtoa$1461& (0+255),b
  7961  00146A                     l4784:
  7962                           
  7963                           ; BSR set to: 0
  7964  00146A  0E0E               	movlw	low _dbuf
  7965  00146C  2596               	addwf	efgtoa@i& (0+255),w,b
  7966  00146E  6ED9               	movwf	fsr2l,c
  7967  001470  0E01               	movlw	high _dbuf
  7968  001472  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7969  001474  6EDA               	movwf	fsr2h,c
  7970  001476  C074  FFDF         	movff	_efgtoa$1461,indf2
  7971  00147A                     
  7972                           ; BSR set to: 0
  7973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  7974  00147A  078A               	decf	efgtoa@w& (0+255),f,b
  7975  00147C  A0D8               	btfss	status,0,c
  7976  00147E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7977  001480                     
  7978                           ; BSR set to: 0
  7979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  7980  001480  0E0E               	movlw	low _dbuf
  7981  001482  259E               	addwf	efgtoa@n& (0+255),w,b
  7982  001484  6E01               	movwf	strcpy@dest^0,c
  7983  001486  0E01               	movlw	high _dbuf
  7984  001488  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7985  00148A  6E02               	movwf	(strcpy@dest+1)^0,c
  7986  00148C  0E0E               	movlw	low _dbuf
  7987  00148E  2596               	addwf	efgtoa@i& (0+255),w,b
  7988  001490  6E03               	movwf	strcpy@src^0,c
  7989  001492  0E01               	movlw	high _dbuf
  7990  001494  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7991  001496  6E04               	movwf	(strcpy@src+1)^0,c
  7992  001498  EC21  F021         	call	_strcpy	;wreg free
  7993  00149C  EFD8  F004         	goto	l4530
  7994  0014A0                     l1258:
  7995  0014A0  0012               	return		;funcret
  7996  0014A2                     __end_of_efgtoa:
  7997                           	callstack 0
  7998                           
  7999 ;; *************** function _tolower *****************
  8000 ;; Defined at:
  8001 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;  c               2    6[COMRAM] int 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;		None
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  2    6[COMRAM] int 
  8008 ;; Registers used:
  8009 ;;		wreg, status,2, status,0
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8015 ;;      Params:         2       0       0       0       0       0       0       0       0
  8016 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8017 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8018 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8019 ;;Total ram usage:        8 bytes
  8020 ;; Hardware stack levels used: 1
  8021 ;; Hardware stack levels required when called: 1
  8022 ;; This function calls:
  8023 ;;		_isupper
  8024 ;; This function is called by:
  8025 ;;		_efgtoa
  8026 ;;		_vfpfcnvrt
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text34
  8031  0040C8                     __ptext34:
  8032                           	callstack 0
  8033  0040C8                     _tolower:
  8034                           	callstack 25
  8035  0040C8  0EBF               	movlw	191
  8036  0040CA  6E09               	movwf	??_tolower^0,c
  8037  0040CC  0EFF               	movlw	255
  8038  0040CE  6E0A               	movwf	(??_tolower+1)^0,c
  8039  0040D0  C007  F00B         	movff	tolower@c,??_tolower+2
  8040  0040D4  C008  F00C         	movff	tolower@c+1,??_tolower+3
  8041  0040D8  5009               	movf	??_tolower^0,w,c
  8042  0040DA  260B               	addwf	(??_tolower+2)^0,f,c
  8043  0040DC  500A               	movf	(??_tolower+1)^0,w,c
  8044  0040DE  220C               	addwfc	(??_tolower+3)^0,f,c
  8045  0040E0  500C               	movf	(??_tolower+3)^0,w,c
  8046  0040E2  E10A               	bnz	u4400
  8047  0040E4  0E1A               	movlw	26
  8048  0040E6  5C0B               	subwf	(??_tolower+2)^0,w,c
  8049  0040E8  A0D8               	btfss	status,0,c
  8050  0040EA  EF79  F020         	goto	u4401
  8051  0040EE  EF7C  F020         	goto	u4400
  8052  0040F2                     u4401:
  8053  0040F2  0E01               	movlw	1
  8054  0040F4  EF7D  F020         	goto	u4410
  8055  0040F8                     u4400:
  8056  0040F8  0E00               	movlw	0
  8057  0040FA                     u4410:
  8058  0040FA  6E0D               	movwf	_tolower$1630^0,c
  8059  0040FC  6A0E               	clrf	(_tolower$1630+1)^0,c
  8060  0040FE  500D               	movf	_tolower$1630^0,w,c
  8061  004100  100E               	iorwf	(_tolower$1630+1)^0,w,c
  8062  004102  B4D8               	btfsc	status,2,c
  8063  004104  EF86  F020         	goto	u4421
  8064  004108  EF88  F020         	goto	u4420
  8065  00410C                     u4421:
  8066  00410C  EF8F  F020         	goto	l1539
  8067  004110                     u4420:
  8068  004110  0E20               	movlw	32
  8069  004112  1007               	iorwf	tolower@c^0,w,c
  8070  004114  6E07               	movwf	?_tolower^0,c
  8071  004116  5008               	movf	(tolower@c+1)^0,w,c
  8072  004118  6E08               	movwf	(?_tolower+1)^0,c
  8073  00411A  EF93  F020         	goto	l1544
  8074  00411E                     l1539:
  8075  00411E  C007  F007         	movff	tolower@c,?_tolower
  8076  004122  C008  F008         	movff	tolower@c+1,?_tolower+1
  8077  004126                     l1544:
  8078  004126  0012               	return		;funcret
  8079  004128                     __end_of_tolower:
  8080                           	callstack 0
  8081                           
  8082 ;; *************** function _isupper *****************
  8083 ;; Defined at:
  8084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  c               2    0[COMRAM] int 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;		None
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  2    0[COMRAM] int 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8098 ;;      Params:         2       0       0       0       0       0       0       0       0
  8099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8100 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8101 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8102 ;;Total ram usage:        6 bytes
  8103 ;; Hardware stack levels used: 1
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_efgtoa
  8108 ;;		_xtoa
  8109 ;;		_vfpfcnvrt
  8110 ;;		_tolower
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text35
  8115  004788                     __ptext35:
  8116                           	callstack 0
  8117  004788                     _isupper:
  8118                           	callstack 25
  8119  004788  0EBF               	movlw	191
  8120  00478A  6E03               	movwf	??_isupper^0,c
  8121  00478C  0EFF               	movlw	255
  8122  00478E  6E04               	movwf	(??_isupper+1)^0,c
  8123  004790  C001  F005         	movff	isupper@c,??_isupper+2
  8124  004794  C002  F006         	movff	isupper@c+1,??_isupper+3
  8125  004798  5003               	movf	??_isupper^0,w,c
  8126  00479A  2605               	addwf	(??_isupper+2)^0,f,c
  8127  00479C  5004               	movf	(??_isupper+1)^0,w,c
  8128  00479E  2206               	addwfc	(??_isupper+3)^0,f,c
  8129  0047A0  5006               	movf	(??_isupper+3)^0,w,c
  8130  0047A2  E10A               	bnz	u3530
  8131  0047A4  0E1A               	movlw	26
  8132  0047A6  5C05               	subwf	(??_isupper+2)^0,w,c
  8133  0047A8  A0D8               	btfss	status,0,c
  8134  0047AA  EFD9  F023         	goto	u3531
  8135  0047AE  EFDC  F023         	goto	u3530
  8136  0047B2                     u3531:
  8137  0047B2  0E01               	movlw	1
  8138  0047B4  EFDD  F023         	goto	u3540
  8139  0047B8                     u3530:
  8140  0047B8  0E00               	movlw	0
  8141  0047BA                     u3540:
  8142  0047BA  6E01               	movwf	?_isupper^0,c
  8143  0047BC  6A02               	clrf	(?_isupper+1)^0,c
  8144  0047BE  0012               	return		;funcret
  8145  0047C0                     __end_of_isupper:
  8146                           	callstack 0
  8147                           
  8148 ;; *************** function _strcpy *****************
  8149 ;; Defined at:
  8150 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  dest            2    0[COMRAM] PTR unsigned char 
  8153 ;;		 -> dbuf(80), 
  8154 ;;  src             2    2[COMRAM] PTR const unsigned char 
  8155 ;;		 -> STR_27(4), STR_26(4), STR_23(4), STR_22(4), 
  8156 ;;		 -> dbuf(80), 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;  d               2    8[COMRAM] PTR unsigned char 
  8159 ;;		 -> dbuf(80), 
  8160 ;;  s               2    6[COMRAM] PTR const unsigned char 
  8161 ;;		 -> STR_27(4), STR_26(4), STR_23(4), STR_22(4), 
  8162 ;;		 -> dbuf(80), 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  2    0[COMRAM] PTR unsigned char 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8172 ;;      Params:         4       0       0       0       0       0       0       0       0
  8173 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8174 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8175 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8176 ;;Total ram usage:       10 bytes
  8177 ;; Hardware stack levels used: 1
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		_efgtoa
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	text36
  8186  004242                     __ptext36:
  8187                           	callstack 0
  8188  004242                     _strcpy:
  8189                           	callstack 25
  8190  004242  C003  F007         	movff	strcpy@src,strcpy@s
  8191  004246  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  8192  00424A  C001  F009         	movff	strcpy@dest,strcpy@d
  8193  00424E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  8194  004252                     l4398:
  8195  004252  5007               	movf	strcpy@s^0,w,c
  8196  004254  6E05               	movwf	??_strcpy^0,c
  8197  004256  5008               	movf	(strcpy@s+1)^0,w,c
  8198  004258  6E06               	movwf	(??_strcpy+1)^0,c
  8199  00425A  4A07               	infsnz	strcpy@s^0,f,c
  8200  00425C  2A08               	incf	(strcpy@s+1)^0,f,c
  8201  00425E  C005  FFF6         	movff	??_strcpy,tblptrl
  8202  004262  C006  FFF7         	movff	??_strcpy+1,tblptrh
  8203  004266  6AF8               	clrf	tblptru,c
  8204  004268  C009  FFD9         	movff	strcpy@d,fsr2l
  8205  00426C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  8206  004270  4A09               	infsnz	strcpy@d^0,f,c
  8207  004272  2A0A               	incf	(strcpy@d+1)^0,f,c
  8208  004274  0E07               	movlw	(high __ramtop+-1)
  8209  004276  64F7               	cpfsgt	tblptrh,c
  8210  004278  D003               	bra	u4387
  8211  00427A  0008               	tblrd		*
  8212  00427C  50F5               	movf	tablat,w,c
  8213  00427E  D005               	bra	u4380
  8214  004280                     u4387:
  8215  004280  CFF6 FFE1          	movff	tblptrl,fsr1l
  8216  004284  CFF7 FFE2          	movff	tblptrh,fsr1h
  8217  004288  50E7               	movf	indf1,w,c
  8218  00428A                     u4380:
  8219  00428A  6EDF               	movwf	indf2,c
  8220  00428C  50DF               	movf	indf2,w,c
  8221  00428E  A4D8               	btfss	status,2,c
  8222  004290  EF4C  F021         	goto	u4391
  8223  004294  EF4E  F021         	goto	u4390
  8224  004298                     u4391:
  8225  004298  EF29  F021         	goto	l4398
  8226  00429C                     u4390:
  8227  00429C  0012               	return		;funcret
  8228  00429E                     __end_of_strcpy:
  8229                           	callstack 0
  8230                           
  8231 ;; *************** function _pad *****************
  8232 ;; Defined at:
  8233 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8236 ;;		 -> sprintf@f(6), 
  8237 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8238 ;;		 -> dbuf(80), 
  8239 ;;  p               2   20[COMRAM] int 
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;  w               2   25[COMRAM] int 
  8242 ;;  i               2   23[COMRAM] int 
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  2   16[COMRAM] int 
  8245 ;; Registers used:
  8246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 0/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8252 ;;      Params:         6       0       0       0       0       0       0       0       0
  8253 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8254 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8255 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8256 ;;Total ram usage:       11 bytes
  8257 ;; Hardware stack levels used: 1
  8258 ;; Hardware stack levels required when called: 3
  8259 ;; This function calls:
  8260 ;;		_fputc
  8261 ;;		_fputs
  8262 ;;		_strlen
  8263 ;; This function is called by:
  8264 ;;		_efgtoa
  8265 ;;		_xtoa
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text37
  8270  003BCC                     __ptext37:
  8271                           	callstack 0
  8272  003BCC                     _pad:
  8273                           	callstack 22
  8274  003BCC                     
  8275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8276  003BCC  0100               	movlb	0	; () banked
  8277  003BCE  A1F8               	btfss	_flags& (0+255),0,b
  8278  003BD0  EFEC  F01D         	goto	u4271
  8279  003BD4  EFEE  F01D         	goto	u4270
  8280  003BD8                     u4271:
  8281  003BD8  EFF8  F01D         	goto	l4356
  8282  003BDC                     u4270:
  8283  003BDC                     
  8284                           ; BSR set to: 0
  8285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8286  003BDC  C013  F00A         	movff	pad@buf,fputs@s
  8287  003BE0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8288  003BE4  C011  F00C         	movff	pad@fp,fputs@fp
  8289  003BE8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8290  003BEC  EC2B  F023         	call	_fputs	;wreg free
  8291  003BF0                     l4356:
  8292                           
  8293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8294  003BF0  BE16               	btfsc	(pad@p+1)^0,7,c
  8295  003BF2  EFFD  F01D         	goto	u4281
  8296  003BF6  EFFF  F01D         	goto	u4280
  8297  003BFA                     u4281:
  8298  003BFA  EF05  F01E         	goto	l4360
  8299  003BFE                     u4280:
  8300  003BFE  C015  F01A         	movff	pad@p,pad@w
  8301  003C02  C016  F01B         	movff	pad@p+1,pad@w+1
  8302  003C06  EF09  F01E         	goto	l1235
  8303  003C0A                     l4360:
  8304  003C0A  0E00               	movlw	0
  8305  003C0C  6E1B               	movwf	(pad@w+1)^0,c
  8306  003C0E  0E00               	movlw	0
  8307  003C10  6E1A               	movwf	pad@w^0,c
  8308  003C12                     l1235:
  8309                           
  8310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8311  003C12  0E00               	movlw	0
  8312  003C14  6E19               	movwf	(pad@i+1)^0,c
  8313  003C16  0E00               	movlw	0
  8314  003C18  6E18               	movwf	pad@i^0,c
  8315                           
  8316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8317  003C1A  EF1B  F01E         	goto	l4366
  8318  003C1E                     l4362:
  8319                           
  8320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8321  003C1E  0E00               	movlw	0
  8322  003C20  6E02               	movwf	(fputc@c+1)^0,c
  8323  003C22  0E20               	movlw	32
  8324  003C24  6E01               	movwf	fputc@c^0,c
  8325  003C26  C011  F003         	movff	pad@fp,fputc@fp
  8326  003C2A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8327  003C2E  EC81  F01D         	call	_fputc	;wreg free
  8328  003C32                     
  8329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8330  003C32  4A18               	infsnz	pad@i^0,f,c
  8331  003C34  2A19               	incf	(pad@i+1)^0,f,c
  8332  003C36                     l4366:
  8333                           
  8334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8335  003C36  501A               	movf	pad@w^0,w,c
  8336  003C38  5C18               	subwf	pad@i^0,w,c
  8337  003C3A  5019               	movf	(pad@i+1)^0,w,c
  8338  003C3C  0A80               	xorlw	128
  8339  003C3E  6E17               	movwf	??_pad^0,c
  8340  003C40  501B               	movf	(pad@w+1)^0,w,c
  8341  003C42  0A80               	xorlw	128
  8342  003C44  5817               	subwfb	??_pad^0,w,c
  8343  003C46  A0D8               	btfss	status,0,c
  8344  003C48  EF28  F01E         	goto	u4291
  8345  003C4C  EF2A  F01E         	goto	u4290
  8346  003C50                     u4291:
  8347  003C50  EF0F  F01E         	goto	l4362
  8348  003C54                     u4290:
  8349  003C54                     
  8350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8351  003C54  0100               	movlb	0	; () banked
  8352  003C56  B1F8               	btfsc	_flags& (0+255),0,b
  8353  003C58  EF30  F01E         	goto	u4301
  8354  003C5C  EF32  F01E         	goto	u4300
  8355  003C60                     u4301:
  8356  003C60  EF3C  F01E         	goto	l4370
  8357  003C64                     u4300:
  8358  003C64                     
  8359                           ; BSR set to: 0
  8360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8361  003C64  C013  F00A         	movff	pad@buf,fputs@s
  8362  003C68  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8363  003C6C  C011  F00C         	movff	pad@fp,fputs@fp
  8364  003C70  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8365  003C74  EC2B  F023         	call	_fputs	;wreg free
  8366  003C78                     l4370:
  8367                           
  8368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8369  003C78  C013  F001         	movff	pad@buf,strlen@s
  8370  003C7C  C014  F002         	movff	pad@buf+1,strlen@s+1
  8371  003C80  EC34  F024         	call	_strlen	;wreg free
  8372  003C84  501A               	movf	pad@w^0,w,c
  8373  003C86  2401               	addwf	?_strlen^0,w,c
  8374  003C88  6E11               	movwf	?_pad^0,c
  8375  003C8A  501B               	movf	(pad@w+1)^0,w,c
  8376  003C8C  2002               	addwfc	(?_strlen+1)^0,w,c
  8377  003C8E  6E12               	movwf	(?_pad+1)^0,c
  8378  003C90  0012               	return		;funcret
  8379  003C92                     __end_of_pad:
  8380                           	callstack 0
  8381                           
  8382 ;; *************** function _strlen *****************
  8383 ;; Defined at:
  8384 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8387 ;;		 -> dbuf(80), 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8390 ;;		 -> dbuf(80), 
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  2    0[COMRAM] unsigned int 
  8393 ;; Registers used:
  8394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8400 ;;      Params:         2       0       0       0       0       0       0       0       0
  8401 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8403 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8404 ;;Total ram usage:        4 bytes
  8405 ;; Hardware stack levels used: 1
  8406 ;; This function calls:
  8407 ;;		Nothing
  8408 ;; This function is called by:
  8409 ;;		_pad
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           	psect	text38
  8414  004868                     __ptext38:
  8415                           	callstack 0
  8416  004868                     _strlen:
  8417                           	callstack 24
  8418  004868  C001  F003         	movff	strlen@s,strlen@a
  8419  00486C  C002  F004         	movff	strlen@s+1,strlen@a+1
  8420  004870  EF3C  F024         	goto	l3888
  8421  004874                     l3886:
  8422  004874  4A01               	infsnz	strlen@s^0,f,c
  8423  004876  2A02               	incf	(strlen@s+1)^0,f,c
  8424  004878                     l3888:
  8425  004878  C001  FFD9         	movff	strlen@s,fsr2l
  8426  00487C  C002  FFDA         	movff	strlen@s+1,fsr2h
  8427  004880  50DF               	movf	indf2,w,c
  8428  004882  A4D8               	btfss	status,2,c
  8429  004884  EF46  F024         	goto	u3521
  8430  004888  EF48  F024         	goto	u3520
  8431  00488C                     u3521:
  8432  00488C  EF3A  F024         	goto	l3886
  8433  004890                     u3520:
  8434  004890  5003               	movf	strlen@a^0,w,c
  8435  004892  5C01               	subwf	strlen@s^0,w,c
  8436  004894  6E01               	movwf	?_strlen^0,c
  8437  004896  5004               	movf	(strlen@a+1)^0,w,c
  8438  004898  5802               	subwfb	(strlen@s+1)^0,w,c
  8439  00489A  6E02               	movwf	(?_strlen+1)^0,c
  8440  00489C  0012               	return		;funcret
  8441  00489E                     __end_of_strlen:
  8442                           	callstack 0
  8443                           
  8444 ;; *************** function _fputs *****************
  8445 ;; Defined at:
  8446 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8449 ;;		 -> dbuf(80), 
  8450 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8451 ;;		 -> sprintf@f(6), 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  i               2   14[COMRAM] int 
  8454 ;;  c               1   13[COMRAM] unsigned char 
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  2    9[COMRAM] int 
  8457 ;; Registers used:
  8458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8464 ;;      Params:         4       0       0       0       0       0       0       0       0
  8465 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8467 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8468 ;;Total ram usage:        7 bytes
  8469 ;; Hardware stack levels used: 1
  8470 ;; Hardware stack levels required when called: 2
  8471 ;; This function calls:
  8472 ;;		_fputc
  8473 ;; This function is called by:
  8474 ;;		_pad
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text39
  8479  004656                     __ptext39:
  8480                           	callstack 0
  8481  004656                     _fputs:
  8482                           	callstack 22
  8483  004656  0E00               	movlw	0
  8484  004658  6E10               	movwf	(fputs@i+1)^0,c
  8485  00465A  0E00               	movlw	0
  8486  00465C  6E0F               	movwf	fputs@i^0,c
  8487  00465E  EF3C  F023         	goto	l3882
  8488  004662                     l3878:
  8489  004662  C00E  F001         	movff	fputs@c,fputc@c
  8490  004666  6A02               	clrf	(fputc@c+1)^0,c
  8491  004668  C00C  F003         	movff	fputs@fp,fputc@fp
  8492  00466C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8493  004670  EC81  F01D         	call	_fputc	;wreg free
  8494  004674  4A0F               	infsnz	fputs@i^0,f,c
  8495  004676  2A10               	incf	(fputs@i+1)^0,f,c
  8496  004678                     l3882:
  8497  004678  500F               	movf	fputs@i^0,w,c
  8498  00467A  240A               	addwf	fputs@s^0,w,c
  8499  00467C  6ED9               	movwf	fsr2l,c
  8500  00467E  5010               	movf	(fputs@i+1)^0,w,c
  8501  004680  200B               	addwfc	(fputs@s+1)^0,w,c
  8502  004682  6EDA               	movwf	fsr2h,c
  8503  004684  50DF               	movf	indf2,w,c
  8504  004686  6E0E               	movwf	fputs@c^0,c
  8505  004688  500E               	movf	fputs@c^0,w,c
  8506  00468A  A4D8               	btfss	status,2,c
  8507  00468C  EF4A  F023         	goto	u3511
  8508  004690  EF4C  F023         	goto	u3510
  8509  004694                     u3511:
  8510  004694  EF31  F023         	goto	l3878
  8511  004698                     u3510:
  8512  004698  0012               	return		;funcret
  8513  00469A                     __end_of_fputs:
  8514                           	callstack 0
  8515                           
  8516 ;; *************** function _fputc *****************
  8517 ;; Defined at:
  8518 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;  c               2    0[COMRAM] int 
  8521 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8522 ;;		 -> sprintf@f(6), 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  2    0[COMRAM] int 
  8527 ;; Registers used:
  8528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8534 ;;      Params:         4       0       0       0       0       0       0       0       0
  8535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8536 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8537 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8538 ;;Total ram usage:        9 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; Hardware stack levels required when called: 1
  8541 ;; This function calls:
  8542 ;;		_putch
  8543 ;; This function is called by:
  8544 ;;		_pad
  8545 ;;		_vfpfcnvrt
  8546 ;;		_fputs
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text40
  8551  003B02                     __ptext40:
  8552                           	callstack 0
  8553  003B02                     _fputc:
  8554                           	callstack 22
  8555  003B02  5003               	movf	fputc@fp^0,w,c
  8556  003B04  1004               	iorwf	(fputc@fp+1)^0,w,c
  8557  003B06  B4D8               	btfsc	status,2,c
  8558  003B08  EF88  F01D         	goto	u3081
  8559  003B0C  EF8A  F01D         	goto	u3080
  8560  003B10                     u3081:
  8561  003B10  EF93  F01D         	goto	l3664
  8562  003B14                     u3080:
  8563  003B14  5003               	movf	fputc@fp^0,w,c
  8564  003B16  1004               	iorwf	(fputc@fp+1)^0,w,c
  8565  003B18  A4D8               	btfss	status,2,c
  8566  003B1A  EF91  F01D         	goto	u3091
  8567  003B1E  EF93  F01D         	goto	u3090
  8568  003B22                     u3091:
  8569  003B22  EF98  F01D         	goto	l3666
  8570  003B26                     u3090:
  8571  003B26                     l3664:
  8572  003B26  5001               	movf	fputc@c^0,w,c
  8573  003B28  EC10  F025         	call	_putch
  8574  003B2C  EFE5  F01D         	goto	l1502
  8575  003B30                     l3666:
  8576  003B30  EE20 F004          	lfsr	2,4
  8577  003B34  5003               	movf	fputc@fp^0,w,c
  8578  003B36  26D9               	addwf	fsr2l,f,c
  8579  003B38  5004               	movf	(fputc@fp+1)^0,w,c
  8580  003B3A  22DA               	addwfc	fsr2h,f,c
  8581  003B3C  50DE               	movf	postinc2,w,c
  8582  003B3E  10DE               	iorwf	postinc2,w,c
  8583  003B40  B4D8               	btfsc	status,2,c
  8584  003B42  EFA5  F01D         	goto	u3101
  8585  003B46  EFA7  F01D         	goto	u3100
  8586  003B4A                     u3101:
  8587  003B4A  EFC2  F01D         	goto	l3670
  8588  003B4E                     u3100:
  8589  003B4E  EE20 F004          	lfsr	2,4
  8590  003B52  5003               	movf	fputc@fp^0,w,c
  8591  003B54  26D9               	addwf	fsr2l,f,c
  8592  003B56  5004               	movf	(fputc@fp+1)^0,w,c
  8593  003B58  22DA               	addwfc	fsr2h,f,c
  8594  003B5A  EE10 F002          	lfsr	1,2
  8595  003B5E  5003               	movf	fputc@fp^0,w,c
  8596  003B60  26E1               	addwf	fsr1l,f,c
  8597  003B62  5004               	movf	(fputc@fp+1)^0,w,c
  8598  003B64  22E2               	addwfc	fsr1h,f,c
  8599  003B66  50DE               	movf	postinc2,w,c
  8600  003B68  5CE6               	subwf	postinc1,w,c
  8601  003B6A  50E6               	movf	postinc1,w,c
  8602  003B6C  0A80               	xorlw	128
  8603  003B6E  6E09               	movwf	(??_fputc+4)^0,c
  8604  003B70  50DE               	movf	postinc2,w,c
  8605  003B72  0A80               	xorlw	128
  8606  003B74  5809               	subwfb	(??_fputc+4)^0,w,c
  8607  003B76  B0D8               	btfsc	status,0,c
  8608  003B78  EFC0  F01D         	goto	u3111
  8609  003B7C  EFC2  F01D         	goto	u3110
  8610  003B80                     u3111:
  8611  003B80  EFE5  F01D         	goto	l1502
  8612  003B84                     u3110:
  8613  003B84                     l3670:
  8614  003B84  EE20 F002          	lfsr	2,2
  8615  003B88  5003               	movf	fputc@fp^0,w,c
  8616  003B8A  26D9               	addwf	fsr2l,f,c
  8617  003B8C  5004               	movf	(fputc@fp+1)^0,w,c
  8618  003B8E  22DA               	addwfc	fsr2h,f,c
  8619  003B90  CFDE F005          	movff	postinc2,??_fputc
  8620  003B94  CFDD F006          	movff	postdec2,??_fputc+1
  8621  003B98  C003  FFD9         	movff	fputc@fp,fsr2l
  8622  003B9C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8623  003BA0  CFDE F007          	movff	postinc2,??_fputc+2
  8624  003BA4  CFDD F008          	movff	postdec2,??_fputc+3
  8625  003BA8  5005               	movf	??_fputc^0,w,c
  8626  003BAA  2407               	addwf	(??_fputc+2)^0,w,c
  8627  003BAC  6ED9               	movwf	fsr2l,c
  8628  003BAE  5006               	movf	(??_fputc+1)^0,w,c
  8629  003BB0  2008               	addwfc	(??_fputc+3)^0,w,c
  8630  003BB2  6EDA               	movwf	fsr2h,c
  8631  003BB4  C001  FFDF         	movff	fputc@c,indf2
  8632  003BB8  EE20 F002          	lfsr	2,2
  8633  003BBC  5003               	movf	fputc@fp^0,w,c
  8634  003BBE  26D9               	addwf	fsr2l,f,c
  8635  003BC0  5004               	movf	(fputc@fp+1)^0,w,c
  8636  003BC2  22DA               	addwfc	fsr2h,f,c
  8637  003BC4  2ADE               	incf	postinc2,f,c
  8638  003BC6  0E00               	movlw	0
  8639  003BC8  22DD               	addwfc	postdec2,f,c
  8640  003BCA                     l1502:
  8641  003BCA  0012               	return		;funcret
  8642  003BCC                     __end_of_fputc:
  8643                           	callstack 0
  8644                           
  8645 ;; *************** function _putch *****************
  8646 ;; Defined at:
  8647 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;  c               1    wreg     unsigned char 
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;  c               1    0[COMRAM] unsigned char 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8661 ;;      Params:         0       0       0       0       0       0       0       0       0
  8662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8664 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8665 ;;Total ram usage:        0 bytes
  8666 ;; Hardware stack levels used: 1
  8667 ;; This function calls:
  8668 ;;		Nothing
  8669 ;; This function is called by:
  8670 ;;		_fputc
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text41
  8675  004A20                     __ptext41:
  8676                           	callstack 0
  8677  004A20                     _putch:
  8678                           	callstack 22
  8679  004A20  0012               	return		;funcret
  8680  004A22                     __end_of_putch:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function _floorf *****************
  8684 ;; Defined at:
  8685 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  x               4   68[COMRAM] float 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;  u               4   84[COMRAM] struct .
  8690 ;;  m               4   78[COMRAM] unsigned long 
  8691 ;;  e               2   82[COMRAM] int 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  4   68[COMRAM] float 
  8694 ;; Registers used:
  8695 ;;		wreg, status,2, status,0
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8701 ;;      Params:         4       0       0       0       0       0       0       0       0
  8702 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8703 ;;      Temps:          6       0       0       0       0       0       0       0       0
  8704 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8705 ;;Total ram usage:       20 bytes
  8706 ;; Hardware stack levels used: 1
  8707 ;; This function calls:
  8708 ;;		Nothing
  8709 ;; This function is called by:
  8710 ;;		_efgtoa
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text42
  8715  002F78                     __ptext42:
  8716                           	callstack 0
  8717  002F78                     _floorf:
  8718                           	callstack 25
  8719  002F78  C0E2  F055         	movff	floorf@F527,floorf@u
  8720  002F7C  C0E3  F056         	movff	floorf@F527+1,floorf@u+1
  8721  002F80  C0E4  F057         	movff	floorf@F527+2,floorf@u+2
  8722  002F84  C0E5  F058         	movff	floorf@F527+3,floorf@u+3
  8723  002F88  C045  F055         	movff	floorf@x,floorf@u
  8724  002F8C  C046  F056         	movff	floorf@x+1,floorf@u+1
  8725  002F90  C047  F057         	movff	floorf@x+2,floorf@u+2
  8726  002F94  C048  F058         	movff	floorf@x+3,floorf@u+3
  8727  002F98  0E81               	movlw	129
  8728  002F9A  6E49               	movwf	??_floorf^0,c
  8729  002F9C  0EFF               	movlw	255
  8730  002F9E  6E4A               	movwf	(??_floorf+1)^0,c
  8731  002FA0  C055  F04B         	movff	floorf@u,??_floorf+2
  8732  002FA4  C056  F04C         	movff	floorf@u+1,??_floorf+3
  8733  002FA8  C057  F04D         	movff	floorf@u+2,??_floorf+4
  8734  002FAC  C058  F04E         	movff	floorf@u+3,??_floorf+5
  8735  002FB0  0E18               	movlw	24
  8736  002FB2  EFE0  F017         	goto	u4430
  8737  002FB6                     u4435:
  8738  002FB6  90D8               	bcf	status,0,c
  8739  002FB8  324E               	rrcf	(??_floorf+5)^0,f,c
  8740  002FBA  324D               	rrcf	(??_floorf+4)^0,f,c
  8741  002FBC  324C               	rrcf	(??_floorf+3)^0,f,c
  8742  002FBE  324B               	rrcf	(??_floorf+2)^0,f,c
  8743  002FC0                     u4430:
  8744  002FC0  2EE8               	decfsz	wreg,f,c
  8745  002FC2  EFDB  F017         	goto	u4435
  8746  002FC6  504B               	movf	(??_floorf+2)^0,w,c
  8747  002FC8  2449               	addwf	??_floorf^0,w,c
  8748  002FCA  6E53               	movwf	floorf@e^0,c
  8749  002FCC  0E00               	movlw	0
  8750  002FCE  204A               	addwfc	(??_floorf+1)^0,w,c
  8751  002FD0  6E54               	movwf	(floorf@e+1)^0,c
  8752  002FD2  BE54               	btfsc	(floorf@e+1)^0,7,c
  8753  002FD4  EFF5  F017         	goto	u4441
  8754  002FD8  5054               	movf	(floorf@e+1)^0,w,c
  8755  002FDA  E109               	bnz	u4440
  8756  002FDC  0E17               	movlw	23
  8757  002FDE  5C53               	subwf	floorf@e^0,w,c
  8758  002FE0  A0D8               	btfss	status,0,c
  8759  002FE2  EFF5  F017         	goto	u4441
  8760  002FE6  EFF7  F017         	goto	u4440
  8761  002FEA                     u4441:
  8762  002FEA  EF01  F018         	goto	l4416
  8763  002FEE                     u4440:
  8764  002FEE                     l4414:
  8765  002FEE  C045  F045         	movff	floorf@x,?_floorf
  8766  002FF2  C046  F046         	movff	floorf@x+1,?_floorf+1
  8767  002FF6  C047  F047         	movff	floorf@x+2,?_floorf+2
  8768  002FFA  C048  F048         	movff	floorf@x+3,?_floorf+3
  8769  002FFE  EFC4  F018         	goto	l1457
  8770  003002                     l4416:
  8771  003002  BE54               	btfsc	(floorf@e+1)^0,7,c
  8772  003004  EF06  F018         	goto	u4451
  8773  003008  EF08  F018         	goto	u4450
  8774  00300C                     u4451:
  8775  00300C  EF78  F018         	goto	l4426
  8776  003010                     u4450:
  8777  003010  C053  F049         	movff	floorf@e,??_floorf
  8778  003014  0EFF               	movlw	255
  8779  003016  6E4A               	movwf	(??_floorf+1)^0,c
  8780  003018  0EFF               	movlw	255
  8781  00301A  6E4B               	movwf	(??_floorf+2)^0,c
  8782  00301C  0E7F               	movlw	127
  8783  00301E  6E4C               	movwf	(??_floorf+3)^0,c
  8784  003020  0E00               	movlw	0
  8785  003022  6E4D               	movwf	(??_floorf+4)^0,c
  8786  003024                     u4465:
  8787  003024  6649               	tstfsz	??_floorf^0,c
  8788  003026  EF17  F018         	goto	u4466
  8789  00302A  EF1F  F018         	goto	u4467
  8790  00302E                     u4466:
  8791  00302E  344D               	rlcf	(??_floorf+4)^0,w,c
  8792  003030  324D               	rrcf	(??_floorf+4)^0,f,c
  8793  003032  324C               	rrcf	(??_floorf+3)^0,f,c
  8794  003034  324B               	rrcf	(??_floorf+2)^0,f,c
  8795  003036  324A               	rrcf	(??_floorf+1)^0,f,c
  8796  003038  2E49               	decfsz	??_floorf^0,f,c
  8797  00303A  EF12  F018         	goto	u4465
  8798  00303E                     u4467:
  8799  00303E  C04A  F04F         	movff	??_floorf+1,floorf@m
  8800  003042  C04B  F050         	movff	??_floorf+2,floorf@m+1
  8801  003046  C04C  F051         	movff	??_floorf+3,floorf@m+2
  8802  00304A  C04D  F052         	movff	??_floorf+4,floorf@m+3
  8803  00304E  504F               	movf	floorf@m^0,w,c
  8804  003050  1455               	andwf	floorf@u^0,w,c
  8805  003052  6E49               	movwf	??_floorf^0,c
  8806  003054  5050               	movf	(floorf@m+1)^0,w,c
  8807  003056  1456               	andwf	(floorf@u+1)^0,w,c
  8808  003058  6E4A               	movwf	(??_floorf+1)^0,c
  8809  00305A  5051               	movf	(floorf@m+2)^0,w,c
  8810  00305C  1457               	andwf	(floorf@u+2)^0,w,c
  8811  00305E  6E4B               	movwf	(??_floorf+2)^0,c
  8812  003060  5052               	movf	(floorf@m+3)^0,w,c
  8813  003062  1458               	andwf	(floorf@u+3)^0,w,c
  8814  003064  6E4C               	movwf	(??_floorf+3)^0,c
  8815  003066  5049               	movf	??_floorf^0,w,c
  8816  003068  104A               	iorwf	(??_floorf+1)^0,w,c
  8817  00306A  104B               	iorwf	(??_floorf+2)^0,w,c
  8818  00306C  104C               	iorwf	(??_floorf+3)^0,w,c
  8819  00306E  A4D8               	btfss	status,2,c
  8820  003070  EF3C  F018         	goto	u4471
  8821  003074  EF3E  F018         	goto	u4470
  8822  003078                     u4471:
  8823  003078  EF40  F018         	goto	l4422
  8824  00307C                     u4470:
  8825  00307C  EFF7  F017         	goto	l4414
  8826  003080                     l4422:
  8827  003080  C055  F049         	movff	floorf@u,??_floorf
  8828  003084  C056  F04A         	movff	floorf@u+1,??_floorf+1
  8829  003088  C057  F04B         	movff	floorf@u+2,??_floorf+2
  8830  00308C  C058  F04C         	movff	floorf@u+3,??_floorf+3
  8831  003090  0E20               	movlw	32
  8832  003092  EF50  F018         	goto	u4480
  8833  003096                     u4485:
  8834  003096  90D8               	bcf	status,0,c
  8835  003098  324C               	rrcf	(??_floorf+3)^0,f,c
  8836  00309A  324B               	rrcf	(??_floorf+2)^0,f,c
  8837  00309C  324A               	rrcf	(??_floorf+1)^0,f,c
  8838  00309E  3249               	rrcf	??_floorf^0,f,c
  8839  0030A0                     u4480:
  8840  0030A0  2EE8               	decfsz	wreg,f,c
  8841  0030A2  EF4B  F018         	goto	u4485
  8842  0030A6  5049               	movf	??_floorf^0,w,c
  8843  0030A8  104A               	iorwf	(??_floorf+1)^0,w,c
  8844  0030AA  104B               	iorwf	(??_floorf+2)^0,w,c
  8845  0030AC  104C               	iorwf	(??_floorf+3)^0,w,c
  8846  0030AE  B4D8               	btfsc	status,2,c
  8847  0030B0  EF5C  F018         	goto	u4491
  8848  0030B4  EF5E  F018         	goto	u4490
  8849  0030B8                     u4491:
  8850  0030B8  EF66  F018         	goto	l1460
  8851  0030BC                     u4490:
  8852  0030BC  504F               	movf	floorf@m^0,w,c
  8853  0030BE  2655               	addwf	floorf@u^0,f,c
  8854  0030C0  5050               	movf	(floorf@m+1)^0,w,c
  8855  0030C2  2256               	addwfc	(floorf@u+1)^0,f,c
  8856  0030C4  5051               	movf	(floorf@m+2)^0,w,c
  8857  0030C6  2257               	addwfc	(floorf@u+2)^0,f,c
  8858  0030C8  5052               	movf	(floorf@m+3)^0,w,c
  8859  0030CA  2258               	addwfc	(floorf@u+3)^0,f,c
  8860  0030CC                     l1460:
  8861  0030CC  1C4F               	comf	floorf@m^0,w,c
  8862  0030CE  6E49               	movwf	??_floorf^0,c
  8863  0030D0  1C50               	comf	(floorf@m+1)^0,w,c
  8864  0030D2  6E4A               	movwf	(??_floorf+1)^0,c
  8865  0030D4  1C51               	comf	(floorf@m+2)^0,w,c
  8866  0030D6  6E4B               	movwf	(??_floorf+2)^0,c
  8867  0030D8  1C52               	comf	(floorf@m+3)^0,w,c
  8868  0030DA  6E4C               	movwf	(??_floorf+3)^0,c
  8869  0030DC  5049               	movf	??_floorf^0,w,c
  8870  0030DE  1655               	andwf	floorf@u^0,f,c
  8871  0030E0  504A               	movf	(??_floorf+1)^0,w,c
  8872  0030E2  1656               	andwf	(floorf@u+1)^0,f,c
  8873  0030E4  504B               	movf	(??_floorf+2)^0,w,c
  8874  0030E6  1657               	andwf	(floorf@u+2)^0,f,c
  8875  0030E8  504C               	movf	(??_floorf+3)^0,w,c
  8876  0030EA  1658               	andwf	(floorf@u+3)^0,f,c
  8877  0030EC  EFBC  F018         	goto	l4434
  8878  0030F0                     l4426:
  8879  0030F0  C055  F049         	movff	floorf@u,??_floorf
  8880  0030F4  C056  F04A         	movff	floorf@u+1,??_floorf+1
  8881  0030F8  C057  F04B         	movff	floorf@u+2,??_floorf+2
  8882  0030FC  C058  F04C         	movff	floorf@u+3,??_floorf+3
  8883  003100  0E20               	movlw	32
  8884  003102  EF88  F018         	goto	u4500
  8885  003106                     u4505:
  8886  003106  90D8               	bcf	status,0,c
  8887  003108  324C               	rrcf	(??_floorf+3)^0,f,c
  8888  00310A  324B               	rrcf	(??_floorf+2)^0,f,c
  8889  00310C  324A               	rrcf	(??_floorf+1)^0,f,c
  8890  00310E  3249               	rrcf	??_floorf^0,f,c
  8891  003110                     u4500:
  8892  003110  2EE8               	decfsz	wreg,f,c
  8893  003112  EF83  F018         	goto	u4505
  8894  003116  5049               	movf	??_floorf^0,w,c
  8895  003118  104A               	iorwf	(??_floorf+1)^0,w,c
  8896  00311A  104B               	iorwf	(??_floorf+2)^0,w,c
  8897  00311C  104C               	iorwf	(??_floorf+3)^0,w,c
  8898  00311E  A4D8               	btfss	status,2,c
  8899  003120  EF94  F018         	goto	u4511
  8900  003124  EF96  F018         	goto	u4510
  8901  003128                     u4511:
  8902  003128  EFA0  F018         	goto	l4430
  8903  00312C                     u4510:
  8904  00312C  0E00               	movlw	0
  8905  00312E  6E55               	movwf	floorf@u^0,c
  8906  003130  0E00               	movlw	0
  8907  003132  6E56               	movwf	(floorf@u+1)^0,c
  8908  003134  0E00               	movlw	0
  8909  003136  6E57               	movwf	(floorf@u+2)^0,c
  8910  003138  0E00               	movlw	0
  8911  00313A  6E58               	movwf	(floorf@u+3)^0,c
  8912  00313C  EFBC  F018         	goto	l4434
  8913  003140                     l4430:
  8914  003140  90D8               	bcf	status,0,c
  8915  003142  3455               	rlcf	floorf@u^0,w,c
  8916  003144  6E49               	movwf	??_floorf^0,c
  8917  003146  3456               	rlcf	(floorf@u+1)^0,w,c
  8918  003148  6E4A               	movwf	(??_floorf+1)^0,c
  8919  00314A  3457               	rlcf	(floorf@u+2)^0,w,c
  8920  00314C  6E4B               	movwf	(??_floorf+2)^0,c
  8921  00314E  3458               	rlcf	(floorf@u+3)^0,w,c
  8922  003150  6E4C               	movwf	(??_floorf+3)^0,c
  8923  003152  5049               	movf	??_floorf^0,w,c
  8924  003154  104A               	iorwf	(??_floorf+1)^0,w,c
  8925  003156  104B               	iorwf	(??_floorf+2)^0,w,c
  8926  003158  104C               	iorwf	(??_floorf+3)^0,w,c
  8927  00315A  B4D8               	btfsc	status,2,c
  8928  00315C  EFB2  F018         	goto	u4521
  8929  003160  EFB4  F018         	goto	u4520
  8930  003164                     u4521:
  8931  003164  EFBC  F018         	goto	l4434
  8932  003168                     u4520:
  8933  003168  0E00               	movlw	0
  8934  00316A  6E55               	movwf	floorf@u^0,c
  8935  00316C  0E00               	movlw	0
  8936  00316E  6E56               	movwf	(floorf@u+1)^0,c
  8937  003170  0E80               	movlw	128
  8938  003172  6E57               	movwf	(floorf@u+2)^0,c
  8939  003174  0EBF               	movlw	191
  8940  003176  6E58               	movwf	(floorf@u+3)^0,c
  8941  003178                     l4434:
  8942  003178  C055  F045         	movff	floorf@u,?_floorf
  8943  00317C  C056  F046         	movff	floorf@u+1,?_floorf+1
  8944  003180  C057  F047         	movff	floorf@u+2,?_floorf+2
  8945  003184  C058  F048         	movff	floorf@u+3,?_floorf+3
  8946  003188                     l1457:
  8947  003188  0012               	return		;funcret
  8948  00318A                     __end_of_floorf:
  8949                           	callstack 0
  8950                           
  8951 ;; *************** function ___fpclassifyf *****************
  8952 ;; Defined at:
  8953 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  x               4    0[COMRAM] float 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;  u               4   10[COMRAM] struct .
  8958 ;;  e               2    8[COMRAM] int 
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  2    0[COMRAM] int 
  8961 ;; Registers used:
  8962 ;;		wreg, status,2, status,0
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8968 ;;      Params:         4       0       0       0       0       0       0       0       0
  8969 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8970 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8971 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8972 ;;Total ram usage:       14 bytes
  8973 ;; Hardware stack levels used: 1
  8974 ;; This function calls:
  8975 ;;		Nothing
  8976 ;; This function is called by:
  8977 ;;		_efgtoa
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text43
  8982  00392E                     __ptext43:
  8983                           	callstack 0
  8984  00392E                     ___fpclassifyf:
  8985                           	callstack 25
  8986  00392E  C0E6  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8987  003932  C0E7  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8988  003936  C0E8  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8989  00393A  C0E9  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8990  00393E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8991  003942  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8992  003946  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8993  00394A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8994  00394E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8995  003952  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8996  003956  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8997  00395A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8998  00395E  0E18               	movlw	24
  8999  003960  EFB7  F01C         	goto	u4310
  9000  003964                     u4315:
  9001  003964  90D8               	bcf	status,0,c
  9002  003966  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9003  003968  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9004  00396A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9005  00396C  3205               	rrcf	??___fpclassifyf^0,f,c
  9006  00396E                     u4310:
  9007  00396E  2EE8               	decfsz	wreg,f,c
  9008  003970  EFB2  F01C         	goto	u4315
  9009  003974  5005               	movf	??___fpclassifyf^0,w,c
  9010  003976  6E09               	movwf	___fpclassifyf@e^0,c
  9011  003978  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9012  00397A  5009               	movf	___fpclassifyf@e^0,w,c
  9013  00397C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9014  00397E  A4D8               	btfss	status,2,c
  9015  003980  EFC4  F01C         	goto	u4321
  9016  003984  EFC6  F01C         	goto	u4320
  9017  003988                     u4321:
  9018  003988  EFE6  F01C         	goto	l4386
  9019  00398C                     u4320:
  9020  00398C  90D8               	bcf	status,0,c
  9021  00398E  340B               	rlcf	___fpclassifyf@u^0,w,c
  9022  003990  6E05               	movwf	??___fpclassifyf^0,c
  9023  003992  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9024  003994  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9025  003996  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9026  003998  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9027  00399A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9028  00399C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9029  00399E  5005               	movf	??___fpclassifyf^0,w,c
  9030  0039A0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9031  0039A2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9032  0039A4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9033  0039A6  A4D8               	btfss	status,2,c
  9034  0039A8  EFD8  F01C         	goto	u4331
  9035  0039AC  EFDA  F01C         	goto	u4330
  9036  0039B0                     u4331:
  9037  0039B0  EFE0  F01C         	goto	l4382
  9038  0039B4                     u4330:
  9039  0039B4  0E00               	movlw	0
  9040  0039B6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9041  0039B8  0E02               	movlw	2
  9042  0039BA  6E01               	movwf	?___fpclassifyf^0,c
  9043  0039BC  EF15  F01D         	goto	l1419
  9044  0039C0                     l4382:
  9045  0039C0  0E00               	movlw	0
  9046  0039C2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9047  0039C4  0E03               	movlw	3
  9048  0039C6  6E01               	movwf	?___fpclassifyf^0,c
  9049  0039C8  EF15  F01D         	goto	l1419
  9050  0039CC                     l4386:
  9051  0039CC  2809               	incf	___fpclassifyf@e^0,w,c
  9052  0039CE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9053  0039D0  A4D8               	btfss	status,2,c
  9054  0039D2  EFED  F01C         	goto	u4341
  9055  0039D6  EFEF  F01C         	goto	u4340
  9056  0039DA                     u4341:
  9057  0039DA  EF11  F01D         	goto	l4392
  9058  0039DE                     u4340:
  9059  0039DE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9060  0039E2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9061  0039E6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9062  0039EA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9063  0039EE  0E09               	movlw	9
  9064  0039F0                     u4355:
  9065  0039F0  90D8               	bcf	status,0,c
  9066  0039F2  3605               	rlcf	??___fpclassifyf^0,f,c
  9067  0039F4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9068  0039F6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9069  0039F8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9070  0039FA  2EE8               	decfsz	wreg,f,c
  9071  0039FC  EFF8  F01C         	goto	u4355
  9072  003A00  5005               	movf	??___fpclassifyf^0,w,c
  9073  003A02  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9074  003A04  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9075  003A06  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9076  003A08  B4D8               	btfsc	status,2,c
  9077  003A0A  EF09  F01D         	goto	u4361
  9078  003A0E  EF0C  F01D         	goto	u4360
  9079  003A12                     u4361:
  9080  003A12  0E01               	movlw	1
  9081  003A14  EF0D  F01D         	goto	u4370
  9082  003A18                     u4360:
  9083  003A18  0E00               	movlw	0
  9084  003A1A                     u4370:
  9085  003A1A  6E01               	movwf	?___fpclassifyf^0,c
  9086  003A1C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9087  003A1E  EF15  F01D         	goto	l1419
  9088  003A22                     l4392:
  9089  003A22  0E00               	movlw	0
  9090  003A24  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9091  003A26  0E04               	movlw	4
  9092  003A28  6E01               	movwf	?___fpclassifyf^0,c
  9093  003A2A                     l1419:
  9094  003A2A  0012               	return		;funcret
  9095  003A2C                     __end_of___fpclassifyf:
  9096                           	callstack 0
  9097                           
  9098 ;; *************** function ___fltol *****************
  9099 ;; Defined at:
  9100 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  f1              4   84[COMRAM] int 
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;  exp1            1   93[COMRAM] unsigned char 
  9105 ;;  sign1           1   92[COMRAM] unsigned char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  4   84[COMRAM] long 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9115 ;;      Params:         4       0       0       0       0       0       0       0       0
  9116 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9117 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9118 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9119 ;;Total ram usage:       10 bytes
  9120 ;; Hardware stack levels used: 1
  9121 ;; This function calls:
  9122 ;;		Nothing
  9123 ;; This function is called by:
  9124 ;;		_ReadADC
  9125 ;;		_efgtoa
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text44
  9130  003626                     __ptext44:
  9131                           	callstack 0
  9132  003626                     ___fltol:
  9133                           	callstack 25
  9134  003626  3457               	rlcf	(___fltol@f1+2)^0,w,c
  9135  003628  3458               	rlcf	(___fltol@f1+3)^0,w,c
  9136  00362A  6E5E               	movwf	___fltol@exp1^0,c
  9137  00362C  505E               	movf	___fltol@exp1^0,w,c
  9138  00362E  A4D8               	btfss	status,2,c
  9139  003630  EF1C  F01B         	goto	u4201
  9140  003634  EF1E  F01B         	goto	u4200
  9141  003638                     u4201:
  9142  003638  EF28  F01B         	goto	l4314
  9143  00363C                     u4200:
  9144  00363C                     l4310:
  9145  00363C  0E00               	movlw	0
  9146  00363E  6E55               	movwf	?___fltol^0,c
  9147  003640  0E00               	movlw	0
  9148  003642  6E56               	movwf	(?___fltol+1)^0,c
  9149  003644  0E00               	movlw	0
  9150  003646  6E57               	movwf	(?___fltol+2)^0,c
  9151  003648  0E00               	movlw	0
  9152  00364A  6E58               	movwf	(?___fltol+3)^0,c
  9153  00364C  EF95  F01B         	goto	l809
  9154  003650                     l4314:
  9155  003650  C055  F059         	movff	___fltol@f1,??___fltol
  9156  003654  C056  F05A         	movff	___fltol@f1+1,??___fltol+1
  9157  003658  C057  F05B         	movff	___fltol@f1+2,??___fltol+2
  9158  00365C  C058  F05C         	movff	___fltol@f1+3,??___fltol+3
  9159  003660  0E20               	movlw	32
  9160  003662  EF38  F01B         	goto	u4210
  9161  003666                     u4215:
  9162  003666  90D8               	bcf	status,0,c
  9163  003668  325C               	rrcf	(??___fltol+3)^0,f,c
  9164  00366A  325B               	rrcf	(??___fltol+2)^0,f,c
  9165  00366C  325A               	rrcf	(??___fltol+1)^0,f,c
  9166  00366E  3259               	rrcf	??___fltol^0,f,c
  9167  003670                     u4210:
  9168  003670  2EE8               	decfsz	wreg,f,c
  9169  003672  EF33  F01B         	goto	u4215
  9170  003676  5059               	movf	??___fltol^0,w,c
  9171  003678  6E5D               	movwf	___fltol@sign1^0,c
  9172  00367A  8E57               	bsf	(___fltol@f1+2)^0,7,c
  9173  00367C  0EFF               	movlw	255
  9174  00367E  1655               	andwf	___fltol@f1^0,f,c
  9175  003680  0EFF               	movlw	255
  9176  003682  1656               	andwf	(___fltol@f1+1)^0,f,c
  9177  003684  0EFF               	movlw	255
  9178  003686  1657               	andwf	(___fltol@f1+2)^0,f,c
  9179  003688  0E00               	movlw	0
  9180  00368A  1658               	andwf	(___fltol@f1+3)^0,f,c
  9181  00368C  0E96               	movlw	150
  9182  00368E  5E5E               	subwf	___fltol@exp1^0,f,c
  9183  003690  BE5E               	btfsc	___fltol@exp1^0,7,c
  9184  003692  EF4F  F01B         	goto	u4220
  9185  003696  EF4D  F01B         	goto	u4221
  9186  00369A                     u4221:
  9187  00369A  EF65  F01B         	goto	l4334
  9188  00369E                     u4220:
  9189  00369E  505E               	movf	___fltol@exp1^0,w,c
  9190  0036A0  0A80               	xorlw	128
  9191  0036A2  0F97               	addlw	151
  9192  0036A4  B0D8               	btfsc	status,0,c
  9193  0036A6  EF57  F01B         	goto	u4231
  9194  0036AA  EF59  F01B         	goto	u4230
  9195  0036AE                     u4231:
  9196  0036AE  EF5B  F01B         	goto	l4330
  9197  0036B2                     u4230:
  9198  0036B2  EF1E  F01B         	goto	l4310
  9199  0036B6                     l4330:
  9200  0036B6  90D8               	bcf	status,0,c
  9201  0036B8  3258               	rrcf	(___fltol@f1+3)^0,f,c
  9202  0036BA  3257               	rrcf	(___fltol@f1+2)^0,f,c
  9203  0036BC  3256               	rrcf	(___fltol@f1+1)^0,f,c
  9204  0036BE  3255               	rrcf	___fltol@f1^0,f,c
  9205  0036C0  3E5E               	incfsz	___fltol@exp1^0,f,c
  9206  0036C2  EF5B  F01B         	goto	l4330
  9207  0036C6  EF7D  F01B         	goto	l4344
  9208  0036CA                     l4334:
  9209  0036CA  0E1F               	movlw	31
  9210  0036CC  645E               	cpfsgt	___fltol@exp1^0,c
  9211  0036CE  EF6B  F01B         	goto	u4241
  9212  0036D2  EF6D  F01B         	goto	u4240
  9213  0036D6                     u4241:
  9214  0036D6  EF75  F01B         	goto	l4342
  9215  0036DA                     u4240:
  9216  0036DA  EF1E  F01B         	goto	l4310
  9217  0036DE                     l4340:
  9218  0036DE  90D8               	bcf	status,0,c
  9219  0036E0  3655               	rlcf	___fltol@f1^0,f,c
  9220  0036E2  3656               	rlcf	(___fltol@f1+1)^0,f,c
  9221  0036E4  3657               	rlcf	(___fltol@f1+2)^0,f,c
  9222  0036E6  3658               	rlcf	(___fltol@f1+3)^0,f,c
  9223  0036E8  065E               	decf	___fltol@exp1^0,f,c
  9224  0036EA                     l4342:
  9225  0036EA  505E               	movf	___fltol@exp1^0,w,c
  9226  0036EC  A4D8               	btfss	status,2,c
  9227  0036EE  EF7B  F01B         	goto	u4251
  9228  0036F2  EF7D  F01B         	goto	u4250
  9229  0036F6                     u4251:
  9230  0036F6  EF6F  F01B         	goto	l4340
  9231  0036FA                     u4250:
  9232  0036FA                     l4344:
  9233  0036FA  505D               	movf	___fltol@sign1^0,w,c
  9234  0036FC  B4D8               	btfsc	status,2,c
  9235  0036FE  EF83  F01B         	goto	u4261
  9236  003702  EF85  F01B         	goto	u4260
  9237  003706                     u4261:
  9238  003706  EF8D  F01B         	goto	l4348
  9239  00370A                     u4260:
  9240  00370A  1E58               	comf	(___fltol@f1+3)^0,f,c
  9241  00370C  1E57               	comf	(___fltol@f1+2)^0,f,c
  9242  00370E  1E56               	comf	(___fltol@f1+1)^0,f,c
  9243  003710  6C55               	negf	___fltol@f1^0,c
  9244  003712  0E00               	movlw	0
  9245  003714  2256               	addwfc	(___fltol@f1+1)^0,f,c
  9246  003716  2257               	addwfc	(___fltol@f1+2)^0,f,c
  9247  003718  2258               	addwfc	(___fltol@f1+3)^0,f,c
  9248  00371A                     l4348:
  9249  00371A  C055  F055         	movff	___fltol@f1,?___fltol
  9250  00371E  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  9251  003722  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  9252  003726  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  9253  00372A                     l809:
  9254  00372A  0012               	return		;funcret
  9255  00372C                     __end_of___fltol:
  9256                           	callstack 0
  9257                           
  9258 ;; *************** function ___flsub *****************
  9259 ;; Defined at:
  9260 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;  b               4   84[COMRAM] long 
  9263 ;;  a               4   88[COMRAM] long 
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;		None
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  4   84[COMRAM] long 
  9268 ;; Registers used:
  9269 ;;		wreg, status,2, status,0, cstack
  9270 ;; Tracked objects:
  9271 ;;		On entry : 0/0
  9272 ;;		On exit  : 0/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9275 ;;      Params:         8       0       0       0       0       0       0       0       0
  9276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9278 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9279 ;;Total ram usage:        8 bytes
  9280 ;; Hardware stack levels used: 1
  9281 ;; Hardware stack levels required when called: 1
  9282 ;; This function calls:
  9283 ;;		___fladd
  9284 ;; This function is called by:
  9285 ;;		_efgtoa
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           	psect	text45
  9290  004610                     __ptext45:
  9291                           	callstack 0
  9292  004610                     ___flsub:
  9293                           	callstack 24
  9294  004610  0E00               	movlw	0
  9295  004612  1A59               	xorwf	___flsub@a^0,f,c
  9296  004614  0E00               	movlw	0
  9297  004616  1A5A               	xorwf	(___flsub@a+1)^0,f,c
  9298  004618  0E00               	movlw	0
  9299  00461A  1A5B               	xorwf	(___flsub@a+2)^0,f,c
  9300  00461C  0E80               	movlw	128
  9301  00461E  1A5C               	xorwf	(___flsub@a+3)^0,f,c
  9302  004620  C055  F045         	movff	___flsub@b,___fladd@b
  9303  004624  C056  F046         	movff	___flsub@b+1,___fladd@b+1
  9304  004628  C057  F047         	movff	___flsub@b+2,___fladd@b+2
  9305  00462C  C058  F048         	movff	___flsub@b+3,___fladd@b+3
  9306  004630  C059  F049         	movff	___flsub@a,___fladd@a
  9307  004634  C05A  F04A         	movff	___flsub@a+1,___fladd@a+1
  9308  004638  C05B  F04B         	movff	___flsub@a+2,___fladd@a+2
  9309  00463C  C05C  F04C         	movff	___flsub@a+3,___fladd@a+3
  9310  004640  EC58  F00D         	call	___fladd	;wreg free
  9311  004644  C045  F055         	movff	?___fladd,?___flsub
  9312  004648  C046  F056         	movff	?___fladd+1,?___flsub+1
  9313  00464C  C047  F057         	movff	?___fladd+2,?___flsub+2
  9314  004650  C048  F058         	movff	?___fladd+3,?___flsub+3
  9315  004654  0012               	return		;funcret
  9316  004656                     __end_of___flsub:
  9317                           	callstack 0
  9318                           
  9319 ;; *************** function ___fladd *****************
  9320 ;; Defined at:
  9321 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  b               4   68[COMRAM] long 
  9324 ;;  a               4   72[COMRAM] long 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  grs             1   83[COMRAM] unsigned char 
  9327 ;;  bexp            1   82[COMRAM] unsigned char 
  9328 ;;  aexp            1   81[COMRAM] unsigned char 
  9329 ;;  signs           1   80[COMRAM] unsigned char 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  4   68[COMRAM] unsigned char 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9339 ;;      Params:         8       0       0       0       0       0       0       0       0
  9340 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9341 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9342 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9343 ;;Total ram usage:       16 bytes
  9344 ;; Hardware stack levels used: 1
  9345 ;; This function calls:
  9346 ;;		Nothing
  9347 ;; This function is called by:
  9348 ;;		_ReadADC
  9349 ;;		___flsub
  9350 ;;		_efgtoa
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           	psect	text46
  9355  001AB0                     __ptext46:
  9356                           	callstack 0
  9357  001AB0                     ___fladd:
  9358                           	callstack 24
  9359  001AB0  5048               	movf	(___fladd@b+3)^0,w,c
  9360  001AB2  0B80               	andlw	128
  9361  001AB4  6E51               	movwf	___fladd@signs^0,c
  9362  001AB6  5048               	movf	(___fladd@b+3)^0,w,c
  9363  001AB8  2448               	addwf	(___fladd@b+3)^0,w,c
  9364  001ABA  6E53               	movwf	___fladd@bexp^0,c
  9365  001ABC  AE47               	btfss	(___fladd@b+2)^0,7,c
  9366  001ABE  EF63  F00D         	goto	u3121
  9367  001AC2  EF65  F00D         	goto	u3120
  9368  001AC6                     u3121:
  9369  001AC6  EF66  F00D         	goto	l3680
  9370  001ACA                     u3120:
  9371  001ACA  8053               	bsf	___fladd@bexp^0,0,c
  9372  001ACC                     l3680:
  9373  001ACC  5053               	movf	___fladd@bexp^0,w,c
  9374  001ACE  B4D8               	btfsc	status,2,c
  9375  001AD0  EF6C  F00D         	goto	u3131
  9376  001AD4  EF6E  F00D         	goto	u3130
  9377  001AD8                     u3131:
  9378  001AD8  EF83  F00D         	goto	l3690
  9379  001ADC                     u3130:
  9380  001ADC  2853               	incf	___fladd@bexp^0,w,c
  9381  001ADE  A4D8               	btfss	status,2,c
  9382  001AE0  EF74  F00D         	goto	u3141
  9383  001AE4  EF76  F00D         	goto	u3140
  9384  001AE8                     u3141:
  9385  001AE8  EF7E  F00D         	goto	l3686
  9386  001AEC                     u3140:
  9387  001AEC  0E00               	movlw	0
  9388  001AEE  6E45               	movwf	___fladd@b^0,c
  9389  001AF0  0E00               	movlw	0
  9390  001AF2  6E46               	movwf	(___fladd@b+1)^0,c
  9391  001AF4  0E00               	movlw	0
  9392  001AF6  6E47               	movwf	(___fladd@b+2)^0,c
  9393  001AF8  0E00               	movlw	0
  9394  001AFA  6E48               	movwf	(___fladd@b+3)^0,c
  9395  001AFC                     l3686:
  9396  001AFC  8E47               	bsf	(___fladd@b+2)^0,7,c
  9397  001AFE  0E00               	movlw	0
  9398  001B00  6E48               	movwf	(___fladd@b+3)^0,c
  9399  001B02  EF8B  F00D         	goto	l3692
  9400  001B06                     l3690:
  9401  001B06  0E00               	movlw	0
  9402  001B08  6E45               	movwf	___fladd@b^0,c
  9403  001B0A  0E00               	movlw	0
  9404  001B0C  6E46               	movwf	(___fladd@b+1)^0,c
  9405  001B0E  0E00               	movlw	0
  9406  001B10  6E47               	movwf	(___fladd@b+2)^0,c
  9407  001B12  0E00               	movlw	0
  9408  001B14  6E48               	movwf	(___fladd@b+3)^0,c
  9409  001B16                     l3692:
  9410  001B16  504C               	movf	(___fladd@a+3)^0,w,c
  9411  001B18  0B80               	andlw	128
  9412  001B1A  6E52               	movwf	___fladd@aexp^0,c
  9413  001B1C  5051               	movf	___fladd@signs^0,w,c
  9414  001B1E  1852               	xorwf	___fladd@aexp^0,w,c
  9415  001B20  B4D8               	btfsc	status,2,c
  9416  001B22  EF95  F00D         	goto	u3151
  9417  001B26  EF97  F00D         	goto	u3150
  9418  001B2A                     u3151:
  9419  001B2A  EF98  F00D         	goto	l3698
  9420  001B2E                     u3150:
  9421  001B2E  8C51               	bsf	___fladd@signs^0,6,c
  9422  001B30                     l3698:
  9423  001B30  504C               	movf	(___fladd@a+3)^0,w,c
  9424  001B32  244C               	addwf	(___fladd@a+3)^0,w,c
  9425  001B34  6E52               	movwf	___fladd@aexp^0,c
  9426  001B36  AE4B               	btfss	(___fladd@a+2)^0,7,c
  9427  001B38  EFA0  F00D         	goto	u3161
  9428  001B3C  EFA2  F00D         	goto	u3160
  9429  001B40                     u3161:
  9430  001B40  EFA3  F00D         	goto	l3704
  9431  001B44                     u3160:
  9432  001B44  8052               	bsf	___fladd@aexp^0,0,c
  9433  001B46                     l3704:
  9434  001B46  5052               	movf	___fladd@aexp^0,w,c
  9435  001B48  B4D8               	btfsc	status,2,c
  9436  001B4A  EFA9  F00D         	goto	u3171
  9437  001B4E  EFAB  F00D         	goto	u3170
  9438  001B52                     u3171:
  9439  001B52  EFC0  F00D         	goto	l3714
  9440  001B56                     u3170:
  9441  001B56  2852               	incf	___fladd@aexp^0,w,c
  9442  001B58  A4D8               	btfss	status,2,c
  9443  001B5A  EFB1  F00D         	goto	u3181
  9444  001B5E  EFB3  F00D         	goto	u3180
  9445  001B62                     u3181:
  9446  001B62  EFBB  F00D         	goto	l3710
  9447  001B66                     u3180:
  9448  001B66  0E00               	movlw	0
  9449  001B68  6E49               	movwf	___fladd@a^0,c
  9450  001B6A  0E00               	movlw	0
  9451  001B6C  6E4A               	movwf	(___fladd@a+1)^0,c
  9452  001B6E  0E00               	movlw	0
  9453  001B70  6E4B               	movwf	(___fladd@a+2)^0,c
  9454  001B72  0E00               	movlw	0
  9455  001B74  6E4C               	movwf	(___fladd@a+3)^0,c
  9456  001B76                     l3710:
  9457  001B76  8E4B               	bsf	(___fladd@a+2)^0,7,c
  9458  001B78  0E00               	movlw	0
  9459  001B7A  6E4C               	movwf	(___fladd@a+3)^0,c
  9460  001B7C  EFC8  F00D         	goto	l3716
  9461  001B80                     l3714:
  9462  001B80  0E00               	movlw	0
  9463  001B82  6E49               	movwf	___fladd@a^0,c
  9464  001B84  0E00               	movlw	0
  9465  001B86  6E4A               	movwf	(___fladd@a+1)^0,c
  9466  001B88  0E00               	movlw	0
  9467  001B8A  6E4B               	movwf	(___fladd@a+2)^0,c
  9468  001B8C  0E00               	movlw	0
  9469  001B8E  6E4C               	movwf	(___fladd@a+3)^0,c
  9470  001B90                     l3716:
  9471  001B90  5053               	movf	___fladd@bexp^0,w,c
  9472  001B92  5C52               	subwf	___fladd@aexp^0,w,c
  9473  001B94  B0D8               	btfsc	status,0,c
  9474  001B96  EFCF  F00D         	goto	u3191
  9475  001B9A  EFD1  F00D         	goto	u3190
  9476  001B9E                     u3191:
  9477  001B9E  EFF8  F00D         	goto	l3752
  9478  001BA2                     u3190:
  9479  001BA2  AC51               	btfss	___fladd@signs^0,6,c
  9480  001BA4  EFD6  F00D         	goto	u3201
  9481  001BA8  EFD8  F00D         	goto	u3200
  9482  001BAC                     u3201:
  9483  001BAC  EFDA  F00D         	goto	l3722
  9484  001BB0                     u3200:
  9485  001BB0  0E80               	movlw	128
  9486  001BB2  1A51               	xorwf	___fladd@signs^0,f,c
  9487  001BB4                     l3722:
  9488  001BB4  C053  F054         	movff	___fladd@bexp,___fladd@grs
  9489  001BB8  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  9490  001BBC  C054  F052         	movff	___fladd@grs,___fladd@aexp
  9491  001BC0  C045  F054         	movff	___fladd@b,___fladd@grs
  9492  001BC4  C049  F045         	movff	___fladd@a,___fladd@b
  9493  001BC8  C054  F049         	movff	___fladd@grs,___fladd@a
  9494  001BCC  C046  F054         	movff	___fladd@b+1,___fladd@grs
  9495  001BD0  C04A  F046         	movff	___fladd@a+1,___fladd@b+1
  9496  001BD4  C054  F04A         	movff	___fladd@grs,___fladd@a+1
  9497  001BD8  C047  F054         	movff	___fladd@b+2,___fladd@grs
  9498  001BDC  C04B  F047         	movff	___fladd@a+2,___fladd@b+2
  9499  001BE0  C054  F04B         	movff	___fladd@grs,___fladd@a+2
  9500  001BE4  C048  F054         	movff	___fladd@b+3,___fladd@grs
  9501  001BE8  C04C  F048         	movff	___fladd@a+3,___fladd@b+3
  9502  001BEC  C054  F04C         	movff	___fladd@grs,___fladd@a+3
  9503  001BF0                     l3752:
  9504  001BF0  0E00               	movlw	0
  9505  001BF2  6E54               	movwf	___fladd@grs^0,c
  9506  001BF4  5053               	movf	___fladd@bexp^0,w,c
  9507  001BF6  C052  F04D         	movff	___fladd@aexp,??___fladd
  9508  001BFA  6A4E               	clrf	(??___fladd+1)^0,c
  9509  001BFC  5E4D               	subwf	??___fladd^0,f,c
  9510  001BFE  0E00               	movlw	0
  9511  001C00  5A4E               	subwfb	(??___fladd+1)^0,f,c
  9512  001C02  BE4E               	btfsc	(??___fladd+1)^0,7,c
  9513  001C04  EF0D  F00E         	goto	u3211
  9514  001C08  504E               	movf	(??___fladd+1)^0,w,c
  9515  001C0A  E109               	bnz	u3210
  9516  001C0C  0E1A               	movlw	26
  9517  001C0E  5C4D               	subwf	??___fladd^0,w,c
  9518  001C10  A0D8               	btfss	status,0,c
  9519  001C12  EF0D  F00E         	goto	u3211
  9520  001C16  EF0F  F00E         	goto	u3210
  9521  001C1A                     u3211:
  9522  001C1A  EF46  F00E         	goto	l1041
  9523  001C1E                     u3210:
  9524  001C1E  5045               	movf	___fladd@b^0,w,c
  9525  001C20  1046               	iorwf	(___fladd@b+1)^0,w,c
  9526  001C22  1047               	iorwf	(___fladd@b+2)^0,w,c
  9527  001C24  1048               	iorwf	(___fladd@b+3)^0,w,c
  9528  001C26  A4D8               	btfss	status,2,c
  9529  001C28  EF18  F00E         	goto	u3221
  9530  001C2C  EF1B  F00E         	goto	u3220
  9531  001C30                     u3221:
  9532  001C30  0E01               	movlw	1
  9533  001C32  EF1C  F00E         	goto	u3230
  9534  001C36                     u3220:
  9535  001C36  0E00               	movlw	0
  9536  001C38                     u3230:
  9537  001C38  6E54               	movwf	___fladd@grs^0,c
  9538  001C3A  0E00               	movlw	0
  9539  001C3C  6E45               	movwf	___fladd@b^0,c
  9540  001C3E  0E00               	movlw	0
  9541  001C40  6E46               	movwf	(___fladd@b+1)^0,c
  9542  001C42  0E00               	movlw	0
  9543  001C44  6E47               	movwf	(___fladd@b+2)^0,c
  9544  001C46  0E00               	movlw	0
  9545  001C48  6E48               	movwf	(___fladd@b+3)^0,c
  9546  001C4A  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  9547  001C4E  EF4F  F00E         	goto	l1040
  9548  001C52                     l1042:
  9549  001C52  A054               	btfss	___fladd@grs^0,0,c
  9550  001C54  EF2E  F00E         	goto	u3241
  9551  001C58  EF30  F00E         	goto	u3240
  9552  001C5C                     u3241:
  9553  001C5C  EF36  F00E         	goto	l3764
  9554  001C60                     u3240:
  9555  001C60  90D8               	bcf	status,0,c
  9556  001C62  3054               	rrcf	___fladd@grs^0,w,c
  9557  001C64  0901               	iorlw	1
  9558  001C66  6E54               	movwf	___fladd@grs^0,c
  9559  001C68  EF38  F00E         	goto	l3766
  9560  001C6C                     l3764:
  9561  001C6C  90D8               	bcf	status,0,c
  9562  001C6E  3254               	rrcf	___fladd@grs^0,f,c
  9563  001C70                     l3766:
  9564  001C70  A045               	btfss	___fladd@b^0,0,c
  9565  001C72  EF3D  F00E         	goto	u3251
  9566  001C76  EF3F  F00E         	goto	u3250
  9567  001C7A                     u3251:
  9568  001C7A  EF40  F00E         	goto	l3770
  9569  001C7E                     u3250:
  9570  001C7E  8E54               	bsf	___fladd@grs^0,7,c
  9571  001C80                     l3770:
  9572  001C80  3448               	rlcf	(___fladd@b+3)^0,w,c
  9573  001C82  3248               	rrcf	(___fladd@b+3)^0,f,c
  9574  001C84  3247               	rrcf	(___fladd@b+2)^0,f,c
  9575  001C86  3246               	rrcf	(___fladd@b+1)^0,f,c
  9576  001C88  3245               	rrcf	___fladd@b^0,f,c
  9577  001C8A  2A53               	incf	___fladd@bexp^0,f,c
  9578  001C8C                     l1041:
  9579  001C8C  5052               	movf	___fladd@aexp^0,w,c
  9580  001C8E  5C53               	subwf	___fladd@bexp^0,w,c
  9581  001C90  A0D8               	btfss	status,0,c
  9582  001C92  EF4D  F00E         	goto	u3261
  9583  001C96  EF4F  F00E         	goto	u3260
  9584  001C9A                     u3261:
  9585  001C9A  EF29  F00E         	goto	l1042
  9586  001C9E                     u3260:
  9587  001C9E                     l1040:
  9588  001C9E  BC51               	btfsc	___fladd@signs^0,6,c
  9589  001CA0  EF54  F00E         	goto	u3271
  9590  001CA4  EF56  F00E         	goto	u3270
  9591  001CA8                     u3271:
  9592  001CA8  EF96  F00E         	goto	l3798
  9593  001CAC                     u3270:
  9594  001CAC  5053               	movf	___fladd@bexp^0,w,c
  9595  001CAE  A4D8               	btfss	status,2,c
  9596  001CB0  EF5C  F00E         	goto	u3281
  9597  001CB4  EF5E  F00E         	goto	u3280
  9598  001CB8                     u3281:
  9599  001CB8  EF68  F00E         	goto	l3780
  9600  001CBC                     u3280:
  9601  001CBC  0E00               	movlw	0
  9602  001CBE  6E45               	movwf	?___fladd^0,c
  9603  001CC0  0E00               	movlw	0
  9604  001CC2  6E46               	movwf	(?___fladd+1)^0,c
  9605  001CC4  0E00               	movlw	0
  9606  001CC6  6E47               	movwf	(?___fladd+2)^0,c
  9607  001CC8  0E00               	movlw	0
  9608  001CCA  6E48               	movwf	(?___fladd+3)^0,c
  9609  001CCC  EFB7  F00F         	goto	l1049
  9610  001CD0                     l3780:
  9611  001CD0  5049               	movf	___fladd@a^0,w,c
  9612  001CD2  2645               	addwf	___fladd@b^0,f,c
  9613  001CD4  504A               	movf	(___fladd@a+1)^0,w,c
  9614  001CD6  2246               	addwfc	(___fladd@b+1)^0,f,c
  9615  001CD8  504B               	movf	(___fladd@a+2)^0,w,c
  9616  001CDA  2247               	addwfc	(___fladd@b+2)^0,f,c
  9617  001CDC  504C               	movf	(___fladd@a+3)^0,w,c
  9618  001CDE  2248               	addwfc	(___fladd@b+3)^0,f,c
  9619  001CE0  A048               	btfss	(___fladd@b+3)^0,0,c
  9620  001CE2  EF75  F00E         	goto	u3291
  9621  001CE6  EF77  F00E         	goto	u3290
  9622  001CEA                     u3291:
  9623  001CEA  EF23  F00F         	goto	l3834
  9624  001CEE                     u3290:
  9625  001CEE  A054               	btfss	___fladd@grs^0,0,c
  9626  001CF0  EF7C  F00E         	goto	u3301
  9627  001CF4  EF7E  F00E         	goto	u3300
  9628  001CF8                     u3301:
  9629  001CF8  EF84  F00E         	goto	l3788
  9630  001CFC                     u3300:
  9631  001CFC  90D8               	bcf	status,0,c
  9632  001CFE  3054               	rrcf	___fladd@grs^0,w,c
  9633  001D00  0901               	iorlw	1
  9634  001D02  6E54               	movwf	___fladd@grs^0,c
  9635  001D04  EF86  F00E         	goto	l3790
  9636  001D08                     l3788:
  9637  001D08  90D8               	bcf	status,0,c
  9638  001D0A  3254               	rrcf	___fladd@grs^0,f,c
  9639  001D0C                     l3790:
  9640  001D0C  A045               	btfss	___fladd@b^0,0,c
  9641  001D0E  EF8B  F00E         	goto	u3311
  9642  001D12  EF8D  F00E         	goto	u3310
  9643  001D16                     u3311:
  9644  001D16  EF8E  F00E         	goto	l3794
  9645  001D1A                     u3310:
  9646  001D1A  8E54               	bsf	___fladd@grs^0,7,c
  9647  001D1C                     l3794:
  9648  001D1C  3448               	rlcf	(___fladd@b+3)^0,w,c
  9649  001D1E  3248               	rrcf	(___fladd@b+3)^0,f,c
  9650  001D20  3247               	rrcf	(___fladd@b+2)^0,f,c
  9651  001D22  3246               	rrcf	(___fladd@b+1)^0,f,c
  9652  001D24  3245               	rrcf	___fladd@b^0,f,c
  9653  001D26  2A53               	incf	___fladd@bexp^0,f,c
  9654  001D28  EF23  F00F         	goto	l3834
  9655  001D2C                     l3798:
  9656  001D2C  5049               	movf	___fladd@a^0,w,c
  9657  001D2E  5C45               	subwf	___fladd@b^0,w,c
  9658  001D30  504A               	movf	(___fladd@a+1)^0,w,c
  9659  001D32  5846               	subwfb	(___fladd@b+1)^0,w,c
  9660  001D34  504B               	movf	(___fladd@a+2)^0,w,c
  9661  001D36  5847               	subwfb	(___fladd@b+2)^0,w,c
  9662  001D38  5048               	movf	(___fladd@b+3)^0,w,c
  9663  001D3A  0A80               	xorlw	128
  9664  001D3C  6E4D               	movwf	??___fladd^0,c
  9665  001D3E  504C               	movf	(___fladd@a+3)^0,w,c
  9666  001D40  0A80               	xorlw	128
  9667  001D42  584D               	subwfb	??___fladd^0,w,c
  9668  001D44  B0D8               	btfsc	status,0,c
  9669  001D46  EFA7  F00E         	goto	u3321
  9670  001D4A  EFA9  F00E         	goto	u3320
  9671  001D4E                     u3321:
  9672  001D4E  EFD4  F00E         	goto	l3808
  9673  001D52                     u3320:
  9674  001D52  5045               	movf	___fladd@b^0,w,c
  9675  001D54  5C49               	subwf	___fladd@a^0,w,c
  9676  001D56  6E4D               	movwf	??___fladd^0,c
  9677  001D58  5046               	movf	(___fladd@b+1)^0,w,c
  9678  001D5A  584A               	subwfb	(___fladd@a+1)^0,w,c
  9679  001D5C  6E4E               	movwf	(??___fladd+1)^0,c
  9680  001D5E  5047               	movf	(___fladd@b+2)^0,w,c
  9681  001D60  584B               	subwfb	(___fladd@a+2)^0,w,c
  9682  001D62  6E4F               	movwf	(??___fladd+2)^0,c
  9683  001D64  5048               	movf	(___fladd@b+3)^0,w,c
  9684  001D66  584C               	subwfb	(___fladd@a+3)^0,w,c
  9685  001D68  6E50               	movwf	(??___fladd+3)^0,c
  9686  001D6A  0EFF               	movlw	255
  9687  001D6C  244D               	addwf	??___fladd^0,w,c
  9688  001D6E  6E45               	movwf	___fladd@b^0,c
  9689  001D70  0EFF               	movlw	255
  9690  001D72  204E               	addwfc	(??___fladd+1)^0,w,c
  9691  001D74  6E46               	movwf	(___fladd@b+1)^0,c
  9692  001D76  0EFF               	movlw	255
  9693  001D78  204F               	addwfc	(??___fladd+2)^0,w,c
  9694  001D7A  6E47               	movwf	(___fladd@b+2)^0,c
  9695  001D7C  0EFF               	movlw	255
  9696  001D7E  2050               	addwfc	(??___fladd+3)^0,w,c
  9697  001D80  6E48               	movwf	(___fladd@b+3)^0,c
  9698  001D82  0E80               	movlw	128
  9699  001D84  1A51               	xorwf	___fladd@signs^0,f,c
  9700  001D86  6C54               	negf	___fladd@grs^0,c
  9701  001D88  5054               	movf	___fladd@grs^0,w,c
  9702  001D8A  A4D8               	btfss	status,2,c
  9703  001D8C  EFCA  F00E         	goto	u3331
  9704  001D90  EFCC  F00E         	goto	u3330
  9705  001D94                     u3331:
  9706  001D94  EFDC  F00E         	goto	l1057
  9707  001D98                     u3330:
  9708  001D98  0E01               	movlw	1
  9709  001D9A  2645               	addwf	___fladd@b^0,f,c
  9710  001D9C  0E00               	movlw	0
  9711  001D9E  2246               	addwfc	(___fladd@b+1)^0,f,c
  9712  001DA0  2247               	addwfc	(___fladd@b+2)^0,f,c
  9713  001DA2  2248               	addwfc	(___fladd@b+3)^0,f,c
  9714  001DA4  EFDC  F00E         	goto	l1057
  9715  001DA8                     l3808:
  9716  001DA8  5049               	movf	___fladd@a^0,w,c
  9717  001DAA  5E45               	subwf	___fladd@b^0,f,c
  9718  001DAC  504A               	movf	(___fladd@a+1)^0,w,c
  9719  001DAE  5A46               	subwfb	(___fladd@b+1)^0,f,c
  9720  001DB0  504B               	movf	(___fladd@a+2)^0,w,c
  9721  001DB2  5A47               	subwfb	(___fladd@b+2)^0,f,c
  9722  001DB4  504C               	movf	(___fladd@a+3)^0,w,c
  9723  001DB6  5A48               	subwfb	(___fladd@b+3)^0,f,c
  9724  001DB8                     l1057:
  9725  001DB8  5045               	movf	___fladd@b^0,w,c
  9726  001DBA  1046               	iorwf	(___fladd@b+1)^0,w,c
  9727  001DBC  1047               	iorwf	(___fladd@b+2)^0,w,c
  9728  001DBE  1048               	iorwf	(___fladd@b+3)^0,w,c
  9729  001DC0  A4D8               	btfss	status,2,c
  9730  001DC2  EFE5  F00E         	goto	u3341
  9731  001DC6  EFE7  F00E         	goto	u3340
  9732  001DCA                     u3341:
  9733  001DCA  EF1C  F00F         	goto	l3832
  9734  001DCE                     u3340:
  9735  001DCE  5054               	movf	___fladd@grs^0,w,c
  9736  001DD0  A4D8               	btfss	status,2,c
  9737  001DD2  EFED  F00E         	goto	u3351
  9738  001DD6  EFEF  F00E         	goto	u3350
  9739  001DDA                     u3351:
  9740  001DDA  EF1C  F00F         	goto	l3832
  9741  001DDE                     u3350:
  9742  001DDE  0E00               	movlw	0
  9743  001DE0  6E45               	movwf	?___fladd^0,c
  9744  001DE2  0E00               	movlw	0
  9745  001DE4  6E46               	movwf	(?___fladd+1)^0,c
  9746  001DE6  0E00               	movlw	0
  9747  001DE8  6E47               	movwf	(?___fladd+2)^0,c
  9748  001DEA  0E00               	movlw	0
  9749  001DEC  6E48               	movwf	(?___fladd+3)^0,c
  9750  001DEE  EFB7  F00F         	goto	l1049
  9751  001DF2                     l3816:
  9752  001DF2  90D8               	bcf	status,0,c
  9753  001DF4  3645               	rlcf	___fladd@b^0,f,c
  9754  001DF6  3646               	rlcf	(___fladd@b+1)^0,f,c
  9755  001DF8  3647               	rlcf	(___fladd@b+2)^0,f,c
  9756  001DFA  3648               	rlcf	(___fladd@b+3)^0,f,c
  9757  001DFC  AE54               	btfss	___fladd@grs^0,7,c
  9758  001DFE  EF03  F00F         	goto	u3361
  9759  001E02  EF05  F00F         	goto	u3360
  9760  001E06                     u3361:
  9761  001E06  EF06  F00F         	goto	l3822
  9762  001E0A                     u3360:
  9763  001E0A  8045               	bsf	___fladd@b^0,0,c
  9764  001E0C                     l3822:
  9765  001E0C  A054               	btfss	___fladd@grs^0,0,c
  9766  001E0E  EF0B  F00F         	goto	u3371
  9767  001E12  EF0D  F00F         	goto	u3370
  9768  001E16                     u3371:
  9769  001E16  EF11  F00F         	goto	l3826
  9770  001E1A                     u3370:
  9771  001E1A  80D8               	bsf	status,0,c
  9772  001E1C  3654               	rlcf	___fladd@grs^0,f,c
  9773  001E1E  EF13  F00F         	goto	l3828
  9774  001E22                     l3826:
  9775  001E22  90D8               	bcf	status,0,c
  9776  001E24  3654               	rlcf	___fladd@grs^0,f,c
  9777  001E26                     l3828:
  9778  001E26  5053               	movf	___fladd@bexp^0,w,c
  9779  001E28  B4D8               	btfsc	status,2,c
  9780  001E2A  EF19  F00F         	goto	u3381
  9781  001E2E  EF1B  F00F         	goto	u3380
  9782  001E32                     u3381:
  9783  001E32  EF1C  F00F         	goto	l3832
  9784  001E36                     u3380:
  9785  001E36  0653               	decf	___fladd@bexp^0,f,c
  9786  001E38                     l3832:
  9787  001E38  AE47               	btfss	(___fladd@b+2)^0,7,c
  9788  001E3A  EF21  F00F         	goto	u3391
  9789  001E3E  EF23  F00F         	goto	u3390
  9790  001E42                     u3391:
  9791  001E42  EFF9  F00E         	goto	l3816
  9792  001E46                     u3390:
  9793  001E46                     l3834:
  9794  001E46  0E00               	movlw	0
  9795  001E48  6E52               	movwf	___fladd@aexp^0,c
  9796  001E4A  AE54               	btfss	___fladd@grs^0,7,c
  9797  001E4C  EF2A  F00F         	goto	u3401
  9798  001E50  EF2C  F00F         	goto	u3400
  9799  001E54                     u3401:
  9800  001E54  EF44  F00F         	goto	l1066
  9801  001E58                     u3400:
  9802  001E58  C054  F04D         	movff	___fladd@grs,??___fladd
  9803  001E5C  0E7F               	movlw	127
  9804  001E5E  164D               	andwf	??___fladd^0,f,c
  9805  001E60  B4D8               	btfsc	status,2,c
  9806  001E62  EF35  F00F         	goto	u3411
  9807  001E66  EF37  F00F         	goto	u3410
  9808  001E6A                     u3411:
  9809  001E6A  EF3B  F00F         	goto	l1067
  9810  001E6E                     u3410:
  9811  001E6E                     l3840:
  9812  001E6E  0E01               	movlw	1
  9813  001E70  6E52               	movwf	___fladd@aexp^0,c
  9814  001E72  EF44  F00F         	goto	l1066
  9815  001E76                     l1067:
  9816  001E76  A045               	btfss	___fladd@b^0,0,c
  9817  001E78  EF40  F00F         	goto	u3421
  9818  001E7C  EF42  F00F         	goto	u3420
  9819  001E80                     u3421:
  9820  001E80  EF44  F00F         	goto	l1066
  9821  001E84                     u3420:
  9822  001E84  EF37  F00F         	goto	l3840
  9823  001E88                     l1066:
  9824  001E88  5052               	movf	___fladd@aexp^0,w,c
  9825  001E8A  B4D8               	btfsc	status,2,c
  9826  001E8C  EF4A  F00F         	goto	u3431
  9827  001E90  EF4C  F00F         	goto	u3430
  9828  001E94                     u3431:
  9829  001E94  EF77  F00F         	goto	l3852
  9830  001E98                     u3430:
  9831  001E98  0E01               	movlw	1
  9832  001E9A  2645               	addwf	___fladd@b^0,f,c
  9833  001E9C  0E00               	movlw	0
  9834  001E9E  2246               	addwfc	(___fladd@b+1)^0,f,c
  9835  001EA0  2247               	addwfc	(___fladd@b+2)^0,f,c
  9836  001EA2  2248               	addwfc	(___fladd@b+3)^0,f,c
  9837  001EA4  A048               	btfss	(___fladd@b+3)^0,0,c
  9838  001EA6  EF57  F00F         	goto	u3441
  9839  001EAA  EF59  F00F         	goto	u3440
  9840  001EAE                     u3441:
  9841  001EAE  EF77  F00F         	goto	l3852
  9842  001EB2                     u3440:
  9843  001EB2  C045  F04D         	movff	___fladd@b,??___fladd
  9844  001EB6  C046  F04E         	movff	___fladd@b+1,??___fladd+1
  9845  001EBA  C047  F04F         	movff	___fladd@b+2,??___fladd+2
  9846  001EBE  C048  F050         	movff	___fladd@b+3,??___fladd+3
  9847  001EC2  3450               	rlcf	(??___fladd+3)^0,w,c
  9848  001EC4  3250               	rrcf	(??___fladd+3)^0,f,c
  9849  001EC6  324F               	rrcf	(??___fladd+2)^0,f,c
  9850  001EC8  324E               	rrcf	(??___fladd+1)^0,f,c
  9851  001ECA  324D               	rrcf	??___fladd^0,f,c
  9852  001ECC  C04D  F045         	movff	??___fladd,___fladd@b
  9853  001ED0  C04E  F046         	movff	??___fladd+1,___fladd@b+1
  9854  001ED4  C04F  F047         	movff	??___fladd+2,___fladd@b+2
  9855  001ED8  C050  F048         	movff	??___fladd+3,___fladd@b+3
  9856  001EDC  2853               	incf	___fladd@bexp^0,w,c
  9857  001EDE  B4D8               	btfsc	status,2,c
  9858  001EE0  EF74  F00F         	goto	u3451
  9859  001EE4  EF76  F00F         	goto	u3450
  9860  001EE8                     u3451:
  9861  001EE8  EF77  F00F         	goto	l3852
  9862  001EEC                     u3450:
  9863  001EEC  2A53               	incf	___fladd@bexp^0,f,c
  9864  001EEE                     l3852:
  9865  001EEE  2853               	incf	___fladd@bexp^0,w,c
  9866  001EF0  B4D8               	btfsc	status,2,c
  9867  001EF2  EF7D  F00F         	goto	u3461
  9868  001EF6  EF7F  F00F         	goto	u3460
  9869  001EFA                     u3461:
  9870  001EFA  EF87  F00F         	goto	l3856
  9871  001EFE                     u3460:
  9872  001EFE  5053               	movf	___fladd@bexp^0,w,c
  9873  001F00  A4D8               	btfss	status,2,c
  9874  001F02  EF85  F00F         	goto	u3471
  9875  001F06  EF87  F00F         	goto	u3470
  9876  001F0A                     u3471:
  9877  001F0A  EF99  F00F         	goto	l3860
  9878  001F0E                     u3470:
  9879  001F0E                     l3856:
  9880  001F0E  0E00               	movlw	0
  9881  001F10  6E45               	movwf	___fladd@b^0,c
  9882  001F12  0E00               	movlw	0
  9883  001F14  6E46               	movwf	(___fladd@b+1)^0,c
  9884  001F16  0E00               	movlw	0
  9885  001F18  6E47               	movwf	(___fladd@b+2)^0,c
  9886  001F1A  0E00               	movlw	0
  9887  001F1C  6E48               	movwf	(___fladd@b+3)^0,c
  9888  001F1E  5053               	movf	___fladd@bexp^0,w,c
  9889  001F20  A4D8               	btfss	status,2,c
  9890  001F22  EF95  F00F         	goto	u3481
  9891  001F26  EF97  F00F         	goto	u3480
  9892  001F2A                     u3481:
  9893  001F2A  EF99  F00F         	goto	l3860
  9894  001F2E                     u3480:
  9895  001F2E  0E00               	movlw	0
  9896  001F30  6E51               	movwf	___fladd@signs^0,c
  9897  001F32                     l3860:
  9898  001F32  A053               	btfss	___fladd@bexp^0,0,c
  9899  001F34  EF9E  F00F         	goto	u3491
  9900  001F38  EFA0  F00F         	goto	u3490
  9901  001F3C                     u3491:
  9902  001F3C  EFA3  F00F         	goto	l3864
  9903  001F40                     u3490:
  9904  001F40  8E47               	bsf	(___fladd@b+2)^0,7,c
  9905  001F42  EFA4  F00F         	goto	l3866
  9906  001F46                     l3864:
  9907  001F46  9E47               	bcf	(___fladd@b+2)^0,7,c
  9908  001F48                     l3866:
  9909  001F48  90D8               	bcf	status,0,c
  9910  001F4A  3053               	rrcf	___fladd@bexp^0,w,c
  9911  001F4C  6E48               	movwf	(___fladd@b+3)^0,c
  9912  001F4E  AE51               	btfss	___fladd@signs^0,7,c
  9913  001F50  EFAC  F00F         	goto	u3501
  9914  001F54  EFAE  F00F         	goto	u3500
  9915  001F58                     u3501:
  9916  001F58  EFAF  F00F         	goto	l3872
  9917  001F5C                     u3500:
  9918  001F5C  8E48               	bsf	(___fladd@b+3)^0,7,c
  9919  001F5E                     l3872:
  9920  001F5E  C045  F045         	movff	___fladd@b,?___fladd
  9921  001F62  C046  F046         	movff	___fladd@b+1,?___fladd+1
  9922  001F66  C047  F047         	movff	___fladd@b+2,?___fladd+2
  9923  001F6A  C048  F048         	movff	___fladd@b+3,?___fladd+3
  9924  001F6E                     l1049:
  9925  001F6E  0012               	return		;funcret
  9926  001F70                     __end_of___fladd:
  9927                           	callstack 0
  9928                           
  9929 ;; *************** function ___flneg *****************
  9930 ;; Defined at:
  9931 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;  f1              4    0[COMRAM] unsigned char 
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;		None
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  4    0[COMRAM] unsigned char 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2, status,0
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9945 ;;      Params:         4       0       0       0       0       0       0       0       0
  9946 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9948 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9949 ;;Total ram usage:        4 bytes
  9950 ;; Hardware stack levels used: 1
  9951 ;; This function calls:
  9952 ;;		Nothing
  9953 ;; This function is called by:
  9954 ;;		_efgtoa
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text47
  9959  0047C0                     __ptext47:
  9960                           	callstack 0
  9961  0047C0                     ___flneg:
  9962                           	callstack 25
  9963  0047C0  5001               	movf	___flneg@f1^0,w,c
  9964  0047C2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9965  0047C4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9966  0047C6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9967  0047C8  B4D8               	btfsc	status,2,c
  9968  0047CA  EFE9  F023         	goto	u4191
  9969  0047CE  EFEB  F023         	goto	u4190
  9970  0047D2                     u4191:
  9971  0047D2  EFF3  F023         	goto	l4304
  9972  0047D6                     u4190:
  9973  0047D6  0E00               	movlw	0
  9974  0047D8  1A01               	xorwf	___flneg@f1^0,f,c
  9975  0047DA  0E00               	movlw	0
  9976  0047DC  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9977  0047DE  0E00               	movlw	0
  9978  0047E0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9979  0047E2  0E80               	movlw	128
  9980  0047E4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9981  0047E6                     l4304:
  9982  0047E6  C001  F001         	movff	___flneg@f1,?___flneg
  9983  0047EA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9984  0047EE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9985  0047F2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9986  0047F6  0012               	return		;funcret
  9987  0047F8                     __end_of___flneg:
  9988                           	callstack 0
  9989                           
  9990 ;; *************** function ___flmul *****************
  9991 ;; Defined at:
  9992 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;  b               4   18[COMRAM] unsigned char 
  9995 ;;  a               4   22[COMRAM] unsigned char 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  prod            4   37[COMRAM] struct .
  9998 ;;  grs             4   31[COMRAM] unsigned long 
  9999 ;;  temp            2   41[COMRAM] struct .
 10000 ;;  bexp            1   36[COMRAM] unsigned char 
 10001 ;;  aexp            1   35[COMRAM] unsigned char 
 10002 ;;  sign            1   30[COMRAM] unsigned char 
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  4   18[COMRAM] unsigned char 
 10005 ;; Registers used:
 10006 ;;		wreg, status,2, status,0, prodl, prodh
 10007 ;; Tracked objects:
 10008 ;;		On entry : 0/0
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10012 ;;      Params:         8       0       0       0       0       0       0       0       0
 10013 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10014 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10015 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10016 ;;Total ram usage:       25 bytes
 10017 ;; Hardware stack levels used: 1
 10018 ;; This function calls:
 10019 ;;		Nothing
 10020 ;; This function is called by:
 10021 ;;		_ReadADC
 10022 ;;		_efgtoa
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026                           	psect	text48
 10027  001F70                     __ptext48:
 10028                           	callstack 0
 10029  001F70                     ___flmul:
 10030                           	callstack 25
 10031  001F70  5016               	movf	(___flmul@b+3)^0,w,c
 10032  001F72  0B80               	andlw	128
 10033  001F74  6E1F               	movwf	___flmul@sign^0,c
 10034  001F76  5016               	movf	(___flmul@b+3)^0,w,c
 10035  001F78  2416               	addwf	(___flmul@b+3)^0,w,c
 10036  001F7A  6E25               	movwf	___flmul@bexp^0,c
 10037  001F7C  AE15               	btfss	(___flmul@b+2)^0,7,c
 10038  001F7E  EFC3  F00F         	goto	u3801
 10039  001F82  EFC5  F00F         	goto	u3800
 10040  001F86                     u3801:
 10041  001F86  EFC6  F00F         	goto	l4052
 10042  001F8A                     u3800:
 10043  001F8A  8025               	bsf	___flmul@bexp^0,0,c
 10044  001F8C                     l4052:
 10045  001F8C  5025               	movf	___flmul@bexp^0,w,c
 10046  001F8E  B4D8               	btfsc	status,2,c
 10047  001F90  EFCC  F00F         	goto	u3811
 10048  001F94  EFCE  F00F         	goto	u3810
 10049  001F98                     u3811:
 10050  001F98  EFE1  F00F         	goto	l4060
 10051  001F9C                     u3810:
 10052  001F9C  2825               	incf	___flmul@bexp^0,w,c
 10053  001F9E  A4D8               	btfss	status,2,c
 10054  001FA0  EFD4  F00F         	goto	u3821
 10055  001FA4  EFD6  F00F         	goto	u3820
 10056  001FA8                     u3821:
 10057  001FA8  EFDE  F00F         	goto	l4058
 10058  001FAC                     u3820:
 10059  001FAC  0E00               	movlw	0
 10060  001FAE  6E13               	movwf	___flmul@b^0,c
 10061  001FB0  0E00               	movlw	0
 10062  001FB2  6E14               	movwf	(___flmul@b+1)^0,c
 10063  001FB4  0E00               	movlw	0
 10064  001FB6  6E15               	movwf	(___flmul@b+2)^0,c
 10065  001FB8  0E00               	movlw	0
 10066  001FBA  6E16               	movwf	(___flmul@b+3)^0,c
 10067  001FBC                     l4058:
 10068  001FBC  8E15               	bsf	(___flmul@b+2)^0,7,c
 10069  001FBE  EFE9  F00F         	goto	l4062
 10070  001FC2                     l4060:
 10071  001FC2  0E00               	movlw	0
 10072  001FC4  6E13               	movwf	___flmul@b^0,c
 10073  001FC6  0E00               	movlw	0
 10074  001FC8  6E14               	movwf	(___flmul@b+1)^0,c
 10075  001FCA  0E00               	movlw	0
 10076  001FCC  6E15               	movwf	(___flmul@b+2)^0,c
 10077  001FCE  0E00               	movlw	0
 10078  001FD0  6E16               	movwf	(___flmul@b+3)^0,c
 10079  001FD2                     l4062:
 10080  001FD2  501A               	movf	(___flmul@a+3)^0,w,c
 10081  001FD4  0B80               	andlw	128
 10082  001FD6  1A1F               	xorwf	___flmul@sign^0,f,c
 10083  001FD8  501A               	movf	(___flmul@a+3)^0,w,c
 10084  001FDA  241A               	addwf	(___flmul@a+3)^0,w,c
 10085  001FDC  6E24               	movwf	___flmul@aexp^0,c
 10086  001FDE  AE19               	btfss	(___flmul@a+2)^0,7,c
 10087  001FE0  EFF4  F00F         	goto	u3831
 10088  001FE4  EFF6  F00F         	goto	u3830
 10089  001FE8                     u3831:
 10090  001FE8  EFF7  F00F         	goto	l4070
 10091  001FEC                     u3830:
 10092  001FEC  8024               	bsf	___flmul@aexp^0,0,c
 10093  001FEE                     l4070:
 10094  001FEE  5024               	movf	___flmul@aexp^0,w,c
 10095  001FF0  B4D8               	btfsc	status,2,c
 10096  001FF2  EFFD  F00F         	goto	u3841
 10097  001FF6  EFFF  F00F         	goto	u3840
 10098  001FFA                     u3841:
 10099  001FFA  EF12  F010         	goto	l4078
 10100  001FFE                     u3840:
 10101  001FFE  2824               	incf	___flmul@aexp^0,w,c
 10102  002000  A4D8               	btfss	status,2,c
 10103  002002  EF05  F010         	goto	u3851
 10104  002006  EF07  F010         	goto	u3850
 10105  00200A                     u3851:
 10106  00200A  EF0F  F010         	goto	l4076
 10107  00200E                     u3850:
 10108  00200E  0E00               	movlw	0
 10109  002010  6E17               	movwf	___flmul@a^0,c
 10110  002012  0E00               	movlw	0
 10111  002014  6E18               	movwf	(___flmul@a+1)^0,c
 10112  002016  0E00               	movlw	0
 10113  002018  6E19               	movwf	(___flmul@a+2)^0,c
 10114  00201A  0E00               	movlw	0
 10115  00201C  6E1A               	movwf	(___flmul@a+3)^0,c
 10116  00201E                     l4076:
 10117  00201E  8E19               	bsf	(___flmul@a+2)^0,7,c
 10118  002020  EF1A  F010         	goto	l1126
 10119  002024                     l4078:
 10120  002024  0E00               	movlw	0
 10121  002026  6E17               	movwf	___flmul@a^0,c
 10122  002028  0E00               	movlw	0
 10123  00202A  6E18               	movwf	(___flmul@a+1)^0,c
 10124  00202C  0E00               	movlw	0
 10125  00202E  6E19               	movwf	(___flmul@a+2)^0,c
 10126  002030  0E00               	movlw	0
 10127  002032  6E1A               	movwf	(___flmul@a+3)^0,c
 10128  002034                     l1126:
 10129  002034  5024               	movf	___flmul@aexp^0,w,c
 10130  002036  B4D8               	btfsc	status,2,c
 10131  002038  EF20  F010         	goto	u3861
 10132  00203C  EF22  F010         	goto	u3860
 10133  002040                     u3861:
 10134  002040  EF2A  F010         	goto	l4082
 10135  002044                     u3860:
 10136  002044  5025               	movf	___flmul@bexp^0,w,c
 10137  002046  A4D8               	btfss	status,2,c
 10138  002048  EF28  F010         	goto	u3871
 10139  00204C  EF2A  F010         	goto	u3870
 10140  002050                     u3871:
 10141  002050  EF34  F010         	goto	l4086
 10142  002054                     u3870:
 10143  002054                     l4082:
 10144  002054  0E00               	movlw	0
 10145  002056  6E13               	movwf	?___flmul^0,c
 10146  002058  0E00               	movlw	0
 10147  00205A  6E14               	movwf	(?___flmul+1)^0,c
 10148  00205C  0E00               	movlw	0
 10149  00205E  6E15               	movwf	(?___flmul+2)^0,c
 10150  002060  0E00               	movlw	0
 10151  002062  6E16               	movwf	(?___flmul+3)^0,c
 10152  002064  EFCC  F011         	goto	l1130
 10153  002068                     l4086:
 10154  002068  5019               	movf	(___flmul@a+2)^0,w,c
 10155  00206A  0213               	mulwf	___flmul@b^0,c
 10156  00206C  CFF3 F02A          	movff	prodl,___flmul@temp
 10157  002070  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10158  002074  502A               	movf	___flmul@temp^0,w,c
 10159  002076  6E20               	movwf	___flmul@grs^0,c
 10160  002078  6A21               	clrf	(___flmul@grs+1)^0,c
 10161  00207A  6A22               	clrf	(___flmul@grs+2)^0,c
 10162  00207C  6A23               	clrf	(___flmul@grs+3)^0,c
 10163  00207E  502B               	movf	(___flmul@temp+1)^0,w,c
 10164  002080  6E26               	movwf	___flmul@prod^0,c
 10165  002082  6A27               	clrf	(___flmul@prod+1)^0,c
 10166  002084  6A28               	clrf	(___flmul@prod+2)^0,c
 10167  002086  6A29               	clrf	(___flmul@prod+3)^0,c
 10168  002088  5018               	movf	(___flmul@a+1)^0,w,c
 10169  00208A  0214               	mulwf	(___flmul@b+1)^0,c
 10170  00208C  CFF3 F02A          	movff	prodl,___flmul@temp
 10171  002090  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10172  002094  502A               	movf	___flmul@temp^0,w,c
 10173  002096  2620               	addwf	___flmul@grs^0,f,c
 10174  002098  0E00               	movlw	0
 10175  00209A  2221               	addwfc	(___flmul@grs+1)^0,f,c
 10176  00209C  2222               	addwfc	(___flmul@grs+2)^0,f,c
 10177  00209E  2223               	addwfc	(___flmul@grs+3)^0,f,c
 10178  0020A0  502B               	movf	(___flmul@temp+1)^0,w,c
 10179  0020A2  2626               	addwf	___flmul@prod^0,f,c
 10180  0020A4  0E00               	movlw	0
 10181  0020A6  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10182  0020A8  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10183  0020AA  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10184  0020AC  5017               	movf	___flmul@a^0,w,c
 10185  0020AE  0215               	mulwf	(___flmul@b+2)^0,c
 10186  0020B0  CFF3 F02A          	movff	prodl,___flmul@temp
 10187  0020B4  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10188  0020B8  502A               	movf	___flmul@temp^0,w,c
 10189  0020BA  2620               	addwf	___flmul@grs^0,f,c
 10190  0020BC  0E00               	movlw	0
 10191  0020BE  2221               	addwfc	(___flmul@grs+1)^0,f,c
 10192  0020C0  2222               	addwfc	(___flmul@grs+2)^0,f,c
 10193  0020C2  2223               	addwfc	(___flmul@grs+3)^0,f,c
 10194  0020C4  502B               	movf	(___flmul@temp+1)^0,w,c
 10195  0020C6  2626               	addwf	___flmul@prod^0,f,c
 10196  0020C8  0E00               	movlw	0
 10197  0020CA  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10198  0020CC  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10199  0020CE  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10200  0020D0  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 10201  0020D4  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 10202  0020D8  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 10203  0020DC  6A20               	clrf	___flmul@grs^0,c
 10204  0020DE  5017               	movf	___flmul@a^0,w,c
 10205  0020E0  0214               	mulwf	(___flmul@b+1)^0,c
 10206  0020E2  CFF3 F02A          	movff	prodl,___flmul@temp
 10207  0020E6  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10208  0020EA  502A               	movf	___flmul@temp^0,w,c
 10209  0020EC  2620               	addwf	___flmul@grs^0,f,c
 10210  0020EE  502B               	movf	(___flmul@temp+1)^0,w,c
 10211  0020F0  2221               	addwfc	(___flmul@grs+1)^0,f,c
 10212  0020F2  0E00               	movlw	0
 10213  0020F4  2222               	addwfc	(___flmul@grs+2)^0,f,c
 10214  0020F6  0E00               	movlw	0
 10215  0020F8  2223               	addwfc	(___flmul@grs+3)^0,f,c
 10216  0020FA  5018               	movf	(___flmul@a+1)^0,w,c
 10217  0020FC  0213               	mulwf	___flmul@b^0,c
 10218  0020FE  CFF3 F02A          	movff	prodl,___flmul@temp
 10219  002102  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10220  002106  502A               	movf	___flmul@temp^0,w,c
 10221  002108  2620               	addwf	___flmul@grs^0,f,c
 10222  00210A  502B               	movf	(___flmul@temp+1)^0,w,c
 10223  00210C  2221               	addwfc	(___flmul@grs+1)^0,f,c
 10224  00210E  0E00               	movlw	0
 10225  002110  2222               	addwfc	(___flmul@grs+2)^0,f,c
 10226  002112  0E00               	movlw	0
 10227  002114  2223               	addwfc	(___flmul@grs+3)^0,f,c
 10228  002116  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 10229  00211A  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 10230  00211E  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 10231  002122  6A20               	clrf	___flmul@grs^0,c
 10232  002124  5017               	movf	___flmul@a^0,w,c
 10233  002126  0213               	mulwf	___flmul@b^0,c
 10234  002128  CFF3 F02A          	movff	prodl,___flmul@temp
 10235  00212C  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10236  002130  502A               	movf	___flmul@temp^0,w,c
 10237  002132  2620               	addwf	___flmul@grs^0,f,c
 10238  002134  502B               	movf	(___flmul@temp+1)^0,w,c
 10239  002136  2221               	addwfc	(___flmul@grs+1)^0,f,c
 10240  002138  0E00               	movlw	0
 10241  00213A  2222               	addwfc	(___flmul@grs+2)^0,f,c
 10242  00213C  0E00               	movlw	0
 10243  00213E  2223               	addwfc	(___flmul@grs+3)^0,f,c
 10244  002140  5019               	movf	(___flmul@a+2)^0,w,c
 10245  002142  0214               	mulwf	(___flmul@b+1)^0,c
 10246  002144  CFF3 F02A          	movff	prodl,___flmul@temp
 10247  002148  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10248  00214C  502A               	movf	___flmul@temp^0,w,c
 10249  00214E  2626               	addwf	___flmul@prod^0,f,c
 10250  002150  502B               	movf	(___flmul@temp+1)^0,w,c
 10251  002152  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10252  002154  0E00               	movlw	0
 10253  002156  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10254  002158  0E00               	movlw	0
 10255  00215A  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10256  00215C  5018               	movf	(___flmul@a+1)^0,w,c
 10257  00215E  0215               	mulwf	(___flmul@b+2)^0,c
 10258  002160  CFF3 F02A          	movff	prodl,___flmul@temp
 10259  002164  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10260  002168  502A               	movf	___flmul@temp^0,w,c
 10261  00216A  2626               	addwf	___flmul@prod^0,f,c
 10262  00216C  502B               	movf	(___flmul@temp+1)^0,w,c
 10263  00216E  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10264  002170  0E00               	movlw	0
 10265  002172  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10266  002174  0E00               	movlw	0
 10267  002176  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10268  002178  5019               	movf	(___flmul@a+2)^0,w,c
 10269  00217A  0215               	mulwf	(___flmul@b+2)^0,c
 10270  00217C  CFF3 F02A          	movff	prodl,___flmul@temp
 10271  002180  CFF4 F02B          	movff	prodh,___flmul@temp+1
 10272  002184  502A               	movf	___flmul@temp^0,w,c
 10273  002186  6E1B               	movwf	??___flmul^0,c
 10274  002188  502B               	movf	(___flmul@temp+1)^0,w,c
 10275  00218A  6E1C               	movwf	(??___flmul+1)^0,c
 10276  00218C  6A1D               	clrf	(??___flmul+2)^0,c
 10277  00218E  6A1E               	clrf	(??___flmul+3)^0,c
 10278  002190  C01D  F01E         	movff	??___flmul+2,??___flmul+3
 10279  002194  C01C  F01D         	movff	??___flmul+1,??___flmul+2
 10280  002198  C01B  F01C         	movff	??___flmul,??___flmul+1
 10281  00219C  6A1B               	clrf	??___flmul^0,c
 10282  00219E  501B               	movf	??___flmul^0,w,c
 10283  0021A0  2626               	addwf	___flmul@prod^0,f,c
 10284  0021A2  501C               	movf	(??___flmul+1)^0,w,c
 10285  0021A4  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10286  0021A6  501D               	movf	(??___flmul+2)^0,w,c
 10287  0021A8  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10288  0021AA  501E               	movf	(??___flmul+3)^0,w,c
 10289  0021AC  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10290  0021AE  C020  F01B         	movff	___flmul@grs,??___flmul
 10291  0021B2  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
 10292  0021B6  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
 10293  0021BA  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
 10294  0021BE  0E19               	movlw	25
 10295  0021C0  EFE7  F010         	goto	u3880
 10296  0021C4                     u3885:
 10297  0021C4  90D8               	bcf	status,0,c
 10298  0021C6  321E               	rrcf	(??___flmul+3)^0,f,c
 10299  0021C8  321D               	rrcf	(??___flmul+2)^0,f,c
 10300  0021CA  321C               	rrcf	(??___flmul+1)^0,f,c
 10301  0021CC  321B               	rrcf	??___flmul^0,f,c
 10302  0021CE                     u3880:
 10303  0021CE  2EE8               	decfsz	wreg,f,c
 10304  0021D0  EFE2  F010         	goto	u3885
 10305  0021D4  501B               	movf	??___flmul^0,w,c
 10306  0021D6  2626               	addwf	___flmul@prod^0,f,c
 10307  0021D8  501C               	movf	(??___flmul+1)^0,w,c
 10308  0021DA  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10309  0021DC  501D               	movf	(??___flmul+2)^0,w,c
 10310  0021DE  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10311  0021E0  501E               	movf	(??___flmul+3)^0,w,c
 10312  0021E2  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10313  0021E4  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 10314  0021E8  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 10315  0021EC  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 10316  0021F0  6A20               	clrf	___flmul@grs^0,c
 10317  0021F2  5024               	movf	___flmul@aexp^0,w,c
 10318  0021F4  C025  F01B         	movff	___flmul@bexp,??___flmul
 10319  0021F8  6A1C               	clrf	(??___flmul+1)^0,c
 10320  0021FA  261B               	addwf	??___flmul^0,f,c
 10321  0021FC  0E00               	movlw	0
 10322  0021FE  221C               	addwfc	(??___flmul+1)^0,f,c
 10323  002200  0E82               	movlw	130
 10324  002202  241B               	addwf	??___flmul^0,w,c
 10325  002204  6E2A               	movwf	___flmul@temp^0,c
 10326  002206  0EFF               	movlw	255
 10327  002208  201C               	addwfc	(??___flmul+1)^0,w,c
 10328  00220A  6E2B               	movwf	(___flmul@temp+1)^0,c
 10329  00220C  EF1D  F011         	goto	l4134
 10330  002210                     l4128:
 10331  002210  90D8               	bcf	status,0,c
 10332  002212  3626               	rlcf	___flmul@prod^0,f,c
 10333  002214  3627               	rlcf	(___flmul@prod+1)^0,f,c
 10334  002216  3628               	rlcf	(___flmul@prod+2)^0,f,c
 10335  002218  3629               	rlcf	(___flmul@prod+3)^0,f,c
 10336  00221A  AE23               	btfss	(___flmul@grs+3)^0,7,c
 10337  00221C  EF12  F011         	goto	u3891
 10338  002220  EF14  F011         	goto	u3890
 10339  002224                     u3891:
 10340  002224  EF15  F011         	goto	l1133
 10341  002228                     u3890:
 10342  002228  8026               	bsf	___flmul@prod^0,0,c
 10343  00222A                     l1133:
 10344  00222A  90D8               	bcf	status,0,c
 10345  00222C  3620               	rlcf	___flmul@grs^0,f,c
 10346  00222E  3621               	rlcf	(___flmul@grs+1)^0,f,c
 10347  002230  3622               	rlcf	(___flmul@grs+2)^0,f,c
 10348  002232  3623               	rlcf	(___flmul@grs+3)^0,f,c
 10349  002234  062A               	decf	___flmul@temp^0,f,c
 10350  002236  A0D8               	btfss	status,0,c
 10351  002238  062B               	decf	(___flmul@temp+1)^0,f,c
 10352  00223A                     l4134:
 10353  00223A  AE28               	btfss	(___flmul@prod+2)^0,7,c
 10354  00223C  EF22  F011         	goto	u3901
 10355  002240  EF24  F011         	goto	u3900
 10356  002244                     u3901:
 10357  002244  EF08  F011         	goto	l4128
 10358  002248                     u3900:
 10359  002248  0E00               	movlw	0
 10360  00224A  6E24               	movwf	___flmul@aexp^0,c
 10361  00224C  AE23               	btfss	(___flmul@grs+3)^0,7,c
 10362  00224E  EF2B  F011         	goto	u3911
 10363  002252  EF2D  F011         	goto	u3910
 10364  002256                     u3911:
 10365  002256  EF51  F011         	goto	l1135
 10366  00225A                     u3910:
 10367  00225A  0EFF               	movlw	255
 10368  00225C  1420               	andwf	___flmul@grs^0,w,c
 10369  00225E  6E1B               	movwf	??___flmul^0,c
 10370  002260  0EFF               	movlw	255
 10371  002262  1421               	andwf	(___flmul@grs+1)^0,w,c
 10372  002264  6E1C               	movwf	(??___flmul+1)^0,c
 10373  002266  0EFF               	movlw	255
 10374  002268  1422               	andwf	(___flmul@grs+2)^0,w,c
 10375  00226A  6E1D               	movwf	(??___flmul+2)^0,c
 10376  00226C  0E7F               	movlw	127
 10377  00226E  1423               	andwf	(___flmul@grs+3)^0,w,c
 10378  002270  6E1E               	movwf	(??___flmul+3)^0,c
 10379  002272  501B               	movf	??___flmul^0,w,c
 10380  002274  101C               	iorwf	(??___flmul+1)^0,w,c
 10381  002276  101D               	iorwf	(??___flmul+2)^0,w,c
 10382  002278  101E               	iorwf	(??___flmul+3)^0,w,c
 10383  00227A  B4D8               	btfsc	status,2,c
 10384  00227C  EF42  F011         	goto	u3921
 10385  002280  EF44  F011         	goto	u3920
 10386  002284                     u3921:
 10387  002284  EF48  F011         	goto	l1136
 10388  002288                     u3920:
 10389  002288                     l4142:
 10390  002288  0E01               	movlw	1
 10391  00228A  6E24               	movwf	___flmul@aexp^0,c
 10392  00228C  EF51  F011         	goto	l1135
 10393  002290                     l1136:
 10394  002290  A026               	btfss	___flmul@prod^0,0,c
 10395  002292  EF4D  F011         	goto	u3931
 10396  002296  EF4F  F011         	goto	u3930
 10397  00229A                     u3931:
 10398  00229A  EF51  F011         	goto	l1135
 10399  00229E                     u3930:
 10400  00229E  EF44  F011         	goto	l4142
 10401  0022A2                     l1135:
 10402  0022A2  5024               	movf	___flmul@aexp^0,w,c
 10403  0022A4  B4D8               	btfsc	status,2,c
 10404  0022A6  EF57  F011         	goto	u3941
 10405  0022AA  EF59  F011         	goto	u3940
 10406  0022AE                     u3941:
 10407  0022AE  EF7D  F011         	goto	l4154
 10408  0022B2                     u3940:
 10409  0022B2  0E01               	movlw	1
 10410  0022B4  2626               	addwf	___flmul@prod^0,f,c
 10411  0022B6  0E00               	movlw	0
 10412  0022B8  2227               	addwfc	(___flmul@prod+1)^0,f,c
 10413  0022BA  2228               	addwfc	(___flmul@prod+2)^0,f,c
 10414  0022BC  2229               	addwfc	(___flmul@prod+3)^0,f,c
 10415  0022BE  A029               	btfss	(___flmul@prod+3)^0,0,c
 10416  0022C0  EF64  F011         	goto	u3951
 10417  0022C4  EF66  F011         	goto	u3950
 10418  0022C8                     u3951:
 10419  0022C8  EF7D  F011         	goto	l4154
 10420  0022CC                     u3950:
 10421  0022CC  C026  F01B         	movff	___flmul@prod,??___flmul
 10422  0022D0  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
 10423  0022D4  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
 10424  0022D8  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
 10425  0022DC  341E               	rlcf	(??___flmul+3)^0,w,c
 10426  0022DE  321E               	rrcf	(??___flmul+3)^0,f,c
 10427  0022E0  321D               	rrcf	(??___flmul+2)^0,f,c
 10428  0022E2  321C               	rrcf	(??___flmul+1)^0,f,c
 10429  0022E4  321B               	rrcf	??___flmul^0,f,c
 10430  0022E6  C01B  F026         	movff	??___flmul,___flmul@prod
 10431  0022EA  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
 10432  0022EE  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
 10433  0022F2  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
 10434  0022F6  4A2A               	infsnz	___flmul@temp^0,f,c
 10435  0022F8  2A2B               	incf	(___flmul@temp+1)^0,f,c
 10436  0022FA                     l4154:
 10437  0022FA  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
 10438  0022FC  EF88  F011         	goto	u3961
 10439  002300  502B               	movf	(___flmul@temp+1)^0,w,c
 10440  002302  E108               	bnz	u3960
 10441  002304  282A               	incf	___flmul@temp^0,w,c
 10442  002306  A0D8               	btfss	status,0,c
 10443  002308  EF88  F011         	goto	u3961
 10444  00230C  EF8A  F011         	goto	u3960
 10445  002310                     u3961:
 10446  002310  EF94  F011         	goto	l4158
 10447  002314                     u3960:
 10448  002314  0E00               	movlw	0
 10449  002316  6E26               	movwf	___flmul@prod^0,c
 10450  002318  0E00               	movlw	0
 10451  00231A  6E27               	movwf	(___flmul@prod+1)^0,c
 10452  00231C  0E80               	movlw	128
 10453  00231E  6E28               	movwf	(___flmul@prod+2)^0,c
 10454  002320  0E7F               	movlw	127
 10455  002322  6E29               	movwf	(___flmul@prod+3)^0,c
 10456  002324  EFC2  F011         	goto	l4170
 10457  002328                     l4158:
 10458  002328  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
 10459  00232A  EFA1  F011         	goto	u3970
 10460  00232E  502B               	movf	(___flmul@temp+1)^0,w,c
 10461  002330  E106               	bnz	u3971
 10462  002332  042A               	decf	___flmul@temp^0,w,c
 10463  002334  B0D8               	btfsc	status,0,c
 10464  002336  EF9F  F011         	goto	u3971
 10465  00233A  EFA1  F011         	goto	u3970
 10466  00233E                     u3971:
 10467  00233E  EFAD  F011         	goto	l1143
 10468  002342                     u3970:
 10469  002342  0E00               	movlw	0
 10470  002344  6E26               	movwf	___flmul@prod^0,c
 10471  002346  0E00               	movlw	0
 10472  002348  6E27               	movwf	(___flmul@prod+1)^0,c
 10473  00234A  0E00               	movlw	0
 10474  00234C  6E28               	movwf	(___flmul@prod+2)^0,c
 10475  00234E  0E00               	movlw	0
 10476  002350  6E29               	movwf	(___flmul@prod+3)^0,c
 10477  002352  0E00               	movlw	0
 10478  002354  6E1F               	movwf	___flmul@sign^0,c
 10479  002356  EFC2  F011         	goto	l4170
 10480  00235A                     l1143:
 10481  00235A  C02A  F025         	movff	___flmul@temp,___flmul@bexp
 10482  00235E  0EFF               	movlw	255
 10483  002360  1626               	andwf	___flmul@prod^0,f,c
 10484  002362  0EFF               	movlw	255
 10485  002364  1627               	andwf	(___flmul@prod+1)^0,f,c
 10486  002366  0E7F               	movlw	127
 10487  002368  1628               	andwf	(___flmul@prod+2)^0,f,c
 10488  00236A  0E00               	movlw	0
 10489  00236C  1629               	andwf	(___flmul@prod+3)^0,f,c
 10490  00236E  A025               	btfss	___flmul@bexp^0,0,c
 10491  002370  EFBC  F011         	goto	u3981
 10492  002374  EFBE  F011         	goto	u3980
 10493  002378                     u3981:
 10494  002378  EFBF  F011         	goto	l4168
 10495  00237C                     u3980:
 10496  00237C  8E28               	bsf	(___flmul@prod+2)^0,7,c
 10497  00237E                     l4168:
 10498  00237E  90D8               	bcf	status,0,c
 10499  002380  3025               	rrcf	___flmul@bexp^0,w,c
 10500  002382  6E29               	movwf	(___flmul@prod+3)^0,c
 10501  002384                     l4170:
 10502  002384  501F               	movf	___flmul@sign^0,w,c
 10503  002386  1229               	iorwf	(___flmul@prod+3)^0,f,c
 10504  002388  C026  F013         	movff	___flmul@prod,?___flmul
 10505  00238C  C027  F014         	movff	___flmul@prod+1,?___flmul+1
 10506  002390  C028  F015         	movff	___flmul@prod+2,?___flmul+2
 10507  002394  C029  F016         	movff	___flmul@prod+3,?___flmul+3
 10508  002398                     l1130:
 10509  002398  0012               	return		;funcret
 10510  00239A                     __end_of___flmul:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function ___flge *****************
 10514 ;; Defined at:
 10515 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  ff1             4   43[COMRAM] unsigned char 
 10518 ;;  ff2             4   47[COMRAM] unsigned char 
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;		None               void
 10523 ;; Registers used:
 10524 ;;		wreg, status,2, status,0
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10530 ;;      Params:         8       0       0       0       0       0       0       0       0
 10531 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10532 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10533 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10534 ;;Total ram usage:       12 bytes
 10535 ;; Hardware stack levels used: 1
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_Estados
 10540 ;;		_efgtoa
 10541 ;; This function uses a non-reentrant model
 10542 ;;
 10543                           
 10544                           	psect	text49
 10545  00372C                     __ptext49:
 10546                           	callstack 0
 10547  00372C                     ___flge:
 10548                           	callstack 25
 10549  00372C  0E00               	movlw	0
 10550  00372E  142C               	andwf	___flge@ff1^0,w,c
 10551  003730  6E34               	movwf	??___flge^0,c
 10552  003732  0E00               	movlw	0
 10553  003734  142D               	andwf	(___flge@ff1+1)^0,w,c
 10554  003736  6E35               	movwf	(??___flge+1)^0,c
 10555  003738  0E80               	movlw	128
 10556  00373A  142E               	andwf	(___flge@ff1+2)^0,w,c
 10557  00373C  6E36               	movwf	(??___flge+2)^0,c
 10558  00373E  0E7F               	movlw	127
 10559  003740  142F               	andwf	(___flge@ff1+3)^0,w,c
 10560  003742  6E37               	movwf	(??___flge+3)^0,c
 10561  003744  5034               	movf	??___flge^0,w,c
 10562  003746  1035               	iorwf	(??___flge+1)^0,w,c
 10563  003748  1036               	iorwf	(??___flge+2)^0,w,c
 10564  00374A  1037               	iorwf	(??___flge+3)^0,w,c
 10565  00374C  A4D8               	btfss	status,2,c
 10566  00374E  EFAB  F01B         	goto	u4141
 10567  003752  EFAD  F01B         	goto	u4140
 10568  003756                     u4141:
 10569  003756  EFB5  F01B         	goto	l4282
 10570  00375A                     u4140:
 10571  00375A  0E00               	movlw	0
 10572  00375C  6E2C               	movwf	___flge@ff1^0,c
 10573  00375E  0E00               	movlw	0
 10574  003760  6E2D               	movwf	(___flge@ff1+1)^0,c
 10575  003762  0E00               	movlw	0
 10576  003764  6E2E               	movwf	(___flge@ff1+2)^0,c
 10577  003766  0E00               	movlw	0
 10578  003768  6E2F               	movwf	(___flge@ff1+3)^0,c
 10579  00376A                     l4282:
 10580  00376A  0E00               	movlw	0
 10581  00376C  1430               	andwf	___flge@ff2^0,w,c
 10582  00376E  6E34               	movwf	??___flge^0,c
 10583  003770  0E00               	movlw	0
 10584  003772  1431               	andwf	(___flge@ff2+1)^0,w,c
 10585  003774  6E35               	movwf	(??___flge+1)^0,c
 10586  003776  0E80               	movlw	128
 10587  003778  1432               	andwf	(___flge@ff2+2)^0,w,c
 10588  00377A  6E36               	movwf	(??___flge+2)^0,c
 10589  00377C  0E7F               	movlw	127
 10590  00377E  1433               	andwf	(___flge@ff2+3)^0,w,c
 10591  003780  6E37               	movwf	(??___flge+3)^0,c
 10592  003782  5034               	movf	??___flge^0,w,c
 10593  003784  1035               	iorwf	(??___flge+1)^0,w,c
 10594  003786  1036               	iorwf	(??___flge+2)^0,w,c
 10595  003788  1037               	iorwf	(??___flge+3)^0,w,c
 10596  00378A  A4D8               	btfss	status,2,c
 10597  00378C  EFCA  F01B         	goto	u4151
 10598  003790  EFCC  F01B         	goto	u4150
 10599  003794                     u4151:
 10600  003794  EFD4  F01B         	goto	l4286
 10601  003798                     u4150:
 10602  003798  0E00               	movlw	0
 10603  00379A  6E30               	movwf	___flge@ff2^0,c
 10604  00379C  0E00               	movlw	0
 10605  00379E  6E31               	movwf	(___flge@ff2+1)^0,c
 10606  0037A0  0E00               	movlw	0
 10607  0037A2  6E32               	movwf	(___flge@ff2+2)^0,c
 10608  0037A4  0E00               	movlw	0
 10609  0037A6  6E33               	movwf	(___flge@ff2+3)^0,c
 10610  0037A8                     l4286:
 10611  0037A8  AE2F               	btfss	(___flge@ff1+3)^0,7,c
 10612  0037AA  EFD9  F01B         	goto	u4161
 10613  0037AE  EFDB  F01B         	goto	u4160
 10614  0037B2                     u4161:
 10615  0037B2  EFE4  F01B         	goto	l4290
 10616  0037B6                     u4160:
 10617  0037B6  6C2C               	negf	___flge@ff1^0,c
 10618  0037B8  1E2D               	comf	(___flge@ff1+1)^0,f,c
 10619  0037BA  B0D8               	btfsc	status,0,c
 10620  0037BC  2A2D               	incf	(___flge@ff1+1)^0,f,c
 10621  0037BE  1E2E               	comf	(___flge@ff1+2)^0,f,c
 10622  0037C0  B0D8               	btfsc	status,0,c
 10623  0037C2  2A2E               	incf	(___flge@ff1+2)^0,f,c
 10624  0037C4  0E80               	movlw	128
 10625  0037C6  562F               	subfwb	(___flge@ff1+3)^0,f,c
 10626  0037C8                     l4290:
 10627  0037C8  AE33               	btfss	(___flge@ff2+3)^0,7,c
 10628  0037CA  EFE9  F01B         	goto	u4171
 10629  0037CE  EFEB  F01B         	goto	u4170
 10630  0037D2                     u4171:
 10631  0037D2  EFF4  F01B         	goto	l777
 10632  0037D6                     u4170:
 10633  0037D6  6C30               	negf	___flge@ff2^0,c
 10634  0037D8  1E31               	comf	(___flge@ff2+1)^0,f,c
 10635  0037DA  B0D8               	btfsc	status,0,c
 10636  0037DC  2A31               	incf	(___flge@ff2+1)^0,f,c
 10637  0037DE  1E32               	comf	(___flge@ff2+2)^0,f,c
 10638  0037E0  B0D8               	btfsc	status,0,c
 10639  0037E2  2A32               	incf	(___flge@ff2+2)^0,f,c
 10640  0037E4  0E80               	movlw	128
 10641  0037E6  5633               	subfwb	(___flge@ff2+3)^0,f,c
 10642  0037E8                     l777:
 10643  0037E8  0E00               	movlw	0
 10644  0037EA  1A2C               	xorwf	___flge@ff1^0,f,c
 10645  0037EC  0E00               	movlw	0
 10646  0037EE  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
 10647  0037F0  0E00               	movlw	0
 10648  0037F2  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
 10649  0037F4  0E80               	movlw	128
 10650  0037F6  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
 10651  0037F8  0E00               	movlw	0
 10652  0037FA  1A30               	xorwf	___flge@ff2^0,f,c
 10653  0037FC  0E00               	movlw	0
 10654  0037FE  1A31               	xorwf	(___flge@ff2+1)^0,f,c
 10655  003800  0E00               	movlw	0
 10656  003802  1A32               	xorwf	(___flge@ff2+2)^0,f,c
 10657  003804  0E80               	movlw	128
 10658  003806  1A33               	xorwf	(___flge@ff2+3)^0,f,c
 10659  003808  5030               	movf	___flge@ff2^0,w,c
 10660  00380A  5C2C               	subwf	___flge@ff1^0,w,c
 10661  00380C  5031               	movf	(___flge@ff2+1)^0,w,c
 10662  00380E  582D               	subwfb	(___flge@ff1+1)^0,w,c
 10663  003810  5032               	movf	(___flge@ff2+2)^0,w,c
 10664  003812  582E               	subwfb	(___flge@ff1+2)^0,w,c
 10665  003814  5033               	movf	(___flge@ff2+3)^0,w,c
 10666  003816  582F               	subwfb	(___flge@ff1+3)^0,w,c
 10667  003818  B0D8               	btfsc	status,0,c
 10668  00381A  EF11  F01C         	goto	u4181
 10669  00381E  EF13  F01C         	goto	u4180
 10670  003822                     u4181:
 10671  003822  EF16  F01C         	goto	l4296
 10672  003826                     u4180:
 10673  003826  90D8               	bcf	status,0,c
 10674  003828  EF17  F01C         	goto	l782
 10675  00382C                     l4296:
 10676  00382C  80D8               	bsf	status,0,c
 10677  00382E                     l782:
 10678  00382E  0012               	return		;funcret
 10679  003830                     __end_of___flge:
 10680                           	callstack 0
 10681                           
 10682 ;; *************** function ___fleq *****************
 10683 ;; Defined at:
 10684 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
 10685 ;; Parameters:    Size  Location     Type
 10686 ;;  ff1             4    0[COMRAM] unsigned char 
 10687 ;;  ff2             4    4[COMRAM] unsigned char 
 10688 ;; Auto vars:     Size  Location     Type
 10689 ;;		None
 10690 ;; Return value:  Size  Location     Type
 10691 ;;		None               void
 10692 ;; Registers used:
 10693 ;;		wreg, status,2, status,0
 10694 ;; Tracked objects:
 10695 ;;		On entry : 0/0
 10696 ;;		On exit  : 0/0
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10699 ;;      Params:         8       0       0       0       0       0       0       0       0
 10700 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10701 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10702 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10703 ;;Total ram usage:       12 bytes
 10704 ;; Hardware stack levels used: 1
 10705 ;; This function calls:
 10706 ;;		Nothing
 10707 ;; This function is called by:
 10708 ;;		_efgtoa
 10709 ;; This function uses a non-reentrant model
 10710 ;;
 10711                           
 10712                           	psect	text50
 10713  003ECA                     __ptext50:
 10714                           	callstack 0
 10715  003ECA                     ___fleq:
 10716                           	callstack 25
 10717  003ECA  0E00               	movlw	0
 10718  003ECC  1401               	andwf	___fleq@ff1^0,w,c
 10719  003ECE  6E09               	movwf	??___fleq^0,c
 10720  003ED0  0E00               	movlw	0
 10721  003ED2  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10722  003ED4  6E0A               	movwf	(??___fleq+1)^0,c
 10723  003ED6  0E80               	movlw	128
 10724  003ED8  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10725  003EDA  6E0B               	movwf	(??___fleq+2)^0,c
 10726  003EDC  0E7F               	movlw	127
 10727  003EDE  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10728  003EE0  6E0C               	movwf	(??___fleq+3)^0,c
 10729  003EE2  5009               	movf	??___fleq^0,w,c
 10730  003EE4  100A               	iorwf	(??___fleq+1)^0,w,c
 10731  003EE6  100B               	iorwf	(??___fleq+2)^0,w,c
 10732  003EE8  100C               	iorwf	(??___fleq+3)^0,w,c
 10733  003EEA  A4D8               	btfss	status,2,c
 10734  003EEC  EF7A  F01F         	goto	u4111
 10735  003EF0  EF7C  F01F         	goto	u4110
 10736  003EF4                     u4111:
 10737  003EF4  EF84  F01F         	goto	l4266
 10738  003EF8                     u4110:
 10739  003EF8  0E00               	movlw	0
 10740  003EFA  6E01               	movwf	___fleq@ff1^0,c
 10741  003EFC  0E00               	movlw	0
 10742  003EFE  6E02               	movwf	(___fleq@ff1+1)^0,c
 10743  003F00  0E00               	movlw	0
 10744  003F02  6E03               	movwf	(___fleq@ff1+2)^0,c
 10745  003F04  0E00               	movlw	0
 10746  003F06  6E04               	movwf	(___fleq@ff1+3)^0,c
 10747  003F08                     l4266:
 10748  003F08  0E00               	movlw	0
 10749  003F0A  1405               	andwf	___fleq@ff2^0,w,c
 10750  003F0C  6E09               	movwf	??___fleq^0,c
 10751  003F0E  0E00               	movlw	0
 10752  003F10  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10753  003F12  6E0A               	movwf	(??___fleq+1)^0,c
 10754  003F14  0E80               	movlw	128
 10755  003F16  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10756  003F18  6E0B               	movwf	(??___fleq+2)^0,c
 10757  003F1A  0E7F               	movlw	127
 10758  003F1C  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10759  003F1E  6E0C               	movwf	(??___fleq+3)^0,c
 10760  003F20  5009               	movf	??___fleq^0,w,c
 10761  003F22  100A               	iorwf	(??___fleq+1)^0,w,c
 10762  003F24  100B               	iorwf	(??___fleq+2)^0,w,c
 10763  003F26  100C               	iorwf	(??___fleq+3)^0,w,c
 10764  003F28  A4D8               	btfss	status,2,c
 10765  003F2A  EF99  F01F         	goto	u4121
 10766  003F2E  EF9B  F01F         	goto	u4120
 10767  003F32                     u4121:
 10768  003F32  EFA3  F01F         	goto	l4270
 10769  003F36                     u4120:
 10770  003F36  0E00               	movlw	0
 10771  003F38  6E05               	movwf	___fleq@ff2^0,c
 10772  003F3A  0E00               	movlw	0
 10773  003F3C  6E06               	movwf	(___fleq@ff2+1)^0,c
 10774  003F3E  0E00               	movlw	0
 10775  003F40  6E07               	movwf	(___fleq@ff2+2)^0,c
 10776  003F42  0E00               	movlw	0
 10777  003F44  6E08               	movwf	(___fleq@ff2+3)^0,c
 10778  003F46                     l4270:
 10779  003F46  5005               	movf	___fleq@ff2^0,w,c
 10780  003F48  1801               	xorwf	___fleq@ff1^0,w,c
 10781  003F4A  E10F               	bnz	u4130
 10782  003F4C  5006               	movf	(___fleq@ff2+1)^0,w,c
 10783  003F4E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10784  003F50  E10C               	bnz	u4130
 10785  003F52  5007               	movf	(___fleq@ff2+2)^0,w,c
 10786  003F54  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10787  003F56  E109               	bnz	u4130
 10788  003F58  5008               	movf	(___fleq@ff2+3)^0,w,c
 10789  003F5A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10790  003F5C  B4D8               	btfsc	status,2,c
 10791  003F5E  EFB3  F01F         	goto	u4131
 10792  003F62  EFB5  F01F         	goto	u4130
 10793  003F66                     u4131:
 10794  003F66  EFB8  F01F         	goto	l4274
 10795  003F6A                     u4130:
 10796  003F6A  90D8               	bcf	status,0,c
 10797  003F6C  EFB9  F01F         	goto	l771
 10798  003F70                     l4274:
 10799  003F70  80D8               	bsf	status,0,c
 10800  003F72                     l771:
 10801  003F72  0012               	return		;funcret
 10802  003F74                     __end_of___fleq:
 10803                           	callstack 0
 10804                           
 10805 ;; *************** function ___fldiv *****************
 10806 ;; Defined at:
 10807 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;  b               4   43[COMRAM] unsigned char 
 10810 ;;  a               4   47[COMRAM] unsigned char 
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;  grs             4   62[COMRAM] unsigned long 
 10813 ;;  rem             4   55[COMRAM] unsigned long 
 10814 ;;  new_exp         2   60[COMRAM] short 
 10815 ;;  aexp            1   67[COMRAM] unsigned char 
 10816 ;;  bexp            1   66[COMRAM] unsigned char 
 10817 ;;  sign            1   59[COMRAM] unsigned char 
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  4   43[COMRAM] unsigned char 
 10820 ;; Registers used:
 10821 ;;		wreg, status,2, status,0
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10827 ;;      Params:         8       0       0       0       0       0       0       0       0
 10828 ;;      Locals:        13       0       0       0       0       0       0       0       0
 10829 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10830 ;;      Totals:        25       0       0       0       0       0       0       0       0
 10831 ;;Total ram usage:       25 bytes
 10832 ;; Hardware stack levels used: 1
 10833 ;; This function calls:
 10834 ;;		Nothing
 10835 ;; This function is called by:
 10836 ;;		_ReadADC
 10837 ;;		_efgtoa
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text51
 10842  00239A                     __ptext51:
 10843                           	callstack 0
 10844  00239A                     ___fldiv:
 10845                           	callstack 25
 10846  00239A  502F               	movf	(___fldiv@b+3)^0,w,c
 10847  00239C  0B80               	andlw	128
 10848  00239E  6E3C               	movwf	___fldiv@sign^0,c
 10849  0023A0  502F               	movf	(___fldiv@b+3)^0,w,c
 10850  0023A2  242F               	addwf	(___fldiv@b+3)^0,w,c
 10851  0023A4  6E43               	movwf	___fldiv@bexp^0,c
 10852  0023A6  AE2E               	btfss	(___fldiv@b+2)^0,7,c
 10853  0023A8  EFD8  F011         	goto	u3571
 10854  0023AC  EFDA  F011         	goto	u3570
 10855  0023B0                     u3571:
 10856  0023B0  EFDB  F011         	goto	l3914
 10857  0023B4                     u3570:
 10858  0023B4  8043               	bsf	___fldiv@bexp^0,0,c
 10859  0023B6                     l3914:
 10860  0023B6  5043               	movf	___fldiv@bexp^0,w,c
 10861  0023B8  B4D8               	btfsc	status,2,c
 10862  0023BA  EFE1  F011         	goto	u3581
 10863  0023BE  EFE3  F011         	goto	u3580
 10864  0023C2                     u3581:
 10865  0023C2  EFF8  F011         	goto	l3924
 10866  0023C6                     u3580:
 10867  0023C6  2843               	incf	___fldiv@bexp^0,w,c
 10868  0023C8  A4D8               	btfss	status,2,c
 10869  0023CA  EFE9  F011         	goto	u3591
 10870  0023CE  EFEB  F011         	goto	u3590
 10871  0023D2                     u3591:
 10872  0023D2  EFF3  F011         	goto	l3920
 10873  0023D6                     u3590:
 10874  0023D6  0E00               	movlw	0
 10875  0023D8  6E2C               	movwf	___fldiv@b^0,c
 10876  0023DA  0E00               	movlw	0
 10877  0023DC  6E2D               	movwf	(___fldiv@b+1)^0,c
 10878  0023DE  0E00               	movlw	0
 10879  0023E0  6E2E               	movwf	(___fldiv@b+2)^0,c
 10880  0023E2  0E00               	movlw	0
 10881  0023E4  6E2F               	movwf	(___fldiv@b+3)^0,c
 10882  0023E6                     l3920:
 10883  0023E6  8E2E               	bsf	(___fldiv@b+2)^0,7,c
 10884  0023E8  0E00               	movlw	0
 10885  0023EA  6E2F               	movwf	(___fldiv@b+3)^0,c
 10886  0023EC  EF00  F012         	goto	l3926
 10887  0023F0                     l3924:
 10888  0023F0  0E00               	movlw	0
 10889  0023F2  6E2C               	movwf	___fldiv@b^0,c
 10890  0023F4  0E00               	movlw	0
 10891  0023F6  6E2D               	movwf	(___fldiv@b+1)^0,c
 10892  0023F8  0E00               	movlw	0
 10893  0023FA  6E2E               	movwf	(___fldiv@b+2)^0,c
 10894  0023FC  0E00               	movlw	0
 10895  0023FE  6E2F               	movwf	(___fldiv@b+3)^0,c
 10896  002400                     l3926:
 10897  002400  5033               	movf	(___fldiv@a+3)^0,w,c
 10898  002402  0B80               	andlw	128
 10899  002404  1A3C               	xorwf	___fldiv@sign^0,f,c
 10900  002406  5033               	movf	(___fldiv@a+3)^0,w,c
 10901  002408  2433               	addwf	(___fldiv@a+3)^0,w,c
 10902  00240A  6E44               	movwf	___fldiv@aexp^0,c
 10903  00240C  AE32               	btfss	(___fldiv@a+2)^0,7,c
 10904  00240E  EF0B  F012         	goto	u3601
 10905  002412  EF0D  F012         	goto	u3600
 10906  002416                     u3601:
 10907  002416  EF0E  F012         	goto	l3934
 10908  00241A                     u3600:
 10909  00241A  8044               	bsf	___fldiv@aexp^0,0,c
 10910  00241C                     l3934:
 10911  00241C  5044               	movf	___fldiv@aexp^0,w,c
 10912  00241E  B4D8               	btfsc	status,2,c
 10913  002420  EF14  F012         	goto	u3611
 10914  002424  EF16  F012         	goto	u3610
 10915  002428                     u3611:
 10916  002428  EF2B  F012         	goto	l3944
 10917  00242C                     u3610:
 10918  00242C  2844               	incf	___fldiv@aexp^0,w,c
 10919  00242E  A4D8               	btfss	status,2,c
 10920  002430  EF1C  F012         	goto	u3621
 10921  002434  EF1E  F012         	goto	u3620
 10922  002438                     u3621:
 10923  002438  EF26  F012         	goto	l3940
 10924  00243C                     u3620:
 10925  00243C  0E00               	movlw	0
 10926  00243E  6E30               	movwf	___fldiv@a^0,c
 10927  002440  0E00               	movlw	0
 10928  002442  6E31               	movwf	(___fldiv@a+1)^0,c
 10929  002444  0E00               	movlw	0
 10930  002446  6E32               	movwf	(___fldiv@a+2)^0,c
 10931  002448  0E00               	movlw	0
 10932  00244A  6E33               	movwf	(___fldiv@a+3)^0,c
 10933  00244C                     l3940:
 10934  00244C  8E32               	bsf	(___fldiv@a+2)^0,7,c
 10935  00244E  0E00               	movlw	0
 10936  002450  6E33               	movwf	(___fldiv@a+3)^0,c
 10937  002452  EF33  F012         	goto	l3946
 10938  002456                     l3944:
 10939  002456  0E00               	movlw	0
 10940  002458  6E30               	movwf	___fldiv@a^0,c
 10941  00245A  0E00               	movlw	0
 10942  00245C  6E31               	movwf	(___fldiv@a+1)^0,c
 10943  00245E  0E00               	movlw	0
 10944  002460  6E32               	movwf	(___fldiv@a+2)^0,c
 10945  002462  0E00               	movlw	0
 10946  002464  6E33               	movwf	(___fldiv@a+3)^0,c
 10947  002466                     l3946:
 10948  002466  5030               	movf	___fldiv@a^0,w,c
 10949  002468  1031               	iorwf	(___fldiv@a+1)^0,w,c
 10950  00246A  1032               	iorwf	(___fldiv@a+2)^0,w,c
 10951  00246C  1033               	iorwf	(___fldiv@a+3)^0,w,c
 10952  00246E  A4D8               	btfss	status,2,c
 10953  002470  EF3C  F012         	goto	u3631
 10954  002474  EF3E  F012         	goto	u3630
 10955  002478                     u3631:
 10956  002478  EF56  F012         	goto	l3958
 10957  00247C                     u3630:
 10958  00247C  0E00               	movlw	0
 10959  00247E  6E2C               	movwf	___fldiv@b^0,c
 10960  002480  0E00               	movlw	0
 10961  002482  6E2D               	movwf	(___fldiv@b+1)^0,c
 10962  002484  0E00               	movlw	0
 10963  002486  6E2E               	movwf	(___fldiv@b+2)^0,c
 10964  002488  0E00               	movlw	0
 10965  00248A  6E2F               	movwf	(___fldiv@b+3)^0,c
 10966  00248C  0E80               	movlw	128
 10967  00248E  122E               	iorwf	(___fldiv@b+2)^0,f,c
 10968  002490  0E7F               	movlw	127
 10969  002492  122F               	iorwf	(___fldiv@b+3)^0,f,c
 10970  002494                     l3952:
 10971  002494  503C               	movf	___fldiv@sign^0,w,c
 10972  002496  122F               	iorwf	(___fldiv@b+3)^0,f,c
 10973  002498  C02C  F02C         	movff	___fldiv@b,?___fldiv
 10974  00249C  C02D  F02D         	movff	___fldiv@b+1,?___fldiv+1
 10975  0024A0  C02E  F02E         	movff	___fldiv@b+2,?___fldiv+2
 10976  0024A4  C02F  F02F         	movff	___fldiv@b+3,?___fldiv+3
 10977  0024A8  EF99  F013         	goto	l1094
 10978  0024AC                     l3958:
 10979  0024AC  5043               	movf	___fldiv@bexp^0,w,c
 10980  0024AE  A4D8               	btfss	status,2,c
 10981  0024B0  EF5C  F012         	goto	u3641
 10982  0024B4  EF5E  F012         	goto	u3640
 10983  0024B8                     u3641:
 10984  0024B8  EF68  F012         	goto	l3966
 10985  0024BC                     u3640:
 10986  0024BC  0E00               	movlw	0
 10987  0024BE  6E2C               	movwf	?___fldiv^0,c
 10988  0024C0  0E00               	movlw	0
 10989  0024C2  6E2D               	movwf	(?___fldiv+1)^0,c
 10990  0024C4  0E00               	movlw	0
 10991  0024C6  6E2E               	movwf	(?___fldiv+2)^0,c
 10992  0024C8  0E00               	movlw	0
 10993  0024CA  6E2F               	movwf	(?___fldiv+3)^0,c
 10994  0024CC  EF99  F013         	goto	l1094
 10995  0024D0                     l3966:
 10996  0024D0  5044               	movf	___fldiv@aexp^0,w,c
 10997  0024D2  C043  F034         	movff	___fldiv@bexp,??___fldiv
 10998  0024D6  6A35               	clrf	(??___fldiv+1)^0,c
 10999  0024D8  5E34               	subwf	??___fldiv^0,f,c
 11000  0024DA  0E00               	movlw	0
 11001  0024DC  5A35               	subwfb	(??___fldiv+1)^0,f,c
 11002  0024DE  0E7F               	movlw	127
 11003  0024E0  2434               	addwf	??___fldiv^0,w,c
 11004  0024E2  6E3D               	movwf	___fldiv@new_exp^0,c
 11005  0024E4  0E00               	movlw	0
 11006  0024E6  2035               	addwfc	(??___fldiv+1)^0,w,c
 11007  0024E8  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 11008  0024EA  C02C  F038         	movff	___fldiv@b,___fldiv@rem
 11009  0024EE  C02D  F039         	movff	___fldiv@b+1,___fldiv@rem+1
 11010  0024F2  C02E  F03A         	movff	___fldiv@b+2,___fldiv@rem+2
 11011  0024F6  C02F  F03B         	movff	___fldiv@b+3,___fldiv@rem+3
 11012  0024FA  0E00               	movlw	0
 11013  0024FC  6E2C               	movwf	___fldiv@b^0,c
 11014  0024FE  0E00               	movlw	0
 11015  002500  6E2D               	movwf	(___fldiv@b+1)^0,c
 11016  002502  0E00               	movlw	0
 11017  002504  6E2E               	movwf	(___fldiv@b+2)^0,c
 11018  002506  0E00               	movlw	0
 11019  002508  6E2F               	movwf	(___fldiv@b+3)^0,c
 11020  00250A  0E00               	movlw	0
 11021  00250C  6E3F               	movwf	___fldiv@grs^0,c
 11022  00250E  0E00               	movlw	0
 11023  002510  6E40               	movwf	(___fldiv@grs+1)^0,c
 11024  002512  0E00               	movlw	0
 11025  002514  6E41               	movwf	(___fldiv@grs+2)^0,c
 11026  002516  0E00               	movlw	0
 11027  002518  6E42               	movwf	(___fldiv@grs+3)^0,c
 11028  00251A  0E00               	movlw	0
 11029  00251C  6E44               	movwf	___fldiv@aexp^0,c
 11030  00251E  EFC9  F012         	goto	l1096
 11031  002522                     l3976:
 11032  002522  5044               	movf	___fldiv@aexp^0,w,c
 11033  002524  B4D8               	btfsc	status,2,c
 11034  002526  EF97  F012         	goto	u3651
 11035  00252A  EF99  F012         	goto	u3650
 11036  00252E                     u3651:
 11037  00252E  EFB0  F012         	goto	l3984
 11038  002532                     u3650:
 11039  002532  90D8               	bcf	status,0,c
 11040  002534  3638               	rlcf	___fldiv@rem^0,f,c
 11041  002536  3639               	rlcf	(___fldiv@rem+1)^0,f,c
 11042  002538  363A               	rlcf	(___fldiv@rem+2)^0,f,c
 11043  00253A  363B               	rlcf	(___fldiv@rem+3)^0,f,c
 11044  00253C  90D8               	bcf	status,0,c
 11045  00253E  362C               	rlcf	___fldiv@b^0,f,c
 11046  002540  362D               	rlcf	(___fldiv@b+1)^0,f,c
 11047  002542  362E               	rlcf	(___fldiv@b+2)^0,f,c
 11048  002544  362F               	rlcf	(___fldiv@b+3)^0,f,c
 11049  002546  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 11050  002548  EFA8  F012         	goto	u3661
 11051  00254C  EFAA  F012         	goto	u3660
 11052  002550                     u3661:
 11053  002550  EFAB  F012         	goto	l1099
 11054  002554                     u3660:
 11055  002554  802C               	bsf	___fldiv@b^0,0,c
 11056  002556                     l1099:
 11057  002556  90D8               	bcf	status,0,c
 11058  002558  363F               	rlcf	___fldiv@grs^0,f,c
 11059  00255A  3640               	rlcf	(___fldiv@grs+1)^0,f,c
 11060  00255C  3641               	rlcf	(___fldiv@grs+2)^0,f,c
 11061  00255E  3642               	rlcf	(___fldiv@grs+3)^0,f,c
 11062  002560                     l3984:
 11063  002560  5030               	movf	___fldiv@a^0,w,c
 11064  002562  5C38               	subwf	___fldiv@rem^0,w,c
 11065  002564  5031               	movf	(___fldiv@a+1)^0,w,c
 11066  002566  5839               	subwfb	(___fldiv@rem+1)^0,w,c
 11067  002568  5032               	movf	(___fldiv@a+2)^0,w,c
 11068  00256A  583A               	subwfb	(___fldiv@rem+2)^0,w,c
 11069  00256C  5033               	movf	(___fldiv@a+3)^0,w,c
 11070  00256E  583B               	subwfb	(___fldiv@rem+3)^0,w,c
 11071  002570  A0D8               	btfss	status,0,c
 11072  002572  EFBD  F012         	goto	u3671
 11073  002576  EFBF  F012         	goto	u3670
 11074  00257A                     u3671:
 11075  00257A  EFC8  F012         	goto	l3990
 11076  00257E                     u3670:
 11077  00257E  8C42               	bsf	(___fldiv@grs+3)^0,6,c
 11078  002580  5030               	movf	___fldiv@a^0,w,c
 11079  002582  5E38               	subwf	___fldiv@rem^0,f,c
 11080  002584  5031               	movf	(___fldiv@a+1)^0,w,c
 11081  002586  5A39               	subwfb	(___fldiv@rem+1)^0,f,c
 11082  002588  5032               	movf	(___fldiv@a+2)^0,w,c
 11083  00258A  5A3A               	subwfb	(___fldiv@rem+2)^0,f,c
 11084  00258C  5033               	movf	(___fldiv@a+3)^0,w,c
 11085  00258E  5A3B               	subwfb	(___fldiv@rem+3)^0,f,c
 11086  002590                     l3990:
 11087  002590  2A44               	incf	___fldiv@aexp^0,f,c
 11088  002592                     l1096:
 11089  002592  0E19               	movlw	25
 11090  002594  6444               	cpfsgt	___fldiv@aexp^0,c
 11091  002596  EFCF  F012         	goto	u3681
 11092  00259A  EFD1  F012         	goto	u3680
 11093  00259E                     u3681:
 11094  00259E  EF91  F012         	goto	l3976
 11095  0025A2                     u3680:
 11096  0025A2  5038               	movf	___fldiv@rem^0,w,c
 11097  0025A4  1039               	iorwf	(___fldiv@rem+1)^0,w,c
 11098  0025A6  103A               	iorwf	(___fldiv@rem+2)^0,w,c
 11099  0025A8  103B               	iorwf	(___fldiv@rem+3)^0,w,c
 11100  0025AA  B4D8               	btfsc	status,2,c
 11101  0025AC  EFDA  F012         	goto	u3691
 11102  0025B0  EFDC  F012         	goto	u3690
 11103  0025B4                     u3691:
 11104  0025B4  EFF4  F012         	goto	l4002
 11105  0025B8                     u3690:
 11106  0025B8  803F               	bsf	___fldiv@grs^0,0,c
 11107  0025BA  EFF4  F012         	goto	l4002
 11108  0025BE                     l3996:
 11109  0025BE  90D8               	bcf	status,0,c
 11110  0025C0  362C               	rlcf	___fldiv@b^0,f,c
 11111  0025C2  362D               	rlcf	(___fldiv@b+1)^0,f,c
 11112  0025C4  362E               	rlcf	(___fldiv@b+2)^0,f,c
 11113  0025C6  362F               	rlcf	(___fldiv@b+3)^0,f,c
 11114  0025C8  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 11115  0025CA  EFE9  F012         	goto	u3701
 11116  0025CE  EFEB  F012         	goto	u3700
 11117  0025D2                     u3701:
 11118  0025D2  EFEC  F012         	goto	l1105
 11119  0025D6                     u3700:
 11120  0025D6  802C               	bsf	___fldiv@b^0,0,c
 11121  0025D8                     l1105:
 11122  0025D8  90D8               	bcf	status,0,c
 11123  0025DA  363F               	rlcf	___fldiv@grs^0,f,c
 11124  0025DC  3640               	rlcf	(___fldiv@grs+1)^0,f,c
 11125  0025DE  3641               	rlcf	(___fldiv@grs+2)^0,f,c
 11126  0025E0  3642               	rlcf	(___fldiv@grs+3)^0,f,c
 11127  0025E2  063D               	decf	___fldiv@new_exp^0,f,c
 11128  0025E4  A0D8               	btfss	status,0,c
 11129  0025E6  063E               	decf	(___fldiv@new_exp+1)^0,f,c
 11130  0025E8                     l4002:
 11131  0025E8  AE2E               	btfss	(___fldiv@b+2)^0,7,c
 11132  0025EA  EFF9  F012         	goto	u3711
 11133  0025EE  EFFB  F012         	goto	u3710
 11134  0025F2                     u3711:
 11135  0025F2  EFDF  F012         	goto	l3996
 11136  0025F6                     u3710:
 11137  0025F6  0E00               	movlw	0
 11138  0025F8  6E44               	movwf	___fldiv@aexp^0,c
 11139  0025FA  AE42               	btfss	(___fldiv@grs+3)^0,7,c
 11140  0025FC  EF02  F013         	goto	u3721
 11141  002600  EF04  F013         	goto	u3720
 11142  002604                     u3721:
 11143  002604  EF28  F013         	goto	l1107
 11144  002608                     u3720:
 11145  002608  0EFF               	movlw	255
 11146  00260A  143F               	andwf	___fldiv@grs^0,w,c
 11147  00260C  6E34               	movwf	??___fldiv^0,c
 11148  00260E  0EFF               	movlw	255
 11149  002610  1440               	andwf	(___fldiv@grs+1)^0,w,c
 11150  002612  6E35               	movwf	(??___fldiv+1)^0,c
 11151  002614  0EFF               	movlw	255
 11152  002616  1441               	andwf	(___fldiv@grs+2)^0,w,c
 11153  002618  6E36               	movwf	(??___fldiv+2)^0,c
 11154  00261A  0E7F               	movlw	127
 11155  00261C  1442               	andwf	(___fldiv@grs+3)^0,w,c
 11156  00261E  6E37               	movwf	(??___fldiv+3)^0,c
 11157  002620  5034               	movf	??___fldiv^0,w,c
 11158  002622  1035               	iorwf	(??___fldiv+1)^0,w,c
 11159  002624  1036               	iorwf	(??___fldiv+2)^0,w,c
 11160  002626  1037               	iorwf	(??___fldiv+3)^0,w,c
 11161  002628  B4D8               	btfsc	status,2,c
 11162  00262A  EF19  F013         	goto	u3731
 11163  00262E  EF1B  F013         	goto	u3730
 11164  002632                     u3731:
 11165  002632  EF1F  F013         	goto	l1108
 11166  002636                     u3730:
 11167  002636                     l4010:
 11168  002636  0E01               	movlw	1
 11169  002638  6E44               	movwf	___fldiv@aexp^0,c
 11170  00263A  EF28  F013         	goto	l1107
 11171  00263E                     l1108:
 11172  00263E  A02C               	btfss	___fldiv@b^0,0,c
 11173  002640  EF24  F013         	goto	u3741
 11174  002644  EF26  F013         	goto	u3740
 11175  002648                     u3741:
 11176  002648  EF28  F013         	goto	l1107
 11177  00264C                     u3740:
 11178  00264C  EF1B  F013         	goto	l4010
 11179  002650                     l1107:
 11180  002650  5044               	movf	___fldiv@aexp^0,w,c
 11181  002652  B4D8               	btfsc	status,2,c
 11182  002654  EF2E  F013         	goto	u3751
 11183  002658  EF30  F013         	goto	u3750
 11184  00265C                     u3751:
 11185  00265C  EF54  F013         	goto	l4022
 11186  002660                     u3750:
 11187  002660  0E01               	movlw	1
 11188  002662  262C               	addwf	___fldiv@b^0,f,c
 11189  002664  0E00               	movlw	0
 11190  002666  222D               	addwfc	(___fldiv@b+1)^0,f,c
 11191  002668  222E               	addwfc	(___fldiv@b+2)^0,f,c
 11192  00266A  222F               	addwfc	(___fldiv@b+3)^0,f,c
 11193  00266C  A02F               	btfss	(___fldiv@b+3)^0,0,c
 11194  00266E  EF3B  F013         	goto	u3761
 11195  002672  EF3D  F013         	goto	u3760
 11196  002676                     u3761:
 11197  002676  EF54  F013         	goto	l4022
 11198  00267A                     u3760:
 11199  00267A  C02C  F034         	movff	___fldiv@b,??___fldiv
 11200  00267E  C02D  F035         	movff	___fldiv@b+1,??___fldiv+1
 11201  002682  C02E  F036         	movff	___fldiv@b+2,??___fldiv+2
 11202  002686  C02F  F037         	movff	___fldiv@b+3,??___fldiv+3
 11203  00268A  3437               	rlcf	(??___fldiv+3)^0,w,c
 11204  00268C  3237               	rrcf	(??___fldiv+3)^0,f,c
 11205  00268E  3236               	rrcf	(??___fldiv+2)^0,f,c
 11206  002690  3235               	rrcf	(??___fldiv+1)^0,f,c
 11207  002692  3234               	rrcf	??___fldiv^0,f,c
 11208  002694  C034  F02C         	movff	??___fldiv,___fldiv@b
 11209  002698  C035  F02D         	movff	??___fldiv+1,___fldiv@b+1
 11210  00269C  C036  F02E         	movff	??___fldiv+2,___fldiv@b+2
 11211  0026A0  C037  F02F         	movff	??___fldiv+3,___fldiv@b+3
 11212  0026A4  4A3D               	infsnz	___fldiv@new_exp^0,f,c
 11213  0026A6  2A3E               	incf	(___fldiv@new_exp+1)^0,f,c
 11214  0026A8                     l4022:
 11215  0026A8  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11216  0026AA  EF5F  F013         	goto	u3771
 11217  0026AE  503E               	movf	(___fldiv@new_exp+1)^0,w,c
 11218  0026B0  E108               	bnz	u3770
 11219  0026B2  283D               	incf	___fldiv@new_exp^0,w,c
 11220  0026B4  A0D8               	btfss	status,0,c
 11221  0026B6  EF5F  F013         	goto	u3771
 11222  0026BA  EF61  F013         	goto	u3770
 11223  0026BE                     u3771:
 11224  0026BE  EF6C  F013         	goto	l4026
 11225  0026C2                     u3770:
 11226  0026C2  0E00               	movlw	0
 11227  0026C4  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 11228  0026C6  683D               	setf	___fldiv@new_exp^0,c
 11229  0026C8  0E00               	movlw	0
 11230  0026CA  6E2C               	movwf	___fldiv@b^0,c
 11231  0026CC  0E00               	movlw	0
 11232  0026CE  6E2D               	movwf	(___fldiv@b+1)^0,c
 11233  0026D0  0E00               	movlw	0
 11234  0026D2  6E2E               	movwf	(___fldiv@b+2)^0,c
 11235  0026D4  0E00               	movlw	0
 11236  0026D6  6E2F               	movwf	(___fldiv@b+3)^0,c
 11237  0026D8                     l4026:
 11238  0026D8  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11239  0026DA  EF79  F013         	goto	u3780
 11240  0026DE  503E               	movf	(___fldiv@new_exp+1)^0,w,c
 11241  0026E0  E106               	bnz	u3781
 11242  0026E2  043D               	decf	___fldiv@new_exp^0,w,c
 11243  0026E4  B0D8               	btfsc	status,0,c
 11244  0026E6  EF77  F013         	goto	u3781
 11245  0026EA  EF79  F013         	goto	u3780
 11246  0026EE                     u3781:
 11247  0026EE  EF87  F013         	goto	l4030
 11248  0026F2                     u3780:
 11249  0026F2  0E00               	movlw	0
 11250  0026F4  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
 11251  0026F6  0E00               	movlw	0
 11252  0026F8  6E3D               	movwf	___fldiv@new_exp^0,c
 11253  0026FA  0E00               	movlw	0
 11254  0026FC  6E2C               	movwf	___fldiv@b^0,c
 11255  0026FE  0E00               	movlw	0
 11256  002700  6E2D               	movwf	(___fldiv@b+1)^0,c
 11257  002702  0E00               	movlw	0
 11258  002704  6E2E               	movwf	(___fldiv@b+2)^0,c
 11259  002706  0E00               	movlw	0
 11260  002708  6E2F               	movwf	(___fldiv@b+3)^0,c
 11261  00270A  0E00               	movlw	0
 11262  00270C  6E3C               	movwf	___fldiv@sign^0,c
 11263  00270E                     l4030:
 11264  00270E  C03D  F043         	movff	___fldiv@new_exp,___fldiv@bexp
 11265  002712  A043               	btfss	___fldiv@bexp^0,0,c
 11266  002714  EF8E  F013         	goto	u3791
 11267  002718  EF90  F013         	goto	u3790
 11268  00271C                     u3791:
 11269  00271C  EF93  F013         	goto	l4036
 11270  002720                     u3790:
 11271  002720  8E2E               	bsf	(___fldiv@b+2)^0,7,c
 11272  002722  EF94  F013         	goto	l4038
 11273  002726                     l4036:
 11274  002726  9E2E               	bcf	(___fldiv@b+2)^0,7,c
 11275  002728                     l4038:
 11276  002728  90D8               	bcf	status,0,c
 11277  00272A  3043               	rrcf	___fldiv@bexp^0,w,c
 11278  00272C  6E2F               	movwf	(___fldiv@b+3)^0,c
 11279  00272E  EF4A  F012         	goto	l3952
 11280  002732                     l1094:
 11281  002732  0012               	return		;funcret
 11282  002734                     __end_of___fldiv:
 11283                           	callstack 0
 11284                           
 11285 ;; *************** function ___awmod *****************
 11286 ;; Defined at:
 11287 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  dividend        2    0[COMRAM] int 
 11290 ;;  divisor         2    2[COMRAM] int 
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;  sign            1    5[COMRAM] unsigned char 
 11293 ;;  counter         1    4[COMRAM] unsigned char 
 11294 ;; Return value:  Size  Location     Type
 11295 ;;                  2    0[COMRAM] int 
 11296 ;; Registers used:
 11297 ;;		wreg, status,2, status,0
 11298 ;; Tracked objects:
 11299 ;;		On entry : 0/0
 11300 ;;		On exit  : 0/0
 11301 ;;		Unchanged: 0/0
 11302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11303 ;;      Params:         4       0       0       0       0       0       0       0       0
 11304 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11305 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11306 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11307 ;;Total ram usage:        6 bytes
 11308 ;; Hardware stack levels used: 1
 11309 ;; This function calls:
 11310 ;;		Nothing
 11311 ;; This function is called by:
 11312 ;;		_efgtoa
 11313 ;; This function uses a non-reentrant model
 11314 ;;
 11315                           
 11316                           	psect	text52
 11317  003E1A                     __ptext52:
 11318                           	callstack 0
 11319  003E1A                     ___awmod:
 11320                           	callstack 25
 11321  003E1A  0E00               	movlw	0
 11322  003E1C  6E06               	movwf	___awmod@sign^0,c
 11323  003E1E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11324  003E20  EF16  F01F         	goto	u4050
 11325  003E24  EF14  F01F         	goto	u4051
 11326  003E28                     u4051:
 11327  003E28  EF1C  F01F         	goto	l4234
 11328  003E2C                     u4050:
 11329  003E2C  6C01               	negf	___awmod@dividend^0,c
 11330  003E2E  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11331  003E30  B0D8               	btfsc	status,0,c
 11332  003E32  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11333  003E34  0E01               	movlw	1
 11334  003E36  6E06               	movwf	___awmod@sign^0,c
 11335  003E38                     l4234:
 11336  003E38  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11337  003E3A  EF23  F01F         	goto	u4060
 11338  003E3E  EF21  F01F         	goto	u4061
 11339  003E42                     u4061:
 11340  003E42  EF27  F01F         	goto	l4238
 11341  003E46                     u4060:
 11342  003E46  6C03               	negf	___awmod@divisor^0,c
 11343  003E48  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11344  003E4A  B0D8               	btfsc	status,0,c
 11345  003E4C  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11346  003E4E                     l4238:
 11347  003E4E  5003               	movf	___awmod@divisor^0,w,c
 11348  003E50  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11349  003E52  B4D8               	btfsc	status,2,c
 11350  003E54  EF2E  F01F         	goto	u4071
 11351  003E58  EF30  F01F         	goto	u4070
 11352  003E5C                     u4071:
 11353  003E5C  EF54  F01F         	goto	l4254
 11354  003E60                     u4070:
 11355  003E60  0E01               	movlw	1
 11356  003E62  6E05               	movwf	___awmod@counter^0,c
 11357  003E64  EF38  F01F         	goto	l4244
 11358  003E68                     l4242:
 11359  003E68  90D8               	bcf	status,0,c
 11360  003E6A  3603               	rlcf	___awmod@divisor^0,f,c
 11361  003E6C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11362  003E6E  2A05               	incf	___awmod@counter^0,f,c
 11363  003E70                     l4244:
 11364  003E70  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11365  003E72  EF3D  F01F         	goto	u4081
 11366  003E76  EF3F  F01F         	goto	u4080
 11367  003E7A                     u4081:
 11368  003E7A  EF34  F01F         	goto	l4242
 11369  003E7E                     u4080:
 11370  003E7E                     l4246:
 11371  003E7E  5003               	movf	___awmod@divisor^0,w,c
 11372  003E80  5C01               	subwf	___awmod@dividend^0,w,c
 11373  003E82  5004               	movf	(___awmod@divisor+1)^0,w,c
 11374  003E84  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11375  003E86  A0D8               	btfss	status,0,c
 11376  003E88  EF48  F01F         	goto	u4091
 11377  003E8C  EF4A  F01F         	goto	u4090
 11378  003E90                     u4091:
 11379  003E90  EF4E  F01F         	goto	l4250
 11380  003E94                     u4090:
 11381  003E94  5003               	movf	___awmod@divisor^0,w,c
 11382  003E96  5E01               	subwf	___awmod@dividend^0,f,c
 11383  003E98  5004               	movf	(___awmod@divisor+1)^0,w,c
 11384  003E9A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11385  003E9C                     l4250:
 11386  003E9C  90D8               	bcf	status,0,c
 11387  003E9E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11388  003EA0  3203               	rrcf	___awmod@divisor^0,f,c
 11389  003EA2  2E05               	decfsz	___awmod@counter^0,f,c
 11390  003EA4  EF3F  F01F         	goto	l4246
 11391  003EA8                     l4254:
 11392  003EA8  5006               	movf	___awmod@sign^0,w,c
 11393  003EAA  B4D8               	btfsc	status,2,c
 11394  003EAC  EF5A  F01F         	goto	u4101
 11395  003EB0  EF5C  F01F         	goto	u4100
 11396  003EB4                     u4101:
 11397  003EB4  EF60  F01F         	goto	l4258
 11398  003EB8                     u4100:
 11399  003EB8  6C01               	negf	___awmod@dividend^0,c
 11400  003EBA  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11401  003EBC  B0D8               	btfsc	status,0,c
 11402  003EBE  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11403  003EC0                     l4258:
 11404  003EC0  C001  F001         	movff	___awmod@dividend,?___awmod
 11405  003EC4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11406  003EC8  0012               	return		;funcret
 11407  003ECA                     __end_of___awmod:
 11408                           	callstack 0
 11409                           
 11410 ;; *************** function ___awdiv *****************
 11411 ;; Defined at:
 11412 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 11413 ;; Parameters:    Size  Location     Type
 11414 ;;  dividend        2    0[COMRAM] int 
 11415 ;;  divisor         2    2[COMRAM] int 
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;  quotient        2    6[COMRAM] int 
 11418 ;;  sign            1    5[COMRAM] unsigned char 
 11419 ;;  counter         1    4[COMRAM] unsigned char 
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  2    0[COMRAM] int 
 11422 ;; Registers used:
 11423 ;;		wreg, status,2, status,0
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11429 ;;      Params:         4       0       0       0       0       0       0       0       0
 11430 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11431 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11432 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11433 ;;Total ram usage:        8 bytes
 11434 ;; Hardware stack levels used: 1
 11435 ;; This function calls:
 11436 ;;		Nothing
 11437 ;; This function is called by:
 11438 ;;		_efgtoa
 11439 ;; This function uses a non-reentrant model
 11440 ;;
 11441                           
 11442                           	psect	text53
 11443  003D56                     __ptext53:
 11444                           	callstack 0
 11445  003D56                     ___awdiv:
 11446                           	callstack 25
 11447  003D56  0E00               	movlw	0
 11448  003D58  6E06               	movwf	___awdiv@sign^0,c
 11449  003D5A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11450  003D5C  EFB4  F01E         	goto	u3990
 11451  003D60  EFB2  F01E         	goto	u3991
 11452  003D64                     u3991:
 11453  003D64  EFBA  F01E         	goto	l4190
 11454  003D68                     u3990:
 11455  003D68  6C03               	negf	___awdiv@divisor^0,c
 11456  003D6A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11457  003D6C  B0D8               	btfsc	status,0,c
 11458  003D6E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11459  003D70  0E01               	movlw	1
 11460  003D72  6E06               	movwf	___awdiv@sign^0,c
 11461  003D74                     l4190:
 11462  003D74  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11463  003D76  EFC1  F01E         	goto	u4000
 11464  003D7A  EFBF  F01E         	goto	u4001
 11465  003D7E                     u4001:
 11466  003D7E  EFC7  F01E         	goto	l4196
 11467  003D82                     u4000:
 11468  003D82  6C01               	negf	___awdiv@dividend^0,c
 11469  003D84  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11470  003D86  B0D8               	btfsc	status,0,c
 11471  003D88  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11472  003D8A  0E01               	movlw	1
 11473  003D8C  1A06               	xorwf	___awdiv@sign^0,f,c
 11474  003D8E                     l4196:
 11475  003D8E  0E00               	movlw	0
 11476  003D90  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11477  003D92  0E00               	movlw	0
 11478  003D94  6E07               	movwf	___awdiv@quotient^0,c
 11479  003D96  5003               	movf	___awdiv@divisor^0,w,c
 11480  003D98  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11481  003D9A  B4D8               	btfsc	status,2,c
 11482  003D9C  EFD2  F01E         	goto	u4011
 11483  003DA0  EFD4  F01E         	goto	u4010
 11484  003DA4                     u4011:
 11485  003DA4  EFFC  F01E         	goto	l4218
 11486  003DA8                     u4010:
 11487  003DA8  0E01               	movlw	1
 11488  003DAA  6E05               	movwf	___awdiv@counter^0,c
 11489  003DAC  EFDC  F01E         	goto	l4204
 11490  003DB0                     l4202:
 11491  003DB0  90D8               	bcf	status,0,c
 11492  003DB2  3603               	rlcf	___awdiv@divisor^0,f,c
 11493  003DB4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11494  003DB6  2A05               	incf	___awdiv@counter^0,f,c
 11495  003DB8                     l4204:
 11496  003DB8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11497  003DBA  EFE1  F01E         	goto	u4021
 11498  003DBE  EFE3  F01E         	goto	u4020
 11499  003DC2                     u4021:
 11500  003DC2  EFD8  F01E         	goto	l4202
 11501  003DC6                     u4020:
 11502  003DC6                     l4206:
 11503  003DC6  90D8               	bcf	status,0,c
 11504  003DC8  3607               	rlcf	___awdiv@quotient^0,f,c
 11505  003DCA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11506  003DCC  5003               	movf	___awdiv@divisor^0,w,c
 11507  003DCE  5C01               	subwf	___awdiv@dividend^0,w,c
 11508  003DD0  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11509  003DD2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11510  003DD4  A0D8               	btfss	status,0,c
 11511  003DD6  EFEF  F01E         	goto	u4031
 11512  003DDA  EFF1  F01E         	goto	u4030
 11513  003DDE                     u4031:
 11514  003DDE  EFF6  F01E         	goto	l4214
 11515  003DE2                     u4030:
 11516  003DE2  5003               	movf	___awdiv@divisor^0,w,c
 11517  003DE4  5E01               	subwf	___awdiv@dividend^0,f,c
 11518  003DE6  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11519  003DE8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11520  003DEA  8007               	bsf	___awdiv@quotient^0,0,c
 11521  003DEC                     l4214:
 11522  003DEC  90D8               	bcf	status,0,c
 11523  003DEE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11524  003DF0  3203               	rrcf	___awdiv@divisor^0,f,c
 11525  003DF2  2E05               	decfsz	___awdiv@counter^0,f,c
 11526  003DF4  EFE3  F01E         	goto	l4206
 11527  003DF8                     l4218:
 11528  003DF8  5006               	movf	___awdiv@sign^0,w,c
 11529  003DFA  B4D8               	btfsc	status,2,c
 11530  003DFC  EF02  F01F         	goto	u4041
 11531  003E00  EF04  F01F         	goto	u4040
 11532  003E04                     u4041:
 11533  003E04  EF08  F01F         	goto	l4222
 11534  003E08                     u4040:
 11535  003E08  6C07               	negf	___awdiv@quotient^0,c
 11536  003E0A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11537  003E0C  B0D8               	btfsc	status,0,c
 11538  003E0E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11539  003E10                     l4222:
 11540  003E10  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11541  003E14  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11542  003E18  0012               	return		;funcret
 11543  003E1A                     __end_of___awdiv:
 11544                           	callstack 0
 11545                           
 11546 ;; *************** function _atoi *****************
 11547 ;; Defined at:
 11548 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 11549 ;; Parameters:    Size  Location     Type
 11550 ;;  s               2    7[COMRAM] PTR const unsigned char 
 11551 ;;		 -> STR_21(7), STR_20(7), STR_19(7), STR_11(4), 
 11552 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
 11553 ;;		 -> STR_6(4), STR_5(4), STR_4(4), STR_3(4), 
 11554 ;; Auto vars:     Size  Location     Type
 11555 ;;  n               2   20[COMRAM] int 
 11556 ;;  neg             2   13[COMRAM] int 
 11557 ;; Return value:  Size  Location     Type
 11558 ;;                  2    7[COMRAM] int 
 11559 ;; Registers used:
 11560 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11561 ;; Tracked objects:
 11562 ;;		On entry : 0/0
 11563 ;;		On exit  : 0/0
 11564 ;;		Unchanged: 0/0
 11565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11566 ;;      Params:         2       0       0       0       0       0       0       0       0
 11567 ;;      Locals:         9       0       0       0       0       0       0       0       0
 11568 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11569 ;;      Totals:        15       0       0       0       0       0       0       0       0
 11570 ;;Total ram usage:       15 bytes
 11571 ;; Hardware stack levels used: 1
 11572 ;; Hardware stack levels required when called: 1
 11573 ;; This function calls:
 11574 ;;		___wmul
 11575 ;;		_isdigit
 11576 ;;		_isspace
 11577 ;; This function is called by:
 11578 ;;		_vfpfcnvrt
 11579 ;; This function uses a non-reentrant model
 11580 ;;
 11581                           
 11582                           	psect	text54
 11583  00333E                     __ptext54:
 11584                           	callstack 0
 11585  00333E                     _atoi:
 11586                           	callstack 25
 11587  00333E  0E00               	movlw	0
 11588  003340  6E16               	movwf	(atoi@n+1)^0,c
 11589  003342  0E00               	movlw	0
 11590  003344  6E15               	movwf	atoi@n^0,c
 11591  003346  0E00               	movlw	0
 11592  003348  6E0F               	movwf	(atoi@neg+1)^0,c
 11593  00334A  0E00               	movlw	0
 11594  00334C  6E0E               	movwf	atoi@neg^0,c
 11595  00334E  EFAB  F019         	goto	l4864
 11596  003352                     l4862:
 11597  003352  4A08               	infsnz	atoi@s^0,f,c
 11598  003354  2A09               	incf	(atoi@s+1)^0,f,c
 11599  003356                     l4864:
 11600  003356  0E01               	movlw	1
 11601  003358  6E14               	movwf	_atoi$1527^0,c
 11602  00335A  C008  FFF6         	movff	atoi@s,tblptrl
 11603  00335E  C009  FFF7         	movff	atoi@s+1,tblptrh
 11604  003362                     	if	0	;tblptru may be non-zero
 11605  003362                     	endif
 11606  003362                     	if	0	;tblptru may be non-zero
 11607  003362                     	endif
 11608  003362  0008               	tblrd		*
 11609  003364  50F5               	movf	tablat,w,c
 11610  003366  0A20               	xorlw	32
 11611  003368  B4D8               	btfsc	status,2,c
 11612  00336A  EFB9  F019         	goto	u5361
 11613  00336E  EFBB  F019         	goto	u5360
 11614  003372                     u5361:
 11615  003372  EFD8  F019         	goto	l4872
 11616  003376                     u5360:
 11617  003376  0EF7               	movlw	247
 11618  003378  6E0A               	movwf	??_atoi^0,c
 11619  00337A  0EFF               	movlw	255
 11620  00337C  6E0B               	movwf	(??_atoi+1)^0,c
 11621  00337E  C008  FFF6         	movff	atoi@s,tblptrl
 11622  003382  C009  FFF7         	movff	atoi@s+1,tblptrh
 11623  003386                     	if	0	;tblptru may be non-zero
 11624  003386                     	endif
 11625  003386                     	if	0	;tblptru may be non-zero
 11626  003386                     	endif
 11627  003386  0008               	tblrd		*
 11628  003388  50F5               	movf	tablat,w,c
 11629  00338A  6E0C               	movwf	(??_atoi+2)^0,c
 11630  00338C  6A0D               	clrf	(??_atoi+3)^0,c
 11631  00338E  500A               	movf	??_atoi^0,w,c
 11632  003390  260C               	addwf	(??_atoi+2)^0,f,c
 11633  003392  500B               	movf	(??_atoi+1)^0,w,c
 11634  003394  220D               	addwfc	(??_atoi+3)^0,f,c
 11635  003396  500D               	movf	(??_atoi+3)^0,w,c
 11636  003398  E109               	bnz	u5370
 11637  00339A  0E05               	movlw	5
 11638  00339C  5C0C               	subwf	(??_atoi+2)^0,w,c
 11639  00339E  A0D8               	btfss	status,0,c
 11640  0033A0  EFD4  F019         	goto	u5371
 11641  0033A4  EFD6  F019         	goto	u5370
 11642  0033A8                     u5371:
 11643  0033A8  EFD8  F019         	goto	l4872
 11644  0033AC                     u5370:
 11645  0033AC  0E00               	movlw	0
 11646  0033AE  6E14               	movwf	_atoi$1527^0,c
 11647  0033B0                     l4872:
 11648  0033B0  C014  F010         	movff	_atoi$1527,_atoi$1526
 11649  0033B4  6A11               	clrf	(_atoi$1526+1)^0,c
 11650  0033B6  5010               	movf	_atoi$1526^0,w,c
 11651  0033B8  1011               	iorwf	(_atoi$1526+1)^0,w,c
 11652  0033BA  A4D8               	btfss	status,2,c
 11653  0033BC  EFE2  F019         	goto	u5381
 11654  0033C0  EFE4  F019         	goto	u5380
 11655  0033C4                     u5381:
 11656  0033C4  EFA9  F019         	goto	l4862
 11657  0033C8                     u5380:
 11658  0033C8  EFEE  F019         	goto	l4882
 11659  0033CC                     l4878:
 11660  0033CC  0E00               	movlw	0
 11661  0033CE  6E0F               	movwf	(atoi@neg+1)^0,c
 11662  0033D0  0E01               	movlw	1
 11663  0033D2  6E0E               	movwf	atoi@neg^0,c
 11664  0033D4                     l4880:
 11665  0033D4  4A08               	infsnz	atoi@s^0,f,c
 11666  0033D6  2A09               	incf	(atoi@s+1)^0,f,c
 11667  0033D8  EF23  F01A         	goto	l4888
 11668  0033DC                     l4882:
 11669  0033DC  C008  FFF6         	movff	atoi@s,tblptrl
 11670  0033E0  C009  FFF7         	movff	atoi@s+1,tblptrh
 11671  0033E4                     	if	0	;tblptru may be non-zero
 11672  0033E4                     	endif
 11673  0033E4                     	if	0	;tblptru may be non-zero
 11674  0033E4                     	endif
 11675  0033E4  0008               	tblrd		*
 11676  0033E6  50F5               	movf	tablat,w,c
 11677  0033E8  6E0A               	movwf	??_atoi^0,c
 11678  0033EA  6A0B               	clrf	(??_atoi+1)^0,c
 11679                           
 11680                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11681                           ; Switch size 1, requested type "simple"
 11682                           ; Number of cases is 1, Range of values is 0 to 0
 11683                           ; switch strategies available:
 11684                           ; Name         Instructions Cycles
 11685                           ; simple_byte            4     3 (average)
 11686                           ;	Chosen strategy is simple_byte
 11687  0033EC  500B               	movf	(??_atoi+1)^0,w,c
 11688  0033EE  0A00               	xorlw	0	; case 0
 11689  0033F0  B4D8               	btfsc	status,2,c
 11690  0033F2  EFFD  F019         	goto	l5722
 11691  0033F6  EF23  F01A         	goto	l4888
 11692  0033FA                     l5722:
 11693                           
 11694                           ; Switch size 1, requested type "simple"
 11695                           ; Number of cases is 2, Range of values is 43 to 45
 11696                           ; switch strategies available:
 11697                           ; Name         Instructions Cycles
 11698                           ; simple_byte            7     4 (average)
 11699                           ;	Chosen strategy is simple_byte
 11700  0033FA  500A               	movf	??_atoi^0,w,c
 11701  0033FC  0A2B               	xorlw	43	; case 43
 11702  0033FE  B4D8               	btfsc	status,2,c
 11703  003400  EFEA  F019         	goto	l4880
 11704  003404  0A06               	xorlw	6	; case 45
 11705  003406  B4D8               	btfsc	status,2,c
 11706  003408  EFE6  F019         	goto	l4878
 11707  00340C  EF23  F01A         	goto	l4888
 11708  003410                     l4884:
 11709  003410  C015  F001         	movff	atoi@n,___wmul@multiplier
 11710  003414  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11711  003418  0E00               	movlw	0
 11712  00341A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11713  00341C  0E0A               	movlw	10
 11714  00341E  6E03               	movwf	___wmul@multiplicand^0,c
 11715  003420  ECAE  F024         	call	___wmul	;wreg free
 11716  003424  C008  FFF6         	movff	atoi@s,tblptrl
 11717  003428  C009  FFF7         	movff	atoi@s+1,tblptrh
 11718  00342C                     	if	0	;tblptru may be non-zero
 11719  00342C                     	endif
 11720  00342C                     	if	0	;tblptru may be non-zero
 11721  00342C                     	endif
 11722  00342C  0008               	tblrd		*
 11723  00342E  50F5               	movf	tablat,w,c
 11724  003430  5E01               	subwf	?___wmul^0,f,c
 11725  003432  0E00               	movlw	0
 11726  003434  5A02               	subwfb	(?___wmul+1)^0,f,c
 11727  003436  0E30               	movlw	48
 11728  003438  2401               	addwf	?___wmul^0,w,c
 11729  00343A  6E15               	movwf	atoi@n^0,c
 11730  00343C  0E00               	movlw	0
 11731  00343E  2002               	addwfc	(?___wmul+1)^0,w,c
 11732  003440  6E16               	movwf	(atoi@n+1)^0,c
 11733  003442  EFEA  F019         	goto	l4880
 11734  003446                     l4888:
 11735  003446  0ED0               	movlw	208
 11736  003448  6E0A               	movwf	??_atoi^0,c
 11737  00344A  0EFF               	movlw	255
 11738  00344C  6E0B               	movwf	(??_atoi+1)^0,c
 11739  00344E  C008  FFF6         	movff	atoi@s,tblptrl
 11740  003452  C009  FFF7         	movff	atoi@s+1,tblptrh
 11741  003456                     	if	0	;tblptru may be non-zero
 11742  003456                     	endif
 11743  003456                     	if	0	;tblptru may be non-zero
 11744  003456                     	endif
 11745  003456  0008               	tblrd		*
 11746  003458  50F5               	movf	tablat,w,c
 11747  00345A  6E0C               	movwf	(??_atoi+2)^0,c
 11748  00345C  6A0D               	clrf	(??_atoi+3)^0,c
 11749  00345E  500A               	movf	??_atoi^0,w,c
 11750  003460  260C               	addwf	(??_atoi+2)^0,f,c
 11751  003462  500B               	movf	(??_atoi+1)^0,w,c
 11752  003464  220D               	addwfc	(??_atoi+3)^0,f,c
 11753  003466  500D               	movf	(??_atoi+3)^0,w,c
 11754  003468  E10A               	bnz	u5390
 11755  00346A  0E0A               	movlw	10
 11756  00346C  5C0C               	subwf	(??_atoi+2)^0,w,c
 11757  00346E  A0D8               	btfss	status,0,c
 11758  003470  EF3C  F01A         	goto	u5391
 11759  003474  EF3F  F01A         	goto	u5390
 11760  003478                     u5391:
 11761  003478  0E01               	movlw	1
 11762  00347A  EF40  F01A         	goto	u5400
 11763  00347E                     u5390:
 11764  00347E  0E00               	movlw	0
 11765  003480                     u5400:
 11766  003480  6E12               	movwf	_atoi$1528^0,c
 11767  003482  6A13               	clrf	(_atoi$1528+1)^0,c
 11768  003484  5012               	movf	_atoi$1528^0,w,c
 11769  003486  1013               	iorwf	(_atoi$1528+1)^0,w,c
 11770  003488  A4D8               	btfss	status,2,c
 11771  00348A  EF49  F01A         	goto	u5411
 11772  00348E  EF4B  F01A         	goto	u5410
 11773  003492                     u5411:
 11774  003492  EF08  F01A         	goto	l4884
 11775  003496                     u5410:
 11776  003496  500E               	movf	atoi@neg^0,w,c
 11777  003498  100F               	iorwf	(atoi@neg+1)^0,w,c
 11778  00349A  A4D8               	btfss	status,2,c
 11779  00349C  EF52  F01A         	goto	u5421
 11780  0034A0  EF54  F01A         	goto	u5420
 11781  0034A4                     u5421:
 11782  0034A4  EF62  F01A         	goto	l1448
 11783  0034A8                     u5420:
 11784  0034A8  C015  F00A         	movff	atoi@n,??_atoi
 11785  0034AC  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11786  0034B0  1E0A               	comf	??_atoi^0,f,c
 11787  0034B2  1E0B               	comf	(??_atoi+1)^0,f,c
 11788  0034B4  4A0A               	infsnz	??_atoi^0,f,c
 11789  0034B6  2A0B               	incf	(??_atoi+1)^0,f,c
 11790  0034B8  C00A  F008         	movff	??_atoi,?_atoi
 11791  0034BC  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11792  0034C0  EF66  F01A         	goto	l1451
 11793  0034C4                     l1448:
 11794  0034C4  C015  F008         	movff	atoi@n,?_atoi
 11795  0034C8  C016  F009         	movff	atoi@n+1,?_atoi+1
 11796  0034CC                     l1451:
 11797  0034CC  0012               	return		;funcret
 11798  0034CE                     __end_of_atoi:
 11799                           	callstack 0
 11800                           
 11801 ;; *************** function _isspace *****************
 11802 ;; Defined at:
 11803 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 11804 ;; Parameters:    Size  Location     Type
 11805 ;;  c               2    0[COMRAM] int 
 11806 ;; Auto vars:     Size  Location     Type
 11807 ;;		None
 11808 ;; Return value:  Size  Location     Type
 11809 ;;                  2    0[COMRAM] int 
 11810 ;; Registers used:
 11811 ;;		wreg, status,2, status,0
 11812 ;; Tracked objects:
 11813 ;;		On entry : 0/0
 11814 ;;		On exit  : 0/0
 11815 ;;		Unchanged: 0/0
 11816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11817 ;;      Params:         2       0       0       0       0       0       0       0       0
 11818 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11819 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11820 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11821 ;;Total ram usage:        7 bytes
 11822 ;; Hardware stack levels used: 1
 11823 ;; This function calls:
 11824 ;;		Nothing
 11825 ;; This function is called by:
 11826 ;;		_atoi
 11827 ;; This function uses a non-reentrant model
 11828 ;;
 11829                           
 11830                           	psect	text55
 11831  0043FE                     __ptext55:
 11832                           	callstack 0
 11833  0043FE                     _isspace:
 11834                           	callstack 25
 11835  0043FE  0E01               	movlw	1
 11836  004400  6E07               	movwf	_isspace$1566^0,c
 11837  004402  0E20               	movlw	32
 11838  004404  1801               	xorwf	isspace@c^0,w,c
 11839  004406  1002               	iorwf	(isspace@c+1)^0,w,c
 11840  004408  B4D8               	btfsc	status,2,c
 11841  00440A  EF09  F022         	goto	u4601
 11842  00440E  EF0B  F022         	goto	u4600
 11843  004412                     u4601:
 11844  004412  EF24  F022         	goto	l4464
 11845  004416                     u4600:
 11846  004416  0EF7               	movlw	247
 11847  004418  6E03               	movwf	??_isspace^0,c
 11848  00441A  0EFF               	movlw	255
 11849  00441C  6E04               	movwf	(??_isspace+1)^0,c
 11850  00441E  C001  F005         	movff	isspace@c,??_isspace+2
 11851  004422  C002  F006         	movff	isspace@c+1,??_isspace+3
 11852  004426  5003               	movf	??_isspace^0,w,c
 11853  004428  2605               	addwf	(??_isspace+2)^0,f,c
 11854  00442A  5004               	movf	(??_isspace+1)^0,w,c
 11855  00442C  2206               	addwfc	(??_isspace+3)^0,f,c
 11856  00442E  5006               	movf	(??_isspace+3)^0,w,c
 11857  004430  E109               	bnz	u4610
 11858  004432  0E05               	movlw	5
 11859  004434  5C05               	subwf	(??_isspace+2)^0,w,c
 11860  004436  A0D8               	btfss	status,0,c
 11861  004438  EF20  F022         	goto	u4611
 11862  00443C  EF22  F022         	goto	u4610
 11863  004440                     u4611:
 11864  004440  EF24  F022         	goto	l4464
 11865  004444                     u4610:
 11866  004444  0E00               	movlw	0
 11867  004446  6E07               	movwf	_isspace$1566^0,c
 11868  004448                     l4464:
 11869  004448  C007  F001         	movff	_isspace$1566,?_isspace
 11870  00444C  6A02               	clrf	(?_isspace+1)^0,c
 11871  00444E  0012               	return		;funcret
 11872  004450                     __end_of_isspace:
 11873                           	callstack 0
 11874                           
 11875 ;; *************** function _isdigit *****************
 11876 ;; Defined at:
 11877 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;  c               2    0[COMRAM] int 
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;		None
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  2    0[COMRAM] int 
 11884 ;; Registers used:
 11885 ;;		wreg, status,2, status,0
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11891 ;;      Params:         2       0       0       0       0       0       0       0       0
 11892 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11893 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11894 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11895 ;;Total ram usage:        6 bytes
 11896 ;; Hardware stack levels used: 1
 11897 ;; This function calls:
 11898 ;;		Nothing
 11899 ;; This function is called by:
 11900 ;;		_vfpfcnvrt
 11901 ;;		_atoi
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           	psect	text56
 11906  0047F8                     __ptext56:
 11907                           	callstack 0
 11908  0047F8                     _isdigit:
 11909                           	callstack 26
 11910  0047F8  0ED0               	movlw	208
 11911  0047FA  6E03               	movwf	??_isdigit^0,c
 11912  0047FC  0EFF               	movlw	255
 11913  0047FE  6E04               	movwf	(??_isdigit+1)^0,c
 11914  004800  C001  F005         	movff	isdigit@c,??_isdigit+2
 11915  004804  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11916  004808  5003               	movf	??_isdigit^0,w,c
 11917  00480A  2605               	addwf	(??_isdigit+2)^0,f,c
 11918  00480C  5004               	movf	(??_isdigit+1)^0,w,c
 11919  00480E  2206               	addwfc	(??_isdigit+3)^0,f,c
 11920  004810  5006               	movf	(??_isdigit+3)^0,w,c
 11921  004812  E10A               	bnz	u4580
 11922  004814  0E0A               	movlw	10
 11923  004816  5C05               	subwf	(??_isdigit+2)^0,w,c
 11924  004818  A0D8               	btfss	status,0,c
 11925  00481A  EF11  F024         	goto	u4581
 11926  00481E  EF14  F024         	goto	u4580
 11927  004822                     u4581:
 11928  004822  0E01               	movlw	1
 11929  004824  EF15  F024         	goto	u4590
 11930  004828                     u4580:
 11931  004828  0E00               	movlw	0
 11932  00482A                     u4590:
 11933  00482A  6E01               	movwf	?_isdigit^0,c
 11934  00482C  6A02               	clrf	(?_isdigit+1)^0,c
 11935  00482E  0012               	return		;funcret
 11936  004830                     __end_of_isdigit:
 11937                           	callstack 0
 11938                           
 11939 ;; *************** function ___wmul *****************
 11940 ;; Defined at:
 11941 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 11942 ;; Parameters:    Size  Location     Type
 11943 ;;  multiplier      2    0[COMRAM] unsigned int 
 11944 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11945 ;; Auto vars:     Size  Location     Type
 11946 ;;  product         2    4[COMRAM] unsigned int 
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  2    0[COMRAM] unsigned int 
 11949 ;; Registers used:
 11950 ;;		wreg, status,2, status,0, prodl, prodh
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11956 ;;      Params:         4       0       0       0       0       0       0       0       0
 11957 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11959 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11960 ;;Total ram usage:        6 bytes
 11961 ;; Hardware stack levels used: 1
 11962 ;; This function calls:
 11963 ;;		Nothing
 11964 ;; This function is called by:
 11965 ;;		_atoi
 11966 ;; This function uses a non-reentrant model
 11967 ;;
 11968                           
 11969                           	psect	text57
 11970  00495C                     __ptext57:
 11971                           	callstack 0
 11972  00495C                     ___wmul:
 11973                           	callstack 25
 11974  00495C  5001               	movf	___wmul@multiplier^0,w,c
 11975  00495E  0203               	mulwf	___wmul@multiplicand^0,c
 11976  004960  CFF3 F005          	movff	prodl,___wmul@product
 11977  004964  CFF4 F006          	movff	prodh,___wmul@product+1
 11978  004968  5001               	movf	___wmul@multiplier^0,w,c
 11979  00496A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11980  00496C  50F3               	movf	243,w,c
 11981  00496E  2606               	addwf	(___wmul@product+1)^0,f,c
 11982  004970  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11983  004972  0203               	mulwf	___wmul@multiplicand^0,c
 11984  004974  50F3               	movf	243,w,c
 11985  004976  2606               	addwf	(___wmul@product+1)^0,f,c
 11986  004978  C005  F001         	movff	___wmul@product,?___wmul
 11987  00497C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11988  004980  0012               	return		;funcret
 11989  004982                     __end_of___wmul:
 11990                           	callstack 0
 11991                           
 11992 ;; *************** function _LCD_String_xy *****************
 11993 ;; Defined at:
 11994 ;;		line 124 in file "LCD_caracter.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;  row             1    wreg     unsigned char 
 11997 ;;  pos             1   10[COMRAM] unsigned char 
 11998 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 11999 ;;		 -> Stemp(20), RTC_Calendario@date(10), RTC_Calendario@hours(10), STR_2(3), 
 12000 ;;		 -> STR_1(3), 
 12001 ;; Auto vars:     Size  Location     Type
 12002 ;;  row             1   13[COMRAM] unsigned char 
 12003 ;;  location        1   14[COMRAM] unsigned char 
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  1    wreg      void 
 12006 ;; Registers used:
 12007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12008 ;; Tracked objects:
 12009 ;;		On entry : 0/0
 12010 ;;		On exit  : 0/0
 12011 ;;		Unchanged: 0/0
 12012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12013 ;;      Params:         3       0       0       0       0       0       0       0       0
 12014 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12015 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12016 ;;      Totals:         5       0       0       0       0       0       0       0       0
 12017 ;;Total ram usage:        5 bytes
 12018 ;; Hardware stack levels used: 1
 12019 ;; Hardware stack levels required when called: 3
 12020 ;; This function calls:
 12021 ;;		_LCD_Command
 12022 ;;		_LCD_String
 12023 ;; This function is called by:
 12024 ;;		_RTC_Calendario
 12025 ;;		_Sunny_State
 12026 ;;		_Cloudy_State
 12027 ;;		_Rainy_State
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text58
 12032  00469A                     __ptext58:
 12033                           	callstack 0
 12034  00469A                     _LCD_String_xy:
 12035                           	callstack 26
 12036                           
 12037                           ;incstack = 0
 12038                           ;LCD_String_xy@row stored from wreg
 12039  00469A  6E0E               	movwf	LCD_String_xy@row^0,c
 12040  00469C                     
 12041                           ;LCD_caracter.c: 127:     if(row<=1)
 12042  00469C  0E02               	movlw	2
 12043  00469E  600E               	cpfslt	LCD_String_xy@row^0,c
 12044  0046A0  EF54  F023         	goto	u5941
 12045  0046A4  EF56  F023         	goto	u5940
 12046  0046A8                     u5941:
 12047  0046A8  EF5F  F023         	goto	l5290
 12048  0046AC                     u5940:
 12049  0046AC                     
 12050                           ;LCD_caracter.c: 128:     {;LCD_caracter.c: 129:         location=(0x80) | ((pos) & 0x0f
      +                          );
 12051  0046AC  500B               	movf	LCD_String_xy@pos^0,w,c
 12052  0046AE  0B0F               	andlw	15
 12053  0046B0  0980               	iorlw	128
 12054  0046B2  6E0F               	movwf	LCD_String_xy@location^0,c
 12055  0046B4                     
 12056                           ;LCD_caracter.c: 130:         LCD_Command(location);
 12057  0046B4  500F               	movf	LCD_String_xy@location^0,w,c
 12058  0046B6  EC50  F022         	call	_LCD_Command
 12059                           
 12060                           ;LCD_caracter.c: 131:     }
 12061  0046BA  EF66  F023         	goto	l5294
 12062  0046BE                     l5290:
 12063                           
 12064                           ;LCD_caracter.c: 133:     {;LCD_caracter.c: 134:         location=(0xC0) | ((pos) & 0x0f
      +                          );
 12065  0046BE  500B               	movf	LCD_String_xy@pos^0,w,c
 12066  0046C0  0B0F               	andlw	15
 12067  0046C2  09C0               	iorlw	192
 12068  0046C4  6E0F               	movwf	LCD_String_xy@location^0,c
 12069  0046C6                     
 12070                           ;LCD_caracter.c: 135:         LCD_Command(location);
 12071  0046C6  500F               	movf	LCD_String_xy@location^0,w,c
 12072  0046C8  EC50  F022         	call	_LCD_Command
 12073  0046CC                     l5294:
 12074                           
 12075                           ;LCD_caracter.c: 139:     LCD_String(msg);
 12076  0046CC  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 12077  0046D0  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 12078  0046D4  ECF2  F020         	call	_LCD_String	;wreg free
 12079  0046D8  0012               	return		;funcret
 12080  0046DA                     __end_of_LCD_String_xy:
 12081                           	callstack 0
 12082                           
 12083 ;; *************** function _LCD_String *****************
 12084 ;; Defined at:
 12085 ;;		line 101 in file "LCD_caracter.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 12088 ;;		 -> Stemp(20), STR_18(4), STR_17(4), STR_16(4), 
 12089 ;;		 -> STR_15(4), STR_14(4), STR_13(4), STR_12(4), 
 12090 ;;		 -> RTC_Calendario@year(10), RTC_Calendario@month(10), RTC_Calendario@date(10), RTC_Calendario@hours(10), 
 12091 ;;		 -> RTC_Calendario@mins(10), RTC_Calendario@secs(10), STR_2(3), STR_1(3), 
 12092 ;; Auto vars:     Size  Location     Type
 12093 ;;		None
 12094 ;; Return value:  Size  Location     Type
 12095 ;;                  1    wreg      void 
 12096 ;; Registers used:
 12097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12098 ;; Tracked objects:
 12099 ;;		On entry : 0/0
 12100 ;;		On exit  : 0/0
 12101 ;;		Unchanged: 0/0
 12102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12103 ;;      Params:         2       0       0       0       0       0       0       0       0
 12104 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12105 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12106 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12107 ;;Total ram usage:        2 bytes
 12108 ;; Hardware stack levels used: 1
 12109 ;; Hardware stack levels required when called: 2
 12110 ;; This function calls:
 12111 ;;		_LCD_Char
 12112 ;; This function is called by:
 12113 ;;		_LCD_String_xy
 12114 ;;		_RTC_Calendario
 12115 ;; This function uses a non-reentrant model
 12116 ;;
 12117                           
 12118                           	psect	text59
 12119  0041E4                     __ptext59:
 12120                           	callstack 0
 12121  0041E4                     _LCD_String:
 12122                           	callstack 26
 12123  0041E4                     
 12124                           ;LCD_caracter.c: 101: void LCD_String(const char *msg);LCD_caracter.c: 102: {;LCD_caract
      +                          er.c: 103:  while((*msg)!=0)
 12125  0041E4  EF08  F021         	goto	l5136
 12126  0041E8                     l5132:
 12127                           
 12128                           ;LCD_caracter.c: 104:  {;LCD_caracter.c: 105:    LCD_Char(*msg);
 12129  0041E8  C009  FFF6         	movff	LCD_String@msg,tblptrl
 12130  0041EC  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 12131  0041F0  6AF8               	clrf	tblptru,c
 12132  0041F2  0E07               	movlw	(high __ramtop+-1)
 12133  0041F4  64F7               	cpfsgt	tblptrh,c
 12134  0041F6  D003               	bra	u5707
 12135  0041F8  0008               	tblrd		*
 12136  0041FA  50F5               	movf	tablat,w,c
 12137  0041FC  D005               	bra	u5700
 12138  0041FE                     u5707:
 12139  0041FE  CFF6 FFE1          	movff	tblptrl,fsr1l
 12140  004202  CFF7 FFE2          	movff	tblptrh,fsr1h
 12141  004206  50E7               	movf	indf1,w,c
 12142  004208                     u5700:
 12143  004208  EC76  F022         	call	_LCD_Char
 12144  00420C                     
 12145                           ;LCD_caracter.c: 106:    msg++;
 12146  00420C  4A09               	infsnz	LCD_String@msg^0,f,c
 12147  00420E  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 12148  004210                     l5136:
 12149                           
 12150                           ;LCD_caracter.c: 103:  while((*msg)!=0)
 12151  004210  C009  FFF6         	movff	LCD_String@msg,tblptrl
 12152  004214  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 12153  004218  6AF8               	clrf	tblptru,c
 12154  00421A  0E07               	movlw	(high __ramtop+-1)
 12155  00421C  64F7               	cpfsgt	tblptrh,c
 12156  00421E  D003               	bra	u5717
 12157  004220  0008               	tblrd		*
 12158  004222  50F5               	movf	tablat,w,c
 12159  004224  D005               	bra	u5710
 12160  004226                     u5717:
 12161  004226  CFF6 FFE1          	movff	tblptrl,fsr1l
 12162  00422A  CFF7 FFE2          	movff	tblptrh,fsr1h
 12163  00422E  50E7               	movf	indf1,w,c
 12164  004230                     u5710:
 12165  004230  0900               	iorlw	0
 12166  004232  A4D8               	btfss	status,2,c
 12167  004234  EF1E  F021         	goto	u5721
 12168  004238  EF20  F021         	goto	u5720
 12169  00423C                     u5721:
 12170  00423C  EFF4  F020         	goto	l5132
 12171  004240                     u5720:
 12172  004240  0012               	return		;funcret
 12173  004242                     __end_of_LCD_String:
 12174                           	callstack 0
 12175                           
 12176 ;; *************** function _LCD_Custom_Char *****************
 12177 ;; Defined at:
 12178 ;;		line 174 in file "LCD_caracter.c"
 12179 ;; Parameters:    Size  Location     Type
 12180 ;;  loc             1    wreg     unsigned char 
 12181 ;;  msg             2    8[COMRAM] PTR unsigned char 
 12182 ;;		 -> character1(8), character3(8), character2(8), 
 12183 ;; Auto vars:     Size  Location     Type
 12184 ;;  loc             1   10[COMRAM] unsigned char 
 12185 ;;  i               1   11[COMRAM] unsigned char 
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1    wreg      void 
 12188 ;; Registers used:
 12189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12190 ;; Tracked objects:
 12191 ;;		On entry : 0/0
 12192 ;;		On exit  : 0/0
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12195 ;;      Params:         2       0       0       0       0       0       0       0       0
 12196 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12197 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12198 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12199 ;;Total ram usage:        4 bytes
 12200 ;; Hardware stack levels used: 1
 12201 ;; Hardware stack levels required when called: 2
 12202 ;; This function calls:
 12203 ;;		_LCD_Char
 12204 ;;		_LCD_Command
 12205 ;; This function is called by:
 12206 ;;		_Sunny_State
 12207 ;;		_Cloudy_State
 12208 ;;		_Rainy_State
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           	psect	text60
 12213  004582                     __ptext60:
 12214                           	callstack 0
 12215  004582                     _LCD_Custom_Char:
 12216                           	callstack 27
 12217                           
 12218                           ;incstack = 0
 12219                           ;LCD_Custom_Char@loc stored from wreg
 12220  004582  6E0B               	movwf	LCD_Custom_Char@loc^0,c
 12221  004584                     
 12222                           ;LCD_caracter.c: 174: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_
      +                          caracter.c: 175: {;LCD_caracter.c: 176:     unsigned char i;;LCD_caracter.c: 177:     if
      +                           (loc< 8 )
 12223  004584  0E08               	movlw	8
 12224  004586  600B               	cpfslt	LCD_Custom_Char@loc^0,c
 12225  004588  EFC8  F022         	goto	u5951
 12226  00458C  EFCA  F022         	goto	u5950
 12227  004590                     u5951:
 12228  004590  EFE4  F022         	goto	l115
 12229  004594                     u5950:
 12230  004594                     
 12231                           ;LCD_caracter.c: 178:     {;LCD_caracter.c: 179:      LCD_Command ( 0x40 +(loc* 8 ));
 12232  004594  500B               	movf	LCD_Custom_Char@loc^0,w,c
 12233  004596  0D08               	mullw	8
 12234  004598  50F3               	movf	243,w,c
 12235  00459A  0F40               	addlw	64
 12236  00459C  EC50  F022         	call	_LCD_Command
 12237  0045A0                     
 12238                           ;LCD_caracter.c: 180:        for (i= 0 ;i< 8 ;i++)
 12239  0045A0  0E00               	movlw	0
 12240  0045A2  6E0C               	movwf	LCD_Custom_Char@i^0,c
 12241  0045A4                     l5306:
 12242                           
 12243                           ;LCD_caracter.c: 181:            LCD_Char (msg[i]);
 12244  0045A4  500C               	movf	LCD_Custom_Char@i^0,w,c
 12245  0045A6  2409               	addwf	LCD_Custom_Char@msg^0,w,c
 12246  0045A8  6ED9               	movwf	fsr2l,c
 12247  0045AA  0E00               	movlw	0
 12248  0045AC  200A               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
 12249  0045AE  6EDA               	movwf	fsr2h,c
 12250  0045B0  50DF               	movf	indf2,w,c
 12251  0045B2  EC76  F022         	call	_LCD_Char
 12252  0045B6  2A0C               	incf	LCD_Custom_Char@i^0,f,c
 12253  0045B8  0E07               	movlw	7
 12254  0045BA  640C               	cpfsgt	LCD_Custom_Char@i^0,c
 12255  0045BC  EFE2  F022         	goto	u5961
 12256  0045C0  EFE4  F022         	goto	u5960
 12257  0045C4                     u5961:
 12258  0045C4  EFD2  F022         	goto	l5306
 12259  0045C8                     u5960:
 12260  0045C8                     l115:
 12261  0045C8  0012               	return		;funcret
 12262  0045CA                     __end_of_LCD_Custom_Char:
 12263                           	callstack 0
 12264                           
 12265 ;; *************** function _LCD_Command *****************
 12266 ;; Defined at:
 12267 ;;		line 48 in file "LCD_caracter.c"
 12268 ;; Parameters:    Size  Location     Type
 12269 ;;  cmd             1    wreg     unsigned char 
 12270 ;; Auto vars:     Size  Location     Type
 12271 ;;  cmd             1    7[COMRAM] unsigned char 
 12272 ;; Return value:  Size  Location     Type
 12273 ;;                  1    wreg      void 
 12274 ;; Registers used:
 12275 ;;		wreg, status,2, status,0, cstack
 12276 ;; Tracked objects:
 12277 ;;		On entry : 0/0
 12278 ;;		On exit  : 0/0
 12279 ;;		Unchanged: 0/0
 12280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12281 ;;      Params:         0       0       0       0       0       0       0       0       0
 12282 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12283 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12284 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12285 ;;Total ram usage:        2 bytes
 12286 ;; Hardware stack levels used: 1
 12287 ;; Hardware stack levels required when called: 1
 12288 ;; This function calls:
 12289 ;;		_LCD_MSdelay
 12290 ;; This function is called by:
 12291 ;;		_LCD_Init
 12292 ;;		_LCD_String_xy
 12293 ;;		_LCD_Clear
 12294 ;;		_LCD_Custom_Char
 12295 ;;		_Sunny_State
 12296 ;;		_Cloudy_State
 12297 ;;		_Rainy_State
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           	psect	text61
 12302  0044A0                     __ptext61:
 12303                           	callstack 0
 12304  0044A0                     _LCD_Command:
 12305                           	callstack 27
 12306                           
 12307                           ;incstack = 0
 12308                           ;LCD_Command@cmd stored from wreg
 12309  0044A0  6E08               	movwf	LCD_Command@cmd^0,c
 12310  0044A2                     
 12311                           ;LCD_caracter.c: 48: void LCD_Command(unsigned char cmd );LCD_caracter.c: 49: {;LCD_cara
      +                          cter.c: 50:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 12312  0044A2  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 12313  0044A6  0EF0               	movlw	240
 12314  0044A8  1607               	andwf	??_LCD_Command^0,f,c
 12315  0044AA  508C               	movf	140,w,c	;volatile
 12316  0044AC  0B0F               	andlw	15
 12317  0044AE  1007               	iorwf	??_LCD_Command^0,w,c
 12318  0044B0  6E8C               	movwf	140,c	;volatile
 12319  0044B2                     
 12320                           ;LCD_caracter.c: 51:  LATD0 = 0;
 12321  0044B2  908C               	bcf	3980,0,c	;volatile
 12322  0044B4                     
 12323                           ;LCD_caracter.c: 52:  LATD1 = 1;
 12324  0044B4  828C               	bsf	3980,1,c	;volatile
 12325  0044B6                     
 12326                           ;LCD_caracter.c: 53:  __nop();
 12327  0044B6  F000               	nop	
 12328  0044B8                     
 12329                           ;LCD_caracter.c: 54:  LATD1 = 0;
 12330  0044B8  928C               	bcf	3980,1,c	;volatile
 12331  0044BA                     
 12332                           ;LCD_caracter.c: 55:  LCD_MSdelay(1);
 12333  0044BA  0E00               	movlw	0
 12334  0044BC  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12335  0044BE  0E01               	movlw	1
 12336  0044C0  6E01               	movwf	LCD_MSdelay@val^0,c
 12337  0044C2  EC9C  F022         	call	_LCD_MSdelay	;wreg free
 12338  0044C6                     
 12339                           ;LCD_caracter.c: 56:     LATD = (LATD & 0x0f) | (cmd<<4);
 12340  0044C6  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 12341  0044CA  3A07               	swapf	??_LCD_Command^0,f,c
 12342  0044CC  0EF0               	movlw	240
 12343  0044CE  1607               	andwf	??_LCD_Command^0,f,c
 12344  0044D0  508C               	movf	140,w,c	;volatile
 12345  0044D2  0B0F               	andlw	15
 12346  0044D4  1007               	iorwf	??_LCD_Command^0,w,c
 12347  0044D6  6E8C               	movwf	140,c	;volatile
 12348  0044D8                     
 12349                           ;LCD_caracter.c: 57:  LATD1 = 1;
 12350  0044D8  828C               	bsf	3980,1,c	;volatile
 12351  0044DA                     
 12352                           ;LCD_caracter.c: 58:  __nop();
 12353  0044DA  F000               	nop	
 12354  0044DC                     
 12355                           ;LCD_caracter.c: 59:  LATD1 = 0;
 12356  0044DC  928C               	bcf	3980,1,c	;volatile
 12357                           
 12358                           ;LCD_caracter.c: 60:  LCD_MSdelay(3);
 12359  0044DE  0E00               	movlw	0
 12360  0044E0  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12361  0044E2  0E03               	movlw	3
 12362  0044E4  6E01               	movwf	LCD_MSdelay@val^0,c
 12363  0044E6  EC9C  F022         	call	_LCD_MSdelay	;wreg free
 12364  0044EA  0012               	return		;funcret
 12365  0044EC                     __end_of_LCD_Command:
 12366                           	callstack 0
 12367                           
 12368 ;; *************** function _LCD_Char *****************
 12369 ;; Defined at:
 12370 ;;		line 75 in file "LCD_caracter.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;  dat             1    wreg     unsigned char 
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;  dat             1    7[COMRAM] unsigned char 
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1    wreg      void 
 12377 ;; Registers used:
 12378 ;;		wreg, status,2, status,0, cstack
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/0
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12384 ;;      Params:         0       0       0       0       0       0       0       0       0
 12385 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12386 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12387 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12388 ;;Total ram usage:        2 bytes
 12389 ;; Hardware stack levels used: 1
 12390 ;; Hardware stack levels required when called: 1
 12391 ;; This function calls:
 12392 ;;		_LCD_MSdelay
 12393 ;; This function is called by:
 12394 ;;		_LCD_String
 12395 ;;		_LCD_Custom_Char
 12396 ;;		_Sunny_State
 12397 ;;		_Cloudy_State
 12398 ;;		_Rainy_State
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text62
 12403  0044EC                     __ptext62:
 12404                           	callstack 0
 12405  0044EC                     _LCD_Char:
 12406                           	callstack 26
 12407                           
 12408                           ;incstack = 0
 12409                           ;LCD_Char@dat stored from wreg
 12410  0044EC  6E08               	movwf	LCD_Char@dat^0,c
 12411  0044EE                     
 12412                           ;LCD_caracter.c: 75: void LCD_Char(unsigned char dat);LCD_caracter.c: 76: {;LCD_caracter
      +                          .c: 77:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 12413  0044EE  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12414  0044F2  0EF0               	movlw	240
 12415  0044F4  1607               	andwf	??_LCD_Char^0,f,c
 12416  0044F6  508C               	movf	140,w,c	;volatile
 12417  0044F8  0B0F               	andlw	15
 12418  0044FA  1007               	iorwf	??_LCD_Char^0,w,c
 12419  0044FC  6E8C               	movwf	140,c	;volatile
 12420  0044FE                     
 12421                           ;LCD_caracter.c: 78:  LATD0 = 1;
 12422  0044FE  808C               	bsf	3980,0,c	;volatile
 12423  004500                     
 12424                           ;LCD_caracter.c: 79:  LATD1 = 1;
 12425  004500  828C               	bsf	3980,1,c	;volatile
 12426  004502                     
 12427                           ;LCD_caracter.c: 80:  __nop();
 12428  004502  F000               	nop	
 12429  004504                     
 12430                           ;LCD_caracter.c: 81:  LATD1 = 0;
 12431  004504  928C               	bcf	3980,1,c	;volatile
 12432  004506                     
 12433                           ;LCD_caracter.c: 82:  LCD_MSdelay(1);
 12434  004506  0E00               	movlw	0
 12435  004508  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12436  00450A  0E01               	movlw	1
 12437  00450C  6E01               	movwf	LCD_MSdelay@val^0,c
 12438  00450E  EC9C  F022         	call	_LCD_MSdelay	;wreg free
 12439  004512                     
 12440                           ;LCD_caracter.c: 83:     LATD = (LATD & 0x0f) | (dat<<4);
 12441  004512  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 12442  004516  3A07               	swapf	??_LCD_Char^0,f,c
 12443  004518  0EF0               	movlw	240
 12444  00451A  1607               	andwf	??_LCD_Char^0,f,c
 12445  00451C  508C               	movf	140,w,c	;volatile
 12446  00451E  0B0F               	andlw	15
 12447  004520  1007               	iorwf	??_LCD_Char^0,w,c
 12448  004522  6E8C               	movwf	140,c	;volatile
 12449  004524                     
 12450                           ;LCD_caracter.c: 84:  LATD1 = 1;
 12451  004524  828C               	bsf	3980,1,c	;volatile
 12452  004526                     
 12453                           ;LCD_caracter.c: 85:  __nop();
 12454  004526  F000               	nop	
 12455  004528                     
 12456                           ;LCD_caracter.c: 86:  LATD1 = 0;
 12457  004528  928C               	bcf	3980,1,c	;volatile
 12458                           
 12459                           ;LCD_caracter.c: 87:  LCD_MSdelay(3);
 12460  00452A  0E00               	movlw	0
 12461  00452C  6E02               	movwf	(LCD_MSdelay@val+1)^0,c
 12462  00452E  0E03               	movlw	3
 12463  004530  6E01               	movwf	LCD_MSdelay@val^0,c
 12464  004532  EC9C  F022         	call	_LCD_MSdelay	;wreg free
 12465  004536  0012               	return		;funcret
 12466  004538                     __end_of_LCD_Char:
 12467                           	callstack 0
 12468                           
 12469 ;; *************** function _LCD_MSdelay *****************
 12470 ;; Defined at:
 12471 ;;		line 199 in file "LCD_caracter.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;  val             2    0[COMRAM] unsigned int 
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;  j               2    4[COMRAM] unsigned int 
 12476 ;;  i               2    2[COMRAM] unsigned int 
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  1    wreg      void 
 12479 ;; Registers used:
 12480 ;;		wreg, status,2, status,0
 12481 ;; Tracked objects:
 12482 ;;		On entry : 0/0
 12483 ;;		On exit  : 0/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12486 ;;      Params:         2       0       0       0       0       0       0       0       0
 12487 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12488 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12489 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12490 ;;Total ram usage:        6 bytes
 12491 ;; Hardware stack levels used: 1
 12492 ;; This function calls:
 12493 ;;		Nothing
 12494 ;; This function is called by:
 12495 ;;		_main
 12496 ;;		_LCD_Init
 12497 ;;		_LCD_Command
 12498 ;;		_LCD_Char
 12499 ;;		_LCD_Clear
 12500 ;;		_RTC_Calendario
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           	psect	text63
 12505  004538                     __ptext63:
 12506                           	callstack 0
 12507  004538                     _LCD_MSdelay:
 12508                           	callstack 26
 12509  004538                     
 12510                           ;LCD_caracter.c: 199: void LCD_MSdelay(unsigned int val);LCD_caracter.c: 200: {;LCD_cara
      +                          cter.c: 201:  unsigned int i,j;;LCD_caracter.c: 202:  for(i=0;i<val;i++)
 12511  004538  0E00               	movlw	0
 12512  00453A  6E04               	movwf	(LCD_MSdelay@i+1)^0,c
 12513  00453C  0E00               	movlw	0
 12514  00453E  6E03               	movwf	LCD_MSdelay@i^0,c
 12515  004540  EFB5  F022         	goto	l4482
 12516  004544                     l4470:
 12517                           
 12518                           ;LCD_caracter.c: 203:      for(j=0;j<165;j++);
 12519  004544  0E00               	movlw	0
 12520  004546  6E06               	movwf	(LCD_MSdelay@j+1)^0,c
 12521  004548  0E00               	movlw	0
 12522  00454A  6E05               	movwf	LCD_MSdelay@j^0,c
 12523  00454C                     l4476:
 12524  00454C  4A05               	infsnz	LCD_MSdelay@j^0,f,c
 12525  00454E  2A06               	incf	(LCD_MSdelay@j+1)^0,f,c
 12526  004550  5006               	movf	(LCD_MSdelay@j+1)^0,w,c
 12527  004552  E109               	bnz	u4620
 12528  004554  0EA5               	movlw	165
 12529  004556  5C05               	subwf	LCD_MSdelay@j^0,w,c
 12530  004558  A0D8               	btfss	status,0,c
 12531  00455A  EFB1  F022         	goto	u4621
 12532  00455E  EFB3  F022         	goto	u4620
 12533  004562                     u4621:
 12534  004562  EFA6  F022         	goto	l4476
 12535  004566                     u4620:
 12536  004566  4A03               	infsnz	LCD_MSdelay@i^0,f,c
 12537  004568  2A04               	incf	(LCD_MSdelay@i+1)^0,f,c
 12538  00456A                     l4482:
 12539  00456A  5001               	movf	LCD_MSdelay@val^0,w,c
 12540  00456C  5C03               	subwf	LCD_MSdelay@i^0,w,c
 12541  00456E  5002               	movf	(LCD_MSdelay@val+1)^0,w,c
 12542  004570  5804               	subwfb	(LCD_MSdelay@i+1)^0,w,c
 12543  004572  A0D8               	btfss	status,0,c
 12544  004574  EFBE  F022         	goto	u4631
 12545  004578  EFC0  F022         	goto	u4630
 12546  00457C                     u4631:
 12547  00457C  EFA2  F022         	goto	l4470
 12548  004580                     u4630:
 12549  004580  0012               	return		;funcret
 12550  004582                     __end_of_LCD_MSdelay:
 12551                           	callstack 0
 12552                           
 12553                           	psect	rparam
 12554  0000                     
 12555                           	psect	idloc
 12556                           
 12557                           ;Config register IDLOC0 @ 0x200000
 12558                           ;	unspecified, using default values
 12559  200000                     	org	2097152
 12560  200000  FF                 	db	255
 12561                           
 12562                           ;Config register IDLOC1 @ 0x200001
 12563                           ;	unspecified, using default values
 12564  200001                     	org	2097153
 12565  200001  FF                 	db	255
 12566                           
 12567                           ;Config register IDLOC2 @ 0x200002
 12568                           ;	unspecified, using default values
 12569  200002                     	org	2097154
 12570  200002  FF                 	db	255
 12571                           
 12572                           ;Config register IDLOC3 @ 0x200003
 12573                           ;	unspecified, using default values
 12574  200003                     	org	2097155
 12575  200003  FF                 	db	255
 12576                           
 12577                           ;Config register IDLOC4 @ 0x200004
 12578                           ;	unspecified, using default values
 12579  200004                     	org	2097156
 12580  200004  FF                 	db	255
 12581                           
 12582                           ;Config register IDLOC5 @ 0x200005
 12583                           ;	unspecified, using default values
 12584  200005                     	org	2097157
 12585  200005  FF                 	db	255
 12586                           
 12587                           ;Config register IDLOC6 @ 0x200006
 12588                           ;	unspecified, using default values
 12589  200006                     	org	2097158
 12590  200006  FF                 	db	255
 12591                           
 12592                           ;Config register IDLOC7 @ 0x200007
 12593                           ;	unspecified, using default values
 12594  200007                     	org	2097159
 12595  200007  FF                 	db	255
 12596                           
 12597                           	psect	config
 12598                           
 12599                           ;Config register CONFIG1L @ 0x300000
 12600                           ;	PLL Prescaler Selection bits
 12601                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12602                           ;	System Clock Postscaler Selection bits
 12603                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12604                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12605                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12606  300000                     	org	3145728
 12607  300000  00                 	db	0
 12608                           
 12609                           ;Config register CONFIG1H @ 0x300001
 12610                           ;	Oscillator Selection bits
 12611                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12612                           ;	Fail-Safe Clock Monitor Enable bit
 12613                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12614                           ;	Internal/External Oscillator Switchover bit
 12615                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12616  300001                     	org	3145729
 12617  300001  09                 	db	9
 12618                           
 12619                           ;Config register CONFIG2L @ 0x300002
 12620                           ;	Power-up Timer Enable bit
 12621                           ;	PWRT = ON, PWRT enabled
 12622                           ;	Brown-out Reset Enable bits
 12623                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12624                           ;	Brown-out Reset Voltage bits
 12625                           ;	BORV = 3, Minimum setting 2.05V
 12626                           ;	USB Voltage Regulator Enable bit
 12627                           ;	VREGEN = OFF, USB voltage regulator disabled
 12628  300002                     	org	3145730
 12629  300002  18                 	db	24
 12630                           
 12631                           ;Config register CONFIG2H @ 0x300003
 12632                           ;	Watchdog Timer Enable bit
 12633                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12634                           ;	Watchdog Timer Postscale Select bits
 12635                           ;	WDTPS = 32768, 1:32768
 12636  300003                     	org	3145731
 12637  300003  1E                 	db	30
 12638                           
 12639                           ; Padding undefined space
 12640  300004                     	org	3145732
 12641  300004  FF                 	db	255
 12642                           
 12643                           ;Config register CONFIG3H @ 0x300005
 12644                           ;	CCP2 MUX bit
 12645                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12646                           ;	PORTB A/D Enable bit
 12647                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12648                           ;	Low-Power Timer 1 Oscillator Enable bit
 12649                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12650                           ;	MCLR Pin Enable bit
 12651                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12652  300005                     	org	3145733
 12653  300005  81                 	db	129
 12654                           
 12655                           ;Config register CONFIG4L @ 0x300006
 12656                           ;	Stack Full/Underflow Reset Enable bit
 12657                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12658                           ;	Single-Supply ICSP Enable bit
 12659                           ;	LVP = OFF, Single-Supply ICSP disabled
 12660                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12661                           ;	ICPRT = OFF, ICPORT disabled
 12662                           ;	Extended Instruction Set Enable bit
 12663                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12664                           ;	Background Debugger Enable bit
 12665                           ;	DEBUG = 0x1, unprogrammed default
 12666  300006                     	org	3145734
 12667  300006  80                 	db	128
 12668                           
 12669                           ; Padding undefined space
 12670  300007                     	org	3145735
 12671  300007  FF                 	db	255
 12672                           
 12673                           ;Config register CONFIG5L @ 0x300008
 12674                           ;	Code Protection bit
 12675                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12676                           ;	Code Protection bit
 12677                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12678                           ;	Code Protection bit
 12679                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12680                           ;	Code Protection bit
 12681                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12682  300008                     	org	3145736
 12683  300008  0F                 	db	15
 12684                           
 12685                           ;Config register CONFIG5H @ 0x300009
 12686                           ;	Boot Block Code Protection bit
 12687                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12688                           ;	Data EEPROM Code Protection bit
 12689                           ;	CPD = OFF, Data EEPROM is not code-protected
 12690  300009                     	org	3145737
 12691  300009  C0                 	db	192
 12692                           
 12693                           ;Config register CONFIG6L @ 0x30000A
 12694                           ;	Write Protection bit
 12695                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12696                           ;	Write Protection bit
 12697                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12698                           ;	Write Protection bit
 12699                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12700                           ;	Write Protection bit
 12701                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12702  30000A                     	org	3145738
 12703  30000A  0F                 	db	15
 12704                           
 12705                           ;Config register CONFIG6H @ 0x30000B
 12706                           ;	Configuration Register Write Protection bit
 12707                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12708                           ;	Boot Block Write Protection bit
 12709                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12710                           ;	Data EEPROM Write Protection bit
 12711                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12712  30000B                     	org	3145739
 12713  30000B  E0                 	db	224
 12714                           
 12715                           ;Config register CONFIG7L @ 0x30000C
 12716                           ;	Table Read Protection bit
 12717                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12718                           ;	Table Read Protection bit
 12719                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12720                           ;	Table Read Protection bit
 12721                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12722                           ;	Table Read Protection bit
 12723                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12724  30000C                     	org	3145740
 12725  30000C  0F                 	db	15
 12726                           
 12727                           ;Config register CONFIG7H @ 0x30000D
 12728                           ;	Boot Block Table Read Protection bit
 12729                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12730  30000D                     	org	3145741
 12731  30000D  40                 	db	64
 12732                           tosu	equ	0xFFF
 12733                           tosh	equ	0xFFE
 12734                           tosl	equ	0xFFD
 12735                           stkptr	equ	0xFFC
 12736                           pclatu	equ	0xFFB
 12737                           pclath	equ	0xFFA
 12738                           pcl	equ	0xFF9
 12739                           tblptru	equ	0xFF8
 12740                           tblptrh	equ	0xFF7
 12741                           tblptrl	equ	0xFF6
 12742                           tablat	equ	0xFF5
 12743                           prodh	equ	0xFF4
 12744                           prodl	equ	0xFF3
 12745                           indf0	equ	0xFEF
 12746                           postinc0	equ	0xFEE
 12747                           postdec0	equ	0xFED
 12748                           preinc0	equ	0xFEC
 12749                           plusw0	equ	0xFEB
 12750                           fsr0h	equ	0xFEA
 12751                           fsr0l	equ	0xFE9
 12752                           wreg	equ	0xFE8
 12753                           indf1	equ	0xFE7
 12754                           postinc1	equ	0xFE6
 12755                           postdec1	equ	0xFE5
 12756                           preinc1	equ	0xFE4
 12757                           plusw1	equ	0xFE3
 12758                           fsr1h	equ	0xFE2
 12759                           fsr1l	equ	0xFE1
 12760                           bsr	equ	0xFE0
 12761                           indf2	equ	0xFDF
 12762                           postinc2	equ	0xFDE
 12763                           postdec2	equ	0xFDD
 12764                           preinc2	equ	0xFDC
 12765                           plusw2	equ	0xFDB
 12766                           fsr2h	equ	0xFDA
 12767                           fsr2l	equ	0xFD9
 12768                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    0
    Data        55
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    130     156
    BANK1           256     68     237
    BANK2           256      0      20
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_23(CODE[4]), STR_22(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1315_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), 
		 -> RTC_Calendario@hours(BANK1[10]), RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character3(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Stemp(BANK1[20]), STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[4]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> RTC_Calendario@year(BANK1[10]), RTC_Calendario@month(BANK1[10]), RTC_Calendario@date(BANK1[10]), RTC_Calendario@hours(BANK1[10]), 
		 -> RTC_Calendario@mins(BANK1[10]), RTC_Calendario@secs(BANK1[10]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _PlayCancion->_play
    _play->_delay_us
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Command->_LCD_MSdelay
    _LCD_Char->_LCD_MSdelay

Critical Paths under _main in BANK0

    _main->_RTC_Calendario
    _Sunny_State->_sprintf
    _Rainy_State->_sprintf
    _RTC_Calendario->_sprintf
    _Estados->_ReadADC
    _Cloudy_State->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_RTC_Calendario

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  202388
                                            126 BANK0      4     4      0
                       _Cloudy_State
                            _Estados
                           _I2C_Init
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                     _RTC_Calendario
                        _Rainy_State
                        _Sunny_State
 ---------------------------------------------------------------------------------
 (1) _Sunny_State                                          0     0      0   47583
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                        _PlayCancion
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _PlayCancion                                          2     2      0    2002
                                             18 COMRAM     2     2      0
                               _play
 ---------------------------------------------------------------------------------
 (3) _play                                                13     7      6    2002
                                              5 COMRAM    13     7      6
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Rainy_State                                          0     0      0   45581
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _RTC_Calendario                                      71    71      0   48540
                                            124 BANK0      2     2      0
                                              0 BANK1     68    68      0
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                        _LCD_MSdelay
                         _LCD_String
                      _LCD_String_xy
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             0     0      0    1444
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1444
                        _LCD_Command
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Estados                                              6     4      2   11492
                                              6 BANK0      6     4      2
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _ReadLUZ                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              6     4      2    8609
                                              0 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              4 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (1) _Cloudy_State                                         0     0      0   45581
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   38295
                                            108 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   36264
                                            100 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   35876
                                             68 BANK0     32    26      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5327
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   24672
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1020
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     541
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             68 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                             84 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             84 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2566
                                             68 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2310
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             43 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    3948
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    1853
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     2      2    1850
                                              8 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     744
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0     744
                                              6 COMRAM     2     2      0
                        _LCD_MSdelay
 ---------------------------------------------------------------------------------
 (5) _LCD_MSdelay                                          6     4      2     700
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cloudy_State
     _LCD_Char
       _LCD_MSdelay
     _LCD_Command
       _LCD_MSdelay
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ReadLUZ (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _Estados
     _ReadADC
       ___fladd
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
     _ReadLUZ
     ___flge
     ___xxtofl
   _I2C_Init
   _LCD_Clear
     _LCD_Command
     _LCD_MSdelay
   _LCD_Init
     _LCD_Command
     _LCD_MSdelay
   _LCD_MSdelay
   _RTC_Calendario
     _I2C_Init
     _I2C_Stop
     _LCD_Clear
     _LCD_Init
     _LCD_MSdelay
     _LCD_String
     _LCD_String_xy
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
       _I2C_Stop
       _I2C_Write
     _RTC_Read_Clock
       _I2C_Read
       _I2C_Repeated_Start
       _I2C_Start
       _I2C_Write
     _sprintf
   _Rainy_State
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
     _LCD_String_xy
     _sprintf
   _Sunny_State
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
     _LCD_String_xy
     _PlayCancion
       _play
         _delay_us
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      14       9        7.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     44      ED       7       92.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9C       5       97.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FC      20        0.0%
DATA                 0      0     1FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Oct 05 12:31:18 2021

                          ?_LCD_MSdelay 0001                            ___fldiv@aexp 0044  
                          ___fldiv@bexp 0043                                       _i 005F  
                    __size_of_I2C_Ready 0012                            ___fldiv@sign 003C  
                    __size_of_I2C_Start 002E                            ?_LCD_Command 0001  
                           _SSPSTATbits 000FC7                      __size_of_I2C_Write 0022  
                                    l92 44EA                                      l95 4536  
                                    l89 48FE                            ___awdiv@sign 0006  
                  __size_of_Sunny_State 005E                     ___wmul@multiplicand 0003  
                           ?_LCD_String 0009                         _LCD_Custom_Char 4582  
RTC_Read_Calendar@read_calendar_address 0004                                     l101 4240  
                                   l106 46D8                                     l123 4580  
                                   l115 45C8                                     l204 403A  
                                   l109 4A0C                                     l206 4048  
                                   l207 4064                                     l161 3868  
                                   l313 460E                                     l241 48CE  
                                   l163 3876                                     l164 392C  
                                   l420 4932                                     l316 4350  
                                   l252 3624                                     l413 4904  
                                   l422 4940                                     l415 4912  
                                   l431 49CE                                     l239 48AA  
                                   l503 4184                                     l512 4980  
                                   l424 495A                                     l328 2A22  
                                   l441 49EA                                     l417 492C  
                                   l433 49D0                                     l249 3D54  
                                   l506 43AA                                     l450 49E4  
                                   l444 49F8                                     l437 49A2  
                                   l429 49C0                                     l509 42F6  
                                   l390 474E                                     l447 49D6  
                                   l393 49BC                                     l385 471A  
                                   l387 4728                                     l396 4A0E  
                                   l389 4748                                     l398 4A1C  
                                   l743 3E18                                     l399 4A1E  
                                   l496 2F76                                     l809 372A  
                                   l771 3F72                                     l756 3EC8  
                                   l782 382E                                     l777 37E8  
                                   l786 47F6                                     _PEN 007E2A  
                                   _Day 0106                         __end_of_I2C_Ack 49FA  
                                   _pad 3BCC                                     _min 010A  
                                   _sec 010C                                     _luz 00EA  
                          ___awmod@sign 0006                                     wreg 000FE8  
                          ___flmul@aexp 0024                            ___flmul@bexp 0025  
                          ___flmul@sign 001F                            ___flmul@temp 002A  
                          ___flmul@prod 0026                             LCD_Char@dat 0008  
                          ___fltol@exp1 005E                                    l1040 1C9E  
                                  l1105 25D8                                    l1041 1C8C  
                                  l1130 2398                                    l1042 1C52  
                                  l1107 2650                                    l1108 263E  
                                  l1133 222A                                    l1126 2034  
                                  l1143 235A                                    l1135 22A2  
                                  l1136 2290                                    l1240 3C90  
                                  l1304 1076                                    l1057 1DB8  
                                  l1049 1F6E                                    l1066 1E88  
                                  l1082 4654                                    l1170 333C  
                                  l1067 1E76                                    l1235 3C12  
                                  l1340 2A64                                    l1181 32D4  
                                  l1094 2732                                    l1502 3BCA  
                                  l1510 4698                                    l1238 3C54  
                                  l1190 43FC                                    l1174 3278  
                                  l1167 31E0                                    l4000 25D6  
                                  l1096 2592                                    l1408 40BE  
                                  l1513 4A20                                    l1361 2C98  
                                  l1409 40C6                                    l4010 2636  
                                  l4002 25E8                                    l1258 14A0  
                                  l1338 2A5C                                    l1451 34CC  
                                  l1099 2556                                    l1419 3A2A  
                                  l1363 2CFC                                    l1347 2AFA  
                                  l4020 26A4                                    l4004 25F6  
                                  l4100 20D0                                    l1460 30CC  
                                  l1276 0C36                                    l1525 489C  
                                  l4030 270E                                    l4014 2660  
                                  l4022 26A8                                    l4006 25FA  
                                  l4110 2116                                    l4102 20DE  
                                  l1519 429C                                    l1448 34C4  
                                  l4200 3DA8                                    l4032 2712  
                                  l4024 26C2                                    l4016 266C  
                                  l4008 2608                                    l4120 2184  
                                  l4112 2130                                    l4104 20EA  
                                  l1544 4126                                    l1552 41DA  
                                  l1392 1AAE                                    l1473 482E  
                                  l1481 444E                                    l1457 3188  
                                  l1529 3B00                                    l1377 1594  
                                  l4210 3DE2                                    l4202 3DB0  
                                  l4034 2720                                    l4026 26D8  
                                  l4018 267A                                    l4130 221A  
                                  l4122 21AE                                    l4114 2140  
                                  l4106 20FA                                    l4050 1F8A  
                                  l5010 15C8                                    l5002 152E  
                                  l1539 411E                                    l1467 4714  
                                  l1563 4786                                    l4220 3E08  
                                  l4212 3DEA                                    l4204 3DB8  
                                  l4036 2726                                    l4028 26F2  
                                  l4140 225A                                    l4132 2228  
                                  l4124 21E4                                    l4116 215C  
                                  l4108 2106                                    l4060 1FC2  
                                  l4052 1F8C                                    l4300 47C0  
                                  l5020 165C                                    l5012 15D0  
                                  l5004 1582                                    l1557 41E2  
                                  l5110 44A2                                    l4222 3E10  
                                  l4214 3DEC                                    l4206 3DC6  
                                  l4230 3E2C                                    l4038 2728  
                                  l4150 22CC                                    l4142 2288  
                                  l4134 223A                                    l4126 21F2  
                                  l4118 2168                                    l4070 1FEE  
                                  l4062 1FD2                                    l4054 1F9C  
                                  l4046 1F70                                    l4302 47D6  
                                  l4310 363C                                    l5030 16E6  
                                  l5022 166A                                    l5014 15DE  
                                  l5006 15A2                                    l1487 47BE  
                                  l1399 190E                                    l5120 44BA  
                                  l5112 44B2                                    l4216 3DF2  
                                  l4208 3DCC                                    l4240 3E60  
                                  l4232 3E34                                    l4160 2342  
                                  l4152 22F6                                    l4136 2248  
                                  l4128 2210                                    l4080 2044  
                                  l4072 1FFE                                    l4064 1FD8  
                                  l4056 1FAC                                    l4048 1F7C  
                                  l4304 47E6                                    l4320 368C  
                                  l4400 40C8                                    l5040 177C  
                                  l5032 16F6                                    l5016 1602  
                                  l5008 15A4                                    l5122 44C6  
                                  l5114 44B4                                    l5130 41E4  
                                  l4218 3DF8                                    l4250 3E9C  
                                  l4242 3E68                                    l4234 3E38  
                                  l4226 3E1A                                    l4162 235E  
                                  l4170 2384                                    l4146 22B2  
                                  l4154 22FA                                    l4138 224C  
                                  l4090 207E                                    l4082 2054  
                                  l4074 200E                                    l4066 1FDE  
                                  l4058 1FBC                                    l4330 36B6  
                                  l4322 3690                                    l4314 3650  
                                  l4410 2F78                                    l5042 1792  
                                  l5050 17FC                                    l5034 1728  
                                  l5026 16B2                                    l5018 163C  
                                  l5210 31F0                                    l5202 49BE  
                                  l5124 44D8                                    l5116 44B6  
                                  l5300 45A0                                    l5132 41E8  
                                  l4252 3EA2                                    l4244 3E70  
                                  l4236 3E46                                    l4228 3E1E  
                                  l4172 2388                                    l4164 236E  
                                  l4156 2314                                    l4148 22BE  
                                  l4092 2094                                    l4076 201E  
                                  l4068 1FEC                                    l3700 1B36  
                                  l4340 36DE                                    l4332 36C0  
                                  l4324 369E                                    l4316 367A  
                                  l4308 3626                                    l4412 2F98  
                                  l4404 40FE                                    l4500 08B0  
                                  l5060 18DE                                    l5052 182A  
                                  l5044 17A0                                    l5036 1738  
                                  l5028 16C4                                    l5220 322E  
                                  l5212 3206                                    l5204 318C  
                                  l5140 3CA2                                    l5126 44DA  
                                  l5118 44B8                                    l5310 45B8  
                                  l5134 420C                                    l4190 3D74  
                                  l4182 3D56                                    l4246 3E7E  
                                  l4254 3EA8                                    l4238 3E4E  
                                  l4270 3F46                                    l4262 3ECA  
                                  l4166 237C                                    l4158 2328  
                                  l4094 20A0                                    l4086 2068  
                                  l4078 2024                                    l3710 1B76  
                                  l3702 1B44                                    l4342 36EA  
                                  l4334 36CA                                    l4318 367C  
                                  l4430 3140                                    l4422 3080  
                                  l4414 2FEE                                    l4406 4110  
                                  l4510 08F6                                    l4502 08C2  
                                  l5070 196A                                    l5046 17D0  
                                  l5038 176A                                    l5230 32B6  
                                  l5222 3260                                    l5206 319C  
                                  l5150 3CE0                                    l5142 3CBC  
                                  l5128 44DC                                    l5136 4210  
                                  l4192 3D82                                    l4184 3D5A  
                                  l4256 3EB8                                    l4248 3E94  
                                  l4272 3F6A                                    l4264 3EF8  
                                  l4280 375A                                    l4168 237E  
                                  l4096 20B8                                    l4088 2074  
                                  l3800 1D52                                    l3720 1BB0  
                                  l3712 1B78                                    l3704 1B46  
                                  l4176 4610                                    l4344 36FA  
                                  l4432 3168                                    l4424 30BC  
                                  l4416 3002                                    l4360 3C0A  
                                  l4352 3BCC                                    l4600 0CC4  
                                  l4512 08FA                                    l4504 08D0  
                                  l5072 1980                                    l5080 1A08  
                                  l5056 1898                                    l5240 330C  
                                  l5232 32C4                                    l5224 3262  
                                  l5216 321A                                    l5208 31AA  
                                  l5320 3866                                    l5312 3830  
                                  l5400 2734                                    l5160 3D0A  
                                  l5152 3CE8                                    l5144 3CD0  
                                  l5306 45A4                                    l4194 3D8A  
                                  l4186 3D68                                    l4258 3EC0  
                                  l4274 3F70                                    l4266 3F08  
                                  l4290 37C8                                    l4282 376A  
                                  l4098 20C4                                    l3810 1DCE  
                                  l3802 1D86                                    l3730 1BC4  
                                  l3722 1BB4                                    l3706 1B56  
                                  l3714 1B80                                    l4178 4620  
                                  l4346 370A                                    l4434 3178  
                                  l4418 3010                                    l4426 30F0  
                                  l4370 3C78                                    l4362 3C1E  
                                  l4354 3BDC                                    l4610 0D02  
                                  l4602 0CCC                                    l4530 09B0  
                                  l4522 0960                                    l4514 08FE  
                                  l4506 08E2                                    l4442 4186  
                                  l5082 1A2C                                    l5090 1A5C  
                                  l5074 198E                                    l5058 18AA  
                                  l5066 1922                                    l5250 4066  
                                  l5242 331C                                    l5234 32E2  
                                  l5226 326E                                    l5218 3222  
                                  l5322 387E                                    l5314 3834  
                                  l5330 3FFE                                    l5170 4902  
                                  l5410 2758                                    l5402 273A  
                                  l5162 3D12                                    l5154 3CEA  
                                  l5146 3CD2                                    l5138 3C92  
                                  l5308 45B6                                    l4452 47F8  
                                  l4460 4416                                    l4196 3D8E  
                                  l4188 3D70                                    l4268 3F36  
                                  l4292 37D6                                    l4284 3798  
                                  l3820 1E0A                                    l3812 1DDE  
                                  l3804 1D88                                    l3740 1BD8  
                                  l3732 1BC8                                    l3724 1BB8  
                                  l3716 1B90                                    l3708 1B66  
                                  l4348 371A                                    l4380 39B4  
                                  l4428 312C                                    l3660 3B02  
                                  l4364 3C32                                    l4356 3BF0  
                                  l4700 11A6                                    l4612 0D14  
                                  l4620 0D54                                    l4604 0CDE  
                                  l4540 0A34                                    l4524 0972  
                                  l4508 08EE                                    l4516 0904  
                                  l5092 1A6A                                    l5084 1A3A  
                                  l5076 19CC                                    l5068 1946  
                                  l5252 406E                                    l5244 332A  
                                  l5236 32E4                                    l5228 32AA  
                                  l5324 388A                                    l5316 3862  
                                  l5340 4050                                    l5332 4002  
                                  l5260 49A8                                    l5420 278C  
                                  l5412 275C                                    l5404 274C  
                                  l5156 3CF6                                    l5148 3CD4  
                                  l4470 4544                                    l3902 495C  
                                  l4462 4444                                    l4198 3D96  
                                  l3910 23A6                                    l4294 3826  
                                  l4286 37A8                                    l4278 372C  
                                  l3830 1E36                                    l3822 1E0C  
                                  l3806 1D98                                    l3750 1BEC  
                                  l3742 1BDC                                    l3734 1BCC  
                                  l3726 1BBC                                    l3718 1BA2  
                                  l4382 39C0                                    l4374 392E  
                                  l3670 3B84                                    l3662 3B14  
                                  l4366 3C36                                    l4358 3BFE  
                                  l4710 122C                                    l4702 11B8  
                                  l4630 0E3C                                    l4622 0D5C  
                                  l4614 0D22                                    l4606 0CF0  
                                  l4542 0A46                                    l4526 098E  
                                  l4518 092A                                    l4534 09D8  
                                  l4438 46DA                                    l4446 41BC  
                                  l5086 1A4E                                    l5254 407C  
                                  l5246 332C                                    l5238 32E8  
                                  l5326 3924                                    l5318 3864  
                                  l5342 405C                                    l5334 4034  
                                  l5262 49B8                                    l5270 48E0  
                                  l5190 4718                                    l5182 4954  
                                  l5174 4926                                    l5430 27FA  
                                  l5422 27A2                                    l5414 2768  
                                  l5406 2750                                    l5166 3D1A  
                                  l5158 3CFE                                    l5350 34F8  
                                  ?_pad 0011                                    l4480 4566  
                                  l3904 4978                                    l4464 4448  
                                  l4456 43FE                                    l3920 23E6  
                                  l3912 23B4                                    l4296 382C  
                                  l4288 37B6                                    l3840 1E6E  
                                  l3824 1E1A                                    l3816 1DF2  
                                  l3832 1E38                                    l3808 1DA8  
                                  l3760 1C4A                                    l3744 1BE0  
                                  l3736 1BD0                                    l3728 1BC0  
                                  l3752 1BF0                                    l3680 1ACC  
                                  l4392 3A22                                    l4376 394E  
                                  l3664 3B26                                    l4368 3C64  
                                  l4720 12A6                                    l4712 1260  
                                  l4704 11CA                                    l4640 0EFA  
                                  l4632 0E70                                    l4624 0D6C  
                                  l4616 0D3A                                    l4608 0CFE  
                                  l4560 0B02                                    l4544 0A62  
                                  l4536 09FE                                    l4552 0A7E  
                                  l4528 09A6                                    l4448 41CE  
                                  l4800 2A50                                    l5096 1A78  
                                  l5256 40A2                                    l5336 4036  
                                  l5520 2D10                                    l5264 49BA  
                                  l5280 49FA                                    l5272 48E6  
                                  l5192 472C                                    l5184 495A  
                                  l5504 29B0                                    l5512 29C0  
                                  l5440 284E                                    l5432 2818  
                                  l5424 27B4                                    l5416 276E  
                                  l5408 2754                                    l5168 3D36  
                                  l5360 35BE                                    l5352 352C  
                                  l5600 3F88                                    l4482 456A  
                                  l5290 46BE                                    l5282 469C  
                                  l4458 4402                                    l3930 240C  
                                  l3922 23E8                                    l3914 23B6  
                                  l3850 1EEC                                    l3826 1E22  
                                  l3818 1DFC                                    l3834 1E46  
                                  l3770 1C80                                    l3762 1C60  
                                  l3754 1BF4                                    l3746 1BE4  
                                  l3738 1BD4                                    l3682 1ADC  
                                  l3690 1B06                                    l3674 1AB0  
                                  l4378 398C                                    l4386 39CC  
                                  l3666 3B30                                    l4730 12EA  
                                  l4722 12B8                                    l4714 1268  
                                  l4706 11CE                                    l4650 0F96  
                                  l4642 0F10                                    l4626 0D80  
                                  l4634 0E76                                    l4618 0D4C  
                                  l4562 0B08                                    l4570 0BD0  
                                  l4554 0A98                                    l4490 0864  
                                  l4810 2AB4                                    l4802 2A7A  
                                  l5098 1A9C                                    l5338 4038  
                                  l5530 2DF2                                    l5522 2D36  
                                  l5258 49A4                                    l5274 48EC  
                                  l5266 48D0                                    l5194 473C  
                                  l5178 4930                                    l5370 45DE  
                                  l5442 286C                                    l5434 282A  
                                  l5426 27BE                                    l5418 277E  
                                  l5362 35DA                                    l5354 3548  
                                  l5346 34CE                                    l5602 3F98  
                                  l5610 3FB0                                    l4476 454C  
                                  l4468 4538                                    l5292 46C6  
                                  l5284 469C                                    l3940 244C  
                                  l3932 241A                                    l3916 23C6  
                                  l3924 23F0                                    l3908 239A  
                                  l3860 1F32                                    l3844 1E98  
                                  l3852 1EEE                                    l3836 1E4A  
                                  l3828 1E26                                    l3780 1CD0  
                                  l3772 1C8A                                    l3764 1C6C  
                                  l3756 1C1E                                    l3748 1BE8  
                                  l3692 1B16                                    l3684 1AEC  
                                  l3676 1ABC                                    l4388 39DE  
                                  l3668 3B4E                                    l4396 4242  
                                  l4740 132A                                    l4732 12FC  
                                  l4724 12C6                                    l4708 11D4  
                                  l4716 126C                                    l4652 0FEC  
                                  l4660 103E                                    l4644 0F42  
                                  l4636 0E94                                    l4628 0DE4  
                                  l4580 0C10                                    l4572 0BE0  
                                  l4564 0B62                                    l4492 0872  
                                  l4812 2ABA                                    l4804 2A82  
                                  l5540 2E64                                    l5524 2D5C  
                                  l5276 48F2                                    l5268 48D4  
                                  l4484 4A0E                                    l5196 4744  
                                  l5380 431C                                    l5372 45EE  
                                  l5460 2904                                    l5444 288A  
                                  l5452 28BE                                    l5436 2836  
                                  l5428 27DC                                    l5364 360E  
                                  l5356 357C                                    l5348 34EA  
                                  l5604 3FA0                                    l5612 3FE6  
                                  l4478 4550                                    l5294 46CC  
                                  l5286 46AC                                    l3950 248C  
                                  l3942 244E                                    l3934 241C  
                                  l3926 2400                                    l3918 23D6  
                                  l3870 1F5C                                    l3862 1F40  
                                  l3854 1EFE                                    l3846 1EA4  
                                  l3838 1E58                                    l3790 1D0C  
                                  l3782 1CE0                                    l3774 1CAC  
                                  l3766 1C70                                    l3758 1C3A  
                                  l3694 1B1C                                    l3686 1AFC  
                                  l3678 1ACA                                    l4398 4252  
                                  l4750 1372                                    l4742 1332  
                                  l4734 1304                                    l4726 12D6  
                                  l4718 128A                                    l4670 10F6  
                                  l4662 104E                                    l4654 0FF2  
                                  l4646 0F52                                    l4638 0EC8  
                                  l4590 0C54                                    l4582 0C2A  
                                  l4574 0BE4                                    l4566 0B96  
                                  l4558 0ACE                                    l4494 087A  
                                  l4486 084A                                    l4910 3A70  
                                  l4902 3A2C                                    l4830 2B8C  
                                  l4822 2B2E                                    l4814 2AC2  
                                  l4806 2AA2                                    l5390 43BE  
                                  l5542 2E96                                    l5550 2ED6  
                                  l5526 2D8E                                    l5518 2CFE  
                                  l5278 48F8                                    l5198 474C  
                                  l5382 432C                                    l5374 45FE  
                                  l5462 2922                                    l5454 28C4  
                                  l5446 28A8                                    l5438 2846  
                                  l5358 358A                                    l5606 3FA8  
                                  l5296 4584                                    l5288 46B4  
                                  l3960 24BC                                    l3952 2494  
                                  l3936 242C                                    l3944 2456  
                                  l3928 2406                                    l3872 1F5E  
                                  l3864 1F46                                    l3856 1F0E  
                                  l3848 1EB2                                    l3792 1D1A  
                                  l3784 1CEE                                    l3776 1CBC  
                                  l3768 1C7E                                    l3696 1B2E  
                                  l3688 1AFE                                    l3880 4674  
                                  l4760 13C8                                    l4752 138E  
                                  l4744 133A                                    l4736 1314  
                                  l4728 12DA                                    l4672 1106  
                                  l4680 1140                                    l4664 1062  
                                  l4656 1026                                    l4648 0F62  
                                  l4592 0C66                                    l4576 0BF6  
                                  l4584 0C42                                    l4568 0B9E  
                                  l4496 089E                                    l4488 0854  
                                  l4912 3A88                                    l4904 3A56  
                                  l4824 2B40                                    l4832 2BA0  
                                  l4816 2ADE                                    l4840 2C1A  
                                  l4808 2AAA                                    l5720 1554  
                                  l5392 43C6                                    l5552 2F08  
                                  l5544 2EC8                                    l5528 2DC0  
                                  l5536 2E00                                    l5384 433C  
                                  l5376 42FA                                    l5368 45CC  
                                  l5480 2970                                    l5464 2934  
                                  l5456 28C8                                    l5560 4128  
                                  l4930 4504                                    l4922 44EE  
                                  l5298 4594                                    l5722 33FA  
                                  l3970 24FA                                    l3962 24BC  
                                  l3954 2498                                    l3946 2466  
                                  l3938 243C                                    l3866 1F48  
                                  l3858 1F2E                                    l3794 1D1C  
                                  l3786 1CFC                                    l3698 1B30  
                                  l3882 4678                                    l3890 4890  
                                  l4770 1404                                    l4762 13CE  
                                  l4754 1396                                    l4746 1346  
                                  l4738 131C                                    l4690 117A  
                                  l4682 1152                                    l4674 1118  
                                  l4666 106E                                    l4658 103A  
                                  l4594 0C82                                    l4578 0C08  
                                  l4498 08A8                                    l4914 3AA4  
                                  l4850 2CA8                                    l4842 2C36  
                                  l4834 2BB0                                    l4818 2AEE  
                                  l5394 43CE                                    l5554 2F3A  
                                  l5538 2E32                                    l5386 434C  
                                  l5378 430C                                    l5474 2960  
                                  l5466 2940                                    l5458 28E6  
                                  l5562 412E                                    l4940 4528  
                                  l4932 4506                                    l4924 44FE  
                                  l4860 333E                                    l3980 2546  
                                  l3972 250A                                    l3948 247C  
                                  l3868 1F4E                                    l3796 1D26  
                                  l3788 1D08                                    l3876 4656  
                                  l3884 4868                                    l4780 1456  
                                  l4772 140A                                    l4764 13E0  
                                  l4748 134C                                    l4756 139C  
                                  l4692 1186                                    l4684 1160  
                                  l4676 112A                                    l4668 1092  
                                  l4596 0CB8                                    l4916 3AB6  
                                  l4908 3A62                                    l4852 2CAE  
                                  l4844 2C54                                    l4836 2BB6  
                                  l4828 2B7A                                    l5396 43EA  
                                  l5388 43AC                                    l5572 4352  
                                  l5556 2F6C                                    l5492 2990  
                                  l5468 2950                                    l5564 4154  
                                  l5716 3FC8                                    l4934 4512  
                                  l4926 4500                                    l4870 33AC  
                                  l4862 3352                                    l3990 2590  
                                  l3982 2554                                    l3974 251A  
                                  l3966 24D0                                    l3958 24AC  
                                  l3798 1D2C                                    l3878 4662  
                                  l3886 4874                                    l3894 4788  
                                  l4782 1462                                    l4774 1410  
                                  l4766 13EC                                    l4758 13AE  
                                  l4694 1196                                    l4686 1170  
                                  l4678 1138                                    l4598 0CC0  
                                  l4918 3ADE                                    l4854 2CBE  
                                  l4846 2C6E                                    l4838 2BBC  
                                  l5574 4358                                    l4950 4988  
                                  l5718 29E4                                    l5486 2980  
                                  l5582 429E                                    l4942 489E  
                                  l5566 4166                                    l4936 4524  
                                  l4928 4502                                    l4880 33D4  
                                  l4872 33B0                                    l4864 3356  
                                  l3992 25A2                                    l3984 2560  
                                  l3976 2522                                    l3968 24EA  
                                  l3888 4878                                    l4784 146A  
                                  l4768 13F4                                    l4696 119A  
                                  l4688 1174                                    l4856 2CD4  
                                  l4848 2C88                                    l5576 437E  
                                  l4960 49A0                                    l4952 498C  
                                  l5584 42A4                                    l4944 48AC  
                                  l5568 4180                                    l5592 3F74  
                                  l4938 4526                                    l4882 33DC  
                                  l4866 335A                                    l3994 25B8  
                                  l3986 257E                                    l3978 2532  
                                  l4786 147A                                    l4778 1444  
                                  l4698 11A0                                    l3898 4750  
                                  l4794 2A24                                    l4970 14C6  
                                  l5578 4390                                    l4954 499A  
                                  l5498 29A0                                    l5586 42CA  
                                  l4946 48B0                                    l5594 3F7C  
                                  l4892 3484                                    l4884 3410  
                                  l4876 33B6                                    l4868 3376  
                                  l3996 25BE                                    l3988 2580  
                                  l4788 1480                                    l4796 2A34  
                                  l4980 14F8                                    l4972 14D4  
                                  l4964 49E6                                    l4948 4984  
                                  l5588 42DC                                    l5596 3F80  
                                  l4894 3496                                    l4878 33CC  
                                  l3998 25C8                                    l4798 2A36  
                                  l4990 1516                                    l4982 150A  
                                  l4974 14E6                                    l4966 49D2  
                                  l5598 3F84                                    l4896 34A8  
                                  l4888 3446                                    l4976 14EA  
                                  l4968 14A2                                    l4994 151C  
                                  l4986 1510                                    l4978 14F6  
                                  l4998 1522                                    STR_1 0846  
                                  STR_2 0843                                    STR_3 0818  
                                  STR_4 0820                                    STR_5 0820  
                                  STR_6 0818                                    STR_7 0820  
                                  STR_8 0820                                    STR_9 081C  
                                  u3100 3B4E                                    u3101 3B4A  
                                  u3110 3B84                                    u3111 3B80  
                                  u4000 3D82                                    u3200 1BB0  
                                  u3120 1ACA                                    _LATD 000F8C  
                                  u4001 3D7E                                    u3201 1BAC  
                                  u3121 1AC6                                    u4010 3DA8  
                                  u3210 1C1E                                    u3130 1ADC  
                                  u4011 3DA4                                    u3211 1C1A  
                                  u3131 1AD8                                    u4020 3DC6  
                                  u4100 3EB8                                    u3300 1CFC  
                                  u3220 1C36                                    u3140 1AEC  
                                  u4021 3DC2                                    u4101 3EB4  
                                  u3301 1CF8                                    u3221 1C30  
                                  u3141 1AE8                                    u4030 3DE2  
                                  u4110 3EF8                                    u3310 1D1A  
                                  u3230 1C38                                    u3150 1B2E  
                                  u4031 3DDE                                    u4111 3EF4  
                                  u3311 1D16                                    u3151 1B2A  
                                  u4040 3E08                                    u4120 3F36  
                                  u3400 1E58                                    u3320 1D52  
                                  u3240 1C60                                    u3160 1B44  
                                  u4200 363C                                    u3080 3B14  
                                  u5000 1106                                    u4041 3E04  
                                  u4121 3F32                                    u3401 1E54  
                                  u3321 1D4E                                    u3241 1C5C  
                                  u3161 1B40                                    u4201 3638  
                                  u3081 3B10                                    u5001 1102  
                                  u4050 3E2C                                    u4130 3F6A  
                                  u3410 1E6E                                    u3330 1D98  
                                  u3250 1C7E                                    u3170 1B56  
                                  u4210 3670                                    u3090 3B26  
                                  u5010 1118                                    u4051 3E28  
                                  u4131 3F66                                    u3411 1E6A  
                                  u3331 1D94                                    u3251 1C7A  
                                  u3171 1B52                                    u3091 3B22  
                                  u5011 1114                                    u4060 3E46  
                                  u4140 375A                                    u3500 1F5C  
                                  u3420 1E84                                    u3340 1DCE  
                                  u3260 1C9E                                    u3180 1B66  
                                  u4220 369E                                    u4300 3C64  
                                  u5100 12C6                                    u5020 112A  
                                  u4061 3E42                                    u4141 3756  
                                  u3501 1F58                                    u3421 1E80  
                                  u3341 1DCA                                    u3261 1C9A  
                                  u3181 1B62                                    u4221 369A  
                                  u4301 3C60                                    u5101 12C2  
                                  u5021 1126                                    u4070 3E60  
                                  u4150 3798                                    u3430 1E98  
                                  u3350 1DDE                                    u3270 1CAC  
                                  u3190 1BA2                                    u4230 36B2  
                                  u4310 396E                                    u3510 4698  
                                  u5110 12FC                                    u5030 1138  
                                  u4071 3E5C                                    u4151 3794  
                                  u3431 1E94                                    u3351 1DDA  
                                  u3271 1CA8                                    u3191 1B9E  
                                  u4231 36AE                                    u4215 3666  
                                  u3511 4694                                    u5111 12F8  
                                  u5031 1134                                    u4080 3E7E  
                                  u3600 241A                                    u4160 37B6  
                                  u3440 1EB2                                    u3360 1E0A  
                                  u3280 1CBC                                    u4240 36DA  
                                  u4320 398C                                    u3520 4890  
                                  u4400 40F8                                    u5120 132A  
                                  u5040 1152                                    u5200 2A50  
                                  u6000 277E                                    u4081 3E7A  
                                  u3601 2416                                    u4161 37B2  
                                  u3441 1EAE                                    u3361 1E06  
                                  u3281 1CB8                                    u4241 36D6  
                                  u4321 3988                                    u3521 488C  
                                  u4401 40F2                                    u5121 1326  
                                  u5041 114E                                    u5201 2A4C  
                                  u6001 277A                                    u4090 3E94  
                                  u3610 242C                                    u4170 37D6  
                                  u3450 1EEC                                    u3370 1E1A  
                                  u3290 1CEE                                    u4250 36FA  
                                  u4330 39B4                                    u3530 47B8  
                                  u4410 40FA                                    u5130 13AE  
                                  u5050 1160                                    u5210 2A7A  
                                  u6010 278C                                    u4091 3E90  
                                  u3611 2428                                    u4171 37D2  
                                  u3451 1EE8                                    u3371 1E16  
                                  u3291 1CEA                                    u4251 36F6  
                                  u4331 39B0                                    u4315 3964  
                                  u3531 47B2                                    u5131 13AA  
                                  u5051 115C                                    u5211 2A76  
                                  u6011 2788                                    u3700 25D6  
                                  u3620 243C                                    u4180 3826  
                                  u3460 1EFE                                    u3380 1E36  
                                  u4260 370A                                    u4340 39DE  
                                  u4500 3110                                    u3540 47BA  
                                  u4420 4110                                    u5140 13C8  
                                  u5060 11B8                                    u5300 2C36  
                                  u5220 2ADE                                    u6100 2F3A  
                                  u6020 2D8E                                    u3701 25D2  
                                  u3621 2438                                    u4181 3822  
                                  u3461 1EFA                                    u3381 1E32  
                                  u4261 3706                                    u4341 39DA  
                                  u4421 410C                                    u5141 13C4  
                                  u5061 11B4                                    u5301 2C32  
                                  u5221 2ADA                                    u6101 2F36  
                                  u6021 2D8A                                    u3710 25F6  
                                  u3630 247C                                    u4190 47D6  
                                  u3470 1F0E                                    u3390 1E46  
                                  u4510 312C                                    u4430 2FC0  
                                  u4270 3BDC                                    u5150 13E0  
                                  u5070 128A                                    u3550 4780  
                                  u5310 2C54                                    u5230 2B28  
                                  u6110 2F6C                                    u6030 2DC0  
                                  u3711 25F2                                    u3631 2478  
                                  u4191 47D2                                    u3471 1F0A  
                                  u3391 1E42                                    u4511 3128  
                                  u4271 3BD8                                    u5151 13DC  
                                  u5071 1286                                    u3551 477A  
                                  u5311 2C50                                    u5231 2B22  
                                  u6111 2F68                                    u6031 2DBC  
                                  u4600 4416                                    u5400 3480  
                                  u3720 2608                                    u3640 24BC  
                                  u3800 1F8A                                    u3480 1F2E  
                                  u4360 3A18                                    u4520 3168  
                                  u4440 2FEE                                    u4280 3BFE  
                                  u5160 143E                                    u5080 12A6  
                                  u3560 4782                                    u5320 2C6E  
                                  u5240 2B2A                                    u6040 2DF2  
                                  u4601 4412                                    u3721 2604  
                                  u3641 24B8                                    u3801 1F86  
                                  u3481 1F2A                                    u4361 3A12  
                                  u4521 3164                                    u4505 3106  
                                  u4441 2FEA                                    u4281 3BFA  
                                  u5161 1438                                    u5081 12A2  
                                  u5321 2C6A                                    u6041 2DEE  
                                  u4610 4444                                    u5410 3496  
                                  u3730 2636                                    u3650 2532  
                                  u3570 23B4                                    u3810 1F9C  
                                  u3490 1F40                                    u4370 3A1A  
                                  u4450 3010                                    u4290 3C54  
                                  u5170 1440                                    u5090 12B8  
                                  u4530 470E                                    u5330 2C88  
                                  u5250 2B40                                    u6050 2E32  
                                  u4611 4440                                    u5411 3492  
                                  u3731 2632                                    u3651 252E  
                                  u3571 23B0                                    u3811 1F98  
                                  u3491 1F3C                                    u4355 39F0  
                                  u4451 300C                                    u4435 2FB6  
                                  u4291 3C50                                    u5091 12B4  
                                  u4531 4708                                    u5331 2C84  
                                  u5251 2B3C                                    u6051 2E2E  
                                  u4620 4566                                    u5420 34A8  
                                  u3740 264C                                    u3660 2554  
                                  u3580 23C6                                    u3900 2248  
                                  u3820 1FAC                                    u4380 428A  
                                  u5180 1456                                    u4700 095A  
                                  u4540 4710                                    u5340 2C98  
                                  u5260 2B74                                    u6060 2E64  
                                  u5500 49F8                                    u4621 4562  
                                  u5421 34A4                                    u3741 2648  
                                  u3661 2550                                    u3581 23C2  
                                  u3901 2244                                    u3821 1FA8  
                                  u5181 1452                                    u4701 0954  
                                  u5341 2C94                                    u5261 2B6E  
                                  u6061 2E60                                    u5501 49F4  
                                  u4630 4580                                    u3750 2660  
                                  u3670 257E                                    u3590 23D6  
                                  u3910 225A                                    u3830 1FEC  
                                  u4470 307C                                    u4390 429C  
                                  u4710 095C                                    u5430 3A56  
                                  u4550 41B6                                    u5350 2CA8  
                                  u5270 2B76                                    u5190 2A34  
                                  u6070 2E96                                    u5510 49E4  
                                  u4631 457C                                    u3751 265C  
                                  u3671 257A                                    u3591 23D2  
                                  u3911 2256                                    u3831 1FE8  
                                  u4471 3078                                    u4391 4298  
                                  u5431 3A52                                    u4551 41B0  
                                  u5351 2CA4                                    u5191 2A30  
                                  u6071 2E92                                    u5511 49E0  
                                  u6207 35E4                                    u5360 3376  
                                  u3760 267A                                    u3680 25A2  
                                  u3920 2288                                    u3840 1FFE  
                                  u4480 30A0                                    u4800 0BF6  
                                  u4720 0972                                    u5440 3A88  
                                  u4560 41B8                                    u5280 2B8C  
                                  u5600 16F6                                    u5520 14C6  
                                  u6080 2EC8                                    u4640 4A1C  
                                  u5361 3372                                    u3761 2676  
                                  u3681 259E                                    u3921 2284  
                                  u3841 1FFA                                    u4465 3024  
                                  u4801 0BF2                                    u4721 096E  
                                  u5441 3A84                                    u5281 2B88  
                                  u5601 16F2                                    u5521 14C2  
                                  u6081 2EC4                                    u4641 4A18  
                                  u6217 3618                                    u5370 33AC  
                                  u3770 26C2                                    u3690 25B8  
                                  u3930 229E                                    u3850 200E  
                                  u4490 30BC                                    u4466 302E  
                                  u4810 0C08                                    u4730 09FE  
                                  u4650 0872                                    u5450 3AA4  
                                  u4570 41CE                                    u5290 2BF4  
                                  u5610 1738                                    u5530 1594  
                                  u6090 2F08                                    u5371 33A8  
                                  u3771 26BE                                    u3691 25B4  
                                  u3931 229A                                    u3851 200A  
                                  u4491 30B8                                    u4467 303E  
                                  u4387 4280                                    u4811 0C04  
                                  u4731 09FA                                    u4651 086E  
                                  u5451 3AA0                                    u4571 41CA  
                                  u5611 1734                                    u5531 1590  
                                  u6091 2F04                                    u5700 4208  
                                  u4580 4828                                    u5380 33C8  
                                  u3780 26F2                                    u3940 22B2  
                                  u3860 2044                                    u4900 0D14  
                                  u4820 0C2A                                    u4740 0A2E  
                                  u4660 08C2                                    u5460 3AB6  
                                  u5620 177C                                    u5540 15A2  
                                  _RCEN 007E2B                                    u4581 4822  
                                  u5381 33C4                                    u3781 26EE  
                                  u3941 22AE                                    u3861 2040  
                                  u4485 3096                                    u4901 0D10  
                                  u4821 0C26                                    u4741 0A28  
                                  u4661 08BE                                    u5461 3AB2  
                                  u5621 1778                                    u5541 159E  
                                  u6157 34F0                                    u5710 4230  
                                  u4590 482A                                    u5390 347E  
                                  u3790 2720                                    u3950 22CC  
                                  u3870 2054                                    u4910 0D22  
                                  u4830 0C50                                    u4750 0A30  
                                  u4670 08D0                                    u5470 3ADE  
                                  u5630 182A                                    u5550 15C8  
                                  u5391 3478                                    u3791 271C  
                                  u3951 22C8                                    u3871 2050  
                                  u4911 0D1E                                    u4831 0C4C  
                                  u4671 08CC                                    u5471 3ADA  
                                  u5295 2BE2                                    u5631 1826  
                                  u5551 15C4                                    u6167 351E  
                                  u5720 4240                                    u3960 2314  
                                  u3880 21CE                                    u4920 0D4C  
                                  u4840 0C66                                    u4760 0A46  
                                  u4680 08E2                                    u5640 1892  
                                  u5560 1602                                    u5800 4728  
                                  u5480 48CE                                    u5721 423C  
                                  u3961 2310                                    u4921 0D48  
                                  u4841 0C62                                    u4761 0A42  
                                  u4681 08DE                                    u5641 188C  
                                  u5561 15FE                                    u5801 4724  
                                  u5481 48CA                                    u6177 3552  
                                  u3970 2342                                    u3890 2228  
                                  u4930 0E94                                    u4850 0C82  
                                  u4770 0ACA                                    u4690 092A  
                                  u5650 1894                                    u5570 16AC  
                                  u5810 473C                                    u5490 499A  
                                  u5730 3CCA                                    u5707 41FE  
                                  u3971 233E                                    u3891 2224  
                                  u4931 0E90                                    u4851 0C7E  
                                  u4771 0AC6                                    u4691 0926  
                                  u5571 16A6                                    u5811 4738  
                                  u5491 4996                                    u6187 3582  
                                  u3980 237C                                    u4940 0EFA  
                                  u4860 0CB8                                    u4780 0B5E  
                                  u5660 18AA                                    u5580 16AE  
                                  u5900 32E2                                    u5820 49CE  
                                  u5740 3D36                                    u5717 4226  
                                  u3981 2378                                    u3885 21C4  
                                  u4941 0EF6                                    u4861 0CB4  
                                  u4781 0B5A                                    u5661 18A6  
                                  u5901 32DE                                    u5821 49CA  
                                  u5741 3D32                                    u6197 35B0  
                                  u3990 3D68                                    u4950 0F42  
                                  u4870 0CDE                                    u4790 0BD0  
                                  u5670 1946                                    u5590 16C4  
                                  u5910 331C                                    u5830 319C  
                                  u5750 3D54                                    u3991 3D64  
                                  u4951 0F3E                                    u4871 0CDA  
                                  u4791 0BCC                                    u5671 1942  
                                  u5591 16C0                                    u5911 3318  
                                  u5831 3198                                    u5751 3D50  
                                  u5735 3CC4                                    u4960 0F52  
                                  u4880 0CF0                                    u5680 196A  
                                  u5920 332A                                    u5840 31AA  
                                  u5760 4912                                    u4961 0F4E  
                                  u4881 0CEC                                    u5681 1966  
                                  u5921 3326                                    u5841 31A6  
                                  u5761 490E                                    u4970 0FEC  
                                  u4890 0CFE                                    u5690 1A2C  
                                  u5930 40BE                                    u5850 3206  
                                  u5770 4922                                    u4971 0FE8  
                                  u4891 0CFA                                    u5691 1A28  
                                  u5931 40BA                                    u5851 3202  
                                  u5771 491E                                    u5940 46AC  
                                  u4980 103A                                    u5860 325C  
                                  u5780 4940                                    u5941 46A8  
                                  u4981 1036                                    u5861 3258  
                                  u5781 493C                                    u5950 4594  
                                  u4990 1062                                    u5870 32A6  
                                  u5790 4950                                    u5951 4590  
                                  u4991 105E                                    u5871 32A2  
                                  u5791 494C                                    u5960 45C8  
                                  u5880 32C4                                    u5961 45C4  
                                  u5881 32C0                                    u5890 32D4  
                                  u5970 3876                                    u5891 32D0  
                                  u5971 3872                                    u5980 4048  
                                  u5981 4044                                    u5991 2744  
                                  _RSEN 007E29                                    _Date 0104  
                                  _Year 0100                                    _Sluz 0200  
                                  _dbuf 010E                                    _atoi 333E  
                                  _main 3F74                         ?_RTC_Read_Clock 0001  
                                  _hour 0108                        __end_of_I2C_Nack 49E6  
                    __size_of_LCD_Clear 0014                                    _play 3C92  
                                  _prec 00F6                        __end_of_I2C_Init 49BE  
                      __end_of_I2C_Read 4750                                    _nout 00F2  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf1 000FE7                                    indf2 000FDF  
                                  fsr1l 000FE1                                    pad@w 001A  
                                  fsr2l 000FD9                                    _xtoa 2A24  
                      __end_of_I2C_Stop 49D2                           ___fpclassifyf 392E  
                                  prodh 000FF4                                    prodl 000FF3  
                                  start 0000                         ___fldiv@new_exp 003D  
                         _LCD_String_xy 469A                            _tolower$1630 000D  
                          ___param_bank 000000                         __end_of_ReadADC 392E  
                       __end_of_ReadLUZ 4066                         __end_of_Estados 2F78  
      RTC_Read_Clock@read_clock_address 0004                                   ??_pad 0017  
                      __end_of_LCD_Char 4538                        __end_of_LCD_Init 4900  
                         ReadADC@result 0064                            LCD_MSdelay@i 0003  
                          LCD_MSdelay@j 0005                           ___fltol@sign1 005D  
                                 ?_atoi 0008                         __end_of___fladd 1F70  
                                 ?_main 0001                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                         __end_of___fldiv 2734  
                       __end_of___awdiv 3E1A                         __end_of___flneg 47F8  
                                 ?_play 0006                                   STR_10 081C  
                                 STR_11 0818                                   STR_20 0801  
                                 STR_12 0834                                   STR_21 0801  
                                 STR_13 0830                                   STR_30 0840  
                                 STR_14 0828                                   STR_22 0808  
                                 STR_15 0824                                   STR_23 0810  
                                 STR_32 0840                                   STR_16 083C  
                                 STR_17 082C                                   STR_18 0838  
                                 STR_26 080C                                   STR_27 0814  
                                 STR_19 0801                         __end_of___awmod 3ECA  
                       __end_of___flmul 239A                         __end_of___flsub 4656  
                       __end_of___fltol 372C                         ___awdiv@divisor 0003  
                                 ?_xtoa 001C                                   _LATD0 007C60  
                                 _LATD1 007C61                                   _LATE0 007C68  
                                 _LATE1 007C69                                   _LATE2 007C6A  
                       ___awdiv@counter 0005                            vfpfcnvrt@fmt 00A6  
                          vfpfcnvrt@llu 00AE                                   _TRISA 000F92  
                                 _TRISD 000F95                                   _SSPIE 007CEB  
                                 _TRISE 000F96                                   _SSPIF 007CF3  
                                 _Month 0102                                   _Stemp 015E  
                                 _flags 00F8                                   _fputc 3B02  
                       __end_of_isalpha 4716                                   _fputs 4656  
                       __end_of_isdigit 4830                       __end_of_I2C_Ready 4A20  
                                 atoi@n 0015                                   pad@fp 0011  
                                 atoi@s 0008                                   _width 00F4  
                                 _putch 4A20                         __end_of_islower 4788  
                       __end_of_isspace 4450                       __end_of_I2C_Start 492E  
                     __end_of_I2C_Write 49A4                         __end_of_isupper 47C0  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                   __size_of_LCD_String 005E                         __end_of_sprintf 43FE  
                        ?___fpclassifyf 0001                         __end_of_tolower 4128  
                                 xtoa@c 0041                                   xtoa@d 001E  
                                 xtoa@i 003F                                   xtoa@n 0037  
                                 xtoa@p 0033                                   xtoa@w 0035  
                                 xtoa@x 0026                         __end_of_strncmp 3B02  
                       __end_of_toupper 41E4                           ??_PlayCancion 0013  
                        ?_LCD_String_xy 000B                           ??_Rainy_State 005F  
                          _toupper$1645 000D                 __end_of_LCD_Custom_Char 45CA  
                       __initialization 4450                            __end_of_atoi 34CE  
                          __end_of_main 3FFE                            __end_of_play 3D56  
                          __end_of_xtoa 2CFE                               ??_I2C_Ack 0001  
                                ??_atoi 000A                                  ??_main 00DE  
                                ??_play 000C                                  ??_xtoa 0027  
                     __end_of_LCD_Clear 4A0E                           __activetblptr 000002  
                  __end_of_Cloudy_State 43AC                                  ?_fputc 0001  
                                ?_fputs 000A                                  _ADRESH 000FC4  
                                _ADRESL 000FC3                        ___awdiv@dividend 0001  
                                ?_putch 0001                        LCD_String_xy@msg 000C  
                      LCD_String_xy@pos 000B                        LCD_String_xy@row 000E  
                                _OSCCON 000FD3                           vfpfcnvrt@done 00B6  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                      __end_of___xxtofl 333E                               ??_ReadADC 0062  
                             ??_ReadLUZ 0003                               ??_Estados 005F  
                      __end_of_delay_us 48D0                        ??_RTC_Calendario 00DC  
                          vfprintf@cfmt 00CA                                  ___flge 372C  
                                ___fleq 3ECA                               ??___fladd 004D  
                                ___wmul 495C                               ??___fldiv 0034  
                             ??___awdiv 0005                               ??___flneg 0005  
                             ??___awmod 0005                               ??___flmul 001B  
                             ??___flsub 005D                               ??___fltol 0059  
                                _efgtoa 084A                     __end_of_PlayCancion 3626  
                                _floorf 2F78                    __size_of_LCD_MSdelay 004A  
                   __end_of_Rainy_State 42F8                                  clear_0 4476  
                                clear_1 4482                                  clear_2 448E  
                      ___awdiv@quotient 0007                         ___awmod@divisor 0003  
                                isa$std 000001                                  _tempar 00EE  
                                _result 00FA                         ___awmod@counter 0005  
                    _I2C_Repeated_Start 492E                                  pad@buf 0013  
                  __size_of_LCD_Command 004C                                  _strcpy 4242  
                                _strlen 4868                                  fputc@c 0001  
                                fputs@c 000E                        LCD_Custom_Char@i 000C  
                                fputs@i 000F                               ?_I2C_Nack 0001  
                                fputs@s 000A                               ??_isalpha 0003  
                             ??_isdigit 0003                               ?_I2C_Init 0001  
                             ?_I2C_Read 0001                                  play@fn 0011  
                             ?_I2C_Stop 0001                         ___fpclassifyf@e 0009  
                       ___fpclassifyf@u 000B                         ___fpclassifyf@x 0001  
                             ??_islower 0003                            __mediumconst 0000  
                             ??_isspace 0003                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 40C8  
                             ??_sprintf 005F                               ??_tolower 0009  
                                xtoa@fp 001C                               ??_strncmp 0007  
                             ??_toupper 0009                              ___flge@ff1 002C  
                            ___flge@ff2 0030                         ??___fpclassifyf 0005  
                          ___xxtofl@arg 000F                            ___xxtofl@exp 000E  
                          ___xxtofl@val 0005                              ___fleq@ff1 0001  
                            ___fleq@ff2 0005                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 4496  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000E  
                            ___flneg@f1 0001                           ___rparam_used 000001  
                            ___fltol@f1 0055                    ??_I2C_Repeated_Start 0002  
                      ?_LCD_Custom_Char 0009                          __pcstackCOMRAM 0001  
                           play@CiclosL 000F                            __pidataBANK1 4830  
                         __end_of_fputc 3BCC                           __end_of_fputs 469A  
                         __end_of_putch 4A22                            ??_LCD_String 000B  
                            ??_I2C_Nack 0001                              ??_I2C_Init 0001  
                            ??_I2C_Read 0001                              ??_I2C_Stop 0001  
                      ??_RTC_Read_Clock 0003                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00E2                              __pbssBANK1 0100  
                            __pbssBANK2 0200                              ??_LCD_Char 0007  
                            _character1 01E5                              _character2 01DD  
                            _character3 01D5                              ??_LCD_Init 0009  
                    __end_of_LCD_String 4242                             _PlayCancion 34CE  
                           _Rainy_State 429E                            I2C_Read@flag 0001  
                         ??_Sunny_State 005F                                 ?___flge 002C  
                               ?___fleq 0001                          I2C_Read@buffer 0002  
                               ?___wmul 0001                          LCD_MSdelay@val 0001  
                               ?_efgtoa 0060                                 ?_floorf 0045  
                               _I2C_Ack 49E6                                 _ACKSTAT 007E2E  
                               ?_strcpy 0001                                 ?_strlen 0001  
                 __size_of_Cloudy_State 005A                               ?___xxtofl 0005  
                             ?_delay_us 0001                      __size_of_vfpfcnvrt 060E  
                               _SSPCON1 000FC6                                 _SSPCON2 000FC5  
                               _SSPSTAT 000FC7                               _I2C_Ready 4A0E  
                               _ReadADC 3830                               _I2C_Start 4900  
                               _ReadLUZ 3FFE                               _I2C_Write 4982  
                               _Estados 2CFE                           LCD_String@msg 0009  
                               __Hparam 0000                                 __Lparam 0000  
                          _Cloudy_State 4352                         __size_of___flge 0104  
                       __size_of___fleq 00AA                                 ___fladd 1AB0  
                     _RTC_Read_Calendar 42F8                                 ___fldiv 239A  
                               ___awdiv 3D56                                 ___flneg 47C0  
                               ___awmod 3E1A                                 ___flmul 1F70  
                               ___flsub 4610                                 ___fltol 3626  
                       __size_of___wmul 0026                               ?_vfprintf 00C4  
                          __psmallconst 0800                         __size_of_efgtoa 0C58  
                    ?_RTC_Read_Calendar 0001                         __size_of_floorf 0212  
                               __pcinit 4450                                 __ramtop 0800  
                               __ptext0 3F74                                 __ptext1 4128  
                               __ptext2 34CE                                 __ptext3 3C92  
                               __ptext4 489E                                 __ptext5 429E  
                               __ptext6 2734                                 __ptext7 45CA  
                               __ptext8 42F8                                 __ptext9 49BE  
                   __end_of_Sunny_State 4186                         __size_of_strcpy 005C  
                       __size_of_strlen 0036                            __size_of_pad 00C6  
                               _isalpha 46DA                                 _isdigit 47F8  
                            ??___xxtofl 0009                        ___awmod@dividend 0001  
                   ??_RTC_Read_Calendar 0003                                 _islower 4750  
                               _isspace 43FE                              ??_delay_us 0003  
                               _isupper 4788                                 efgtoa@c 0066  
                               efgtoa@d 0084                                 efgtoa@e 009C  
                               efgtoa@f 0062                                 efgtoa@g 0098  
                               efgtoa@h 008E                                 efgtoa@i 0096  
                               efgtoa@l 0092                                 efgtoa@m 007E  
                               efgtoa@n 009E                                 efgtoa@p 0088  
                               efgtoa@t 0078                                 efgtoa@u 00A0  
                               efgtoa@w 008A                               _LCD_Clear 49FA  
                               atoi@neg 000E                                 _sprintf 43AC  
                               _tolower 40C8                                 _strncmp 3A2C  
                               _toupper 4186                    end_of_initialization 4496  
                               floorf@e 0053                                 floorf@m 004F  
                               floorf@u 0055                                 floorf@x 0045  
                               fputc@fp 0003                          LCD_Command@cmd 0008  
                         __Lmediumconst 0000                                 fputs@fp 000C  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 4352  
                     __end_of_vfpfcnvrt 1AB0                              efgtoa@mode 008D  
                            efgtoa@sign 0086                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005F                                 strcpy@d 0009  
                               strlen@a 0003                                 strcpy@s 0007  
                               strlen@s 0001                             ___fladd@grs 0054  
                         ___xxtofl@sign 000D                               _TRISCbits 000F94  
                            ?_LCD_Clear 0001                       __size_of_I2C_Nack 0014  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 003A  
                           ___fldiv@grs 003F                             ___fldiv@rem 0038  
                     __size_of_I2C_Stop 0014                             ___flmul@grs 0020  
                          _Estados$1881 0068                       __size_of_LCD_Char 004C  
                     __size_of_LCD_Init 0030                           ??_LCD_MSdelay 0003  
                           _Sunny_State 4128                           ??_LCD_Command 0007  
                        __end_of___flge 3830                          __end_of___fleq 3F74  
                           vfpfcnvrt@ap 00A8                             vfpfcnvrt@ct 00C0  
                           vfpfcnvrt@fp 00A4                          __end_of___wmul 4982  
                        __end_of_efgtoa 14A2                          __end_of_floorf 318A  
                            floorf@F527 00E2                          __end_of_strcpy 429E  
                        __end_of_strlen 489E                     start_initialization 4450  
                           __end_of_pad 3C92    I2C_Repeated_Start@slave_read_address 0002  
                 __end_of___fpclassifyf 3A2C                             ??_I2C_Ready 0001  
                           ??_I2C_Start 0002                             ??_I2C_Write 0001  
                 __end_of_LCD_String_xy 46DA                            ?_PlayCancion 0001  
                          ?_Rainy_State 0001              __size_of_RTC_Read_Calendar 005A  
                           vfprintf@fmt 00C6             __size_of_I2C_Repeated_Start 002E  
                              ??___flge 0034                                ??___fleq 0009  
                              ??___wmul 0005                                ??_efgtoa 0067  
                           __pdataBANK1 01B6                                ??_floorf 0049  
                              ?_I2C_Ack 0001                     __end_of_LCD_MSdelay 4582  
                              ??_strcpy 0005                                ??_strlen 0003  
              __size_of_LCD_Custom_Char 0048                               ___fladd@a 0049  
                             ___fladd@b 0045                            play@duracion 000A  
                             ___fldiv@a 0030                               ___fldiv@b 002C  
               __size_of_RTC_Calendario 02F0                     __end_of_LCD_Command 44EC  
                             ___flmul@a 0017                               ___flmul@b 0013  
                           __pbssCOMRAM 005F                               ___flsub@a 0059  
                             ___flsub@b 0055                           __pcstackBANK0 0060  
                         __pcstackBANK1 0172                             ??_LCD_Clear 0009  
                     __size_of___xxtofl 01B4                       __size_of_delay_us 0032  
                              ?_ReadADC 0060                               _atoi$1526 0010  
                             _atoi$1527 0014                               _atoi$1528 0012  
                              ?_ReadLUZ 0001                              play@octava 0008  
                              ?_Estados 0066                             _efgtoa$1450 006C  
                           _efgtoa$1451 006E                             _efgtoa$1460 0072  
                           _efgtoa$1461 0074                             _efgtoa$1462 0076  
                           _efgtoa$1456 0070                                ?___fladd 0045  
                              ?___fldiv 002C                                ?___awdiv 0001  
                              ?___flneg 0001                                ?___awmod 0001  
                              ?___flmul 0013                                ?___flsub 0055  
                              ?___fltol 0055                       __size_of_vfprintf 0062  
                           __smallconst 0800                                _I2C_Nack 49D2  
                              ?_isalpha 0001                                ?_isdigit 0001  
                              _I2C_Init 49A4                                _I2C_Read 4716  
                              _I2C_Stop 49BE                                ?_islower 0001  
                              ?_isspace 0001                                ?_isupper 0001  
                 LCD_String_xy@location 000F                                ?_sprintf 00CC  
                              ?_tolower 0007                          __size_of_fputc 00CA  
                        __size_of_fputs 0044                                ?_strncmp 0001  
                              ?_toupper 0007                          __size_of_putch 0002  
                              _LCD_Char 44EC                                _LCD_Init 48D0  
                  play@mS_Transcurridos 000D                          ___wmul@product 0005  
                              _LATCbits 000F8B                               delay_us@i 0004  
               __size_of_RTC_Read_Clock 0046                             _LCD_MSdelay 4538  
                           _LCD_Command 44A0                               _vfpfcnvrt 14A2  
                             _xtoa$1472 002F                               _xtoa$1473 0031  
                      __size_of_I2C_Ack 0014                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                              _ADCON2bits 000FC0  
                     ___wmul@multiplier 0001                            _isspace$1566 0007  
                     ??_LCD_Custom_Char 000B                              vfpfcnvrt@c 00C3  
                            vfpfcnvrt@f 00BC                               copy_data0 4464  
                              _FreqNota 01B6            I2C_Start@slave_write_address 0002  
                          delay_us@nota 0001                        __size_of_ReadADC 00FE  
                      __size_of_ReadLUZ 0068                                __Hrparam 0000  
                      __size_of_Estados 027A                              vfprintf@ap 00C8  
                              __Lrparam 0000                              vfprintf@fp 00C4  
                          ?_Sunny_State 0001                    __size_of_PlayCancion 0158  
                  __size_of_Rainy_State 005A                           I2C_Write@data 0001  
                      __size_of___fladd 04C0                        __size_of___fldiv 039A  
                      __size_of___awdiv 00C4                        __size_of___flneg 0038  
                      __size_of___awmod 00B0                        __size_of___flmul 042A  
                      __size_of___flsub 0046                        __size_of___fltol 0106  
                            ?_vfpfcnvrt 00A4                      ___fpclassifyf@F465 00E6  
                        _RTC_Calendario 2734                              sprintf@fmt 00CE  
                              ___xxtofl 318A                        __size_of_isalpha 003C  
                      __size_of_isdigit 0038                                _delay_us 489E  
                      __size_of_islower 0038                        __size_of_isspace 0052  
                              __ptext10 4900                                __ptext11 492E  
                              __ptext20 2CFE                                __ptext12 4982  
                              __ptext21 3FFE                                __ptext13 4716  
                              __ptext30 4750                                __ptext22 3830  
                              __ptext14 4A0E                                __ptext31 46DA  
                              __ptext23 318A                                __ptext15 49D2  
                              __ptext40 3B02                                __ptext32 3A2C  
                              __ptext24 4352                                __ptext16 49E6  
                              __ptext41 4A20                                __ptext33 084A  
                              __ptext25 43AC                                __ptext17 48D0  
                              __ptext50 3ECA                                __ptext42 2F78  
                              __ptext34 40C8                                __ptext26 4066  
                              __ptext18 49FA                                __ptext51 239A  
                              __ptext43 392E                                __ptext35 4788  
                              __ptext27 14A2                                __ptext19 49A4  
                              __ptext60 4582                                __ptext52 3E1A  
                              __ptext44 3626                                __ptext36 4242  
                              __ptext28 2A24                                __ptext61 44A0  
                              __ptext53 3D56                                __ptext45 4610  
                              __ptext37 3BCC                                __ptext29 4186  
                              __ptext62 44EC                                __ptext54 333E  
                              __ptext46 1AB0                                __ptext38 4868  
                              __ptext63 4538                                __ptext55 43FE  
                              __ptext47 47C0                                __ptext39 4656  
                              __ptext56 47F8                                __ptext48 1F70  
                              __ptext57 495C                                __ptext49 372C  
                              __ptext58 469A                                __ptext59 41E4  
                      __size_of_isupper 0038                        __size_of_sprintf 0052  
                      __size_of_tolower 0060                              strcpy@dest 0001  
                      __size_of_strncmp 00D6                        __size_of_toupper 005E  
                         __size_of_atoi 0190                           __size_of_main 008A  
                         __size_of_play 00C4                           __size_of_xtoa 02DA  
                              efgtoa@fp 0060                                efgtoa@ne 007C  
                              efgtoa@pp 007A                                efgtoa@ou 0080  
                              isa$xinst 000000                                _vfprintf 4066  
                              main@caso 00E0                  __end_of_RTC_Calendario 2A24  
                            _LCD_String 41E4                          _vfpfcnvrt$1491 00BA  
                        _vfpfcnvrt$1487 00B8                                isalpha@c 0001  
                              isdigit@c 0001                      LCD_Custom_Char@loc 000B  
                    LCD_Custom_Char@msg 0009                               sprintf@ap 00D4  
                              play@nota 0006                                islower@c 0001  
                              isspace@c 0001                               strcpy@src 0003  
            __end_of_I2C_Repeated_Start 495C                                isupper@c 0001  
                        _RTC_Read_Clock 45CA                               strncmp@_l 0001  
                             strncmp@_r 0003                              _OSCCONbits 000FD3  
                         ?_Cloudy_State 0001                             efgtoa@nmode 008C  
                   RTC_Calendario@F3578 01CE                             ??_vfpfcnvrt 00AA  
                       ?_RTC_Calendario 0001                     RTC_Calendario@AM_PM 01B5  
                              sprintf@f 00D6                                tolower@c 0007  
                              sprintf@s 00CC                  __size_of___fpclassifyf 00FE  
                              strncmp@l 0008                                strncmp@n 0005  
                              strncmp@r 000A                                toupper@c 0007  
                __size_of_LCD_String_xy 0040                     RTC_Calendario@hours 01AB  
                   RTC_Calendario@month 0183                             _SSPCON2bits 000FC5  
                         ___fladd@signs 0051                      RTC_Calendario@date 0179  
                    RTC_Calendario@days 0172                      RTC_Calendario@mins 01A1  
                    RTC_Calendario@secs 0197                      RTC_Calendario@year 018D  
                          ___fladd@aexp 0052                            ___fladd@bexp 0053  
                __end_of_RTC_Read_Clock 4610                          ??_Cloudy_State 005F  
