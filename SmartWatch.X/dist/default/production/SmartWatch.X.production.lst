

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 20 11:47:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataBANK1
    96  003E5A                     __pidataBANK1:
    97                           	callstack 0
    98                           
    99                           ;initializer for _character3
   100  003E5A  00                 	db	0
   101  003E5B  00                 	db	0
   102  003E5C  0E                 	db	14
   103  003E5D  1F                 	db	31
   104  003E5E  0E                 	db	14
   105  003E5F  00                 	db	0
   106  003E60  00                 	db	0
   107  003E61  00                 	db	0
   108                           
   109                           ;initializer for _character2
   110  003E62  15                 	db	21
   111  003E63  0E                 	db	14
   112  003E64  11                 	db	17
   113  003E65  11                 	db	17
   114  003E66  0E                 	db	14
   115  003E67  15                 	db	21
   116  003E68  00                 	db	0
   117  003E69  00                 	db	0
   118                           
   119                           ;initializer for _character1
   120  003E6A  0E                 	db	14
   121  003E6B  1F                 	db	31
   122  003E6C  1F                 	db	31
   123  003E6D  0E                 	db	14
   124  003E6E  00                 	db	0
   125  003E6F  0A                 	db	10
   126  003E70  0A                 	db	10
   127  003E71  00                 	db	0
   128  0000                     _ADRESL	set	4035
   129  0000                     _ADRESH	set	4036
   130  0000                     _ADCON2bits	set	4032
   131  0000                     _ADCON0bits	set	4034
   132  0000                     _ADCON1bits	set	4033
   133  0000                     _OSCCONbits	set	4051
   134  0000                     _TRISA	set	3986
   135  0000                     _TRISD	set	3989
   136  0000                     _LATB	set	3978
   137  0000                     _TRISB	set	3987
   138  0000                     _TRISE	set	3990
   139  0000                     _OSCCON	set	4051
   140  0000                     _LATB3	set	31827
   141  0000                     _LATB2	set	31826
   142  0000                     _LATE2	set	31850
   143  0000                     _LATE1	set	31849
   144  0000                     _LATE0	set	31848
   145                           
   146                           	psect	smallconst
   147  000800                     __psmallconst:
   148                           	callstack 0
   149  000800  00                 	db	0
   150  000801                     STR_1:
   151  000801  20                 	db	32
   152  000802  42                 	db	66	;'B'
   153  000803  75                 	db	117	;'u'
   154  000804  65                 	db	101	;'e'
   155  000805  6E                 	db	110	;'n'
   156  000806  6F                 	db	111	;'o'
   157  000807  73                 	db	115	;'s'
   158  000808  20                 	db	32
   159  000809  44                 	db	68	;'D'
   160  00080A  69                 	db	105	;'i'
   161  00080B  61                 	db	97	;'a'
   162  00080C  73                 	db	115	;'s'
   163  00080D  20                 	db	32
   164  00080E  00                 	db	0
   165  00080F                     STR_2:
   166  00080F  25                 	db	37
   167  000810  30                 	db	48	;'0'
   168  000811  2E                 	db	46
   169  000812  31                 	db	49	;'1'
   170  000813  66                 	db	102	;'f'
   171  000814  20                 	db	32
   172  000815  43                 	db	67	;'C'
   173  000816  00                 	db	0
   174  000817                     STR_3:
   175  000817  25                 	db	37
   176  000818  30                 	db	48	;'0'
   177  000819  2E                 	db	46
   178  00081A  31                 	db	49	;'1'
   179  00081B  66                 	db	102	;'f'
   180  00081C  00                 	db	0
   181  00081D                     STR_8:
   182  00081D  49                 	db	73	;'I'
   183  00081E  4E                 	db	78	;'N'
   184  00081F  46                 	db	70	;'F'
   185  000820  00                 	db	0
   186  000821                     STR_12:
   187  000821  4E                 	db	78	;'N'
   188  000822  41                 	db	65	;'A'
   189  000823  4E                 	db	78	;'N'
   190  000824  00                 	db	0
   191  000825                     STR_9:
   192  000825  69                 	db	105	;'i'
   193  000826  6E                 	db	110	;'n'
   194  000827  66                 	db	102	;'f'
   195  000828  00                 	db	0
   196  000829                     STR_13:
   197  000829  6E                 	db	110	;'n'
   198  00082A  61                 	db	97	;'a'
   199  00082B  6E                 	db	110	;'n'
   200  00082C  00                 	db	0
   201  00082D                     STR_16:
   202  00082D  6C                 	db	108	;'l'
   203  00082E  66                 	db	102	;'f'
   204  00082F  00                 	db	0
   205  000830  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           ; #config settings
   208                           
   209                           	psect	cinit
   210  003C5E                     __pcinit:
   211                           	callstack 0
   212  003C5E                     start_initialization:
   213                           	callstack 0
   214  003C5E                     __initialization:
   215                           	callstack 0
   216                           
   217                           ; Initialize objects allocated to BANK1 (24 bytes)
   218                           ; load TBLPTR registers with __pidataBANK1
   219  003C5E  0E5A               	movlw	low __pidataBANK1
   220  003C60  6EF6               	movwf	tblptrl,c
   221  003C62  0E3E               	movlw	high __pidataBANK1
   222  003C64  6EF7               	movwf	tblptrh,c
   223  003C66  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   224  003C68  6EF8               	movwf	tblptru,c
   225  003C6A  EE01  F078         	lfsr	0,__pdataBANK1
   226  003C6E  EE10 F018          	lfsr	1,24
   227  003C72                     copy_data0:
   228  003C72  0009               	tblrd		*+
   229  003C74  CFF5 FFEE          	movff	tablat,postinc0
   230  003C78  50E5               	movf	postdec1,w,c
   231  003C7A  50E1               	movf	fsr1l,w,c
   232  003C7C  E1FA               	bnz	copy_data0
   233                           
   234                           ; Clear objects allocated to BANK1 (120 bytes)
   235  003C7E  EE01  F000         	lfsr	0,__pbssBANK1
   236  003C82  0E78               	movlw	120
   237  003C84                     clear_0:
   238  003C84  6AEE               	clrf	postinc0,c
   239  003C86  06E8               	decf	wreg,f,c
   240  003C88  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to BANK0 (35 bytes)
   243  003C8A  EE00  F0DA         	lfsr	0,__pbssBANK0
   244  003C8E  0E23               	movlw	35
   245  003C90                     clear_1:
   246  003C90  6AEE               	clrf	postinc0,c
   247  003C92  06E8               	decf	wreg,f,c
   248  003C94  E1FD               	bnz	clear_1
   249                           
   250                           ; Clear objects allocated to COMRAM (1 bytes)
   251  003C96  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   252  003C98                     end_of_initialization:
   253                           	callstack 0
   254  003C98                     __end_of__initialization:
   255                           	callstack 0
   256  003C98  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  003C9A  6EF8               	movwf	tblptru,c
   258  003C9C  0100               	movlb	0
   259  003C9E  EF39  F00F         	goto	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMRAM
   262  00005F                     __pbssCOMRAM:
   263                           	callstack 0
   264  00005F                     _counter_digito:
   265                           	callstack 0
   266  00005F                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269  0000DA                     __pbssBANK0:
   270                           	callstack 0
   271  0000DA                     floorf@F527:
   272                           	callstack 0
   273  0000DA                     	ds	4
   274  0000DE                     ___fpclassifyf@F465:
   275                           	callstack 0
   276  0000DE                     	ds	4
   277  0000E2                     _temperatura:
   278                           	callstack 0
   279  0000E2                     	ds	4
   280  0000E6                     _temp:
   281                           	callstack 0
   282  0000E6                     	ds	4
   283  0000EA                     _luz:
   284                           	callstack 0
   285  0000EA                     	ds	4
   286  0000EE                     _tempar:
   287                           	callstack 0
   288  0000EE                     	ds	4
   289  0000F2                     _nout:
   290                           	callstack 0
   291  0000F2                     	ds	2
   292  0000F4                     _width:
   293                           	callstack 0
   294  0000F4                     	ds	2
   295  0000F6                     _prec:
   296                           	callstack 0
   297  0000F6                     	ds	2
   298  0000F8                     _flags:
   299                           	callstack 0
   300  0000F8                     	ds	2
   301  0000FA                     _value_adc:
   302                           	callstack 0
   303  0000FA                     	ds	2
   304  0000FC                     _lm35:
   305                           	callstack 0
   306  0000FC                     	ds	1
   307                           
   308                           	psect	bssBANK1
   309  000100                     __pbssBANK1:
   310                           	callstack 0
   311  000100                     _dbuf:
   312                           	callstack 0
   313  000100                     	ds	80
   314  000150                     _Sluz:
   315                           	callstack 0
   316  000150                     	ds	20
   317  000164                     _Stemp:
   318                           	callstack 0
   319  000164                     	ds	20
   320                           
   321                           	psect	dataBANK1
   322  000178                     __pdataBANK1:
   323                           	callstack 0
   324  000178                     _character3:
   325                           	callstack 0
   326  000178                     	ds	8
   327  000180                     _character2:
   328                           	callstack 0
   329  000180                     	ds	8
   330  000188                     _character1:
   331                           	callstack 0
   332  000188                     	ds	8
   333                           
   334                           	psect	cstackBANK0
   335  000060                     __pcstackBANK0:
   336                           	callstack 0
   337  000060                     ___fltol@sign1:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x0
   341  000060                     	ds	1
   342  000061                     ___fltol@exp1:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x1
   346  000061                     	ds	1
   347  000062                     ?_ReadADC:
   348                           	callstack 0
   349  000062                     ?_efgtoa:
   350                           	callstack 0
   351  000062                     efgtoa@fp:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x2
   355  000062                     	ds	2
   356  000064                     ??_ReadADC:
   357  000064                     efgtoa@f:
   358                           	callstack 0
   359                           
   360                           ; 4 bytes @ 0x4
   361  000064                     	ds	2
   362  000066                     ReadADC@result:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x6
   366  000066                     	ds	2
   367  000068                     efgtoa@c:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x8
   371  000068                     	ds	1
   372  000069                     ??_efgtoa:
   373                           
   374                           ; 1 bytes @ 0x9
   375  000069                     	ds	5
   376  00006E                     _efgtoa$988:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0xE
   380  00006E                     	ds	2
   381  000070                     _efgtoa$989:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x10
   385  000070                     	ds	2
   386  000072                     _efgtoa$994:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x12
   390  000072                     	ds	2
   391  000074                     _efgtoa$998:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x14
   395  000074                     	ds	2
   396  000076                     _efgtoa$999:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x16
   400  000076                     	ds	2
   401  000078                     _efgtoa$1000:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x18
   405  000078                     	ds	2
   406  00007A                     efgtoa@t:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x1A
   410  00007A                     	ds	2
   411  00007C                     efgtoa@pp:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x1C
   415  00007C                     	ds	2
   416  00007E                     efgtoa@ne:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x1E
   420  00007E                     	ds	2
   421  000080                     efgtoa@m:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x20
   425  000080                     	ds	2
   426  000082                     efgtoa@ou:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x22
   430  000082                     	ds	4
   431  000086                     efgtoa@d:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x26
   435  000086                     	ds	2
   436  000088                     efgtoa@sign:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x28
   440  000088                     	ds	2
   441  00008A                     efgtoa@p:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x2A
   445  00008A                     	ds	2
   446  00008C                     efgtoa@w:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x2C
   450  00008C                     	ds	2
   451  00008E                     efgtoa@nmode:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x2E
   455  00008E                     	ds	1
   456  00008F                     efgtoa@mode:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x2F
   460  00008F                     	ds	1
   461  000090                     efgtoa@h:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x30
   465  000090                     	ds	4
   466  000094                     efgtoa@l:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x34
   470  000094                     	ds	4
   471  000098                     efgtoa@i:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x38
   475  000098                     	ds	2
   476  00009A                     efgtoa@g:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x3A
   480  00009A                     	ds	4
   481  00009E                     efgtoa@e:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x3E
   485  00009E                     	ds	2
   486  0000A0                     efgtoa@n:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x40
   490  0000A0                     	ds	2
   491  0000A2                     efgtoa@u:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x42
   495  0000A2                     	ds	4
   496  0000A6                     ?_vfpfcnvrt:
   497                           	callstack 0
   498  0000A6                     vfpfcnvrt@fp:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x46
   502  0000A6                     	ds	2
   503  0000A8                     vfpfcnvrt@fmt:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x48
   507  0000A8                     	ds	2
   508  0000AA                     vfpfcnvrt@ap:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x4A
   512  0000AA                     	ds	2
   513  0000AC                     ??_vfpfcnvrt:
   514                           
   515                           ; 1 bytes @ 0x4C
   516  0000AC                     	ds	4
   517  0000B0                     vfpfcnvrt@done:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x50
   521  0000B0                     	ds	2
   522  0000B2                     _vfpfcnvrt$1014:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x52
   526  0000B2                     	ds	2
   527  0000B4                     _vfpfcnvrt$1018:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x54
   531  0000B4                     	ds	2
   532  0000B6                     vfpfcnvrt@f:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x56
   536  0000B6                     	ds	4
   537  0000BA                     vfpfcnvrt@ct:
   538                           	callstack 0
   539                           
   540                           ; 3 bytes @ 0x5A
   541  0000BA                     	ds	3
   542  0000BD                     vfpfcnvrt@c:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x5D
   546  0000BD                     	ds	1
   547  0000BE                     ?_vfprintf:
   548                           	callstack 0
   549  0000BE                     vfprintf@fp:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x5E
   553  0000BE                     	ds	2
   554  0000C0                     vfprintf@fmt:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x60
   558  0000C0                     	ds	2
   559  0000C2                     vfprintf@ap:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x62
   563  0000C2                     	ds	2
   564  0000C4                     vfprintf@cfmt:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x64
   568  0000C4                     	ds	2
   569  0000C6                     ?_sprintf:
   570                           	callstack 0
   571  0000C6                     sprintf@s:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x66
   575  0000C6                     	ds	2
   576  0000C8                     sprintf@fmt:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x68
   580  0000C8                     	ds	6
   581  0000CE                     sprintf@ap:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x6E
   585  0000CE                     	ds	2
   586  0000D0                     sprintf@f:
   587                           	callstack 0
   588                           
   589                           ; 6 bytes @ 0x70
   590  0000D0                     	ds	6
   591  0000D6                     _main$1340:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x76
   595  0000D6                     	ds	4
   596                           
   597                           	psect	cstackCOMRAM
   598  000001                     __pcstackCOMRAM:
   599                           	callstack 0
   600  000001                     ?_ReadLUZ:
   601                           	callstack 0
   602  000001                     ?_strlen:
   603                           	callstack 0
   604  000001                     ?___fpclassifyf:
   605                           	callstack 0
   606  000001                     ?_isupper:
   607                           	callstack 0
   608  000001                     ?_isdigit:
   609                           	callstack 0
   610  000001                     ?_strncmp:
   611                           	callstack 0
   612  000001                     ?_isspace:
   613                           	callstack 0
   614  000001                     ?___wmul:
   615                           	callstack 0
   616  000001                     ?___awdiv:
   617                           	callstack 0
   618  000001                     ?___awmod:
   619                           	callstack 0
   620  000001                     ?___flneg:
   621                           	callstack 0
   622  000001                     MSdelay@val:
   623                           	callstack 0
   624  000001                     ___wmul@multiplier:
   625                           	callstack 0
   626  000001                     ___awdiv@dividend:
   627                           	callstack 0
   628  000001                     ___awmod@dividend:
   629                           	callstack 0
   630  000001                     isdigit@c:
   631                           	callstack 0
   632  000001                     isspace@c:
   633                           	callstack 0
   634  000001                     isupper@c:
   635                           	callstack 0
   636  000001                     fputc@c:
   637                           	callstack 0
   638  000001                     strcpy@dest:
   639                           	callstack 0
   640  000001                     strlen@s:
   641                           	callstack 0
   642  000001                     strncmp@_l:
   643                           	callstack 0
   644  000001                     ___fleq@ff1:
   645                           	callstack 0
   646  000001                     ___flneg@f1:
   647                           	callstack 0
   648  000001                     ___fpclassifyf@x:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x0
   652  000001                     	ds	2
   653  000003                     ??_ReadLUZ:
   654  000003                     ??_isupper:
   655  000003                     ??_isdigit:
   656  000003                     ??_isspace:
   657  000003                     MSdelay@i:
   658                           	callstack 0
   659  000003                     ___wmul@multiplicand:
   660                           	callstack 0
   661  000003                     ___awdiv@divisor:
   662                           	callstack 0
   663  000003                     ___awmod@divisor:
   664                           	callstack 0
   665  000003                     fputc@fp:
   666                           	callstack 0
   667  000003                     strcpy@src:
   668                           	callstack 0
   669  000003                     strlen@a:
   670                           	callstack 0
   671  000003                     strncmp@_r:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x2
   675  000003                     	ds	2
   676  000005                     ??_fputc:
   677  000005                     ??___fpclassifyf:
   678  000005                     ??_strcpy:
   679  000005                     ___awdiv@counter:
   680                           	callstack 0
   681  000005                     ___awmod@counter:
   682                           	callstack 0
   683  000005                     MSdelay@j:
   684                           	callstack 0
   685  000005                     ReadLUZ@result:
   686                           	callstack 0
   687  000005                     ___wmul@product:
   688                           	callstack 0
   689  000005                     strncmp@n:
   690                           	callstack 0
   691  000005                     ___fleq@ff2:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x4
   695  000005                     	ds	1
   696  000006                     ___awdiv@sign:
   697                           	callstack 0
   698  000006                     ___awmod@sign:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x5
   702  000006                     	ds	1
   703  000007                     ??_LCD_Command:
   704  000007                     ??_LCD_Char:
   705  000007                     ??_strncmp:
   706  000007                     ?_tolower:
   707                           	callstack 0
   708  000007                     ?___xxtofl:
   709                           	callstack 0
   710  000007                     _isspace$1083:
   711                           	callstack 0
   712  000007                     ___awdiv@quotient:
   713                           	callstack 0
   714  000007                     strcpy@s:
   715                           	callstack 0
   716  000007                     tolower@c:
   717                           	callstack 0
   718  000007                     ___xxtofl@val:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x6
   722  000007                     	ds	1
   723  000008                     ?_atoi:
   724                           	callstack 0
   725  000008                     LCD_Command@cmd:
   726                           	callstack 0
   727  000008                     LCD_Char@dat:
   728                           	callstack 0
   729  000008                     atoi@s:
   730                           	callstack 0
   731  000008                     strncmp@l:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x7
   735  000008                     	ds	1
   736  000009                     ??_tolower:
   737  000009                     ??___fleq:
   738  000009                     LCD_String@msg:
   739                           	callstack 0
   740  000009                     LCD_Custom_Char@msg:
   741                           	callstack 0
   742  000009                     ___fpclassifyf@e:
   743                           	callstack 0
   744  000009                     strcpy@d:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x8
   748  000009                     	ds	1
   749  00000A                     ??_atoi:
   750  00000A                     fputs@s:
   751                           	callstack 0
   752  00000A                     strncmp@r:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x9
   756  00000A                     	ds	1
   757  00000B                     ??___xxtofl:
   758  00000B                     LCD_String_xy@pos:
   759                           	callstack 0
   760  00000B                     LCD_Custom_Char@loc:
   761                           	callstack 0
   762  00000B                     ___fpclassifyf@u:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0xA
   766  00000B                     	ds	1
   767  00000C                     LCD_Custom_Char@i:
   768                           	callstack 0
   769  00000C                     LCD_String_xy@msg:
   770                           	callstack 0
   771  00000C                     fputs@fp:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0xB
   775  00000C                     	ds	1
   776  00000D                     _tolower$1147:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0xC
   780  00000D                     	ds	1
   781  00000E                     LCD_String_xy@row:
   782                           	callstack 0
   783  00000E                     fputs@c:
   784                           	callstack 0
   785  00000E                     atoi@neg:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0xD
   789  00000E                     	ds	1
   790  00000F                     LCD_String_xy@location:
   791                           	callstack 0
   792  00000F                     ___xxtofl@sign:
   793                           	callstack 0
   794  00000F                     fputs@i:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0xE
   798  00000F                     	ds	1
   799  000010                     ___xxtofl@exp:
   800                           	callstack 0
   801  000010                     _atoi$1052:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0xF
   805  000010                     	ds	1
   806  000011                     ?_pad:
   807                           	callstack 0
   808  000011                     pad@fp:
   809                           	callstack 0
   810  000011                     ___xxtofl@arg:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x10
   814  000011                     	ds	1
   815  000012                     _atoi$1054:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x11
   819  000012                     	ds	1
   820  000013                     pad@buf:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x12
   824  000013                     	ds	1
   825  000014                     _atoi$1053:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x13
   829  000014                     	ds	1
   830  000015                     ?___flmul:
   831                           	callstack 0
   832  000015                     pad@p:
   833                           	callstack 0
   834  000015                     atoi@n:
   835                           	callstack 0
   836  000015                     ___flmul@b:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x14
   840  000015                     	ds	2
   841  000017                     ??_pad:
   842                           
   843                           ; 1 bytes @ 0x16
   844  000017                     	ds	1
   845  000018                     pad@i:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x17
   849  000018                     	ds	1
   850  000019                     ___flmul@a:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x18
   854  000019                     	ds	1
   855  00001A                     pad@w:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x19
   859  00001A                     	ds	3
   860  00001D                     ??___flmul:
   861                           
   862                           ; 1 bytes @ 0x1C
   863  00001D                     	ds	4
   864  000021                     ___flmul@sign:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x20
   868  000021                     	ds	1
   869  000022                     ___flmul@grs:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x21
   873  000022                     	ds	4
   874  000026                     ___flmul@aexp:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x25
   878  000026                     	ds	1
   879  000027                     ___flmul@bexp:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x26
   883  000027                     	ds	1
   884  000028                     ___flmul@prod:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x27
   888  000028                     	ds	4
   889  00002C                     ___flmul@temp:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x2B
   893  00002C                     	ds	2
   894  00002E                     ?___fldiv:
   895                           	callstack 0
   896  00002E                     ___flge@ff1:
   897                           	callstack 0
   898  00002E                     ___fldiv@b:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x2D
   902  00002E                     	ds	4
   903  000032                     ___flge@ff2:
   904                           	callstack 0
   905  000032                     ___fldiv@a:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x31
   909  000032                     	ds	4
   910  000036                     ??___fldiv:
   911  000036                     ??___flge:
   912                           
   913                           ; 1 bytes @ 0x35
   914  000036                     	ds	4
   915  00003A                     ___fldiv@rem:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x39
   919  00003A                     	ds	4
   920  00003E                     ___fldiv@sign:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x3D
   924  00003E                     	ds	1
   925  00003F                     ___fldiv@new_exp:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x3E
   929  00003F                     	ds	2
   930  000041                     ___fldiv@grs:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x40
   934  000041                     	ds	4
   935  000045                     ___fldiv@bexp:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x44
   939  000045                     	ds	1
   940  000046                     ___fldiv@aexp:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x45
   944  000046                     	ds	1
   945  000047                     ?___fladd:
   946                           	callstack 0
   947  000047                     ?_floorf:
   948                           	callstack 0
   949  000047                     ___fladd@b:
   950                           	callstack 0
   951  000047                     floorf@x:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x46
   955  000047                     	ds	4
   956  00004B                     ??_floorf:
   957  00004B                     ___fladd@a:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x4A
   961  00004B                     	ds	4
   962  00004F                     ??___fladd:
   963                           
   964                           ; 1 bytes @ 0x4E
   965  00004F                     	ds	2
   966  000051                     floorf@m:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x50
   970  000051                     	ds	2
   971  000053                     ___fladd@signs:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x52
   975  000053                     	ds	1
   976  000054                     ___fladd@aexp:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x53
   980  000054                     	ds	1
   981  000055                     ___fladd@bexp:
   982                           	callstack 0
   983  000055                     floorf@e:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x54
   987  000055                     	ds	1
   988  000056                     ___fladd@grs:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x55
   992  000056                     	ds	1
   993  000057                     ?___flsub:
   994                           	callstack 0
   995  000057                     ?___fltol:
   996                           	callstack 0
   997  000057                     ___fltol@f1:
   998                           	callstack 0
   999  000057                     ___flsub@b:
  1000                           	callstack 0
  1001  000057                     floorf@u:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x56
  1005  000057                     	ds	4
  1006  00005B                     ??___fltol:
  1007  00005B                     ___flsub@a:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x5A
  1011  00005B                     	ds	4
  1012  00005F                     
  1013                           ; 1 bytes @ 0x5E
  1014 ;;
  1015 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1016 ;;
  1017 ;; *************** function _main *****************
  1018 ;; Defined at:
  1019 ;;		line 35 in file "smart_main.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0
  1034 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1036 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1037 ;;Total ram usage:        4 bytes
  1038 ;; Hardware stack levels required when called: 8
  1039 ;; This function calls:
  1040 ;;		_LCD_Char
  1041 ;;		_LCD_Clear
  1042 ;;		_LCD_Command
  1043 ;;		_LCD_Custom_Char
  1044 ;;		_LCD_Init
  1045 ;;		_LCD_String_xy
  1046 ;;		_MSdelay
  1047 ;;		_ReadADC
  1048 ;;		_ReadLUZ
  1049 ;;		___flge
  1050 ;;		___xxtofl
  1051 ;;		_sprintf
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text0
  1058  001E72                     __ptext0:
  1059                           	callstack 0
  1060  001E72                     _main:
  1061                           	callstack 23
  1062  001E72                     
  1063                           ;smart_main.c: 37:     OSCCON=0x72;
  1064  001E72  0E72               	movlw	114
  1065  001E74  6ED3               	movwf	211,c	;volatile
  1066                           
  1067                           ;smart_main.c: 38:     TRISE=0x00;
  1068  001E76  0E00               	movlw	0
  1069  001E78  6E96               	movwf	150,c	;volatile
  1070  001E7A                     
  1071                           ;smart_main.c: 41:  LCD_Init();
  1072  001E7A  EC02  F01F         	call	_LCD_Init	;wreg free
  1073  001E7E                     
  1074                           ;smart_main.c: 42:  LCD_String_xy ( 1 , 0 , " Buenos Dias " );
  1075  001E7E  0E00               	movlw	0
  1076  001E80  6E0B               	movwf	LCD_String_xy@pos^0,c
  1077  001E82  0E01               	movlw	low STR_1
  1078  001E84  6E0C               	movwf	LCD_String_xy@msg^0,c
  1079  001E86  0E08               	movlw	high STR_1
  1080  001E88  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1081  001E8A  0E01               	movlw	1
  1082  001E8C  EC73  F01E         	call	_LCD_String_xy
  1083  001E90                     l4341:
  1084                           
  1085                           ;smart_main.c: 43:     LCD_Clear();
  1086  001E90  EC39  F01F         	call	_LCD_Clear	;wreg free
  1087  001E94                     
  1088                           ;smart_main.c: 56:         tempar = ReadADC();
  1089  001E94  EC73  F019         	call	_ReadADC	;wreg free
  1090  001E98  0100               	movlb	0	; () banked
  1091  001E9A  C062  F0D6         	movff	?_ReadADC,_main$1340
  1092  001E9E  C063  F0D7         	movff	?_ReadADC+1,_main$1340+1
  1093  001EA2  6BD8               	clrf	(_main$1340+2)& (0+255),b
  1094  001EA4  6BD9               	clrf	(_main$1340+3)& (0+255),b
  1095  001EA6                     
  1096                           ; BSR set to: 0
  1097                           ;smart_main.c: 56:         tempar = ReadADC();
  1098  001EA6  C0D6  F007         	movff	_main$1340,___xxtofl@val
  1099  001EAA  C0D7  F008         	movff	_main$1340+1,___xxtofl@val+1
  1100  001EAE  C0D8  F009         	movff	_main$1340+2,___xxtofl@val+2
  1101  001EB2  C0D9  F00A         	movff	_main$1340+3,___xxtofl@val+3
  1102  001EB6  0E00               	movlw	0
  1103  001EB8  EC4C  F016         	call	___xxtofl
  1104  001EBC  C007  F0EE         	movff	?___xxtofl,_tempar
  1105  001EC0  C008  F0EF         	movff	?___xxtofl+1,_tempar+1
  1106  001EC4  C009  F0F0         	movff	?___xxtofl+2,_tempar+2
  1107  001EC8  C00A  F0F1         	movff	?___xxtofl+3,_tempar+3
  1108  001ECC                     
  1109                           ;smart_main.c: 57:         luz = ReadLUZ();
  1110  001ECC  EC34  F01C         	call	_ReadLUZ	;wreg free
  1111  001ED0  C001  F007         	movff	?_ReadLUZ,___xxtofl@val
  1112  001ED4  C002  F008         	movff	?_ReadLUZ+1,___xxtofl@val+1
  1113  001ED8  6A09               	clrf	(___xxtofl@val+2)^0,c
  1114  001EDA  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1115  001EDC  0E00               	movlw	0
  1116  001EDE  EC4C  F016         	call	___xxtofl
  1117  001EE2  C007  F0EA         	movff	?___xxtofl,_luz
  1118  001EE6  C008  F0EB         	movff	?___xxtofl+1,_luz+1
  1119  001EEA  C009  F0EC         	movff	?___xxtofl+2,_luz+2
  1120  001EEE  C00A  F0ED         	movff	?___xxtofl+3,_luz+3
  1121  001EF2                     
  1122                           ;smart_main.c: 58:         if(tempar >20&&(luz>0&&luz<400)){
  1123  001EF2  0E00               	movlw	0
  1124  001EF4  6E2E               	movwf	___flge@ff1^0,c
  1125  001EF6  0E00               	movlw	0
  1126  001EF8  6E2F               	movwf	(___flge@ff1+1)^0,c
  1127  001EFA  0EA0               	movlw	160
  1128  001EFC  6E30               	movwf	(___flge@ff1+2)^0,c
  1129  001EFE  0E41               	movlw	65
  1130  001F00  6E31               	movwf	(___flge@ff1+3)^0,c
  1131  001F02  C0EE  F032         	movff	_tempar,___flge@ff2
  1132  001F06  C0EF  F033         	movff	_tempar+1,___flge@ff2+1
  1133  001F0A  C0F0  F034         	movff	_tempar+2,___flge@ff2+2
  1134  001F0E  C0F1  F035         	movff	_tempar+3,___flge@ff2+3
  1135  001F12  EC72  F018         	call	___flge	;wreg free
  1136  001F16  B0D8               	btfsc	status,0,c
  1137  001F18  EF90  F00F         	goto	u5111
  1138  001F1C  EF92  F00F         	goto	u5110
  1139  001F20                     u5111:
  1140  001F20  EF12  F010         	goto	l4375
  1141  001F24                     u5110:
  1142  001F24  0E00               	movlw	0
  1143  001F26  6E2E               	movwf	___flge@ff1^0,c
  1144  001F28  0E00               	movlw	0
  1145  001F2A  6E2F               	movwf	(___flge@ff1+1)^0,c
  1146  001F2C  0E00               	movlw	0
  1147  001F2E  6E30               	movwf	(___flge@ff1+2)^0,c
  1148  001F30  0E00               	movlw	0
  1149  001F32  6E31               	movwf	(___flge@ff1+3)^0,c
  1150  001F34  C0EA  F032         	movff	_luz,___flge@ff2
  1151  001F38  C0EB  F033         	movff	_luz+1,___flge@ff2+1
  1152  001F3C  C0EC  F034         	movff	_luz+2,___flge@ff2+2
  1153  001F40  C0ED  F035         	movff	_luz+3,___flge@ff2+3
  1154  001F44  EC72  F018         	call	___flge	;wreg free
  1155  001F48  B0D8               	btfsc	status,0,c
  1156  001F4A  EFA9  F00F         	goto	u5121
  1157  001F4E  EFAB  F00F         	goto	u5120
  1158  001F52                     u5121:
  1159  001F52  EF12  F010         	goto	l4375
  1160  001F56                     u5120:
  1161  001F56  C0EA  F02E         	movff	_luz,___flge@ff1
  1162  001F5A  C0EB  F02F         	movff	_luz+1,___flge@ff1+1
  1163  001F5E  C0EC  F030         	movff	_luz+2,___flge@ff1+2
  1164  001F62  C0ED  F031         	movff	_luz+3,___flge@ff1+3
  1165  001F66  0E00               	movlw	0
  1166  001F68  6E32               	movwf	___flge@ff2^0,c
  1167  001F6A  0E00               	movlw	0
  1168  001F6C  6E33               	movwf	(___flge@ff2+1)^0,c
  1169  001F6E  0EC8               	movlw	200
  1170  001F70  6E34               	movwf	(___flge@ff2+2)^0,c
  1171  001F72  0E43               	movlw	67
  1172  001F74  6E35               	movwf	(___flge@ff2+3)^0,c
  1173  001F76  EC72  F018         	call	___flge	;wreg free
  1174  001F7A  B0D8               	btfsc	status,0,c
  1175  001F7C  EFC2  F00F         	goto	u5131
  1176  001F80  EFC4  F00F         	goto	u5130
  1177  001F84                     u5131:
  1178  001F84  EF12  F010         	goto	l4375
  1179  001F88                     u5130:
  1180  001F88                     
  1181                           ;smart_main.c: 59:             sprintf(Stemp, "%0.1f C", tempar);
  1182  001F88  0E64               	movlw	low _Stemp
  1183  001F8A  0100               	movlb	0	; () banked
  1184  001F8C  6FC6               	movwf	sprintf@s& (0+255),b
  1185  001F8E  0E01               	movlw	high _Stemp
  1186  001F90  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1187  001F92  0E0F               	movlw	low STR_2
  1188  001F94  6FC8               	movwf	sprintf@fmt& (0+255),b
  1189  001F96  0E08               	movlw	high STR_2
  1190  001F98  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1191  001F9A  C0EE  F0CA         	movff	_tempar,?_sprintf+4
  1192  001F9E  C0EF  F0CB         	movff	_tempar+1,?_sprintf+5
  1193  001FA2  C0F0  F0CC         	movff	_tempar+2,?_sprintf+6
  1194  001FA6  C0F1  F0CD         	movff	_tempar+3,?_sprintf+7
  1195  001FAA  EC25  F01D         	call	_sprintf	;wreg free
  1196  001FAE                     
  1197                           ;smart_main.c: 60:             LCD_String_xy(1, 0, Stemp);
  1198  001FAE  0E00               	movlw	0
  1199  001FB0  6E0B               	movwf	LCD_String_xy@pos^0,c
  1200  001FB2  0E64               	movlw	low _Stemp
  1201  001FB4  6E0C               	movwf	LCD_String_xy@msg^0,c
  1202  001FB6  0E01               	movlw	high _Stemp
  1203  001FB8  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1204  001FBA  0E01               	movlw	1
  1205  001FBC  EC73  F01E         	call	_LCD_String_xy
  1206  001FC0                     
  1207                           ;smart_main.c: 61:             sprintf(Sluz, "%0.1f", luz);
  1208  001FC0  0E50               	movlw	low _Sluz
  1209  001FC2  0100               	movlb	0	; () banked
  1210  001FC4  6FC6               	movwf	sprintf@s& (0+255),b
  1211  001FC6  0E01               	movlw	high _Sluz
  1212  001FC8  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1213  001FCA  0E17               	movlw	low STR_3
  1214  001FCC  6FC8               	movwf	sprintf@fmt& (0+255),b
  1215  001FCE  0E08               	movlw	high STR_3
  1216  001FD0  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1217  001FD2  C0EA  F0CA         	movff	_luz,?_sprintf+4
  1218  001FD6  C0EB  F0CB         	movff	_luz+1,?_sprintf+5
  1219  001FDA  C0EC  F0CC         	movff	_luz+2,?_sprintf+6
  1220  001FDE  C0ED  F0CD         	movff	_luz+3,?_sprintf+7
  1221  001FE2  EC25  F01D         	call	_sprintf	;wreg free
  1222                           
  1223                           ;smart_main.c: 62:             LCD_String_xy(1, 6, Sluz);
  1224  001FE6  0E06               	movlw	6
  1225  001FE8  6E0B               	movwf	LCD_String_xy@pos^0,c
  1226  001FEA  0E50               	movlw	low _Sluz
  1227  001FEC  6E0C               	movwf	LCD_String_xy@msg^0,c
  1228  001FEE  0E01               	movlw	high _Sluz
  1229  001FF0  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1230  001FF2  0E01               	movlw	1
  1231  001FF4  EC73  F01E         	call	_LCD_String_xy
  1232  001FF8                     
  1233                           ;smart_main.c: 63:             LCD_Custom_Char ( 0 ,character2);
  1234  001FF8  0E80               	movlw	low _character2
  1235  001FFA  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1236  001FFC  0E01               	movlw	high _character2
  1237  001FFE  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1238  002000  0E00               	movlw	0
  1239  002002  ECE8  F01D         	call	_LCD_Custom_Char
  1240  002006                     
  1241                           ;smart_main.c: 64:             LCD_Command ( 0xc0);
  1242  002006  0EC0               	movlw	192
  1243  002008  EC9D  F01D         	call	_LCD_Command
  1244  00200C                     
  1245                           ;smart_main.c: 65:             LCD_Char (0);
  1246  00200C  0E00               	movlw	0
  1247  00200E  EC77  F01D         	call	_LCD_Char
  1248  002012                     
  1249                           ;smart_main.c: 66:             MSdelay(5000);
  1250  002012  0E13               	movlw	19
  1251  002014  6E02               	movwf	(MSdelay@val+1)^0,c
  1252  002016  0E88               	movlw	136
  1253  002018  6E01               	movwf	MSdelay@val^0,c
  1254  00201A  ECC3  F01D         	call	_MSdelay	;wreg free
  1255  00201E                     
  1256                           ;smart_main.c: 67:             LATE0 = 1;
  1257  00201E  808D               	bsf	3981,0,c	;volatile
  1258  002020                     
  1259                           ;smart_main.c: 68:             LATE1 = 1;
  1260  002020  828D               	bsf	3981,1,c	;volatile
  1261  002022                     
  1262                           ;smart_main.c: 69:             LATE2 = 1;
  1263  002022  848D               	bsf	3981,2,c	;volatile
  1264  002024                     l4375:
  1265                           
  1266                           ;smart_main.c: 71:         if((tempar >10&&tempar<=20)&&(luz>400&&luz<700)){
  1267  002024  0E00               	movlw	0
  1268  002026  6E2E               	movwf	___flge@ff1^0,c
  1269  002028  0E00               	movlw	0
  1270  00202A  6E2F               	movwf	(___flge@ff1+1)^0,c
  1271  00202C  0E20               	movlw	32
  1272  00202E  6E30               	movwf	(___flge@ff1+2)^0,c
  1273  002030  0E41               	movlw	65
  1274  002032  6E31               	movwf	(___flge@ff1+3)^0,c
  1275  002034  C0EE  F032         	movff	_tempar,___flge@ff2
  1276  002038  C0EF  F033         	movff	_tempar+1,___flge@ff2+1
  1277  00203C  C0F0  F034         	movff	_tempar+2,___flge@ff2+2
  1278  002040  C0F1  F035         	movff	_tempar+3,___flge@ff2+3
  1279  002044  EC72  F018         	call	___flge	;wreg free
  1280  002048  B0D8               	btfsc	status,0,c
  1281  00204A  EF29  F010         	goto	u5141
  1282  00204E  EF2B  F010         	goto	u5140
  1283  002052                     u5141:
  1284  002052  EFC4  F010         	goto	l4403
  1285  002056                     u5140:
  1286  002056  0E00               	movlw	0
  1287  002058  6E2E               	movwf	___flge@ff1^0,c
  1288  00205A  0E00               	movlw	0
  1289  00205C  6E2F               	movwf	(___flge@ff1+1)^0,c
  1290  00205E  0EA0               	movlw	160
  1291  002060  6E30               	movwf	(___flge@ff1+2)^0,c
  1292  002062  0E41               	movlw	65
  1293  002064  6E31               	movwf	(___flge@ff1+3)^0,c
  1294  002066  C0EE  F032         	movff	_tempar,___flge@ff2
  1295  00206A  C0EF  F033         	movff	_tempar+1,___flge@ff2+1
  1296  00206E  C0F0  F034         	movff	_tempar+2,___flge@ff2+2
  1297  002072  C0F1  F035         	movff	_tempar+3,___flge@ff2+3
  1298  002076  EC72  F018         	call	___flge	;wreg free
  1299  00207A  A0D8               	btfss	status,0,c
  1300  00207C  EF42  F010         	goto	u5151
  1301  002080  EF44  F010         	goto	u5150
  1302  002084                     u5151:
  1303  002084  EFC4  F010         	goto	l4403
  1304  002088                     u5150:
  1305  002088  0E00               	movlw	0
  1306  00208A  6E2E               	movwf	___flge@ff1^0,c
  1307  00208C  0E00               	movlw	0
  1308  00208E  6E2F               	movwf	(___flge@ff1+1)^0,c
  1309  002090  0EC8               	movlw	200
  1310  002092  6E30               	movwf	(___flge@ff1+2)^0,c
  1311  002094  0E43               	movlw	67
  1312  002096  6E31               	movwf	(___flge@ff1+3)^0,c
  1313  002098  C0EA  F032         	movff	_luz,___flge@ff2
  1314  00209C  C0EB  F033         	movff	_luz+1,___flge@ff2+1
  1315  0020A0  C0EC  F034         	movff	_luz+2,___flge@ff2+2
  1316  0020A4  C0ED  F035         	movff	_luz+3,___flge@ff2+3
  1317  0020A8  EC72  F018         	call	___flge	;wreg free
  1318  0020AC  B0D8               	btfsc	status,0,c
  1319  0020AE  EF5B  F010         	goto	u5161
  1320  0020B2  EF5D  F010         	goto	u5160
  1321  0020B6                     u5161:
  1322  0020B6  EFC4  F010         	goto	l4403
  1323  0020BA                     u5160:
  1324  0020BA  C0EA  F02E         	movff	_luz,___flge@ff1
  1325  0020BE  C0EB  F02F         	movff	_luz+1,___flge@ff1+1
  1326  0020C2  C0EC  F030         	movff	_luz+2,___flge@ff1+2
  1327  0020C6  C0ED  F031         	movff	_luz+3,___flge@ff1+3
  1328  0020CA  0E00               	movlw	0
  1329  0020CC  6E32               	movwf	___flge@ff2^0,c
  1330  0020CE  0E00               	movlw	0
  1331  0020D0  6E33               	movwf	(___flge@ff2+1)^0,c
  1332  0020D2  0E2F               	movlw	47
  1333  0020D4  6E34               	movwf	(___flge@ff2+2)^0,c
  1334  0020D6  0E44               	movlw	68
  1335  0020D8  6E35               	movwf	(___flge@ff2+3)^0,c
  1336  0020DA  EC72  F018         	call	___flge	;wreg free
  1337  0020DE  B0D8               	btfsc	status,0,c
  1338  0020E0  EF74  F010         	goto	u5171
  1339  0020E4  EF76  F010         	goto	u5170
  1340  0020E8                     u5171:
  1341  0020E8  EFC4  F010         	goto	l4403
  1342  0020EC                     u5170:
  1343  0020EC                     
  1344                           ;smart_main.c: 72:             sprintf(Stemp, "%0.1f C", tempar);
  1345  0020EC  0E64               	movlw	low _Stemp
  1346  0020EE  0100               	movlb	0	; () banked
  1347  0020F0  6FC6               	movwf	sprintf@s& (0+255),b
  1348  0020F2  0E01               	movlw	high _Stemp
  1349  0020F4  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1350  0020F6  0E0F               	movlw	low STR_2
  1351  0020F8  6FC8               	movwf	sprintf@fmt& (0+255),b
  1352  0020FA  0E08               	movlw	high STR_2
  1353  0020FC  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1354  0020FE  C0EE  F0CA         	movff	_tempar,?_sprintf+4
  1355  002102  C0EF  F0CB         	movff	_tempar+1,?_sprintf+5
  1356  002106  C0F0  F0CC         	movff	_tempar+2,?_sprintf+6
  1357  00210A  C0F1  F0CD         	movff	_tempar+3,?_sprintf+7
  1358  00210E  EC25  F01D         	call	_sprintf	;wreg free
  1359  002112                     
  1360                           ;smart_main.c: 73:             LCD_String_xy(1, 0, Stemp);
  1361  002112  0E00               	movlw	0
  1362  002114  6E0B               	movwf	LCD_String_xy@pos^0,c
  1363  002116  0E64               	movlw	low _Stemp
  1364  002118  6E0C               	movwf	LCD_String_xy@msg^0,c
  1365  00211A  0E01               	movlw	high _Stemp
  1366  00211C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1367  00211E  0E01               	movlw	1
  1368  002120  EC73  F01E         	call	_LCD_String_xy
  1369  002124                     
  1370                           ;smart_main.c: 74:             sprintf(Sluz, "%0.1f", luz);
  1371  002124  0E50               	movlw	low _Sluz
  1372  002126  0100               	movlb	0	; () banked
  1373  002128  6FC6               	movwf	sprintf@s& (0+255),b
  1374  00212A  0E01               	movlw	high _Sluz
  1375  00212C  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1376  00212E  0E17               	movlw	low STR_3
  1377  002130  6FC8               	movwf	sprintf@fmt& (0+255),b
  1378  002132  0E08               	movlw	high STR_3
  1379  002134  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1380  002136  C0EA  F0CA         	movff	_luz,?_sprintf+4
  1381  00213A  C0EB  F0CB         	movff	_luz+1,?_sprintf+5
  1382  00213E  C0EC  F0CC         	movff	_luz+2,?_sprintf+6
  1383  002142  C0ED  F0CD         	movff	_luz+3,?_sprintf+7
  1384  002146  EC25  F01D         	call	_sprintf	;wreg free
  1385                           
  1386                           ;smart_main.c: 75:             LCD_String_xy(1, 6, Sluz);
  1387  00214A  0E06               	movlw	6
  1388  00214C  6E0B               	movwf	LCD_String_xy@pos^0,c
  1389  00214E  0E50               	movlw	low _Sluz
  1390  002150  6E0C               	movwf	LCD_String_xy@msg^0,c
  1391  002152  0E01               	movlw	high _Sluz
  1392  002154  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1393  002156  0E01               	movlw	1
  1394  002158  EC73  F01E         	call	_LCD_String_xy
  1395  00215C                     
  1396                           ;smart_main.c: 76:             LCD_Custom_Char ( 0 ,character1);
  1397  00215C  0E88               	movlw	low _character1
  1398  00215E  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1399  002160  0E01               	movlw	high _character1
  1400  002162  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1401  002164  0E00               	movlw	0
  1402  002166  ECE8  F01D         	call	_LCD_Custom_Char
  1403  00216A                     
  1404                           ;smart_main.c: 77:             LCD_Command ( 0xc0);
  1405  00216A  0EC0               	movlw	192
  1406  00216C  EC9D  F01D         	call	_LCD_Command
  1407  002170                     
  1408                           ;smart_main.c: 78:             LCD_Char (0);
  1409  002170  0E00               	movlw	0
  1410  002172  EC77  F01D         	call	_LCD_Char
  1411  002176                     
  1412                           ;smart_main.c: 79:             MSdelay(5000);
  1413  002176  0E13               	movlw	19
  1414  002178  6E02               	movwf	(MSdelay@val+1)^0,c
  1415  00217A  0E88               	movlw	136
  1416  00217C  6E01               	movwf	MSdelay@val^0,c
  1417  00217E  ECC3  F01D         	call	_MSdelay	;wreg free
  1418  002182                     
  1419                           ;smart_main.c: 80:             LATE0 = 1;
  1420  002182  808D               	bsf	3981,0,c	;volatile
  1421  002184                     
  1422                           ;smart_main.c: 81:             LATE1 = 1;
  1423  002184  828D               	bsf	3981,1,c	;volatile
  1424  002186                     
  1425                           ;smart_main.c: 82:             LATE2 = 0;
  1426  002186  948D               	bcf	3981,2,c	;volatile
  1427  002188                     l4403:
  1428                           
  1429                           ;smart_main.c: 84:         if(tempar <10&&(luz>700&&luz<1500)){
  1430  002188  C0EE  F02E         	movff	_tempar,___flge@ff1
  1431  00218C  C0EF  F02F         	movff	_tempar+1,___flge@ff1+1
  1432  002190  C0F0  F030         	movff	_tempar+2,___flge@ff1+2
  1433  002194  C0F1  F031         	movff	_tempar+3,___flge@ff1+3
  1434  002198  0E00               	movlw	0
  1435  00219A  6E32               	movwf	___flge@ff2^0,c
  1436  00219C  0E00               	movlw	0
  1437  00219E  6E33               	movwf	(___flge@ff2+1)^0,c
  1438  0021A0  0E20               	movlw	32
  1439  0021A2  6E34               	movwf	(___flge@ff2+2)^0,c
  1440  0021A4  0E41               	movlw	65
  1441  0021A6  6E35               	movwf	(___flge@ff2+3)^0,c
  1442  0021A8  EC72  F018         	call	___flge	;wreg free
  1443  0021AC  B0D8               	btfsc	status,0,c
  1444  0021AE  EFDB  F010         	goto	u5181
  1445  0021B2  EFDD  F010         	goto	u5180
  1446  0021B6                     u5181:
  1447  0021B6  EF48  F00F         	goto	l4341
  1448  0021BA                     u5180:
  1449  0021BA  0E00               	movlw	0
  1450  0021BC  6E2E               	movwf	___flge@ff1^0,c
  1451  0021BE  0E00               	movlw	0
  1452  0021C0  6E2F               	movwf	(___flge@ff1+1)^0,c
  1453  0021C2  0E2F               	movlw	47
  1454  0021C4  6E30               	movwf	(___flge@ff1+2)^0,c
  1455  0021C6  0E44               	movlw	68
  1456  0021C8  6E31               	movwf	(___flge@ff1+3)^0,c
  1457  0021CA  C0EA  F032         	movff	_luz,___flge@ff2
  1458  0021CE  C0EB  F033         	movff	_luz+1,___flge@ff2+1
  1459  0021D2  C0EC  F034         	movff	_luz+2,___flge@ff2+2
  1460  0021D6  C0ED  F035         	movff	_luz+3,___flge@ff2+3
  1461  0021DA  EC72  F018         	call	___flge	;wreg free
  1462  0021DE  B0D8               	btfsc	status,0,c
  1463  0021E0  EFF4  F010         	goto	u5191
  1464  0021E4  EFF6  F010         	goto	u5190
  1465  0021E8                     u5191:
  1466  0021E8  EF48  F00F         	goto	l4341
  1467  0021EC                     u5190:
  1468  0021EC  C0EA  F02E         	movff	_luz,___flge@ff1
  1469  0021F0  C0EB  F02F         	movff	_luz+1,___flge@ff1+1
  1470  0021F4  C0EC  F030         	movff	_luz+2,___flge@ff1+2
  1471  0021F8  C0ED  F031         	movff	_luz+3,___flge@ff1+3
  1472  0021FC  0E00               	movlw	0
  1473  0021FE  6E32               	movwf	___flge@ff2^0,c
  1474  002200  0E80               	movlw	128
  1475  002202  6E33               	movwf	(___flge@ff2+1)^0,c
  1476  002204  0EBB               	movlw	187
  1477  002206  6E34               	movwf	(___flge@ff2+2)^0,c
  1478  002208  0E44               	movlw	68
  1479  00220A  6E35               	movwf	(___flge@ff2+3)^0,c
  1480  00220C  EC72  F018         	call	___flge	;wreg free
  1481  002210  B0D8               	btfsc	status,0,c
  1482  002212  EF0D  F011         	goto	u5201
  1483  002216  EF0F  F011         	goto	u5200
  1484  00221A                     u5201:
  1485  00221A  EF48  F00F         	goto	l4341
  1486  00221E                     u5200:
  1487  00221E                     
  1488                           ;smart_main.c: 85:             sprintf(Stemp, "%0.1f C", tempar);
  1489  00221E  0E64               	movlw	low _Stemp
  1490  002220  0100               	movlb	0	; () banked
  1491  002222  6FC6               	movwf	sprintf@s& (0+255),b
  1492  002224  0E01               	movlw	high _Stemp
  1493  002226  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1494  002228  0E0F               	movlw	low STR_2
  1495  00222A  6FC8               	movwf	sprintf@fmt& (0+255),b
  1496  00222C  0E08               	movlw	high STR_2
  1497  00222E  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1498  002230  C0EE  F0CA         	movff	_tempar,?_sprintf+4
  1499  002234  C0EF  F0CB         	movff	_tempar+1,?_sprintf+5
  1500  002238  C0F0  F0CC         	movff	_tempar+2,?_sprintf+6
  1501  00223C  C0F1  F0CD         	movff	_tempar+3,?_sprintf+7
  1502  002240  EC25  F01D         	call	_sprintf	;wreg free
  1503  002244                     
  1504                           ;smart_main.c: 86:             LCD_String_xy(1, 0, Stemp);
  1505  002244  0E00               	movlw	0
  1506  002246  6E0B               	movwf	LCD_String_xy@pos^0,c
  1507  002248  0E64               	movlw	low _Stemp
  1508  00224A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1509  00224C  0E01               	movlw	high _Stemp
  1510  00224E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1511  002250  0E01               	movlw	1
  1512  002252  EC73  F01E         	call	_LCD_String_xy
  1513  002256                     
  1514                           ;smart_main.c: 87:             sprintf(Sluz, "%0.1f", luz);
  1515  002256  0E50               	movlw	low _Sluz
  1516  002258  0100               	movlb	0	; () banked
  1517  00225A  6FC6               	movwf	sprintf@s& (0+255),b
  1518  00225C  0E01               	movlw	high _Sluz
  1519  00225E  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1520  002260  0E17               	movlw	low STR_3
  1521  002262  6FC8               	movwf	sprintf@fmt& (0+255),b
  1522  002264  0E08               	movlw	high STR_3
  1523  002266  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1524  002268  C0EA  F0CA         	movff	_luz,?_sprintf+4
  1525  00226C  C0EB  F0CB         	movff	_luz+1,?_sprintf+5
  1526  002270  C0EC  F0CC         	movff	_luz+2,?_sprintf+6
  1527  002274  C0ED  F0CD         	movff	_luz+3,?_sprintf+7
  1528  002278  EC25  F01D         	call	_sprintf	;wreg free
  1529                           
  1530                           ;smart_main.c: 88:             LCD_String_xy(1, 6, Sluz);
  1531  00227C  0E06               	movlw	6
  1532  00227E  6E0B               	movwf	LCD_String_xy@pos^0,c
  1533  002280  0E50               	movlw	low _Sluz
  1534  002282  6E0C               	movwf	LCD_String_xy@msg^0,c
  1535  002284  0E01               	movlw	high _Sluz
  1536  002286  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1537  002288  0E01               	movlw	1
  1538  00228A  EC73  F01E         	call	_LCD_String_xy
  1539  00228E                     
  1540                           ;smart_main.c: 89:             LCD_Custom_Char ( 0 ,character1);
  1541  00228E  0E88               	movlw	low _character1
  1542  002290  6E09               	movwf	LCD_Custom_Char@msg^0,c
  1543  002292  0E01               	movlw	high _character1
  1544  002294  6E0A               	movwf	(LCD_Custom_Char@msg+1)^0,c
  1545  002296  0E00               	movlw	0
  1546  002298  ECE8  F01D         	call	_LCD_Custom_Char
  1547  00229C                     
  1548                           ;smart_main.c: 90:             LCD_Command ( 0xc0);
  1549  00229C  0EC0               	movlw	192
  1550  00229E  EC9D  F01D         	call	_LCD_Command
  1551  0022A2                     
  1552                           ;smart_main.c: 91:             LCD_Char (0);
  1553  0022A2  0E00               	movlw	0
  1554  0022A4  EC77  F01D         	call	_LCD_Char
  1555  0022A8                     
  1556                           ;smart_main.c: 92:             MSdelay(5000);
  1557  0022A8  0E13               	movlw	19
  1558  0022AA  6E02               	movwf	(MSdelay@val+1)^0,c
  1559  0022AC  0E88               	movlw	136
  1560  0022AE  6E01               	movwf	MSdelay@val^0,c
  1561  0022B0  ECC3  F01D         	call	_MSdelay	;wreg free
  1562  0022B4                     
  1563                           ;smart_main.c: 93:             LATE0 = 0;
  1564  0022B4  908D               	bcf	3981,0,c	;volatile
  1565  0022B6                     
  1566                           ;smart_main.c: 94:             LATE1 = 0;
  1567  0022B6  928D               	bcf	3981,1,c	;volatile
  1568  0022B8                     
  1569                           ;smart_main.c: 95:             LATE2 = 0;
  1570  0022B8  948D               	bcf	3981,2,c	;volatile
  1571  0022BA  EF48  F00F         	goto	l4341
  1572  0022BE  EF00  F000         	goto	start
  1573  0022C2                     __end_of_main:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _sprintf *****************
  1577 ;; Defined at:
  1578 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  s               2  102[BANK0 ] PTR unsigned char 
  1581 ;;		 -> Sluz(20), Stemp(20), 
  1582 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  1583 ;;		 -> STR_7(6), STR_6(8), STR_5(6), STR_4(8), 
  1584 ;;		 -> STR_3(6), STR_2(8), 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  f               6  112[BANK0 ] struct _IO_FILE
  1587 ;;  ap              2  110[BANK0 ] PTR void [1]
  1588 ;;		 -> ?_sprintf(2), 
  1589 ;;  ret             2    0        int 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2  102[BANK0 ] int 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1599 ;;      Params:         0       8       0       0       0       0       0       0       0
  1600 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1602 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1603 ;;Total ram usage:       16 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 7
  1606 ;; This function calls:
  1607 ;;		_vfprintf
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text1
  1614  003A4A                     __ptext1:
  1615                           	callstack 0
  1616  003A4A                     _sprintf:
  1617                           	callstack 23
  1618  003A4A  0ECA               	movlw	low (?_sprintf+4)
  1619  003A4C  0100               	movlb	0	; () banked
  1620  003A4E  6FCE               	movwf	sprintf@ap& (0+255),b
  1621  003A50  0E00               	movlw	high (?_sprintf+4)
  1622  003A52  6FCF               	movwf	(sprintf@ap+1)& (0+255),b
  1623  003A54  C0C6  F0D0         	movff	sprintf@s,sprintf@f
  1624  003A58  C0C7  F0D1         	movff	sprintf@s+1,sprintf@f+1
  1625  003A5C                     
  1626                           ; BSR set to: 0
  1627  003A5C  0E00               	movlw	0
  1628  003A5E  6FD3               	movwf	(sprintf@f+3)& (0+255),b
  1629  003A60  0E00               	movlw	0
  1630  003A62  6FD2               	movwf	(sprintf@f+2)& (0+255),b
  1631  003A64                     
  1632                           ; BSR set to: 0
  1633  003A64  0E00               	movlw	0
  1634  003A66  6FD5               	movwf	(sprintf@f+5)& (0+255),b
  1635  003A68  0E00               	movlw	0
  1636  003A6A  6FD4               	movwf	(sprintf@f+4)& (0+255),b
  1637  003A6C                     
  1638                           ; BSR set to: 0
  1639  003A6C  0ED0               	movlw	low sprintf@f
  1640  003A6E  6FBE               	movwf	vfprintf@fp& (0+255),b
  1641  003A70  0E00               	movlw	high sprintf@f
  1642  003A72  6FBF               	movwf	(vfprintf@fp+1)& (0+255),b
  1643  003A74  C0C8  F0C0         	movff	sprintf@fmt,vfprintf@fmt
  1644  003A78  C0C9  F0C1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1645  003A7C  0ECE               	movlw	low sprintf@ap
  1646  003A7E  6FC2               	movwf	vfprintf@ap& (0+255),b
  1647  003A80  0E00               	movlw	high sprintf@ap
  1648  003A82  6FC3               	movwf	(vfprintf@ap+1)& (0+255),b
  1649  003A84  EC67  F01C         	call	_vfprintf	;wreg free
  1650  003A88  0100               	movlb	0	; () banked
  1651  003A8A  51D2               	movf	(sprintf@f+2)& (0+255),w,b
  1652  003A8C  25C6               	addwf	sprintf@s& (0+255),w,b
  1653  003A8E  6ED9               	movwf	fsr2l,c
  1654  003A90  51D3               	movf	(sprintf@f+3)& (0+255),w,b
  1655  003A92  21C7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1656  003A94  6EDA               	movwf	fsr2h,c
  1657  003A96  0E00               	movlw	0
  1658  003A98  6EDF               	movwf	indf2,c
  1659  003A9A                     
  1660                           ; BSR set to: 0
  1661  003A9A  0012               	return		;funcret
  1662  003A9C                     __end_of_sprintf:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _vfprintf *****************
  1666 ;; Defined at:
  1667 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  fp              2   94[BANK0 ] PTR struct _IO_FILE
  1670 ;;		 -> sprintf@f(6), 
  1671 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  1672 ;;		 -> STR_7(6), STR_6(8), STR_5(6), STR_4(8), 
  1673 ;;		 -> STR_3(6), STR_2(8), 
  1674 ;;  ap              2   98[BANK0 ] PTR PTR void 
  1675 ;;		 -> sprintf@ap(2), 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  cfmt            2  100[BANK0 ] PTR unsigned char 
  1678 ;;		 -> STR_7(6), STR_6(8), STR_5(6), STR_4(8), 
  1679 ;;		 -> STR_3(6), STR_2(8), 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  2   94[BANK0 ] int 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1689 ;;      Params:         0       6       0       0       0       0       0       0       0
  1690 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1692 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1693 ;;Total ram usage:        8 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 6
  1696 ;; This function calls:
  1697 ;;		_vfpfcnvrt
  1698 ;; This function is called by:
  1699 ;;		_sprintf
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text2
  1704  0038CE                     __ptext2:
  1705                           	callstack 0
  1706  0038CE                     _vfprintf:
  1707                           	callstack 23
  1708  0038CE                     
  1709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1710  0038CE  C0C0  F0C4         	movff	vfprintf@fmt,vfprintf@cfmt
  1711  0038D2  C0C1  F0C5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1712  0038D6                     
  1713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1714  0038D6  0E00               	movlw	0
  1715  0038D8  0100               	movlb	0	; () banked
  1716  0038DA  6FF3               	movwf	(_nout+1)& (0+255),b
  1717  0038DC  0E00               	movlw	0
  1718  0038DE  6FF2               	movwf	_nout& (0+255),b
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1721  0038E0  EF85  F01C         	goto	l4241
  1722  0038E4                     l4239:
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1726  0038E4  C0BE  F0A6         	movff	vfprintf@fp,vfpfcnvrt@fp
  1727  0038E8  C0BF  F0A7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1728  0038EC  0EC4               	movlw	low vfprintf@cfmt
  1729  0038EE  6FA8               	movwf	vfpfcnvrt@fmt& (0+255),b
  1730  0038F0  0E00               	movlw	high vfprintf@cfmt
  1731  0038F2  6FA9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1732  0038F4  C0C2  F0AA         	movff	vfprintf@ap,vfpfcnvrt@ap
  1733  0038F8  C0C3  F0AB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1734  0038FC  EC45  F00A         	call	_vfpfcnvrt	;wreg free
  1735  003900  0100               	movlb	0	; () banked
  1736  003902  51A6               	movf	?_vfpfcnvrt& (0+255),w,b
  1737  003904  27F2               	addwf	_nout& (0+255),f,b
  1738  003906  51A7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1739  003908  23F3               	addwfc	(_nout+1)& (0+255),f,b
  1740  00390A                     l4241:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1744  00390A  C0C4  FFF6         	movff	vfprintf@cfmt,tblptrl
  1745  00390E  C0C5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1746  003912                     	if	0	;tblptru may be non-zero
  1747  003912                     	endif
  1748  003912                     	if	0	;tblptru may be non-zero
  1749  003912                     	endif
  1750  003912  0008               	tblrd		*
  1751  003914  50F5               	movf	tablat,w,c
  1752  003916  0900               	iorlw	0
  1753  003918  A4D8               	btfss	status,2,c
  1754  00391A  EF91  F01C         	goto	u5051
  1755  00391E  EF93  F01C         	goto	u5050
  1756  003922                     u5051:
  1757  003922  EF72  F01C         	goto	l4239
  1758  003926                     u5050:
  1759  003926                     
  1760                           ; BSR set to: 0
  1761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1762  003926  C0F2  F0BE         	movff	_nout,?_vfprintf
  1763  00392A  C0F3  F0BF         	movff	_nout+1,?_vfprintf+1
  1764  00392E                     
  1765                           ; BSR set to: 0
  1766  00392E  0012               	return		;funcret
  1767  003930                     __end_of_vfprintf:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _vfpfcnvrt *****************
  1771 ;; Defined at:
  1772 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  1775 ;;		 -> sprintf@f(6), 
  1776 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  1777 ;;		 -> vfprintf@cfmt(2), 
  1778 ;;  ap              2   74[BANK0 ] PTR PTR void 
  1779 ;;		 -> sprintf@ap(2), 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  llu             8    0        unsigned long long 
  1782 ;;  ll              8    0        long long 
  1783 ;;  f               4   86[BANK0 ] long long 
  1784 ;;  ct              3   90[BANK0 ] unsigned char [3]
  1785 ;;  vp              3    0        PTR void 
  1786 ;;  cp              3    0        PTR unsigned char 
  1787 ;;  done            2   80[BANK0 ] int 
  1788 ;;  i               2    0        int 
  1789 ;;  c               1   93[BANK0 ] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  2   70[BANK0 ] int 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1799 ;;      Params:         0       6       0       0       0       0       0       0       0
  1800 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1801 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1802 ;;      Totals:         0      24       0       0       0       0       0       0       0
  1803 ;;Total ram usage:       24 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 5
  1806 ;; This function calls:
  1807 ;;		_atoi
  1808 ;;		_efgtoa
  1809 ;;		_fputc
  1810 ;;		_isdigit
  1811 ;;		_isupper
  1812 ;;		_strncmp
  1813 ;;		_tolower
  1814 ;; This function is called by:
  1815 ;;		_vfprintf
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text3
  1820  00148A                     __ptext3:
  1821                           	callstack 0
  1822  00148A                     _vfpfcnvrt:
  1823                           	callstack 23
  1824  00148A                     
  1825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1826  00148A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1827  00148E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1828  001492  CFDE FFF6          	movff	postinc2,tblptrl
  1829  001496  CFDD FFF7          	movff	postdec2,tblptrh
  1830  00149A                     	if	0	;tblptru may be non-zero
  1831  00149A                     	endif
  1832  00149A                     	if	0	;tblptru may be non-zero
  1833  00149A                     	endif
  1834  00149A  0008               	tblrd		*
  1835  00149C  50F5               	movf	tablat,w,c
  1836  00149E  0A25               	xorlw	37
  1837  0014A0  A4D8               	btfss	status,2,c
  1838  0014A2  EF55  F00A         	goto	u4761
  1839  0014A6  EF57  F00A         	goto	u4760
  1840  0014AA                     u4761:
  1841  0014AA  EFBD  F00C         	goto	l4147
  1842  0014AE                     u4760:
  1843  0014AE                     
  1844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1845  0014AE  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1846  0014B2  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1847  0014B6  2ADE               	incf	postinc2,f,c
  1848  0014B8  0E00               	movlw	0
  1849  0014BA  22DD               	addwfc	postdec2,f,c
  1850  0014BC                     
  1851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1852  0014BC  0E00               	movlw	0
  1853  0014BE  0100               	movlb	0	; () banked
  1854  0014C0  6FF5               	movwf	(_width+1)& (0+255),b
  1855  0014C2  0E00               	movlw	0
  1856  0014C4  6FF4               	movwf	_width& (0+255),b
  1857  0014C6  C0F4  F0F8         	movff	_width,_flags
  1858  0014CA  C0F5  F0F9         	movff	_width+1,_flags+1
  1859  0014CE                     
  1860                           ; BSR set to: 0
  1861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1862  0014CE  69F6               	setf	_prec& (0+255),b
  1863  0014D0  69F7               	setf	(_prec+1)& (0+255),b
  1864  0014D2                     
  1865                           ; BSR set to: 0
  1866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1867  0014D2  0E00               	movlw	0
  1868  0014D4  6FB1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1869  0014D6  0E00               	movlw	0
  1870  0014D8  6FB0               	movwf	vfpfcnvrt@done& (0+255),b
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1873  0014DA  EFB5  F00A         	goto	l4069
  1874  0014DE                     l4043:
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1878  0014DE  81F8               	bsf	_flags& (0+255),0,b
  1879  0014E0                     l4045:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1883  0014E0  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1884  0014E4  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1885  0014E8  2ADE               	incf	postinc2,f,c
  1886  0014EA  0E00               	movlw	0
  1887  0014EC  22DD               	addwfc	postdec2,f,c
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1890  0014EE  EFB5  F00A         	goto	l4069
  1891  0014F2                     l4047:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1895  0014F2  83F8               	bsf	_flags& (0+255),1,b
  1896  0014F4  EF70  F00A         	goto	l4045
  1897  0014F8                     l4051:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1901  0014F8  85F8               	bsf	_flags& (0+255),2,b
  1902  0014FA  EF70  F00A         	goto	l4045
  1903  0014FE                     l4055:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1907  0014FE  87F8               	bsf	_flags& (0+255),3,b
  1908  001500  EF70  F00A         	goto	l4045
  1909  001504                     l4059:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1913  001504  89F8               	bsf	_flags& (0+255),4,b
  1914  001506  EF70  F00A         	goto	l4045
  1915  00150A                     l4063:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1919  00150A  0E00               	movlw	0
  1920  00150C  6FB1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1921  00150E  0E01               	movlw	1
  1922  001510  6FB0               	movwf	vfpfcnvrt@done& (0+255),b
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1925  001512  EFB5  F00A         	goto	l4069
  1926  001516                     l4067:
  1927                           
  1928                           ; BSR set to: 0
  1929  001516  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1930  00151A  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1931  00151E  CFDE FFF6          	movff	postinc2,tblptrl
  1932  001522  CFDD FFF7          	movff	postdec2,tblptrh
  1933  001526                     	if	0	;tblptru may be non-zero
  1934  001526                     	endif
  1935  001526                     	if	0	;tblptru may be non-zero
  1936  001526                     	endif
  1937  001526  0008               	tblrd		*
  1938  001528  50F5               	movf	tablat,w,c
  1939  00152A  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  1940  00152C  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1941                           
  1942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1943                           ; Switch size 1, requested type "simple"
  1944                           ; Number of cases is 1, Range of values is 0 to 0
  1945                           ; switch strategies available:
  1946                           ; Name         Instructions Cycles
  1947                           ; simple_byte            4     3 (average)
  1948                           ;	Chosen strategy is simple_byte
  1949  00152E  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1950  001530  0A00               	xorlw	0	; case 0
  1951  001532  B4D8               	btfsc	status,2,c
  1952  001534  EF9E  F00A         	goto	l4481
  1953  001538  EF85  F00A         	goto	l4063
  1954  00153C                     l4481:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ; Switch size 1, requested type "simple"
  1958                           ; Number of cases is 5, Range of values is 32 to 48
  1959                           ; switch strategies available:
  1960                           ; Name         Instructions Cycles
  1961                           ; simple_byte           16     9 (average)
  1962                           ;	Chosen strategy is simple_byte
  1963  00153C  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  1964  00153E  0A20               	xorlw	32	; case 32
  1965  001540  B4D8               	btfsc	status,2,c
  1966  001542  EF7F  F00A         	goto	l4055
  1967  001546  0A03               	xorlw	3	; case 35
  1968  001548  B4D8               	btfsc	status,2,c
  1969  00154A  EF82  F00A         	goto	l4059
  1970  00154E  0A08               	xorlw	8	; case 43
  1971  001550  B4D8               	btfsc	status,2,c
  1972  001552  EF7C  F00A         	goto	l4051
  1973  001556  0A06               	xorlw	6	; case 45
  1974  001558  B4D8               	btfsc	status,2,c
  1975  00155A  EF6F  F00A         	goto	l4043
  1976  00155E  0A1D               	xorlw	29	; case 48
  1977  001560  B4D8               	btfsc	status,2,c
  1978  001562  EF79  F00A         	goto	l4047
  1979  001566  EF85  F00A         	goto	l4063
  1980  00156A                     l4069:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1984  00156A  51B0               	movf	vfpfcnvrt@done& (0+255),w,b
  1985  00156C  11B1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1986  00156E  B4D8               	btfsc	status,2,c
  1987  001570  EFBC  F00A         	goto	u4771
  1988  001574  EFBE  F00A         	goto	u4770
  1989  001578                     u4771:
  1990  001578  EF8B  F00A         	goto	l4067
  1991  00157C                     u4770:
  1992  00157C                     
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1995  00157C  A1F8               	btfss	_flags& (0+255),0,b
  1996  00157E  EFC3  F00A         	goto	u4781
  1997  001582  EFC5  F00A         	goto	u4780
  1998  001586                     u4781:
  1999  001586  EFC6  F00A         	goto	l4073
  2000  00158A                     u4780:
  2001  00158A                     
  2002                           ; BSR set to: 0
  2003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2004  00158A  93F8               	bcf	_flags& (0+255),1,b
  2005  00158C                     l4073:
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2009  00158C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2010  001590  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2011  001594  CFDE FFF6          	movff	postinc2,tblptrl
  2012  001598  CFDD FFF7          	movff	postdec2,tblptrh
  2013  00159C                     	if	0	;tblptru may be non-zero
  2014  00159C                     	endif
  2015  00159C                     	if	0	;tblptru may be non-zero
  2016  00159C                     	endif
  2017  00159C  0008               	tblrd		*
  2018  00159E  50F5               	movf	tablat,w,c
  2019  0015A0  0A2E               	xorlw	46
  2020  0015A2  A4D8               	btfss	status,2,c
  2021  0015A4  EFD6  F00A         	goto	u4791
  2022  0015A8  EFD8  F00A         	goto	u4790
  2023  0015AC                     u4791:
  2024  0015AC  EF56  F00B         	goto	l4093
  2025  0015B0                     u4790:
  2026  0015B0                     
  2027                           ; BSR set to: 0
  2028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2029  0015B0  0E00               	movlw	0
  2030  0015B2  6FF7               	movwf	(_prec+1)& (0+255),b
  2031  0015B4  0E00               	movlw	0
  2032  0015B6  6FF6               	movwf	_prec& (0+255),b
  2033  0015B8                     
  2034                           ; BSR set to: 0
  2035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2036  0015B8  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2037  0015BC  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2038  0015C0  2ADE               	incf	postinc2,f,c
  2039  0015C2  0E00               	movlw	0
  2040  0015C4  22DD               	addwfc	postdec2,f,c
  2041  0015C6                     
  2042                           ; BSR set to: 0
  2043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2044  0015C6  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2045  0015CA  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2046  0015CE  CFDE FFF6          	movff	postinc2,tblptrl
  2047  0015D2  CFDD FFF7          	movff	postdec2,tblptrh
  2048  0015D6                     	if	0	;tblptru may be non-zero
  2049  0015D6                     	endif
  2050  0015D6                     	if	0	;tblptru may be non-zero
  2051  0015D6                     	endif
  2052  0015D6  0008               	tblrd		*
  2053  0015D8  50F5               	movf	tablat,w,c
  2054  0015DA  0A2A               	xorlw	42
  2055  0015DC  A4D8               	btfss	status,2,c
  2056  0015DE  EFF3  F00A         	goto	u4801
  2057  0015E2  EFF5  F00A         	goto	u4800
  2058  0015E6                     u4801:
  2059  0015E6  EF12  F00B         	goto	l4083
  2060  0015EA                     u4800:
  2061  0015EA                     
  2062                           ; BSR set to: 0
  2063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2064  0015EA  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2065  0015EE  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2066  0015F2  2ADE               	incf	postinc2,f,c
  2067  0015F4  0E00               	movlw	0
  2068  0015F6  22DD               	addwfc	postdec2,f,c
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2071  0015F8  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2072  0015FC  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2073  001600  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  2074  001604  0E02               	movlw	2
  2075  001606  26DE               	addwf	postinc2,f,c
  2076  001608  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  2077  00160C  0E00               	movlw	0
  2078  00160E  22DD               	addwfc	postdec2,f,c
  2079  001610  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2080  001614  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2081  001618  CFDE F0F6          	movff	postinc2,_prec
  2082  00161C  CFDD F0F7          	movff	postdec2,_prec+1
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2085  001620  EF56  F00B         	goto	l4093
  2086  001624                     l4083:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2090  001624  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2091  001628  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2092  00162C  CFDE F008          	movff	postinc2,atoi@s
  2093  001630  CFDD F009          	movff	postdec2,atoi@s+1
  2094  001634  EC26  F017         	call	_atoi	;wreg free
  2095  001638  C008  F0F6         	movff	?_atoi,_prec
  2096  00163C  C009  F0F7         	movff	?_atoi+1,_prec+1
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2099  001640  EF29  F00B         	goto	l4087
  2100  001644                     l4085:
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2104  001644  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2105  001648  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2106  00164C  2ADE               	incf	postinc2,f,c
  2107  00164E  0E00               	movlw	0
  2108  001650  22DD               	addwfc	postdec2,f,c
  2109  001652                     l4087:
  2110  001652  0ED0               	movlw	208
  2111  001654  0100               	movlb	0	; () banked
  2112  001656  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  2113  001658  0EFF               	movlw	255
  2114  00165A  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2115  00165C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2116  001660  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2117  001664  CFDE FFF6          	movff	postinc2,tblptrl
  2118  001668  CFDD FFF7          	movff	postdec2,tblptrh
  2119  00166C                     	if	0	;tblptru may be non-zero
  2120  00166C                     	endif
  2121  00166C                     	if	0	;tblptru may be non-zero
  2122  00166C                     	endif
  2123  00166C  0008               	tblrd		*
  2124  00166E  50F5               	movf	tablat,w,c
  2125  001670  6FAE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2126  001672  6BAF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2127  001674  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  2128  001676  27AE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2129  001678  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2130  00167A  23AF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2131  00167C  51AF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2132  00167E  E10A               	bnz	u4810
  2133  001680  0E0A               	movlw	10
  2134  001682  5DAE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2135  001684  A0D8               	btfss	status,0,c
  2136  001686  EF47  F00B         	goto	u4811
  2137  00168A  EF4A  F00B         	goto	u4810
  2138  00168E                     u4811:
  2139  00168E  0E01               	movlw	1
  2140  001690  EF4B  F00B         	goto	u4820
  2141  001694                     u4810:
  2142  001694  0E00               	movlw	0
  2143  001696                     u4820:
  2144  001696  6FB2               	movwf	_vfpfcnvrt$1014& (0+255),b
  2145  001698  6BB3               	clrf	(_vfpfcnvrt$1014+1)& (0+255),b
  2146  00169A                     
  2147                           ; BSR set to: 0
  2148  00169A  51B2               	movf	_vfpfcnvrt$1014& (0+255),w,b
  2149  00169C  11B3               	iorwf	(_vfpfcnvrt$1014+1)& (0+255),w,b
  2150  00169E  A4D8               	btfss	status,2,c
  2151  0016A0  EF54  F00B         	goto	u4831
  2152  0016A4  EF56  F00B         	goto	u4830
  2153  0016A8                     u4831:
  2154  0016A8  EF22  F00B         	goto	l4085
  2155  0016AC                     u4830:
  2156  0016AC                     l4093:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2160  0016AC  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2161  0016B0  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2162  0016B4  CFDE FFF6          	movff	postinc2,tblptrl
  2163  0016B8  CFDD FFF7          	movff	postdec2,tblptrh
  2164  0016BC                     	if	0	;tblptru may be non-zero
  2165  0016BC                     	endif
  2166  0016BC                     	if	0	;tblptru may be non-zero
  2167  0016BC                     	endif
  2168  0016BC  0008               	tblrd		*
  2169  0016BE  50F5               	movf	tablat,w,c
  2170  0016C0  6E07               	movwf	tolower@c^0,c
  2171  0016C2  6A08               	clrf	(tolower@c+1)^0,c
  2172  0016C4  EC98  F01C         	call	_tolower	;wreg free
  2173  0016C8  5007               	movf	?_tolower^0,w,c
  2174  0016CA  0100               	movlb	0	; () banked
  2175  0016CC  6FBA               	movwf	vfpfcnvrt@ct& (0+255),b
  2176  0016CE                     
  2177                           ; BSR set to: 0
  2178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2179  0016CE  51BA               	movf	vfpfcnvrt@ct& (0+255),w,b
  2180  0016D0  B4D8               	btfsc	status,2,c
  2181  0016D2  EF6D  F00B         	goto	u4841
  2182  0016D6  EF6F  F00B         	goto	u4840
  2183  0016DA                     u4841:
  2184  0016DA  EFA9  F00B         	goto	l4103
  2185  0016DE                     u4840:
  2186  0016DE                     
  2187                           ; BSR set to: 0
  2188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2189  0016DE  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2190  0016E2  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2191  0016E6  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  2192  0016EA  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  2193  0016EE  0E01               	movlw	1
  2194  0016F0  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  2195  0016F2  0E00               	movlw	0
  2196  0016F4  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2197  0016F6  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2198  0016FA  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2199  0016FE                     	if	0	;tblptru may be non-zero
  2200  0016FE                     	endif
  2201  0016FE                     	if	0	;tblptru may be non-zero
  2202  0016FE                     	endif
  2203  0016FE  0008               	tblrd		*
  2204  001700  50F5               	movf	tablat,w,c
  2205  001702  6E07               	movwf	tolower@c^0,c
  2206  001704  6A08               	clrf	(tolower@c+1)^0,c
  2207  001706  EC98  F01C         	call	_tolower	;wreg free
  2208  00170A  5007               	movf	?_tolower^0,w,c
  2209  00170C  0100               	movlb	0	; () banked
  2210  00170E  6FBB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2211  001710                     
  2212                           ; BSR set to: 0
  2213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2214  001710  51BB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2215  001712  B4D8               	btfsc	status,2,c
  2216  001714  EF8E  F00B         	goto	u4851
  2217  001718  EF90  F00B         	goto	u4850
  2218  00171C                     u4851:
  2219  00171C  EFA9  F00B         	goto	l4103
  2220  001720                     u4850:
  2221  001720                     
  2222                           ; BSR set to: 0
  2223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2224  001720  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2225  001724  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2226  001728  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  2227  00172C  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  2228  001730  0E02               	movlw	2
  2229  001732  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  2230  001734  0E00               	movlw	0
  2231  001736  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2232  001738  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2233  00173C  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2234  001740                     	if	0	;tblptru may be non-zero
  2235  001740                     	endif
  2236  001740                     	if	0	;tblptru may be non-zero
  2237  001740                     	endif
  2238  001740  0008               	tblrd		*
  2239  001742  50F5               	movf	tablat,w,c
  2240  001744  6E07               	movwf	tolower@c^0,c
  2241  001746  6A08               	clrf	(tolower@c+1)^0,c
  2242  001748  EC98  F01C         	call	_tolower	;wreg free
  2243  00174C  5007               	movf	?_tolower^0,w,c
  2244  00174E  0100               	movlb	0	; () banked
  2245  001750  6FBC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2246  001752                     l4103:
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2250  001752  0E66               	movlw	102
  2251  001754  19BA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2252  001756  A4D8               	btfss	status,2,c
  2253  001758  EFB0  F00B         	goto	u4861
  2254  00175C  EFB2  F00B         	goto	u4860
  2255  001760                     u4861:
  2256  001760  EFF2  F00B         	goto	l4115
  2257  001764                     u4860:
  2258  001764                     
  2259                           ; BSR set to: 0
  2260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2261  001764  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2262  001768  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2263  00176C  CFDE FFF6          	movff	postinc2,tblptrl
  2264  001770  CFDD FFF7          	movff	postdec2,tblptrh
  2265  001774                     	if	0	;tblptru may be non-zero
  2266  001774                     	endif
  2267  001774                     	if	0	;tblptru may be non-zero
  2268  001774                     	endif
  2269  001774  0008               	tblrd		*
  2270  001776  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  2271  00177A                     
  2272                           ; BSR set to: 0
  2273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2274  00177A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2275  00177E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2276  001782  2ADE               	incf	postinc2,f,c
  2277  001784  0E00               	movlw	0
  2278  001786  22DD               	addwfc	postdec2,f,c
  2279  001788                     
  2280                           ; BSR set to: 0
  2281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2282  001788  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2283  00178C  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2284  001790  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  2285  001794  0E04               	movlw	4
  2286  001796  26DE               	addwf	postinc2,f,c
  2287  001798  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  2288  00179C  0E00               	movlw	0
  2289  00179E  22DD               	addwfc	postdec2,f,c
  2290  0017A0  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2291  0017A4  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2292  0017A8  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f
  2293  0017AC  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+1
  2294  0017B0  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+2
  2295  0017B4  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+3
  2296  0017B8                     l4111:
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2300  0017B8  C0A6  F062         	movff	vfpfcnvrt@fp,efgtoa@fp
  2301  0017BC  C0A7  F063         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2302  0017C0  C0B6  F064         	movff	vfpfcnvrt@f,efgtoa@f
  2303  0017C4  C0B7  F065         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2304  0017C8  C0B8  F066         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2305  0017CC  C0B9  F067         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2306  0017D0  C0BD  F068         	movff	vfpfcnvrt@c,efgtoa@c
  2307  0017D4  EC19  F004         	call	_efgtoa	;wreg free
  2308  0017D8  C062  F0A6         	movff	?_efgtoa,?_vfpfcnvrt
  2309  0017DC  C063  F0A7         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2310  0017E0  EFD8  F00C         	goto	l1021
  2311  0017E4                     l4115:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2315  0017E4  0EBA               	movlw	low vfpfcnvrt@ct
  2316  0017E6  6E01               	movwf	strncmp@_l^0,c
  2317  0017E8  0E00               	movlw	high vfpfcnvrt@ct
  2318  0017EA  6E02               	movwf	(strncmp@_l+1)^0,c
  2319  0017EC  0E2D               	movlw	low STR_16
  2320  0017EE  6E03               	movwf	strncmp@_r^0,c
  2321  0017F0  0E08               	movlw	high STR_16
  2322  0017F2  6E04               	movwf	(strncmp@_r+1)^0,c
  2323  0017F4  0E00               	movlw	0
  2324  0017F6  6E06               	movwf	(strncmp@n+1)^0,c
  2325  0017F8  0E02               	movlw	2
  2326  0017FA  6E05               	movwf	strncmp@n^0,c
  2327  0017FC  ECF2  F019         	call	_strncmp	;wreg free
  2328  001800  5001               	movf	?_strncmp^0,w,c
  2329  001802  1002               	iorwf	(?_strncmp+1)^0,w,c
  2330  001804  A4D8               	btfss	status,2,c
  2331  001806  EF07  F00C         	goto	u4871
  2332  00180A  EF09  F00C         	goto	u4870
  2333  00180E                     u4871:
  2334  00180E  EF85  F00C         	goto	l4131
  2335  001812                     u4870:
  2336  001812                     
  2337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2338  001812  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2339  001816  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2340  00181A  CFDE F0AC          	movff	postinc2,??_vfpfcnvrt
  2341  00181E  CFDD F0AD          	movff	postdec2,??_vfpfcnvrt+1
  2342  001822  0E01               	movlw	1
  2343  001824  0100               	movlb	0	; () banked
  2344  001826  27AC               	addwf	??_vfpfcnvrt& (0+255),f,b
  2345  001828  0E00               	movlw	0
  2346  00182A  23AD               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2347  00182C  C0AC  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2348  001830  C0AD  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2349  001834                     	if	0	;tblptru may be non-zero
  2350  001834                     	endif
  2351  001834                     	if	0	;tblptru may be non-zero
  2352  001834                     	endif
  2353  001834  0008               	tblrd		*
  2354  001836  CFF5 F0BD          	movff	tablat,vfpfcnvrt@c
  2355  00183A  0EBF               	movlw	191
  2356  00183C  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  2357  00183E  0EFF               	movlw	255
  2358  001840  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2359  001842  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2360  001846  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2361  00184A  CFDE FFF6          	movff	postinc2,tblptrl
  2362  00184E  CFDD FFF7          	movff	postdec2,tblptrh
  2363  001852                     	if	0	;tblptru may be non-zero
  2364  001852                     	endif
  2365  001852                     	if	0	;tblptru may be non-zero
  2366  001852                     	endif
  2367  001852  0008               	tblrd		*
  2368  001854  50F5               	movf	tablat,w,c
  2369  001856  6FAE               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2370  001858  6BAF               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2371  00185A  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  2372  00185C  27AE               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2373  00185E  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2374  001860  23AF               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2375  001862  51AF               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2376  001864  E10A               	bnz	u4880
  2377  001866  0E1A               	movlw	26
  2378  001868  5DAE               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2379  00186A  A0D8               	btfss	status,0,c
  2380  00186C  EF3A  F00C         	goto	u4881
  2381  001870  EF3D  F00C         	goto	u4880
  2382  001874                     u4881:
  2383  001874  0E01               	movlw	1
  2384  001876  EF3E  F00C         	goto	u4890
  2385  00187A                     u4880:
  2386  00187A  0E00               	movlw	0
  2387  00187C                     u4890:
  2388  00187C  6FB4               	movwf	_vfpfcnvrt$1018& (0+255),b
  2389  00187E  6BB5               	clrf	(_vfpfcnvrt$1018+1)& (0+255),b
  2390  001880                     
  2391                           ; BSR set to: 0
  2392  001880  51B4               	movf	_vfpfcnvrt$1018& (0+255),w,b
  2393  001882  11B5               	iorwf	(_vfpfcnvrt$1018+1)& (0+255),w,b
  2394  001884  B4D8               	btfsc	status,2,c
  2395  001886  EF47  F00C         	goto	u4901
  2396  00188A  EF49  F00C         	goto	u4900
  2397  00188E                     u4901:
  2398  00188E  EF63  F00C         	goto	l4125
  2399  001892                     u4900:
  2400  001892                     
  2401                           ; BSR set to: 0
  2402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2403  001892  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2404  001896  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2405  00189A  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  2406  00189E  0E04               	movlw	4
  2407  0018A0  26DE               	addwf	postinc2,f,c
  2408  0018A2  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  2409  0018A6  0E00               	movlw	0
  2410  0018A8  22DD               	addwfc	postdec2,f,c
  2411  0018AA  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2412  0018AE  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2413  0018B2  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f
  2414  0018B6  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+1
  2415  0018BA  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+2
  2416  0018BE  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+3
  2417                           
  2418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2419  0018C2  EF7B  F00C         	goto	l1028
  2420  0018C6                     l4125:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2424  0018C6  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2425  0018CA  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2426  0018CE  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  2427  0018D2  0E04               	movlw	4
  2428  0018D4  26DE               	addwf	postinc2,f,c
  2429  0018D6  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  2430  0018DA  0E00               	movlw	0
  2431  0018DC  22DD               	addwfc	postdec2,f,c
  2432  0018DE  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2433  0018E2  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2434  0018E6  CFDE F0B6          	movff	postinc2,vfpfcnvrt@f
  2435  0018EA  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f+1
  2436  0018EE  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+2
  2437  0018F2  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+3
  2438  0018F6                     l1028:
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2442  0018F6  0E02               	movlw	2
  2443  0018F8  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2444  0018FC  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2445  001900  26DE               	addwf	postinc2,f,c
  2446  001902  0E00               	movlw	0
  2447  001904  22DD               	addwfc	postdec2,f,c
  2448  001906  EFDC  F00B         	goto	l4111
  2449  00190A                     l4131:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2452  00190A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2453  00190E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2454  001912  CFDE FFF6          	movff	postinc2,tblptrl
  2455  001916  CFDD FFF7          	movff	postdec2,tblptrh
  2456  00191A                     	if	0	;tblptru may be non-zero
  2457  00191A                     	endif
  2458  00191A                     	if	0	;tblptru may be non-zero
  2459  00191A                     	endif
  2460  00191A  0008               	tblrd		*
  2461  00191C  50F5               	movf	tablat,w,c
  2462  00191E  0A25               	xorlw	37
  2463  001920  A4D8               	btfss	status,2,c
  2464  001922  EF95  F00C         	goto	u4911
  2465  001926  EF97  F00C         	goto	u4910
  2466  00192A                     u4911:
  2467  00192A  EFAF  F00C         	goto	l4141
  2468  00192E                     u4910:
  2469  00192E                     
  2470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2471  00192E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2472  001932  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  001936  2ADE               	incf	postinc2,f,c
  2474  001938  0E00               	movlw	0
  2475  00193A  22DD               	addwfc	postdec2,f,c
  2476  00193C                     
  2477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2478  00193C  0E00               	movlw	0
  2479  00193E  6E02               	movwf	(fputc@c+1)^0,c
  2480  001940  0E25               	movlw	37
  2481  001942  6E01               	movwf	fputc@c^0,c
  2482  001944  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2483  001948  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2484  00194C  EC5D  F01A         	call	_fputc	;wreg free
  2485  001950                     l4137:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2488  001950  0E00               	movlw	0
  2489  001952  0100               	movlb	0	; () banked
  2490  001954  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2491  001956  0E01               	movlw	1
  2492  001958  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  2493  00195A  EFD8  F00C         	goto	l1021
  2494  00195E                     l4141:
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2497  00195E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2498  001962  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2499  001966  2ADE               	incf	postinc2,f,c
  2500  001968  0E00               	movlw	0
  2501  00196A  22DD               	addwfc	postdec2,f,c
  2502  00196C                     
  2503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2504  00196C  0E00               	movlw	0
  2505  00196E  0100               	movlb	0	; () banked
  2506  001970  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2507  001972  0E00               	movlw	0
  2508  001974  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  2509  001976  EFD8  F00C         	goto	l1021
  2510  00197A                     l4147:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2513  00197A  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2514  00197E  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2515  001982  CFDE FFF6          	movff	postinc2,tblptrl
  2516  001986  CFDD FFF7          	movff	postdec2,tblptrh
  2517  00198A                     	if	0	;tblptru may be non-zero
  2518  00198A                     	endif
  2519  00198A                     	if	0	;tblptru may be non-zero
  2520  00198A                     	endif
  2521  00198A  0008               	tblrd		*
  2522  00198C  50F5               	movf	tablat,w,c
  2523  00198E  6E01               	movwf	fputc@c^0,c
  2524  001990  6A02               	clrf	(fputc@c+1)^0,c
  2525  001992  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2526  001996  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2527  00199A  EC5D  F01A         	call	_fputc	;wreg free
  2528  00199E                     
  2529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2530  00199E  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2531  0019A2  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2532  0019A6  2ADE               	incf	postinc2,f,c
  2533  0019A8  0E00               	movlw	0
  2534  0019AA  22DD               	addwfc	postdec2,f,c
  2535  0019AC  EFA8  F00C         	goto	l4137
  2536  0019B0                     l1021:
  2537  0019B0  0012               	return		;funcret
  2538  0019B2                     __end_of_vfpfcnvrt:
  2539                           	callstack 0
  2540                           
  2541 ;; *************** function _strncmp *****************
  2542 ;; Defined at:
  2543 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2546 ;;		 -> vfpfcnvrt@ct(3), 
  2547 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2548 ;;		 -> STR_18(3), 
  2549 ;;  n               2    4[COMRAM] unsigned int 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2552 ;;		 -> STR_18(3), 
  2553 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2554 ;;		 -> vfpfcnvrt@ct(3), 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  2    0[COMRAM] int 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2564 ;;      Params:         6       0       0       0       0       0       0       0       0
  2565 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2566 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2567 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2568 ;;Total ram usage:       11 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_vfpfcnvrt
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text4
  2578  0033E4                     __ptext4:
  2579                           	callstack 0
  2580  0033E4                     _strncmp:
  2581                           	callstack 27
  2582  0033E4  C001  F008         	movff	strncmp@_l,strncmp@l
  2583  0033E8  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2584  0033EC  C003  F00A         	movff	strncmp@_r,strncmp@r
  2585  0033F0  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2586  0033F4  0605               	decf	strncmp@n^0,f,c
  2587  0033F6  A0D8               	btfss	status,0,c
  2588  0033F8  0606               	decf	(strncmp@n+1)^0,f,c
  2589  0033FA  2805               	incf	strncmp@n^0,w,c
  2590  0033FC  E106               	bnz	u4711
  2591  0033FE  2806               	incf	(strncmp@n+1)^0,w,c
  2592  003400  A4D8               	btfss	status,2,c
  2593  003402  EF05  F01A         	goto	u4711
  2594  003406  EF07  F01A         	goto	u4710
  2595  00340A                     u4711:
  2596  00340A  EF14  F01A         	goto	l4001
  2597  00340E                     u4710:
  2598  00340E  0E00               	movlw	0
  2599  003410  6E02               	movwf	(?_strncmp+1)^0,c
  2600  003412  0E00               	movlw	0
  2601  003414  6E01               	movwf	?_strncmp^0,c
  2602  003416  EF5C  F01A         	goto	l1149
  2603  00341A                     l3999:
  2604  00341A  4A08               	infsnz	strncmp@l^0,f,c
  2605  00341C  2A09               	incf	(strncmp@l+1)^0,f,c
  2606  00341E  4A0A               	infsnz	strncmp@r^0,f,c
  2607  003420  2A0B               	incf	(strncmp@r+1)^0,f,c
  2608  003422  0605               	decf	strncmp@n^0,f,c
  2609  003424  A0D8               	btfss	status,0,c
  2610  003426  0606               	decf	(strncmp@n+1)^0,f,c
  2611  003428                     l4001:
  2612  003428  C008  FFD9         	movff	strncmp@l,fsr2l
  2613  00342C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2614  003430  50DF               	movf	indf2,w,c
  2615  003432  B4D8               	btfsc	status,2,c
  2616  003434  EF1E  F01A         	goto	u4721
  2617  003438  EF20  F01A         	goto	u4720
  2618  00343C                     u4721:
  2619  00343C  EF4B  F01A         	goto	l4009
  2620  003440                     u4720:
  2621  003440  C00A  FFF6         	movff	strncmp@r,tblptrl
  2622  003444  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2623  003448                     	if	0	;tblptru may be non-zero
  2624  003448                     	endif
  2625  003448                     	if	0	;tblptru may be non-zero
  2626  003448                     	endif
  2627  003448  0008               	tblrd		*
  2628  00344A  50F5               	movf	tablat,w,c
  2629  00344C  0900               	iorlw	0
  2630  00344E  B4D8               	btfsc	status,2,c
  2631  003450  EF2C  F01A         	goto	u4731
  2632  003454  EF2E  F01A         	goto	u4730
  2633  003458                     u4731:
  2634  003458  EF4B  F01A         	goto	l4009
  2635  00345C                     u4730:
  2636  00345C  5005               	movf	strncmp@n^0,w,c
  2637  00345E  1006               	iorwf	(strncmp@n+1)^0,w,c
  2638  003460  B4D8               	btfsc	status,2,c
  2639  003462  EF35  F01A         	goto	u4741
  2640  003466  EF37  F01A         	goto	u4740
  2641  00346A                     u4741:
  2642  00346A  EF4B  F01A         	goto	l4009
  2643  00346E                     u4740:
  2644  00346E  C008  FFD9         	movff	strncmp@l,fsr2l
  2645  003472  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2646  003476  50DF               	movf	indf2,w,c
  2647  003478  6E07               	movwf	??_strncmp^0,c
  2648  00347A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2649  00347E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2650  003482                     	if	0	;tblptru may be non-zero
  2651  003482                     	endif
  2652  003482                     	if	0	;tblptru may be non-zero
  2653  003482                     	endif
  2654  003482  0008               	tblrd		*
  2655  003484  50F5               	movf	tablat,w,c
  2656  003486  1807               	xorwf	??_strncmp^0,w,c
  2657  003488  B4D8               	btfsc	status,2,c
  2658  00348A  EF49  F01A         	goto	u4751
  2659  00348E  EF4B  F01A         	goto	u4750
  2660  003492                     u4751:
  2661  003492  EF0D  F01A         	goto	l3999
  2662  003496                     u4750:
  2663  003496                     l4009:
  2664  003496  C008  FFD9         	movff	strncmp@l,fsr2l
  2665  00349A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2666  00349E  50DF               	movf	indf2,w,c
  2667  0034A0  6E07               	movwf	??_strncmp^0,c
  2668  0034A2  C00A  FFF6         	movff	strncmp@r,tblptrl
  2669  0034A6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2670  0034AA                     	if	0	;tblptru may be non-zero
  2671  0034AA                     	endif
  2672  0034AA                     	if	0	;tblptru may be non-zero
  2673  0034AA                     	endif
  2674  0034AA  0008               	tblrd		*
  2675  0034AC  50F5               	movf	tablat,w,c
  2676  0034AE  5C07               	subwf	??_strncmp^0,w,c
  2677  0034B0  6E01               	movwf	?_strncmp^0,c
  2678  0034B2  6A02               	clrf	(?_strncmp+1)^0,c
  2679  0034B4  A0D8               	btfss	status,0,c
  2680  0034B6  0602               	decf	(?_strncmp+1)^0,f,c
  2681  0034B8                     l1149:
  2682  0034B8  0012               	return		;funcret
  2683  0034BA                     __end_of_strncmp:
  2684                           	callstack 0
  2685                           
  2686 ;; *************** function _efgtoa *****************
  2687 ;; Defined at:
  2688 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  2691 ;;		 -> sprintf@f(6), 
  2692 ;;  f               4    4[BANK0 ] PTR struct _IO_FILE
  2693 ;;  c               1    8[BANK0 ] unsigned char 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  u               4   66[BANK0 ] unsigned char 
  2696 ;;  g               4   58[BANK0 ] unsigned char 
  2697 ;;  l               4   52[BANK0 ] unsigned char 
  2698 ;;  h               4   48[BANK0 ] unsigned char 
  2699 ;;  ou              4   34[BANK0 ] unsigned char 
  2700 ;;  n               2   64[BANK0 ] int 
  2701 ;;  e               2   62[BANK0 ] int 
  2702 ;;  i               2   56[BANK0 ] int 
  2703 ;;  w               2   44[BANK0 ] int 
  2704 ;;  p               2   42[BANK0 ] int 
  2705 ;;  sign            2   40[BANK0 ] int 
  2706 ;;  d               2   38[BANK0 ] int 
  2707 ;;  m               2   32[BANK0 ] int 
  2708 ;;  ne              2   30[BANK0 ] int 
  2709 ;;  pp              2   28[BANK0 ] int 
  2710 ;;  t               2   26[BANK0 ] int 
  2711 ;;  mode            1   47[BANK0 ] unsigned char 
  2712 ;;  nmode           1   46[BANK0 ] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  2    2[BANK0 ] int 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2722 ;;      Params:         0       7       0       0       0       0       0       0       0
  2723 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2724 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2725 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2726 ;;Total ram usage:       68 bytes
  2727 ;; Hardware stack levels used: 1
  2728 ;; Hardware stack levels required when called: 4
  2729 ;; This function calls:
  2730 ;;		___awdiv
  2731 ;;		___awmod
  2732 ;;		___fladd
  2733 ;;		___fldiv
  2734 ;;		___fleq
  2735 ;;		___flge
  2736 ;;		___flmul
  2737 ;;		___flneg
  2738 ;;		___flsub
  2739 ;;		___fltol
  2740 ;;		___fpclassifyf
  2741 ;;		_floorf
  2742 ;;		_isupper
  2743 ;;		_pad
  2744 ;;		_strcpy
  2745 ;;		_tolower
  2746 ;; This function is called by:
  2747 ;;		_vfpfcnvrt
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text5
  2752  000832                     __ptext5:
  2753                           	callstack 0
  2754  000832                     _efgtoa:
  2755                           	callstack 23
  2756  000832                     
  2757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2758  000832  0E00               	movlw	0
  2759  000834  0100               	movlb	0	; () banked
  2760  000836  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  2761  000838  0E00               	movlw	0
  2762  00083A  6F88               	movwf	efgtoa@sign& (0+255),b
  2763  00083C                     
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2766  00083C  C064  F09A         	movff	efgtoa@f,efgtoa@g
  2767  000840  C065  F09B         	movff	efgtoa@f+1,efgtoa@g+1
  2768  000844  C066  F09C         	movff	efgtoa@f+2,efgtoa@g+2
  2769  000848  C067  F09D         	movff	efgtoa@f+3,efgtoa@g+3
  2770  00084C                     
  2771                           ; BSR set to: 0
  2772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2773  00084C  BF9D               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2774  00084E  EF2D  F004         	goto	u4100
  2775  000852  EF2B  F004         	goto	u4101
  2776  000856                     u4101:
  2777  000856  EF43  F004         	goto	l3653
  2778  00085A                     u4100:
  2779  00085A                     
  2780                           ; BSR set to: 0
  2781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2782  00085A  0E00               	movlw	0
  2783  00085C  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  2784  00085E  0E01               	movlw	1
  2785  000860  6F88               	movwf	efgtoa@sign& (0+255),b
  2786  000862                     
  2787                           ; BSR set to: 0
  2788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2789  000862  C09A  F001         	movff	efgtoa@g,___flneg@f1
  2790  000866  C09B  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2791  00086A  C09C  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2792  00086E  C09D  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2793  000872  ECAF  F01E         	call	___flneg	;wreg free
  2794  000876  C001  F09A         	movff	?___flneg,efgtoa@g
  2795  00087A  C002  F09B         	movff	?___flneg+1,efgtoa@g+1
  2796  00087E  C003  F09C         	movff	?___flneg+2,efgtoa@g+2
  2797  000882  C004  F09D         	movff	?___flneg+3,efgtoa@g+3
  2798  000886                     l3653:
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2801  000886  0E00               	movlw	0
  2802  000888  0100               	movlb	0	; () banked
  2803  00088A  6FA1               	movwf	(efgtoa@n+1)& (0+255),b
  2804  00088C  0E00               	movlw	0
  2805  00088E  6FA0               	movwf	efgtoa@n& (0+255),b
  2806  000890                     
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2809  000890  C0F4  F08C         	movff	_width,efgtoa@w
  2810  000894  C0F5  F08D         	movff	_width+1,efgtoa@w+1
  2811  000898                     
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2814  000898  5188               	movf	efgtoa@sign& (0+255),w,b
  2815  00089A  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2816  00089C  A4D8               	btfss	status,2,c
  2817  00089E  EF53  F004         	goto	u4111
  2818  0008A2  EF55  F004         	goto	u4110
  2819  0008A6                     u4111:
  2820  0008A6  EF5C  F004         	goto	l3661
  2821  0008AA                     u4110:
  2822  0008AA                     
  2823                           ; BSR set to: 0
  2824  0008AA  A5F8               	btfss	_flags& (0+255),2,b
  2825  0008AC  EF5A  F004         	goto	u4121
  2826  0008B0  EF5C  F004         	goto	u4120
  2827  0008B4                     u4121:
  2828  0008B4  EF76  F004         	goto	l3673
  2829  0008B8                     u4120:
  2830  0008B8                     l3661:
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2834  0008B8  5188               	movf	efgtoa@sign& (0+255),w,b
  2835  0008BA  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2836  0008BC  A4D8               	btfss	status,2,c
  2837  0008BE  EF63  F004         	goto	u4131
  2838  0008C2  EF65  F004         	goto	u4130
  2839  0008C6                     u4131:
  2840  0008C6  EF6B  F004         	goto	l3665
  2841  0008CA                     u4130:
  2842  0008CA                     
  2843                           ; BSR set to: 0
  2844  0008CA  0E00               	movlw	0
  2845  0008CC  6F6F               	movwf	(_efgtoa$988+1)& (0+255),b
  2846  0008CE  0E2B               	movlw	43
  2847  0008D0  6F6E               	movwf	_efgtoa$988& (0+255),b
  2848  0008D2  EF6F  F004         	goto	l3667
  2849  0008D6                     l3665:
  2850                           
  2851                           ; BSR set to: 0
  2852  0008D6  0E00               	movlw	0
  2853  0008D8  6F6F               	movwf	(_efgtoa$988+1)& (0+255),b
  2854  0008DA  0E2D               	movlw	45
  2855  0008DC  6F6E               	movwf	_efgtoa$988& (0+255),b
  2856  0008DE                     l3667:
  2857                           
  2858                           ; BSR set to: 0
  2859  0008DE  C06E  F100         	movff	_efgtoa$988,_dbuf
  2860  0008E2                     
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2863  0008E2  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  2864  0008E4  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  2865  0008E6                     
  2866                           ; BSR set to: 0
  2867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2868  0008E6  078C               	decf	efgtoa@w& (0+255),f,b
  2869  0008E8  A0D8               	btfss	status,0,c
  2870  0008EA  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  2871  0008EC                     l3673:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2875  0008EC  C09A  F001         	movff	efgtoa@g,___fpclassifyf@x
  2876  0008F0  C09B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2877  0008F4  C09C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2878  0008F8  C09D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2879  0008FC  ECF4  F018         	call	___fpclassifyf	;wreg free
  2880  000900  0401               	decf	?___fpclassifyf^0,w,c
  2881  000902  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2882  000904  A4D8               	btfss	status,2,c
  2883  000906  EF87  F004         	goto	u4141
  2884  00090A  EF89  F004         	goto	u4140
  2885  00090E                     u4141:
  2886  00090E  EFE0  F004         	goto	l3691
  2887  000912                     u4140:
  2888  000912  0EBF               	movlw	191
  2889  000914  0100               	movlb	0	; () banked
  2890  000916  6F69               	movwf	??_efgtoa& (0+255),b
  2891  000918  0EFF               	movlw	255
  2892  00091A  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  2893  00091C  5168               	movf	efgtoa@c& (0+255),w,b
  2894  00091E  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  2895  000920  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  2896  000922  5169               	movf	??_efgtoa& (0+255),w,b
  2897  000924  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  2898  000926  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  2899  000928  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2900  00092A  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  2901  00092C  E10A               	bnz	u4150
  2902  00092E  0E1A               	movlw	26
  2903  000930  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  2904  000932  A0D8               	btfss	status,0,c
  2905  000934  EF9E  F004         	goto	u4151
  2906  000938  EFA1  F004         	goto	u4150
  2907  00093C                     u4151:
  2908  00093C  0E01               	movlw	1
  2909  00093E  EFA2  F004         	goto	u4160
  2910  000942                     u4150:
  2911  000942  0E00               	movlw	0
  2912  000944                     u4160:
  2913  000944  6F70               	movwf	_efgtoa$989& (0+255),b
  2914  000946  6B71               	clrf	(_efgtoa$989+1)& (0+255),b
  2915  000948                     
  2916                           ; BSR set to: 0
  2917  000948  5170               	movf	_efgtoa$989& (0+255),w,b
  2918  00094A  1171               	iorwf	(_efgtoa$989+1)& (0+255),w,b
  2919  00094C  B4D8               	btfsc	status,2,c
  2920  00094E  EFAB  F004         	goto	u4171
  2921  000952  EFAD  F004         	goto	u4170
  2922  000956                     u4171:
  2923  000956  EFBB  F004         	goto	l3683
  2924  00095A                     u4170:
  2925  00095A                     
  2926                           ; BSR set to: 0
  2927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2928  00095A  0E00               	movlw	low _dbuf
  2929  00095C  25A0               	addwf	efgtoa@n& (0+255),w,b
  2930  00095E  6E01               	movwf	strcpy@dest^0,c
  2931  000960  0E01               	movlw	high _dbuf
  2932  000962  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2933  000964  6E02               	movwf	(strcpy@dest+1)^0,c
  2934  000966  0E1D               	movlw	low STR_8
  2935  000968  6E03               	movwf	strcpy@src^0,c
  2936  00096A  0E08               	movlw	high STR_8
  2937  00096C  6E04               	movwf	(strcpy@src+1)^0,c
  2938  00096E  ECF7  F01C         	call	_strcpy	;wreg free
  2939                           
  2940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2941  000972  EFC7  F004         	goto	l3685
  2942  000976                     l3683:
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2946  000976  0E00               	movlw	low _dbuf
  2947  000978  25A0               	addwf	efgtoa@n& (0+255),w,b
  2948  00097A  6E01               	movwf	strcpy@dest^0,c
  2949  00097C  0E01               	movlw	high _dbuf
  2950  00097E  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2951  000980  6E02               	movwf	(strcpy@dest+1)^0,c
  2952  000982  0E25               	movlw	low STR_9
  2953  000984  6E03               	movwf	strcpy@src^0,c
  2954  000986  0E08               	movlw	high STR_9
  2955  000988  6E04               	movwf	(strcpy@src+1)^0,c
  2956  00098A  ECF7  F01C         	call	_strcpy	;wreg free
  2957  00098E                     l3685:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2960  00098E  0100               	movlb	0	; () banked
  2961  000990  0EFD               	movlw	253
  2962  000992  278C               	addwf	efgtoa@w& (0+255),f,b
  2963  000994  0EFF               	movlw	255
  2964  000996  238D               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2965  000998                     l3687:
  2966                           
  2967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2968  000998  C062  F011         	movff	efgtoa@fp,pad@fp
  2969  00099C  C063  F012         	movff	efgtoa@fp+1,pad@fp+1
  2970  0009A0  0E00               	movlw	low _dbuf
  2971  0009A2  6E13               	movwf	pad@buf^0,c
  2972  0009A4  0E01               	movlw	high _dbuf
  2973  0009A6  6E14               	movwf	(pad@buf+1)^0,c
  2974  0009A8  C08C  F015         	movff	efgtoa@w,pad@p
  2975  0009AC  C08D  F016         	movff	efgtoa@w+1,pad@p+1
  2976  0009B0  ECC2  F01A         	call	_pad	;wreg free
  2977  0009B4  C011  F062         	movff	?_pad,?_efgtoa
  2978  0009B8  C012  F063         	movff	?_pad+1,?_efgtoa+1
  2979  0009BC  EF44  F00A         	goto	l917
  2980  0009C0                     l3691:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2983  0009C0  C09A  F001         	movff	efgtoa@g,___fpclassifyf@x
  2984  0009C4  C09B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2985  0009C8  C09C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2986  0009CC  C09D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2987  0009D0  ECF4  F018         	call	___fpclassifyf	;wreg free
  2988  0009D4  5001               	movf	?___fpclassifyf^0,w,c
  2989  0009D6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2990  0009D8  A4D8               	btfss	status,2,c
  2991  0009DA  EFF1  F004         	goto	u4181
  2992  0009DE  EFF3  F004         	goto	u4180
  2993  0009E2                     u4181:
  2994  0009E2  EF33  F005         	goto	l3709
  2995  0009E6                     u4180:
  2996  0009E6  0EBF               	movlw	191
  2997  0009E8  0100               	movlb	0	; () banked
  2998  0009EA  6F69               	movwf	??_efgtoa& (0+255),b
  2999  0009EC  0EFF               	movlw	255
  3000  0009EE  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  3001  0009F0  5168               	movf	efgtoa@c& (0+255),w,b
  3002  0009F2  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  3003  0009F4  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  3004  0009F6  5169               	movf	??_efgtoa& (0+255),w,b
  3005  0009F8  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  3006  0009FA  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  3007  0009FC  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3008  0009FE  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  3009  000A00  E10A               	bnz	u4190
  3010  000A02  0E1A               	movlw	26
  3011  000A04  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  3012  000A06  A0D8               	btfss	status,0,c
  3013  000A08  EF08  F005         	goto	u4191
  3014  000A0C  EF0B  F005         	goto	u4190
  3015  000A10                     u4191:
  3016  000A10  0E01               	movlw	1
  3017  000A12  EF0C  F005         	goto	u4200
  3018  000A16                     u4190:
  3019  000A16  0E00               	movlw	0
  3020  000A18                     u4200:
  3021  000A18  6F72               	movwf	_efgtoa$994& (0+255),b
  3022  000A1A  6B73               	clrf	(_efgtoa$994+1)& (0+255),b
  3023  000A1C                     
  3024                           ; BSR set to: 0
  3025  000A1C  5172               	movf	_efgtoa$994& (0+255),w,b
  3026  000A1E  1173               	iorwf	(_efgtoa$994+1)& (0+255),w,b
  3027  000A20  B4D8               	btfsc	status,2,c
  3028  000A22  EF15  F005         	goto	u4211
  3029  000A26  EF17  F005         	goto	u4210
  3030  000A2A                     u4211:
  3031  000A2A  EF25  F005         	goto	l3701
  3032  000A2E                     u4210:
  3033  000A2E                     
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3036  000A2E  0E00               	movlw	low _dbuf
  3037  000A30  25A0               	addwf	efgtoa@n& (0+255),w,b
  3038  000A32  6E01               	movwf	strcpy@dest^0,c
  3039  000A34  0E01               	movlw	high _dbuf
  3040  000A36  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3041  000A38  6E02               	movwf	(strcpy@dest+1)^0,c
  3042  000A3A  0E21               	movlw	low STR_12
  3043  000A3C  6E03               	movwf	strcpy@src^0,c
  3044  000A3E  0E08               	movlw	high STR_12
  3045  000A40  6E04               	movwf	(strcpy@src+1)^0,c
  3046  000A42  ECF7  F01C         	call	_strcpy	;wreg free
  3047                           
  3048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3049  000A46  EFC7  F004         	goto	l3685
  3050  000A4A                     l3701:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3054  000A4A  0E00               	movlw	low _dbuf
  3055  000A4C  25A0               	addwf	efgtoa@n& (0+255),w,b
  3056  000A4E  6E01               	movwf	strcpy@dest^0,c
  3057  000A50  0E01               	movlw	high _dbuf
  3058  000A52  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3059  000A54  6E02               	movwf	(strcpy@dest+1)^0,c
  3060  000A56  0E29               	movlw	low STR_13
  3061  000A58  6E03               	movwf	strcpy@src^0,c
  3062  000A5A  0E08               	movlw	high STR_13
  3063  000A5C  6E04               	movwf	(strcpy@src+1)^0,c
  3064  000A5E  ECF7  F01C         	call	_strcpy	;wreg free
  3065  000A62  EFC7  F004         	goto	l3685
  3066  000A66                     l3709:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3069  000A66  0E00               	movlw	0
  3070  000A68  0100               	movlb	0	; () banked
  3071  000A6A  6FA2               	movwf	efgtoa@u& (0+255),b
  3072  000A6C  0E00               	movlw	0
  3073  000A6E  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  3074  000A70  0E80               	movlw	128
  3075  000A72  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  3076  000A74  0E3F               	movlw	63
  3077  000A76  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3080  000A78  0E00               	movlw	0
  3081  000A7A  6F9F               	movwf	(efgtoa@e+1)& (0+255),b
  3082  000A7C  0E00               	movlw	0
  3083  000A7E  6F9E               	movwf	efgtoa@e& (0+255),b
  3084  000A80                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3087  000A80  C09A  F001         	movff	efgtoa@g,___fleq@ff1
  3088  000A84  C09B  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3089  000A88  C09C  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3090  000A8C  C09D  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3091  000A90  0E00               	movlw	0
  3092  000A92  6E05               	movwf	___fleq@ff2^0,c
  3093  000A94  0E00               	movlw	0
  3094  000A96  6E06               	movwf	(___fleq@ff2+1)^0,c
  3095  000A98  0E00               	movlw	0
  3096  000A9A  6E07               	movwf	(___fleq@ff2+2)^0,c
  3097  000A9C  0E00               	movlw	0
  3098  000A9E  6E08               	movwf	(___fleq@ff2+3)^0,c
  3099  000AA0  ECDF  F01B         	call	___fleq	;wreg free
  3100  000AA4  B0D8               	btfsc	status,0,c
  3101  000AA6  EF57  F005         	goto	u4221
  3102  000AAA  EF59  F005         	goto	u4220
  3103  000AAE                     u4221:
  3104  000AAE  EFDC  F005         	goto	l3727
  3105  000AB2                     u4220:
  3106  000AB2  EF78  F005         	goto	l3719
  3107  000AB6                     l3715:
  3108                           
  3109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3110  000AB6  C0A2  F015         	movff	efgtoa@u,___flmul@b
  3111  000ABA  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  3112  000ABE  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  3113  000AC2  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  3114  000AC6  0E00               	movlw	0
  3115  000AC8  6E19               	movwf	___flmul@a^0,c
  3116  000ACA  0E00               	movlw	0
  3117  000ACC  6E1A               	movwf	(___flmul@a+1)^0,c
  3118  000ACE  0E20               	movlw	32
  3119  000AD0  6E1B               	movwf	(___flmul@a+2)^0,c
  3120  000AD2  0E41               	movlw	65
  3121  000AD4  6E1C               	movwf	(___flmul@a+3)^0,c
  3122  000AD6  EC61  F011         	call	___flmul	;wreg free
  3123  000ADA  C015  F0A2         	movff	?___flmul,efgtoa@u
  3124  000ADE  C016  F0A3         	movff	?___flmul+1,efgtoa@u+1
  3125  000AE2  C017  F0A4         	movff	?___flmul+2,efgtoa@u+2
  3126  000AE6  C018  F0A5         	movff	?___flmul+3,efgtoa@u+3
  3127  000AEA                     
  3128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3129  000AEA  0100               	movlb	0	; () banked
  3130  000AEC  4B9E               	infsnz	efgtoa@e& (0+255),f,b
  3131  000AEE  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  3132  000AF0                     l3719:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3135  000AF0  C09A  F02E         	movff	efgtoa@g,___flge@ff1
  3136  000AF4  C09B  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  3137  000AF8  C09C  F030         	movff	efgtoa@g+2,___flge@ff1+2
  3138  000AFC  C09D  F031         	movff	efgtoa@g+3,___flge@ff1+3
  3139  000B00  0E00               	movlw	0
  3140  000B02  6E19               	movwf	___flmul@a^0,c
  3141  000B04  0E00               	movlw	0
  3142  000B06  6E1A               	movwf	(___flmul@a+1)^0,c
  3143  000B08  0E20               	movlw	32
  3144  000B0A  6E1B               	movwf	(___flmul@a+2)^0,c
  3145  000B0C  0E41               	movlw	65
  3146  000B0E  6E1C               	movwf	(___flmul@a+3)^0,c
  3147  000B10  C0A2  F015         	movff	efgtoa@u,___flmul@b
  3148  000B14  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  3149  000B18  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  3150  000B1C  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  3151  000B20  EC61  F011         	call	___flmul	;wreg free
  3152  000B24  C015  F032         	movff	?___flmul,___flge@ff2
  3153  000B28  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  3154  000B2C  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  3155  000B30  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  3156  000B34  EC72  F018         	call	___flge	;wreg free
  3157  000B38  B0D8               	btfsc	status,0,c
  3158  000B3A  EFA1  F005         	goto	u4231
  3159  000B3E  EFA3  F005         	goto	u4230
  3160  000B42                     u4231:
  3161  000B42  EF5B  F005         	goto	l3715
  3162  000B46                     u4230:
  3163  000B46  EFC3  F005         	goto	l3725
  3164  000B4A                     l3721:
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3167  000B4A  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  3168  000B4E  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  3169  000B52  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  3170  000B56  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  3171  000B5A  0E00               	movlw	0
  3172  000B5C  6E32               	movwf	___fldiv@a^0,c
  3173  000B5E  0E00               	movlw	0
  3174  000B60  6E33               	movwf	(___fldiv@a+1)^0,c
  3175  000B62  0E20               	movlw	32
  3176  000B64  6E34               	movwf	(___fldiv@a+2)^0,c
  3177  000B66  0E41               	movlw	65
  3178  000B68  6E35               	movwf	(___fldiv@a+3)^0,c
  3179  000B6A  EC76  F013         	call	___fldiv	;wreg free
  3180  000B6E  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  3181  000B72  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  3182  000B76  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  3183  000B7A  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  3184  000B7E                     
  3185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3186  000B7E  0100               	movlb	0	; () banked
  3187  000B80  079E               	decf	efgtoa@e& (0+255),f,b
  3188  000B82  A0D8               	btfss	status,0,c
  3189  000B84  079F               	decf	(efgtoa@e+1)& (0+255),f,b
  3190  000B86                     l3725:
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3193  000B86  C09A  F02E         	movff	efgtoa@g,___flge@ff1
  3194  000B8A  C09B  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  3195  000B8E  C09C  F030         	movff	efgtoa@g+2,___flge@ff1+2
  3196  000B92  C09D  F031         	movff	efgtoa@g+3,___flge@ff1+3
  3197  000B96  C0A2  F032         	movff	efgtoa@u,___flge@ff2
  3198  000B9A  C0A3  F033         	movff	efgtoa@u+1,___flge@ff2+1
  3199  000B9E  C0A4  F034         	movff	efgtoa@u+2,___flge@ff2+2
  3200  000BA2  C0A5  F035         	movff	efgtoa@u+3,___flge@ff2+3
  3201  000BA6  EC72  F018         	call	___flge	;wreg free
  3202  000BAA  A0D8               	btfss	status,0,c
  3203  000BAC  EFDA  F005         	goto	u4241
  3204  000BB0  EFDC  F005         	goto	u4240
  3205  000BB4                     u4241:
  3206  000BB4  EFA5  F005         	goto	l3721
  3207  000BB8                     u4240:
  3208  000BB8                     l3727:
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3211  000BB8  C068  F007         	movff	efgtoa@c,tolower@c
  3212  000BBC  6A08               	clrf	(tolower@c+1)^0,c
  3213  000BBE  EC98  F01C         	call	_tolower	;wreg free
  3214  000BC2  5007               	movf	?_tolower^0,w,c
  3215  000BC4  0100               	movlb	0	; () banked
  3216  000BC6  6F8F               	movwf	efgtoa@mode& (0+255),b
  3217  000BC8                     
  3218                           ; BSR set to: 0
  3219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3220  000BC8  C08F  F08E         	movff	efgtoa@mode,efgtoa@nmode
  3221  000BCC                     
  3222                           ; BSR set to: 0
  3223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3224  000BCC  0E67               	movlw	103
  3225  000BCE  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3226  000BD0  A4D8               	btfss	status,2,c
  3227  000BD2  EFED  F005         	goto	u4251
  3228  000BD6  EFEF  F005         	goto	u4250
  3229  000BDA                     u4251:
  3230  000BDA  EF15  F006         	goto	l3741
  3231  000BDE                     u4250:
  3232  000BDE                     
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3235  000BDE  51F6               	movf	_prec& (0+255),w,b
  3236  000BE0  11F7               	iorwf	(_prec+1)& (0+255),w,b
  3237  000BE2  A4D8               	btfss	status,2,c
  3238  000BE4  EFF6  F005         	goto	u4261
  3239  000BE8  EFF8  F005         	goto	u4260
  3240  000BEC                     u4261:
  3241  000BEC  EFFC  F005         	goto	l3737
  3242  000BF0                     u4260:
  3243  000BF0                     
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3246  000BF0  0E00               	movlw	0
  3247  000BF2  6FF7               	movwf	(_prec+1)& (0+255),b
  3248  000BF4  0E01               	movlw	1
  3249  000BF6  6FF6               	movwf	_prec& (0+255),b
  3250  000BF8                     l3737:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3254  000BF8  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  3255  000BFA  EF09  F006         	goto	u4270
  3256  000BFE  51F7               	movf	(_prec+1)& (0+255),w,b
  3257  000C00  E106               	bnz	u4271
  3258  000C02  05F6               	decf	_prec& (0+255),w,b
  3259  000C04  B0D8               	btfsc	status,0,c
  3260  000C06  EF07  F006         	goto	u4271
  3261  000C0A  EF09  F006         	goto	u4270
  3262  000C0E                     u4271:
  3263  000C0E  EF0F  F006         	goto	l935
  3264  000C12                     u4270:
  3265  000C12                     l3739:
  3266                           
  3267                           ; BSR set to: 0
  3268  000C12  0E00               	movlw	0
  3269  000C14  6F8B               	movwf	(efgtoa@p+1)& (0+255),b
  3270  000C16  0E06               	movlw	6
  3271  000C18  6F8A               	movwf	efgtoa@p& (0+255),b
  3272  000C1A  EF1E  F006         	goto	l3747
  3273  000C1E                     l935:
  3274                           
  3275                           ; BSR set to: 0
  3276  000C1E  C0F6  F08A         	movff	_prec,efgtoa@p
  3277  000C22  C0F7  F08B         	movff	_prec+1,efgtoa@p+1
  3278  000C26  EF1E  F006         	goto	l3747
  3279  000C2A                     l3741:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3283  000C2A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  3284  000C2C  EF1A  F006         	goto	u4281
  3285  000C30  EF1C  F006         	goto	u4280
  3286  000C34                     u4281:
  3287  000C34  EF09  F006         	goto	l3739
  3288  000C38                     u4280:
  3289  000C38  EF0F  F006         	goto	l935
  3290  000C3C                     l3747:
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3294  000C3C  0E67               	movlw	103
  3295  000C3E  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3296  000C40  A4D8               	btfss	status,2,c
  3297  000C42  EF25  F006         	goto	u4291
  3298  000C46  EF27  F006         	goto	u4290
  3299  000C4A                     u4291:
  3300  000C4A  EF56  F006         	goto	l3757
  3301  000C4E                     u4290:
  3302  000C4E                     
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3305  000C4E  AF9F               	btfss	(efgtoa@e+1)& (0+255),7,b
  3306  000C50  EF35  F006         	goto	u4300
  3307  000C54  0EFC               	movlw	252
  3308  000C56  5D9E               	subwf	efgtoa@e& (0+255),w,b
  3309  000C58  0EFF               	movlw	255
  3310  000C5A  599F               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3311  000C5C  A0D8               	btfss	status,0,c
  3312  000C5E  EF33  F006         	goto	u4301
  3313  000C62  EF35  F006         	goto	u4300
  3314  000C66                     u4301:
  3315  000C66  EF54  F006         	goto	l3755
  3316  000C6A                     u4300:
  3317  000C6A                     
  3318                           ; BSR set to: 0
  3319  000C6A  0EFF               	movlw	255
  3320  000C6C  6F69               	movwf	??_efgtoa& (0+255),b
  3321  000C6E  0EFF               	movlw	255
  3322  000C70  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  3323  000C72  C08A  F06B         	movff	efgtoa@p,??_efgtoa+2
  3324  000C76  C08B  F06C         	movff	efgtoa@p+1,??_efgtoa+3
  3325  000C7A  5169               	movf	??_efgtoa& (0+255),w,b
  3326  000C7C  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  3327  000C7E  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  3328  000C80  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3329  000C82  519E               	movf	efgtoa@e& (0+255),w,b
  3330  000C84  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  3331  000C86  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  3332  000C88  0A80               	xorlw	128
  3333  000C8A  6F6D               	movwf	(??_efgtoa+4)& (0+255),b
  3334  000C8C  519F               	movf	(efgtoa@e+1)& (0+255),w,b
  3335  000C8E  0A80               	xorlw	128
  3336  000C90  596D               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3337  000C92  A0D8               	btfss	status,0,c
  3338  000C94  EF4E  F006         	goto	u4311
  3339  000C98  EF50  F006         	goto	u4310
  3340  000C9C                     u4311:
  3341  000C9C  EF54  F006         	goto	l3755
  3342  000CA0                     u4310:
  3343  000CA0                     
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3346  000CA0  0E66               	movlw	102
  3347  000CA2  6F8E               	movwf	efgtoa@nmode& (0+255),b
  3348                           
  3349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3350  000CA4  EF56  F006         	goto	l3757
  3351  000CA8                     l3755:
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3355  000CA8  0E65               	movlw	101
  3356  000CAA  6F8E               	movwf	efgtoa@nmode& (0+255),b
  3357  000CAC                     l3757:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3361  000CAC  C08A  F080         	movff	efgtoa@p,efgtoa@m
  3362  000CB0  C08B  F081         	movff	efgtoa@p+1,efgtoa@m+1
  3363  000CB4                     
  3364                           ; BSR set to: 0
  3365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3366  000CB4  0E67               	movlw	103
  3367  000CB6  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3368  000CB8  A4D8               	btfss	status,2,c
  3369  000CBA  EF61  F006         	goto	u4321
  3370  000CBE  EF63  F006         	goto	u4320
  3371  000CC2                     u4321:
  3372  000CC2  EF73  F006         	goto	l3765
  3373  000CC6                     u4320:
  3374  000CC6                     
  3375                           ; BSR set to: 0
  3376  000CC6  0E66               	movlw	102
  3377  000CC8  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3378  000CCA  A4D8               	btfss	status,2,c
  3379  000CCC  EF6A  F006         	goto	u4331
  3380  000CD0  EF6C  F006         	goto	u4330
  3381  000CD4                     u4331:
  3382  000CD4  EF75  F006         	goto	l3767
  3383  000CD8                     u4330:
  3384  000CD8                     
  3385                           ; BSR set to: 0
  3386  000CD8  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3387  000CDA  EF73  F006         	goto	u4340
  3388  000CDE  EF71  F006         	goto	u4341
  3389  000CE2                     u4341:
  3390  000CE2  EF75  F006         	goto	l3767
  3391  000CE6                     u4340:
  3392  000CE6                     l3765:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3396  000CE6  4B80               	infsnz	efgtoa@m& (0+255),f,b
  3397  000CE8  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  3398  000CEA                     l3767:
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3402  000CEA  0E66               	movlw	102
  3403  000CEC  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3404  000CEE  A4D8               	btfss	status,2,c
  3405  000CF0  EF7C  F006         	goto	u4351
  3406  000CF4  EF7E  F006         	goto	u4350
  3407  000CF8                     u4351:
  3408  000CF8  EF9E  F006         	goto	l3777
  3409  000CFC                     u4350:
  3410  000CFC                     
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3413  000CFC  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3414  000CFE  EF85  F006         	goto	u4360
  3415  000D02  EF83  F006         	goto	u4361
  3416  000D06                     u4361:
  3417  000D06  EF91  F006         	goto	l3773
  3418  000D0A                     u4360:
  3419  000D0A                     
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3422  000D0A  0E00               	movlw	0
  3423  000D0C  6FA2               	movwf	efgtoa@u& (0+255),b
  3424  000D0E  0E00               	movlw	0
  3425  000D10  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  3426  000D12  0E80               	movlw	128
  3427  000D14  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  3428  000D16  0E3F               	movlw	63
  3429  000D18  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3432  000D1A  0E00               	movlw	0
  3433  000D1C  6F9F               	movwf	(efgtoa@e+1)& (0+255),b
  3434  000D1E  0E00               	movlw	0
  3435  000D20  6F9E               	movwf	efgtoa@e& (0+255),b
  3436  000D22                     l3773:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3440  000D22  0E67               	movlw	103
  3441  000D24  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3442  000D26  B4D8               	btfsc	status,2,c
  3443  000D28  EF98  F006         	goto	u4371
  3444  000D2C  EF9A  F006         	goto	u4370
  3445  000D30                     u4371:
  3446  000D30  EF9E  F006         	goto	l3777
  3447  000D34                     u4370:
  3448  000D34                     
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3451  000D34  519E               	movf	efgtoa@e& (0+255),w,b
  3452  000D36  2780               	addwf	efgtoa@m& (0+255),f,b
  3453  000D38  519F               	movf	(efgtoa@e+1)& (0+255),w,b
  3454  000D3A  2381               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3455  000D3C                     l3777:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3459  000D3C  0E00               	movlw	0
  3460  000D3E  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  3461  000D40  0E00               	movlw	0
  3462  000D42  6F98               	movwf	efgtoa@i& (0+255),b
  3463  000D44                     
  3464                           ; BSR set to: 0
  3465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3466  000D44  C09A  F090         	movff	efgtoa@g,efgtoa@h
  3467  000D48  C09B  F091         	movff	efgtoa@g+1,efgtoa@h+1
  3468  000D4C  C09C  F092         	movff	efgtoa@g+2,efgtoa@h+2
  3469  000D50  C09D  F093         	movff	efgtoa@g+3,efgtoa@h+3
  3470  000D54                     
  3471                           ; BSR set to: 0
  3472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3473  000D54  C0A2  F082         	movff	efgtoa@u,efgtoa@ou
  3474  000D58  C0A3  F083         	movff	efgtoa@u+1,efgtoa@ou+1
  3475  000D5C  C0A4  F084         	movff	efgtoa@u+2,efgtoa@ou+2
  3476  000D60  C0A5  F085         	movff	efgtoa@u+3,efgtoa@ou+3
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3479  000D64  EF2F  F007         	goto	l3791
  3480  000D68                     l3783:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3484  000D68  C090  F02E         	movff	efgtoa@h,___fldiv@b
  3485  000D6C  C091  F02F         	movff	efgtoa@h+1,___fldiv@b+1
  3486  000D70  C092  F030         	movff	efgtoa@h+2,___fldiv@b+2
  3487  000D74  C093  F031         	movff	efgtoa@h+3,___fldiv@b+3
  3488  000D78  C0A2  F032         	movff	efgtoa@u,___fldiv@a
  3489  000D7C  C0A3  F033         	movff	efgtoa@u+1,___fldiv@a+1
  3490  000D80  C0A4  F034         	movff	efgtoa@u+2,___fldiv@a+2
  3491  000D84  C0A5  F035         	movff	efgtoa@u+3,___fldiv@a+3
  3492  000D88  EC76  F013         	call	___fldiv	;wreg free
  3493  000D8C  C02E  F047         	movff	?___fldiv,floorf@x
  3494  000D90  C02F  F048         	movff	?___fldiv+1,floorf@x+1
  3495  000D94  C030  F049         	movff	?___fldiv+2,floorf@x+2
  3496  000D98  C031  F04A         	movff	?___fldiv+3,floorf@x+3
  3497  000D9C  EC43  F015         	call	_floorf	;wreg free
  3498  000DA0  C047  F094         	movff	?_floorf,efgtoa@l
  3499  000DA4  C048  F095         	movff	?_floorf+1,efgtoa@l+1
  3500  000DA8  C049  F096         	movff	?_floorf+2,efgtoa@l+2
  3501  000DAC  C04A  F097         	movff	?_floorf+3,efgtoa@l+3
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3504  000DB0  C094  F057         	movff	efgtoa@l,___fltol@f1
  3505  000DB4  C095  F058         	movff	efgtoa@l+1,___fltol@f1+1
  3506  000DB8  C096  F059         	movff	efgtoa@l+2,___fltol@f1+2
  3507  000DBC  C097  F05A         	movff	efgtoa@l+3,___fltol@f1+3
  3508  000DC0  ECEE  F017         	call	___fltol	;wreg free
  3509  000DC4  C057  F086         	movff	?___fltol,efgtoa@d
  3510  000DC8  C058  F087         	movff	?___fltol+1,efgtoa@d+1
  3511  000DCC                     
  3512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3513  000DCC  C090  F057         	movff	efgtoa@h,___flsub@b
  3514  000DD0  C091  F058         	movff	efgtoa@h+1,___flsub@b+1
  3515  000DD4  C092  F059         	movff	efgtoa@h+2,___flsub@b+2
  3516  000DD8  C093  F05A         	movff	efgtoa@h+3,___flsub@b+3
  3517  000DDC  C0A2  F019         	movff	efgtoa@u,___flmul@a
  3518  000DE0  C0A3  F01A         	movff	efgtoa@u+1,___flmul@a+1
  3519  000DE4  C0A4  F01B         	movff	efgtoa@u+2,___flmul@a+2
  3520  000DE8  C0A5  F01C         	movff	efgtoa@u+3,___flmul@a+3
  3521  000DEC  C094  F015         	movff	efgtoa@l,___flmul@b
  3522  000DF0  C095  F016         	movff	efgtoa@l+1,___flmul@b+1
  3523  000DF4  C096  F017         	movff	efgtoa@l+2,___flmul@b+2
  3524  000DF8  C097  F018         	movff	efgtoa@l+3,___flmul@b+3
  3525  000DFC  EC61  F011         	call	___flmul	;wreg free
  3526  000E00  C015  F05B         	movff	?___flmul,___flsub@a
  3527  000E04  C016  F05C         	movff	?___flmul+1,___flsub@a+1
  3528  000E08  C017  F05D         	movff	?___flmul+2,___flsub@a+2
  3529  000E0C  C018  F05E         	movff	?___flmul+3,___flsub@a+3
  3530  000E10  EC0C  F01E         	call	___flsub	;wreg free
  3531  000E14  C057  F090         	movff	?___flsub,efgtoa@h
  3532  000E18  C058  F091         	movff	?___flsub+1,efgtoa@h+1
  3533  000E1C  C059  F092         	movff	?___flsub+2,efgtoa@h+2
  3534  000E20  C05A  F093         	movff	?___flsub+3,efgtoa@h+3
  3535  000E24                     
  3536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3537  000E24  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  3538  000E28  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  3539  000E2C  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  3540  000E30  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  3541  000E34  0E00               	movlw	0
  3542  000E36  6E32               	movwf	___fldiv@a^0,c
  3543  000E38  0E00               	movlw	0
  3544  000E3A  6E33               	movwf	(___fldiv@a+1)^0,c
  3545  000E3C  0E20               	movlw	32
  3546  000E3E  6E34               	movwf	(___fldiv@a+2)^0,c
  3547  000E40  0E41               	movlw	65
  3548  000E42  6E35               	movwf	(___fldiv@a+3)^0,c
  3549  000E44  EC76  F013         	call	___fldiv	;wreg free
  3550  000E48  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  3551  000E4C  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  3552  000E50  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  3553  000E54  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  3554  000E58                     
  3555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3556  000E58  0100               	movlb	0	; () banked
  3557  000E5A  4B98               	infsnz	efgtoa@i& (0+255),f,b
  3558  000E5C  2B99               	incf	(efgtoa@i+1)& (0+255),f,b
  3559  000E5E                     l3791:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3563  000E5E  5180               	movf	efgtoa@m& (0+255),w,b
  3564  000E60  5D98               	subwf	efgtoa@i& (0+255),w,b
  3565  000E62  5199               	movf	(efgtoa@i+1)& (0+255),w,b
  3566  000E64  0A80               	xorlw	128
  3567  000E66  6F69               	movwf	??_efgtoa& (0+255),b
  3568  000E68  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  3569  000E6A  0A80               	xorlw	128
  3570  000E6C  5969               	subwfb	??_efgtoa& (0+255),w,b
  3571  000E6E  A0D8               	btfss	status,0,c
  3572  000E70  EF3C  F007         	goto	u4381
  3573  000E74  EF3E  F007         	goto	u4380
  3574  000E78                     u4381:
  3575  000E78  EFB4  F006         	goto	l3783
  3576  000E7C                     u4380:
  3577  000E7C                     
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3580  000E7C  C0A2  F015         	movff	efgtoa@u,___flmul@b
  3581  000E80  C0A3  F016         	movff	efgtoa@u+1,___flmul@b+1
  3582  000E84  C0A4  F017         	movff	efgtoa@u+2,___flmul@b+2
  3583  000E88  C0A5  F018         	movff	efgtoa@u+3,___flmul@b+3
  3584  000E8C  0E00               	movlw	0
  3585  000E8E  6E19               	movwf	___flmul@a^0,c
  3586  000E90  0E00               	movlw	0
  3587  000E92  6E1A               	movwf	(___flmul@a+1)^0,c
  3588  000E94  0EA0               	movlw	160
  3589  000E96  6E1B               	movwf	(___flmul@a+2)^0,c
  3590  000E98  0E40               	movlw	64
  3591  000E9A  6E1C               	movwf	(___flmul@a+3)^0,c
  3592  000E9C  EC61  F011         	call	___flmul	;wreg free
  3593  000EA0  C015  F094         	movff	?___flmul,efgtoa@l
  3594  000EA4  C016  F095         	movff	?___flmul+1,efgtoa@l+1
  3595  000EA8  C017  F096         	movff	?___flmul+2,efgtoa@l+2
  3596  000EAC  C018  F097         	movff	?___flmul+3,efgtoa@l+3
  3597  000EB0                     
  3598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3599  000EB0  C090  F02E         	movff	efgtoa@h,___flge@ff1
  3600  000EB4  C091  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  3601  000EB8  C092  F030         	movff	efgtoa@h+2,___flge@ff1+2
  3602  000EBC  C093  F031         	movff	efgtoa@h+3,___flge@ff1+3
  3603  000EC0  C094  F032         	movff	efgtoa@l,___flge@ff2
  3604  000EC4  C095  F033         	movff	efgtoa@l+1,___flge@ff2+1
  3605  000EC8  C096  F034         	movff	efgtoa@l+2,___flge@ff2+2
  3606  000ECC  C097  F035         	movff	efgtoa@l+3,___flge@ff2+3
  3607  000ED0  EC72  F018         	call	___flge	;wreg free
  3608  000ED4  B0D8               	btfsc	status,0,c
  3609  000ED6  EF6F  F007         	goto	u4391
  3610  000EDA  EF71  F007         	goto	u4390
  3611  000EDE                     u4391:
  3612  000EDE  EF7C  F007         	goto	l3799
  3613  000EE2                     u4390:
  3614  000EE2                     
  3615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3616  000EE2  0E00               	movlw	0
  3617  000EE4  0100               	movlb	0	; () banked
  3618  000EE6  6F94               	movwf	efgtoa@l& (0+255),b
  3619  000EE8  0E00               	movlw	0
  3620  000EEA  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  3621  000EEC  0E00               	movlw	0
  3622  000EEE  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  3623  000EF0  0E00               	movlw	0
  3624  000EF2  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  3625                           
  3626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3627  000EF4  EFA5  F007         	goto	l3805
  3628  000EF8                     l3799:
  3629                           
  3630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3631  000EF8  C090  F001         	movff	efgtoa@h,___fleq@ff1
  3632  000EFC  C091  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3633  000F00  C092  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3634  000F04  C093  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3635  000F08  C094  F005         	movff	efgtoa@l,___fleq@ff2
  3636  000F0C  C095  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3637  000F10  C096  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3638  000F14  C097  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3639  000F18  ECDF  F01B         	call	___fleq	;wreg free
  3640  000F1C  A0D8               	btfss	status,0,c
  3641  000F1E  EF93  F007         	goto	u4401
  3642  000F22  EF95  F007         	goto	u4400
  3643  000F26                     u4401:
  3644  000F26  EFA5  F007         	goto	l3805
  3645  000F2A                     u4400:
  3646  000F2A  0100               	movlb	0	; () banked
  3647  000F2C  B186               	btfsc	efgtoa@d& (0+255),0,b
  3648  000F2E  EF9B  F007         	goto	u4411
  3649  000F32  EF9D  F007         	goto	u4410
  3650  000F36                     u4411:
  3651  000F36  EFA5  F007         	goto	l3805
  3652  000F3A                     u4410:
  3653  000F3A                     
  3654                           ; BSR set to: 0
  3655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3656  000F3A  0E00               	movlw	0
  3657  000F3C  6F94               	movwf	efgtoa@l& (0+255),b
  3658  000F3E  0E00               	movlw	0
  3659  000F40  6F95               	movwf	(efgtoa@l+1)& (0+255),b
  3660  000F42  0E00               	movlw	0
  3661  000F44  6F96               	movwf	(efgtoa@l+2)& (0+255),b
  3662  000F46  0E00               	movlw	0
  3663  000F48  6F97               	movwf	(efgtoa@l+3)& (0+255),b
  3664  000F4A                     l3805:
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3667  000F4A  C09A  F047         	movff	efgtoa@g,___fladd@b
  3668  000F4E  C09B  F048         	movff	efgtoa@g+1,___fladd@b+1
  3669  000F52  C09C  F049         	movff	efgtoa@g+2,___fladd@b+2
  3670  000F56  C09D  F04A         	movff	efgtoa@g+3,___fladd@b+3
  3671  000F5A  C094  F04B         	movff	efgtoa@l,___fladd@a
  3672  000F5E  C095  F04C         	movff	efgtoa@l+1,___fladd@a+1
  3673  000F62  C096  F04D         	movff	efgtoa@l+2,___fladd@a+2
  3674  000F66  C097  F04E         	movff	efgtoa@l+3,___fladd@a+3
  3675  000F6A  ECD9  F00C         	call	___fladd	;wreg free
  3676  000F6E  C047  F090         	movff	?___fladd,efgtoa@h
  3677  000F72  C048  F091         	movff	?___fladd+1,efgtoa@h+1
  3678  000F76  C049  F092         	movff	?___fladd+2,efgtoa@h+2
  3679  000F7A  C04A  F093         	movff	?___fladd+3,efgtoa@h+3
  3680  000F7E                     
  3681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3682  000F7E  C090  F02E         	movff	efgtoa@h,___flge@ff1
  3683  000F82  C091  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  3684  000F86  C092  F030         	movff	efgtoa@h+2,___flge@ff1+2
  3685  000F8A  C093  F031         	movff	efgtoa@h+3,___flge@ff1+3
  3686  000F8E  0E00               	movlw	0
  3687  000F90  6E19               	movwf	___flmul@a^0,c
  3688  000F92  0E00               	movlw	0
  3689  000F94  6E1A               	movwf	(___flmul@a+1)^0,c
  3690  000F96  0E20               	movlw	32
  3691  000F98  6E1B               	movwf	(___flmul@a+2)^0,c
  3692  000F9A  0E41               	movlw	65
  3693  000F9C  6E1C               	movwf	(___flmul@a+3)^0,c
  3694  000F9E  C082  F015         	movff	efgtoa@ou,___flmul@b
  3695  000FA2  C083  F016         	movff	efgtoa@ou+1,___flmul@b+1
  3696  000FA6  C084  F017         	movff	efgtoa@ou+2,___flmul@b+2
  3697  000FAA  C085  F018         	movff	efgtoa@ou+3,___flmul@b+3
  3698  000FAE  EC61  F011         	call	___flmul	;wreg free
  3699  000FB2  C015  F032         	movff	?___flmul,___flge@ff2
  3700  000FB6  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  3701  000FBA  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  3702  000FBE  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  3703  000FC2  EC72  F018         	call	___flge	;wreg free
  3704  000FC6  A0D8               	btfss	status,0,c
  3705  000FC8  EFE8  F007         	goto	u4421
  3706  000FCC  EFEA  F007         	goto	u4420
  3707  000FD0                     u4421:
  3708  000FD0  EF13  F008         	goto	l3817
  3709  000FD4                     u4420:
  3710  000FD4                     
  3711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3712  000FD4  0100               	movlb	0	; () banked
  3713  000FD6  4B9E               	infsnz	efgtoa@e& (0+255),f,b
  3714  000FD8  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  3715  000FDA                     
  3716                           ; BSR set to: 0
  3717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3718  000FDA  C082  F015         	movff	efgtoa@ou,___flmul@b
  3719  000FDE  C083  F016         	movff	efgtoa@ou+1,___flmul@b+1
  3720  000FE2  C084  F017         	movff	efgtoa@ou+2,___flmul@b+2
  3721  000FE6  C085  F018         	movff	efgtoa@ou+3,___flmul@b+3
  3722  000FEA  0E00               	movlw	0
  3723  000FEC  6E19               	movwf	___flmul@a^0,c
  3724  000FEE  0E00               	movlw	0
  3725  000FF0  6E1A               	movwf	(___flmul@a+1)^0,c
  3726  000FF2  0E20               	movlw	32
  3727  000FF4  6E1B               	movwf	(___flmul@a+2)^0,c
  3728  000FF6  0E41               	movlw	65
  3729  000FF8  6E1C               	movwf	(___flmul@a+3)^0,c
  3730  000FFA  EC61  F011         	call	___flmul	;wreg free
  3731  000FFE  C015  F082         	movff	?___flmul,efgtoa@ou
  3732  001002  C016  F083         	movff	?___flmul+1,efgtoa@ou+1
  3733  001006  C017  F084         	movff	?___flmul+2,efgtoa@ou+2
  3734  00100A  C018  F085         	movff	?___flmul+3,efgtoa@ou+3
  3735  00100E                     
  3736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3737  00100E  0E66               	movlw	102
  3738  001010  0100               	movlb	0	; () banked
  3739  001012  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3740  001014  A4D8               	btfss	status,2,c
  3741  001016  EF0F  F008         	goto	u4431
  3742  00101A  EF11  F008         	goto	u4430
  3743  00101E                     u4431:
  3744  00101E  EF13  F008         	goto	l3817
  3745  001022                     u4430:
  3746  001022                     
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3749  001022  4B80               	infsnz	efgtoa@m& (0+255),f,b
  3750  001024  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  3751  001026                     l3817:
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3754  001026  C082  F0A2         	movff	efgtoa@ou,efgtoa@u
  3755  00102A  C083  F0A3         	movff	efgtoa@ou+1,efgtoa@u+1
  3756  00102E  C084  F0A4         	movff	efgtoa@ou+2,efgtoa@u+2
  3757  001032  C085  F0A5         	movff	efgtoa@ou+3,efgtoa@u+3
  3758  001036                     
  3759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3760  001036  0E65               	movlw	101
  3761  001038  0100               	movlb	0	; () banked
  3762  00103A  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  3763  00103C  B4D8               	btfsc	status,2,c
  3764  00103E  EF23  F008         	goto	u4441
  3765  001042  EF25  F008         	goto	u4440
  3766  001046                     u4441:
  3767  001046  EF2B  F008         	goto	l3823
  3768  00104A                     u4440:
  3769  00104A                     
  3770                           ; BSR set to: 0
  3771  00104A  C09E  F07E         	movff	efgtoa@e,efgtoa@ne
  3772  00104E  C09F  F07F         	movff	efgtoa@e+1,efgtoa@ne+1
  3773  001052  EF2F  F008         	goto	l963
  3774  001056                     l3823:
  3775                           
  3776                           ; BSR set to: 0
  3777  001056  0E00               	movlw	0
  3778  001058  6F7F               	movwf	(efgtoa@ne+1)& (0+255),b
  3779  00105A  0E00               	movlw	0
  3780  00105C  6F7E               	movwf	efgtoa@ne& (0+255),b
  3781  00105E                     l963:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3785  00105E  0E00               	movlw	0
  3786  001060  6F7D               	movwf	(efgtoa@pp+1)& (0+255),b
  3787  001062  0E00               	movlw	0
  3788  001064  6F7C               	movwf	efgtoa@pp& (0+255),b
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3791  001066  0E00               	movlw	0
  3792  001068  6F7B               	movwf	(efgtoa@t+1)& (0+255),b
  3793  00106A  0E00               	movlw	0
  3794  00106C  6F7A               	movwf	efgtoa@t& (0+255),b
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3797  00106E  0E00               	movlw	0
  3798  001070  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  3799  001072  0E00               	movlw	0
  3800  001074  6F98               	movwf	efgtoa@i& (0+255),b
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3803  001076  EF2A  F009         	goto	l3873
  3804  00107A                     l3825:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3808  00107A  C090  F02E         	movff	efgtoa@h,___fldiv@b
  3809  00107E  C091  F02F         	movff	efgtoa@h+1,___fldiv@b+1
  3810  001082  C092  F030         	movff	efgtoa@h+2,___fldiv@b+2
  3811  001086  C093  F031         	movff	efgtoa@h+3,___fldiv@b+3
  3812  00108A  C0A2  F032         	movff	efgtoa@u,___fldiv@a
  3813  00108E  C0A3  F033         	movff	efgtoa@u+1,___fldiv@a+1
  3814  001092  C0A4  F034         	movff	efgtoa@u+2,___fldiv@a+2
  3815  001096  C0A5  F035         	movff	efgtoa@u+3,___fldiv@a+3
  3816  00109A  EC76  F013         	call	___fldiv	;wreg free
  3817  00109E  C02E  F047         	movff	?___fldiv,floorf@x
  3818  0010A2  C02F  F048         	movff	?___fldiv+1,floorf@x+1
  3819  0010A6  C030  F049         	movff	?___fldiv+2,floorf@x+2
  3820  0010AA  C031  F04A         	movff	?___fldiv+3,floorf@x+3
  3821  0010AE  EC43  F015         	call	_floorf	;wreg free
  3822  0010B2  C047  F094         	movff	?_floorf,efgtoa@l
  3823  0010B6  C048  F095         	movff	?_floorf+1,efgtoa@l+1
  3824  0010BA  C049  F096         	movff	?_floorf+2,efgtoa@l+2
  3825  0010BE  C04A  F097         	movff	?_floorf+3,efgtoa@l+3
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3828  0010C2  C094  F057         	movff	efgtoa@l,___fltol@f1
  3829  0010C6  C095  F058         	movff	efgtoa@l+1,___fltol@f1+1
  3830  0010CA  C096  F059         	movff	efgtoa@l+2,___fltol@f1+2
  3831  0010CE  C097  F05A         	movff	efgtoa@l+3,___fltol@f1+3
  3832  0010D2  ECEE  F017         	call	___fltol	;wreg free
  3833  0010D6  C057  F086         	movff	?___fltol,efgtoa@d
  3834  0010DA  C058  F087         	movff	?___fltol+1,efgtoa@d+1
  3835  0010DE                     
  3836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3837  0010DE  0100               	movlb	0	; () banked
  3838  0010E0  B9F8               	btfsc	_flags& (0+255),4,b
  3839  0010E2  EF75  F008         	goto	u4451
  3840  0010E6  EF77  F008         	goto	u4450
  3841  0010EA                     u4451:
  3842  0010EA  EF94  F008         	goto	l3837
  3843  0010EE                     u4450:
  3844  0010EE                     
  3845                           ; BSR set to: 0
  3846  0010EE  5186               	movf	efgtoa@d& (0+255),w,b
  3847  0010F0  1187               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3848  0010F2  A4D8               	btfss	status,2,c
  3849  0010F4  EF7E  F008         	goto	u4461
  3850  0010F8  EF80  F008         	goto	u4460
  3851  0010FC                     u4461:
  3852  0010FC  EF94  F008         	goto	l3837
  3853  001100                     u4460:
  3854  001100                     
  3855                           ; BSR set to: 0
  3856  001100  0E67               	movlw	103
  3857  001102  198F               	xorwf	efgtoa@mode& (0+255),w,b
  3858  001104  A4D8               	btfss	status,2,c
  3859  001106  EF87  F008         	goto	u4471
  3860  00110A  EF89  F008         	goto	u4470
  3861  00110E                     u4471:
  3862  00110E  EF94  F008         	goto	l3837
  3863  001112                     u4470:
  3864  001112                     
  3865                           ; BSR set to: 0
  3866  001112  BF7F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3867  001114  EF90  F008         	goto	u4480
  3868  001118  EF8E  F008         	goto	u4481
  3869  00111C                     u4481:
  3870  00111C  EF94  F008         	goto	l3837
  3871  001120                     u4480:
  3872  001120                     
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3875  001120  4B7A               	infsnz	efgtoa@t& (0+255),f,b
  3876  001122  2B7B               	incf	(efgtoa@t+1)& (0+255),f,b
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3879  001124  EFDE  F008         	goto	l3865
  3880  001128                     l3837:
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3884  001128  517C               	movf	efgtoa@pp& (0+255),w,b
  3885  00112A  117D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3886  00112C  A4D8               	btfss	status,2,c
  3887  00112E  EF9B  F008         	goto	u4491
  3888  001132  EF9D  F008         	goto	u4490
  3889  001136                     u4491:
  3890  001136  EFC7  F008         	goto	l3857
  3891  00113A                     u4490:
  3892  00113A                     
  3893                           ; BSR set to: 0
  3894  00113A  BF7F               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3895  00113C  EFA4  F008         	goto	u4500
  3896  001140  EFA2  F008         	goto	u4501
  3897  001144                     u4501:
  3898  001144  EFC7  F008         	goto	l3857
  3899  001148                     u4500:
  3900  001148                     
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3903  001148  0E00               	movlw	low _dbuf
  3904  00114A  25A0               	addwf	efgtoa@n& (0+255),w,b
  3905  00114C  6ED9               	movwf	fsr2l,c
  3906  00114E  0E01               	movlw	high _dbuf
  3907  001150  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3908  001152  6EDA               	movwf	fsr2h,c
  3909  001154  0E2E               	movlw	46
  3910  001156  6EDF               	movwf	indf2,c
  3911  001158                     
  3912                           ; BSR set to: 0
  3913  001158  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  3914  00115A  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  3915  00115C                     
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3918  00115C  078C               	decf	efgtoa@w& (0+255),f,b
  3919  00115E  A0D8               	btfss	status,0,c
  3920  001160  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  3921  001162                     
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3924  001162  0E00               	movlw	0
  3925  001164  6F7D               	movwf	(efgtoa@pp+1)& (0+255),b
  3926  001166  0E01               	movlw	1
  3927  001168  6F7C               	movwf	efgtoa@pp& (0+255),b
  3928  00116A  EFC7  F008         	goto	l3857
  3929  00116E                     l3849:
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3933  00116E  0E00               	movlw	low _dbuf
  3934  001170  25A0               	addwf	efgtoa@n& (0+255),w,b
  3935  001172  6ED9               	movwf	fsr2l,c
  3936  001174  0E01               	movlw	high _dbuf
  3937  001176  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3938  001178  6EDA               	movwf	fsr2h,c
  3939  00117A  0E30               	movlw	48
  3940  00117C  6EDF               	movwf	indf2,c
  3941  00117E                     
  3942                           ; BSR set to: 0
  3943  00117E  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  3944  001180  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  3945  001182                     
  3946                           ; BSR set to: 0
  3947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3948  001182  078C               	decf	efgtoa@w& (0+255),f,b
  3949  001184  A0D8               	btfss	status,0,c
  3950  001186  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  3951  001188                     
  3952                           ; BSR set to: 0
  3953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3954  001188  077A               	decf	efgtoa@t& (0+255),f,b
  3955  00118A  A0D8               	btfss	status,0,c
  3956  00118C  077B               	decf	(efgtoa@t+1)& (0+255),f,b
  3957  00118E                     l3857:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3961  00118E  517A               	movf	efgtoa@t& (0+255),w,b
  3962  001190  117B               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3963  001192  A4D8               	btfss	status,2,c
  3964  001194  EFCE  F008         	goto	u4511
  3965  001198  EFD0  F008         	goto	u4510
  3966  00119C                     u4511:
  3967  00119C  EFB7  F008         	goto	l3849
  3968  0011A0                     u4510:
  3969  0011A0                     
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3972  0011A0  0E00               	movlw	low _dbuf
  3973  0011A2  25A0               	addwf	efgtoa@n& (0+255),w,b
  3974  0011A4  6ED9               	movwf	fsr2l,c
  3975  0011A6  0E01               	movlw	high _dbuf
  3976  0011A8  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3977  0011AA  6EDA               	movwf	fsr2h,c
  3978  0011AC  5186               	movf	efgtoa@d& (0+255),w,b
  3979  0011AE  0F30               	addlw	48
  3980  0011B0  6EDF               	movwf	indf2,c
  3981  0011B2                     
  3982                           ; BSR set to: 0
  3983  0011B2  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  3984  0011B4  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  3985  0011B6                     
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3988  0011B6  078C               	decf	efgtoa@w& (0+255),f,b
  3989  0011B8  A0D8               	btfss	status,0,c
  3990  0011BA  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  3991  0011BC                     l3865:
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3995  0011BC  C090  F057         	movff	efgtoa@h,___flsub@b
  3996  0011C0  C091  F058         	movff	efgtoa@h+1,___flsub@b+1
  3997  0011C4  C092  F059         	movff	efgtoa@h+2,___flsub@b+2
  3998  0011C8  C093  F05A         	movff	efgtoa@h+3,___flsub@b+3
  3999  0011CC  C0A2  F019         	movff	efgtoa@u,___flmul@a
  4000  0011D0  C0A3  F01A         	movff	efgtoa@u+1,___flmul@a+1
  4001  0011D4  C0A4  F01B         	movff	efgtoa@u+2,___flmul@a+2
  4002  0011D8  C0A5  F01C         	movff	efgtoa@u+3,___flmul@a+3
  4003  0011DC  C094  F015         	movff	efgtoa@l,___flmul@b
  4004  0011E0  C095  F016         	movff	efgtoa@l+1,___flmul@b+1
  4005  0011E4  C096  F017         	movff	efgtoa@l+2,___flmul@b+2
  4006  0011E8  C097  F018         	movff	efgtoa@l+3,___flmul@b+3
  4007  0011EC  EC61  F011         	call	___flmul	;wreg free
  4008  0011F0  C015  F05B         	movff	?___flmul,___flsub@a
  4009  0011F4  C016  F05C         	movff	?___flmul+1,___flsub@a+1
  4010  0011F8  C017  F05D         	movff	?___flmul+2,___flsub@a+2
  4011  0011FC  C018  F05E         	movff	?___flmul+3,___flsub@a+3
  4012  001200  EC0C  F01E         	call	___flsub	;wreg free
  4013  001204  C057  F090         	movff	?___flsub,efgtoa@h
  4014  001208  C058  F091         	movff	?___flsub+1,efgtoa@h+1
  4015  00120C  C059  F092         	movff	?___flsub+2,efgtoa@h+2
  4016  001210  C05A  F093         	movff	?___flsub+3,efgtoa@h+3
  4017  001214                     
  4018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4019  001214  C0A2  F02E         	movff	efgtoa@u,___fldiv@b
  4020  001218  C0A3  F02F         	movff	efgtoa@u+1,___fldiv@b+1
  4021  00121C  C0A4  F030         	movff	efgtoa@u+2,___fldiv@b+2
  4022  001220  C0A5  F031         	movff	efgtoa@u+3,___fldiv@b+3
  4023  001224  0E00               	movlw	0
  4024  001226  6E32               	movwf	___fldiv@a^0,c
  4025  001228  0E00               	movlw	0
  4026  00122A  6E33               	movwf	(___fldiv@a+1)^0,c
  4027  00122C  0E20               	movlw	32
  4028  00122E  6E34               	movwf	(___fldiv@a+2)^0,c
  4029  001230  0E41               	movlw	65
  4030  001232  6E35               	movwf	(___fldiv@a+3)^0,c
  4031  001234  EC76  F013         	call	___fldiv	;wreg free
  4032  001238  C02E  F0A2         	movff	?___fldiv,efgtoa@u
  4033  00123C  C02F  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  4034  001240  C030  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  4035  001244  C031  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  4036  001248                     
  4037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4038  001248  0100               	movlb	0	; () banked
  4039  00124A  077E               	decf	efgtoa@ne& (0+255),f,b
  4040  00124C  A0D8               	btfss	status,0,c
  4041  00124E  077F               	decf	(efgtoa@ne+1)& (0+255),f,b
  4042  001250                     
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4045  001250  4B98               	infsnz	efgtoa@i& (0+255),f,b
  4046  001252  2B99               	incf	(efgtoa@i+1)& (0+255),f,b
  4047  001254                     l3873:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4051  001254  5180               	movf	efgtoa@m& (0+255),w,b
  4052  001256  5D98               	subwf	efgtoa@i& (0+255),w,b
  4053  001258  5199               	movf	(efgtoa@i+1)& (0+255),w,b
  4054  00125A  0A80               	xorlw	128
  4055  00125C  6F69               	movwf	??_efgtoa& (0+255),b
  4056  00125E  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  4057  001260  0A80               	xorlw	128
  4058  001262  5969               	subwfb	??_efgtoa& (0+255),w,b
  4059  001264  B0D8               	btfsc	status,0,c
  4060  001266  EF37  F009         	goto	u4521
  4061  00126A  EF39  F009         	goto	u4520
  4062  00126E                     u4521:
  4063  00126E  EF47  F009         	goto	l3877
  4064  001272                     u4520:
  4065  001272                     
  4066                           ; BSR set to: 0
  4067  001272  BFA1               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4068  001274  EF45  F009         	goto	u4531
  4069  001278  51A1               	movf	(efgtoa@n+1)& (0+255),w,b
  4070  00127A  E109               	bnz	u4530
  4071  00127C  0E4B               	movlw	75
  4072  00127E  5DA0               	subwf	efgtoa@n& (0+255),w,b
  4073  001280  A0D8               	btfss	status,0,c
  4074  001282  EF45  F009         	goto	u4531
  4075  001286  EF47  F009         	goto	u4530
  4076  00128A                     u4531:
  4077  00128A  EF3D  F008         	goto	l3825
  4078  00128E                     u4530:
  4079  00128E                     l3877:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4083  00128E  517C               	movf	efgtoa@pp& (0+255),w,b
  4084  001290  117D               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4085  001292  A4D8               	btfss	status,2,c
  4086  001294  EF4E  F009         	goto	u4541
  4087  001298  EF50  F009         	goto	u4540
  4088  00129C                     u4541:
  4089  00129C  EF61  F009         	goto	l3885
  4090  0012A0                     u4540:
  4091  0012A0                     
  4092                           ; BSR set to: 0
  4093  0012A0  A9F8               	btfss	_flags& (0+255),4,b
  4094  0012A2  EF55  F009         	goto	u4551
  4095  0012A6  EF57  F009         	goto	u4550
  4096  0012AA                     u4551:
  4097  0012AA  EF61  F009         	goto	l3885
  4098  0012AE                     u4550:
  4099  0012AE                     
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4102  0012AE  0E00               	movlw	low _dbuf
  4103  0012B0  25A0               	addwf	efgtoa@n& (0+255),w,b
  4104  0012B2  6ED9               	movwf	fsr2l,c
  4105  0012B4  0E01               	movlw	high _dbuf
  4106  0012B6  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4107  0012B8  6EDA               	movwf	fsr2h,c
  4108  0012BA  0E2E               	movlw	46
  4109  0012BC  6EDF               	movwf	indf2,c
  4110  0012BE                     
  4111                           ; BSR set to: 0
  4112  0012BE  4BA0               	infsnz	efgtoa@n& (0+255),f,b
  4113  0012C0  2BA1               	incf	(efgtoa@n+1)& (0+255),f,b
  4114  0012C2                     l3885:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4118  0012C2  0E00               	movlw	low _dbuf
  4119  0012C4  25A0               	addwf	efgtoa@n& (0+255),w,b
  4120  0012C6  6ED9               	movwf	fsr2l,c
  4121  0012C8  0E01               	movlw	high _dbuf
  4122  0012CA  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4123  0012CC  6EDA               	movwf	fsr2h,c
  4124  0012CE  0E00               	movlw	0
  4125  0012D0  6EDF               	movwf	indf2,c
  4126  0012D2                     
  4127                           ; BSR set to: 0
  4128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4129  0012D2  0E65               	movlw	101
  4130  0012D4  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  4131  0012D6  A4D8               	btfss	status,2,c
  4132  0012D8  EF70  F009         	goto	u4561
  4133  0012DC  EF72  F009         	goto	u4560
  4134  0012E0                     u4561:
  4135  0012E0  EFCC  F004         	goto	l3687
  4136  0012E4                     u4560:
  4137  0012E4                     
  4138                           ; BSR set to: 0
  4139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4140  0012E4  0E00               	movlw	0
  4141  0012E6  6F99               	movwf	(efgtoa@i+1)& (0+255),b
  4142  0012E8  0E4F               	movlw	79
  4143  0012EA  6F98               	movwf	efgtoa@i& (0+255),b
  4144  0012EC                     
  4145                           ; BSR set to: 0
  4146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4147  0012EC  0E00               	movlw	low _dbuf
  4148  0012EE  2598               	addwf	efgtoa@i& (0+255),w,b
  4149  0012F0  6ED9               	movwf	fsr2l,c
  4150  0012F2  0E01               	movlw	high _dbuf
  4151  0012F4  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4152  0012F6  6EDA               	movwf	fsr2h,c
  4153  0012F8  0E00               	movlw	0
  4154  0012FA  6EDF               	movwf	indf2,c
  4155  0012FC                     
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4158  0012FC  0E00               	movlw	0
  4159  0012FE  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  4160  001300  0E00               	movlw	0
  4161  001302  6F88               	movwf	efgtoa@sign& (0+255),b
  4162  001304                     
  4163                           ; BSR set to: 0
  4164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4165  001304  BF9F               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4166  001306  EF89  F009         	goto	u4570
  4167  00130A  EF87  F009         	goto	u4571
  4168  00130E                     u4571:
  4169  00130E  EF91  F009         	goto	l3901
  4170  001312                     u4570:
  4171  001312                     
  4172                           ; BSR set to: 0
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4174  001312  0E00               	movlw	0
  4175  001314  6F89               	movwf	(efgtoa@sign+1)& (0+255),b
  4176  001316  0E01               	movlw	1
  4177  001318  6F88               	movwf	efgtoa@sign& (0+255),b
  4178  00131A                     
  4179                           ; BSR set to: 0
  4180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4181  00131A  6D9E               	negf	efgtoa@e& (0+255),b
  4182  00131C  1F9F               	comf	(efgtoa@e+1)& (0+255),f,b
  4183  00131E  B0D8               	btfsc	status,0,c
  4184  001320  2B9F               	incf	(efgtoa@e+1)& (0+255),f,b
  4185  001322                     l3901:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4189  001322  0E00               	movlw	0
  4190  001324  6F8B               	movwf	(efgtoa@p+1)& (0+255),b
  4191  001326  0E02               	movlw	2
  4192  001328  6F8A               	movwf	efgtoa@p& (0+255),b
  4193                           
  4194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4195  00132A  EFC2  F009         	goto	l3913
  4196  00132E                     l3903:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4200  00132E  0798               	decf	efgtoa@i& (0+255),f,b
  4201  001330  A0D8               	btfss	status,0,c
  4202  001332  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  4203  001334                     
  4204                           ; BSR set to: 0
  4205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4206  001334  0E00               	movlw	low _dbuf
  4207  001336  2598               	addwf	efgtoa@i& (0+255),w,b
  4208  001338  6ED9               	movwf	fsr2l,c
  4209  00133A  0E01               	movlw	high _dbuf
  4210  00133C  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4211  00133E  6EDA               	movwf	fsr2h,c
  4212  001340  C09E  F001         	movff	efgtoa@e,___awmod@dividend
  4213  001344  C09F  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4214  001348  0E00               	movlw	0
  4215  00134A  6E04               	movwf	(___awmod@divisor+1)^0,c
  4216  00134C  0E0A               	movlw	10
  4217  00134E  6E03               	movwf	___awmod@divisor^0,c
  4218  001350  EC87  F01B         	call	___awmod	;wreg free
  4219  001354  5001               	movf	?___awmod^0,w,c
  4220  001356  0F30               	addlw	48
  4221  001358  6EDF               	movwf	indf2,c
  4222  00135A                     
  4223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4224  00135A  C09E  F001         	movff	efgtoa@e,___awdiv@dividend
  4225  00135E  C09F  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4226  001362  0E00               	movlw	0
  4227  001364  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4228  001366  0E0A               	movlw	10
  4229  001368  6E03               	movwf	___awdiv@divisor^0,c
  4230  00136A  EC25  F01B         	call	___awdiv	;wreg free
  4231  00136E  C001  F09E         	movff	?___awdiv,efgtoa@e
  4232  001372  C002  F09F         	movff	?___awdiv+1,efgtoa@e+1
  4233  001376                     
  4234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4235  001376  0100               	movlb	0	; () banked
  4236  001378  078A               	decf	efgtoa@p& (0+255),f,b
  4237  00137A  A0D8               	btfss	status,0,c
  4238  00137C  078B               	decf	(efgtoa@p+1)& (0+255),f,b
  4239  00137E                     
  4240                           ; BSR set to: 0
  4241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4242  00137E  078C               	decf	efgtoa@w& (0+255),f,b
  4243  001380  A0D8               	btfss	status,0,c
  4244  001382  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  4245  001384                     l3913:
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4249  001384  519E               	movf	efgtoa@e& (0+255),w,b
  4250  001386  119F               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4251  001388  A4D8               	btfss	status,2,c
  4252  00138A  EFC9  F009         	goto	u4581
  4253  00138E  EFCB  F009         	goto	u4580
  4254  001392                     u4581:
  4255  001392  EF97  F009         	goto	l3903
  4256  001396                     u4580:
  4257  001396                     
  4258                           ; BSR set to: 0
  4259  001396  BF8B               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4260  001398  EFD8  F009         	goto	u4590
  4261  00139C  518B               	movf	(efgtoa@p+1)& (0+255),w,b
  4262  00139E  E106               	bnz	u4591
  4263  0013A0  058A               	decf	efgtoa@p& (0+255),w,b
  4264  0013A2  B0D8               	btfsc	status,0,c
  4265  0013A4  EFD6  F009         	goto	u4591
  4266  0013A8  EFD8  F009         	goto	u4590
  4267  0013AC                     u4591:
  4268  0013AC  EF97  F009         	goto	l3903
  4269  0013B0                     u4590:
  4270  0013B0                     
  4271                           ; BSR set to: 0
  4272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4273  0013B0  0798               	decf	efgtoa@i& (0+255),f,b
  4274  0013B2  A0D8               	btfss	status,0,c
  4275  0013B4  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  4276  0013B6                     
  4277                           ; BSR set to: 0
  4278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4279  0013B6  5188               	movf	efgtoa@sign& (0+255),w,b
  4280  0013B8  1189               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4281  0013BA  A4D8               	btfss	status,2,c
  4282  0013BC  EFE2  F009         	goto	u4601
  4283  0013C0  EFE4  F009         	goto	u4600
  4284  0013C4                     u4601:
  4285  0013C4  EFEA  F009         	goto	l3923
  4286  0013C8                     u4600:
  4287  0013C8                     
  4288                           ; BSR set to: 0
  4289  0013C8  0E00               	movlw	0
  4290  0013CA  6F75               	movwf	(_efgtoa$998+1)& (0+255),b
  4291  0013CC  0E2B               	movlw	43
  4292  0013CE  6F74               	movwf	_efgtoa$998& (0+255),b
  4293  0013D0  EFEE  F009         	goto	l3925
  4294  0013D4                     l3923:
  4295                           
  4296                           ; BSR set to: 0
  4297  0013D4  0E00               	movlw	0
  4298  0013D6  6F75               	movwf	(_efgtoa$998+1)& (0+255),b
  4299  0013D8  0E2D               	movlw	45
  4300  0013DA  6F74               	movwf	_efgtoa$998& (0+255),b
  4301  0013DC                     l3925:
  4302                           
  4303                           ; BSR set to: 0
  4304  0013DC  0E00               	movlw	low _dbuf
  4305  0013DE  2598               	addwf	efgtoa@i& (0+255),w,b
  4306  0013E0  6ED9               	movwf	fsr2l,c
  4307  0013E2  0E01               	movlw	high _dbuf
  4308  0013E4  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4309  0013E6  6EDA               	movwf	fsr2h,c
  4310  0013E8  C074  FFDF         	movff	_efgtoa$998,indf2
  4311  0013EC                     
  4312                           ; BSR set to: 0
  4313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4314  0013EC  078C               	decf	efgtoa@w& (0+255),f,b
  4315  0013EE  A0D8               	btfss	status,0,c
  4316  0013F0  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  4317  0013F2                     
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4320  0013F2  0798               	decf	efgtoa@i& (0+255),f,b
  4321  0013F4  A0D8               	btfss	status,0,c
  4322  0013F6  0799               	decf	(efgtoa@i+1)& (0+255),f,b
  4323  0013F8                     
  4324                           ; BSR set to: 0
  4325  0013F8  0EBF               	movlw	191
  4326  0013FA  6F69               	movwf	??_efgtoa& (0+255),b
  4327  0013FC  0EFF               	movlw	255
  4328  0013FE  6F6A               	movwf	(??_efgtoa+1)& (0+255),b
  4329  001400  5168               	movf	efgtoa@c& (0+255),w,b
  4330  001402  6F6B               	movwf	(??_efgtoa+2)& (0+255),b
  4331  001404  6B6C               	clrf	(??_efgtoa+3)& (0+255),b
  4332  001406  5169               	movf	??_efgtoa& (0+255),w,b
  4333  001408  276B               	addwf	(??_efgtoa+2)& (0+255),f,b
  4334  00140A  516A               	movf	(??_efgtoa+1)& (0+255),w,b
  4335  00140C  236C               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4336  00140E  516C               	movf	(??_efgtoa+3)& (0+255),w,b
  4337  001410  E10A               	bnz	u4610
  4338  001412  0E1A               	movlw	26
  4339  001414  5D6B               	subwf	(??_efgtoa+2)& (0+255),w,b
  4340  001416  A0D8               	btfss	status,0,c
  4341  001418  EF10  F00A         	goto	u4611
  4342  00141C  EF13  F00A         	goto	u4610
  4343  001420                     u4611:
  4344  001420  0E01               	movlw	1
  4345  001422  EF14  F00A         	goto	u4620
  4346  001426                     u4610:
  4347  001426  0E00               	movlw	0
  4348  001428                     u4620:
  4349  001428  6F78               	movwf	_efgtoa$1000& (0+255),b
  4350  00142A  6B79               	clrf	(_efgtoa$1000+1)& (0+255),b
  4351  00142C                     
  4352                           ; BSR set to: 0
  4353  00142C  5178               	movf	_efgtoa$1000& (0+255),w,b
  4354  00142E  1179               	iorwf	(_efgtoa$1000+1)& (0+255),w,b
  4355  001430  A4D8               	btfss	status,2,c
  4356  001432  EF1D  F00A         	goto	u4631
  4357  001436  EF1F  F00A         	goto	u4630
  4358  00143A                     u4631:
  4359  00143A  EF25  F00A         	goto	l3939
  4360  00143E                     u4630:
  4361  00143E                     
  4362                           ; BSR set to: 0
  4363  00143E  0E00               	movlw	0
  4364  001440  6F77               	movwf	(_efgtoa$999+1)& (0+255),b
  4365  001442  0E65               	movlw	101
  4366  001444  6F76               	movwf	_efgtoa$999& (0+255),b
  4367  001446  EF29  F00A         	goto	l3941
  4368  00144A                     l3939:
  4369                           
  4370                           ; BSR set to: 0
  4371  00144A  0E00               	movlw	0
  4372  00144C  6F77               	movwf	(_efgtoa$999+1)& (0+255),b
  4373  00144E  0E45               	movlw	69
  4374  001450  6F76               	movwf	_efgtoa$999& (0+255),b
  4375  001452                     l3941:
  4376                           
  4377                           ; BSR set to: 0
  4378  001452  0E00               	movlw	low _dbuf
  4379  001454  2598               	addwf	efgtoa@i& (0+255),w,b
  4380  001456  6ED9               	movwf	fsr2l,c
  4381  001458  0E01               	movlw	high _dbuf
  4382  00145A  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4383  00145C  6EDA               	movwf	fsr2h,c
  4384  00145E  C076  FFDF         	movff	_efgtoa$999,indf2
  4385  001462                     
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4388  001462  078C               	decf	efgtoa@w& (0+255),f,b
  4389  001464  A0D8               	btfss	status,0,c
  4390  001466  078D               	decf	(efgtoa@w+1)& (0+255),f,b
  4391  001468                     
  4392                           ; BSR set to: 0
  4393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4394  001468  0E00               	movlw	low _dbuf
  4395  00146A  25A0               	addwf	efgtoa@n& (0+255),w,b
  4396  00146C  6E01               	movwf	strcpy@dest^0,c
  4397  00146E  0E01               	movlw	high _dbuf
  4398  001470  21A1               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4399  001472  6E02               	movwf	(strcpy@dest+1)^0,c
  4400  001474  0E00               	movlw	low _dbuf
  4401  001476  2598               	addwf	efgtoa@i& (0+255),w,b
  4402  001478  6E03               	movwf	strcpy@src^0,c
  4403  00147A  0E01               	movlw	high _dbuf
  4404  00147C  2199               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4405  00147E  6E04               	movwf	(strcpy@src+1)^0,c
  4406  001480  ECF7  F01C         	call	_strcpy	;wreg free
  4407  001484  EFCC  F004         	goto	l3687
  4408  001488                     l917:
  4409  001488  0012               	return		;funcret
  4410  00148A                     __end_of_efgtoa:
  4411                           	callstack 0
  4412                           
  4413 ;; *************** function _tolower *****************
  4414 ;; Defined at:
  4415 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  c               2    6[COMRAM] int 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  2    6[COMRAM] int 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4429 ;;      Params:         2       0       0       0       0       0       0       0       0
  4430 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4431 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4432 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4433 ;;Total ram usage:        8 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 1
  4436 ;; This function calls:
  4437 ;;		_isupper
  4438 ;; This function is called by:
  4439 ;;		_efgtoa
  4440 ;;		_vfpfcnvrt
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text6
  4445  003930                     __ptext6:
  4446                           	callstack 0
  4447  003930                     _tolower:
  4448                           	callstack 26
  4449  003930  0EBF               	movlw	191
  4450  003932  6E09               	movwf	??_tolower^0,c
  4451  003934  0EFF               	movlw	255
  4452  003936  6E0A               	movwf	(??_tolower+1)^0,c
  4453  003938  C007  F00B         	movff	tolower@c,??_tolower+2
  4454  00393C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4455  003940  5009               	movf	??_tolower^0,w,c
  4456  003942  260B               	addwf	(??_tolower+2)^0,f,c
  4457  003944  500A               	movf	(??_tolower+1)^0,w,c
  4458  003946  220C               	addwfc	(??_tolower+3)^0,f,c
  4459  003948  500C               	movf	(??_tolower+3)^0,w,c
  4460  00394A  E10A               	bnz	u3910
  4461  00394C  0E1A               	movlw	26
  4462  00394E  5C0B               	subwf	(??_tolower+2)^0,w,c
  4463  003950  A0D8               	btfss	status,0,c
  4464  003952  EFAD  F01C         	goto	u3911
  4465  003956  EFB0  F01C         	goto	u3910
  4466  00395A                     u3911:
  4467  00395A  0E01               	movlw	1
  4468  00395C  EFB1  F01C         	goto	u3920
  4469  003960                     u3910:
  4470  003960  0E00               	movlw	0
  4471  003962                     u3920:
  4472  003962  6E0D               	movwf	_tolower$1147^0,c
  4473  003964  6A0E               	clrf	(_tolower$1147+1)^0,c
  4474  003966  500D               	movf	_tolower$1147^0,w,c
  4475  003968  100E               	iorwf	(_tolower$1147+1)^0,w,c
  4476  00396A  B4D8               	btfsc	status,2,c
  4477  00396C  EFBA  F01C         	goto	u3931
  4478  003970  EFBC  F01C         	goto	u3930
  4479  003974                     u3931:
  4480  003974  EFC3  F01C         	goto	l1159
  4481  003978                     u3930:
  4482  003978  0E20               	movlw	32
  4483  00397A  1007               	iorwf	tolower@c^0,w,c
  4484  00397C  6E07               	movwf	?_tolower^0,c
  4485  00397E  5008               	movf	(tolower@c+1)^0,w,c
  4486  003980  6E08               	movwf	(?_tolower+1)^0,c
  4487  003982  EFC7  F01C         	goto	l1164
  4488  003986                     l1159:
  4489  003986  C007  F007         	movff	tolower@c,?_tolower
  4490  00398A  C008  F008         	movff	tolower@c+1,?_tolower+1
  4491  00398E                     l1164:
  4492  00398E  0012               	return		;funcret
  4493  003990                     __end_of_tolower:
  4494                           	callstack 0
  4495                           
  4496 ;; *************** function _isupper *****************
  4497 ;; Defined at:
  4498 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;  c               2    0[COMRAM] int 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  2    0[COMRAM] int 
  4505 ;; Registers used:
  4506 ;;		wreg, status,2, status,0
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4512 ;;      Params:         2       0       0       0       0       0       0       0       0
  4513 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4514 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4515 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4516 ;;Total ram usage:        6 bytes
  4517 ;; Hardware stack levels used: 1
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_efgtoa
  4522 ;;		_vfpfcnvrt
  4523 ;;		_tolower
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text7
  4528  003D26                     __ptext7:
  4529                           	callstack 0
  4530  003D26                     _isupper:
  4531                           	callstack 26
  4532  003D26  0EBF               	movlw	191
  4533  003D28  6E03               	movwf	??_isupper^0,c
  4534  003D2A  0EFF               	movlw	255
  4535  003D2C  6E04               	movwf	(??_isupper+1)^0,c
  4536  003D2E  C001  F005         	movff	isupper@c,??_isupper+2
  4537  003D32  C002  F006         	movff	isupper@c+1,??_isupper+3
  4538  003D36  5003               	movf	??_isupper^0,w,c
  4539  003D38  2605               	addwf	(??_isupper+2)^0,f,c
  4540  003D3A  5004               	movf	(??_isupper+1)^0,w,c
  4541  003D3C  2206               	addwfc	(??_isupper+3)^0,f,c
  4542  003D3E  5006               	movf	(??_isupper+3)^0,w,c
  4543  003D40  E10A               	bnz	u3060
  4544  003D42  0E1A               	movlw	26
  4545  003D44  5C05               	subwf	(??_isupper+2)^0,w,c
  4546  003D46  A0D8               	btfss	status,0,c
  4547  003D48  EFA8  F01E         	goto	u3061
  4548  003D4C  EFAB  F01E         	goto	u3060
  4549  003D50                     u3061:
  4550  003D50  0E01               	movlw	1
  4551  003D52  EFAC  F01E         	goto	u3070
  4552  003D56                     u3060:
  4553  003D56  0E00               	movlw	0
  4554  003D58                     u3070:
  4555  003D58  6E01               	movwf	?_isupper^0,c
  4556  003D5A  6A02               	clrf	(?_isupper+1)^0,c
  4557  003D5C  0012               	return		;funcret
  4558  003D5E                     __end_of_isupper:
  4559                           	callstack 0
  4560                           
  4561 ;; *************** function _strcpy *****************
  4562 ;; Defined at:
  4563 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4566 ;;		 -> dbuf(80), 
  4567 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4568 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  4569 ;;		 -> dbuf(80), 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  d               2    8[COMRAM] PTR unsigned char 
  4572 ;;		 -> dbuf(80), 
  4573 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4574 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  4575 ;;		 -> dbuf(80), 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  2    0[COMRAM] PTR unsigned char 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4585 ;;      Params:         4       0       0       0       0       0       0       0       0
  4586 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4587 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4588 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4589 ;;Total ram usage:       10 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_efgtoa
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text8
  4599  0039EE                     __ptext8:
  4600                           	callstack 0
  4601  0039EE                     _strcpy:
  4602                           	callstack 26
  4603  0039EE  C003  F007         	movff	strcpy@src,strcpy@s
  4604  0039F2  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4605  0039F6  C001  F009         	movff	strcpy@dest,strcpy@d
  4606  0039FA  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4607  0039FE                     l3571:
  4608  0039FE  5007               	movf	strcpy@s^0,w,c
  4609  003A00  6E05               	movwf	??_strcpy^0,c
  4610  003A02  5008               	movf	(strcpy@s+1)^0,w,c
  4611  003A04  6E06               	movwf	(??_strcpy+1)^0,c
  4612  003A06  4A07               	infsnz	strcpy@s^0,f,c
  4613  003A08  2A08               	incf	(strcpy@s+1)^0,f,c
  4614  003A0A  C005  FFF6         	movff	??_strcpy,tblptrl
  4615  003A0E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4616  003A12  6AF8               	clrf	tblptru,c
  4617  003A14  C009  FFD9         	movff	strcpy@d,fsr2l
  4618  003A18  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4619  003A1C  4A09               	infsnz	strcpy@d^0,f,c
  4620  003A1E  2A0A               	incf	(strcpy@d+1)^0,f,c
  4621  003A20  0E07               	movlw	(high __ramtop+-1)
  4622  003A22  64F7               	cpfsgt	tblptrh,c
  4623  003A24  D003               	bra	u3897
  4624  003A26  0008               	tblrd		*
  4625  003A28  50F5               	movf	tablat,w,c
  4626  003A2A  D005               	bra	u3890
  4627  003A2C                     u3897:
  4628  003A2C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4629  003A30  CFF7 FFE2          	movff	tblptrh,fsr1h
  4630  003A34  50E7               	movf	indf1,w,c
  4631  003A36                     u3890:
  4632  003A36  6EDF               	movwf	indf2,c
  4633  003A38  50DF               	movf	indf2,w,c
  4634  003A3A  A4D8               	btfss	status,2,c
  4635  003A3C  EF22  F01D         	goto	u3901
  4636  003A40  EF24  F01D         	goto	u3900
  4637  003A44                     u3901:
  4638  003A44  EFFF  F01C         	goto	l3571
  4639  003A48                     u3900:
  4640  003A48  0012               	return		;funcret
  4641  003A4A                     __end_of_strcpy:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _pad *****************
  4645 ;; Defined at:
  4646 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4649 ;;		 -> sprintf@f(6), 
  4650 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4651 ;;		 -> dbuf(80), 
  4652 ;;  p               2   20[COMRAM] int 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  w               2   25[COMRAM] int 
  4655 ;;  i               2   23[COMRAM] int 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  2   16[COMRAM] int 
  4658 ;; Registers used:
  4659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4665 ;;      Params:         6       0       0       0       0       0       0       0       0
  4666 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4667 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4668 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4669 ;;Total ram usage:       11 bytes
  4670 ;; Hardware stack levels used: 1
  4671 ;; Hardware stack levels required when called: 3
  4672 ;; This function calls:
  4673 ;;		_fputc
  4674 ;;		_fputs
  4675 ;;		_strlen
  4676 ;; This function is called by:
  4677 ;;		_efgtoa
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text9
  4682  003584                     __ptext9:
  4683                           	callstack 0
  4684  003584                     _pad:
  4685                           	callstack 23
  4686  003584                     
  4687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4688  003584  0100               	movlb	0	; () banked
  4689  003586  A1F8               	btfss	_flags& (0+255),0,b
  4690  003588  EFC8  F01A         	goto	u3781
  4691  00358C  EFCA  F01A         	goto	u3780
  4692  003590                     u3781:
  4693  003590  EFD4  F01A         	goto	l3529
  4694  003594                     u3780:
  4695  003594                     
  4696                           ; BSR set to: 0
  4697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4698  003594  C013  F00A         	movff	pad@buf,fputs@s
  4699  003598  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4700  00359C  C011  F00C         	movff	pad@fp,fputs@fp
  4701  0035A0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4702  0035A4  EC51  F01E         	call	_fputs	;wreg free
  4703  0035A8                     l3529:
  4704                           
  4705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4706  0035A8  BE16               	btfsc	(pad@p+1)^0,7,c
  4707  0035AA  EFD9  F01A         	goto	u3791
  4708  0035AE  EFDB  F01A         	goto	u3790
  4709  0035B2                     u3791:
  4710  0035B2  EFE1  F01A         	goto	l3533
  4711  0035B6                     u3790:
  4712  0035B6  C015  F01A         	movff	pad@p,pad@w
  4713  0035BA  C016  F01B         	movff	pad@p+1,pad@w+1
  4714  0035BE  EFE5  F01A         	goto	l894
  4715  0035C2                     l3533:
  4716  0035C2  0E00               	movlw	0
  4717  0035C4  6E1B               	movwf	(pad@w+1)^0,c
  4718  0035C6  0E00               	movlw	0
  4719  0035C8  6E1A               	movwf	pad@w^0,c
  4720  0035CA                     l894:
  4721                           
  4722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4723  0035CA  0E00               	movlw	0
  4724  0035CC  6E19               	movwf	(pad@i+1)^0,c
  4725  0035CE  0E00               	movlw	0
  4726  0035D0  6E18               	movwf	pad@i^0,c
  4727                           
  4728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4729  0035D2  EFF7  F01A         	goto	l3539
  4730  0035D6                     l3535:
  4731                           
  4732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4733  0035D6  0E00               	movlw	0
  4734  0035D8  6E02               	movwf	(fputc@c+1)^0,c
  4735  0035DA  0E20               	movlw	32
  4736  0035DC  6E01               	movwf	fputc@c^0,c
  4737  0035DE  C011  F003         	movff	pad@fp,fputc@fp
  4738  0035E2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4739  0035E6  EC5D  F01A         	call	_fputc	;wreg free
  4740  0035EA                     
  4741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4742  0035EA  4A18               	infsnz	pad@i^0,f,c
  4743  0035EC  2A19               	incf	(pad@i+1)^0,f,c
  4744  0035EE                     l3539:
  4745                           
  4746                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4747  0035EE  501A               	movf	pad@w^0,w,c
  4748  0035F0  5C18               	subwf	pad@i^0,w,c
  4749  0035F2  5019               	movf	(pad@i+1)^0,w,c
  4750  0035F4  0A80               	xorlw	128
  4751  0035F6  6E17               	movwf	??_pad^0,c
  4752  0035F8  501B               	movf	(pad@w+1)^0,w,c
  4753  0035FA  0A80               	xorlw	128
  4754  0035FC  5817               	subwfb	??_pad^0,w,c
  4755  0035FE  A0D8               	btfss	status,0,c
  4756  003600  EF04  F01B         	goto	u3801
  4757  003604  EF06  F01B         	goto	u3800
  4758  003608                     u3801:
  4759  003608  EFEB  F01A         	goto	l3535
  4760  00360C                     u3800:
  4761  00360C                     
  4762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4763  00360C  0100               	movlb	0	; () banked
  4764  00360E  B1F8               	btfsc	_flags& (0+255),0,b
  4765  003610  EF0C  F01B         	goto	u3811
  4766  003614  EF0E  F01B         	goto	u3810
  4767  003618                     u3811:
  4768  003618  EF18  F01B         	goto	l3543
  4769  00361C                     u3810:
  4770  00361C                     
  4771                           ; BSR set to: 0
  4772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4773  00361C  C013  F00A         	movff	pad@buf,fputs@s
  4774  003620  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4775  003624  C011  F00C         	movff	pad@fp,fputs@fp
  4776  003628  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4777  00362C  EC51  F01E         	call	_fputs	;wreg free
  4778  003630                     l3543:
  4779                           
  4780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4781  003630  C013  F001         	movff	pad@buf,strlen@s
  4782  003634  C014  F002         	movff	pad@buf+1,strlen@s+1
  4783  003638  ECE7  F01E         	call	_strlen	;wreg free
  4784  00363C  501A               	movf	pad@w^0,w,c
  4785  00363E  2401               	addwf	?_strlen^0,w,c
  4786  003640  6E11               	movwf	?_pad^0,c
  4787  003642  501B               	movf	(pad@w+1)^0,w,c
  4788  003644  2002               	addwfc	(?_strlen+1)^0,w,c
  4789  003646  6E12               	movwf	(?_pad+1)^0,c
  4790  003648  0012               	return		;funcret
  4791  00364A                     __end_of_pad:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _strlen *****************
  4795 ;; Defined at:
  4796 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4799 ;;		 -> dbuf(80), 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4802 ;;		 -> dbuf(80), 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  2    0[COMRAM] unsigned int 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4812 ;;      Params:         2       0       0       0       0       0       0       0       0
  4813 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4815 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4816 ;;Total ram usage:        4 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_pad
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text10
  4826  003DCE                     __ptext10:
  4827                           	callstack 0
  4828  003DCE                     _strlen:
  4829                           	callstack 25
  4830  003DCE  C001  F003         	movff	strlen@s,strlen@a
  4831  003DD2  C002  F004         	movff	strlen@s+1,strlen@a+1
  4832  003DD6  EFEF  F01E         	goto	l3065
  4833  003DDA                     l3063:
  4834  003DDA  4A01               	infsnz	strlen@s^0,f,c
  4835  003DDC  2A02               	incf	(strlen@s+1)^0,f,c
  4836  003DDE                     l3065:
  4837  003DDE  C001  FFD9         	movff	strlen@s,fsr2l
  4838  003DE2  C002  FFDA         	movff	strlen@s+1,fsr2h
  4839  003DE6  50DF               	movf	indf2,w,c
  4840  003DE8  A4D8               	btfss	status,2,c
  4841  003DEA  EFF9  F01E         	goto	u3051
  4842  003DEE  EFFB  F01E         	goto	u3050
  4843  003DF2                     u3051:
  4844  003DF2  EFED  F01E         	goto	l3063
  4845  003DF6                     u3050:
  4846  003DF6  5003               	movf	strlen@a^0,w,c
  4847  003DF8  5C01               	subwf	strlen@s^0,w,c
  4848  003DFA  6E01               	movwf	?_strlen^0,c
  4849  003DFC  5004               	movf	(strlen@a+1)^0,w,c
  4850  003DFE  5802               	subwfb	(strlen@s+1)^0,w,c
  4851  003E00  6E02               	movwf	(?_strlen+1)^0,c
  4852  003E02  0012               	return		;funcret
  4853  003E04                     __end_of_strlen:
  4854                           	callstack 0
  4855                           
  4856 ;; *************** function _fputs *****************
  4857 ;; Defined at:
  4858 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4861 ;;		 -> dbuf(80), 
  4862 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4863 ;;		 -> sprintf@f(6), 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  i               2   14[COMRAM] int 
  4866 ;;  c               1   13[COMRAM] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  2    9[COMRAM] int 
  4869 ;; Registers used:
  4870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4876 ;;      Params:         4       0       0       0       0       0       0       0       0
  4877 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4879 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4880 ;;Total ram usage:        7 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 2
  4883 ;; This function calls:
  4884 ;;		_fputc
  4885 ;; This function is called by:
  4886 ;;		_pad
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text11
  4891  003CA2                     __ptext11:
  4892                           	callstack 0
  4893  003CA2                     _fputs:
  4894                           	callstack 23
  4895  003CA2  0E00               	movlw	0
  4896  003CA4  6E10               	movwf	(fputs@i+1)^0,c
  4897  003CA6  0E00               	movlw	0
  4898  003CA8  6E0F               	movwf	fputs@i^0,c
  4899  003CAA  EF62  F01E         	goto	l3059
  4900  003CAE                     l3055:
  4901  003CAE  C00E  F001         	movff	fputs@c,fputc@c
  4902  003CB2  6A02               	clrf	(fputc@c+1)^0,c
  4903  003CB4  C00C  F003         	movff	fputs@fp,fputc@fp
  4904  003CB8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4905  003CBC  EC5D  F01A         	call	_fputc	;wreg free
  4906  003CC0  4A0F               	infsnz	fputs@i^0,f,c
  4907  003CC2  2A10               	incf	(fputs@i+1)^0,f,c
  4908  003CC4                     l3059:
  4909  003CC4  500F               	movf	fputs@i^0,w,c
  4910  003CC6  240A               	addwf	fputs@s^0,w,c
  4911  003CC8  6ED9               	movwf	fsr2l,c
  4912  003CCA  5010               	movf	(fputs@i+1)^0,w,c
  4913  003CCC  200B               	addwfc	(fputs@s+1)^0,w,c
  4914  003CCE  6EDA               	movwf	fsr2h,c
  4915  003CD0  50DF               	movf	indf2,w,c
  4916  003CD2  6E0E               	movwf	fputs@c^0,c
  4917  003CD4  500E               	movf	fputs@c^0,w,c
  4918  003CD6  A4D8               	btfss	status,2,c
  4919  003CD8  EF70  F01E         	goto	u3041
  4920  003CDC  EF72  F01E         	goto	u3040
  4921  003CE0                     u3041:
  4922  003CE0  EF57  F01E         	goto	l3055
  4923  003CE4                     u3040:
  4924  003CE4  0012               	return		;funcret
  4925  003CE6                     __end_of_fputs:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function _fputc *****************
  4929 ;; Defined at:
  4930 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  c               2    0[COMRAM] int 
  4933 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4934 ;;		 -> sprintf@f(6), 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;		None
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  2    0[COMRAM] int 
  4939 ;; Registers used:
  4940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4946 ;;      Params:         4       0       0       0       0       0       0       0       0
  4947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4948 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4949 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4950 ;;Total ram usage:        9 bytes
  4951 ;; Hardware stack levels used: 1
  4952 ;; Hardware stack levels required when called: 1
  4953 ;; This function calls:
  4954 ;;		_putch
  4955 ;; This function is called by:
  4956 ;;		_pad
  4957 ;;		_vfpfcnvrt
  4958 ;;		_fputs
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text12
  4963  0034BA                     __ptext12:
  4964                           	callstack 0
  4965  0034BA                     _fputc:
  4966                           	callstack 26
  4967  0034BA  5003               	movf	fputc@fp^0,w,c
  4968  0034BC  1004               	iorwf	(fputc@fp+1)^0,w,c
  4969  0034BE  B4D8               	btfsc	status,2,c
  4970  0034C0  EF64  F01A         	goto	u2611
  4971  0034C4  EF66  F01A         	goto	u2610
  4972  0034C8                     u2611:
  4973  0034C8  EF6F  F01A         	goto	l2841
  4974  0034CC                     u2610:
  4975  0034CC  5003               	movf	fputc@fp^0,w,c
  4976  0034CE  1004               	iorwf	(fputc@fp+1)^0,w,c
  4977  0034D0  A4D8               	btfss	status,2,c
  4978  0034D2  EF6D  F01A         	goto	u2621
  4979  0034D6  EF6F  F01A         	goto	u2620
  4980  0034DA                     u2621:
  4981  0034DA  EF74  F01A         	goto	l2843
  4982  0034DE                     u2620:
  4983  0034DE                     l2841:
  4984  0034DE  5001               	movf	fputc@c^0,w,c
  4985  0034E0  EC43  F01F         	call	_putch
  4986  0034E4  EFC1  F01A         	goto	l1122
  4987  0034E8                     l2843:
  4988  0034E8  EE20 F004          	lfsr	2,4
  4989  0034EC  5003               	movf	fputc@fp^0,w,c
  4990  0034EE  26D9               	addwf	fsr2l,f,c
  4991  0034F0  5004               	movf	(fputc@fp+1)^0,w,c
  4992  0034F2  22DA               	addwfc	fsr2h,f,c
  4993  0034F4  50DE               	movf	postinc2,w,c
  4994  0034F6  10DE               	iorwf	postinc2,w,c
  4995  0034F8  B4D8               	btfsc	status,2,c
  4996  0034FA  EF81  F01A         	goto	u2631
  4997  0034FE  EF83  F01A         	goto	u2630
  4998  003502                     u2631:
  4999  003502  EF9E  F01A         	goto	l2847
  5000  003506                     u2630:
  5001  003506  EE20 F004          	lfsr	2,4
  5002  00350A  5003               	movf	fputc@fp^0,w,c
  5003  00350C  26D9               	addwf	fsr2l,f,c
  5004  00350E  5004               	movf	(fputc@fp+1)^0,w,c
  5005  003510  22DA               	addwfc	fsr2h,f,c
  5006  003512  EE10 F002          	lfsr	1,2
  5007  003516  5003               	movf	fputc@fp^0,w,c
  5008  003518  26E1               	addwf	fsr1l,f,c
  5009  00351A  5004               	movf	(fputc@fp+1)^0,w,c
  5010  00351C  22E2               	addwfc	fsr1h,f,c
  5011  00351E  50DE               	movf	postinc2,w,c
  5012  003520  5CE6               	subwf	postinc1,w,c
  5013  003522  50E6               	movf	postinc1,w,c
  5014  003524  0A80               	xorlw	128
  5015  003526  6E09               	movwf	(??_fputc+4)^0,c
  5016  003528  50DE               	movf	postinc2,w,c
  5017  00352A  0A80               	xorlw	128
  5018  00352C  5809               	subwfb	(??_fputc+4)^0,w,c
  5019  00352E  B0D8               	btfsc	status,0,c
  5020  003530  EF9C  F01A         	goto	u2641
  5021  003534  EF9E  F01A         	goto	u2640
  5022  003538                     u2641:
  5023  003538  EFC1  F01A         	goto	l1122
  5024  00353C                     u2640:
  5025  00353C                     l2847:
  5026  00353C  EE20 F002          	lfsr	2,2
  5027  003540  5003               	movf	fputc@fp^0,w,c
  5028  003542  26D9               	addwf	fsr2l,f,c
  5029  003544  5004               	movf	(fputc@fp+1)^0,w,c
  5030  003546  22DA               	addwfc	fsr2h,f,c
  5031  003548  CFDE F005          	movff	postinc2,??_fputc
  5032  00354C  CFDD F006          	movff	postdec2,??_fputc+1
  5033  003550  C003  FFD9         	movff	fputc@fp,fsr2l
  5034  003554  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5035  003558  CFDE F007          	movff	postinc2,??_fputc+2
  5036  00355C  CFDD F008          	movff	postdec2,??_fputc+3
  5037  003560  5005               	movf	??_fputc^0,w,c
  5038  003562  2407               	addwf	(??_fputc+2)^0,w,c
  5039  003564  6ED9               	movwf	fsr2l,c
  5040  003566  5006               	movf	(??_fputc+1)^0,w,c
  5041  003568  2008               	addwfc	(??_fputc+3)^0,w,c
  5042  00356A  6EDA               	movwf	fsr2h,c
  5043  00356C  C001  FFDF         	movff	fputc@c,indf2
  5044  003570  EE20 F002          	lfsr	2,2
  5045  003574  5003               	movf	fputc@fp^0,w,c
  5046  003576  26D9               	addwf	fsr2l,f,c
  5047  003578  5004               	movf	(fputc@fp+1)^0,w,c
  5048  00357A  22DA               	addwfc	fsr2h,f,c
  5049  00357C  2ADE               	incf	postinc2,f,c
  5050  00357E  0E00               	movlw	0
  5051  003580  22DD               	addwfc	postdec2,f,c
  5052  003582                     l1122:
  5053  003582  0012               	return		;funcret
  5054  003584                     __end_of_fputc:
  5055                           	callstack 0
  5056                           
  5057 ;; *************** function _putch *****************
  5058 ;; Defined at:
  5059 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  c               1    wreg     unsigned char 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  c               1    0[COMRAM] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5076 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_fputc
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text13
  5087  003E86                     __ptext13:
  5088                           	callstack 0
  5089  003E86                     _putch:
  5090                           	callstack 26
  5091  003E86  0012               	return		;funcret
  5092  003E88                     __end_of_putch:
  5093                           	callstack 0
  5094                           
  5095 ;; *************** function _floorf *****************
  5096 ;; Defined at:
  5097 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  x               4   70[COMRAM] float 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  u               4   86[COMRAM] struct .
  5102 ;;  m               4   80[COMRAM] unsigned long 
  5103 ;;  e               2   84[COMRAM] int 
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  4   70[COMRAM] float 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2, status,0
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5113 ;;      Params:         4       0       0       0       0       0       0       0       0
  5114 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5115 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5116 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5117 ;;Total ram usage:       20 bytes
  5118 ;; Hardware stack levels used: 1
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_efgtoa
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text14
  5127  002A86                     __ptext14:
  5128                           	callstack 0
  5129  002A86                     _floorf:
  5130                           	callstack 26
  5131  002A86  C0DA  F057         	movff	floorf@F527,floorf@u
  5132  002A8A  C0DB  F058         	movff	floorf@F527+1,floorf@u+1
  5133  002A8E  C0DC  F059         	movff	floorf@F527+2,floorf@u+2
  5134  002A92  C0DD  F05A         	movff	floorf@F527+3,floorf@u+3
  5135  002A96  C047  F057         	movff	floorf@x,floorf@u
  5136  002A9A  C048  F058         	movff	floorf@x+1,floorf@u+1
  5137  002A9E  C049  F059         	movff	floorf@x+2,floorf@u+2
  5138  002AA2  C04A  F05A         	movff	floorf@x+3,floorf@u+3
  5139  002AA6  0E81               	movlw	129
  5140  002AA8  6E4B               	movwf	??_floorf^0,c
  5141  002AAA  0EFF               	movlw	255
  5142  002AAC  6E4C               	movwf	(??_floorf+1)^0,c
  5143  002AAE  C057  F04D         	movff	floorf@u,??_floorf+2
  5144  002AB2  C058  F04E         	movff	floorf@u+1,??_floorf+3
  5145  002AB6  C059  F04F         	movff	floorf@u+2,??_floorf+4
  5146  002ABA  C05A  F050         	movff	floorf@u+3,??_floorf+5
  5147  002ABE  0E18               	movlw	24
  5148  002AC0  EF67  F015         	goto	u3940
  5149  002AC4                     u3945:
  5150  002AC4  90D8               	bcf	status,0,c
  5151  002AC6  3250               	rrcf	(??_floorf+5)^0,f,c
  5152  002AC8  324F               	rrcf	(??_floorf+4)^0,f,c
  5153  002ACA  324E               	rrcf	(??_floorf+3)^0,f,c
  5154  002ACC  324D               	rrcf	(??_floorf+2)^0,f,c
  5155  002ACE                     u3940:
  5156  002ACE  2EE8               	decfsz	wreg,f,c
  5157  002AD0  EF62  F015         	goto	u3945
  5158  002AD4  504D               	movf	(??_floorf+2)^0,w,c
  5159  002AD6  244B               	addwf	??_floorf^0,w,c
  5160  002AD8  6E55               	movwf	floorf@e^0,c
  5161  002ADA  0E00               	movlw	0
  5162  002ADC  204C               	addwfc	(??_floorf+1)^0,w,c
  5163  002ADE  6E56               	movwf	(floorf@e+1)^0,c
  5164  002AE0  BE56               	btfsc	(floorf@e+1)^0,7,c
  5165  002AE2  EF7C  F015         	goto	u3951
  5166  002AE6  5056               	movf	(floorf@e+1)^0,w,c
  5167  002AE8  E109               	bnz	u3950
  5168  002AEA  0E17               	movlw	23
  5169  002AEC  5C55               	subwf	floorf@e^0,w,c
  5170  002AEE  A0D8               	btfss	status,0,c
  5171  002AF0  EF7C  F015         	goto	u3951
  5172  002AF4  EF7E  F015         	goto	u3950
  5173  002AF8                     u3951:
  5174  002AF8  EF88  F015         	goto	l3589
  5175  002AFC                     u3950:
  5176  002AFC                     l3587:
  5177  002AFC  C047  F047         	movff	floorf@x,?_floorf
  5178  002B00  C048  F048         	movff	floorf@x+1,?_floorf+1
  5179  002B04  C049  F049         	movff	floorf@x+2,?_floorf+2
  5180  002B08  C04A  F04A         	movff	floorf@x+3,?_floorf+3
  5181  002B0C  EF4B  F016         	goto	l1083
  5182  002B10                     l3589:
  5183  002B10  BE56               	btfsc	(floorf@e+1)^0,7,c
  5184  002B12  EF8D  F015         	goto	u3961
  5185  002B16  EF8F  F015         	goto	u3960
  5186  002B1A                     u3961:
  5187  002B1A  EFFF  F015         	goto	l3599
  5188  002B1E                     u3960:
  5189  002B1E  C055  F04B         	movff	floorf@e,??_floorf
  5190  002B22  0EFF               	movlw	255
  5191  002B24  6E4C               	movwf	(??_floorf+1)^0,c
  5192  002B26  0EFF               	movlw	255
  5193  002B28  6E4D               	movwf	(??_floorf+2)^0,c
  5194  002B2A  0E7F               	movlw	127
  5195  002B2C  6E4E               	movwf	(??_floorf+3)^0,c
  5196  002B2E  0E00               	movlw	0
  5197  002B30  6E4F               	movwf	(??_floorf+4)^0,c
  5198  002B32                     u3975:
  5199  002B32  664B               	tstfsz	??_floorf^0,c
  5200  002B34  EF9E  F015         	goto	u3976
  5201  002B38  EFA6  F015         	goto	u3977
  5202  002B3C                     u3976:
  5203  002B3C  344F               	rlcf	(??_floorf+4)^0,w,c
  5204  002B3E  324F               	rrcf	(??_floorf+4)^0,f,c
  5205  002B40  324E               	rrcf	(??_floorf+3)^0,f,c
  5206  002B42  324D               	rrcf	(??_floorf+2)^0,f,c
  5207  002B44  324C               	rrcf	(??_floorf+1)^0,f,c
  5208  002B46  2E4B               	decfsz	??_floorf^0,f,c
  5209  002B48  EF99  F015         	goto	u3975
  5210  002B4C                     u3977:
  5211  002B4C  C04C  F051         	movff	??_floorf+1,floorf@m
  5212  002B50  C04D  F052         	movff	??_floorf+2,floorf@m+1
  5213  002B54  C04E  F053         	movff	??_floorf+3,floorf@m+2
  5214  002B58  C04F  F054         	movff	??_floorf+4,floorf@m+3
  5215  002B5C  5051               	movf	floorf@m^0,w,c
  5216  002B5E  1457               	andwf	floorf@u^0,w,c
  5217  002B60  6E4B               	movwf	??_floorf^0,c
  5218  002B62  5052               	movf	(floorf@m+1)^0,w,c
  5219  002B64  1458               	andwf	(floorf@u+1)^0,w,c
  5220  002B66  6E4C               	movwf	(??_floorf+1)^0,c
  5221  002B68  5053               	movf	(floorf@m+2)^0,w,c
  5222  002B6A  1459               	andwf	(floorf@u+2)^0,w,c
  5223  002B6C  6E4D               	movwf	(??_floorf+2)^0,c
  5224  002B6E  5054               	movf	(floorf@m+3)^0,w,c
  5225  002B70  145A               	andwf	(floorf@u+3)^0,w,c
  5226  002B72  6E4E               	movwf	(??_floorf+3)^0,c
  5227  002B74  504B               	movf	??_floorf^0,w,c
  5228  002B76  104C               	iorwf	(??_floorf+1)^0,w,c
  5229  002B78  104D               	iorwf	(??_floorf+2)^0,w,c
  5230  002B7A  104E               	iorwf	(??_floorf+3)^0,w,c
  5231  002B7C  A4D8               	btfss	status,2,c
  5232  002B7E  EFC3  F015         	goto	u3981
  5233  002B82  EFC5  F015         	goto	u3980
  5234  002B86                     u3981:
  5235  002B86  EFC7  F015         	goto	l3595
  5236  002B8A                     u3980:
  5237  002B8A  EF7E  F015         	goto	l3587
  5238  002B8E                     l3595:
  5239  002B8E  C057  F04B         	movff	floorf@u,??_floorf
  5240  002B92  C058  F04C         	movff	floorf@u+1,??_floorf+1
  5241  002B96  C059  F04D         	movff	floorf@u+2,??_floorf+2
  5242  002B9A  C05A  F04E         	movff	floorf@u+3,??_floorf+3
  5243  002B9E  0E20               	movlw	32
  5244  002BA0  EFD7  F015         	goto	u3990
  5245  002BA4                     u3995:
  5246  002BA4  90D8               	bcf	status,0,c
  5247  002BA6  324E               	rrcf	(??_floorf+3)^0,f,c
  5248  002BA8  324D               	rrcf	(??_floorf+2)^0,f,c
  5249  002BAA  324C               	rrcf	(??_floorf+1)^0,f,c
  5250  002BAC  324B               	rrcf	??_floorf^0,f,c
  5251  002BAE                     u3990:
  5252  002BAE  2EE8               	decfsz	wreg,f,c
  5253  002BB0  EFD2  F015         	goto	u3995
  5254  002BB4  504B               	movf	??_floorf^0,w,c
  5255  002BB6  104C               	iorwf	(??_floorf+1)^0,w,c
  5256  002BB8  104D               	iorwf	(??_floorf+2)^0,w,c
  5257  002BBA  104E               	iorwf	(??_floorf+3)^0,w,c
  5258  002BBC  B4D8               	btfsc	status,2,c
  5259  002BBE  EFE3  F015         	goto	u4001
  5260  002BC2  EFE5  F015         	goto	u4000
  5261  002BC6                     u4001:
  5262  002BC6  EFED  F015         	goto	l1086
  5263  002BCA                     u4000:
  5264  002BCA  5051               	movf	floorf@m^0,w,c
  5265  002BCC  2657               	addwf	floorf@u^0,f,c
  5266  002BCE  5052               	movf	(floorf@m+1)^0,w,c
  5267  002BD0  2258               	addwfc	(floorf@u+1)^0,f,c
  5268  002BD2  5053               	movf	(floorf@m+2)^0,w,c
  5269  002BD4  2259               	addwfc	(floorf@u+2)^0,f,c
  5270  002BD6  5054               	movf	(floorf@m+3)^0,w,c
  5271  002BD8  225A               	addwfc	(floorf@u+3)^0,f,c
  5272  002BDA                     l1086:
  5273  002BDA  1C51               	comf	floorf@m^0,w,c
  5274  002BDC  6E4B               	movwf	??_floorf^0,c
  5275  002BDE  1C52               	comf	(floorf@m+1)^0,w,c
  5276  002BE0  6E4C               	movwf	(??_floorf+1)^0,c
  5277  002BE2  1C53               	comf	(floorf@m+2)^0,w,c
  5278  002BE4  6E4D               	movwf	(??_floorf+2)^0,c
  5279  002BE6  1C54               	comf	(floorf@m+3)^0,w,c
  5280  002BE8  6E4E               	movwf	(??_floorf+3)^0,c
  5281  002BEA  504B               	movf	??_floorf^0,w,c
  5282  002BEC  1657               	andwf	floorf@u^0,f,c
  5283  002BEE  504C               	movf	(??_floorf+1)^0,w,c
  5284  002BF0  1658               	andwf	(floorf@u+1)^0,f,c
  5285  002BF2  504D               	movf	(??_floorf+2)^0,w,c
  5286  002BF4  1659               	andwf	(floorf@u+2)^0,f,c
  5287  002BF6  504E               	movf	(??_floorf+3)^0,w,c
  5288  002BF8  165A               	andwf	(floorf@u+3)^0,f,c
  5289  002BFA  EF43  F016         	goto	l3607
  5290  002BFE                     l3599:
  5291  002BFE  C057  F04B         	movff	floorf@u,??_floorf
  5292  002C02  C058  F04C         	movff	floorf@u+1,??_floorf+1
  5293  002C06  C059  F04D         	movff	floorf@u+2,??_floorf+2
  5294  002C0A  C05A  F04E         	movff	floorf@u+3,??_floorf+3
  5295  002C0E  0E20               	movlw	32
  5296  002C10  EF0F  F016         	goto	u4010
  5297  002C14                     u4015:
  5298  002C14  90D8               	bcf	status,0,c
  5299  002C16  324E               	rrcf	(??_floorf+3)^0,f,c
  5300  002C18  324D               	rrcf	(??_floorf+2)^0,f,c
  5301  002C1A  324C               	rrcf	(??_floorf+1)^0,f,c
  5302  002C1C  324B               	rrcf	??_floorf^0,f,c
  5303  002C1E                     u4010:
  5304  002C1E  2EE8               	decfsz	wreg,f,c
  5305  002C20  EF0A  F016         	goto	u4015
  5306  002C24  504B               	movf	??_floorf^0,w,c
  5307  002C26  104C               	iorwf	(??_floorf+1)^0,w,c
  5308  002C28  104D               	iorwf	(??_floorf+2)^0,w,c
  5309  002C2A  104E               	iorwf	(??_floorf+3)^0,w,c
  5310  002C2C  A4D8               	btfss	status,2,c
  5311  002C2E  EF1B  F016         	goto	u4021
  5312  002C32  EF1D  F016         	goto	u4020
  5313  002C36                     u4021:
  5314  002C36  EF27  F016         	goto	l3603
  5315  002C3A                     u4020:
  5316  002C3A  0E00               	movlw	0
  5317  002C3C  6E57               	movwf	floorf@u^0,c
  5318  002C3E  0E00               	movlw	0
  5319  002C40  6E58               	movwf	(floorf@u+1)^0,c
  5320  002C42  0E00               	movlw	0
  5321  002C44  6E59               	movwf	(floorf@u+2)^0,c
  5322  002C46  0E00               	movlw	0
  5323  002C48  6E5A               	movwf	(floorf@u+3)^0,c
  5324  002C4A  EF43  F016         	goto	l3607
  5325  002C4E                     l3603:
  5326  002C4E  90D8               	bcf	status,0,c
  5327  002C50  3457               	rlcf	floorf@u^0,w,c
  5328  002C52  6E4B               	movwf	??_floorf^0,c
  5329  002C54  3458               	rlcf	(floorf@u+1)^0,w,c
  5330  002C56  6E4C               	movwf	(??_floorf+1)^0,c
  5331  002C58  3459               	rlcf	(floorf@u+2)^0,w,c
  5332  002C5A  6E4D               	movwf	(??_floorf+2)^0,c
  5333  002C5C  345A               	rlcf	(floorf@u+3)^0,w,c
  5334  002C5E  6E4E               	movwf	(??_floorf+3)^0,c
  5335  002C60  504B               	movf	??_floorf^0,w,c
  5336  002C62  104C               	iorwf	(??_floorf+1)^0,w,c
  5337  002C64  104D               	iorwf	(??_floorf+2)^0,w,c
  5338  002C66  104E               	iorwf	(??_floorf+3)^0,w,c
  5339  002C68  B4D8               	btfsc	status,2,c
  5340  002C6A  EF39  F016         	goto	u4031
  5341  002C6E  EF3B  F016         	goto	u4030
  5342  002C72                     u4031:
  5343  002C72  EF43  F016         	goto	l3607
  5344  002C76                     u4030:
  5345  002C76  0E00               	movlw	0
  5346  002C78  6E57               	movwf	floorf@u^0,c
  5347  002C7A  0E00               	movlw	0
  5348  002C7C  6E58               	movwf	(floorf@u+1)^0,c
  5349  002C7E  0E80               	movlw	128
  5350  002C80  6E59               	movwf	(floorf@u+2)^0,c
  5351  002C82  0EBF               	movlw	191
  5352  002C84  6E5A               	movwf	(floorf@u+3)^0,c
  5353  002C86                     l3607:
  5354  002C86  C057  F047         	movff	floorf@u,?_floorf
  5355  002C8A  C058  F048         	movff	floorf@u+1,?_floorf+1
  5356  002C8E  C059  F049         	movff	floorf@u+2,?_floorf+2
  5357  002C92  C05A  F04A         	movff	floorf@u+3,?_floorf+3
  5358  002C96                     l1083:
  5359  002C96  0012               	return		;funcret
  5360  002C98                     __end_of_floorf:
  5361                           	callstack 0
  5362                           
  5363 ;; *************** function ___fpclassifyf *****************
  5364 ;; Defined at:
  5365 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  x               4    0[COMRAM] float 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  u               4   10[COMRAM] struct .
  5370 ;;  e               2    8[COMRAM] int 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  2    0[COMRAM] int 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5380 ;;      Params:         4       0       0       0       0       0       0       0       0
  5381 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5382 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5383 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5384 ;;Total ram usage:       14 bytes
  5385 ;; Hardware stack levels used: 1
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		_efgtoa
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text15
  5394  0031E8                     __ptext15:
  5395                           	callstack 0
  5396  0031E8                     ___fpclassifyf:
  5397                           	callstack 26
  5398  0031E8  C0DE  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5399  0031EC  C0DF  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5400  0031F0  C0E0  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5401  0031F4  C0E1  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5402  0031F8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5403  0031FC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5404  003200  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5405  003204  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5406  003208  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5407  00320C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5408  003210  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5409  003214  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5410  003218  0E18               	movlw	24
  5411  00321A  EF14  F019         	goto	u3820
  5412  00321E                     u3825:
  5413  00321E  90D8               	bcf	status,0,c
  5414  003220  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5415  003222  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5416  003224  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5417  003226  3205               	rrcf	??___fpclassifyf^0,f,c
  5418  003228                     u3820:
  5419  003228  2EE8               	decfsz	wreg,f,c
  5420  00322A  EF0F  F019         	goto	u3825
  5421  00322E  5005               	movf	??___fpclassifyf^0,w,c
  5422  003230  6E09               	movwf	___fpclassifyf@e^0,c
  5423  003232  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5424  003234  5009               	movf	___fpclassifyf@e^0,w,c
  5425  003236  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5426  003238  A4D8               	btfss	status,2,c
  5427  00323A  EF21  F019         	goto	u3831
  5428  00323E  EF23  F019         	goto	u3830
  5429  003242                     u3831:
  5430  003242  EF43  F019         	goto	l3559
  5431  003246                     u3830:
  5432  003246  90D8               	bcf	status,0,c
  5433  003248  340B               	rlcf	___fpclassifyf@u^0,w,c
  5434  00324A  6E05               	movwf	??___fpclassifyf^0,c
  5435  00324C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5436  00324E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5437  003250  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5438  003252  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5439  003254  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5440  003256  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5441  003258  5005               	movf	??___fpclassifyf^0,w,c
  5442  00325A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5443  00325C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5444  00325E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5445  003260  A4D8               	btfss	status,2,c
  5446  003262  EF35  F019         	goto	u3841
  5447  003266  EF37  F019         	goto	u3840
  5448  00326A                     u3841:
  5449  00326A  EF3D  F019         	goto	l3555
  5450  00326E                     u3840:
  5451  00326E  0E00               	movlw	0
  5452  003270  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5453  003272  0E02               	movlw	2
  5454  003274  6E01               	movwf	?___fpclassifyf^0,c
  5455  003276  EF72  F019         	goto	l1045
  5456  00327A                     l3555:
  5457  00327A  0E00               	movlw	0
  5458  00327C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5459  00327E  0E03               	movlw	3
  5460  003280  6E01               	movwf	?___fpclassifyf^0,c
  5461  003282  EF72  F019         	goto	l1045
  5462  003286                     l3559:
  5463  003286  2809               	incf	___fpclassifyf@e^0,w,c
  5464  003288  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5465  00328A  A4D8               	btfss	status,2,c
  5466  00328C  EF4A  F019         	goto	u3851
  5467  003290  EF4C  F019         	goto	u3850
  5468  003294                     u3851:
  5469  003294  EF6E  F019         	goto	l3565
  5470  003298                     u3850:
  5471  003298  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5472  00329C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5473  0032A0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5474  0032A4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5475  0032A8  0E09               	movlw	9
  5476  0032AA                     u3865:
  5477  0032AA  90D8               	bcf	status,0,c
  5478  0032AC  3605               	rlcf	??___fpclassifyf^0,f,c
  5479  0032AE  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5480  0032B0  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5481  0032B2  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5482  0032B4  2EE8               	decfsz	wreg,f,c
  5483  0032B6  EF55  F019         	goto	u3865
  5484  0032BA  5005               	movf	??___fpclassifyf^0,w,c
  5485  0032BC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5486  0032BE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5487  0032C0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5488  0032C2  B4D8               	btfsc	status,2,c
  5489  0032C4  EF66  F019         	goto	u3871
  5490  0032C8  EF69  F019         	goto	u3870
  5491  0032CC                     u3871:
  5492  0032CC  0E01               	movlw	1
  5493  0032CE  EF6A  F019         	goto	u3880
  5494  0032D2                     u3870:
  5495  0032D2  0E00               	movlw	0
  5496  0032D4                     u3880:
  5497  0032D4  6E01               	movwf	?___fpclassifyf^0,c
  5498  0032D6  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5499  0032D8  EF72  F019         	goto	l1045
  5500  0032DC                     l3565:
  5501  0032DC  0E00               	movlw	0
  5502  0032DE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5503  0032E0  0E04               	movlw	4
  5504  0032E2  6E01               	movwf	?___fpclassifyf^0,c
  5505  0032E4                     l1045:
  5506  0032E4  0012               	return		;funcret
  5507  0032E6                     __end_of___fpclassifyf:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function ___flsub *****************
  5511 ;; Defined at:
  5512 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  b               4   86[COMRAM] int 
  5515 ;;  a               4   90[COMRAM] int 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  4   86[COMRAM] int 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5527 ;;      Params:         8       0       0       0       0       0       0       0       0
  5528 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5530 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5531 ;;Total ram usage:        8 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 1
  5534 ;; This function calls:
  5535 ;;		___fladd
  5536 ;; This function is called by:
  5537 ;;		_efgtoa
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text16
  5542  003C18                     __ptext16:
  5543                           	callstack 0
  5544  003C18                     ___flsub:
  5545                           	callstack 25
  5546  003C18  0E00               	movlw	0
  5547  003C1A  1A5B               	xorwf	___flsub@a^0,f,c
  5548  003C1C  0E00               	movlw	0
  5549  003C1E  1A5C               	xorwf	(___flsub@a+1)^0,f,c
  5550  003C20  0E00               	movlw	0
  5551  003C22  1A5D               	xorwf	(___flsub@a+2)^0,f,c
  5552  003C24  0E80               	movlw	128
  5553  003C26  1A5E               	xorwf	(___flsub@a+3)^0,f,c
  5554  003C28  C057  F047         	movff	___flsub@b,___fladd@b
  5555  003C2C  C058  F048         	movff	___flsub@b+1,___fladd@b+1
  5556  003C30  C059  F049         	movff	___flsub@b+2,___fladd@b+2
  5557  003C34  C05A  F04A         	movff	___flsub@b+3,___fladd@b+3
  5558  003C38  C05B  F04B         	movff	___flsub@a,___fladd@a
  5559  003C3C  C05C  F04C         	movff	___flsub@a+1,___fladd@a+1
  5560  003C40  C05D  F04D         	movff	___flsub@a+2,___fladd@a+2
  5561  003C44  C05E  F04E         	movff	___flsub@a+3,___fladd@a+3
  5562  003C48  ECD9  F00C         	call	___fladd	;wreg free
  5563  003C4C  C047  F057         	movff	?___fladd,?___flsub
  5564  003C50  C048  F058         	movff	?___fladd+1,?___flsub+1
  5565  003C54  C049  F059         	movff	?___fladd+2,?___flsub+2
  5566  003C58  C04A  F05A         	movff	?___fladd+3,?___flsub+3
  5567  003C5C  0012               	return		;funcret
  5568  003C5E                     __end_of___flsub:
  5569                           	callstack 0
  5570                           
  5571 ;; *************** function ___flneg *****************
  5572 ;; Defined at:
  5573 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  f1              4    0[COMRAM] int 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;		None
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  4    0[COMRAM] int 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5587 ;;      Params:         4       0       0       0       0       0       0       0       0
  5588 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5590 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5591 ;;Total ram usage:        4 bytes
  5592 ;; Hardware stack levels used: 1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_efgtoa
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text17
  5601  003D5E                     __ptext17:
  5602                           	callstack 0
  5603  003D5E                     ___flneg:
  5604                           	callstack 26
  5605  003D5E  5001               	movf	___flneg@f1^0,w,c
  5606  003D60  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5607  003D62  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5608  003D64  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5609  003D66  B4D8               	btfsc	status,2,c
  5610  003D68  EFB8  F01E         	goto	u3701
  5611  003D6C  EFBA  F01E         	goto	u3700
  5612  003D70                     u3701:
  5613  003D70  EFC2  F01E         	goto	l3477
  5614  003D74                     u3700:
  5615  003D74  0E00               	movlw	0
  5616  003D76  1A01               	xorwf	___flneg@f1^0,f,c
  5617  003D78  0E00               	movlw	0
  5618  003D7A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5619  003D7C  0E00               	movlw	0
  5620  003D7E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5621  003D80  0E80               	movlw	128
  5622  003D82  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5623  003D84                     l3477:
  5624  003D84  C001  F001         	movff	___flneg@f1,?___flneg
  5625  003D88  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5626  003D8C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5627  003D90  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5628  003D94  0012               	return		;funcret
  5629  003D96                     __end_of___flneg:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function ___flge *****************
  5633 ;; Defined at:
  5634 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  ff1             4   45[COMRAM] int 
  5637 ;;  ff2             4   49[COMRAM] int 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;		None
  5640 ;; Return value:  Size  Location     Type
  5641 ;;		None               void
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5649 ;;      Params:         8       0       0       0       0       0       0       0       0
  5650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5651 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5652 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5653 ;;Total ram usage:       12 bytes
  5654 ;; Hardware stack levels used: 1
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_main
  5659 ;;		_efgtoa
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text18
  5664  0030E4                     __ptext18:
  5665                           	callstack 0
  5666  0030E4                     ___flge:
  5667                           	callstack 26
  5668  0030E4  0E00               	movlw	0
  5669  0030E6  142E               	andwf	___flge@ff1^0,w,c
  5670  0030E8  6E36               	movwf	??___flge^0,c
  5671  0030EA  0E00               	movlw	0
  5672  0030EC  142F               	andwf	(___flge@ff1+1)^0,w,c
  5673  0030EE  6E37               	movwf	(??___flge+1)^0,c
  5674  0030F0  0E80               	movlw	128
  5675  0030F2  1430               	andwf	(___flge@ff1+2)^0,w,c
  5676  0030F4  6E38               	movwf	(??___flge+2)^0,c
  5677  0030F6  0E7F               	movlw	127
  5678  0030F8  1431               	andwf	(___flge@ff1+3)^0,w,c
  5679  0030FA  6E39               	movwf	(??___flge+3)^0,c
  5680  0030FC  5036               	movf	??___flge^0,w,c
  5681  0030FE  1037               	iorwf	(??___flge+1)^0,w,c
  5682  003100  1038               	iorwf	(??___flge+2)^0,w,c
  5683  003102  1039               	iorwf	(??___flge+3)^0,w,c
  5684  003104  A4D8               	btfss	status,2,c
  5685  003106  EF87  F018         	goto	u3651
  5686  00310A  EF89  F018         	goto	u3650
  5687  00310E                     u3651:
  5688  00310E  EF91  F018         	goto	l3455
  5689  003112                     u3650:
  5690  003112  0E00               	movlw	0
  5691  003114  6E2E               	movwf	___flge@ff1^0,c
  5692  003116  0E00               	movlw	0
  5693  003118  6E2F               	movwf	(___flge@ff1+1)^0,c
  5694  00311A  0E00               	movlw	0
  5695  00311C  6E30               	movwf	(___flge@ff1+2)^0,c
  5696  00311E  0E00               	movlw	0
  5697  003120  6E31               	movwf	(___flge@ff1+3)^0,c
  5698  003122                     l3455:
  5699  003122  0E00               	movlw	0
  5700  003124  1432               	andwf	___flge@ff2^0,w,c
  5701  003126  6E36               	movwf	??___flge^0,c
  5702  003128  0E00               	movlw	0
  5703  00312A  1433               	andwf	(___flge@ff2+1)^0,w,c
  5704  00312C  6E37               	movwf	(??___flge+1)^0,c
  5705  00312E  0E80               	movlw	128
  5706  003130  1434               	andwf	(___flge@ff2+2)^0,w,c
  5707  003132  6E38               	movwf	(??___flge+2)^0,c
  5708  003134  0E7F               	movlw	127
  5709  003136  1435               	andwf	(___flge@ff2+3)^0,w,c
  5710  003138  6E39               	movwf	(??___flge+3)^0,c
  5711  00313A  5036               	movf	??___flge^0,w,c
  5712  00313C  1037               	iorwf	(??___flge+1)^0,w,c
  5713  00313E  1038               	iorwf	(??___flge+2)^0,w,c
  5714  003140  1039               	iorwf	(??___flge+3)^0,w,c
  5715  003142  A4D8               	btfss	status,2,c
  5716  003144  EFA6  F018         	goto	u3661
  5717  003148  EFA8  F018         	goto	u3660
  5718  00314C                     u3661:
  5719  00314C  EFB0  F018         	goto	l3459
  5720  003150                     u3660:
  5721  003150  0E00               	movlw	0
  5722  003152  6E32               	movwf	___flge@ff2^0,c
  5723  003154  0E00               	movlw	0
  5724  003156  6E33               	movwf	(___flge@ff2+1)^0,c
  5725  003158  0E00               	movlw	0
  5726  00315A  6E34               	movwf	(___flge@ff2+2)^0,c
  5727  00315C  0E00               	movlw	0
  5728  00315E  6E35               	movwf	(___flge@ff2+3)^0,c
  5729  003160                     l3459:
  5730  003160  AE31               	btfss	(___flge@ff1+3)^0,7,c
  5731  003162  EFB5  F018         	goto	u3671
  5732  003166  EFB7  F018         	goto	u3670
  5733  00316A                     u3671:
  5734  00316A  EFC0  F018         	goto	l3463
  5735  00316E                     u3670:
  5736  00316E  6C2E               	negf	___flge@ff1^0,c
  5737  003170  1E2F               	comf	(___flge@ff1+1)^0,f,c
  5738  003172  B0D8               	btfsc	status,0,c
  5739  003174  2A2F               	incf	(___flge@ff1+1)^0,f,c
  5740  003176  1E30               	comf	(___flge@ff1+2)^0,f,c
  5741  003178  B0D8               	btfsc	status,0,c
  5742  00317A  2A30               	incf	(___flge@ff1+2)^0,f,c
  5743  00317C  0E80               	movlw	128
  5744  00317E  5631               	subfwb	(___flge@ff1+3)^0,f,c
  5745  003180                     l3463:
  5746  003180  AE35               	btfss	(___flge@ff2+3)^0,7,c
  5747  003182  EFC5  F018         	goto	u3681
  5748  003186  EFC7  F018         	goto	u3680
  5749  00318A                     u3681:
  5750  00318A  EFD0  F018         	goto	l440
  5751  00318E                     u3680:
  5752  00318E  6C32               	negf	___flge@ff2^0,c
  5753  003190  1E33               	comf	(___flge@ff2+1)^0,f,c
  5754  003192  B0D8               	btfsc	status,0,c
  5755  003194  2A33               	incf	(___flge@ff2+1)^0,f,c
  5756  003196  1E34               	comf	(___flge@ff2+2)^0,f,c
  5757  003198  B0D8               	btfsc	status,0,c
  5758  00319A  2A34               	incf	(___flge@ff2+2)^0,f,c
  5759  00319C  0E80               	movlw	128
  5760  00319E  5635               	subfwb	(___flge@ff2+3)^0,f,c
  5761  0031A0                     l440:
  5762  0031A0  0E00               	movlw	0
  5763  0031A2  1A2E               	xorwf	___flge@ff1^0,f,c
  5764  0031A4  0E00               	movlw	0
  5765  0031A6  1A2F               	xorwf	(___flge@ff1+1)^0,f,c
  5766  0031A8  0E00               	movlw	0
  5767  0031AA  1A30               	xorwf	(___flge@ff1+2)^0,f,c
  5768  0031AC  0E80               	movlw	128
  5769  0031AE  1A31               	xorwf	(___flge@ff1+3)^0,f,c
  5770  0031B0  0E00               	movlw	0
  5771  0031B2  1A32               	xorwf	___flge@ff2^0,f,c
  5772  0031B4  0E00               	movlw	0
  5773  0031B6  1A33               	xorwf	(___flge@ff2+1)^0,f,c
  5774  0031B8  0E00               	movlw	0
  5775  0031BA  1A34               	xorwf	(___flge@ff2+2)^0,f,c
  5776  0031BC  0E80               	movlw	128
  5777  0031BE  1A35               	xorwf	(___flge@ff2+3)^0,f,c
  5778  0031C0  5032               	movf	___flge@ff2^0,w,c
  5779  0031C2  5C2E               	subwf	___flge@ff1^0,w,c
  5780  0031C4  5033               	movf	(___flge@ff2+1)^0,w,c
  5781  0031C6  582F               	subwfb	(___flge@ff1+1)^0,w,c
  5782  0031C8  5034               	movf	(___flge@ff2+2)^0,w,c
  5783  0031CA  5830               	subwfb	(___flge@ff1+2)^0,w,c
  5784  0031CC  5035               	movf	(___flge@ff2+3)^0,w,c
  5785  0031CE  5831               	subwfb	(___flge@ff1+3)^0,w,c
  5786  0031D0  B0D8               	btfsc	status,0,c
  5787  0031D2  EFED  F018         	goto	u3691
  5788  0031D6  EFEF  F018         	goto	u3690
  5789  0031DA                     u3691:
  5790  0031DA  EFF2  F018         	goto	l3469
  5791  0031DE                     u3690:
  5792  0031DE  90D8               	bcf	status,0,c
  5793  0031E0  EFF3  F018         	goto	l445
  5794  0031E4                     l3469:
  5795  0031E4  80D8               	bsf	status,0,c
  5796  0031E6                     l445:
  5797  0031E6  0012               	return		;funcret
  5798  0031E8                     __end_of___flge:
  5799                           	callstack 0
  5800                           
  5801 ;; *************** function ___fleq *****************
  5802 ;; Defined at:
  5803 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;  ff1             4    0[COMRAM] int 
  5806 ;;  ff2             4    4[COMRAM] int 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;		None               void
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5818 ;;      Params:         8       0       0       0       0       0       0       0       0
  5819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5820 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5821 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5822 ;;Total ram usage:       12 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_efgtoa
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text19
  5832  0037BE                     __ptext19:
  5833                           	callstack 0
  5834  0037BE                     ___fleq:
  5835                           	callstack 26
  5836  0037BE  0E00               	movlw	0
  5837  0037C0  1401               	andwf	___fleq@ff1^0,w,c
  5838  0037C2  6E09               	movwf	??___fleq^0,c
  5839  0037C4  0E00               	movlw	0
  5840  0037C6  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5841  0037C8  6E0A               	movwf	(??___fleq+1)^0,c
  5842  0037CA  0E80               	movlw	128
  5843  0037CC  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5844  0037CE  6E0B               	movwf	(??___fleq+2)^0,c
  5845  0037D0  0E7F               	movlw	127
  5846  0037D2  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5847  0037D4  6E0C               	movwf	(??___fleq+3)^0,c
  5848  0037D6  5009               	movf	??___fleq^0,w,c
  5849  0037D8  100A               	iorwf	(??___fleq+1)^0,w,c
  5850  0037DA  100B               	iorwf	(??___fleq+2)^0,w,c
  5851  0037DC  100C               	iorwf	(??___fleq+3)^0,w,c
  5852  0037DE  A4D8               	btfss	status,2,c
  5853  0037E0  EFF4  F01B         	goto	u3621
  5854  0037E4  EFF6  F01B         	goto	u3620
  5855  0037E8                     u3621:
  5856  0037E8  EFFE  F01B         	goto	l3439
  5857  0037EC                     u3620:
  5858  0037EC  0E00               	movlw	0
  5859  0037EE  6E01               	movwf	___fleq@ff1^0,c
  5860  0037F0  0E00               	movlw	0
  5861  0037F2  6E02               	movwf	(___fleq@ff1+1)^0,c
  5862  0037F4  0E00               	movlw	0
  5863  0037F6  6E03               	movwf	(___fleq@ff1+2)^0,c
  5864  0037F8  0E00               	movlw	0
  5865  0037FA  6E04               	movwf	(___fleq@ff1+3)^0,c
  5866  0037FC                     l3439:
  5867  0037FC  0E00               	movlw	0
  5868  0037FE  1405               	andwf	___fleq@ff2^0,w,c
  5869  003800  6E09               	movwf	??___fleq^0,c
  5870  003802  0E00               	movlw	0
  5871  003804  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5872  003806  6E0A               	movwf	(??___fleq+1)^0,c
  5873  003808  0E80               	movlw	128
  5874  00380A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5875  00380C  6E0B               	movwf	(??___fleq+2)^0,c
  5876  00380E  0E7F               	movlw	127
  5877  003810  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5878  003812  6E0C               	movwf	(??___fleq+3)^0,c
  5879  003814  5009               	movf	??___fleq^0,w,c
  5880  003816  100A               	iorwf	(??___fleq+1)^0,w,c
  5881  003818  100B               	iorwf	(??___fleq+2)^0,w,c
  5882  00381A  100C               	iorwf	(??___fleq+3)^0,w,c
  5883  00381C  A4D8               	btfss	status,2,c
  5884  00381E  EF13  F01C         	goto	u3631
  5885  003822  EF15  F01C         	goto	u3630
  5886  003826                     u3631:
  5887  003826  EF1D  F01C         	goto	l3443
  5888  00382A                     u3630:
  5889  00382A  0E00               	movlw	0
  5890  00382C  6E05               	movwf	___fleq@ff2^0,c
  5891  00382E  0E00               	movlw	0
  5892  003830  6E06               	movwf	(___fleq@ff2+1)^0,c
  5893  003832  0E00               	movlw	0
  5894  003834  6E07               	movwf	(___fleq@ff2+2)^0,c
  5895  003836  0E00               	movlw	0
  5896  003838  6E08               	movwf	(___fleq@ff2+3)^0,c
  5897  00383A                     l3443:
  5898  00383A  5005               	movf	___fleq@ff2^0,w,c
  5899  00383C  1801               	xorwf	___fleq@ff1^0,w,c
  5900  00383E  E10F               	bnz	u3640
  5901  003840  5006               	movf	(___fleq@ff2+1)^0,w,c
  5902  003842  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5903  003844  E10C               	bnz	u3640
  5904  003846  5007               	movf	(___fleq@ff2+2)^0,w,c
  5905  003848  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5906  00384A  E109               	bnz	u3640
  5907  00384C  5008               	movf	(___fleq@ff2+3)^0,w,c
  5908  00384E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5909  003850  B4D8               	btfsc	status,2,c
  5910  003852  EF2D  F01C         	goto	u3641
  5911  003856  EF2F  F01C         	goto	u3640
  5912  00385A                     u3641:
  5913  00385A  EF32  F01C         	goto	l3447
  5914  00385E                     u3640:
  5915  00385E  90D8               	bcf	status,0,c
  5916  003860  EF33  F01C         	goto	l434
  5917  003864                     l3447:
  5918  003864  80D8               	bsf	status,0,c
  5919  003866                     l434:
  5920  003866  0012               	return		;funcret
  5921  003868                     __end_of___fleq:
  5922                           	callstack 0
  5923                           
  5924 ;; *************** function ___awmod *****************
  5925 ;; Defined at:
  5926 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  dividend        2    0[COMRAM] int 
  5929 ;;  divisor         2    2[COMRAM] int 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  sign            1    5[COMRAM] unsigned char 
  5932 ;;  counter         1    4[COMRAM] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  2    0[COMRAM] int 
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5942 ;;      Params:         4       0       0       0       0       0       0       0       0
  5943 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5945 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5946 ;;Total ram usage:        6 bytes
  5947 ;; Hardware stack levels used: 1
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_efgtoa
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text20
  5956  00370E                     __ptext20:
  5957                           	callstack 0
  5958  00370E                     ___awmod:
  5959                           	callstack 26
  5960  00370E  0E00               	movlw	0
  5961  003710  6E06               	movwf	___awmod@sign^0,c
  5962  003712  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5963  003714  EF90  F01B         	goto	u3560
  5964  003718  EF8E  F01B         	goto	u3561
  5965  00371C                     u3561:
  5966  00371C  EF96  F01B         	goto	l3407
  5967  003720                     u3560:
  5968  003720  6C01               	negf	___awmod@dividend^0,c
  5969  003722  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5970  003724  B0D8               	btfsc	status,0,c
  5971  003726  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5972  003728  0E01               	movlw	1
  5973  00372A  6E06               	movwf	___awmod@sign^0,c
  5974  00372C                     l3407:
  5975  00372C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5976  00372E  EF9D  F01B         	goto	u3570
  5977  003732  EF9B  F01B         	goto	u3571
  5978  003736                     u3571:
  5979  003736  EFA1  F01B         	goto	l3411
  5980  00373A                     u3570:
  5981  00373A  6C03               	negf	___awmod@divisor^0,c
  5982  00373C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5983  00373E  B0D8               	btfsc	status,0,c
  5984  003740  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5985  003742                     l3411:
  5986  003742  5003               	movf	___awmod@divisor^0,w,c
  5987  003744  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5988  003746  B4D8               	btfsc	status,2,c
  5989  003748  EFA8  F01B         	goto	u3581
  5990  00374C  EFAA  F01B         	goto	u3580
  5991  003750                     u3581:
  5992  003750  EFCE  F01B         	goto	l3427
  5993  003754                     u3580:
  5994  003754  0E01               	movlw	1
  5995  003756  6E05               	movwf	___awmod@counter^0,c
  5996  003758  EFB2  F01B         	goto	l3417
  5997  00375C                     l3415:
  5998  00375C  90D8               	bcf	status,0,c
  5999  00375E  3603               	rlcf	___awmod@divisor^0,f,c
  6000  003760  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6001  003762  2A05               	incf	___awmod@counter^0,f,c
  6002  003764                     l3417:
  6003  003764  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6004  003766  EFB7  F01B         	goto	u3591
  6005  00376A  EFB9  F01B         	goto	u3590
  6006  00376E                     u3591:
  6007  00376E  EFAE  F01B         	goto	l3415
  6008  003772                     u3590:
  6009  003772                     l3419:
  6010  003772  5003               	movf	___awmod@divisor^0,w,c
  6011  003774  5C01               	subwf	___awmod@dividend^0,w,c
  6012  003776  5004               	movf	(___awmod@divisor+1)^0,w,c
  6013  003778  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6014  00377A  A0D8               	btfss	status,0,c
  6015  00377C  EFC2  F01B         	goto	u3601
  6016  003780  EFC4  F01B         	goto	u3600
  6017  003784                     u3601:
  6018  003784  EFC8  F01B         	goto	l3423
  6019  003788                     u3600:
  6020  003788  5003               	movf	___awmod@divisor^0,w,c
  6021  00378A  5E01               	subwf	___awmod@dividend^0,f,c
  6022  00378C  5004               	movf	(___awmod@divisor+1)^0,w,c
  6023  00378E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6024  003790                     l3423:
  6025  003790  90D8               	bcf	status,0,c
  6026  003792  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6027  003794  3203               	rrcf	___awmod@divisor^0,f,c
  6028  003796  2E05               	decfsz	___awmod@counter^0,f,c
  6029  003798  EFB9  F01B         	goto	l3419
  6030  00379C                     l3427:
  6031  00379C  5006               	movf	___awmod@sign^0,w,c
  6032  00379E  B4D8               	btfsc	status,2,c
  6033  0037A0  EFD4  F01B         	goto	u3611
  6034  0037A4  EFD6  F01B         	goto	u3610
  6035  0037A8                     u3611:
  6036  0037A8  EFDA  F01B         	goto	l3431
  6037  0037AC                     u3610:
  6038  0037AC  6C01               	negf	___awmod@dividend^0,c
  6039  0037AE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6040  0037B0  B0D8               	btfsc	status,0,c
  6041  0037B2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6042  0037B4                     l3431:
  6043  0037B4  C001  F001         	movff	___awmod@dividend,?___awmod
  6044  0037B8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6045  0037BC  0012               	return		;funcret
  6046  0037BE                     __end_of___awmod:
  6047                           	callstack 0
  6048                           
  6049 ;; *************** function ___awdiv *****************
  6050 ;; Defined at:
  6051 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  dividend        2    0[COMRAM] int 
  6054 ;;  divisor         2    2[COMRAM] int 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  quotient        2    6[COMRAM] int 
  6057 ;;  sign            1    5[COMRAM] unsigned char 
  6058 ;;  counter         1    4[COMRAM] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  2    0[COMRAM] int 
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6068 ;;      Params:         4       0       0       0       0       0       0       0       0
  6069 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6071 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6072 ;;Total ram usage:        8 bytes
  6073 ;; Hardware stack levels used: 1
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_efgtoa
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text21
  6082  00364A                     __ptext21:
  6083                           	callstack 0
  6084  00364A                     ___awdiv:
  6085                           	callstack 26
  6086  00364A  0E00               	movlw	0
  6087  00364C  6E06               	movwf	___awdiv@sign^0,c
  6088  00364E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6089  003650  EF2E  F01B         	goto	u3500
  6090  003654  EF2C  F01B         	goto	u3501
  6091  003658                     u3501:
  6092  003658  EF34  F01B         	goto	l3363
  6093  00365C                     u3500:
  6094  00365C  6C03               	negf	___awdiv@divisor^0,c
  6095  00365E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6096  003660  B0D8               	btfsc	status,0,c
  6097  003662  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6098  003664  0E01               	movlw	1
  6099  003666  6E06               	movwf	___awdiv@sign^0,c
  6100  003668                     l3363:
  6101  003668  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6102  00366A  EF3B  F01B         	goto	u3510
  6103  00366E  EF39  F01B         	goto	u3511
  6104  003672                     u3511:
  6105  003672  EF41  F01B         	goto	l3369
  6106  003676                     u3510:
  6107  003676  6C01               	negf	___awdiv@dividend^0,c
  6108  003678  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6109  00367A  B0D8               	btfsc	status,0,c
  6110  00367C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6111  00367E  0E01               	movlw	1
  6112  003680  1A06               	xorwf	___awdiv@sign^0,f,c
  6113  003682                     l3369:
  6114  003682  0E00               	movlw	0
  6115  003684  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6116  003686  0E00               	movlw	0
  6117  003688  6E07               	movwf	___awdiv@quotient^0,c
  6118  00368A  5003               	movf	___awdiv@divisor^0,w,c
  6119  00368C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6120  00368E  B4D8               	btfsc	status,2,c
  6121  003690  EF4C  F01B         	goto	u3521
  6122  003694  EF4E  F01B         	goto	u3520
  6123  003698                     u3521:
  6124  003698  EF76  F01B         	goto	l3391
  6125  00369C                     u3520:
  6126  00369C  0E01               	movlw	1
  6127  00369E  6E05               	movwf	___awdiv@counter^0,c
  6128  0036A0  EF56  F01B         	goto	l3377
  6129  0036A4                     l3375:
  6130  0036A4  90D8               	bcf	status,0,c
  6131  0036A6  3603               	rlcf	___awdiv@divisor^0,f,c
  6132  0036A8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6133  0036AA  2A05               	incf	___awdiv@counter^0,f,c
  6134  0036AC                     l3377:
  6135  0036AC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6136  0036AE  EF5B  F01B         	goto	u3531
  6137  0036B2  EF5D  F01B         	goto	u3530
  6138  0036B6                     u3531:
  6139  0036B6  EF52  F01B         	goto	l3375
  6140  0036BA                     u3530:
  6141  0036BA                     l3379:
  6142  0036BA  90D8               	bcf	status,0,c
  6143  0036BC  3607               	rlcf	___awdiv@quotient^0,f,c
  6144  0036BE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6145  0036C0  5003               	movf	___awdiv@divisor^0,w,c
  6146  0036C2  5C01               	subwf	___awdiv@dividend^0,w,c
  6147  0036C4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6148  0036C6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6149  0036C8  A0D8               	btfss	status,0,c
  6150  0036CA  EF69  F01B         	goto	u3541
  6151  0036CE  EF6B  F01B         	goto	u3540
  6152  0036D2                     u3541:
  6153  0036D2  EF70  F01B         	goto	l3387
  6154  0036D6                     u3540:
  6155  0036D6  5003               	movf	___awdiv@divisor^0,w,c
  6156  0036D8  5E01               	subwf	___awdiv@dividend^0,f,c
  6157  0036DA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6158  0036DC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6159  0036DE  8007               	bsf	___awdiv@quotient^0,0,c
  6160  0036E0                     l3387:
  6161  0036E0  90D8               	bcf	status,0,c
  6162  0036E2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6163  0036E4  3203               	rrcf	___awdiv@divisor^0,f,c
  6164  0036E6  2E05               	decfsz	___awdiv@counter^0,f,c
  6165  0036E8  EF5D  F01B         	goto	l3379
  6166  0036EC                     l3391:
  6167  0036EC  5006               	movf	___awdiv@sign^0,w,c
  6168  0036EE  B4D8               	btfsc	status,2,c
  6169  0036F0  EF7C  F01B         	goto	u3551
  6170  0036F4  EF7E  F01B         	goto	u3550
  6171  0036F8                     u3551:
  6172  0036F8  EF82  F01B         	goto	l3395
  6173  0036FC                     u3550:
  6174  0036FC  6C07               	negf	___awdiv@quotient^0,c
  6175  0036FE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6176  003700  B0D8               	btfsc	status,0,c
  6177  003702  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6178  003704                     l3395:
  6179  003704  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6180  003708  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6181  00370C  0012               	return		;funcret
  6182  00370E                     __end_of___awdiv:
  6183                           	callstack 0
  6184                           
  6185 ;; *************** function _atoi *****************
  6186 ;; Defined at:
  6187 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6190 ;;		 -> STR_7(6), STR_6(8), STR_5(6), STR_4(8), 
  6191 ;;		 -> STR_3(6), STR_2(8), 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;  n               2   20[COMRAM] int 
  6194 ;;  neg             2   13[COMRAM] int 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  2    7[COMRAM] int 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6204 ;;      Params:         2       0       0       0       0       0       0       0       0
  6205 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6206 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6207 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6208 ;;Total ram usage:       15 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 1
  6211 ;; This function calls:
  6212 ;;		___wmul
  6213 ;;		_isdigit
  6214 ;;		_isspace
  6215 ;; This function is called by:
  6216 ;;		_vfpfcnvrt
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text22
  6221  002E4C                     __ptext22:
  6222                           	callstack 0
  6223  002E4C                     _atoi:
  6224                           	callstack 26
  6225  002E4C  0E00               	movlw	0
  6226  002E4E  6E16               	movwf	(atoi@n+1)^0,c
  6227  002E50  0E00               	movlw	0
  6228  002E52  6E15               	movwf	atoi@n^0,c
  6229  002E54  0E00               	movlw	0
  6230  002E56  6E0F               	movwf	(atoi@neg+1)^0,c
  6231  002E58  0E00               	movlw	0
  6232  002E5A  6E0E               	movwf	atoi@neg^0,c
  6233  002E5C  EF32  F017         	goto	l3955
  6234  002E60                     l3953:
  6235  002E60  4A08               	infsnz	atoi@s^0,f,c
  6236  002E62  2A09               	incf	(atoi@s+1)^0,f,c
  6237  002E64                     l3955:
  6238  002E64  0E01               	movlw	1
  6239  002E66  6E14               	movwf	_atoi$1053^0,c
  6240  002E68  C008  FFF6         	movff	atoi@s,tblptrl
  6241  002E6C  C009  FFF7         	movff	atoi@s+1,tblptrh
  6242  002E70                     	if	0	;tblptru may be non-zero
  6243  002E70                     	endif
  6244  002E70                     	if	0	;tblptru may be non-zero
  6245  002E70                     	endif
  6246  002E70  0008               	tblrd		*
  6247  002E72  50F5               	movf	tablat,w,c
  6248  002E74  0A20               	xorlw	32
  6249  002E76  B4D8               	btfsc	status,2,c
  6250  002E78  EF40  F017         	goto	u4641
  6251  002E7C  EF42  F017         	goto	u4640
  6252  002E80                     u4641:
  6253  002E80  EF5F  F017         	goto	l3963
  6254  002E84                     u4640:
  6255  002E84  0EF7               	movlw	247
  6256  002E86  6E0A               	movwf	??_atoi^0,c
  6257  002E88  0EFF               	movlw	255
  6258  002E8A  6E0B               	movwf	(??_atoi+1)^0,c
  6259  002E8C  C008  FFF6         	movff	atoi@s,tblptrl
  6260  002E90  C009  FFF7         	movff	atoi@s+1,tblptrh
  6261  002E94                     	if	0	;tblptru may be non-zero
  6262  002E94                     	endif
  6263  002E94                     	if	0	;tblptru may be non-zero
  6264  002E94                     	endif
  6265  002E94  0008               	tblrd		*
  6266  002E96  50F5               	movf	tablat,w,c
  6267  002E98  6E0C               	movwf	(??_atoi+2)^0,c
  6268  002E9A  6A0D               	clrf	(??_atoi+3)^0,c
  6269  002E9C  500A               	movf	??_atoi^0,w,c
  6270  002E9E  260C               	addwf	(??_atoi+2)^0,f,c
  6271  002EA0  500B               	movf	(??_atoi+1)^0,w,c
  6272  002EA2  220D               	addwfc	(??_atoi+3)^0,f,c
  6273  002EA4  500D               	movf	(??_atoi+3)^0,w,c
  6274  002EA6  E109               	bnz	u4650
  6275  002EA8  0E05               	movlw	5
  6276  002EAA  5C0C               	subwf	(??_atoi+2)^0,w,c
  6277  002EAC  A0D8               	btfss	status,0,c
  6278  002EAE  EF5B  F017         	goto	u4651
  6279  002EB2  EF5D  F017         	goto	u4650
  6280  002EB6                     u4651:
  6281  002EB6  EF5F  F017         	goto	l3963
  6282  002EBA                     u4650:
  6283  002EBA  0E00               	movlw	0
  6284  002EBC  6E14               	movwf	_atoi$1053^0,c
  6285  002EBE                     l3963:
  6286  002EBE  C014  F010         	movff	_atoi$1053,_atoi$1052
  6287  002EC2  6A11               	clrf	(_atoi$1052+1)^0,c
  6288  002EC4  5010               	movf	_atoi$1052^0,w,c
  6289  002EC6  1011               	iorwf	(_atoi$1052+1)^0,w,c
  6290  002EC8  A4D8               	btfss	status,2,c
  6291  002ECA  EF69  F017         	goto	u4661
  6292  002ECE  EF6B  F017         	goto	u4660
  6293  002ED2                     u4661:
  6294  002ED2  EF30  F017         	goto	l3953
  6295  002ED6                     u4660:
  6296  002ED6  EF75  F017         	goto	l3973
  6297  002EDA                     l3969:
  6298  002EDA  0E00               	movlw	0
  6299  002EDC  6E0F               	movwf	(atoi@neg+1)^0,c
  6300  002EDE  0E01               	movlw	1
  6301  002EE0  6E0E               	movwf	atoi@neg^0,c
  6302  002EE2                     l3971:
  6303  002EE2  4A08               	infsnz	atoi@s^0,f,c
  6304  002EE4  2A09               	incf	(atoi@s+1)^0,f,c
  6305  002EE6  EFAA  F017         	goto	l3979
  6306  002EEA                     l3973:
  6307  002EEA  C008  FFF6         	movff	atoi@s,tblptrl
  6308  002EEE  C009  FFF7         	movff	atoi@s+1,tblptrh
  6309  002EF2                     	if	0	;tblptru may be non-zero
  6310  002EF2                     	endif
  6311  002EF2                     	if	0	;tblptru may be non-zero
  6312  002EF2                     	endif
  6313  002EF2  0008               	tblrd		*
  6314  002EF4  50F5               	movf	tablat,w,c
  6315  002EF6  6E0A               	movwf	??_atoi^0,c
  6316  002EF8  6A0B               	clrf	(??_atoi+1)^0,c
  6317                           
  6318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6319                           ; Switch size 1, requested type "simple"
  6320                           ; Number of cases is 1, Range of values is 0 to 0
  6321                           ; switch strategies available:
  6322                           ; Name         Instructions Cycles
  6323                           ; simple_byte            4     3 (average)
  6324                           ;	Chosen strategy is simple_byte
  6325  002EFA  500B               	movf	(??_atoi+1)^0,w,c
  6326  002EFC  0A00               	xorlw	0	; case 0
  6327  002EFE  B4D8               	btfsc	status,2,c
  6328  002F00  EF84  F017         	goto	l4483
  6329  002F04  EFAA  F017         	goto	l3979
  6330  002F08                     l4483:
  6331                           
  6332                           ; Switch size 1, requested type "simple"
  6333                           ; Number of cases is 2, Range of values is 43 to 45
  6334                           ; switch strategies available:
  6335                           ; Name         Instructions Cycles
  6336                           ; simple_byte            7     4 (average)
  6337                           ;	Chosen strategy is simple_byte
  6338  002F08  500A               	movf	??_atoi^0,w,c
  6339  002F0A  0A2B               	xorlw	43	; case 43
  6340  002F0C  B4D8               	btfsc	status,2,c
  6341  002F0E  EF71  F017         	goto	l3971
  6342  002F12  0A06               	xorlw	6	; case 45
  6343  002F14  B4D8               	btfsc	status,2,c
  6344  002F16  EF6D  F017         	goto	l3969
  6345  002F1A  EFAA  F017         	goto	l3979
  6346  002F1E                     l3975:
  6347  002F1E  C015  F001         	movff	atoi@n,___wmul@multiplier
  6348  002F22  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6349  002F26  0E00               	movlw	0
  6350  002F28  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6351  002F2A  0E0A               	movlw	10
  6352  002F2C  6E03               	movwf	___wmul@multiplicand^0,c
  6353  002F2E  EC1A  F01F         	call	___wmul	;wreg free
  6354  002F32  C008  FFF6         	movff	atoi@s,tblptrl
  6355  002F36  C009  FFF7         	movff	atoi@s+1,tblptrh
  6356  002F3A                     	if	0	;tblptru may be non-zero
  6357  002F3A                     	endif
  6358  002F3A                     	if	0	;tblptru may be non-zero
  6359  002F3A                     	endif
  6360  002F3A  0008               	tblrd		*
  6361  002F3C  50F5               	movf	tablat,w,c
  6362  002F3E  5E01               	subwf	?___wmul^0,f,c
  6363  002F40  0E00               	movlw	0
  6364  002F42  5A02               	subwfb	(?___wmul+1)^0,f,c
  6365  002F44  0E30               	movlw	48
  6366  002F46  2401               	addwf	?___wmul^0,w,c
  6367  002F48  6E15               	movwf	atoi@n^0,c
  6368  002F4A  0E00               	movlw	0
  6369  002F4C  2002               	addwfc	(?___wmul+1)^0,w,c
  6370  002F4E  6E16               	movwf	(atoi@n+1)^0,c
  6371  002F50  EF71  F017         	goto	l3971
  6372  002F54                     l3979:
  6373  002F54  0ED0               	movlw	208
  6374  002F56  6E0A               	movwf	??_atoi^0,c
  6375  002F58  0EFF               	movlw	255
  6376  002F5A  6E0B               	movwf	(??_atoi+1)^0,c
  6377  002F5C  C008  FFF6         	movff	atoi@s,tblptrl
  6378  002F60  C009  FFF7         	movff	atoi@s+1,tblptrh
  6379  002F64                     	if	0	;tblptru may be non-zero
  6380  002F64                     	endif
  6381  002F64                     	if	0	;tblptru may be non-zero
  6382  002F64                     	endif
  6383  002F64  0008               	tblrd		*
  6384  002F66  50F5               	movf	tablat,w,c
  6385  002F68  6E0C               	movwf	(??_atoi+2)^0,c
  6386  002F6A  6A0D               	clrf	(??_atoi+3)^0,c
  6387  002F6C  500A               	movf	??_atoi^0,w,c
  6388  002F6E  260C               	addwf	(??_atoi+2)^0,f,c
  6389  002F70  500B               	movf	(??_atoi+1)^0,w,c
  6390  002F72  220D               	addwfc	(??_atoi+3)^0,f,c
  6391  002F74  500D               	movf	(??_atoi+3)^0,w,c
  6392  002F76  E10A               	bnz	u4670
  6393  002F78  0E0A               	movlw	10
  6394  002F7A  5C0C               	subwf	(??_atoi+2)^0,w,c
  6395  002F7C  A0D8               	btfss	status,0,c
  6396  002F7E  EFC3  F017         	goto	u4671
  6397  002F82  EFC6  F017         	goto	u4670
  6398  002F86                     u4671:
  6399  002F86  0E01               	movlw	1
  6400  002F88  EFC7  F017         	goto	u4680
  6401  002F8C                     u4670:
  6402  002F8C  0E00               	movlw	0
  6403  002F8E                     u4680:
  6404  002F8E  6E12               	movwf	_atoi$1054^0,c
  6405  002F90  6A13               	clrf	(_atoi$1054+1)^0,c
  6406  002F92  5012               	movf	_atoi$1054^0,w,c
  6407  002F94  1013               	iorwf	(_atoi$1054+1)^0,w,c
  6408  002F96  A4D8               	btfss	status,2,c
  6409  002F98  EFD0  F017         	goto	u4691
  6410  002F9C  EFD2  F017         	goto	u4690
  6411  002FA0                     u4691:
  6412  002FA0  EF8F  F017         	goto	l3975
  6413  002FA4                     u4690:
  6414  002FA4  500E               	movf	atoi@neg^0,w,c
  6415  002FA6  100F               	iorwf	(atoi@neg+1)^0,w,c
  6416  002FA8  A4D8               	btfss	status,2,c
  6417  002FAA  EFD9  F017         	goto	u4701
  6418  002FAE  EFDB  F017         	goto	u4700
  6419  002FB2                     u4701:
  6420  002FB2  EFE9  F017         	goto	l1074
  6421  002FB6                     u4700:
  6422  002FB6  C015  F00A         	movff	atoi@n,??_atoi
  6423  002FBA  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6424  002FBE  1E0A               	comf	??_atoi^0,f,c
  6425  002FC0  1E0B               	comf	(??_atoi+1)^0,f,c
  6426  002FC2  4A0A               	infsnz	??_atoi^0,f,c
  6427  002FC4  2A0B               	incf	(??_atoi+1)^0,f,c
  6428  002FC6  C00A  F008         	movff	??_atoi,?_atoi
  6429  002FCA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6430  002FCE  EFED  F017         	goto	l1077
  6431  002FD2                     l1074:
  6432  002FD2  C015  F008         	movff	atoi@n,?_atoi
  6433  002FD6  C016  F009         	movff	atoi@n+1,?_atoi+1
  6434  002FDA                     l1077:
  6435  002FDA  0012               	return		;funcret
  6436  002FDC                     __end_of_atoi:
  6437                           	callstack 0
  6438                           
  6439 ;; *************** function _isspace *****************
  6440 ;; Defined at:
  6441 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;  c               2    0[COMRAM] int 
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  2    0[COMRAM] int 
  6448 ;; Registers used:
  6449 ;;		wreg, status,2, status,0
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6455 ;;      Params:         2       0       0       0       0       0       0       0       0
  6456 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6457 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6458 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6459 ;;Total ram usage:        7 bytes
  6460 ;; Hardware stack levels used: 1
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_atoi
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text23
  6469  003A9C                     __ptext23:
  6470                           	callstack 0
  6471  003A9C                     _isspace:
  6472                           	callstack 26
  6473  003A9C  0E01               	movlw	1
  6474  003A9E  6E07               	movwf	_isspace$1083^0,c
  6475  003AA0  0E20               	movlw	32
  6476  003AA2  1801               	xorwf	isspace@c^0,w,c
  6477  003AA4  1002               	iorwf	(isspace@c+1)^0,w,c
  6478  003AA6  B4D8               	btfsc	status,2,c
  6479  003AA8  EF58  F01D         	goto	u4061
  6480  003AAC  EF5A  F01D         	goto	u4060
  6481  003AB0                     u4061:
  6482  003AB0  EF73  F01D         	goto	l3623
  6483  003AB4                     u4060:
  6484  003AB4  0EF7               	movlw	247
  6485  003AB6  6E03               	movwf	??_isspace^0,c
  6486  003AB8  0EFF               	movlw	255
  6487  003ABA  6E04               	movwf	(??_isspace+1)^0,c
  6488  003ABC  C001  F005         	movff	isspace@c,??_isspace+2
  6489  003AC0  C002  F006         	movff	isspace@c+1,??_isspace+3
  6490  003AC4  5003               	movf	??_isspace^0,w,c
  6491  003AC6  2605               	addwf	(??_isspace+2)^0,f,c
  6492  003AC8  5004               	movf	(??_isspace+1)^0,w,c
  6493  003ACA  2206               	addwfc	(??_isspace+3)^0,f,c
  6494  003ACC  5006               	movf	(??_isspace+3)^0,w,c
  6495  003ACE  E109               	bnz	u4070
  6496  003AD0  0E05               	movlw	5
  6497  003AD2  5C05               	subwf	(??_isspace+2)^0,w,c
  6498  003AD4  A0D8               	btfss	status,0,c
  6499  003AD6  EF6F  F01D         	goto	u4071
  6500  003ADA  EF71  F01D         	goto	u4070
  6501  003ADE                     u4071:
  6502  003ADE  EF73  F01D         	goto	l3623
  6503  003AE2                     u4070:
  6504  003AE2  0E00               	movlw	0
  6505  003AE4  6E07               	movwf	_isspace$1083^0,c
  6506  003AE6                     l3623:
  6507  003AE6  C007  F001         	movff	_isspace$1083,?_isspace
  6508  003AEA  6A02               	clrf	(?_isspace+1)^0,c
  6509  003AEC  0012               	return		;funcret
  6510  003AEE                     __end_of_isspace:
  6511                           	callstack 0
  6512                           
  6513 ;; *************** function _isdigit *****************
  6514 ;; Defined at:
  6515 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  c               2    0[COMRAM] int 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;		None
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  2    0[COMRAM] int 
  6522 ;; Registers used:
  6523 ;;		wreg, status,2, status,0
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6529 ;;      Params:         2       0       0       0       0       0       0       0       0
  6530 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6531 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6532 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6533 ;;Total ram usage:        6 bytes
  6534 ;; Hardware stack levels used: 1
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_vfpfcnvrt
  6539 ;;		_atoi
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text24
  6544  003D96                     __ptext24:
  6545                           	callstack 0
  6546  003D96                     _isdigit:
  6547                           	callstack 27
  6548  003D96  0ED0               	movlw	208
  6549  003D98  6E03               	movwf	??_isdigit^0,c
  6550  003D9A  0EFF               	movlw	255
  6551  003D9C  6E04               	movwf	(??_isdigit+1)^0,c
  6552  003D9E  C001  F005         	movff	isdigit@c,??_isdigit+2
  6553  003DA2  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6554  003DA6  5003               	movf	??_isdigit^0,w,c
  6555  003DA8  2605               	addwf	(??_isdigit+2)^0,f,c
  6556  003DAA  5004               	movf	(??_isdigit+1)^0,w,c
  6557  003DAC  2206               	addwfc	(??_isdigit+3)^0,f,c
  6558  003DAE  5006               	movf	(??_isdigit+3)^0,w,c
  6559  003DB0  E10A               	bnz	u4040
  6560  003DB2  0E0A               	movlw	10
  6561  003DB4  5C05               	subwf	(??_isdigit+2)^0,w,c
  6562  003DB6  A0D8               	btfss	status,0,c
  6563  003DB8  EFE0  F01E         	goto	u4041
  6564  003DBC  EFE3  F01E         	goto	u4040
  6565  003DC0                     u4041:
  6566  003DC0  0E01               	movlw	1
  6567  003DC2  EFE4  F01E         	goto	u4050
  6568  003DC6                     u4040:
  6569  003DC6  0E00               	movlw	0
  6570  003DC8                     u4050:
  6571  003DC8  6E01               	movwf	?_isdigit^0,c
  6572  003DCA  6A02               	clrf	(?_isdigit+1)^0,c
  6573  003DCC  0012               	return		;funcret
  6574  003DCE                     __end_of_isdigit:
  6575                           	callstack 0
  6576                           
  6577 ;; *************** function ___wmul *****************
  6578 ;; Defined at:
  6579 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  multiplier      2    0[COMRAM] unsigned int 
  6582 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  product         2    4[COMRAM] unsigned int 
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  2    0[COMRAM] unsigned int 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0, prodl, prodh
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6594 ;;      Params:         4       0       0       0       0       0       0       0       0
  6595 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6597 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6598 ;;Total ram usage:        6 bytes
  6599 ;; Hardware stack levels used: 1
  6600 ;; This function calls:
  6601 ;;		Nothing
  6602 ;; This function is called by:
  6603 ;;		_atoi
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           	psect	text25
  6608  003E34                     __ptext25:
  6609                           	callstack 0
  6610  003E34                     ___wmul:
  6611                           	callstack 26
  6612  003E34  5001               	movf	___wmul@multiplier^0,w,c
  6613  003E36  0203               	mulwf	___wmul@multiplicand^0,c
  6614  003E38  CFF3 F005          	movff	prodl,___wmul@product
  6615  003E3C  CFF4 F006          	movff	prodh,___wmul@product+1
  6616  003E40  5001               	movf	___wmul@multiplier^0,w,c
  6617  003E42  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6618  003E44  50F3               	movf	243,w,c
  6619  003E46  2606               	addwf	(___wmul@product+1)^0,f,c
  6620  003E48  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6621  003E4A  0203               	mulwf	___wmul@multiplicand^0,c
  6622  003E4C  50F3               	movf	243,w,c
  6623  003E4E  2606               	addwf	(___wmul@product+1)^0,f,c
  6624  003E50  C005  F001         	movff	___wmul@product,?___wmul
  6625  003E54  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6626  003E58  0012               	return		;funcret
  6627  003E5A                     __end_of___wmul:
  6628                           	callstack 0
  6629                           
  6630 ;; *************** function _ReadLUZ *****************
  6631 ;; Defined at:
  6632 ;;		line 12 in file "Sensor_luz.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;		None
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  result          2    4[COMRAM] unsigned short 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  2    0[COMRAM] unsigned short 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6646 ;;      Params:         2       0       0       0       0       0       0       0       0
  6647 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6648 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6649 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6650 ;;Total ram usage:        6 bytes
  6651 ;; Hardware stack levels used: 1
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text26
  6660  003868                     __ptext26:
  6661                           	callstack 0
  6662  003868                     _ReadLUZ:
  6663                           	callstack 30
  6664  003868                     
  6665                           ;Sensor_luz.c: 14:     uint16_t result;;Sensor_luz.c: 16:     TRISD = 0x00;
  6666  003868  0E00               	movlw	0
  6667  00386A  6E95               	movwf	149,c	;volatile
  6668  00386C                     
  6669                           ;Sensor_luz.c: 17:     TRISA = 0xFF;
  6670  00386C  6892               	setf	146,c	;volatile
  6671                           
  6672                           ;Sensor_luz.c: 19:     OSCCONbits.IRCF = 0b111;
  6673  00386E  0E70               	movlw	112
  6674  003870  12D3               	iorwf	211,f,c	;volatile
  6675                           
  6676                           ;Sensor_luz.c: 20:     OSCCONbits.SCS = 0b10;
  6677  003872  50D3               	movf	211,w,c	;volatile
  6678  003874  0BFC               	andlw	-4
  6679  003876  0902               	iorlw	2
  6680  003878  6ED3               	movwf	211,c	;volatile
  6681                           
  6682                           ;Sensor_luz.c: 23:     ADCON1bits.PCFG = 0b1101;
  6683  00387A  50C1               	movf	193,w,c	;volatile
  6684  00387C  0BF0               	andlw	-16
  6685  00387E  090D               	iorlw	13
  6686  003880  6EC1               	movwf	193,c	;volatile
  6687                           
  6688                           ;Sensor_luz.c: 24:     ADCON1bits.VCFG = 0b00;
  6689  003882  0ECF               	movlw	-49
  6690  003884  16C1               	andwf	193,f,c	;volatile
  6691                           
  6692                           ;Sensor_luz.c: 25:     ADCON0bits.CHS = 0b0001;
  6693  003886  50C2               	movf	194,w,c	;volatile
  6694  003888  0BC3               	andlw	-61
  6695  00388A  0904               	iorlw	4
  6696  00388C  6EC2               	movwf	194,c	;volatile
  6697                           
  6698                           ;Sensor_luz.c: 26:     ADCON2bits.ACQT = 0b010;
  6699  00388E  50C0               	movf	192,w,c	;volatile
  6700  003890  0BC7               	andlw	-57
  6701  003892  0910               	iorlw	16
  6702  003894  6EC0               	movwf	192,c	;volatile
  6703                           
  6704                           ;Sensor_luz.c: 27:     ADCON2bits.ADCS = 0b001;
  6705  003896  50C0               	movf	192,w,c	;volatile
  6706  003898  0BF8               	andlw	-8
  6707  00389A  0901               	iorlw	1
  6708  00389C  6EC0               	movwf	192,c	;volatile
  6709  00389E                     
  6710                           ;Sensor_luz.c: 28:     ADCON2bits.ADFM = 1;
  6711  00389E  8EC0               	bsf	192,7,c	;volatile
  6712  0038A0                     
  6713                           ;Sensor_luz.c: 29:     ADCON0bits.ADON = 1;
  6714  0038A0  80C2               	bsf	194,0,c	;volatile
  6715  0038A2                     
  6716                           ;Sensor_luz.c: 44:         ADCON0bits.GO_DONE = 1;
  6717  0038A2  82C2               	bsf	194,1,c	;volatile
  6718  0038A4                     l167:
  6719  0038A4  B2C2               	btfsc	194,1,c	;volatile
  6720  0038A6  EF57  F01C         	goto	u5081
  6721  0038AA  EF59  F01C         	goto	u5080
  6722  0038AE                     u5081:
  6723  0038AE  EF52  F01C         	goto	l167
  6724  0038B2                     u5080:
  6725  0038B2                     
  6726                           ;Sensor_luz.c: 46:         result = ADRESH;
  6727  0038B2  CFC4 F005          	movff	4036,ReadLUZ@result	;volatile
  6728  0038B6  6A06               	clrf	(ReadLUZ@result+1)^0,c
  6729  0038B8                     
  6730                           ;Sensor_luz.c: 47:         result = (result << 8) + ADRESL;
  6731  0038B8  5005               	movf	ReadLUZ@result^0,w,c
  6732  0038BA  6E03               	movwf	??_ReadLUZ^0,c
  6733  0038BC  50C3               	movf	195,w,c	;volatile
  6734  0038BE  6E05               	movwf	ReadLUZ@result^0,c
  6735  0038C0  C003  F006         	movff	??_ReadLUZ,ReadLUZ@result+1
  6736  0038C4                     
  6737                           ;Sensor_luz.c: 49:         return result;
  6738  0038C4  C005  F001         	movff	ReadLUZ@result,?_ReadLUZ
  6739  0038C8  C006  F002         	movff	ReadLUZ@result+1,?_ReadLUZ+1
  6740  0038CC  0012               	return		;funcret
  6741  0038CE                     __end_of_ReadLUZ:
  6742                           	callstack 0
  6743                           
  6744 ;; *************** function _ReadADC *****************
  6745 ;; Defined at:
  6746 ;;		line 16 in file "Temperatura.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;		None
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  result          2    6[BANK0 ] unsigned short 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  2    2[BANK0 ] unsigned short 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6760 ;;      Params:         0       2       0       0       0       0       0       0       0
  6761 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6762 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6763 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6764 ;;Total ram usage:        6 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; Hardware stack levels required when called: 1
  6767 ;; This function calls:
  6768 ;;		___fladd
  6769 ;;		___fldiv
  6770 ;;		___flmul
  6771 ;;		___fltol
  6772 ;;		___xxtofl
  6773 ;; This function is called by:
  6774 ;;		_main
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text27
  6779  0032E6                     __ptext27:
  6780                           	callstack 0
  6781  0032E6                     _ReadADC:
  6782                           	callstack 29
  6783  0032E6                     
  6784                           ;Temperatura.c: 18:     uint16_t result;;Temperatura.c: 20:     TRISD = 0x00;
  6785  0032E6  0E00               	movlw	0
  6786  0032E8  6E95               	movwf	149,c	;volatile
  6787  0032EA                     
  6788                           ;Temperatura.c: 21:     TRISA = 0xFF;
  6789  0032EA  6892               	setf	146,c	;volatile
  6790                           
  6791                           ;Temperatura.c: 23:     OSCCONbits.IRCF = 0b111;
  6792  0032EC  0E70               	movlw	112
  6793  0032EE  12D3               	iorwf	211,f,c	;volatile
  6794                           
  6795                           ;Temperatura.c: 24:     OSCCONbits.SCS = 0b10;
  6796  0032F0  50D3               	movf	211,w,c	;volatile
  6797  0032F2  0BFC               	andlw	-4
  6798  0032F4  0902               	iorlw	2
  6799  0032F6  6ED3               	movwf	211,c	;volatile
  6800                           
  6801                           ;Temperatura.c: 27:     ADCON1bits.PCFG = 0b1110;
  6802  0032F8  50C1               	movf	193,w,c	;volatile
  6803  0032FA  0BF0               	andlw	-16
  6804  0032FC  090E               	iorlw	14
  6805  0032FE  6EC1               	movwf	193,c	;volatile
  6806                           
  6807                           ;Temperatura.c: 28:     ADCON1bits.VCFG = 0b00;
  6808  003300  0ECF               	movlw	-49
  6809  003302  16C1               	andwf	193,f,c	;volatile
  6810                           
  6811                           ;Temperatura.c: 29:     ADCON0bits.CHS = 0b0000;
  6812  003304  0EC3               	movlw	-61
  6813  003306  16C2               	andwf	194,f,c	;volatile
  6814                           
  6815                           ;Temperatura.c: 30:     ADCON2bits.ACQT = 0b010;
  6816  003308  50C0               	movf	192,w,c	;volatile
  6817  00330A  0BC7               	andlw	-57
  6818  00330C  0910               	iorlw	16
  6819  00330E  6EC0               	movwf	192,c	;volatile
  6820                           
  6821                           ;Temperatura.c: 31:     ADCON2bits.ADCS = 0b001;
  6822  003310  50C0               	movf	192,w,c	;volatile
  6823  003312  0BF8               	andlw	-8
  6824  003314  0901               	iorlw	1
  6825  003316  6EC0               	movwf	192,c	;volatile
  6826  003318                     
  6827                           ;Temperatura.c: 32:     ADCON2bits.ADFM = 1;
  6828  003318  8EC0               	bsf	192,7,c	;volatile
  6829  00331A                     
  6830                           ;Temperatura.c: 33:     ADCON0bits.ADON = 1;
  6831  00331A  80C2               	bsf	194,0,c	;volatile
  6832  00331C                     
  6833                           ;Temperatura.c: 48:         ADCON0bits.GO_DONE = 1;
  6834  00331C  82C2               	bsf	194,1,c	;volatile
  6835  00331E                     l142:
  6836  00331E  B2C2               	btfsc	194,1,c	;volatile
  6837  003320  EF94  F019         	goto	u5071
  6838  003324  EF96  F019         	goto	u5070
  6839  003328                     u5071:
  6840  003328  EF8F  F019         	goto	l142
  6841  00332C                     u5070:
  6842  00332C                     
  6843                           ;Temperatura.c: 50:         result = ADRESH;
  6844  00332C  CFC4 F066          	movff	4036,ReadADC@result	;volatile
  6845  003330  0100               	movlb	0	; () banked
  6846  003332  6B67               	clrf	(ReadADC@result+1)& (0+255),b
  6847  003334                     
  6848                           ; BSR set to: 0
  6849                           ;Temperatura.c: 51:         result = (result << 8) + ADRESL;
  6850  003334  5166               	movf	ReadADC@result& (0+255),w,b
  6851  003336  6F64               	movwf	??_ReadADC& (0+255),b
  6852  003338  50C3               	movf	195,w,c	;volatile
  6853  00333A  6F66               	movwf	ReadADC@result& (0+255),b
  6854  00333C  C064  F067         	movff	??_ReadADC,ReadADC@result+1
  6855  003340                     
  6856                           ; BSR set to: 0
  6857                           ;Temperatura.c: 52:         result = ((result*500.0)/1023.0)-50;
  6858  003340  0E00               	movlw	0
  6859  003342  6E4B               	movwf	___fladd@a^0,c
  6860  003344  0E00               	movlw	0
  6861  003346  6E4C               	movwf	(___fladd@a+1)^0,c
  6862  003348  0E48               	movlw	72
  6863  00334A  6E4D               	movwf	(___fladd@a+2)^0,c
  6864  00334C  0EC2               	movlw	194
  6865  00334E  6E4E               	movwf	(___fladd@a+3)^0,c
  6866  003350  0E00               	movlw	0
  6867  003352  6E32               	movwf	___fldiv@a^0,c
  6868  003354  0EC0               	movlw	192
  6869  003356  6E33               	movwf	(___fldiv@a+1)^0,c
  6870  003358  0E7F               	movlw	127
  6871  00335A  6E34               	movwf	(___fldiv@a+2)^0,c
  6872  00335C  0E44               	movlw	68
  6873  00335E  6E35               	movwf	(___fldiv@a+3)^0,c
  6874  003360  0E00               	movlw	0
  6875  003362  6E19               	movwf	___flmul@a^0,c
  6876  003364  0E00               	movlw	0
  6877  003366  6E1A               	movwf	(___flmul@a+1)^0,c
  6878  003368  0EFA               	movlw	250
  6879  00336A  6E1B               	movwf	(___flmul@a+2)^0,c
  6880  00336C  0E43               	movlw	67
  6881  00336E  6E1C               	movwf	(___flmul@a+3)^0,c
  6882  003370  C066  F007         	movff	ReadADC@result,___xxtofl@val
  6883  003374  C067  F008         	movff	ReadADC@result+1,___xxtofl@val+1
  6884  003378  6A09               	clrf	(___xxtofl@val+2)^0,c
  6885  00337A  6A0A               	clrf	(___xxtofl@val+3)^0,c
  6886  00337C  0E00               	movlw	0
  6887  00337E  EC4C  F016         	call	___xxtofl
  6888  003382  C007  F015         	movff	?___xxtofl,___flmul@b
  6889  003386  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  6890  00338A  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  6891  00338E  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  6892  003392  EC61  F011         	call	___flmul	;wreg free
  6893  003396  C015  F02E         	movff	?___flmul,___fldiv@b
  6894  00339A  C016  F02F         	movff	?___flmul+1,___fldiv@b+1
  6895  00339E  C017  F030         	movff	?___flmul+2,___fldiv@b+2
  6896  0033A2  C018  F031         	movff	?___flmul+3,___fldiv@b+3
  6897  0033A6  EC76  F013         	call	___fldiv	;wreg free
  6898  0033AA  C02E  F047         	movff	?___fldiv,___fladd@b
  6899  0033AE  C02F  F048         	movff	?___fldiv+1,___fladd@b+1
  6900  0033B2  C030  F049         	movff	?___fldiv+2,___fladd@b+2
  6901  0033B6  C031  F04A         	movff	?___fldiv+3,___fladd@b+3
  6902  0033BA  ECD9  F00C         	call	___fladd	;wreg free
  6903  0033BE  C047  F057         	movff	?___fladd,___fltol@f1
  6904  0033C2  C048  F058         	movff	?___fladd+1,___fltol@f1+1
  6905  0033C6  C049  F059         	movff	?___fladd+2,___fltol@f1+2
  6906  0033CA  C04A  F05A         	movff	?___fladd+3,___fltol@f1+3
  6907  0033CE  ECEE  F017         	call	___fltol	;wreg free
  6908  0033D2  C057  F066         	movff	?___fltol,ReadADC@result
  6909  0033D6  C058  F067         	movff	?___fltol+1,ReadADC@result+1
  6910  0033DA                     
  6911                           ;Temperatura.c: 54:         return result;
  6912  0033DA  C066  F062         	movff	ReadADC@result,?_ReadADC
  6913  0033DE  C067  F063         	movff	ReadADC@result+1,?_ReadADC+1
  6914  0033E2  0012               	return		;funcret
  6915  0033E4                     __end_of_ReadADC:
  6916                           	callstack 0
  6917                           
  6918 ;; *************** function ___xxtofl *****************
  6919 ;; Defined at:
  6920 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  sign            1    wreg     unsigned char 
  6923 ;;  val             4    6[COMRAM] long 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;  sign            1   14[COMRAM] unsigned char 
  6926 ;;  arg             4   16[COMRAM] unsigned long 
  6927 ;;  exp             1   15[COMRAM] unsigned char 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  4    6[COMRAM] unsigned char 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6937 ;;      Params:         4       0       0       0       0       0       0       0       0
  6938 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6939 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6940 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6941 ;;Total ram usage:       14 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; This function calls:
  6944 ;;		Nothing
  6945 ;; This function is called by:
  6946 ;;		_main
  6947 ;;		_ReadADC
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           	psect	text28
  6952  002C98                     __ptext28:
  6953                           	callstack 0
  6954  002C98                     ___xxtofl:
  6955                           	callstack 30
  6956                           
  6957                           ;incstack = 0
  6958                           ;___xxtofl@sign stored from wreg
  6959  002C98  6E0F               	movwf	___xxtofl@sign^0,c
  6960  002C9A  500F               	movf	___xxtofl@sign^0,w,c
  6961  002C9C  B4D8               	btfsc	status,2,c
  6962  002C9E  EF53  F016         	goto	u4951
  6963  002CA2  EF55  F016         	goto	u4950
  6964  002CA6                     u4951:
  6965  002CA6  EF77  F016         	goto	l830
  6966  002CAA                     u4950:
  6967  002CAA  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  6968  002CAC  EF5C  F016         	goto	u4960
  6969  002CB0  EF5A  F016         	goto	u4961
  6970  002CB4                     u4961:
  6971  002CB4  EF77  F016         	goto	l830
  6972  002CB8                     u4960:
  6973  002CB8  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  6974  002CBC  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  6975  002CC0  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  6976  002CC4  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  6977  002CC8  1E0B               	comf	??___xxtofl^0,f,c
  6978  002CCA  1E0C               	comf	(??___xxtofl+1)^0,f,c
  6979  002CCC  1E0D               	comf	(??___xxtofl+2)^0,f,c
  6980  002CCE  1E0E               	comf	(??___xxtofl+3)^0,f,c
  6981  002CD0  2A0B               	incf	??___xxtofl^0,f,c
  6982  002CD2  0E00               	movlw	0
  6983  002CD4  220C               	addwfc	(??___xxtofl+1)^0,f,c
  6984  002CD6  220D               	addwfc	(??___xxtofl+2)^0,f,c
  6985  002CD8  220E               	addwfc	(??___xxtofl+3)^0,f,c
  6986  002CDA  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  6987  002CDE  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  6988  002CE2  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  6989  002CE6  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  6990  002CEA  EF7F  F016         	goto	l4195
  6991  002CEE                     l830:
  6992  002CEE  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  6993  002CF2  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6994  002CF6  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6995  002CFA  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6996  002CFE                     l4195:
  6997  002CFE  5007               	movf	___xxtofl@val^0,w,c
  6998  002D00  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  6999  002D02  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  7000  002D04  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  7001  002D06  A4D8               	btfss	status,2,c
  7002  002D08  EF88  F016         	goto	u4971
  7003  002D0C  EF8A  F016         	goto	u4970
  7004  002D10                     u4971:
  7005  002D10  EF94  F016         	goto	l4201
  7006  002D14                     u4970:
  7007  002D14  0E00               	movlw	0
  7008  002D16  6E07               	movwf	?___xxtofl^0,c
  7009  002D18  0E00               	movlw	0
  7010  002D1A  6E08               	movwf	(?___xxtofl+1)^0,c
  7011  002D1C  0E00               	movlw	0
  7012  002D1E  6E09               	movwf	(?___xxtofl+2)^0,c
  7013  002D20  0E00               	movlw	0
  7014  002D22  6E0A               	movwf	(?___xxtofl+3)^0,c
  7015  002D24  EF25  F017         	goto	l833
  7016  002D28                     l4201:
  7017  002D28  0E96               	movlw	150
  7018  002D2A  6E10               	movwf	___xxtofl@exp^0,c
  7019  002D2C  EF9E  F016         	goto	l4205
  7020  002D30                     l4203:
  7021  002D30  2A10               	incf	___xxtofl@exp^0,f,c
  7022  002D32  90D8               	bcf	status,0,c
  7023  002D34  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  7024  002D36  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  7025  002D38  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  7026  002D3A  3211               	rrcf	___xxtofl@arg^0,f,c
  7027  002D3C                     l4205:
  7028  002D3C  0E00               	movlw	0
  7029  002D3E  1411               	andwf	___xxtofl@arg^0,w,c
  7030  002D40  6E0B               	movwf	??___xxtofl^0,c
  7031  002D42  0E00               	movlw	0
  7032  002D44  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  7033  002D46  6E0C               	movwf	(??___xxtofl+1)^0,c
  7034  002D48  0E00               	movlw	0
  7035  002D4A  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  7036  002D4C  6E0D               	movwf	(??___xxtofl+2)^0,c
  7037  002D4E  0EFE               	movlw	254
  7038  002D50  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  7039  002D52  6E0E               	movwf	(??___xxtofl+3)^0,c
  7040  002D54  500B               	movf	??___xxtofl^0,w,c
  7041  002D56  100C               	iorwf	(??___xxtofl+1)^0,w,c
  7042  002D58  100D               	iorwf	(??___xxtofl+2)^0,w,c
  7043  002D5A  100E               	iorwf	(??___xxtofl+3)^0,w,c
  7044  002D5C  A4D8               	btfss	status,2,c
  7045  002D5E  EFB3  F016         	goto	u4981
  7046  002D62  EFB5  F016         	goto	u4980
  7047  002D66                     u4981:
  7048  002D66  EF98  F016         	goto	l4203
  7049  002D6A                     u4980:
  7050  002D6A  EFC3  F016         	goto	l837
  7051  002D6E                     l4207:
  7052  002D6E  2A10               	incf	___xxtofl@exp^0,f,c
  7053  002D70  0E01               	movlw	1
  7054  002D72  2611               	addwf	___xxtofl@arg^0,f,c
  7055  002D74  0E00               	movlw	0
  7056  002D76  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  7057  002D78  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  7058  002D7A  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  7059  002D7C  90D8               	bcf	status,0,c
  7060  002D7E  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  7061  002D80  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  7062  002D82  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  7063  002D84  3211               	rrcf	___xxtofl@arg^0,f,c
  7064  002D86                     l837:
  7065  002D86  0E00               	movlw	0
  7066  002D88  1411               	andwf	___xxtofl@arg^0,w,c
  7067  002D8A  6E0B               	movwf	??___xxtofl^0,c
  7068  002D8C  0E00               	movlw	0
  7069  002D8E  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  7070  002D90  6E0C               	movwf	(??___xxtofl+1)^0,c
  7071  002D92  0E00               	movlw	0
  7072  002D94  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  7073  002D96  6E0D               	movwf	(??___xxtofl+2)^0,c
  7074  002D98  0EFF               	movlw	255
  7075  002D9A  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  7076  002D9C  6E0E               	movwf	(??___xxtofl+3)^0,c
  7077  002D9E  500B               	movf	??___xxtofl^0,w,c
  7078  002DA0  100C               	iorwf	(??___xxtofl+1)^0,w,c
  7079  002DA2  100D               	iorwf	(??___xxtofl+2)^0,w,c
  7080  002DA4  100E               	iorwf	(??___xxtofl+3)^0,w,c
  7081  002DA6  A4D8               	btfss	status,2,c
  7082  002DA8  EFD8  F016         	goto	u4991
  7083  002DAC  EFDA  F016         	goto	u4990
  7084  002DB0                     u4991:
  7085  002DB0  EFB7  F016         	goto	l4207
  7086  002DB4                     u4990:
  7087  002DB4  EFE2  F016         	goto	l4215
  7088  002DB8                     l4213:
  7089  002DB8  0610               	decf	___xxtofl@exp^0,f,c
  7090  002DBA  90D8               	bcf	status,0,c
  7091  002DBC  3611               	rlcf	___xxtofl@arg^0,f,c
  7092  002DBE  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  7093  002DC0  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  7094  002DC2  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  7095  002DC4                     l4215:
  7096  002DC4  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  7097  002DC6  EFE7  F016         	goto	u5001
  7098  002DCA  EFE9  F016         	goto	u5000
  7099  002DCE                     u5001:
  7100  002DCE  EFF1  F016         	goto	l844
  7101  002DD2                     u5000:
  7102  002DD2  0E02               	movlw	2
  7103  002DD4  6010               	cpfslt	___xxtofl@exp^0,c
  7104  002DD6  EFEF  F016         	goto	u5011
  7105  002DDA  EFF1  F016         	goto	u5010
  7106  002DDE                     u5011:
  7107  002DDE  EFDC  F016         	goto	l4213
  7108  002DE2                     u5010:
  7109  002DE2                     l844:
  7110  002DE2  B010               	btfsc	___xxtofl@exp^0,0,c
  7111  002DE4  EFF6  F016         	goto	u5021
  7112  002DE8  EFF8  F016         	goto	u5020
  7113  002DEC                     u5021:
  7114  002DEC  EFF9  F016         	goto	l4221
  7115  002DF0                     u5020:
  7116  002DF0  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  7117  002DF2                     l4221:
  7118  002DF2  90D8               	bcf	status,0,c
  7119  002DF4  3210               	rrcf	___xxtofl@exp^0,f,c
  7120  002DF6  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  7121  002DFA  6A0C               	clrf	(??___xxtofl+1)^0,c
  7122  002DFC  6A0D               	clrf	(??___xxtofl+2)^0,c
  7123  002DFE  6A0E               	clrf	(??___xxtofl+3)^0,c
  7124  002E00  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  7125  002E04  6A0D               	clrf	(??___xxtofl+2)^0,c
  7126  002E06  6A0C               	clrf	(??___xxtofl+1)^0,c
  7127  002E08  6A0B               	clrf	??___xxtofl^0,c
  7128  002E0A  500B               	movf	??___xxtofl^0,w,c
  7129  002E0C  1211               	iorwf	___xxtofl@arg^0,f,c
  7130  002E0E  500C               	movf	(??___xxtofl+1)^0,w,c
  7131  002E10  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  7132  002E12  500D               	movf	(??___xxtofl+2)^0,w,c
  7133  002E14  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  7134  002E16  500E               	movf	(??___xxtofl+3)^0,w,c
  7135  002E18  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  7136  002E1A  500F               	movf	___xxtofl@sign^0,w,c
  7137  002E1C  B4D8               	btfsc	status,2,c
  7138  002E1E  EF13  F017         	goto	u5031
  7139  002E22  EF15  F017         	goto	u5030
  7140  002E26                     u5031:
  7141  002E26  EF1D  F017         	goto	l4231
  7142  002E2A                     u5030:
  7143  002E2A  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  7144  002E2C  EF1C  F017         	goto	u5040
  7145  002E30  EF1A  F017         	goto	u5041
  7146  002E34                     u5041:
  7147  002E34  EF1D  F017         	goto	l4231
  7148  002E38                     u5040:
  7149  002E38  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  7150  002E3A                     l4231:
  7151  002E3A  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  7152  002E3E  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  7153  002E42  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  7154  002E46  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  7155  002E4A                     l833:
  7156  002E4A  0012               	return		;funcret
  7157  002E4C                     __end_of___xxtofl:
  7158                           	callstack 0
  7159                           
  7160 ;; *************** function ___fltol *****************
  7161 ;; Defined at:
  7162 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;  f1              4   86[COMRAM] unsigned char 
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;  exp1            1    1[BANK0 ] unsigned char 
  7167 ;;  sign1           1    0[BANK0 ] unsigned char 
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  4   86[COMRAM] long 
  7170 ;; Registers used:
  7171 ;;		wreg, status,2, status,0
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7177 ;;      Params:         4       0       0       0       0       0       0       0       0
  7178 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7179 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7180 ;;      Totals:         8       2       0       0       0       0       0       0       0
  7181 ;;Total ram usage:       10 bytes
  7182 ;; Hardware stack levels used: 1
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_ReadADC
  7187 ;;		_efgtoa
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text29
  7192  002FDC                     __ptext29:
  7193                           	callstack 0
  7194  002FDC                     ___fltol:
  7195                           	callstack 26
  7196  002FDC  3459               	rlcf	(___fltol@f1+2)^0,w,c
  7197  002FDE  345A               	rlcf	(___fltol@f1+3)^0,w,c
  7198  002FE0  0100               	movlb	0	; () banked
  7199  002FE2  6F61               	movwf	___fltol@exp1& (0+255),b
  7200  002FE4  5161               	movf	___fltol@exp1& (0+255),w,b
  7201  002FE6  A4D8               	btfss	status,2,c
  7202  002FE8  EFF8  F017         	goto	u3711
  7203  002FEC  EFFA  F017         	goto	u3710
  7204  002FF0                     u3711:
  7205  002FF0  EF04  F018         	goto	l3487
  7206  002FF4                     u3710:
  7207  002FF4                     l3483:
  7208                           
  7209                           ; BSR set to: 0
  7210  002FF4  0E00               	movlw	0
  7211  002FF6  6E57               	movwf	?___fltol^0,c
  7212  002FF8  0E00               	movlw	0
  7213  002FFA  6E58               	movwf	(?___fltol+1)^0,c
  7214  002FFC  0E00               	movlw	0
  7215  002FFE  6E59               	movwf	(?___fltol+2)^0,c
  7216  003000  0E00               	movlw	0
  7217  003002  6E5A               	movwf	(?___fltol+3)^0,c
  7218  003004  EF71  F018         	goto	l472
  7219  003008                     l3487:
  7220                           
  7221                           ; BSR set to: 0
  7222  003008  C057  F05B         	movff	___fltol@f1,??___fltol
  7223  00300C  C058  F05C         	movff	___fltol@f1+1,??___fltol+1
  7224  003010  C059  F05D         	movff	___fltol@f1+2,??___fltol+2
  7225  003014  C05A  F05E         	movff	___fltol@f1+3,??___fltol+3
  7226  003018  0E20               	movlw	32
  7227  00301A  EF14  F018         	goto	u3720
  7228  00301E                     u3725:
  7229  00301E  90D8               	bcf	status,0,c
  7230  003020  325E               	rrcf	(??___fltol+3)^0,f,c
  7231  003022  325D               	rrcf	(??___fltol+2)^0,f,c
  7232  003024  325C               	rrcf	(??___fltol+1)^0,f,c
  7233  003026  325B               	rrcf	??___fltol^0,f,c
  7234  003028                     u3720:
  7235  003028  2EE8               	decfsz	wreg,f,c
  7236  00302A  EF0F  F018         	goto	u3725
  7237  00302E  505B               	movf	??___fltol^0,w,c
  7238  003030  6F60               	movwf	___fltol@sign1& (0+255),b
  7239  003032                     
  7240                           ; BSR set to: 0
  7241  003032  8E59               	bsf	(___fltol@f1+2)^0,7,c
  7242  003034                     
  7243                           ; BSR set to: 0
  7244  003034  0EFF               	movlw	255
  7245  003036  1657               	andwf	___fltol@f1^0,f,c
  7246  003038  0EFF               	movlw	255
  7247  00303A  1658               	andwf	(___fltol@f1+1)^0,f,c
  7248  00303C  0EFF               	movlw	255
  7249  00303E  1659               	andwf	(___fltol@f1+2)^0,f,c
  7250  003040  0E00               	movlw	0
  7251  003042  165A               	andwf	(___fltol@f1+3)^0,f,c
  7252  003044                     
  7253                           ; BSR set to: 0
  7254  003044  0E96               	movlw	150
  7255  003046  5F61               	subwf	___fltol@exp1& (0+255),f,b
  7256  003048                     
  7257                           ; BSR set to: 0
  7258  003048  BF61               	btfsc	___fltol@exp1& (0+255),7,b
  7259  00304A  EF2B  F018         	goto	u3730
  7260  00304E  EF29  F018         	goto	u3731
  7261  003052                     u3731:
  7262  003052  EF41  F018         	goto	l3507
  7263  003056                     u3730:
  7264  003056                     
  7265                           ; BSR set to: 0
  7266  003056  5161               	movf	___fltol@exp1& (0+255),w,b
  7267  003058  0A80               	xorlw	128
  7268  00305A  0F97               	addlw	151
  7269  00305C  B0D8               	btfsc	status,0,c
  7270  00305E  EF33  F018         	goto	u3741
  7271  003062  EF35  F018         	goto	u3740
  7272  003066                     u3741:
  7273  003066  EF37  F018         	goto	l3503
  7274  00306A                     u3740:
  7275  00306A  EFFA  F017         	goto	l3483
  7276  00306E                     l3503:
  7277                           
  7278                           ; BSR set to: 0
  7279  00306E  90D8               	bcf	status,0,c
  7280  003070  325A               	rrcf	(___fltol@f1+3)^0,f,c
  7281  003072  3259               	rrcf	(___fltol@f1+2)^0,f,c
  7282  003074  3258               	rrcf	(___fltol@f1+1)^0,f,c
  7283  003076  3257               	rrcf	___fltol@f1^0,f,c
  7284  003078                     
  7285                           ; BSR set to: 0
  7286  003078  3F61               	incfsz	___fltol@exp1& (0+255),f,b
  7287  00307A  EF37  F018         	goto	l3503
  7288  00307E  EF59  F018         	goto	l3517
  7289  003082                     l3507:
  7290                           
  7291                           ; BSR set to: 0
  7292  003082  0E1F               	movlw	31
  7293  003084  6561               	cpfsgt	___fltol@exp1& (0+255),b
  7294  003086  EF47  F018         	goto	u3751
  7295  00308A  EF49  F018         	goto	u3750
  7296  00308E                     u3751:
  7297  00308E  EF51  F018         	goto	l3515
  7298  003092                     u3750:
  7299  003092  EFFA  F017         	goto	l3483
  7300  003096                     l3513:
  7301                           
  7302                           ; BSR set to: 0
  7303  003096  90D8               	bcf	status,0,c
  7304  003098  3657               	rlcf	___fltol@f1^0,f,c
  7305  00309A  3658               	rlcf	(___fltol@f1+1)^0,f,c
  7306  00309C  3659               	rlcf	(___fltol@f1+2)^0,f,c
  7307  00309E  365A               	rlcf	(___fltol@f1+3)^0,f,c
  7308  0030A0  0761               	decf	___fltol@exp1& (0+255),f,b
  7309  0030A2                     l3515:
  7310                           
  7311                           ; BSR set to: 0
  7312  0030A2  5161               	movf	___fltol@exp1& (0+255),w,b
  7313  0030A4  A4D8               	btfss	status,2,c
  7314  0030A6  EF57  F018         	goto	u3761
  7315  0030AA  EF59  F018         	goto	u3760
  7316  0030AE                     u3761:
  7317  0030AE  EF4B  F018         	goto	l3513
  7318  0030B2                     u3760:
  7319  0030B2                     l3517:
  7320                           
  7321                           ; BSR set to: 0
  7322  0030B2  5160               	movf	___fltol@sign1& (0+255),w,b
  7323  0030B4  B4D8               	btfsc	status,2,c
  7324  0030B6  EF5F  F018         	goto	u3771
  7325  0030BA  EF61  F018         	goto	u3770
  7326  0030BE                     u3771:
  7327  0030BE  EF69  F018         	goto	l3521
  7328  0030C2                     u3770:
  7329  0030C2                     
  7330                           ; BSR set to: 0
  7331  0030C2  1E5A               	comf	(___fltol@f1+3)^0,f,c
  7332  0030C4  1E59               	comf	(___fltol@f1+2)^0,f,c
  7333  0030C6  1E58               	comf	(___fltol@f1+1)^0,f,c
  7334  0030C8  6C57               	negf	___fltol@f1^0,c
  7335  0030CA  0E00               	movlw	0
  7336  0030CC  2258               	addwfc	(___fltol@f1+1)^0,f,c
  7337  0030CE  2259               	addwfc	(___fltol@f1+2)^0,f,c
  7338  0030D0  225A               	addwfc	(___fltol@f1+3)^0,f,c
  7339  0030D2                     l3521:
  7340                           
  7341                           ; BSR set to: 0
  7342  0030D2  C057  F057         	movff	___fltol@f1,?___fltol
  7343  0030D6  C058  F058         	movff	___fltol@f1+1,?___fltol+1
  7344  0030DA  C059  F059         	movff	___fltol@f1+2,?___fltol+2
  7345  0030DE  C05A  F05A         	movff	___fltol@f1+3,?___fltol+3
  7346  0030E2                     l472:
  7347                           
  7348                           ; BSR set to: 0
  7349  0030E2  0012               	return		;funcret
  7350  0030E4                     __end_of___fltol:
  7351                           	callstack 0
  7352                           
  7353 ;; *************** function ___flmul *****************
  7354 ;; Defined at:
  7355 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;  b               4   20[COMRAM] long 
  7358 ;;  a               4   24[COMRAM] long 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  prod            4   39[COMRAM] struct .
  7361 ;;  grs             4   33[COMRAM] unsigned long 
  7362 ;;  temp            2   43[COMRAM] struct .
  7363 ;;  bexp            1   38[COMRAM] unsigned char 
  7364 ;;  aexp            1   37[COMRAM] unsigned char 
  7365 ;;  sign            1   32[COMRAM] unsigned char 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  4   20[COMRAM] unsigned char 
  7368 ;; Registers used:
  7369 ;;		wreg, status,2, status,0, prodl, prodh
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7375 ;;      Params:         8       0       0       0       0       0       0       0       0
  7376 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7377 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7378 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7379 ;;Total ram usage:       25 bytes
  7380 ;; Hardware stack levels used: 1
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_ReadADC
  7385 ;;		_efgtoa
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           	psect	text30
  7390  0022C2                     __ptext30:
  7391                           	callstack 0
  7392  0022C2                     ___flmul:
  7393                           	callstack 26
  7394  0022C2  5018               	movf	(___flmul@b+3)^0,w,c
  7395  0022C4  0B80               	andlw	128
  7396  0022C6  6E21               	movwf	___flmul@sign^0,c
  7397  0022C8  5018               	movf	(___flmul@b+3)^0,w,c
  7398  0022CA  2418               	addwf	(___flmul@b+3)^0,w,c
  7399  0022CC  6E27               	movwf	___flmul@bexp^0,c
  7400  0022CE  AE17               	btfss	(___flmul@b+2)^0,7,c
  7401  0022D0  EF6C  F011         	goto	u3311
  7402  0022D4  EF6E  F011         	goto	u3310
  7403  0022D8                     u3311:
  7404  0022D8  EF6F  F011         	goto	l3225
  7405  0022DC                     u3310:
  7406  0022DC  8027               	bsf	___flmul@bexp^0,0,c
  7407  0022DE                     l3225:
  7408  0022DE  5027               	movf	___flmul@bexp^0,w,c
  7409  0022E0  B4D8               	btfsc	status,2,c
  7410  0022E2  EF75  F011         	goto	u3321
  7411  0022E6  EF77  F011         	goto	u3320
  7412  0022EA                     u3321:
  7413  0022EA  EF8A  F011         	goto	l3233
  7414  0022EE                     u3320:
  7415  0022EE  2827               	incf	___flmul@bexp^0,w,c
  7416  0022F0  A4D8               	btfss	status,2,c
  7417  0022F2  EF7D  F011         	goto	u3331
  7418  0022F6  EF7F  F011         	goto	u3330
  7419  0022FA                     u3331:
  7420  0022FA  EF87  F011         	goto	l3231
  7421  0022FE                     u3330:
  7422  0022FE  0E00               	movlw	0
  7423  002300  6E15               	movwf	___flmul@b^0,c
  7424  002302  0E00               	movlw	0
  7425  002304  6E16               	movwf	(___flmul@b+1)^0,c
  7426  002306  0E00               	movlw	0
  7427  002308  6E17               	movwf	(___flmul@b+2)^0,c
  7428  00230A  0E00               	movlw	0
  7429  00230C  6E18               	movwf	(___flmul@b+3)^0,c
  7430  00230E                     l3231:
  7431  00230E  8E17               	bsf	(___flmul@b+2)^0,7,c
  7432  002310  EF92  F011         	goto	l3235
  7433  002314                     l3233:
  7434  002314  0E00               	movlw	0
  7435  002316  6E15               	movwf	___flmul@b^0,c
  7436  002318  0E00               	movlw	0
  7437  00231A  6E16               	movwf	(___flmul@b+1)^0,c
  7438  00231C  0E00               	movlw	0
  7439  00231E  6E17               	movwf	(___flmul@b+2)^0,c
  7440  002320  0E00               	movlw	0
  7441  002322  6E18               	movwf	(___flmul@b+3)^0,c
  7442  002324                     l3235:
  7443  002324  501C               	movf	(___flmul@a+3)^0,w,c
  7444  002326  0B80               	andlw	128
  7445  002328  1A21               	xorwf	___flmul@sign^0,f,c
  7446  00232A  501C               	movf	(___flmul@a+3)^0,w,c
  7447  00232C  241C               	addwf	(___flmul@a+3)^0,w,c
  7448  00232E  6E26               	movwf	___flmul@aexp^0,c
  7449  002330  AE1B               	btfss	(___flmul@a+2)^0,7,c
  7450  002332  EF9D  F011         	goto	u3341
  7451  002336  EF9F  F011         	goto	u3340
  7452  00233A                     u3341:
  7453  00233A  EFA0  F011         	goto	l3243
  7454  00233E                     u3340:
  7455  00233E  8026               	bsf	___flmul@aexp^0,0,c
  7456  002340                     l3243:
  7457  002340  5026               	movf	___flmul@aexp^0,w,c
  7458  002342  B4D8               	btfsc	status,2,c
  7459  002344  EFA6  F011         	goto	u3351
  7460  002348  EFA8  F011         	goto	u3350
  7461  00234C                     u3351:
  7462  00234C  EFBB  F011         	goto	l3251
  7463  002350                     u3350:
  7464  002350  2826               	incf	___flmul@aexp^0,w,c
  7465  002352  A4D8               	btfss	status,2,c
  7466  002354  EFAE  F011         	goto	u3361
  7467  002358  EFB0  F011         	goto	u3360
  7468  00235C                     u3361:
  7469  00235C  EFB8  F011         	goto	l3249
  7470  002360                     u3360:
  7471  002360  0E00               	movlw	0
  7472  002362  6E19               	movwf	___flmul@a^0,c
  7473  002364  0E00               	movlw	0
  7474  002366  6E1A               	movwf	(___flmul@a+1)^0,c
  7475  002368  0E00               	movlw	0
  7476  00236A  6E1B               	movwf	(___flmul@a+2)^0,c
  7477  00236C  0E00               	movlw	0
  7478  00236E  6E1C               	movwf	(___flmul@a+3)^0,c
  7479  002370                     l3249:
  7480  002370  8E1B               	bsf	(___flmul@a+2)^0,7,c
  7481  002372  EFC3  F011         	goto	l789
  7482  002376                     l3251:
  7483  002376  0E00               	movlw	0
  7484  002378  6E19               	movwf	___flmul@a^0,c
  7485  00237A  0E00               	movlw	0
  7486  00237C  6E1A               	movwf	(___flmul@a+1)^0,c
  7487  00237E  0E00               	movlw	0
  7488  002380  6E1B               	movwf	(___flmul@a+2)^0,c
  7489  002382  0E00               	movlw	0
  7490  002384  6E1C               	movwf	(___flmul@a+3)^0,c
  7491  002386                     l789:
  7492  002386  5026               	movf	___flmul@aexp^0,w,c
  7493  002388  B4D8               	btfsc	status,2,c
  7494  00238A  EFC9  F011         	goto	u3371
  7495  00238E  EFCB  F011         	goto	u3370
  7496  002392                     u3371:
  7497  002392  EFD3  F011         	goto	l3255
  7498  002396                     u3370:
  7499  002396  5027               	movf	___flmul@bexp^0,w,c
  7500  002398  A4D8               	btfss	status,2,c
  7501  00239A  EFD1  F011         	goto	u3381
  7502  00239E  EFD3  F011         	goto	u3380
  7503  0023A2                     u3381:
  7504  0023A2  EFDD  F011         	goto	l3259
  7505  0023A6                     u3380:
  7506  0023A6                     l3255:
  7507  0023A6  0E00               	movlw	0
  7508  0023A8  6E15               	movwf	?___flmul^0,c
  7509  0023AA  0E00               	movlw	0
  7510  0023AC  6E16               	movwf	(?___flmul+1)^0,c
  7511  0023AE  0E00               	movlw	0
  7512  0023B0  6E17               	movwf	(?___flmul+2)^0,c
  7513  0023B2  0E00               	movlw	0
  7514  0023B4  6E18               	movwf	(?___flmul+3)^0,c
  7515  0023B6  EF75  F013         	goto	l793
  7516  0023BA                     l3259:
  7517  0023BA  501B               	movf	(___flmul@a+2)^0,w,c
  7518  0023BC  0215               	mulwf	___flmul@b^0,c
  7519  0023BE  CFF3 F02C          	movff	prodl,___flmul@temp
  7520  0023C2  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7521  0023C6  502C               	movf	___flmul@temp^0,w,c
  7522  0023C8  6E22               	movwf	___flmul@grs^0,c
  7523  0023CA  6A23               	clrf	(___flmul@grs+1)^0,c
  7524  0023CC  6A24               	clrf	(___flmul@grs+2)^0,c
  7525  0023CE  6A25               	clrf	(___flmul@grs+3)^0,c
  7526  0023D0  502D               	movf	(___flmul@temp+1)^0,w,c
  7527  0023D2  6E28               	movwf	___flmul@prod^0,c
  7528  0023D4  6A29               	clrf	(___flmul@prod+1)^0,c
  7529  0023D6  6A2A               	clrf	(___flmul@prod+2)^0,c
  7530  0023D8  6A2B               	clrf	(___flmul@prod+3)^0,c
  7531  0023DA  501A               	movf	(___flmul@a+1)^0,w,c
  7532  0023DC  0216               	mulwf	(___flmul@b+1)^0,c
  7533  0023DE  CFF3 F02C          	movff	prodl,___flmul@temp
  7534  0023E2  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7535  0023E6  502C               	movf	___flmul@temp^0,w,c
  7536  0023E8  2622               	addwf	___flmul@grs^0,f,c
  7537  0023EA  0E00               	movlw	0
  7538  0023EC  2223               	addwfc	(___flmul@grs+1)^0,f,c
  7539  0023EE  2224               	addwfc	(___flmul@grs+2)^0,f,c
  7540  0023F0  2225               	addwfc	(___flmul@grs+3)^0,f,c
  7541  0023F2  502D               	movf	(___flmul@temp+1)^0,w,c
  7542  0023F4  2628               	addwf	___flmul@prod^0,f,c
  7543  0023F6  0E00               	movlw	0
  7544  0023F8  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7545  0023FA  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7546  0023FC  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7547  0023FE  5019               	movf	___flmul@a^0,w,c
  7548  002400  0217               	mulwf	(___flmul@b+2)^0,c
  7549  002402  CFF3 F02C          	movff	prodl,___flmul@temp
  7550  002406  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7551  00240A  502C               	movf	___flmul@temp^0,w,c
  7552  00240C  2622               	addwf	___flmul@grs^0,f,c
  7553  00240E  0E00               	movlw	0
  7554  002410  2223               	addwfc	(___flmul@grs+1)^0,f,c
  7555  002412  2224               	addwfc	(___flmul@grs+2)^0,f,c
  7556  002414  2225               	addwfc	(___flmul@grs+3)^0,f,c
  7557  002416  502D               	movf	(___flmul@temp+1)^0,w,c
  7558  002418  2628               	addwf	___flmul@prod^0,f,c
  7559  00241A  0E00               	movlw	0
  7560  00241C  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7561  00241E  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7562  002420  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7563  002422  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7564  002426  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7565  00242A  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7566  00242E  6A22               	clrf	___flmul@grs^0,c
  7567  002430  5019               	movf	___flmul@a^0,w,c
  7568  002432  0216               	mulwf	(___flmul@b+1)^0,c
  7569  002434  CFF3 F02C          	movff	prodl,___flmul@temp
  7570  002438  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7571  00243C  502C               	movf	___flmul@temp^0,w,c
  7572  00243E  2622               	addwf	___flmul@grs^0,f,c
  7573  002440  502D               	movf	(___flmul@temp+1)^0,w,c
  7574  002442  2223               	addwfc	(___flmul@grs+1)^0,f,c
  7575  002444  0E00               	movlw	0
  7576  002446  2224               	addwfc	(___flmul@grs+2)^0,f,c
  7577  002448  0E00               	movlw	0
  7578  00244A  2225               	addwfc	(___flmul@grs+3)^0,f,c
  7579  00244C  501A               	movf	(___flmul@a+1)^0,w,c
  7580  00244E  0215               	mulwf	___flmul@b^0,c
  7581  002450  CFF3 F02C          	movff	prodl,___flmul@temp
  7582  002454  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7583  002458  502C               	movf	___flmul@temp^0,w,c
  7584  00245A  2622               	addwf	___flmul@grs^0,f,c
  7585  00245C  502D               	movf	(___flmul@temp+1)^0,w,c
  7586  00245E  2223               	addwfc	(___flmul@grs+1)^0,f,c
  7587  002460  0E00               	movlw	0
  7588  002462  2224               	addwfc	(___flmul@grs+2)^0,f,c
  7589  002464  0E00               	movlw	0
  7590  002466  2225               	addwfc	(___flmul@grs+3)^0,f,c
  7591  002468  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7592  00246C  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7593  002470  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7594  002474  6A22               	clrf	___flmul@grs^0,c
  7595  002476  5019               	movf	___flmul@a^0,w,c
  7596  002478  0215               	mulwf	___flmul@b^0,c
  7597  00247A  CFF3 F02C          	movff	prodl,___flmul@temp
  7598  00247E  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7599  002482  502C               	movf	___flmul@temp^0,w,c
  7600  002484  2622               	addwf	___flmul@grs^0,f,c
  7601  002486  502D               	movf	(___flmul@temp+1)^0,w,c
  7602  002488  2223               	addwfc	(___flmul@grs+1)^0,f,c
  7603  00248A  0E00               	movlw	0
  7604  00248C  2224               	addwfc	(___flmul@grs+2)^0,f,c
  7605  00248E  0E00               	movlw	0
  7606  002490  2225               	addwfc	(___flmul@grs+3)^0,f,c
  7607  002492  501B               	movf	(___flmul@a+2)^0,w,c
  7608  002494  0216               	mulwf	(___flmul@b+1)^0,c
  7609  002496  CFF3 F02C          	movff	prodl,___flmul@temp
  7610  00249A  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7611  00249E  502C               	movf	___flmul@temp^0,w,c
  7612  0024A0  2628               	addwf	___flmul@prod^0,f,c
  7613  0024A2  502D               	movf	(___flmul@temp+1)^0,w,c
  7614  0024A4  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7615  0024A6  0E00               	movlw	0
  7616  0024A8  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7617  0024AA  0E00               	movlw	0
  7618  0024AC  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7619  0024AE  501A               	movf	(___flmul@a+1)^0,w,c
  7620  0024B0  0217               	mulwf	(___flmul@b+2)^0,c
  7621  0024B2  CFF3 F02C          	movff	prodl,___flmul@temp
  7622  0024B6  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7623  0024BA  502C               	movf	___flmul@temp^0,w,c
  7624  0024BC  2628               	addwf	___flmul@prod^0,f,c
  7625  0024BE  502D               	movf	(___flmul@temp+1)^0,w,c
  7626  0024C0  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7627  0024C2  0E00               	movlw	0
  7628  0024C4  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7629  0024C6  0E00               	movlw	0
  7630  0024C8  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7631  0024CA  501B               	movf	(___flmul@a+2)^0,w,c
  7632  0024CC  0217               	mulwf	(___flmul@b+2)^0,c
  7633  0024CE  CFF3 F02C          	movff	prodl,___flmul@temp
  7634  0024D2  CFF4 F02D          	movff	prodh,___flmul@temp+1
  7635  0024D6  502C               	movf	___flmul@temp^0,w,c
  7636  0024D8  6E1D               	movwf	??___flmul^0,c
  7637  0024DA  502D               	movf	(___flmul@temp+1)^0,w,c
  7638  0024DC  6E1E               	movwf	(??___flmul+1)^0,c
  7639  0024DE  6A1F               	clrf	(??___flmul+2)^0,c
  7640  0024E0  6A20               	clrf	(??___flmul+3)^0,c
  7641  0024E2  C01F  F020         	movff	??___flmul+2,??___flmul+3
  7642  0024E6  C01E  F01F         	movff	??___flmul+1,??___flmul+2
  7643  0024EA  C01D  F01E         	movff	??___flmul,??___flmul+1
  7644  0024EE  6A1D               	clrf	??___flmul^0,c
  7645  0024F0  501D               	movf	??___flmul^0,w,c
  7646  0024F2  2628               	addwf	___flmul@prod^0,f,c
  7647  0024F4  501E               	movf	(??___flmul+1)^0,w,c
  7648  0024F6  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7649  0024F8  501F               	movf	(??___flmul+2)^0,w,c
  7650  0024FA  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7651  0024FC  5020               	movf	(??___flmul+3)^0,w,c
  7652  0024FE  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7653  002500  C022  F01D         	movff	___flmul@grs,??___flmul
  7654  002504  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
  7655  002508  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
  7656  00250C  C025  F020         	movff	___flmul@grs+3,??___flmul+3
  7657  002510  0E19               	movlw	25
  7658  002512  EF90  F012         	goto	u3390
  7659  002516                     u3395:
  7660  002516  90D8               	bcf	status,0,c
  7661  002518  3220               	rrcf	(??___flmul+3)^0,f,c
  7662  00251A  321F               	rrcf	(??___flmul+2)^0,f,c
  7663  00251C  321E               	rrcf	(??___flmul+1)^0,f,c
  7664  00251E  321D               	rrcf	??___flmul^0,f,c
  7665  002520                     u3390:
  7666  002520  2EE8               	decfsz	wreg,f,c
  7667  002522  EF8B  F012         	goto	u3395
  7668  002526  501D               	movf	??___flmul^0,w,c
  7669  002528  2628               	addwf	___flmul@prod^0,f,c
  7670  00252A  501E               	movf	(??___flmul+1)^0,w,c
  7671  00252C  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7672  00252E  501F               	movf	(??___flmul+2)^0,w,c
  7673  002530  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7674  002532  5020               	movf	(??___flmul+3)^0,w,c
  7675  002534  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7676  002536  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  7677  00253A  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  7678  00253E  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  7679  002542  6A22               	clrf	___flmul@grs^0,c
  7680  002544  5026               	movf	___flmul@aexp^0,w,c
  7681  002546  C027  F01D         	movff	___flmul@bexp,??___flmul
  7682  00254A  6A1E               	clrf	(??___flmul+1)^0,c
  7683  00254C  261D               	addwf	??___flmul^0,f,c
  7684  00254E  0E00               	movlw	0
  7685  002550  221E               	addwfc	(??___flmul+1)^0,f,c
  7686  002552  0E82               	movlw	130
  7687  002554  241D               	addwf	??___flmul^0,w,c
  7688  002556  6E2C               	movwf	___flmul@temp^0,c
  7689  002558  0EFF               	movlw	255
  7690  00255A  201E               	addwfc	(??___flmul+1)^0,w,c
  7691  00255C  6E2D               	movwf	(___flmul@temp+1)^0,c
  7692  00255E  EFC6  F012         	goto	l3307
  7693  002562                     l3301:
  7694  002562  90D8               	bcf	status,0,c
  7695  002564  3628               	rlcf	___flmul@prod^0,f,c
  7696  002566  3629               	rlcf	(___flmul@prod+1)^0,f,c
  7697  002568  362A               	rlcf	(___flmul@prod+2)^0,f,c
  7698  00256A  362B               	rlcf	(___flmul@prod+3)^0,f,c
  7699  00256C  AE25               	btfss	(___flmul@grs+3)^0,7,c
  7700  00256E  EFBB  F012         	goto	u3401
  7701  002572  EFBD  F012         	goto	u3400
  7702  002576                     u3401:
  7703  002576  EFBE  F012         	goto	l796
  7704  00257A                     u3400:
  7705  00257A  8028               	bsf	___flmul@prod^0,0,c
  7706  00257C                     l796:
  7707  00257C  90D8               	bcf	status,0,c
  7708  00257E  3622               	rlcf	___flmul@grs^0,f,c
  7709  002580  3623               	rlcf	(___flmul@grs+1)^0,f,c
  7710  002582  3624               	rlcf	(___flmul@grs+2)^0,f,c
  7711  002584  3625               	rlcf	(___flmul@grs+3)^0,f,c
  7712  002586  062C               	decf	___flmul@temp^0,f,c
  7713  002588  A0D8               	btfss	status,0,c
  7714  00258A  062D               	decf	(___flmul@temp+1)^0,f,c
  7715  00258C                     l3307:
  7716  00258C  AE2A               	btfss	(___flmul@prod+2)^0,7,c
  7717  00258E  EFCB  F012         	goto	u3411
  7718  002592  EFCD  F012         	goto	u3410
  7719  002596                     u3411:
  7720  002596  EFB1  F012         	goto	l3301
  7721  00259A                     u3410:
  7722  00259A  0E00               	movlw	0
  7723  00259C  6E26               	movwf	___flmul@aexp^0,c
  7724  00259E  AE25               	btfss	(___flmul@grs+3)^0,7,c
  7725  0025A0  EFD4  F012         	goto	u3421
  7726  0025A4  EFD6  F012         	goto	u3420
  7727  0025A8                     u3421:
  7728  0025A8  EFFA  F012         	goto	l798
  7729  0025AC                     u3420:
  7730  0025AC  0EFF               	movlw	255
  7731  0025AE  1422               	andwf	___flmul@grs^0,w,c
  7732  0025B0  6E1D               	movwf	??___flmul^0,c
  7733  0025B2  0EFF               	movlw	255
  7734  0025B4  1423               	andwf	(___flmul@grs+1)^0,w,c
  7735  0025B6  6E1E               	movwf	(??___flmul+1)^0,c
  7736  0025B8  0EFF               	movlw	255
  7737  0025BA  1424               	andwf	(___flmul@grs+2)^0,w,c
  7738  0025BC  6E1F               	movwf	(??___flmul+2)^0,c
  7739  0025BE  0E7F               	movlw	127
  7740  0025C0  1425               	andwf	(___flmul@grs+3)^0,w,c
  7741  0025C2  6E20               	movwf	(??___flmul+3)^0,c
  7742  0025C4  501D               	movf	??___flmul^0,w,c
  7743  0025C6  101E               	iorwf	(??___flmul+1)^0,w,c
  7744  0025C8  101F               	iorwf	(??___flmul+2)^0,w,c
  7745  0025CA  1020               	iorwf	(??___flmul+3)^0,w,c
  7746  0025CC  B4D8               	btfsc	status,2,c
  7747  0025CE  EFEB  F012         	goto	u3431
  7748  0025D2  EFED  F012         	goto	u3430
  7749  0025D6                     u3431:
  7750  0025D6  EFF1  F012         	goto	l799
  7751  0025DA                     u3430:
  7752  0025DA                     l3315:
  7753  0025DA  0E01               	movlw	1
  7754  0025DC  6E26               	movwf	___flmul@aexp^0,c
  7755  0025DE  EFFA  F012         	goto	l798
  7756  0025E2                     l799:
  7757  0025E2  A028               	btfss	___flmul@prod^0,0,c
  7758  0025E4  EFF6  F012         	goto	u3441
  7759  0025E8  EFF8  F012         	goto	u3440
  7760  0025EC                     u3441:
  7761  0025EC  EFFA  F012         	goto	l798
  7762  0025F0                     u3440:
  7763  0025F0  EFED  F012         	goto	l3315
  7764  0025F4                     l798:
  7765  0025F4  5026               	movf	___flmul@aexp^0,w,c
  7766  0025F6  B4D8               	btfsc	status,2,c
  7767  0025F8  EF00  F013         	goto	u3451
  7768  0025FC  EF02  F013         	goto	u3450
  7769  002600                     u3451:
  7770  002600  EF26  F013         	goto	l3327
  7771  002604                     u3450:
  7772  002604  0E01               	movlw	1
  7773  002606  2628               	addwf	___flmul@prod^0,f,c
  7774  002608  0E00               	movlw	0
  7775  00260A  2229               	addwfc	(___flmul@prod+1)^0,f,c
  7776  00260C  222A               	addwfc	(___flmul@prod+2)^0,f,c
  7777  00260E  222B               	addwfc	(___flmul@prod+3)^0,f,c
  7778  002610  A02B               	btfss	(___flmul@prod+3)^0,0,c
  7779  002612  EF0D  F013         	goto	u3461
  7780  002616  EF0F  F013         	goto	u3460
  7781  00261A                     u3461:
  7782  00261A  EF26  F013         	goto	l3327
  7783  00261E                     u3460:
  7784  00261E  C028  F01D         	movff	___flmul@prod,??___flmul
  7785  002622  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
  7786  002626  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
  7787  00262A  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
  7788  00262E  3420               	rlcf	(??___flmul+3)^0,w,c
  7789  002630  3220               	rrcf	(??___flmul+3)^0,f,c
  7790  002632  321F               	rrcf	(??___flmul+2)^0,f,c
  7791  002634  321E               	rrcf	(??___flmul+1)^0,f,c
  7792  002636  321D               	rrcf	??___flmul^0,f,c
  7793  002638  C01D  F028         	movff	??___flmul,___flmul@prod
  7794  00263C  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
  7795  002640  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
  7796  002644  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
  7797  002648  4A2C               	infsnz	___flmul@temp^0,f,c
  7798  00264A  2A2D               	incf	(___flmul@temp+1)^0,f,c
  7799  00264C                     l3327:
  7800  00264C  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  7801  00264E  EF31  F013         	goto	u3471
  7802  002652  502D               	movf	(___flmul@temp+1)^0,w,c
  7803  002654  E108               	bnz	u3470
  7804  002656  282C               	incf	___flmul@temp^0,w,c
  7805  002658  A0D8               	btfss	status,0,c
  7806  00265A  EF31  F013         	goto	u3471
  7807  00265E  EF33  F013         	goto	u3470
  7808  002662                     u3471:
  7809  002662  EF3D  F013         	goto	l3331
  7810  002666                     u3470:
  7811  002666  0E00               	movlw	0
  7812  002668  6E28               	movwf	___flmul@prod^0,c
  7813  00266A  0E00               	movlw	0
  7814  00266C  6E29               	movwf	(___flmul@prod+1)^0,c
  7815  00266E  0E80               	movlw	128
  7816  002670  6E2A               	movwf	(___flmul@prod+2)^0,c
  7817  002672  0E7F               	movlw	127
  7818  002674  6E2B               	movwf	(___flmul@prod+3)^0,c
  7819  002676  EF6B  F013         	goto	l3343
  7820  00267A                     l3331:
  7821  00267A  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
  7822  00267C  EF4A  F013         	goto	u3480
  7823  002680  502D               	movf	(___flmul@temp+1)^0,w,c
  7824  002682  E106               	bnz	u3481
  7825  002684  042C               	decf	___flmul@temp^0,w,c
  7826  002686  B0D8               	btfsc	status,0,c
  7827  002688  EF48  F013         	goto	u3481
  7828  00268C  EF4A  F013         	goto	u3480
  7829  002690                     u3481:
  7830  002690  EF56  F013         	goto	l806
  7831  002694                     u3480:
  7832  002694  0E00               	movlw	0
  7833  002696  6E28               	movwf	___flmul@prod^0,c
  7834  002698  0E00               	movlw	0
  7835  00269A  6E29               	movwf	(___flmul@prod+1)^0,c
  7836  00269C  0E00               	movlw	0
  7837  00269E  6E2A               	movwf	(___flmul@prod+2)^0,c
  7838  0026A0  0E00               	movlw	0
  7839  0026A2  6E2B               	movwf	(___flmul@prod+3)^0,c
  7840  0026A4  0E00               	movlw	0
  7841  0026A6  6E21               	movwf	___flmul@sign^0,c
  7842  0026A8  EF6B  F013         	goto	l3343
  7843  0026AC                     l806:
  7844  0026AC  C02C  F027         	movff	___flmul@temp,___flmul@bexp
  7845  0026B0  0EFF               	movlw	255
  7846  0026B2  1628               	andwf	___flmul@prod^0,f,c
  7847  0026B4  0EFF               	movlw	255
  7848  0026B6  1629               	andwf	(___flmul@prod+1)^0,f,c
  7849  0026B8  0E7F               	movlw	127
  7850  0026BA  162A               	andwf	(___flmul@prod+2)^0,f,c
  7851  0026BC  0E00               	movlw	0
  7852  0026BE  162B               	andwf	(___flmul@prod+3)^0,f,c
  7853  0026C0  A027               	btfss	___flmul@bexp^0,0,c
  7854  0026C2  EF65  F013         	goto	u3491
  7855  0026C6  EF67  F013         	goto	u3490
  7856  0026CA                     u3491:
  7857  0026CA  EF68  F013         	goto	l3341
  7858  0026CE                     u3490:
  7859  0026CE  8E2A               	bsf	(___flmul@prod+2)^0,7,c
  7860  0026D0                     l3341:
  7861  0026D0  90D8               	bcf	status,0,c
  7862  0026D2  3027               	rrcf	___flmul@bexp^0,w,c
  7863  0026D4  6E2B               	movwf	(___flmul@prod+3)^0,c
  7864  0026D6                     l3343:
  7865  0026D6  5021               	movf	___flmul@sign^0,w,c
  7866  0026D8  122B               	iorwf	(___flmul@prod+3)^0,f,c
  7867  0026DA  C028  F015         	movff	___flmul@prod,?___flmul
  7868  0026DE  C029  F016         	movff	___flmul@prod+1,?___flmul+1
  7869  0026E2  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
  7870  0026E6  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
  7871  0026EA                     l793:
  7872  0026EA  0012               	return		;funcret
  7873  0026EC                     __end_of___flmul:
  7874                           	callstack 0
  7875                           
  7876 ;; *************** function ___fldiv *****************
  7877 ;; Defined at:
  7878 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  b               4   45[COMRAM] unsigned char 
  7881 ;;  a               4   49[COMRAM] unsigned char 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  grs             4   64[COMRAM] unsigned long 
  7884 ;;  rem             4   57[COMRAM] unsigned long 
  7885 ;;  new_exp         2   62[COMRAM] short 
  7886 ;;  aexp            1   69[COMRAM] unsigned char 
  7887 ;;  bexp            1   68[COMRAM] unsigned char 
  7888 ;;  sign            1   61[COMRAM] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  4   45[COMRAM] unsigned char 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7898 ;;      Params:         8       0       0       0       0       0       0       0       0
  7899 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7900 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7901 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7902 ;;Total ram usage:       25 bytes
  7903 ;; Hardware stack levels used: 1
  7904 ;; This function calls:
  7905 ;;		Nothing
  7906 ;; This function is called by:
  7907 ;;		_ReadADC
  7908 ;;		_efgtoa
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text31
  7913  0026EC                     __ptext31:
  7914                           	callstack 0
  7915  0026EC                     ___fldiv:
  7916                           	callstack 26
  7917  0026EC  5031               	movf	(___fldiv@b+3)^0,w,c
  7918  0026EE  0B80               	andlw	128
  7919  0026F0  6E3E               	movwf	___fldiv@sign^0,c
  7920  0026F2  5031               	movf	(___fldiv@b+3)^0,w,c
  7921  0026F4  2431               	addwf	(___fldiv@b+3)^0,w,c
  7922  0026F6  6E45               	movwf	___fldiv@bexp^0,c
  7923  0026F8  AE30               	btfss	(___fldiv@b+2)^0,7,c
  7924  0026FA  EF81  F013         	goto	u3081
  7925  0026FE  EF83  F013         	goto	u3080
  7926  002702                     u3081:
  7927  002702  EF84  F013         	goto	l3087
  7928  002706                     u3080:
  7929  002706  8045               	bsf	___fldiv@bexp^0,0,c
  7930  002708                     l3087:
  7931  002708  5045               	movf	___fldiv@bexp^0,w,c
  7932  00270A  B4D8               	btfsc	status,2,c
  7933  00270C  EF8A  F013         	goto	u3091
  7934  002710  EF8C  F013         	goto	u3090
  7935  002714                     u3091:
  7936  002714  EFA1  F013         	goto	l3097
  7937  002718                     u3090:
  7938  002718  2845               	incf	___fldiv@bexp^0,w,c
  7939  00271A  A4D8               	btfss	status,2,c
  7940  00271C  EF92  F013         	goto	u3101
  7941  002720  EF94  F013         	goto	u3100
  7942  002724                     u3101:
  7943  002724  EF9C  F013         	goto	l3093
  7944  002728                     u3100:
  7945  002728  0E00               	movlw	0
  7946  00272A  6E2E               	movwf	___fldiv@b^0,c
  7947  00272C  0E00               	movlw	0
  7948  00272E  6E2F               	movwf	(___fldiv@b+1)^0,c
  7949  002730  0E00               	movlw	0
  7950  002732  6E30               	movwf	(___fldiv@b+2)^0,c
  7951  002734  0E00               	movlw	0
  7952  002736  6E31               	movwf	(___fldiv@b+3)^0,c
  7953  002738                     l3093:
  7954  002738  8E30               	bsf	(___fldiv@b+2)^0,7,c
  7955  00273A  0E00               	movlw	0
  7956  00273C  6E31               	movwf	(___fldiv@b+3)^0,c
  7957  00273E  EFA9  F013         	goto	l3099
  7958  002742                     l3097:
  7959  002742  0E00               	movlw	0
  7960  002744  6E2E               	movwf	___fldiv@b^0,c
  7961  002746  0E00               	movlw	0
  7962  002748  6E2F               	movwf	(___fldiv@b+1)^0,c
  7963  00274A  0E00               	movlw	0
  7964  00274C  6E30               	movwf	(___fldiv@b+2)^0,c
  7965  00274E  0E00               	movlw	0
  7966  002750  6E31               	movwf	(___fldiv@b+3)^0,c
  7967  002752                     l3099:
  7968  002752  5035               	movf	(___fldiv@a+3)^0,w,c
  7969  002754  0B80               	andlw	128
  7970  002756  1A3E               	xorwf	___fldiv@sign^0,f,c
  7971  002758  5035               	movf	(___fldiv@a+3)^0,w,c
  7972  00275A  2435               	addwf	(___fldiv@a+3)^0,w,c
  7973  00275C  6E46               	movwf	___fldiv@aexp^0,c
  7974  00275E  AE34               	btfss	(___fldiv@a+2)^0,7,c
  7975  002760  EFB4  F013         	goto	u3111
  7976  002764  EFB6  F013         	goto	u3110
  7977  002768                     u3111:
  7978  002768  EFB7  F013         	goto	l3107
  7979  00276C                     u3110:
  7980  00276C  8046               	bsf	___fldiv@aexp^0,0,c
  7981  00276E                     l3107:
  7982  00276E  5046               	movf	___fldiv@aexp^0,w,c
  7983  002770  B4D8               	btfsc	status,2,c
  7984  002772  EFBD  F013         	goto	u3121
  7985  002776  EFBF  F013         	goto	u3120
  7986  00277A                     u3121:
  7987  00277A  EFD4  F013         	goto	l3117
  7988  00277E                     u3120:
  7989  00277E  2846               	incf	___fldiv@aexp^0,w,c
  7990  002780  A4D8               	btfss	status,2,c
  7991  002782  EFC5  F013         	goto	u3131
  7992  002786  EFC7  F013         	goto	u3130
  7993  00278A                     u3131:
  7994  00278A  EFCF  F013         	goto	l3113
  7995  00278E                     u3130:
  7996  00278E  0E00               	movlw	0
  7997  002790  6E32               	movwf	___fldiv@a^0,c
  7998  002792  0E00               	movlw	0
  7999  002794  6E33               	movwf	(___fldiv@a+1)^0,c
  8000  002796  0E00               	movlw	0
  8001  002798  6E34               	movwf	(___fldiv@a+2)^0,c
  8002  00279A  0E00               	movlw	0
  8003  00279C  6E35               	movwf	(___fldiv@a+3)^0,c
  8004  00279E                     l3113:
  8005  00279E  8E34               	bsf	(___fldiv@a+2)^0,7,c
  8006  0027A0  0E00               	movlw	0
  8007  0027A2  6E35               	movwf	(___fldiv@a+3)^0,c
  8008  0027A4  EFDC  F013         	goto	l3119
  8009  0027A8                     l3117:
  8010  0027A8  0E00               	movlw	0
  8011  0027AA  6E32               	movwf	___fldiv@a^0,c
  8012  0027AC  0E00               	movlw	0
  8013  0027AE  6E33               	movwf	(___fldiv@a+1)^0,c
  8014  0027B0  0E00               	movlw	0
  8015  0027B2  6E34               	movwf	(___fldiv@a+2)^0,c
  8016  0027B4  0E00               	movlw	0
  8017  0027B6  6E35               	movwf	(___fldiv@a+3)^0,c
  8018  0027B8                     l3119:
  8019  0027B8  5032               	movf	___fldiv@a^0,w,c
  8020  0027BA  1033               	iorwf	(___fldiv@a+1)^0,w,c
  8021  0027BC  1034               	iorwf	(___fldiv@a+2)^0,w,c
  8022  0027BE  1035               	iorwf	(___fldiv@a+3)^0,w,c
  8023  0027C0  A4D8               	btfss	status,2,c
  8024  0027C2  EFE5  F013         	goto	u3141
  8025  0027C6  EFE7  F013         	goto	u3140
  8026  0027CA                     u3141:
  8027  0027CA  EFFF  F013         	goto	l3131
  8028  0027CE                     u3140:
  8029  0027CE  0E00               	movlw	0
  8030  0027D0  6E2E               	movwf	___fldiv@b^0,c
  8031  0027D2  0E00               	movlw	0
  8032  0027D4  6E2F               	movwf	(___fldiv@b+1)^0,c
  8033  0027D6  0E00               	movlw	0
  8034  0027D8  6E30               	movwf	(___fldiv@b+2)^0,c
  8035  0027DA  0E00               	movlw	0
  8036  0027DC  6E31               	movwf	(___fldiv@b+3)^0,c
  8037  0027DE  0E80               	movlw	128
  8038  0027E0  1230               	iorwf	(___fldiv@b+2)^0,f,c
  8039  0027E2  0E7F               	movlw	127
  8040  0027E4  1231               	iorwf	(___fldiv@b+3)^0,f,c
  8041  0027E6                     l3125:
  8042  0027E6  503E               	movf	___fldiv@sign^0,w,c
  8043  0027E8  1231               	iorwf	(___fldiv@b+3)^0,f,c
  8044  0027EA  C02E  F02E         	movff	___fldiv@b,?___fldiv
  8045  0027EE  C02F  F02F         	movff	___fldiv@b+1,?___fldiv+1
  8046  0027F2  C030  F030         	movff	___fldiv@b+2,?___fldiv+2
  8047  0027F6  C031  F031         	movff	___fldiv@b+3,?___fldiv+3
  8048  0027FA  EF42  F015         	goto	l757
  8049  0027FE                     l3131:
  8050  0027FE  5045               	movf	___fldiv@bexp^0,w,c
  8051  002800  A4D8               	btfss	status,2,c
  8052  002802  EF05  F014         	goto	u3151
  8053  002806  EF07  F014         	goto	u3150
  8054  00280A                     u3151:
  8055  00280A  EF11  F014         	goto	l3139
  8056  00280E                     u3150:
  8057  00280E  0E00               	movlw	0
  8058  002810  6E2E               	movwf	?___fldiv^0,c
  8059  002812  0E00               	movlw	0
  8060  002814  6E2F               	movwf	(?___fldiv+1)^0,c
  8061  002816  0E00               	movlw	0
  8062  002818  6E30               	movwf	(?___fldiv+2)^0,c
  8063  00281A  0E00               	movlw	0
  8064  00281C  6E31               	movwf	(?___fldiv+3)^0,c
  8065  00281E  EF42  F015         	goto	l757
  8066  002822                     l3139:
  8067  002822  5046               	movf	___fldiv@aexp^0,w,c
  8068  002824  C045  F036         	movff	___fldiv@bexp,??___fldiv
  8069  002828  6A37               	clrf	(??___fldiv+1)^0,c
  8070  00282A  5E36               	subwf	??___fldiv^0,f,c
  8071  00282C  0E00               	movlw	0
  8072  00282E  5A37               	subwfb	(??___fldiv+1)^0,f,c
  8073  002830  0E7F               	movlw	127
  8074  002832  2436               	addwf	??___fldiv^0,w,c
  8075  002834  6E3F               	movwf	___fldiv@new_exp^0,c
  8076  002836  0E00               	movlw	0
  8077  002838  2037               	addwfc	(??___fldiv+1)^0,w,c
  8078  00283A  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  8079  00283C  C02E  F03A         	movff	___fldiv@b,___fldiv@rem
  8080  002840  C02F  F03B         	movff	___fldiv@b+1,___fldiv@rem+1
  8081  002844  C030  F03C         	movff	___fldiv@b+2,___fldiv@rem+2
  8082  002848  C031  F03D         	movff	___fldiv@b+3,___fldiv@rem+3
  8083  00284C  0E00               	movlw	0
  8084  00284E  6E2E               	movwf	___fldiv@b^0,c
  8085  002850  0E00               	movlw	0
  8086  002852  6E2F               	movwf	(___fldiv@b+1)^0,c
  8087  002854  0E00               	movlw	0
  8088  002856  6E30               	movwf	(___fldiv@b+2)^0,c
  8089  002858  0E00               	movlw	0
  8090  00285A  6E31               	movwf	(___fldiv@b+3)^0,c
  8091  00285C  0E00               	movlw	0
  8092  00285E  6E41               	movwf	___fldiv@grs^0,c
  8093  002860  0E00               	movlw	0
  8094  002862  6E42               	movwf	(___fldiv@grs+1)^0,c
  8095  002864  0E00               	movlw	0
  8096  002866  6E43               	movwf	(___fldiv@grs+2)^0,c
  8097  002868  0E00               	movlw	0
  8098  00286A  6E44               	movwf	(___fldiv@grs+3)^0,c
  8099  00286C  0E00               	movlw	0
  8100  00286E  6E46               	movwf	___fldiv@aexp^0,c
  8101  002870  EF72  F014         	goto	l759
  8102  002874                     l3149:
  8103  002874  5046               	movf	___fldiv@aexp^0,w,c
  8104  002876  B4D8               	btfsc	status,2,c
  8105  002878  EF40  F014         	goto	u3161
  8106  00287C  EF42  F014         	goto	u3160
  8107  002880                     u3161:
  8108  002880  EF59  F014         	goto	l3157
  8109  002884                     u3160:
  8110  002884  90D8               	bcf	status,0,c
  8111  002886  363A               	rlcf	___fldiv@rem^0,f,c
  8112  002888  363B               	rlcf	(___fldiv@rem+1)^0,f,c
  8113  00288A  363C               	rlcf	(___fldiv@rem+2)^0,f,c
  8114  00288C  363D               	rlcf	(___fldiv@rem+3)^0,f,c
  8115  00288E  90D8               	bcf	status,0,c
  8116  002890  362E               	rlcf	___fldiv@b^0,f,c
  8117  002892  362F               	rlcf	(___fldiv@b+1)^0,f,c
  8118  002894  3630               	rlcf	(___fldiv@b+2)^0,f,c
  8119  002896  3631               	rlcf	(___fldiv@b+3)^0,f,c
  8120  002898  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  8121  00289A  EF51  F014         	goto	u3171
  8122  00289E  EF53  F014         	goto	u3170
  8123  0028A2                     u3171:
  8124  0028A2  EF54  F014         	goto	l762
  8125  0028A6                     u3170:
  8126  0028A6  802E               	bsf	___fldiv@b^0,0,c
  8127  0028A8                     l762:
  8128  0028A8  90D8               	bcf	status,0,c
  8129  0028AA  3641               	rlcf	___fldiv@grs^0,f,c
  8130  0028AC  3642               	rlcf	(___fldiv@grs+1)^0,f,c
  8131  0028AE  3643               	rlcf	(___fldiv@grs+2)^0,f,c
  8132  0028B0  3644               	rlcf	(___fldiv@grs+3)^0,f,c
  8133  0028B2                     l3157:
  8134  0028B2  5032               	movf	___fldiv@a^0,w,c
  8135  0028B4  5C3A               	subwf	___fldiv@rem^0,w,c
  8136  0028B6  5033               	movf	(___fldiv@a+1)^0,w,c
  8137  0028B8  583B               	subwfb	(___fldiv@rem+1)^0,w,c
  8138  0028BA  5034               	movf	(___fldiv@a+2)^0,w,c
  8139  0028BC  583C               	subwfb	(___fldiv@rem+2)^0,w,c
  8140  0028BE  5035               	movf	(___fldiv@a+3)^0,w,c
  8141  0028C0  583D               	subwfb	(___fldiv@rem+3)^0,w,c
  8142  0028C2  A0D8               	btfss	status,0,c
  8143  0028C4  EF66  F014         	goto	u3181
  8144  0028C8  EF68  F014         	goto	u3180
  8145  0028CC                     u3181:
  8146  0028CC  EF71  F014         	goto	l3163
  8147  0028D0                     u3180:
  8148  0028D0  8C44               	bsf	(___fldiv@grs+3)^0,6,c
  8149  0028D2  5032               	movf	___fldiv@a^0,w,c
  8150  0028D4  5E3A               	subwf	___fldiv@rem^0,f,c
  8151  0028D6  5033               	movf	(___fldiv@a+1)^0,w,c
  8152  0028D8  5A3B               	subwfb	(___fldiv@rem+1)^0,f,c
  8153  0028DA  5034               	movf	(___fldiv@a+2)^0,w,c
  8154  0028DC  5A3C               	subwfb	(___fldiv@rem+2)^0,f,c
  8155  0028DE  5035               	movf	(___fldiv@a+3)^0,w,c
  8156  0028E0  5A3D               	subwfb	(___fldiv@rem+3)^0,f,c
  8157  0028E2                     l3163:
  8158  0028E2  2A46               	incf	___fldiv@aexp^0,f,c
  8159  0028E4                     l759:
  8160  0028E4  0E19               	movlw	25
  8161  0028E6  6446               	cpfsgt	___fldiv@aexp^0,c
  8162  0028E8  EF78  F014         	goto	u3191
  8163  0028EC  EF7A  F014         	goto	u3190
  8164  0028F0                     u3191:
  8165  0028F0  EF3A  F014         	goto	l3149
  8166  0028F4                     u3190:
  8167  0028F4  503A               	movf	___fldiv@rem^0,w,c
  8168  0028F6  103B               	iorwf	(___fldiv@rem+1)^0,w,c
  8169  0028F8  103C               	iorwf	(___fldiv@rem+2)^0,w,c
  8170  0028FA  103D               	iorwf	(___fldiv@rem+3)^0,w,c
  8171  0028FC  B4D8               	btfsc	status,2,c
  8172  0028FE  EF83  F014         	goto	u3201
  8173  002902  EF85  F014         	goto	u3200
  8174  002906                     u3201:
  8175  002906  EF9D  F014         	goto	l3175
  8176  00290A                     u3200:
  8177  00290A  8041               	bsf	___fldiv@grs^0,0,c
  8178  00290C  EF9D  F014         	goto	l3175
  8179  002910                     l3169:
  8180  002910  90D8               	bcf	status,0,c
  8181  002912  362E               	rlcf	___fldiv@b^0,f,c
  8182  002914  362F               	rlcf	(___fldiv@b+1)^0,f,c
  8183  002916  3630               	rlcf	(___fldiv@b+2)^0,f,c
  8184  002918  3631               	rlcf	(___fldiv@b+3)^0,f,c
  8185  00291A  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  8186  00291C  EF92  F014         	goto	u3211
  8187  002920  EF94  F014         	goto	u3210
  8188  002924                     u3211:
  8189  002924  EF95  F014         	goto	l768
  8190  002928                     u3210:
  8191  002928  802E               	bsf	___fldiv@b^0,0,c
  8192  00292A                     l768:
  8193  00292A  90D8               	bcf	status,0,c
  8194  00292C  3641               	rlcf	___fldiv@grs^0,f,c
  8195  00292E  3642               	rlcf	(___fldiv@grs+1)^0,f,c
  8196  002930  3643               	rlcf	(___fldiv@grs+2)^0,f,c
  8197  002932  3644               	rlcf	(___fldiv@grs+3)^0,f,c
  8198  002934  063F               	decf	___fldiv@new_exp^0,f,c
  8199  002936  A0D8               	btfss	status,0,c
  8200  002938  0640               	decf	(___fldiv@new_exp+1)^0,f,c
  8201  00293A                     l3175:
  8202  00293A  AE30               	btfss	(___fldiv@b+2)^0,7,c
  8203  00293C  EFA2  F014         	goto	u3221
  8204  002940  EFA4  F014         	goto	u3220
  8205  002944                     u3221:
  8206  002944  EF88  F014         	goto	l3169
  8207  002948                     u3220:
  8208  002948  0E00               	movlw	0
  8209  00294A  6E46               	movwf	___fldiv@aexp^0,c
  8210  00294C  AE44               	btfss	(___fldiv@grs+3)^0,7,c
  8211  00294E  EFAB  F014         	goto	u3231
  8212  002952  EFAD  F014         	goto	u3230
  8213  002956                     u3231:
  8214  002956  EFD1  F014         	goto	l770
  8215  00295A                     u3230:
  8216  00295A  0EFF               	movlw	255
  8217  00295C  1441               	andwf	___fldiv@grs^0,w,c
  8218  00295E  6E36               	movwf	??___fldiv^0,c
  8219  002960  0EFF               	movlw	255
  8220  002962  1442               	andwf	(___fldiv@grs+1)^0,w,c
  8221  002964  6E37               	movwf	(??___fldiv+1)^0,c
  8222  002966  0EFF               	movlw	255
  8223  002968  1443               	andwf	(___fldiv@grs+2)^0,w,c
  8224  00296A  6E38               	movwf	(??___fldiv+2)^0,c
  8225  00296C  0E7F               	movlw	127
  8226  00296E  1444               	andwf	(___fldiv@grs+3)^0,w,c
  8227  002970  6E39               	movwf	(??___fldiv+3)^0,c
  8228  002972  5036               	movf	??___fldiv^0,w,c
  8229  002974  1037               	iorwf	(??___fldiv+1)^0,w,c
  8230  002976  1038               	iorwf	(??___fldiv+2)^0,w,c
  8231  002978  1039               	iorwf	(??___fldiv+3)^0,w,c
  8232  00297A  B4D8               	btfsc	status,2,c
  8233  00297C  EFC2  F014         	goto	u3241
  8234  002980  EFC4  F014         	goto	u3240
  8235  002984                     u3241:
  8236  002984  EFC8  F014         	goto	l771
  8237  002988                     u3240:
  8238  002988                     l3183:
  8239  002988  0E01               	movlw	1
  8240  00298A  6E46               	movwf	___fldiv@aexp^0,c
  8241  00298C  EFD1  F014         	goto	l770
  8242  002990                     l771:
  8243  002990  A02E               	btfss	___fldiv@b^0,0,c
  8244  002992  EFCD  F014         	goto	u3251
  8245  002996  EFCF  F014         	goto	u3250
  8246  00299A                     u3251:
  8247  00299A  EFD1  F014         	goto	l770
  8248  00299E                     u3250:
  8249  00299E  EFC4  F014         	goto	l3183
  8250  0029A2                     l770:
  8251  0029A2  5046               	movf	___fldiv@aexp^0,w,c
  8252  0029A4  B4D8               	btfsc	status,2,c
  8253  0029A6  EFD7  F014         	goto	u3261
  8254  0029AA  EFD9  F014         	goto	u3260
  8255  0029AE                     u3261:
  8256  0029AE  EFFD  F014         	goto	l3195
  8257  0029B2                     u3260:
  8258  0029B2  0E01               	movlw	1
  8259  0029B4  262E               	addwf	___fldiv@b^0,f,c
  8260  0029B6  0E00               	movlw	0
  8261  0029B8  222F               	addwfc	(___fldiv@b+1)^0,f,c
  8262  0029BA  2230               	addwfc	(___fldiv@b+2)^0,f,c
  8263  0029BC  2231               	addwfc	(___fldiv@b+3)^0,f,c
  8264  0029BE  A031               	btfss	(___fldiv@b+3)^0,0,c
  8265  0029C0  EFE4  F014         	goto	u3271
  8266  0029C4  EFE6  F014         	goto	u3270
  8267  0029C8                     u3271:
  8268  0029C8  EFFD  F014         	goto	l3195
  8269  0029CC                     u3270:
  8270  0029CC  C02E  F036         	movff	___fldiv@b,??___fldiv
  8271  0029D0  C02F  F037         	movff	___fldiv@b+1,??___fldiv+1
  8272  0029D4  C030  F038         	movff	___fldiv@b+2,??___fldiv+2
  8273  0029D8  C031  F039         	movff	___fldiv@b+3,??___fldiv+3
  8274  0029DC  3439               	rlcf	(??___fldiv+3)^0,w,c
  8275  0029DE  3239               	rrcf	(??___fldiv+3)^0,f,c
  8276  0029E0  3238               	rrcf	(??___fldiv+2)^0,f,c
  8277  0029E2  3237               	rrcf	(??___fldiv+1)^0,f,c
  8278  0029E4  3236               	rrcf	??___fldiv^0,f,c
  8279  0029E6  C036  F02E         	movff	??___fldiv,___fldiv@b
  8280  0029EA  C037  F02F         	movff	??___fldiv+1,___fldiv@b+1
  8281  0029EE  C038  F030         	movff	??___fldiv+2,___fldiv@b+2
  8282  0029F2  C039  F031         	movff	??___fldiv+3,___fldiv@b+3
  8283  0029F6  4A3F               	infsnz	___fldiv@new_exp^0,f,c
  8284  0029F8  2A40               	incf	(___fldiv@new_exp+1)^0,f,c
  8285  0029FA                     l3195:
  8286  0029FA  BE40               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8287  0029FC  EF08  F015         	goto	u3281
  8288  002A00  5040               	movf	(___fldiv@new_exp+1)^0,w,c
  8289  002A02  E108               	bnz	u3280
  8290  002A04  283F               	incf	___fldiv@new_exp^0,w,c
  8291  002A06  A0D8               	btfss	status,0,c
  8292  002A08  EF08  F015         	goto	u3281
  8293  002A0C  EF0A  F015         	goto	u3280
  8294  002A10                     u3281:
  8295  002A10  EF15  F015         	goto	l3199
  8296  002A14                     u3280:
  8297  002A14  0E00               	movlw	0
  8298  002A16  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  8299  002A18  683F               	setf	___fldiv@new_exp^0,c
  8300  002A1A  0E00               	movlw	0
  8301  002A1C  6E2E               	movwf	___fldiv@b^0,c
  8302  002A1E  0E00               	movlw	0
  8303  002A20  6E2F               	movwf	(___fldiv@b+1)^0,c
  8304  002A22  0E00               	movlw	0
  8305  002A24  6E30               	movwf	(___fldiv@b+2)^0,c
  8306  002A26  0E00               	movlw	0
  8307  002A28  6E31               	movwf	(___fldiv@b+3)^0,c
  8308  002A2A                     l3199:
  8309  002A2A  BE40               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8310  002A2C  EF22  F015         	goto	u3290
  8311  002A30  5040               	movf	(___fldiv@new_exp+1)^0,w,c
  8312  002A32  E106               	bnz	u3291
  8313  002A34  043F               	decf	___fldiv@new_exp^0,w,c
  8314  002A36  B0D8               	btfsc	status,0,c
  8315  002A38  EF20  F015         	goto	u3291
  8316  002A3C  EF22  F015         	goto	u3290
  8317  002A40                     u3291:
  8318  002A40  EF30  F015         	goto	l3203
  8319  002A44                     u3290:
  8320  002A44  0E00               	movlw	0
  8321  002A46  6E40               	movwf	(___fldiv@new_exp+1)^0,c
  8322  002A48  0E00               	movlw	0
  8323  002A4A  6E3F               	movwf	___fldiv@new_exp^0,c
  8324  002A4C  0E00               	movlw	0
  8325  002A4E  6E2E               	movwf	___fldiv@b^0,c
  8326  002A50  0E00               	movlw	0
  8327  002A52  6E2F               	movwf	(___fldiv@b+1)^0,c
  8328  002A54  0E00               	movlw	0
  8329  002A56  6E30               	movwf	(___fldiv@b+2)^0,c
  8330  002A58  0E00               	movlw	0
  8331  002A5A  6E31               	movwf	(___fldiv@b+3)^0,c
  8332  002A5C  0E00               	movlw	0
  8333  002A5E  6E3E               	movwf	___fldiv@sign^0,c
  8334  002A60                     l3203:
  8335  002A60  C03F  F045         	movff	___fldiv@new_exp,___fldiv@bexp
  8336  002A64  A045               	btfss	___fldiv@bexp^0,0,c
  8337  002A66  EF37  F015         	goto	u3301
  8338  002A6A  EF39  F015         	goto	u3300
  8339  002A6E                     u3301:
  8340  002A6E  EF3C  F015         	goto	l3209
  8341  002A72                     u3300:
  8342  002A72  8E30               	bsf	(___fldiv@b+2)^0,7,c
  8343  002A74  EF3D  F015         	goto	l3211
  8344  002A78                     l3209:
  8345  002A78  9E30               	bcf	(___fldiv@b+2)^0,7,c
  8346  002A7A                     l3211:
  8347  002A7A  90D8               	bcf	status,0,c
  8348  002A7C  3045               	rrcf	___fldiv@bexp^0,w,c
  8349  002A7E  6E31               	movwf	(___fldiv@b+3)^0,c
  8350  002A80  EFF3  F013         	goto	l3125
  8351  002A84                     l757:
  8352  002A84  0012               	return		;funcret
  8353  002A86                     __end_of___fldiv:
  8354                           	callstack 0
  8355                           
  8356 ;; *************** function ___fladd *****************
  8357 ;; Defined at:
  8358 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;  b               4   70[COMRAM] unsigned char 
  8361 ;;  a               4   74[COMRAM] unsigned char 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  grs             1   85[COMRAM] unsigned char 
  8364 ;;  bexp            1   84[COMRAM] unsigned char 
  8365 ;;  aexp            1   83[COMRAM] unsigned char 
  8366 ;;  signs           1   82[COMRAM] unsigned char 
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  4   70[COMRAM] unsigned char 
  8369 ;; Registers used:
  8370 ;;		wreg, status,2, status,0
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8376 ;;      Params:         8       0       0       0       0       0       0       0       0
  8377 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8378 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8379 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8380 ;;Total ram usage:       16 bytes
  8381 ;; Hardware stack levels used: 1
  8382 ;; This function calls:
  8383 ;;		Nothing
  8384 ;; This function is called by:
  8385 ;;		_ReadADC
  8386 ;;		___flsub
  8387 ;;		_efgtoa
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           	psect	text32
  8392  0019B2                     __ptext32:
  8393                           	callstack 0
  8394  0019B2                     ___fladd:
  8395                           	callstack 25
  8396  0019B2  504A               	movf	(___fladd@b+3)^0,w,c
  8397  0019B4  0B80               	andlw	128
  8398  0019B6  6E53               	movwf	___fladd@signs^0,c
  8399  0019B8  504A               	movf	(___fladd@b+3)^0,w,c
  8400  0019BA  244A               	addwf	(___fladd@b+3)^0,w,c
  8401  0019BC  6E55               	movwf	___fladd@bexp^0,c
  8402  0019BE  AE49               	btfss	(___fladd@b+2)^0,7,c
  8403  0019C0  EFE4  F00C         	goto	u2651
  8404  0019C4  EFE6  F00C         	goto	u2650
  8405  0019C8                     u2651:
  8406  0019C8  EFE7  F00C         	goto	l2857
  8407  0019CC                     u2650:
  8408  0019CC  8055               	bsf	___fladd@bexp^0,0,c
  8409  0019CE                     l2857:
  8410  0019CE  5055               	movf	___fladd@bexp^0,w,c
  8411  0019D0  B4D8               	btfsc	status,2,c
  8412  0019D2  EFED  F00C         	goto	u2661
  8413  0019D6  EFEF  F00C         	goto	u2660
  8414  0019DA                     u2661:
  8415  0019DA  EF04  F00D         	goto	l2867
  8416  0019DE                     u2660:
  8417  0019DE  2855               	incf	___fladd@bexp^0,w,c
  8418  0019E0  A4D8               	btfss	status,2,c
  8419  0019E2  EFF5  F00C         	goto	u2671
  8420  0019E6  EFF7  F00C         	goto	u2670
  8421  0019EA                     u2671:
  8422  0019EA  EFFF  F00C         	goto	l2863
  8423  0019EE                     u2670:
  8424  0019EE  0E00               	movlw	0
  8425  0019F0  6E47               	movwf	___fladd@b^0,c
  8426  0019F2  0E00               	movlw	0
  8427  0019F4  6E48               	movwf	(___fladd@b+1)^0,c
  8428  0019F6  0E00               	movlw	0
  8429  0019F8  6E49               	movwf	(___fladd@b+2)^0,c
  8430  0019FA  0E00               	movlw	0
  8431  0019FC  6E4A               	movwf	(___fladd@b+3)^0,c
  8432  0019FE                     l2863:
  8433  0019FE  8E49               	bsf	(___fladd@b+2)^0,7,c
  8434  001A00  0E00               	movlw	0
  8435  001A02  6E4A               	movwf	(___fladd@b+3)^0,c
  8436  001A04  EF0C  F00D         	goto	l2869
  8437  001A08                     l2867:
  8438  001A08  0E00               	movlw	0
  8439  001A0A  6E47               	movwf	___fladd@b^0,c
  8440  001A0C  0E00               	movlw	0
  8441  001A0E  6E48               	movwf	(___fladd@b+1)^0,c
  8442  001A10  0E00               	movlw	0
  8443  001A12  6E49               	movwf	(___fladd@b+2)^0,c
  8444  001A14  0E00               	movlw	0
  8445  001A16  6E4A               	movwf	(___fladd@b+3)^0,c
  8446  001A18                     l2869:
  8447  001A18  504E               	movf	(___fladd@a+3)^0,w,c
  8448  001A1A  0B80               	andlw	128
  8449  001A1C  6E54               	movwf	___fladd@aexp^0,c
  8450  001A1E  5053               	movf	___fladd@signs^0,w,c
  8451  001A20  1854               	xorwf	___fladd@aexp^0,w,c
  8452  001A22  B4D8               	btfsc	status,2,c
  8453  001A24  EF16  F00D         	goto	u2681
  8454  001A28  EF18  F00D         	goto	u2680
  8455  001A2C                     u2681:
  8456  001A2C  EF19  F00D         	goto	l2875
  8457  001A30                     u2680:
  8458  001A30  8C53               	bsf	___fladd@signs^0,6,c
  8459  001A32                     l2875:
  8460  001A32  504E               	movf	(___fladd@a+3)^0,w,c
  8461  001A34  244E               	addwf	(___fladd@a+3)^0,w,c
  8462  001A36  6E54               	movwf	___fladd@aexp^0,c
  8463  001A38  AE4D               	btfss	(___fladd@a+2)^0,7,c
  8464  001A3A  EF21  F00D         	goto	u2691
  8465  001A3E  EF23  F00D         	goto	u2690
  8466  001A42                     u2691:
  8467  001A42  EF24  F00D         	goto	l2881
  8468  001A46                     u2690:
  8469  001A46  8054               	bsf	___fladd@aexp^0,0,c
  8470  001A48                     l2881:
  8471  001A48  5054               	movf	___fladd@aexp^0,w,c
  8472  001A4A  B4D8               	btfsc	status,2,c
  8473  001A4C  EF2A  F00D         	goto	u2701
  8474  001A50  EF2C  F00D         	goto	u2700
  8475  001A54                     u2701:
  8476  001A54  EF41  F00D         	goto	l2891
  8477  001A58                     u2700:
  8478  001A58  2854               	incf	___fladd@aexp^0,w,c
  8479  001A5A  A4D8               	btfss	status,2,c
  8480  001A5C  EF32  F00D         	goto	u2711
  8481  001A60  EF34  F00D         	goto	u2710
  8482  001A64                     u2711:
  8483  001A64  EF3C  F00D         	goto	l2887
  8484  001A68                     u2710:
  8485  001A68  0E00               	movlw	0
  8486  001A6A  6E4B               	movwf	___fladd@a^0,c
  8487  001A6C  0E00               	movlw	0
  8488  001A6E  6E4C               	movwf	(___fladd@a+1)^0,c
  8489  001A70  0E00               	movlw	0
  8490  001A72  6E4D               	movwf	(___fladd@a+2)^0,c
  8491  001A74  0E00               	movlw	0
  8492  001A76  6E4E               	movwf	(___fladd@a+3)^0,c
  8493  001A78                     l2887:
  8494  001A78  8E4D               	bsf	(___fladd@a+2)^0,7,c
  8495  001A7A  0E00               	movlw	0
  8496  001A7C  6E4E               	movwf	(___fladd@a+3)^0,c
  8497  001A7E  EF49  F00D         	goto	l2893
  8498  001A82                     l2891:
  8499  001A82  0E00               	movlw	0
  8500  001A84  6E4B               	movwf	___fladd@a^0,c
  8501  001A86  0E00               	movlw	0
  8502  001A88  6E4C               	movwf	(___fladd@a+1)^0,c
  8503  001A8A  0E00               	movlw	0
  8504  001A8C  6E4D               	movwf	(___fladd@a+2)^0,c
  8505  001A8E  0E00               	movlw	0
  8506  001A90  6E4E               	movwf	(___fladd@a+3)^0,c
  8507  001A92                     l2893:
  8508  001A92  5055               	movf	___fladd@bexp^0,w,c
  8509  001A94  5C54               	subwf	___fladd@aexp^0,w,c
  8510  001A96  B0D8               	btfsc	status,0,c
  8511  001A98  EF50  F00D         	goto	u2721
  8512  001A9C  EF52  F00D         	goto	u2720
  8513  001AA0                     u2721:
  8514  001AA0  EF79  F00D         	goto	l2929
  8515  001AA4                     u2720:
  8516  001AA4  AC53               	btfss	___fladd@signs^0,6,c
  8517  001AA6  EF57  F00D         	goto	u2731
  8518  001AAA  EF59  F00D         	goto	u2730
  8519  001AAE                     u2731:
  8520  001AAE  EF5B  F00D         	goto	l2899
  8521  001AB2                     u2730:
  8522  001AB2  0E80               	movlw	128
  8523  001AB4  1A53               	xorwf	___fladd@signs^0,f,c
  8524  001AB6                     l2899:
  8525  001AB6  C055  F056         	movff	___fladd@bexp,___fladd@grs
  8526  001ABA  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  8527  001ABE  C056  F054         	movff	___fladd@grs,___fladd@aexp
  8528  001AC2  C047  F056         	movff	___fladd@b,___fladd@grs
  8529  001AC6  C04B  F047         	movff	___fladd@a,___fladd@b
  8530  001ACA  C056  F04B         	movff	___fladd@grs,___fladd@a
  8531  001ACE  C048  F056         	movff	___fladd@b+1,___fladd@grs
  8532  001AD2  C04C  F048         	movff	___fladd@a+1,___fladd@b+1
  8533  001AD6  C056  F04C         	movff	___fladd@grs,___fladd@a+1
  8534  001ADA  C049  F056         	movff	___fladd@b+2,___fladd@grs
  8535  001ADE  C04D  F049         	movff	___fladd@a+2,___fladd@b+2
  8536  001AE2  C056  F04D         	movff	___fladd@grs,___fladd@a+2
  8537  001AE6  C04A  F056         	movff	___fladd@b+3,___fladd@grs
  8538  001AEA  C04E  F04A         	movff	___fladd@a+3,___fladd@b+3
  8539  001AEE  C056  F04E         	movff	___fladd@grs,___fladd@a+3
  8540  001AF2                     l2929:
  8541  001AF2  0E00               	movlw	0
  8542  001AF4  6E56               	movwf	___fladd@grs^0,c
  8543  001AF6  5055               	movf	___fladd@bexp^0,w,c
  8544  001AF8  C054  F04F         	movff	___fladd@aexp,??___fladd
  8545  001AFC  6A50               	clrf	(??___fladd+1)^0,c
  8546  001AFE  5E4F               	subwf	??___fladd^0,f,c
  8547  001B00  0E00               	movlw	0
  8548  001B02  5A50               	subwfb	(??___fladd+1)^0,f,c
  8549  001B04  BE50               	btfsc	(??___fladd+1)^0,7,c
  8550  001B06  EF8E  F00D         	goto	u2741
  8551  001B0A  5050               	movf	(??___fladd+1)^0,w,c
  8552  001B0C  E109               	bnz	u2740
  8553  001B0E  0E1A               	movlw	26
  8554  001B10  5C4F               	subwf	??___fladd^0,w,c
  8555  001B12  A0D8               	btfss	status,0,c
  8556  001B14  EF8E  F00D         	goto	u2741
  8557  001B18  EF90  F00D         	goto	u2740
  8558  001B1C                     u2741:
  8559  001B1C  EFC7  F00D         	goto	l704
  8560  001B20                     u2740:
  8561  001B20  5047               	movf	___fladd@b^0,w,c
  8562  001B22  1048               	iorwf	(___fladd@b+1)^0,w,c
  8563  001B24  1049               	iorwf	(___fladd@b+2)^0,w,c
  8564  001B26  104A               	iorwf	(___fladd@b+3)^0,w,c
  8565  001B28  A4D8               	btfss	status,2,c
  8566  001B2A  EF99  F00D         	goto	u2751
  8567  001B2E  EF9C  F00D         	goto	u2750
  8568  001B32                     u2751:
  8569  001B32  0E01               	movlw	1
  8570  001B34  EF9D  F00D         	goto	u2760
  8571  001B38                     u2750:
  8572  001B38  0E00               	movlw	0
  8573  001B3A                     u2760:
  8574  001B3A  6E56               	movwf	___fladd@grs^0,c
  8575  001B3C  0E00               	movlw	0
  8576  001B3E  6E47               	movwf	___fladd@b^0,c
  8577  001B40  0E00               	movlw	0
  8578  001B42  6E48               	movwf	(___fladd@b+1)^0,c
  8579  001B44  0E00               	movlw	0
  8580  001B46  6E49               	movwf	(___fladd@b+2)^0,c
  8581  001B48  0E00               	movlw	0
  8582  001B4A  6E4A               	movwf	(___fladd@b+3)^0,c
  8583  001B4C  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  8584  001B50  EFD0  F00D         	goto	l703
  8585  001B54                     l705:
  8586  001B54  A056               	btfss	___fladd@grs^0,0,c
  8587  001B56  EFAF  F00D         	goto	u2771
  8588  001B5A  EFB1  F00D         	goto	u2770
  8589  001B5E                     u2771:
  8590  001B5E  EFB7  F00D         	goto	l2941
  8591  001B62                     u2770:
  8592  001B62  90D8               	bcf	status,0,c
  8593  001B64  3056               	rrcf	___fladd@grs^0,w,c
  8594  001B66  0901               	iorlw	1
  8595  001B68  6E56               	movwf	___fladd@grs^0,c
  8596  001B6A  EFB9  F00D         	goto	l2943
  8597  001B6E                     l2941:
  8598  001B6E  90D8               	bcf	status,0,c
  8599  001B70  3256               	rrcf	___fladd@grs^0,f,c
  8600  001B72                     l2943:
  8601  001B72  A047               	btfss	___fladd@b^0,0,c
  8602  001B74  EFBE  F00D         	goto	u2781
  8603  001B78  EFC0  F00D         	goto	u2780
  8604  001B7C                     u2781:
  8605  001B7C  EFC1  F00D         	goto	l2947
  8606  001B80                     u2780:
  8607  001B80  8E56               	bsf	___fladd@grs^0,7,c
  8608  001B82                     l2947:
  8609  001B82  344A               	rlcf	(___fladd@b+3)^0,w,c
  8610  001B84  324A               	rrcf	(___fladd@b+3)^0,f,c
  8611  001B86  3249               	rrcf	(___fladd@b+2)^0,f,c
  8612  001B88  3248               	rrcf	(___fladd@b+1)^0,f,c
  8613  001B8A  3247               	rrcf	___fladd@b^0,f,c
  8614  001B8C  2A55               	incf	___fladd@bexp^0,f,c
  8615  001B8E                     l704:
  8616  001B8E  5054               	movf	___fladd@aexp^0,w,c
  8617  001B90  5C55               	subwf	___fladd@bexp^0,w,c
  8618  001B92  A0D8               	btfss	status,0,c
  8619  001B94  EFCE  F00D         	goto	u2791
  8620  001B98  EFD0  F00D         	goto	u2790
  8621  001B9C                     u2791:
  8622  001B9C  EFAA  F00D         	goto	l705
  8623  001BA0                     u2790:
  8624  001BA0                     l703:
  8625  001BA0  BC53               	btfsc	___fladd@signs^0,6,c
  8626  001BA2  EFD5  F00D         	goto	u2801
  8627  001BA6  EFD7  F00D         	goto	u2800
  8628  001BAA                     u2801:
  8629  001BAA  EF17  F00E         	goto	l2975
  8630  001BAE                     u2800:
  8631  001BAE  5055               	movf	___fladd@bexp^0,w,c
  8632  001BB0  A4D8               	btfss	status,2,c
  8633  001BB2  EFDD  F00D         	goto	u2811
  8634  001BB6  EFDF  F00D         	goto	u2810
  8635  001BBA                     u2811:
  8636  001BBA  EFE9  F00D         	goto	l2957
  8637  001BBE                     u2810:
  8638  001BBE  0E00               	movlw	0
  8639  001BC0  6E47               	movwf	?___fladd^0,c
  8640  001BC2  0E00               	movlw	0
  8641  001BC4  6E48               	movwf	(?___fladd+1)^0,c
  8642  001BC6  0E00               	movlw	0
  8643  001BC8  6E49               	movwf	(?___fladd+2)^0,c
  8644  001BCA  0E00               	movlw	0
  8645  001BCC  6E4A               	movwf	(?___fladd+3)^0,c
  8646  001BCE  EF38  F00F         	goto	l712
  8647  001BD2                     l2957:
  8648  001BD2  504B               	movf	___fladd@a^0,w,c
  8649  001BD4  2647               	addwf	___fladd@b^0,f,c
  8650  001BD6  504C               	movf	(___fladd@a+1)^0,w,c
  8651  001BD8  2248               	addwfc	(___fladd@b+1)^0,f,c
  8652  001BDA  504D               	movf	(___fladd@a+2)^0,w,c
  8653  001BDC  2249               	addwfc	(___fladd@b+2)^0,f,c
  8654  001BDE  504E               	movf	(___fladd@a+3)^0,w,c
  8655  001BE0  224A               	addwfc	(___fladd@b+3)^0,f,c
  8656  001BE2  A04A               	btfss	(___fladd@b+3)^0,0,c
  8657  001BE4  EFF6  F00D         	goto	u2821
  8658  001BE8  EFF8  F00D         	goto	u2820
  8659  001BEC                     u2821:
  8660  001BEC  EFA4  F00E         	goto	l3011
  8661  001BF0                     u2820:
  8662  001BF0  A056               	btfss	___fladd@grs^0,0,c
  8663  001BF2  EFFD  F00D         	goto	u2831
  8664  001BF6  EFFF  F00D         	goto	u2830
  8665  001BFA                     u2831:
  8666  001BFA  EF05  F00E         	goto	l2965
  8667  001BFE                     u2830:
  8668  001BFE  90D8               	bcf	status,0,c
  8669  001C00  3056               	rrcf	___fladd@grs^0,w,c
  8670  001C02  0901               	iorlw	1
  8671  001C04  6E56               	movwf	___fladd@grs^0,c
  8672  001C06  EF07  F00E         	goto	l2967
  8673  001C0A                     l2965:
  8674  001C0A  90D8               	bcf	status,0,c
  8675  001C0C  3256               	rrcf	___fladd@grs^0,f,c
  8676  001C0E                     l2967:
  8677  001C0E  A047               	btfss	___fladd@b^0,0,c
  8678  001C10  EF0C  F00E         	goto	u2841
  8679  001C14  EF0E  F00E         	goto	u2840
  8680  001C18                     u2841:
  8681  001C18  EF0F  F00E         	goto	l2971
  8682  001C1C                     u2840:
  8683  001C1C  8E56               	bsf	___fladd@grs^0,7,c
  8684  001C1E                     l2971:
  8685  001C1E  344A               	rlcf	(___fladd@b+3)^0,w,c
  8686  001C20  324A               	rrcf	(___fladd@b+3)^0,f,c
  8687  001C22  3249               	rrcf	(___fladd@b+2)^0,f,c
  8688  001C24  3248               	rrcf	(___fladd@b+1)^0,f,c
  8689  001C26  3247               	rrcf	___fladd@b^0,f,c
  8690  001C28  2A55               	incf	___fladd@bexp^0,f,c
  8691  001C2A  EFA4  F00E         	goto	l3011
  8692  001C2E                     l2975:
  8693  001C2E  504B               	movf	___fladd@a^0,w,c
  8694  001C30  5C47               	subwf	___fladd@b^0,w,c
  8695  001C32  504C               	movf	(___fladd@a+1)^0,w,c
  8696  001C34  5848               	subwfb	(___fladd@b+1)^0,w,c
  8697  001C36  504D               	movf	(___fladd@a+2)^0,w,c
  8698  001C38  5849               	subwfb	(___fladd@b+2)^0,w,c
  8699  001C3A  504A               	movf	(___fladd@b+3)^0,w,c
  8700  001C3C  0A80               	xorlw	128
  8701  001C3E  6E4F               	movwf	??___fladd^0,c
  8702  001C40  504E               	movf	(___fladd@a+3)^0,w,c
  8703  001C42  0A80               	xorlw	128
  8704  001C44  584F               	subwfb	??___fladd^0,w,c
  8705  001C46  B0D8               	btfsc	status,0,c
  8706  001C48  EF28  F00E         	goto	u2851
  8707  001C4C  EF2A  F00E         	goto	u2850
  8708  001C50                     u2851:
  8709  001C50  EF55  F00E         	goto	l2985
  8710  001C54                     u2850:
  8711  001C54  5047               	movf	___fladd@b^0,w,c
  8712  001C56  5C4B               	subwf	___fladd@a^0,w,c
  8713  001C58  6E4F               	movwf	??___fladd^0,c
  8714  001C5A  5048               	movf	(___fladd@b+1)^0,w,c
  8715  001C5C  584C               	subwfb	(___fladd@a+1)^0,w,c
  8716  001C5E  6E50               	movwf	(??___fladd+1)^0,c
  8717  001C60  5049               	movf	(___fladd@b+2)^0,w,c
  8718  001C62  584D               	subwfb	(___fladd@a+2)^0,w,c
  8719  001C64  6E51               	movwf	(??___fladd+2)^0,c
  8720  001C66  504A               	movf	(___fladd@b+3)^0,w,c
  8721  001C68  584E               	subwfb	(___fladd@a+3)^0,w,c
  8722  001C6A  6E52               	movwf	(??___fladd+3)^0,c
  8723  001C6C  0EFF               	movlw	255
  8724  001C6E  244F               	addwf	??___fladd^0,w,c
  8725  001C70  6E47               	movwf	___fladd@b^0,c
  8726  001C72  0EFF               	movlw	255
  8727  001C74  2050               	addwfc	(??___fladd+1)^0,w,c
  8728  001C76  6E48               	movwf	(___fladd@b+1)^0,c
  8729  001C78  0EFF               	movlw	255
  8730  001C7A  2051               	addwfc	(??___fladd+2)^0,w,c
  8731  001C7C  6E49               	movwf	(___fladd@b+2)^0,c
  8732  001C7E  0EFF               	movlw	255
  8733  001C80  2052               	addwfc	(??___fladd+3)^0,w,c
  8734  001C82  6E4A               	movwf	(___fladd@b+3)^0,c
  8735  001C84  0E80               	movlw	128
  8736  001C86  1A53               	xorwf	___fladd@signs^0,f,c
  8737  001C88  6C56               	negf	___fladd@grs^0,c
  8738  001C8A  5056               	movf	___fladd@grs^0,w,c
  8739  001C8C  A4D8               	btfss	status,2,c
  8740  001C8E  EF4B  F00E         	goto	u2861
  8741  001C92  EF4D  F00E         	goto	u2860
  8742  001C96                     u2861:
  8743  001C96  EF5D  F00E         	goto	l720
  8744  001C9A                     u2860:
  8745  001C9A  0E01               	movlw	1
  8746  001C9C  2647               	addwf	___fladd@b^0,f,c
  8747  001C9E  0E00               	movlw	0
  8748  001CA0  2248               	addwfc	(___fladd@b+1)^0,f,c
  8749  001CA2  2249               	addwfc	(___fladd@b+2)^0,f,c
  8750  001CA4  224A               	addwfc	(___fladd@b+3)^0,f,c
  8751  001CA6  EF5D  F00E         	goto	l720
  8752  001CAA                     l2985:
  8753  001CAA  504B               	movf	___fladd@a^0,w,c
  8754  001CAC  5E47               	subwf	___fladd@b^0,f,c
  8755  001CAE  504C               	movf	(___fladd@a+1)^0,w,c
  8756  001CB0  5A48               	subwfb	(___fladd@b+1)^0,f,c
  8757  001CB2  504D               	movf	(___fladd@a+2)^0,w,c
  8758  001CB4  5A49               	subwfb	(___fladd@b+2)^0,f,c
  8759  001CB6  504E               	movf	(___fladd@a+3)^0,w,c
  8760  001CB8  5A4A               	subwfb	(___fladd@b+3)^0,f,c
  8761  001CBA                     l720:
  8762  001CBA  5047               	movf	___fladd@b^0,w,c
  8763  001CBC  1048               	iorwf	(___fladd@b+1)^0,w,c
  8764  001CBE  1049               	iorwf	(___fladd@b+2)^0,w,c
  8765  001CC0  104A               	iorwf	(___fladd@b+3)^0,w,c
  8766  001CC2  A4D8               	btfss	status,2,c
  8767  001CC4  EF66  F00E         	goto	u2871
  8768  001CC8  EF68  F00E         	goto	u2870
  8769  001CCC                     u2871:
  8770  001CCC  EF9D  F00E         	goto	l3009
  8771  001CD0                     u2870:
  8772  001CD0  5056               	movf	___fladd@grs^0,w,c
  8773  001CD2  A4D8               	btfss	status,2,c
  8774  001CD4  EF6E  F00E         	goto	u2881
  8775  001CD8  EF70  F00E         	goto	u2880
  8776  001CDC                     u2881:
  8777  001CDC  EF9D  F00E         	goto	l3009
  8778  001CE0                     u2880:
  8779  001CE0  0E00               	movlw	0
  8780  001CE2  6E47               	movwf	?___fladd^0,c
  8781  001CE4  0E00               	movlw	0
  8782  001CE6  6E48               	movwf	(?___fladd+1)^0,c
  8783  001CE8  0E00               	movlw	0
  8784  001CEA  6E49               	movwf	(?___fladd+2)^0,c
  8785  001CEC  0E00               	movlw	0
  8786  001CEE  6E4A               	movwf	(?___fladd+3)^0,c
  8787  001CF0  EF38  F00F         	goto	l712
  8788  001CF4                     l2993:
  8789  001CF4  90D8               	bcf	status,0,c
  8790  001CF6  3647               	rlcf	___fladd@b^0,f,c
  8791  001CF8  3648               	rlcf	(___fladd@b+1)^0,f,c
  8792  001CFA  3649               	rlcf	(___fladd@b+2)^0,f,c
  8793  001CFC  364A               	rlcf	(___fladd@b+3)^0,f,c
  8794  001CFE  AE56               	btfss	___fladd@grs^0,7,c
  8795  001D00  EF84  F00E         	goto	u2891
  8796  001D04  EF86  F00E         	goto	u2890
  8797  001D08                     u2891:
  8798  001D08  EF87  F00E         	goto	l2999
  8799  001D0C                     u2890:
  8800  001D0C  8047               	bsf	___fladd@b^0,0,c
  8801  001D0E                     l2999:
  8802  001D0E  A056               	btfss	___fladd@grs^0,0,c
  8803  001D10  EF8C  F00E         	goto	u2901
  8804  001D14  EF8E  F00E         	goto	u2900
  8805  001D18                     u2901:
  8806  001D18  EF92  F00E         	goto	l3003
  8807  001D1C                     u2900:
  8808  001D1C  80D8               	bsf	status,0,c
  8809  001D1E  3656               	rlcf	___fladd@grs^0,f,c
  8810  001D20  EF94  F00E         	goto	l3005
  8811  001D24                     l3003:
  8812  001D24  90D8               	bcf	status,0,c
  8813  001D26  3656               	rlcf	___fladd@grs^0,f,c
  8814  001D28                     l3005:
  8815  001D28  5055               	movf	___fladd@bexp^0,w,c
  8816  001D2A  B4D8               	btfsc	status,2,c
  8817  001D2C  EF9A  F00E         	goto	u2911
  8818  001D30  EF9C  F00E         	goto	u2910
  8819  001D34                     u2911:
  8820  001D34  EF9D  F00E         	goto	l3009
  8821  001D38                     u2910:
  8822  001D38  0655               	decf	___fladd@bexp^0,f,c
  8823  001D3A                     l3009:
  8824  001D3A  AE49               	btfss	(___fladd@b+2)^0,7,c
  8825  001D3C  EFA2  F00E         	goto	u2921
  8826  001D40  EFA4  F00E         	goto	u2920
  8827  001D44                     u2921:
  8828  001D44  EF7A  F00E         	goto	l2993
  8829  001D48                     u2920:
  8830  001D48                     l3011:
  8831  001D48  0E00               	movlw	0
  8832  001D4A  6E54               	movwf	___fladd@aexp^0,c
  8833  001D4C  AE56               	btfss	___fladd@grs^0,7,c
  8834  001D4E  EFAB  F00E         	goto	u2931
  8835  001D52  EFAD  F00E         	goto	u2930
  8836  001D56                     u2931:
  8837  001D56  EFC5  F00E         	goto	l729
  8838  001D5A                     u2930:
  8839  001D5A  C056  F04F         	movff	___fladd@grs,??___fladd
  8840  001D5E  0E7F               	movlw	127
  8841  001D60  164F               	andwf	??___fladd^0,f,c
  8842  001D62  B4D8               	btfsc	status,2,c
  8843  001D64  EFB6  F00E         	goto	u2941
  8844  001D68  EFB8  F00E         	goto	u2940
  8845  001D6C                     u2941:
  8846  001D6C  EFBC  F00E         	goto	l730
  8847  001D70                     u2940:
  8848  001D70                     l3017:
  8849  001D70  0E01               	movlw	1
  8850  001D72  6E54               	movwf	___fladd@aexp^0,c
  8851  001D74  EFC5  F00E         	goto	l729
  8852  001D78                     l730:
  8853  001D78  A047               	btfss	___fladd@b^0,0,c
  8854  001D7A  EFC1  F00E         	goto	u2951
  8855  001D7E  EFC3  F00E         	goto	u2950
  8856  001D82                     u2951:
  8857  001D82  EFC5  F00E         	goto	l729
  8858  001D86                     u2950:
  8859  001D86  EFB8  F00E         	goto	l3017
  8860  001D8A                     l729:
  8861  001D8A  5054               	movf	___fladd@aexp^0,w,c
  8862  001D8C  B4D8               	btfsc	status,2,c
  8863  001D8E  EFCB  F00E         	goto	u2961
  8864  001D92  EFCD  F00E         	goto	u2960
  8865  001D96                     u2961:
  8866  001D96  EFF8  F00E         	goto	l3029
  8867  001D9A                     u2960:
  8868  001D9A  0E01               	movlw	1
  8869  001D9C  2647               	addwf	___fladd@b^0,f,c
  8870  001D9E  0E00               	movlw	0
  8871  001DA0  2248               	addwfc	(___fladd@b+1)^0,f,c
  8872  001DA2  2249               	addwfc	(___fladd@b+2)^0,f,c
  8873  001DA4  224A               	addwfc	(___fladd@b+3)^0,f,c
  8874  001DA6  A04A               	btfss	(___fladd@b+3)^0,0,c
  8875  001DA8  EFD8  F00E         	goto	u2971
  8876  001DAC  EFDA  F00E         	goto	u2970
  8877  001DB0                     u2971:
  8878  001DB0  EFF8  F00E         	goto	l3029
  8879  001DB4                     u2970:
  8880  001DB4  C047  F04F         	movff	___fladd@b,??___fladd
  8881  001DB8  C048  F050         	movff	___fladd@b+1,??___fladd+1
  8882  001DBC  C049  F051         	movff	___fladd@b+2,??___fladd+2
  8883  001DC0  C04A  F052         	movff	___fladd@b+3,??___fladd+3
  8884  001DC4  3452               	rlcf	(??___fladd+3)^0,w,c
  8885  001DC6  3252               	rrcf	(??___fladd+3)^0,f,c
  8886  001DC8  3251               	rrcf	(??___fladd+2)^0,f,c
  8887  001DCA  3250               	rrcf	(??___fladd+1)^0,f,c
  8888  001DCC  324F               	rrcf	??___fladd^0,f,c
  8889  001DCE  C04F  F047         	movff	??___fladd,___fladd@b
  8890  001DD2  C050  F048         	movff	??___fladd+1,___fladd@b+1
  8891  001DD6  C051  F049         	movff	??___fladd+2,___fladd@b+2
  8892  001DDA  C052  F04A         	movff	??___fladd+3,___fladd@b+3
  8893  001DDE  2855               	incf	___fladd@bexp^0,w,c
  8894  001DE0  B4D8               	btfsc	status,2,c
  8895  001DE2  EFF5  F00E         	goto	u2981
  8896  001DE6  EFF7  F00E         	goto	u2980
  8897  001DEA                     u2981:
  8898  001DEA  EFF8  F00E         	goto	l3029
  8899  001DEE                     u2980:
  8900  001DEE  2A55               	incf	___fladd@bexp^0,f,c
  8901  001DF0                     l3029:
  8902  001DF0  2855               	incf	___fladd@bexp^0,w,c
  8903  001DF2  B4D8               	btfsc	status,2,c
  8904  001DF4  EFFE  F00E         	goto	u2991
  8905  001DF8  EF00  F00F         	goto	u2990
  8906  001DFC                     u2991:
  8907  001DFC  EF08  F00F         	goto	l3033
  8908  001E00                     u2990:
  8909  001E00  5055               	movf	___fladd@bexp^0,w,c
  8910  001E02  A4D8               	btfss	status,2,c
  8911  001E04  EF06  F00F         	goto	u3001
  8912  001E08  EF08  F00F         	goto	u3000
  8913  001E0C                     u3001:
  8914  001E0C  EF1A  F00F         	goto	l3037
  8915  001E10                     u3000:
  8916  001E10                     l3033:
  8917  001E10  0E00               	movlw	0
  8918  001E12  6E47               	movwf	___fladd@b^0,c
  8919  001E14  0E00               	movlw	0
  8920  001E16  6E48               	movwf	(___fladd@b+1)^0,c
  8921  001E18  0E00               	movlw	0
  8922  001E1A  6E49               	movwf	(___fladd@b+2)^0,c
  8923  001E1C  0E00               	movlw	0
  8924  001E1E  6E4A               	movwf	(___fladd@b+3)^0,c
  8925  001E20  5055               	movf	___fladd@bexp^0,w,c
  8926  001E22  A4D8               	btfss	status,2,c
  8927  001E24  EF16  F00F         	goto	u3011
  8928  001E28  EF18  F00F         	goto	u3010
  8929  001E2C                     u3011:
  8930  001E2C  EF1A  F00F         	goto	l3037
  8931  001E30                     u3010:
  8932  001E30  0E00               	movlw	0
  8933  001E32  6E53               	movwf	___fladd@signs^0,c
  8934  001E34                     l3037:
  8935  001E34  A055               	btfss	___fladd@bexp^0,0,c
  8936  001E36  EF1F  F00F         	goto	u3021
  8937  001E3A  EF21  F00F         	goto	u3020
  8938  001E3E                     u3021:
  8939  001E3E  EF24  F00F         	goto	l3041
  8940  001E42                     u3020:
  8941  001E42  8E49               	bsf	(___fladd@b+2)^0,7,c
  8942  001E44  EF25  F00F         	goto	l3043
  8943  001E48                     l3041:
  8944  001E48  9E49               	bcf	(___fladd@b+2)^0,7,c
  8945  001E4A                     l3043:
  8946  001E4A  90D8               	bcf	status,0,c
  8947  001E4C  3055               	rrcf	___fladd@bexp^0,w,c
  8948  001E4E  6E4A               	movwf	(___fladd@b+3)^0,c
  8949  001E50  AE53               	btfss	___fladd@signs^0,7,c
  8950  001E52  EF2D  F00F         	goto	u3031
  8951  001E56  EF2F  F00F         	goto	u3030
  8952  001E5A                     u3031:
  8953  001E5A  EF30  F00F         	goto	l3049
  8954  001E5E                     u3030:
  8955  001E5E  8E4A               	bsf	(___fladd@b+3)^0,7,c
  8956  001E60                     l3049:
  8957  001E60  C047  F047         	movff	___fladd@b,?___fladd
  8958  001E64  C048  F048         	movff	___fladd@b+1,?___fladd+1
  8959  001E68  C049  F049         	movff	___fladd@b+2,?___fladd+2
  8960  001E6C  C04A  F04A         	movff	___fladd@b+3,?___fladd+3
  8961  001E70                     l712:
  8962  001E70  0012               	return		;funcret
  8963  001E72                     __end_of___fladd:
  8964                           	callstack 0
  8965                           
  8966 ;; *************** function _LCD_String_xy *****************
  8967 ;; Defined at:
  8968 ;;		line 75 in file "LCD_caracter.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;  row             1    wreg     unsigned char 
  8971 ;;  pos             1   10[COMRAM] unsigned char 
  8972 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  8973 ;;		 -> Sluz(20), Stemp(20), STR_1(14), 
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;  row             1   13[COMRAM] unsigned char 
  8976 ;;  location        1   14[COMRAM] unsigned char 
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      void 
  8979 ;; Registers used:
  8980 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8986 ;;      Params:         3       0       0       0       0       0       0       0       0
  8987 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8988 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8989 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8990 ;;Total ram usage:        5 bytes
  8991 ;; Hardware stack levels used: 1
  8992 ;; Hardware stack levels required when called: 3
  8993 ;; This function calls:
  8994 ;;		_LCD_Command
  8995 ;;		_LCD_String
  8996 ;; This function is called by:
  8997 ;;		_main
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           	psect	text33
  9002  003CE6                     __ptext33:
  9003                           	callstack 0
  9004  003CE6                     _LCD_String_xy:
  9005                           	callstack 27
  9006                           
  9007                           ;incstack = 0
  9008                           ;LCD_String_xy@row stored from wreg
  9009  003CE6  6E0E               	movwf	LCD_String_xy@row^0,c
  9010  003CE8                     
  9011                           ;LCD_caracter.c: 78:     if(row<=1)
  9012  003CE8  0E02               	movlw	2
  9013  003CEA  600E               	cpfslt	LCD_String_xy@row^0,c
  9014  003CEC  EF7A  F01E         	goto	u5061
  9015  003CF0  EF7C  F01E         	goto	u5060
  9016  003CF4                     u5061:
  9017  003CF4  EF85  F01E         	goto	l4265
  9018  003CF8                     u5060:
  9019  003CF8                     
  9020                           ;LCD_caracter.c: 79:     {;LCD_caracter.c: 80:         location=(0x80) | ((pos) & 0x0f);
  9021  003CF8  500B               	movf	LCD_String_xy@pos^0,w,c
  9022  003CFA  0B0F               	andlw	15
  9023  003CFC  0980               	iorlw	128
  9024  003CFE  6E0F               	movwf	LCD_String_xy@location^0,c
  9025  003D00                     
  9026                           ;LCD_caracter.c: 81:         LCD_Command(location);
  9027  003D00  500F               	movf	LCD_String_xy@location^0,w,c
  9028  003D02  EC9D  F01D         	call	_LCD_Command
  9029                           
  9030                           ;LCD_caracter.c: 82:     }
  9031  003D06  EF8C  F01E         	goto	l4269
  9032  003D0A                     l4265:
  9033                           
  9034                           ;LCD_caracter.c: 84:     {;LCD_caracter.c: 85:         location=(0xC0) | ((pos) & 0x0f);
  9035  003D0A  500B               	movf	LCD_String_xy@pos^0,w,c
  9036  003D0C  0B0F               	andlw	15
  9037  003D0E  09C0               	iorlw	192
  9038  003D10  6E0F               	movwf	LCD_String_xy@location^0,c
  9039  003D12                     
  9040                           ;LCD_caracter.c: 86:         LCD_Command(location);
  9041  003D12  500F               	movf	LCD_String_xy@location^0,w,c
  9042  003D14  EC9D  F01D         	call	_LCD_Command
  9043  003D18                     l4269:
  9044                           
  9045                           ;LCD_caracter.c: 90:     LCD_String(msg);
  9046  003D18  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
  9047  003D1C  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  9048  003D20  ECC8  F01C         	call	_LCD_String	;wreg free
  9049  003D24  0012               	return		;funcret
  9050  003D26                     __end_of_LCD_String_xy:
  9051                           	callstack 0
  9052                           
  9053 ;; *************** function _LCD_String *****************
  9054 ;; Defined at:
  9055 ;;		line 66 in file "LCD_caracter.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  msg             2    8[COMRAM] PTR const unsigned char 
  9058 ;;		 -> Sluz(20), Stemp(20), STR_1(14), 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;		None
  9061 ;; Return value:  Size  Location     Type
  9062 ;;                  1    wreg      void 
  9063 ;; Registers used:
  9064 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9065 ;; Tracked objects:
  9066 ;;		On entry : 0/0
  9067 ;;		On exit  : 0/0
  9068 ;;		Unchanged: 0/0
  9069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9070 ;;      Params:         2       0       0       0       0       0       0       0       0
  9071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9073 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9074 ;;Total ram usage:        2 bytes
  9075 ;; Hardware stack levels used: 1
  9076 ;; Hardware stack levels required when called: 2
  9077 ;; This function calls:
  9078 ;;		_LCD_Char
  9079 ;; This function is called by:
  9080 ;;		_LCD_String_xy
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           	psect	text34
  9085  003990                     __ptext34:
  9086                           	callstack 0
  9087  003990                     _LCD_String:
  9088                           	callstack 27
  9089  003990                     
  9090                           ;LCD_caracter.c: 66: void LCD_String(const char *msg);LCD_caracter.c: 67: {;LCD_caracter
      +                          .c: 68:  while((*msg)!=0)
  9091  003990  EFDE  F01C         	goto	l4187
  9092  003994                     l4183:
  9093                           
  9094                           ;LCD_caracter.c: 69:  {;LCD_caracter.c: 70:    LCD_Char(*msg);
  9095  003994  C009  FFF6         	movff	LCD_String@msg,tblptrl
  9096  003998  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  9097  00399C  6AF8               	clrf	tblptru,c
  9098  00399E  0E07               	movlw	(high __ramtop+-1)
  9099  0039A0  64F7               	cpfsgt	tblptrh,c
  9100  0039A2  D003               	bra	u4927
  9101  0039A4  0008               	tblrd		*
  9102  0039A6  50F5               	movf	tablat,w,c
  9103  0039A8  D005               	bra	u4920
  9104  0039AA                     u4927:
  9105  0039AA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9106  0039AE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9107  0039B2  50E7               	movf	indf1,w,c
  9108  0039B4                     u4920:
  9109  0039B4  EC77  F01D         	call	_LCD_Char
  9110  0039B8                     
  9111                           ;LCD_caracter.c: 71:    msg++;
  9112  0039B8  4A09               	infsnz	LCD_String@msg^0,f,c
  9113  0039BA  2A0A               	incf	(LCD_String@msg+1)^0,f,c
  9114  0039BC                     l4187:
  9115                           
  9116                           ;LCD_caracter.c: 68:  while((*msg)!=0)
  9117  0039BC  C009  FFF6         	movff	LCD_String@msg,tblptrl
  9118  0039C0  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  9119  0039C4  6AF8               	clrf	tblptru,c
  9120  0039C6  0E07               	movlw	(high __ramtop+-1)
  9121  0039C8  64F7               	cpfsgt	tblptrh,c
  9122  0039CA  D003               	bra	u4937
  9123  0039CC  0008               	tblrd		*
  9124  0039CE  50F5               	movf	tablat,w,c
  9125  0039D0  D005               	bra	u4930
  9126  0039D2                     u4937:
  9127  0039D2  CFF6 FFE1          	movff	tblptrl,fsr1l
  9128  0039D6  CFF7 FFE2          	movff	tblptrh,fsr1h
  9129  0039DA  50E7               	movf	indf1,w,c
  9130  0039DC                     u4930:
  9131  0039DC  0900               	iorlw	0
  9132  0039DE  A4D8               	btfss	status,2,c
  9133  0039E0  EFF4  F01C         	goto	u4941
  9134  0039E4  EFF6  F01C         	goto	u4940
  9135  0039E8                     u4941:
  9136  0039E8  EFCA  F01C         	goto	l4183
  9137  0039EC                     u4940:
  9138  0039EC  0012               	return		;funcret
  9139  0039EE                     __end_of_LCD_String:
  9140                           	callstack 0
  9141                           
  9142 ;; *************** function _LCD_Init *****************
  9143 ;; Defined at:
  9144 ;;		line 23 in file "LCD_caracter.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;		None
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;		None
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  1    wreg      void 
  9151 ;; Registers used:
  9152 ;;		wreg, status,2, status,0, cstack
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9158 ;;      Params:         0       0       0       0       0       0       0       0       0
  9159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9161 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9162 ;;Total ram usage:        0 bytes
  9163 ;; Hardware stack levels used: 1
  9164 ;; Hardware stack levels required when called: 2
  9165 ;; This function calls:
  9166 ;;		_LCD_Command
  9167 ;;		_MSdelay
  9168 ;; This function is called by:
  9169 ;;		_main
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           	psect	text35
  9174  003E04                     __ptext35:
  9175                           	callstack 0
  9176  003E04                     _LCD_Init:
  9177                           	callstack 28
  9178  003E04                     
  9179                           ;LCD_caracter.c: 25:     TRISB = 0;
  9180  003E04  0E00               	movlw	0
  9181  003E06  6E93               	movwf	147,c	;volatile
  9182  003E08                     
  9183                           ;LCD_caracter.c: 26:     MSdelay(15);
  9184  003E08  0E00               	movlw	0
  9185  003E0A  6E02               	movwf	(MSdelay@val+1)^0,c
  9186  003E0C  0E0F               	movlw	15
  9187  003E0E  6E01               	movwf	MSdelay@val^0,c
  9188  003E10  ECC3  F01D         	call	_MSdelay	;wreg free
  9189  003E14                     
  9190                           ;LCD_caracter.c: 27:     LCD_Command(0x02);
  9191  003E14  0E02               	movlw	2
  9192  003E16  EC9D  F01D         	call	_LCD_Command
  9193  003E1A                     
  9194                           ;LCD_caracter.c: 29:     LCD_Command(0x28);
  9195  003E1A  0E28               	movlw	40
  9196  003E1C  EC9D  F01D         	call	_LCD_Command
  9197  003E20                     
  9198                           ;LCD_caracter.c: 31:  LCD_Command(0x01);
  9199  003E20  0E01               	movlw	1
  9200  003E22  EC9D  F01D         	call	_LCD_Command
  9201  003E26                     
  9202                           ;LCD_caracter.c: 32:     LCD_Command(0x0c);
  9203  003E26  0E0C               	movlw	12
  9204  003E28  EC9D  F01D         	call	_LCD_Command
  9205  003E2C                     
  9206                           ;LCD_caracter.c: 33:  LCD_Command(0x06);
  9207  003E2C  0E06               	movlw	6
  9208  003E2E  EC9D  F01D         	call	_LCD_Command
  9209  003E32  0012               	return		;funcret
  9210  003E34                     __end_of_LCD_Init:
  9211                           	callstack 0
  9212                           
  9213 ;; *************** function _LCD_Custom_Char *****************
  9214 ;; Defined at:
  9215 ;;		line 99 in file "LCD_caracter.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;  loc             1    wreg     unsigned char 
  9218 ;;  msg             2    8[COMRAM] PTR unsigned char 
  9219 ;;		 -> character1(8), character2(8), 
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;  loc             1   10[COMRAM] unsigned char 
  9222 ;;  i               1   11[COMRAM] unsigned char 
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      void 
  9225 ;; Registers used:
  9226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9232 ;;      Params:         2       0       0       0       0       0       0       0       0
  9233 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9235 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9236 ;;Total ram usage:        4 bytes
  9237 ;; Hardware stack levels used: 1
  9238 ;; Hardware stack levels required when called: 2
  9239 ;; This function calls:
  9240 ;;		_LCD_Char
  9241 ;;		_LCD_Command
  9242 ;; This function is called by:
  9243 ;;		_main
  9244 ;; This function uses a non-reentrant model
  9245 ;;
  9246                           
  9247                           	psect	text36
  9248  003BD0                     __ptext36:
  9249                           	callstack 0
  9250  003BD0                     _LCD_Custom_Char:
  9251                           	callstack 28
  9252                           
  9253                           ;incstack = 0
  9254                           ;LCD_Custom_Char@loc stored from wreg
  9255  003BD0  6E0B               	movwf	LCD_Custom_Char@loc^0,c
  9256  003BD2                     
  9257                           ;LCD_caracter.c: 99: void LCD_Custom_Char ( unsigned char loc, unsigned char *msg);LCD_c
      +                          aracter.c: 100: {;LCD_caracter.c: 101:     unsigned char i;;LCD_caracter.c: 102:     if 
      +                          (loc< 8 )
  9258  003BD2  0E08               	movlw	8
  9259  003BD4  600B               	cpfslt	LCD_Custom_Char@loc^0,c
  9260  003BD6  EFEF  F01D         	goto	u5091
  9261  003BDA  EFF1  F01D         	goto	u5090
  9262  003BDE                     u5091:
  9263  003BDE  EF0B  F01E         	goto	l104
  9264  003BE2                     u5090:
  9265  003BE2                     
  9266                           ;LCD_caracter.c: 103:     {;LCD_caracter.c: 104:      LCD_Command ( 0x40 +(loc* 8 ));
  9267  003BE2  500B               	movf	LCD_Custom_Char@loc^0,w,c
  9268  003BE4  0D08               	mullw	8
  9269  003BE6  50F3               	movf	243,w,c
  9270  003BE8  0F40               	addlw	64
  9271  003BEA  EC9D  F01D         	call	_LCD_Command
  9272  003BEE                     
  9273                           ;LCD_caracter.c: 105:        for (i= 0 ;i< 8 ;i++)
  9274  003BEE  0E00               	movlw	0
  9275  003BF0  6E0C               	movwf	LCD_Custom_Char@i^0,c
  9276  003BF2                     l4329:
  9277                           
  9278                           ;LCD_caracter.c: 106:            LCD_Char (msg[i]);
  9279  003BF2  500C               	movf	LCD_Custom_Char@i^0,w,c
  9280  003BF4  2409               	addwf	LCD_Custom_Char@msg^0,w,c
  9281  003BF6  6ED9               	movwf	fsr2l,c
  9282  003BF8  0E00               	movlw	0
  9283  003BFA  200A               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  9284  003BFC  6EDA               	movwf	fsr2h,c
  9285  003BFE  50DF               	movf	indf2,w,c
  9286  003C00  EC77  F01D         	call	_LCD_Char
  9287  003C04  2A0C               	incf	LCD_Custom_Char@i^0,f,c
  9288  003C06  0E07               	movlw	7
  9289  003C08  640C               	cpfsgt	LCD_Custom_Char@i^0,c
  9290  003C0A  EF09  F01E         	goto	u5101
  9291  003C0E  EF0B  F01E         	goto	u5100
  9292  003C12                     u5101:
  9293  003C12  EFF9  F01D         	goto	l4329
  9294  003C16                     u5100:
  9295  003C16                     l104:
  9296  003C16  0012               	return		;funcret
  9297  003C18                     __end_of_LCD_Custom_Char:
  9298                           	callstack 0
  9299                           
  9300 ;; *************** function _LCD_Char *****************
  9301 ;; Defined at:
  9302 ;;		line 52 in file "LCD_caracter.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;  dat             1    wreg     unsigned char 
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;  dat             1    7[COMRAM] unsigned char 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9316 ;;      Params:         0       0       0       0       0       0       0       0       0
  9317 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9318 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9319 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9320 ;;Total ram usage:        2 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; Hardware stack levels required when called: 1
  9323 ;; This function calls:
  9324 ;;		_MSdelay
  9325 ;; This function is called by:
  9326 ;;		_main
  9327 ;;		_LCD_String
  9328 ;;		_LCD_Custom_Char
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text37
  9333  003AEE                     __ptext37:
  9334                           	callstack 0
  9335  003AEE                     _LCD_Char:
  9336                           	callstack 27
  9337                           
  9338                           ;incstack = 0
  9339                           ;LCD_Char@dat stored from wreg
  9340  003AEE  6E08               	movwf	LCD_Char@dat^0,c
  9341  003AF0                     
  9342                           ;LCD_caracter.c: 52: void LCD_Char(unsigned char dat);LCD_caracter.c: 53: {;LCD_caracter
      +                          .c: 54:  LATB = (LATB & 0x0f) | (0xF0 & dat);
  9343  003AF0  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  9344  003AF4  0EF0               	movlw	240
  9345  003AF6  1607               	andwf	??_LCD_Char^0,f,c
  9346  003AF8  508A               	movf	138,w,c	;volatile
  9347  003AFA  0B0F               	andlw	15
  9348  003AFC  1007               	iorwf	??_LCD_Char^0,w,c
  9349  003AFE  6E8A               	movwf	138,c	;volatile
  9350  003B00                     
  9351                           ;LCD_caracter.c: 55:  LATB2 = 1;
  9352  003B00  848A               	bsf	3978,2,c	;volatile
  9353  003B02                     
  9354                           ;LCD_caracter.c: 56:  LATB3 = 1;
  9355  003B02  868A               	bsf	3978,3,c	;volatile
  9356  003B04                     
  9357                           ;LCD_caracter.c: 57:  __nop();
  9358  003B04  F000               	nop	
  9359  003B06                     
  9360                           ;LCD_caracter.c: 58:  LATB3 = 0;
  9361  003B06  968A               	bcf	3978,3,c	;volatile
  9362  003B08                     
  9363                           ;LCD_caracter.c: 59:  MSdelay(1);
  9364  003B08  0E00               	movlw	0
  9365  003B0A  6E02               	movwf	(MSdelay@val+1)^0,c
  9366  003B0C  0E01               	movlw	1
  9367  003B0E  6E01               	movwf	MSdelay@val^0,c
  9368  003B10  ECC3  F01D         	call	_MSdelay	;wreg free
  9369  003B14                     
  9370                           ;LCD_caracter.c: 60:     LATB = (LATB & 0x0f) | (dat<<4);
  9371  003B14  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  9372  003B18  3A07               	swapf	??_LCD_Char^0,f,c
  9373  003B1A  0EF0               	movlw	240
  9374  003B1C  1607               	andwf	??_LCD_Char^0,f,c
  9375  003B1E  508A               	movf	138,w,c	;volatile
  9376  003B20  0B0F               	andlw	15
  9377  003B22  1007               	iorwf	??_LCD_Char^0,w,c
  9378  003B24  6E8A               	movwf	138,c	;volatile
  9379  003B26                     
  9380                           ;LCD_caracter.c: 61:  LATB3 = 1;
  9381  003B26  868A               	bsf	3978,3,c	;volatile
  9382  003B28                     
  9383                           ;LCD_caracter.c: 62:  __nop();
  9384  003B28  F000               	nop	
  9385  003B2A                     
  9386                           ;LCD_caracter.c: 63:  LATB3 = 0;
  9387  003B2A  968A               	bcf	3978,3,c	;volatile
  9388                           
  9389                           ;LCD_caracter.c: 64:  MSdelay(3);
  9390  003B2C  0E00               	movlw	0
  9391  003B2E  6E02               	movwf	(MSdelay@val+1)^0,c
  9392  003B30  0E03               	movlw	3
  9393  003B32  6E01               	movwf	MSdelay@val^0,c
  9394  003B34  ECC3  F01D         	call	_MSdelay	;wreg free
  9395  003B38  0012               	return		;funcret
  9396  003B3A                     __end_of_LCD_Char:
  9397                           	callstack 0
  9398                           
  9399 ;; *************** function _LCD_Clear *****************
  9400 ;; Defined at:
  9401 ;;		line 93 in file "LCD_caracter.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;		None
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1    wreg      void 
  9408 ;; Registers used:
  9409 ;;		wreg, status,2, status,0, cstack
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9415 ;;      Params:         0       0       0       0       0       0       0       0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9418 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9419 ;;Total ram usage:        0 bytes
  9420 ;; Hardware stack levels used: 1
  9421 ;; Hardware stack levels required when called: 2
  9422 ;; This function calls:
  9423 ;;		_LCD_Command
  9424 ;;		_MSdelay
  9425 ;; This function is called by:
  9426 ;;		_main
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           	psect	text38
  9431  003E72                     __ptext38:
  9432                           	callstack 0
  9433  003E72                     _LCD_Clear:
  9434                           	callstack 28
  9435  003E72                     
  9436                           ;LCD_caracter.c: 95:     LCD_Command(0x01);
  9437  003E72  0E01               	movlw	1
  9438  003E74  EC9D  F01D         	call	_LCD_Command
  9439                           
  9440                           ;LCD_caracter.c: 96:     MSdelay(3);
  9441  003E78  0E00               	movlw	0
  9442  003E7A  6E02               	movwf	(MSdelay@val+1)^0,c
  9443  003E7C  0E03               	movlw	3
  9444  003E7E  6E01               	movwf	MSdelay@val^0,c
  9445  003E80  ECC3  F01D         	call	_MSdelay	;wreg free
  9446  003E84  0012               	return		;funcret
  9447  003E86                     __end_of_LCD_Clear:
  9448                           	callstack 0
  9449                           
  9450 ;; *************** function _LCD_Command *****************
  9451 ;; Defined at:
  9452 ;;		line 36 in file "LCD_caracter.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;  cmd             1    wreg     unsigned char 
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;  cmd             1    7[COMRAM] unsigned char 
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1    wreg      void 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0, cstack
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9466 ;;      Params:         0       0       0       0       0       0       0       0       0
  9467 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9468 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9469 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9470 ;;Total ram usage:        2 bytes
  9471 ;; Hardware stack levels used: 1
  9472 ;; Hardware stack levels required when called: 1
  9473 ;; This function calls:
  9474 ;;		_MSdelay
  9475 ;; This function is called by:
  9476 ;;		_main
  9477 ;;		_LCD_Init
  9478 ;;		_LCD_String_xy
  9479 ;;		_LCD_Clear
  9480 ;;		_LCD_Custom_Char
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           	psect	text39
  9485  003B3A                     __ptext39:
  9486                           	callstack 0
  9487  003B3A                     _LCD_Command:
  9488                           	callstack 28
  9489                           
  9490                           ;incstack = 0
  9491                           ;LCD_Command@cmd stored from wreg
  9492  003B3A  6E08               	movwf	LCD_Command@cmd^0,c
  9493  003B3C                     
  9494                           ;LCD_caracter.c: 36: void LCD_Command(unsigned char cmd );LCD_caracter.c: 37: {;LCD_cara
      +                          cter.c: 38:  LATB = (LATB & 0x0f) |(0xF0 & cmd);
  9495  003B3C  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  9496  003B40  0EF0               	movlw	240
  9497  003B42  1607               	andwf	??_LCD_Command^0,f,c
  9498  003B44  508A               	movf	138,w,c	;volatile
  9499  003B46  0B0F               	andlw	15
  9500  003B48  1007               	iorwf	??_LCD_Command^0,w,c
  9501  003B4A  6E8A               	movwf	138,c	;volatile
  9502  003B4C                     
  9503                           ;LCD_caracter.c: 39:  LATB2 = 0;
  9504  003B4C  948A               	bcf	3978,2,c	;volatile
  9505  003B4E                     
  9506                           ;LCD_caracter.c: 40:  LATB3 = 1;
  9507  003B4E  868A               	bsf	3978,3,c	;volatile
  9508  003B50                     
  9509                           ;LCD_caracter.c: 41:  __nop();
  9510  003B50  F000               	nop	
  9511  003B52                     
  9512                           ;LCD_caracter.c: 42:  LATB3 = 0;
  9513  003B52  968A               	bcf	3978,3,c	;volatile
  9514  003B54                     
  9515                           ;LCD_caracter.c: 43:  MSdelay(1);
  9516  003B54  0E00               	movlw	0
  9517  003B56  6E02               	movwf	(MSdelay@val+1)^0,c
  9518  003B58  0E01               	movlw	1
  9519  003B5A  6E01               	movwf	MSdelay@val^0,c
  9520  003B5C  ECC3  F01D         	call	_MSdelay	;wreg free
  9521  003B60                     
  9522                           ;LCD_caracter.c: 44:     LATB = (LATB & 0x0f) | (cmd<<4);
  9523  003B60  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  9524  003B64  3A07               	swapf	??_LCD_Command^0,f,c
  9525  003B66  0EF0               	movlw	240
  9526  003B68  1607               	andwf	??_LCD_Command^0,f,c
  9527  003B6A  508A               	movf	138,w,c	;volatile
  9528  003B6C  0B0F               	andlw	15
  9529  003B6E  1007               	iorwf	??_LCD_Command^0,w,c
  9530  003B70  6E8A               	movwf	138,c	;volatile
  9531  003B72                     
  9532                           ;LCD_caracter.c: 45:  LATB3 = 1;
  9533  003B72  868A               	bsf	3978,3,c	;volatile
  9534  003B74                     
  9535                           ;LCD_caracter.c: 46:  __nop();
  9536  003B74  F000               	nop	
  9537  003B76                     
  9538                           ;LCD_caracter.c: 47:  LATB3 = 0;
  9539  003B76  968A               	bcf	3978,3,c	;volatile
  9540                           
  9541                           ;LCD_caracter.c: 48:  MSdelay(3);
  9542  003B78  0E00               	movlw	0
  9543  003B7A  6E02               	movwf	(MSdelay@val+1)^0,c
  9544  003B7C  0E03               	movlw	3
  9545  003B7E  6E01               	movwf	MSdelay@val^0,c
  9546  003B80  ECC3  F01D         	call	_MSdelay	;wreg free
  9547  003B84  0012               	return		;funcret
  9548  003B86                     __end_of_LCD_Command:
  9549                           	callstack 0
  9550                           
  9551 ;; *************** function _MSdelay *****************
  9552 ;; Defined at:
  9553 ;;		line 111 in file "LCD_caracter.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  val             2    0[COMRAM] unsigned int 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  j               2    4[COMRAM] unsigned int 
  9558 ;;  i               2    2[COMRAM] unsigned int 
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9568 ;;      Params:         2       0       0       0       0       0       0       0       0
  9569 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9571 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9572 ;;Total ram usage:        6 bytes
  9573 ;; Hardware stack levels used: 1
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_main
  9578 ;;		_LCD_Init
  9579 ;;		_LCD_Command
  9580 ;;		_LCD_Char
  9581 ;;		_LCD_Clear
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           	psect	text40
  9586  003B86                     __ptext40:
  9587                           	callstack 0
  9588  003B86                     _MSdelay:
  9589                           	callstack 30
  9590  003B86                     
  9591                           ;LCD_caracter.c: 111: void MSdelay(unsigned int val);LCD_caracter.c: 112: {;LCD_caracter
      +                          .c: 113:  unsigned int i,j;;LCD_caracter.c: 114:  for(i=0;i<val;i++)
  9592  003B86  0E00               	movlw	0
  9593  003B88  6E04               	movwf	(MSdelay@i+1)^0,c
  9594  003B8A  0E00               	movlw	0
  9595  003B8C  6E03               	movwf	MSdelay@i^0,c
  9596  003B8E  EFDC  F01D         	goto	l3641
  9597  003B92                     l3629:
  9598                           
  9599                           ;LCD_caracter.c: 115:      for(j=0;j<165;j++);
  9600  003B92  0E00               	movlw	0
  9601  003B94  6E06               	movwf	(MSdelay@j+1)^0,c
  9602  003B96  0E00               	movlw	0
  9603  003B98  6E05               	movwf	MSdelay@j^0,c
  9604  003B9A                     l3635:
  9605  003B9A  4A05               	infsnz	MSdelay@j^0,f,c
  9606  003B9C  2A06               	incf	(MSdelay@j+1)^0,f,c
  9607  003B9E  5006               	movf	(MSdelay@j+1)^0,w,c
  9608  003BA0  E109               	bnz	u4080
  9609  003BA2  0EA5               	movlw	165
  9610  003BA4  5C05               	subwf	MSdelay@j^0,w,c
  9611  003BA6  A0D8               	btfss	status,0,c
  9612  003BA8  EFD8  F01D         	goto	u4081
  9613  003BAC  EFDA  F01D         	goto	u4080
  9614  003BB0                     u4081:
  9615  003BB0  EFCD  F01D         	goto	l3635
  9616  003BB4                     u4080:
  9617  003BB4  4A03               	infsnz	MSdelay@i^0,f,c
  9618  003BB6  2A04               	incf	(MSdelay@i+1)^0,f,c
  9619  003BB8                     l3641:
  9620  003BB8  5001               	movf	MSdelay@val^0,w,c
  9621  003BBA  5C03               	subwf	MSdelay@i^0,w,c
  9622  003BBC  5002               	movf	(MSdelay@val+1)^0,w,c
  9623  003BBE  5804               	subwfb	(MSdelay@i+1)^0,w,c
  9624  003BC0  A0D8               	btfss	status,0,c
  9625  003BC2  EFE5  F01D         	goto	u4091
  9626  003BC6  EFE7  F01D         	goto	u4090
  9627  003BCA                     u4091:
  9628  003BCA  EFC9  F01D         	goto	l3629
  9629  003BCE                     u4090:
  9630  003BCE  0012               	return		;funcret
  9631  003BD0                     __end_of_MSdelay:
  9632                           	callstack 0
  9633                           
  9634                           	psect	rparam
  9635  0000                     
  9636                           	psect	idloc
  9637                           
  9638                           ;Config register IDLOC0 @ 0x200000
  9639                           ;	unspecified, using default values
  9640  200000                     	org	2097152
  9641  200000  FF                 	db	255
  9642                           
  9643                           ;Config register IDLOC1 @ 0x200001
  9644                           ;	unspecified, using default values
  9645  200001                     	org	2097153
  9646  200001  FF                 	db	255
  9647                           
  9648                           ;Config register IDLOC2 @ 0x200002
  9649                           ;	unspecified, using default values
  9650  200002                     	org	2097154
  9651  200002  FF                 	db	255
  9652                           
  9653                           ;Config register IDLOC3 @ 0x200003
  9654                           ;	unspecified, using default values
  9655  200003                     	org	2097155
  9656  200003  FF                 	db	255
  9657                           
  9658                           ;Config register IDLOC4 @ 0x200004
  9659                           ;	unspecified, using default values
  9660  200004                     	org	2097156
  9661  200004  FF                 	db	255
  9662                           
  9663                           ;Config register IDLOC5 @ 0x200005
  9664                           ;	unspecified, using default values
  9665  200005                     	org	2097157
  9666  200005  FF                 	db	255
  9667                           
  9668                           ;Config register IDLOC6 @ 0x200006
  9669                           ;	unspecified, using default values
  9670  200006                     	org	2097158
  9671  200006  FF                 	db	255
  9672                           
  9673                           ;Config register IDLOC7 @ 0x200007
  9674                           ;	unspecified, using default values
  9675  200007                     	org	2097159
  9676  200007  FF                 	db	255
  9677                           
  9678                           	psect	config
  9679                           
  9680                           ;Config register CONFIG1L @ 0x300000
  9681                           ;	PLL Prescaler Selection bits
  9682                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9683                           ;	System Clock Postscaler Selection bits
  9684                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9685                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9686                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9687  300000                     	org	3145728
  9688  300000  00                 	db	0
  9689                           
  9690                           ;Config register CONFIG1H @ 0x300001
  9691                           ;	Oscillator Selection bits
  9692                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  9693                           ;	Fail-Safe Clock Monitor Enable bit
  9694                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9695                           ;	Internal/External Oscillator Switchover bit
  9696                           ;	IESO = ON, Oscillator Switchover mode enabled
  9697  300001                     	org	3145729
  9698  300001  88                 	db	136
  9699                           
  9700                           ;Config register CONFIG2L @ 0x300002
  9701                           ;	Power-up Timer Enable bit
  9702                           ;	PWRT = ON, PWRT enabled
  9703                           ;	Brown-out Reset Enable bits
  9704                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9705                           ;	Brown-out Reset Voltage bits
  9706                           ;	BORV = 3, Minimum setting 2.05V
  9707                           ;	USB Voltage Regulator Enable bit
  9708                           ;	VREGEN = OFF, USB voltage regulator disabled
  9709  300002                     	org	3145730
  9710  300002  18                 	db	24
  9711                           
  9712                           ;Config register CONFIG2H @ 0x300003
  9713                           ;	Watchdog Timer Enable bit
  9714                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9715                           ;	Watchdog Timer Postscale Select bits
  9716                           ;	WDTPS = 32768, 1:32768
  9717  300003                     	org	3145731
  9718  300003  1E                 	db	30
  9719                           
  9720                           ; Padding undefined space
  9721  300004                     	org	3145732
  9722  300004  FF                 	db	255
  9723                           
  9724                           ;Config register CONFIG3H @ 0x300005
  9725                           ;	CCP2 MUX bit
  9726                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9727                           ;	PORTB A/D Enable bit
  9728                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  9729                           ;	Low-Power Timer 1 Oscillator Enable bit
  9730                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9731                           ;	MCLR Pin Enable bit
  9732                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9733  300005                     	org	3145733
  9734  300005  83                 	db	131
  9735                           
  9736                           ;Config register CONFIG4L @ 0x300006
  9737                           ;	Stack Full/Underflow Reset Enable bit
  9738                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9739                           ;	Single-Supply ICSP Enable bit
  9740                           ;	LVP = ON, Single-Supply ICSP enabled
  9741                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9742                           ;	ICPRT = OFF, ICPORT disabled
  9743                           ;	Extended Instruction Set Enable bit
  9744                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9745                           ;	Background Debugger Enable bit
  9746                           ;	DEBUG = 0x1, unprogrammed default
  9747  300006                     	org	3145734
  9748  300006  85                 	db	133
  9749                           
  9750                           ; Padding undefined space
  9751  300007                     	org	3145735
  9752  300007  FF                 	db	255
  9753                           
  9754                           ;Config register CONFIG5L @ 0x300008
  9755                           ;	Code Protection bit
  9756                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9757                           ;	Code Protection bit
  9758                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9759                           ;	Code Protection bit
  9760                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9761                           ;	Code Protection bit
  9762                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9763  300008                     	org	3145736
  9764  300008  0F                 	db	15
  9765                           
  9766                           ;Config register CONFIG5H @ 0x300009
  9767                           ;	Boot Block Code Protection bit
  9768                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9769                           ;	Data EEPROM Code Protection bit
  9770                           ;	CPD = OFF, Data EEPROM is not code-protected
  9771  300009                     	org	3145737
  9772  300009  C0                 	db	192
  9773                           
  9774                           ;Config register CONFIG6L @ 0x30000A
  9775                           ;	Write Protection bit
  9776                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9777                           ;	Write Protection bit
  9778                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9779                           ;	Write Protection bit
  9780                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9781                           ;	Write Protection bit
  9782                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9783  30000A                     	org	3145738
  9784  30000A  0F                 	db	15
  9785                           
  9786                           ;Config register CONFIG6H @ 0x30000B
  9787                           ;	Configuration Register Write Protection bit
  9788                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9789                           ;	Boot Block Write Protection bit
  9790                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9791                           ;	Data EEPROM Write Protection bit
  9792                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9793  30000B                     	org	3145739
  9794  30000B  E0                 	db	224
  9795                           
  9796                           ;Config register CONFIG7L @ 0x30000C
  9797                           ;	Table Read Protection bit
  9798                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9799                           ;	Table Read Protection bit
  9800                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9801                           ;	Table Read Protection bit
  9802                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9803                           ;	Table Read Protection bit
  9804                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9805  30000C                     	org	3145740
  9806  30000C  0F                 	db	15
  9807                           
  9808                           ;Config register CONFIG7H @ 0x30000D
  9809                           ;	Boot Block Table Read Protection bit
  9810                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9811  30000D                     	org	3145741
  9812  30000D  40                 	db	64
  9813                           tosu	equ	0xFFF
  9814                           tosh	equ	0xFFE
  9815                           tosl	equ	0xFFD
  9816                           stkptr	equ	0xFFC
  9817                           pclatu	equ	0xFFB
  9818                           pclath	equ	0xFFA
  9819                           pcl	equ	0xFF9
  9820                           tblptru	equ	0xFF8
  9821                           tblptrh	equ	0xFF7
  9822                           tblptrl	equ	0xFF6
  9823                           tablat	equ	0xFF5
  9824                           prodh	equ	0xFF4
  9825                           prodl	equ	0xFF3
  9826                           indf0	equ	0xFEF
  9827                           postinc0	equ	0xFEE
  9828                           postdec0	equ	0xFED
  9829                           preinc0	equ	0xFEC
  9830                           plusw0	equ	0xFEB
  9831                           fsr0h	equ	0xFEA
  9832                           fsr0l	equ	0xFE9
  9833                           wreg	equ	0xFE8
  9834                           indf1	equ	0xFE7
  9835                           postinc1	equ	0xFE6
  9836                           postdec1	equ	0xFE5
  9837                           preinc1	equ	0xFE4
  9838                           plusw1	equ	0xFE3
  9839                           fsr1h	equ	0xFE2
  9840                           fsr1l	equ	0xFE1
  9841                           bsr	equ	0xFE0
  9842                           indf2	equ	0xFDF
  9843                           postinc2	equ	0xFDE
  9844                           postdec2	equ	0xFDD
  9845                           preinc2	equ	0xFDC
  9846                           plusw2	equ	0xFDB
  9847                           fsr2h	equ	0xFDA
  9848                           fsr2l	equ	0xFD9
  9849                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        24
    BSS         156
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    122     157
    BANK1           256      0     144
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[6]), STR_4(CODE[8]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[6]), STR_4(CODE[8]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[6]), STR_4(CODE[8]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[6]), STR_6(CODE[8]), STR_5(CODE[6]), STR_4(CODE[8]), 
		 -> STR_3(CODE[6]), STR_2(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S863_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> character1(BANK1[8]), character2(BANK1[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), STR_1(CODE[14]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> Sluz(BANK1[20]), Stemp(BANK1[20]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _efgtoa->___flsub
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _atoi->_isspace
    _ReadADC->___fltol
    ___xxtofl->_ReadLUZ
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Char->_MSdelay
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _ReadADC->___fltol

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   53355
                                            118 BANK0      4     4      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                    _LCD_Custom_Char
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                            _ReadADC
                            _ReadLUZ
                             ___flge
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   31247
                                            102 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   30130
                                             94 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   29747
                                             70 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   24292
                                              2 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             70 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             86 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    2310
                                             45 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ReadLUZ                                              6     4      2      46
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              6     4      2    8609
                                              2 BANK0      6     4      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              6 COMRAM    14    10      4
                            _ReadLUZ (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             86 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             45 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             70 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    2960
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     941
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1596
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Custom_Char                                      4     2      2    2002
                                              8 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     820
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    1596
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     820
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     776
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
     _MSdelay
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Command
   _LCD_Custom_Char
     _LCD_Char
     _LCD_Command
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _MSdelay
   _ReadADC
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _ReadLUZ (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ReadLUZ
   ___flge
     ___flmul (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      90       7       56.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18C      20        0.0%
DATA                 0      0     18C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 20 11:47:16 2021

            ___fldiv@aexp 0046              ___fldiv@bexp 0045              ___fldiv@sign 003E  
            ?_LCD_Command 0001                        l81 3B84                        l90 39EC  
                      l84 3B38                        l78 3E32                        l95 3D24  
                      l98 3E84              ___awdiv@sign 0006       ___wmul@multiplicand 0003  
             ?_LCD_String 0009           _LCD_Custom_Char 3BD0                       l112 3BCE  
                     l104 3C16                       l142 331E                       l144 332C  
                     l145 33E2                       l170 38CC                       l406 370C  
                     l167 38A4                       l175 3E58                       l440 31A0  
                     l169 38B2                       l434 3866                       l419 37BC  
                     l445 31E6                       l703 1BA0                       l720 1CBA  
                     l712 1E70                       l704 1B8E                       l472 30E2  
                     l705 1B54                       l449 3D94                       l730 1D78  
                     l806 26AC                       l830 2CEE                       l729 1D8A  
                     l833 2E4A                       l745 3C5C                       l770 29A2  
                     l762 28A8                       l771 2990                       l844 2DE2  
                     l757 2A84                       l837 2D86                       l917 1488  
                     l853 3A9A                       l759 28E4                       l935 0C1E  
                     l768 292A                       l793 26EA                       l963 105E  
                     l796 257C                       l789 2386                       l798 25F4  
                     l894 35CA                       l799 25E2                       l897 360C  
                     l899 3648                       _pad 3584                       _luz 00EA  
            ___awmod@sign 0006                       wreg 000FE8              ___flmul@aexp 0026  
            ___flmul@bexp 0027              ___flmul@sign 0021              ___flmul@temp 002C  
            ___flmul@prod 0028               LCD_Char@dat 0008              ___fltol@exp1 0061  
                    l1101 3AEC                      l1021 19B0                      l1006 157C  
                    l1122 3582                      l1130 3CE4                      l1034 3926  
                    l1107 3D5C                      l1035 392E                      l1028 18F6  
                    l1045 32E4                      l1133 3E86                      l3001 1D1C  
                    l1145 3E02                      l1074 2FD2                      l3003 1D24  
                    l3011 1D48                      l1083 2C96                      l1139 3A48  
                    l1164 398E                      l3021 1D9A                      l3013 1D4C  
                    l3005 1D28                      l3101 2758                      l1093 3DCC  
                    l1077 2FDA                      l1149 34B8                      l1086 2BDA  
                    l3031 1E00                      l3023 1DA6                      l3015 1D5A  
                    l3007 1D38                      l3111 278E                      l3103 275E  
                    l1159 3986                      l3041 1E48                      l3033 1E10  
                    l3025 1DB4                      l3017 1D70                      l3009 1D3A  
                    l3201 2A44                      l3121 27CE                      l3113 279E  
                    l3105 276C                      l4001 3428                      l3043 1E4A  
                    l3035 1E30                      l3027 1DEE                      l3211 2A7A  
                    l3203 2A60                      l3123 27DE                      l3131 27FE  
                    l3115 27A0                      l3107 276E                      l4003 3440  
                    l4021 3B06                      l4013 3AF0                      l3045 1E50  
                    l3037 1E34                      l3029 1DF0                      l3205 2A64  
                    l3141 283C                      l3133 280E                      l3125 27E6  
                    l3109 277E                      l3117 27A8                      l3301 2562  
                    l3221 22CE                      l3053 3CA2                      l3061 3DCE  
                    l4005 345C                      l4101 1720                      l4031 3B2A  
                    l4023 3B08                      l4015 3B00                      l3047 1E5E  
                    l3039 1E42                      l3207 2A72                      l3151 2884  
                    l3143 284C                      l3135 280E                      l3127 27EA  
                    l3119 27B8                      l3311 259E                      l3303 256C  
                    l3231 230E                      l3223 22DC                      l3055 3CAE  
                    l3063 3DDA                      l3071 3D26                      l4007 346E  
                    l4111 17B8                      l4103 1752                      l4025 3B14  
                    l4017 3B02                      l3049 1E60                      l3209 2A78  
                    l3161 28D2                      l3153 2898                      l3145 285C  
                    l3081 26EC                      l3321 2610                      l3313 25AC  
                    l3305 257A                      l3241 233E                      l3233 2314  
                    l3225 22DE                      l4201 2D28                      l3401 3712  
                    l3057 3CC0                      l3065 3DDE                      l4009 3496  
                    l4121 1880                      l4105 1764                      l4041 14D2  
                    l4033 148A                      l4027 3B26                      l4019 3B04  
                    l3171 291A                      l3163 28E2                      l3155 28A6  
                    l3147 286C                      l3139 2822                      l3091 2728  
                    l3083 26F8                      l3331 267A                      l3323 261E  
                    l3315 25DA                      l3307 258C                      l3251 2376  
                    l3243 2340                      l3235 2324                      l3227 22EE  
                    l3219 22C2                      l4211 2D7C                      l4203 2D30  
                    l3075 3E34                      l3411 3742                      l3403 3720  
                    l3059 3CC4                      l3067 3DF6                      l4123 1892  
                    l4131 190A                      l4107 177A                      l4115 17E4  
                    l4051 14F8                      l4043 14DE                      l4035 14AE  
                    l4029 3B28                      l3181 295A                      l3173 2928  
                    l3165 28F4                      l3157 28B2                      l3149 2874  
                    l3093 2738                      l3085 2706                      l3341 26D0  
                    l3333 2694                      l3325 2648                      l3309 259A  
                    l3261 23C6                      l3253 2396                      l3245 2350  
                    l3237 232A                      l3229 22FE                      l4221 2DF2  
                    l4213 2DB8                      l4205 2D3C                      l4301 38B8  
                    l3077 3E50                      l3421 3788                      l3413 3754  
                    l3405 3728                      l4133 192E                      l4141 195E  
                    l4125 18C6                      l4117 1812                      l4109 1788  
                    l4045 14E0                      l4037 14BC                      l3191 29CC  
                    l3183 2988                      l3167 290A                      l3175 293A  
                    l3159 28D0                      l3095 273A                      l3087 2708  
                    l3335 26B0                      l3343 26D6                      l3319 2604  
                    l3327 264C                      l3271 2416                      l3263 23D0  
                    l3255 23A6                      l3247 2360                      l3239 2330  
                    l3503 306E                      l4231 2E3A                      l4223 2DF6  
                    l4215 2DC4                      l4207 2D6E                      l4303 38C4  
                    l3431 37B4                      l3423 3790                      l3415 375C  
                    l3407 372C                      l3351 3C28                      l4143 196C  
                    l4135 193C                      l4071 158A                      l4063 150A  
                    l4055 14FE                      l4047 14F2                      l4039 14CE  
                    l4311 3A64                      l4161 3B3C                      l4321 3BE2  
                    l3193 29F6                      l3177 2948                      l3169 2910  
                    l3089 2718                      l3097 2742                      l3345 26DA  
                    l3337 26C0                      l3329 2666                      l3281 2458  
                    l3273 2422                      l3265 23E6                      l3249 2370  
                    l3521 30D2                      l3513 3096                      l3505 3078  
                    l4225 2E1A                      l4217 2DD2                      l4209 2D70  
                    l3361 3664                      l3425 3796                      l3417 3764  
                    l3409 373A                      l3441 382A                      l3601 2C3A  
                    l4137 1950                      l4081 15EA                      l4073 158C  
                    l4241 390A                      l4313 3A6C                      l4401 2186  
                    l4171 3B54                      l4163 3B4C                      l4331 3C04  
                    l4323 3BEE                      l4251 3E20                      l4243 3E04  
                    l3187 29B2                      l3195 29FA                      l3179 294C  
                    l3099 2752                      l3339 26CE                      l3291 24BA  
                    l3283 2468                      l3275 2430                      l3267 23F2  
                    l3259 23BA                      l3515 30A2                      l3507 3082  
                    l4227 2E2A                      l4219 2DF0                      l3611 3D96  
                    l3371 368A                      l3363 3668                      l3355 364A  
                    l3419 3772                      l3427 379C                      l3443 383A  
                    l3435 37BE                      l3451 30E4                      l3603 2C4E  
                    l3531 35B6                      l4091 169A                      l4083 1624  
                    l4075 15B0                      l4067 1516                      l4059 1504  
                    l4147 197A                      l4235 38CE                      l4315 3A88  
                    l4307 3A4A                      l4411 2244                      l4403 2188  
                    l4173 3B60                      l4165 3B4E                      l4333 3C06  
                    l4253 3E26                      l4245 3E08                      l4181 3990  
                    l4261 3CF8                      l2901 1ABA                      l3197 2A14  
                    l3189 29BE                      l3293 24D6                      l3285 2482  
                    l3277 243C                      l3269 240A                      l3517 30B2  
                    l4229 2E38                      l3621 3AE2                      l3381 36C0  
                    l3373 369C                      l3365 3676                      l3357 364E  
                    l3429 37AC                      l3445 385E                      l3437 37EC  
                    l3461 316E                      l3453 3112                      l3349 3C18  
                    l3605 2C76                      l3541 361C                      l3533 35C2  
                    l3525 3584                      l3701 0A4A                      l4149 199E  
                    l4085 1644                      l4077 15B8                      l4093 16AC  
                    l4069 156A                      l4237 38D6                      l4309 3A5C  
                    l4421 22A8                      l4413 2256                      l4405 21BA  
                    l4341 1E90                      l4175 3B72                      l4167 3B50  
                    l4271 3E72                      l4319 3BD2                      l4255 3E2C  
                    l4247 3E14                      l4183 3994                      l4263 3D00  
                    l2911 1ACE                      l2903 1ABE                      l3199 2A2A  
                    l3295 2500                      l3287 2492                      l3279 244C  
                    l3519 30C2                      l4191 2CAA                      l3623 3AE6  
                    l3615 3A9C                      l3383 36D6                      l3375 36A4  
                    l3391 36EC                      l3367 367E                      l3359 365C  
                    l3447 3864                      l3439 37FC                      l3463 3180  
                    l3455 3122                      l3551 3246                      l3607 2C86  
                    l3543 3630                      l3535 35D6                      l3527 3594  
                    l3711 0A80                      l4095 16CE                      l4087 1652  
                    l4079 15C6                      l4239 38E4                      l4423 22B4  
                    l4415 228E                      l4407 21EC                      l4351 1F24  
                    l4343 1E94                      l4335 1E72                      l3641 3BB8  
                    l4177 3B74                      l4169 3B52                      l4329 3BF2  
                    l4249 3E1A                      l4185 39B8                      l4265 3D0A  
                    l4257 3CE8                      l2921 1AE2                      l2913 1AD2  
                    l2905 1AC2                      l3297 2536                      l3289 24AE  
                    l3481 2FDC                      l4193 2CB8                      l4281 331C  
                    l4273 32E6                      l3617 3AA0                      l3393 36FC  
                    l3385 36DE                      l3377 36AC                      l3369 3682  
                    l3465 318E                      l3457 3150                      l3473 3D5E  
                    l3561 3298                      l3553 326E                      l2841 34DE  
                    l3537 35EA                      l3529 35A8                      l3801 0F2A  
                    l3721 0B4A                      l4097 16DE                      l4425 22B6  
                    l4417 229C                      l4409 221E                      l4361 1FF8  
                    l4353 1F56                      l4345 1EA6                      l4337 1E7A  
                    l3635 3B9A                      l3627 3B86                      l4179 3B76  
                    l4187 39BC                      l4267 3D12                      l4259 3CE8  
                    l2931 1AF6                      l2923 1AE6                      l2915 1AD6  
                    l2907 1AC6                      l2851 19B2                      l3299 2544  
                    l3491 3034                      l3483 2FF4                      l4195 2CFE  
                    l4283 3334                      l4275 32EA                      l4291 3868  
                    l3619 3AB4                      l3395 3704                      l3387 36E0  
                    l3379 36BA                      l3467 31DE                      l3459 3160  
                    l3475 3D74                      l3555 327A                      l3547 31E8  
                    l2843 34E8                      l3539 35EE                      l3571 39FE  
                    l3811 0FDA                      l3803 0F3A                      l3731 0BCC  
                    l3723 0B7E                      l3715 0AB6                      l3651 0862  
                    l3643 0832                      l4099 1710                      l4427 22B8  
                    l4419 22A2                      l4371 2020                      l4363 2006  
                    l4355 1F88                      l4347 1ECC                      l4339 1E7E  
                    l3637 3B9E                      l3629 3B92                      l4269 3D18  
                    l2941 1B6E                      l2933 1B20                      l2925 1AEA  
                    l2917 1ADA                      l2909 1ACA                      l2861 19EE  
                    l2853 19BE                      l3493 3044                      l4197 2D14  
                    l4189 2C9A                      l4285 3340                      l4277 3318  
                    l4293 386C                      l3389 36E6                      l3469 31E4  
                    l3477 3D84                      l3565 32DC                      l3549 3208  
                    l2845 3506                      l2837 34BA                      l3573 3930  
                    l3901 1322                      l3821 104A                      l3813 100E  
                    l3805 0F4A                      l3733 0BDE                      l3741 0C2A  
                    l3725 0B86                      l3717 0AEA                      l3709 0A66  
                    l3661 08B8                      l3653 0886                      l3645 083C  
                    l4381 20BA                      l4373 2022                      l4365 200C  
                    l4357 1FAE                      l4349 1EF2                      ?_pad 0011  
                    l3639 3BB4                      l2951 1BAE                      l2943 1B72  
                    l2935 1B3C                      l2927 1AEE                      l2919 1ADE  
                    l2871 1A1E                      l2863 19FE                      l2855 19CC  
                    l3495 3048                      l3487 3008                      l4287 33DA  
                    l4279 331A                      l4295 389E                      l3399 370E  
                    l3559 3286                      l3591 2B1E                      l3583 2A86  
                    l2847 353C                      l2839 34CC                      l3911 137E  
                    l3903 132E                      l3831 1100                      l3823 1056  
                    l3815 1022                      l3807 0F7E                      l3751 0C6A  
                    l3735 0BF0                      l3719 0AF0                      l3727 0BB8  
                    l3671 08E6                      l3663 08CA                      l3655 0890  
                    l3647 084C                      l4391 216A                      l4383 20EC  
                    l4367 2012                      l4359 1FC0                      l4375 2024  
                    l2961 1BF0                      l2953 1BBE                      l2945 1B80  
                    l2937 1B4C                      l2929 1AF2                      l2881 1A48  
                    l2873 1A30                      l2865 1A00                      l2857 19CE  
                    l3497 3056                      l3489 3032                      l4297 38A0  
                    l3585 2AA6                      l3569 39EE                      l3577 3966  
                    l3921 13C8                      l3905 1334                      l3913 1384  
                    l3841 1148                      l3833 1112                      l3825 107A  
                    l3809 0FD4                      l3817 1026                      l3761 0CC6  
                    l3753 0CA0                      l3737 0BF8                      l3729 0BC8  
                    l3681 095A                      l3665 08D6                      l3673 08EC  
                    l3657 0898                      l3649 085A                      l4481 153C  
                    l4393 2170                      l4385 2112                      l4377 2056  
                    l4369 201E                      l2971 1C1E                      l2963 1BFE  
                    l2947 1B82                      l2939 1B62                      l2883 1A58  
                    l2891 1A82                      l2875 1A32                      l2859 19DE  
                    l2867 1A08                      l4299 38A2                      l4483 2F08  
                    l3595 2B8E                      l3587 2AFC                      l3579 3978  
                    l3931 13F8                      l3923 13D4                      l3915 1396  
                    l3907 135A                      l3851 117E                      l3843 1158  
                    l3835 1120                      l3827 10DE                      l3819 1036  
                    l3771 0D0A                      l3763 0CD8                      l3755 0CA8  
                    l3747 0C3C                      l3739 0C12                      l3683 0976  
                    l3675 0912                      l3691 09C0                      l3667 08DE  
                    l3659 08AA                      l4395 2176                      l4387 2124  
                    l4379 2088                      l2981 1C8A                      l2973 1C28  
                    l2965 1C0A                      l2957 1BD2                      l2949 1B8C  
                    l2893 1A92                      l2885 1A68                      l2877 1A38  
                    l2869 1A18                      l3597 2BCA                      l3589 2B10  
                    l3941 1452                      l3925 13DC                      l3917 13B0  
                    l3909 1376                      l3861 11B2                      l3853 1182  
                    l3845 115C                      l3829 10EE                      l3837 1128  
                    l3781 0D54                      l3773 0D22                      l3765 0CE6  
                    l3749 0C4E                      l3757 0CAC                      l3693 09E6  
                    l3685 098E                      l3669 08E2                      l4397 2182  
                    l4389 215C                      l2983 1C9A                      l2967 1C0E  
                    l2959 1BE2                      l2975 1C2E                      l2895 1AA4  
                    l2887 1A78                      l2879 1A46                      l3951 2E4C  
                    l3599 2BFE                      l3943 1462                      l3935 142C  
                    l3927 13EC                      l3919 13B6                      l3871 1250  
                    l3863 11B6                      l3855 1188                      l3847 1162  
                    l3839 113A                      l3783 0D68                      l3791 0E5E  
                    l3775 0D34                      l3767 0CEA                      l3759 0CB4  
                    l3687 0998                      l3679 0948                      l4399 2184  
                    l2993 1CF4                      l2977 1C54                      l2985 1CAA  
                    l2969 1C1C                      l2897 1AB2                      l2889 1A7A  
                    l3961 2EBA                      l3953 2E60                      l3945 1468  
                    l3937 143E                      l3929 13F2                      l3881 12AE  
                    l3849 116E                      l3857 118E                      l3865 11BC  
                    l3873 1254                      l3793 0E7C                      l3785 0DCC  
                    l3769 0CFC                      l3777 0D3C                      l3697 0A1C  
                    l2995 1CFE                      l2987 1CD0                      l2979 1C88  
                    l2899 1AB6                      l3971 2EE2                      l3963 2EBE  
                    l3955 2E64                      l3939 144A                      l3891 12EC  
                    l3883 12BE                      l3875 1272                      l3867 1214  
                    l3859 11A0                      l3795 0EB0                      l3787 0E24  
                    l3779 0D44                      l3699 0A2E                      l2997 1D0C  
                    l2989 1CE0                      l3973 2EEA                      l3957 2E68  
                    l3893 12FC                      l3885 12C2                      l3877 128E  
                    l3869 1248                      l3797 0EE2                      l3789 0E58  
                    l2999 1D0E                      l3983 2F92                      l3975 2F1E  
                    l3967 2EC4                      l3959 2E84                      l3895 1304  
                    l3887 12D2                      l3879 12A0                      l3799 0EF8  
                    l3985 2FA4                      l3969 2EDA                      l3897 1312  
                    l3889 12E4                      l3993 33E4                      l3987 2FB6  
                    l3979 2F54                      l3899 131A                      l3995 340E  
                    l3999 341A                      STR_1 0801                      STR_2 080F  
                    STR_3 0817                      STR_4 080F                      STR_5 0817  
                    STR_6 080F                      STR_7 0817                      STR_8 081D  
                    STR_9 0825                      u3000 1E10                      u3001 1E0C  
                    u3010 1E30                      u3011 1E2C                      u3020 1E42  
                    u3100 2728                      u3021 1E3E                      u3101 2724  
                    u3030 1E5E                      u3110 276C                      _LATB 000F8A  
                    u3031 1E5A                      u3111 2768                      u3200 290A  
                    u3120 277E                      u4000 2BCA                      u3040 3CE4  
                    u3201 2906                      u3121 277A                      u4001 2BC6  
                    u3041 3CE0                      u3210 2928                      u3130 278E  
                    u4010 2C1E                      u3050 3DF6                      u3211 2924  
                    u3131 278A                      u3051 3DF2                      u3300 2A72  
                    u3220 2948                      u3140 27CE                      u4020 2C3A  
                    u3060 3D56                      u4100 085A                      u3301 2A6E  
                    u3221 2944                      u3141 27CA                      u4021 2C36  
                    u3061 3D50                      u4101 0856                      u3230 295A  
                    u3150 280E                      u3310 22DC                      u4030 2C76  
                    u3070 3D58                      u4110 08AA                      u3231 2956  
                    u3151 280A                      u3311 22D8                      u4031 2C72  
                    u4015 2C14                      u4111 08A6                      u3240 2988  
                    u3160 2884                      u3080 2706                      u3400 257A  
                    u3320 22EE                      u5000 2DD2                      u4040 3DC6  
                    u4200 0A18                      u4120 08B8                      u3241 2984  
                    u3161 2880                      u3081 2702                      u3401 2576  
                    u3321 22EA                      u5001 2DCE                      u4041 3DC0  
                    u4121 08B4                      u3250 299E                      u3170 28A6  
                    u3090 2718                      u3410 259A                      u3330 22FE  
                    u5010 2DE2                      u4050 3DC8                      u2610 34CC  
                    u4210 0A2E                      u4130 08CA                      u3251 299A  
                    u3171 28A2                      u3091 2714                      u3411 2596  
                    u3331 22FA                      u5011 2DDE                      u2611 34C8  
                    u4211 0A2A                      u4131 08C6                      u5100 3C16  
                    u2700 1A58                      u3260 29B2                      u3180 28D0  
                    u3420 25AC                      u3340 233E                      u5020 2DF0  
                    u4060 3AB4                      u3500 365C                      u2620 34DE  
                    u4300 0C6A                      u4220 0AB2                      u4140 0912  
                    u5101 3C12                      u2701 1A54                      u3261 29AE  
                    u3181 28CC                      u3421 25A8                      u3341 233A  
                    u5021 2DEC                      u4061 3AB0                      u3501 3658  
                    u2621 34DA                      u4301 0C66                      u4221 0AAE  
                    u4141 090E                      u2710 1A68                      u3270 29CC  
                    u3190 28F4                      u3430 25DA                      u3350 2350  
                    u5030 2E2A                      u4070 3AE2                      u3510 3676  
                    u2630 3506                      u4310 0CA0                      u4230 0B46  
                    u4150 0942                      u5110 1F24                      u2711 1A64  
                    u3271 29C8                      u3191 28F0                      u3431 25D6  
                    u3351 234C                      u5031 2E26                      u4071 3ADE  
                    u3511 3672                      u2631 3502                      u4311 0C9C  
                    u4231 0B42                      u4151 093C                      u5111 1F20  
                    u4080 3BB4                      u2800 1BAE                      u2720 1AA4  
                    u3280 2A14                      u3440 25F0                      u3360 2360  
                    u5040 2E38                      u3520 369C                      u3600 3788  
                    u2640 353C                      u4400 0F2A                      u4320 0CC6  
                    u4240 0BB8                      u4160 0944                      u5200 221E  
                    u5120 1F56                      u4081 3BB0                      u2801 1BAA  
                    u2721 1AA0                      u3281 2A10                      u3441 25EC  
                    u3361 235C                      u5041 2E34                      u3521 3698  
                    u3601 3784                      u2641 3538                      u4401 0F26  
                    u4321 0CC2                      u4241 0BB4                      u5201 221A  
                    u5121 1F52                      u4090 3BCE                      u2810 1BBE  
                    u2730 1AB2                      u2650 19CC                      u3290 2A44  
                    u3450 2604                      u3370 2396                      u3530 36BA  
                    u3610 37AC                      u4410 0F3A                      u4330 0CD8  
                    u4250 0BDE                      u4170 095A                      u5050 3926  
                    u5130 1F88                      u4091 3BCA                      u2811 1BBA  
                    u2731 1AAE                      u2651 19C8                      u3291 2A40  
                    u3451 2600                      u3371 2392                      u3531 36B6  
                    u3611 37A8                      u4411 0F36                      u4331 0CD4  
                    u4251 0BDA                      u4171 0956                      u5051 3922  
                    u5131 1F84                      u5060 3CF8                      u2900 1D1C  
                    u2820 1BF0                      u2740 1B20                      u2660 19DE  
                    u3460 261E                      u3380 23A6                      u3540 36D6  
                    u3620 37EC                      u3700 3D74                      u4500 1148  
                    u4420 0FD4                      u4340 0CE6                      u4260 0BF0  
                    u4180 09E6                      u5140 2056                      u5061 3CF4  
                    u2901 1D18                      u2821 1BEC                      u2741 1B1C  
                    u2661 19DA                      u3461 261A                      u3381 23A2  
                    u3541 36D2                      u3621 37E8                      u3701 3D70  
                    u4501 1144                      u4421 0FD0                      u4341 0CE2  
                    u4261 0BEC                      u4181 09E2                      u5141 2052  
                    u2910 1D38                      u2830 1BFE                      u2750 1B38  
                    u2670 19EE                      u3470 2666                      u3390 2520  
                    u3710 2FF4                      u5070 332C                      u3550 36FC  
                    u3630 382A                      u4510 11A0                      u4430 1022  
                    u4350 0CFC                      u4270 0C12                      u4190 0A16  
                    u5150 2088                      u2911 1D34                      u2831 1BFA  
                    u2751 1B32                      u2671 19EA                      u3471 2662  
                    u3711 2FF0                      u5071 3328                      u3551 36F8  
                    u3631 3826                      u4511 119C                      u4431 101E  
                    u4351 0CF8                      u4271 0C0E                      u4191 0A10  
                    u5151 2084                      u2920 1D48                      u2840 1C1C  
                    u2760 1B3A                      u2680 1A30                      u3480 2694  
                    u3720 3028                      u5080 38B2                      u3560 3720  
                    u3640 385E                      u3800 360C                      u4600 13C8  
                    u4520 1272                      u4440 104A                      u4360 0D0A  
                    u4280 0C38                      u5160 20BA                      u2921 1D44  
                    u2841 1C18                      u2681 1A2C                      u3481 2690  
                    u5081 38AE                      u3561 371C                      u3641 385A  
                    u3801 3608                      u4601 13C4                      u4521 126E  
                    u4441 1046                      u4361 0D06                      u4281 0C34  
                    u5161 20B6                      u5090 3BE2                      u2930 1D5A  
                    u2850 1C54                      u2770 1B62                      u2690 1A46  
                    u3490 26CE                      u3730 3056                      u3570 373A  
                    u3650 3112                      u3810 361C                      u4610 1426  
                    u4530 128E                      u4450 10EE                      u4370 0D34  
                    u4290 0C4E                      u5170 20EC                      u5091 3BDE  
                    u2931 1D56                      u2851 1C50                      u2771 1B5E  
                    u2691 1A42                      u3491 26CA                      u3395 2516  
                    u3731 3052                      u3571 3736                      u3651 310E  
                    u3811 3618                      u4611 1420                      u4531 128A  
                    u4451 10EA                      u4371 0D30                      u4291 0C4A  
                    u5171 20E8                      u2940 1D70                      u2860 1C9A  
                    u2780 1B80                      u3740 306A                      u4700 2FB6  
                    u3580 3754                      u3660 3150                      u3820 3228  
                    u3900 3A48                      u4620 1428                      u4540 12A0  
                    u4460 1100                      u4380 0E7C                      u5180 21BA  
                    u2941 1D6C                      u2861 1C96                      u2781 1B7C  
                    u3741 3066                      u3725 301E                      u4701 2FB2  
                    u3581 3750                      u3661 314C                      u3901 3A44  
                    u4541 129C                      u4461 10FC                      u4381 0E78  
                    u5181 21B6                      u2950 1D86                      u2870 1CD0  
                    u2790 1BA0                      u3750 3092                      u3590 3772  
                    u3670 316E                      u3830 3246                      u3910 3960  
                    u4630 143E                      u4550 12AE                      u4470 1112  
                    u4390 0EE2                      u4710 340E                      u5190 21EC  
                    u2951 1D82                      u2871 1CCC                      u2791 1B9C  
                    u3751 308E                      u3591 376E                      u3671 316A  
                    u3831 3242                      u3911 395A                      u4631 143A  
                    u4551 12AA                      u4471 110E                      u4391 0EDE  
                    u4711 340A                      u5191 21E8                      u2960 1D9A  
                    u2880 1CE0                      u3760 30B2                      u4640 2E84  
                    u3680 318E                      u3840 326E                      u3920 3962  
                    u4560 12E4                      u4480 1120                      u4720 3440  
                    u4800 15EA                      u2961 1D96                      u2881 1CDC  
                    u3761 30AE                      u4641 2E80                      u3681 318A  
                    u3841 326A                      u3825 321E                      u4561 12E0  
                    u4481 111C                      u4721 343C                      u4801 15E6  
                    u2970 1DB4                      u2890 1D0C                      u3770 30C2  
                    u4650 2EBA                      u3690 31DE                      u3850 3298  
                    u3930 3978                      u4570 1312                      u4490 113A  
                    u4730 345C                      u4810 1694                      u2971 1DB0  
                    u2891 1D08                      u3771 30BE                      u4651 2EB6  
                    u3691 31DA                      u3851 3294                      u3931 3974  
                    u4571 130E                      u4491 1136                      u4731 3458  
                    u4811 168E                      u2980 1DEE                      u4660 2ED6  
                    u3940 2ACE                      u3780 3594                      u4580 1396  
                    u4740 346E                      u4900 1892                      u4820 1696  
                    u2981 1DEA                      u4661 2ED2                      u3781 3590  
                    u4581 1392                      u4741 346A                      u4901 188E  
                    u2990 1E00                      u4670 2F8C                      u3870 32D2  
                    u3950 2AFC                      u3790 35B6                      u4590 13B0  
                    u4750 3496                      u4910 192E                      u4830 16AC  
                    u2991 1DFC                      u4671 2F86                      u3871 32CC  
                    u3951 2AF8                      u3791 35B2                      u4591 13AC  
                    u4751 3492                      u4911 192A                      u4831 16A8  
                    u4920 39B4                      u4680 2F8E                      u3880 32D4  
                    u3960 2B1E                      u4840 16DE                      u4760 14AE  
                    u3865 32AA                      u3961 2B1A                      u3945 2AC4  
                    u4841 16DA                      u4761 14AA                      u4930 39DC  
                    u4690 2FA4                      u3890 3A36                      u4850 1720  
                    u4770 157C                      u4691 2FA0                      u4851 171C  
                    u4771 1578                      u4940 39EC                      u3980 2B8A  
                    u4860 1764                      u4780 158A                      u4941 39E8  
                    u3981 2B86                      u4861 1760                      u4781 1586  
                    u4950 2CAA                      u3990 2BAE                      u4870 1812  
                    u4790 15B0                      u4927 39AA                      u4951 2CA6  
                    u3975 2B32                      u4871 180E                      u4791 15AC  
                    u4960 2CB8                      u3976 2B3C                      u4880 187A  
                    u4937 39D2                      u4961 2CB4                      u3977 2B4C  
                    u3897 3A2C                      u4881 1874                      u4970 2D14  
                    u4890 187C                      u4971 2D10                      u3995 2BA4  
                    u4980 2D6A                      u4981 2D66                      u4990 2DB4  
                    u4991 2DB0                      _Sluz 0150                      _lm35 00FC  
                    _dbuf 0100                      _atoi 2E4C                      _main 1E72  
      __size_of_LCD_Clear 0014                      _prec 00F6                      _temp 00E6  
                    _nout 00F2                      pad@i 0018                      pad@p 0015  
                    fsr1h 000FE2                      fsr2h 000FDA                      indf1 000FE7  
                    indf2 000FDF                      fsr1l 000FE1                      pad@w 001A  
                    fsr2l 000FD9             ___fpclassifyf 31E8                      prodh 000FF4  
                    prodl 000FF3                      start 0000           __end_of_MSdelay 3BD0  
         ___fldiv@new_exp 003F             _LCD_String_xy 3CE6              _tolower$1147 000D  
            ___param_bank 000000           __end_of_ReadADC 33E4           __end_of_ReadLUZ 38CE  
                   ??_pad 0017          __end_of_LCD_Char 3B3A          __end_of_LCD_Init 3E34  
           ReadADC@result 0066             ___fltol@sign1 0060                     ?_atoi 0008  
         __end_of___fladd 1E72                     ?_main 0001           __end_of___fldiv 2A86  
         __end_of___awdiv 370E           __end_of___flneg 3D96                     STR_12 0821  
                   STR_13 0829                     STR_16 082D                     STR_18 082D  
         __end_of___awmod 37BE           __end_of___flmul 26EC           __end_of___flsub 3C5E  
         __end_of___fltol 30E4           ___awdiv@divisor 0003                     _LATB2 007C52  
                   _LATB3 007C53                     _LATE0 007C68                     _LATE1 007C69  
                   _LATE2 007C6A           ___awdiv@counter 0005              vfpfcnvrt@fmt 00A8  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISD 000F95  
                   _TRISE 000F96                     _Stemp 0164                     _flags 00F8  
                   _fputc 34BA                     _fputs 3CA2           __end_of_isdigit 3DCE  
                   atoi@n 0015                     pad@fp 0011                     atoi@s 0008  
                   _width 00F4                     _putch 3E86           __end_of_isspace 3AEE  
         __end_of_isupper 3D5E                     tablat 000FF5                     status 000FD8  
     __size_of_LCD_String 005E           __end_of_sprintf 3A9C            ?___fpclassifyf 0001  
         __end_of_tolower 3990           __end_of_strncmp 34BA            ?_LCD_String_xy 000B  
 __end_of_LCD_Custom_Char 3C18           __initialization 3C5E              __end_of_atoi 2FDC  
            __end_of_main 22C2                    ??_atoi 000A                    ??_main 005F  
       __end_of_LCD_Clear 3E86             __activetblptr 000002                    ?_fputc 0001  
                  ?_fputs 000A                    _ADRESH 000FC4                    _ADRESL 000FC3  
        ___awdiv@dividend 0001                    ?_putch 0001          LCD_String_xy@msg 000C  
        LCD_String_xy@pos 000B          LCD_String_xy@row 000E                 ??_MSdelay 0003  
                  _OSCCON 000FD3             vfpfcnvrt@done 00B0          __end_of___xxtofl 2E4C  
               ??_ReadADC 0064                 ??_ReadLUZ 0003              vfprintf@cfmt 00C4  
                  ___flge 30E4                    ___fleq 37BE                 ??___fladd 004F  
                  ___wmul 3E34                 ??___fldiv 0036                 ??___awdiv 0005  
               ??___flneg 0005                 ??___awmod 0005                 ??___flmul 001D  
               ??___flsub 005F                 ??___fltol 005B                    _efgtoa 0832  
                  _floorf 2A86                    clear_0 3C84                    clear_1 3C90  
        ___awdiv@quotient 0007           ___awmod@divisor 0003                    isa$std 000001  
                  _tempar 00EE           ___awmod@counter 0005                    pad@buf 0013  
    __size_of_LCD_Command 004C                    _strcpy 39EE                    _strlen 3DCE  
                  fputc@c 0001                    fputs@c 000E          LCD_Custom_Char@i 000C  
                  fputs@i 000F                    fputs@s 000A                 ??_isdigit 0003  
         ___fpclassifyf@e 0009           ___fpclassifyf@u 000B           ___fpclassifyf@x 0001  
            __mediumconst 0000                 ??_isspace 0003                    tblptrh 000FF7  
               ??_isupper 0003                    tblptrl 000FF6                    tblptru 000FF8  
                  putch@c 0001          __end_of_vfprintf 3930                 ??_sprintf 005F  
               ??_tolower 0009                 ??_strncmp 0007                ___flge@ff1 002E  
              ___flge@ff2 0032           ??___fpclassifyf 0005              ___xxtofl@arg 0011  
            ___xxtofl@exp 0010              ___xxtofl@val 0007                ___fleq@ff1 0001  
              ___fleq@ff2 0005                 ?_LCD_Char 0001                __accesstop 0060  
 __end_of__initialization 3C98                 ?_LCD_Init 0001           ??_LCD_String_xy 000E  
              ___flneg@f1 0001             ___rparam_used 000001                ___fltol@f1 0057  
        ?_LCD_Custom_Char 0009            __pcstackCOMRAM 0001              __pidataBANK1 3E5A  
           __end_of_fputc 3584             __end_of_fputs 3CE6             __end_of_putch 3E88  
            ??_LCD_String 000B             ReadLUZ@result 0005                   ??_fputc 0005  
                 ??_fputs 000E                   ??_putch 0001                __pbssBANK0 00DA  
              __pbssBANK1 0100                ??_LCD_Char 0007                _character1 0188  
              _character2 0180                _character3 0178                ??_LCD_Init 0009  
      __end_of_LCD_String 39EE                _efgtoa$994 0072                _efgtoa$988 006E  
              _efgtoa$989 0070                _efgtoa$998 0074                _efgtoa$999 0076  
          _counter_digito 005F                   ?___flge 002E                   ?___fleq 0001  
                 ?___wmul 0001                   ?_efgtoa 0062                   ?_floorf 0047  
                 ?_strcpy 0001                   ?_strlen 0001                 ?___xxtofl 0007  
      __size_of_vfpfcnvrt 0528                   _MSdelay 3B86                   _ReadADC 32E6  
                 _ReadLUZ 3868             LCD_String@msg 0009                   __Hparam 0000  
                 __Lparam 0000           __size_of___flge 0104           __size_of___fleq 00AA  
                 ___fladd 19B2                   ___fldiv 26EC                   ___awdiv 364A  
                 ___flneg 3D5E                   ___awmod 370E                   ___flmul 22C2  
                 ___flsub 3C18                   ___fltol 2FDC           __size_of___wmul 0026  
               ?_vfprintf 00BE              __psmallconst 0800           __size_of_efgtoa 0C58  
         __size_of_floorf 0212                   __pcinit 3C5E                   __ramtop 0800  
                 __ptext0 1E72                   __ptext1 3A4A                   __ptext2 38CE  
                 __ptext3 148A                   __ptext4 33E4                   __ptext5 0832  
                 __ptext6 3930                   __ptext7 3D26                   __ptext8 39EE  
                 __ptext9 3584           __size_of_strcpy 005C           __size_of_strlen 0036  
            __size_of_pad 00C6                   _isdigit 3D96                ??___xxtofl 000B  
        ___awmod@dividend 0001                   _isspace 3A9C                   _isupper 3D26  
                 efgtoa@c 0068                   efgtoa@d 0086                   efgtoa@e 009E  
                 efgtoa@f 0064                   efgtoa@g 009A                   efgtoa@h 0090  
                 efgtoa@i 0098                   efgtoa@l 0094                   efgtoa@m 0080  
                 efgtoa@n 00A0                   efgtoa@p 008A                   efgtoa@t 007A  
                 efgtoa@u 00A2                   efgtoa@w 008C                 _LCD_Clear 3E72  
                 atoi@neg 000E                   _sprintf 3A4A                   _tolower 3930  
                 _strncmp 33E4      end_of_initialization 3C98                   floorf@e 0055  
                 floorf@m 0051                   floorf@u 0057                   floorf@x 0047  
                 fputc@fp 0003            LCD_Command@cmd 0008             __Lmediumconst 0000  
                 fputs@fp 000C         __end_of_vfpfcnvrt 19B2                efgtoa@mode 008F  
              efgtoa@sign 0088                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
              ??_vfprintf 005F                   strcpy@d 0009                   strlen@a 0003  
                 strcpy@s 0007                   strlen@s 0001               ___fladd@grs 0056  
           ___xxtofl@sign 000F                ?_LCD_Clear 0001               ___fldiv@grs 0041  
             ___fldiv@rem 003A               ___flmul@grs 0022         __size_of_LCD_Char 004C  
       __size_of_LCD_Init 0030             ??_LCD_Command 0007            __end_of___flge 31E8  
          __end_of___fleq 3868               vfpfcnvrt@ap 00AA               vfpfcnvrt@ct 00BA  
             vfpfcnvrt@fp 00A6            __end_of___wmul 3E5A            __end_of_efgtoa 148A  
          __end_of_floorf 2C98                floorf@F527 00DA            __end_of_strcpy 3A4A  
          __end_of_strlen 3E04       start_initialization 3C5E               __end_of_pad 364A  
   __end_of___fpclassifyf 32E6     __end_of_LCD_String_xy 3D26               vfprintf@fmt 00C0  
                ??___flge 0036                  ??___fleq 0009                  ??___wmul 0005  
                ??_efgtoa 0069               __pdataBANK1 0178                  ??_floorf 004B  
                ??_strcpy 0005                  ??_strlen 0003  __size_of_LCD_Custom_Char 0048  
               ___fladd@a 004B                 ___fladd@b 0047                 ___fldiv@a 0032  
               ___fldiv@b 002E       __end_of_LCD_Command 3B86                 ___flmul@a 0019  
               ___flmul@b 0015               __pbssCOMRAM 005F                 ___flsub@a 005B  
               ___flsub@b 0057             __pcstackBANK0 0060               ??_LCD_Clear 0009  
       __size_of___xxtofl 01B4                  ?_MSdelay 0001                  ?_ReadADC 0062  
               _atoi$1052 0010                 _atoi$1053 0014                 _atoi$1054 0012  
                ?_ReadLUZ 0001               _efgtoa$1000 0078                 _main$1340 00D6  
                ?___fladd 0047                  ?___fldiv 002E                  ?___awdiv 0001  
                ?___flneg 0001                  ?___awmod 0001                  ?___flmul 0015  
                ?___flsub 0057                  ?___fltol 0057         __size_of_vfprintf 0062  
             __smallconst 0800                  ?_isdigit 0001                  ?_isspace 0001  
                ?_isupper 0001     LCD_String_xy@location 000F                  ?_sprintf 00C6  
                ?_tolower 0007            __size_of_fputc 00CA            __size_of_fputs 0044  
                ?_strncmp 0001            __size_of_putch 0002                  MSdelay@i 0003  
                MSdelay@j 0005                  _LCD_Char 3AEE                  _LCD_Init 3E04  
          ___wmul@product 0005                 _value_adc 00FA               _LCD_Command 3B3A  
               _vfpfcnvrt 148A                _ADCON0bits 000FC2                _ADCON1bits 000FC1  
              _ADCON2bits 000FC0         ___wmul@multiplier 0001              _isspace$1083 0007  
       ??_LCD_Custom_Char 000B                vfpfcnvrt@c 00BD                vfpfcnvrt@f 00B6  
               copy_data0 3C72          __size_of_MSdelay 004A          __size_of_ReadADC 00FE  
        __size_of_ReadLUZ 0066                  __Hrparam 0000                vfprintf@ap 00C2  
                __Lrparam 0000                vfprintf@fp 00BE          __size_of___fladd 04C0  
        __size_of___fldiv 039A          __size_of___awdiv 00C4          __size_of___flneg 0038  
        __size_of___awmod 00B0          __size_of___flmul 042A          __size_of___flsub 0046  
        __size_of___fltol 0108                ?_vfpfcnvrt 00A6        ___fpclassifyf@F465 00DE  
              sprintf@fmt 00C8                  ___xxtofl 2C98          __size_of_isdigit 0038  
        __size_of_isspace 0052                  __ptext10 3DCE                  __ptext11 3CA2  
                __ptext20 370E                  __ptext12 34BA                  __ptext21 364A  
                __ptext13 3E86                  __ptext30 22C2                  __ptext22 2E4C  
                __ptext14 2A86                  __ptext31 26EC                  __ptext23 3A9C  
                __ptext15 31E8                  __ptext40 3B86                  __ptext32 19B2  
                __ptext24 3D96                  __ptext16 3C18                  __ptext33 3CE6  
                __ptext25 3E34                  __ptext17 3D5E                  __ptext34 3990  
                __ptext26 3868                  __ptext18 30E4                  __ptext35 3E04  
                __ptext27 32E6                  __ptext19 37BE                  __ptext36 3BD0  
                __ptext28 2C98                  __ptext37 3AEE                  __ptext29 2FDC  
                __ptext38 3E72                  __ptext39 3B3A          __size_of_isupper 0038  
        __size_of_sprintf 0052          __size_of_tolower 0060                strcpy@dest 0001  
        __size_of_strncmp 00D6             __size_of_atoi 0190             __size_of_main 0450  
              MSdelay@val 0001                  efgtoa@fp 0062                  efgtoa@ne 007E  
                efgtoa@pp 007C                  efgtoa@ou 0082                  isa$xinst 000000  
                _vfprintf 38CE                _LCD_String 3990            _vfpfcnvrt$1014 00B2  
          _vfpfcnvrt$1018 00B4                  isdigit@c 0001        LCD_Custom_Char@loc 000B  
      LCD_Custom_Char@msg 0009                 sprintf@ap 00CE                  isspace@c 0001  
               strcpy@src 0003                  isupper@c 0001                 strncmp@_l 0001  
               strncmp@_r 0003                _OSCCONbits 000FD3               efgtoa@nmode 008E  
             ??_vfpfcnvrt 00AC               _temperatura 00E2                  sprintf@f 00D0  
                tolower@c 0007                  sprintf@s 00C6    __size_of___fpclassifyf 00FE  
                strncmp@l 0008                  strncmp@n 0005                  strncmp@r 000A  
  __size_of_LCD_String_xy 0040             ___fladd@signs 0053              ___fladd@aexp 0054  
            ___fladd@bexp 0055  
